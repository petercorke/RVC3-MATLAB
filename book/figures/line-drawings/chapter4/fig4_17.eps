%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig4_diff_drive.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 7/15/2022
%%BoundingBox: 0 0 373 443
%%HiResBoundingBox: 0 0 372.7945 442.2120
%%CropBox: 0 0 372.7945 442.2120
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-07-15T15:35:19-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-07-15T15:35:19-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-07-15T15:35:19-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUt9H6lrHqwQSPF&#xA;qrf6W6mqxzQxfBIy8dhJHHwZuXVUFNycVRl5dx2sPqurMC8cYVaVLSusa9SB9phiqyXU9NhT1Jbu&#xA;GOPmsfN5FUc3FVWpPUjoMVQ9p5j0C79AW+o28j3MazwRCVBI0bGgYITypXbp12xV03mTy/BJJHPq&#xA;VtC0SRyyepKiAJKSI25MQKNTbFURLqemxRPNLdwxwxlRJI0ihVLNwUEk0FW2Hviq6PULCVS0dzE6&#xA;qSrMrqQCCQQaHsUYfQcVWpqmmvFDMl3C0NySLeRZEKyFQSQhBo1Ap6eGKqMmv6JHZG+a/gNmFD+u&#xA;sisnFioDAqTt8a7+4xVemt6M8vopf2zShlQxiVC3J+PEUrWreotPmPHFUZirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdiqF1a+/R+lXt/w9X6pBLP6dePL0kL8a0NK060xVgF1+bWqJ5UvvNVtolvJo&#xA;9k0cB9W9lS4a4aWKFh6MVpP+7V5j8QJZgtQnxDFUp/Nax86/mV+SFpP5Riay1LVktb+TTvrCK8ts&#xA;6lzAJgyRmpZW3IBAoadMVUfyV8reZfL35STaT+YklzHNBqIlt4BJJLPBEHge3iikg5sxNwOS+kx3&#xA;bj12Cqc2en+R5TcXsH1mz0uwnhEOowzXQee5nUEERiPq3r+kGVuX7Oy0qqoyx/lcGuHZr54rKGKJ&#xA;343KRLH6qenGrFUANVQ8q/ZoeXXFV31L8u9Qh+GO7g02WOUFGN3Gzei6QxpbxBWLqfrPFVU9KDid&#xA;6Kpnp+iflzr11O+m3TSXck/1y5ZHcc5WllkUskqlGZTz4/DyRaEU+E4qmMP5ZeWYlXgbn1BGsTSe&#xA;sRyVEeJS0YAiJ9KVkrw6YqibryHol3p9rYXL3M0VosqRvJMzScZiGYFzvQFV4gUoBTpUYqoxflr5&#xA;Xj5MI5fXdVRphIyHiiIirxj4RhVMSsFC8eQ6Yqi9M8k6Hp+qHU4keS65ySI0pVuLTAB2HwgliFpy&#xA;Yk02rSgxVPsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWTwQzwSQTIJIZVKSxsKqysKMCPAjF&#xA;UmHkbyeLo3Q0e1E7enyYRgAmHj6bcfs8l9NKNSvwjwxVM9O02w020WzsLdLW1RnZIIgFRTIxdqKN&#xA;hVmJxVAa5plnLIt1PZtfxzCK0u7QAOjxmZWSV4yDz9B6sN9lLHc0GKouHR7CJZk9MPHNOt16bgFU&#xA;kQJw4CgpxMYYe+KqB8q+WTEsTaTaNGhBVWgjNCCGFKjxUfcMVal8qeWJQBJpNm/EAKTBHUAcab0r&#xA;+wv3YqiodI0mCZJ4LKCKaPn6cqRIrL6pBkowFRzIHLxxVF4q7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXEBgQRUHYg9CMVS/SI2tFfSxFKtvYrGlpPK3qerCU+H4zvyQgoQx&#xA;LUAYn4sVTDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql+&#xA;rwELHqUUUk93pyyyw28LBGmDRlWhJYUIbZgNviVd9sVR6OHRXWoDAEBgVNDvurUI+RxVvFXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqltlGLHUJbGOKY29z6t7&#xA;HOx5xJI8gM0VaVSrSc1DE1q1NlpiqZYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FUNqFil7CsbO8TRyRzRyREKwaJw43IbZqcW23UkYq3p9293ZQ3DwSWski1k&#xA;t5RR42GzKexoe42PUbYqiMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdiqXOv1LVRIkdxKmpuEm4kvFDJFGxWQrSqCRVCMa8ahdqkkqpjirsVUrq5gtbWa6uG4QQ&#xA;I0srnoqICzH6AMBIAss8eMzkIx3MjQ+LrO6ju7SC6iDCO4jWVA6lWCuoYclO4O/TGJsWuXGYSMTz&#xA;ia+SrhYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRvrSK8s57SUssdxG&#xA;0bNGxVwGFKqw3Vh1B7HFVPTrmWaKRJopY5beRoGaYAGQJ9mVSoVGEikN8OwNV2IIxVFYqwzWpNUm&#xA;8x3mjXMzTaFNaJe3IdYlijgAnint5HVOfCU+mV/a2bcgFcxMhJmYn6av77Dv9JHHHTxyxFZhMxHO&#xA;zL0GMgLq4+q+n09TaP8AJHnFvM9nPcGxNn6BiB/eeopMsSzcKlYyHQOA4pSvQnLNPn8QXVON2t2X&#xA;+TmI8XFd9K5ExvmdjW33Mky91LsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirCdW8z3Gl+cHimtmkKxQ1WByVexmaQNcSIQaNayxbkGgSQ9TTMc5iJ8Px+G7t8fZ0J6cZQTz&#xA;MeX8dxofGMj5+kpv5P8AOFr5os5rq2tpbdITGp9UxsCZIllADRs45KHAdeqnY4cGcZBYDX2p2XLR&#xA;zEZSErvlfQkdQOdbHqN0fNoGkzWd9ZvB+41Ln9dCu6NJ6teYLqwcA1PQ7ZYccSCO9xo63LGcZg74&#xA;64dhtXLbkw/R/MNjoPnvUfKz2bJFeSQzWd4hlnkYtBGnGcu0jhV4hEb7IA3p1zBx6gQzHGRzqj8O&#xA;rvdVop6nRQ1IlvASEo7RH1SPpqhvzI5k8noGbF5h2KuxV2KqAdpbj4SRFCSGI/acilPkv6/lk6oe&#xA;ZQr5BKXax5i0LRhG2rX0NisqzPG07hAVt4mnmNT/ACRIzt7DFUdHPBIzrHIrtGaSKpBKnwIHTFV+&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpRdeWbW8h1CO8uJpn1GN7eSeqJJHbOzH0IiirxUc&#xA;yK7se5NBSo4gbvr9zn49fLGYGAiBjIlW5Bl/ONnnt7h0HNj3lXUfLXl/zBe+Tg8sWoc4poLi6cO1&#xA;4rQRqtGAUBo0jEfGm4Wu5JzHx5oRyHHylz9+zn6zS6jPpoan6sYBjQ/gqR59Td3fn7mcZmuhSXzD&#xA;or3ELahpcMC+YLfjJZ3UiLVmjDD0ncivF0d09uVRvmPmxWOKIHGOTsNDqxE+HkMvAltIA9/UDvBA&#xA;PnVJhpep2up2EV7auHhlqKiuzKSrr8QU1VlI3GW48gnGw4uo08sMzCQoj8D7EVk2l2KoO+v0hpCj&#xA;VnfsN+K92P8AD3ycR1PJBRMCxrEix/Ypsetfc++RJs2kMa8++ftO8oaVLdPC2oaisbTQ6TbsPrEk&#xA;Ue8soXciONQSzkcR3IwKgLjy5ceedH0XU9ctp/L92qTfWNKDpM31a8X05YZWKLwkkhHFiu6BmUGu&#xA;4VVPI/l7zPo+p6tPqVtp0aaxe3eo3l1azyzTs7ukdpFxe3t1Cx2yAM3I/ENhuTirM8VdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirDvOvlSBrlPNtlbfWNb0v0pRAfiWeCAszxBDUcyrko1K8lWm&#xA;YOq04vxQLnH7QPx86d72X2jIR/Kzlw4cli/5plVH3bbj+aZMp07ULTUbC3v7N/UtbqNZYXHdXFRt&#xA;2PtmZCYlESHIunz4ZYpmExUomiiMk1MfjP6F8weifRg0jVzW3AARhqJLPIDQfF6yDlUnqtO+Yw/d&#xA;zrbhl/uv2uzP+EYL9Ry4uf8AwvYD/Snb3HyT2WaOJau1PAdzmS6xI/0xOENpuZ4jwUk/FIv7Dk+4&#xA;HxHxByUY2glA32o6do9lLqGqXUdtCtDNcysEWp2VVr9yqNz7k4ylfuUBB2Gq+bPMP+j6Yr+XtINf&#xA;9yd3EDqEq1/49rSUFYQez3Clv+KujZFLJdB8s6Poccv1GJjc3JDXl9O7TXVwyigaaeQtI9O1TRei&#xA;gDbFU0xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVimi/wDOv+ZJ9Aaq6ZqhkvtG&#xA;Y04pITyurUU6ULeqgp0JHbMPF+7yGH8Mt4/pH6Xc6r/CdOM/+Ux1GfmP4Jf70+YHeyvMx0yU+ZLd&#xA;buxa1KLzNJLeZ15COeM8opAu26OA2V5cfFGvxfRyNLqDimJDlyPnE7EfEJJpWszXlmoumR9Wh/c3&#xA;0ETcgs6gFxWmy/ED9OOnkZx35j6vez12AYsnpvw5bwvrHp+pCapJqZt2u9FEM+oIOJuJ+f1f0yRy&#xA;4qnxScPtKqkciOPNa5dKV7Dk4YC3SfKdrHdx6rqdy+tawN4b64A9OHmKEWkC/u4FI2qvxsPtM3XI&#xA;pZZa2M3JZGPAA1A74qjnuIUbizgNiqoCCKg1HiMVUrm6t7aIS3EixRl0jDsaDnK4jQf7J2AGKpFB&#xA;+YHlO4uZoIL5ZPq0ckt1KAQkSRKGJYtxqGU1XjWo+Yqq1d+f/LkMbSw3SXUEIL3bRNVo09EzKQvV&#xA;ywHQe/cUxVNbLW9JvZVitblJZWEhVBWpEJRZDQ/ymVK/PFUdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVSfzXokmr6SY7aT0NStXW6024/33cxboT/ktujf5JOUajFxx2+obj3ud2fqhhy3LfHIcMh3&#xA;xPP9Y8wq+W9ci1vR4L9UMMrVjurZtmhnjPCWJgd6q4IyWDL4kQfxbDXaQ4MphdjmD3xO4PxDtRvB&#xA;OXs7NPrF2n2iPsRN29Rug/1euZAjW5cO2G31g+mammqXbRfUroiLWQ/wqG2W3kP8/Fj6ZqANwaCm&#xA;YmU8E+PYRO0v0H9DtNN+/wARwniOSO+P75x/33w82WwWk024HFP5jmQ6xUs4rbTpWtn6UMlsx68K&#xA;gMgHbgx29iB2xVdPfyPsnwL498VQuKrkkkQ1RivyxVT1fULJtLng1OAXVrcL6LW67NKX2VF3HxMe&#xA;m4p1qMVQGn+SfK8sPO8tEF5KebpFJLHHCSAAkAVlCBAqiqBalQ2x6Ko//AnlGhH6MiKkcQp5EAcO&#xA;FFFaKKHoO/xdd8VQuheShpXmO41YSxOjpPFCBGwmEc7xOEeRnaqx+httuWLHfFWQzXtvE/pcudwR&#xA;VYE+KQ+/HsP8o0HicFpo1apC0rIGkQRsf2AeVB2qaDfxwoX4q7FXYq7FXYq7FXYq7FXYqsjmR5JI&#xA;xUNEQGB71AII9t6fMHFVOe8hh2J5P/KP44qo2t80kxV6AN9inY4qqXmoWtpxWViZpK+lAgLyvTrx&#xA;Rasadz0HfJCJKLYdcQ3ul+aUubn1LLQvMcqxXEEUnxR3yrxhaR1/uxcKODemftqvx7nMUkYcljlP&#xA;7Je7z/U7iAOq0/D/AJTALHeYdRf9DmPIlm8FvBbxLDBGsUSbLGgCqO+wGZJNuoQt/pWnXkM8V7GJ&#xA;be4QxzRv9kqwofvGQlESBB5FsxZZY5CcTUomwUm0PWrxY5tKvHibUbFiOUdBztmZhby8N+PJFoR4&#xA;jKsEjvGX1D7uhczX4o2MuMHw59/SW3FG+tH7Cq3qSzIHU1njb1Iix25AEUPswJU/PL3XroJkmiWV&#xA;KgMOh2IPQqR2IOxGKr8Vad0jRpJGCIgLO7GgAG5JJxVLrGN724XU51KxKCNPhaoKowoZmU9HcdK7&#xA;qu2xLDFUyxVTvddtdItWur26S3tk6tKdif5VHUk9gN8hkyRgLkaDfp9NkzS4McTKXkkuoN5j866f&#xA;NZWkJ0XSW3N7cc1upipqvpwqV9JCRuZDWn7OYWUZM8aA4I955n4dPj8nc6aWDQzE5nxco/hjXCPf&#xA;L+I+Udv6ShZWEf5d6XpdjZQQXt5q9yLe9vJ5jC73DoxRz8D/ALpX+HrUV2BY4MWIaaIiNzI7nz/U&#xA;5GXMe1MmSczKEMUbjEC/SDuOY9RG/nXQBP8ATfO+m3/mKfy/HDN9dtfUWeZfSeENEsbNurmRR++A&#xA;Uui1II6jMqGoBnw9XWZ+yMmPTjOSOCVUNwd+Kulfw70TW3eyLL3VOxV2KuxV2KuxV2KuxVZLNFEt&#xA;XangO5xVJNV1Foj9cQ+lHEONwa0JirUkn/I+0PpA64QLVCvqEAQyJWRBuZBQR08fUYqn3HJ+GRz2&#xA;/HdzRagG1O7I4N9Uh/34orIf9XkBT5lRT3xuI5b+/wDUu7IdKtbSKEvCn75/7+Vjykdh3ZjucjKR&#xA;PNQHa5pFrrGk3Wm3VRDcoULrsyN1V1P8yMAw98py4xOJierk6TUywZI5I84n8D48ko8seY7i506S&#xA;zv8A4ta0yQ2modlZ0A4zL/kzIQ4+dO2V6bIZRqX1R2P6/i5PaemjjmJY/wC6yDij7usffE7PPvzg&#xA;/Oa78oXJsrK3guLyCwbVLo3TOsYhM62sEMSJQySzTPT7Q4KCx5dMyHXMou2uRZad5ihW2ku44Yjq&#xA;EsL8ons3Aeb0ZK0ZVP7xCeoG3XMfODEiY5jn/V6/rdloZiYOCZPDL6f+Gfw/P6fjfRP4ZopoUmiY&#xA;PFKoeN13DKwqCPmMvBBFh184GJMTsQoj/R7vj0huTVfBZQKkf7NRX5g9zhYpX568wXHl7yjqms2y&#xA;JJdWcBe1hkBZJJmIWKM8Sp+N2C1rtXFUNo15qevNdJfJCNPsbx4PUtyxS6MISuzVoiTc1YV3K06V&#xA;qqyV3REZ3YKiglmJoABuSScSUgEmgx5/M13qbtb+WrdbsA8X1Waq2SEGh4EfFOw8E2/yswzqTPbE&#xA;L/pfw/t+HzdvHs6GEcWplwf0B9Z9/wDM/wA7fyV9O8rW0N0uo6jM+qaso+G7nA4x+0EQ+CIfLfxO&#xA;Tx6YA8UjxT7z+gdGnUdpSlHw8YGLF/Nj1/rS5y+7yZbpy0hY+LfqGZLrVl3ouj3kjyXdjBcSSrGk&#xA;jyxo5ZYn9SNWLA1Cv8QHjkDjieYcjHq8uMARlKIF8iRzFH5jZAaP5Q07S9RfUI5p57pxcLzmKbC7&#xA;nFxN/dpHXlIB9qtAKCgyEMIib6/r3cnVdp5M2MYyIxj6eV/wx4Y8yeQ7ufMptcu9FhjNJZahW/lU&#xA;faf6O3vTMmA6nkHWlWUBVAFaAU3JJ+85ApdirsVdirB/za89Xfk/RdPu7Sa3gmvL+O2lmubW4vUi&#xA;tViknup/QtXilb0YIWfY02oaVqFUd5R81atqGmabb61Bb23me6tWvbmwhaT0xb+q0ccqtxlAEi8W&#xA;4lyVJpU9clEDqgshaPUSppNEpPT90xp/yUFfuyVw7j8/2LuksttcGRhcXMrtX41HFR9BUBgP9ljx&#xA;joB+Ps+xaQo+rs/+iQieVT/vRISyqf8AjI3Jj8l+mmA5JHa1oLbG0EU/oXDetJH8dqSKIqdOKJ0B&#xA;QmldzxI3yCU8t9OkejSfAvh3xVFtJbWq8VG/8o6n54qgp7uWXb7Kfyj+OKsT8xV0bVLfzLGD9WAW&#xA;01lBWht2b93PQd4Hbfb7JOYef93IZBy5S93f8PudzoP8IxS0x+r6sf8AW6x/zx/sgF/ma18nXdxC&#xA;mraRba3qfpsLS0a2hurj0pDRuPqCkcbEULOyp4nMx0yReZfy41HzfqmlXmtanLYaZYyFrjy9YzTC&#xA;C4iAJRZ3DxozcqVKxj4SVqdmxVkehj9GXcuhuIobVB6mjRo1CbYAB04klv3Tnr4EeGY2H0SMDy/h&#xA;937HZ6wDNAZxZlyyf1uh7vUPuTmeFZomiYkBujDqCNww9wdxmS6xhPnn8xPy70bTJtO87yoIp19K&#xA;5s5LWe4ilOxoAsciUbZlqcVYZpH/ADkf5Pvb+y8r+Q/Ll9qd2/7qytIo4bK1VR35cmMaKN2Pp0Aw&#xA;E7MogE0TT0lPLV9qjLP5muFuUBDJpNvVbNCCCPUr8U5FP2/h/wAnMQaeU98pv+iPp/b93k7Y9oww&#xA;Dh0w4T/Pl9Z93SHw3/pMiREjRURQiKKKqigAHYAZlgU6iUiTZ5t4UJtZLS2T3qfvOKq2KtSOkaF3&#xA;NFUVJwgWaVSt0erTSCkslPh/lUfZX+vvkpnoOQQFbIJdirsVdiqT6x5R8v6zqNnqOp2zXFzp6TxW&#xA;tZpliVLqMxTBoVdYn5xkrV1O3TFUm0byDdaJr/1vStTWDRxbWdhHp8kMlxcJaWAlMcC3c88h4tJc&#xA;OWJjJ40UEUrirKpryKN/TUNLORUQx0LU8TUgKPdiMVS7UdOmnAnuiCvRraMn0/YsaKX+mg9u+Kut&#xA;rKSQDiOEY2B6CnsMVRFzaQwRLNHQ3MJ5xk9WNPiT25Db269sVWHVfrESvb/DG4qGOzb+3bFUOSSa&#xA;nrirWKrJoYp4ZIZkEkUqlJEbcMrChB+YwEAiiyhMxkJA0QxnyXbwaRPf+XnQC7tWE8dyQBJdWslR&#xA;DI7bF2jp6RPbiMxdMTG8Z5x5eceny5O17TgMgjqYD05PqH83IPqHx+oe/wAkd5l85aB5ct/U1K5C&#xA;ykVitU+KZ/8AVT+JoMy3UPOrH80bjzF5gWCKygt7iKraC0rMW+sUIaORwVX9/GSngDTr1yjPAkXH&#xA;648vx5udoM8Yy4MhIxT2lXd0P+ad/s6so82fnH5K8t2sHq3J1DVrwAWWiaePrN5NITx4hE+z8QIq&#xA;1K02qdsshMSFhx82CWOZhIbj+37t2Ca15e/Mvzrp91rXnQy+XfKqRGRvKWlOWvrmKNWdFu5gD9ok&#xA;AoB8wpXJblhsPP8AH4/WyL8ivydtfIWiNe30aN5n1NQ1/Ip5LAhPJbaI7/Cv7Rr8TdyAMLB6jirs&#xA;VdiqdRLxiRfAAfhiq7FUOP8ASJQ3+6Iz8I/ncftfJe3vv2Byz6R5lHNEZWl2KuxV2KuxV2KsP/NL&#xA;zTq/lXyjeeYLK2F5Hp7W7TWSFhPPHLOkUixuAeDBXqDxNfbFU98sanY6toFjq1jBLbWuoQpcxxXC&#xA;GOYCVQ1ZQS3xeJqa9anriqZkAg16d64qg59QUfDCKn+Y9PoxVAu7u3JySfE4qhE/0e6Mf+6bgl4/&#xA;aTq6/wCyHxD35YqicVdiqF1PVdO0u0e81C4S1tk+1JIaCvgO5PgBvirxfzx+bCX2pW0vl1HtpbL1&#xA;UTUn2d0lXi6CI1XgaBhy3qAdsxdTAipx+qP2jqPx1dr2ZliTLBkNY8u1/wA2X8Mvnsf6JLzHWNZj&#xA;i9W/1W7PJjWSeZizs301ZjmRCYkARyLrs2GWOZhIVKJosfj1TzFrEiNpAbSrFWDLqUgpO1OhhT9n&#xA;2b8cNsarm9t/J7Q/K+heUPMXmq3Rm1yESibVbh1nuyVto3c8nDAerOXp8O+wNaZi+JUZyvly+X67&#xA;d6NHeXT4eH1ZBEyu9+Kcq351wcJ2NfFmXlmfzLr149lq9wHttLks5r6KWIQTtM1u0jRcEABh9VkZ&#xA;SwFQKb9crwmczUj9NeR5fc5vaePS6bHx4o75RMRo8UeHiAuz/Fw8QIF1d7Mi8sXcyXeq6PdXEk1x&#xA;YXAaD1qs5tJo1aJvUI+P4ua1qTtvmTiluYnofsdNr8Q4MeWIAE471y4gSDt02r7wn+XOsdiq6NeT&#xA;qviQPvxVOsVUJWaVzAhIUf37jsD+wD4n8B8xlkRQs/BBV1VVUKoAUCgA2AAyslLsVdirsVdirsVd&#xA;irsVSLSwdI1WTRmNLG653Wkk9FNeVxaj/UZvUjH8rFQOMeKp7iqV3sHpS1H2H3H8RiqHxVTuIRNE&#xA;0ZPEndHHVWG6sPkcVatZjLFVxxlUlJU8HHX6D1HtQ4qvlEhjcRsFkIIRmHIBqbEior9+Kvl/znqH&#xA;mWfXp7fX53mvbaRoyrGkaAf77UUUKwoRQb9crnMggDq5mn08ZY55JE+gD4kmmPG4q3FBWpoGrt+G&#xA;VHUji4a61+lz49iSODxeKP8Ad+JW4PDxcPOqsnl3sZuLSBfN8JvLeS/F0tYHclkt3UkGiH4eJpXx&#xA;GS04HDVVRP3uP2pfig2ZcUIGzz3iOfn9/PrT1byb+X995jvhA1xFYxKOTiQgzFaAn04ahjswNTQb&#xA;jLRON1e7hy0uUQGQxlwHrW3zeuaN+V+k6fZ6lpLBpdLv3hmMwmeO5YxIo9OTgFBTmpcUbvSm2UnB&#xA;xcQP0yN/YP1Owx9qHEMU8f8Ae4omO4BFGUpXv19VcviyrTdG0/TmuJLZG9e6YPdTyO8skjKOK8nc&#xA;sdhsB0HbLYYxG66uDqNZkzCIkfTHYAAAD4D+0oGw0y8s3vr+UIbme6e59KIl6wmOOL0+TKlWIhDD&#xA;brQVpvgxwIsnqWzWZ45BARuoQ4d9upJ6nvTpHR0V0IZGAZWHQg7g5Y4TeKq9mha4TbYGpPyxVHyy&#xA;OW9GI/vCKs3ZAe/z8Bk4jqeSCqRxpGgRBQCvuSSakn3JyJNm0sM83/mjY6Brlh5fs9Mutc1rUZEg&#xA;hgsmg9OGSQFlF07yB4QY0dwSh+FSexwKwrzZ5j/Mzy42pzwi4a5n1G7TSbSV4JFuIWdLlBbA8yPT&#xA;srORRzWglmC70xV6r5Uu7288s6Vd31zBeXs9pDJc3doGW3lkeMFniDfEFY9K/hiqa4q7FXYq7FXY&#xA;ql+uaW+oWPCCQQX0DCewuSK+lcJXgxHUq1SjgfaQsvfFV+j6mmpafHdBDDIS0dxbsatFNGxSWJiN&#xA;iUdSKjY9RtiqJuIRLEV79VPviqUEEEg7EbEYq1iqGm/cXKzjaKWkc/seiP8AeeJ+Y7DFV8t3Gj+k&#xA;gMs/X0k3I92JoFH+sfliryD88PKc8htfMSwlnoYL8QhmjVBT0mc08aqWIA+yPnRMVMH4O10sxPTZ&#xA;MZrYxmOQJrY/1tj9O/Ujq888r+SPMHmG4pp8FYUJ9a7eqQpX+Z/bwFTlOPTESEiRdk++3Y63tvHk&#xA;wyw44y4ZRhECRFR4Oo/pHv25nm9H0P8ALDSrDQf0vcCR9VttQhkhuZFKIsMF2qs6QvSqyRBvtdQd&#xA;qVy7AOZ7y63tTJvjx2CIY4jodyLkL8ieX8PJkPkjRNWl1G31S79eKG3bUJJI5zAS11dXFG4+kC9E&#xA;WOjc260C7DKcOGQlZ6X3dT+Obs+0+08E8Bhjq5eGNuL0xhHkb2vi/m+ZPN6Bma8w7FXYqhrcGG4a&#xA;2p8ElZLf7/jT6Caj2NO2KppHZhV9S4bgnh3xVoajH64trZAK7GQ9Fr0J/pkxHqeSCVmr69onl+2j&#xA;k1C49Np24W8Kq01zcS/yQwxhpZX/AMlFP3ZGUrSAlKwebfMZDXhk8t6IwH+hxOp1SYf8Wzxlo7VT&#xA;/LEzSd/UQ7YFT3StC0fSbWO102zitYIizIsagHk+7uW+0zOd2YmrHriqOxV2KuxV2KuxV2KuxVbL&#xA;GsiFGLAN1KsyH6GUgjFWNXem2+ka2l6HnXTdVZIL0evNSO72SCYnmP70Uhatd/TpT4jiqe/oy2/n&#xA;n/6SJ/8AmvFUBqGjW6sJVaeh2b/SJ+v/AAeKpdNbWMIBklnBbZVE87Mx8FUMSfoxVQfSfralJmng&#xA;t3BDRfWJWkZTsQzByqg/5NT7jFW9P0y1iR7YtMJIT8RE8w5ht1kPx7lv2j/MDiqvcaNY3EElvOJZ&#xA;YZVKSxtPMVZWFCCOfQjFWrbRdPtYEt7ZZIIIxSOKOaVEUeAUMAMVbn0exngkgm9aSGVSkiNPMQys&#xA;KEH4+4xVBy2dvZ6iryT3jw37JBHGJpmjhlRZGLludVEgCr/LyA7tuqmH6Ot/55/+R83/ADXirv0d&#xA;b/zz/wDI+b/mvFVeHQo5PiLzIn8xnm/5rxVbeafYJFxtWmNyh5xStcT0Djxo/Q9DTscVSu4ns3tX&#xA;u5bmS3ghVmurme5lVIAleYYs/Gq0Nd6Dv7zEQNyi0gju9R1sel5WilttObdvMN89x6bVFeVpbF0k&#xA;nJ/345SPuvqDbImRKWVeWvJmiWTNfNJdX2tunpXWr3VxK91IleXHkrKqR139ONVSv7OBU/8A0Zbf&#xA;zz/9JE//ADXirv0Zbfzz/wDSRP8A814q79GW388//SRP/wA14q79GW388/8A0kT/APNeKuGm24Ne&#xA;c/8A0kT/APNeKorFXYq7FXYqlHnDVb7R/KmsatYRRz3mnWc93DBLXhI0EZk4EqQRy40r2xV57on5&#xA;j6l5v1K88spb2V1E89vBK6pOgewe1Ml7cUL8l9KYrAjD/dn/AAqr0Py/e3LxTabfuX1PTSsVxIwA&#xA;M0bA+jcgLQUlUb0FA4dR9nFUbci6mLwRoI06NO+/UV+BQdz/AK1Ke+KpStkltK9avMdnmfdmHz7D&#xA;2G2Kr8VQ12rRlbpAS0QIkUdWjP2gPcfaH3d8VRCsrKGUgqRUEbgg4q3irsVUrqD6xazW5keITI0f&#xA;qxNwkXkCOSMPssK7HFVujyS3kckPxNcWb/V7t2UIDIqq3MAFhR1dXFD0PjXFU7gsoo92+N/E9Pux&#xA;VAX9xKHcTMERNz2WnicIFqlD3kly5jtULKpo7V4Cvgz78PkBy9gN8ntHzKOaW3XlbTJtWtrzU0+u&#xA;RqVNvbPUWkNwm6Srb1MZcgAK71KkfDTlkCbSyaG3lmNEG3dj0wKmdraJBU1LORQnt92Kq+KuxV2K&#xA;uxV2KuxV2KpCvnzya1sbgazaFAxj4iVDJzDFOIjBLkkg0AG+KuuPPflG3KGTVbfg+5kEilV/drKO&#xA;dD8NY3DD237Yqra9rHl5NM1CDULuIQiB0uofVRJODqikDky0r66AGtKsu++KsX0eb8r/ACjrKQ20&#xA;kNjqNzZWenycnUrFFaKFt4XcbKzCeta/FSpOwxVNp9XsL62tvNmiyfWlsl4ajDDRpGtZUWWSJ0HI&#xA;+rCGWVV+11QfbOKsoililiSWJ1kikUNHIpDKysKggjYgjFUNqEHJPVXqv2vliqXYq7FUNbfuJmtD&#xA;9ihkt/8AUr8Sf7Anb2IHbFUTiq5Ed24qKnwGKo6DTwPilNT/ACjpiqjqTiwmj1JpZVtIk9C4tkXk&#xA;hEsiBZiKjj6O5Zh+yTXoKKoi71KG3cQKGnu3HKO1i3citOR7Ktf2mIH05IRvfoi0tvdKu7wC5vnA&#xA;4braQk8AP8t9i5H0d8JlWwWlsMGyxQpQAUVFFAB9HTIJRo0iKSIrc7huymlD1BB8QdxiqJspGaIx&#xA;yACaE+nKAKCoFQwHgykN7dMVRGKuxV2KuxV2KuxV2KuxVj9x5B8qXP1kXFm0q3dPWV55yKLMZ+Cf&#xA;H8CeoxYotF9qYqh5fyy8lSwiJtPJCkNCWmncxMpqGj5u3A/LrU16nFUVqHkXypqNyLq/sFubkRLB&#xA;68jyM5jRHQBm5VJpKak7k8Sd1UhVZD5B8rQ3BuY7aVbk0/0j6zc+qKFWFJPU59Ur17t/M1VUw0Py&#xA;9pGhWhtNKt/q1sxUmIMzCqRrED8ZY14xrU9SdzviqD0Y/orUZNAYcbVla50dj09HkBLbjw9B2HAb&#xA;fu2UCvFsVT0gEUPQ4qlFzCYpSv7J3U+2KqWKqN1C8sYMX9/G3OGvTkARQ+zAlT88VRtlb/WIVnY+&#xA;nGwqVOzAjYhh+yQdjiqs95DCvC3UE927f24q6PVbeKAvdyhCDRSerk9FVRuzeAArhESeS2t56nff&#xA;3YNhaH/djAG4cdiqGqxA/wCVVv8AJU5LYeaFHQYbawafSA7yXVuBNJPKPjmjmZhE7PVjIyhODMx5&#xA;ErU9RkTInmmk3IBFD0wKtjijjFEUKPbFV2KoW6/cSreD7AHC5/4x12b/AGBNf9UtiqKxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVLte02a9sg1oyx6laOLjT5X+ysyAji1ATwkVmjem/FjTfFVbSdTh1P&#xA;T4byJWj9QESQyU5xSISkkTgEjnG6lW36jFVS8g9WLb7a7r/TFUDBaSy704p/Mf4YqiDJa2myj1Jf&#xA;8+/bFUlutRFvd8Zn4w3RLJGtTSUCrUUVJ5KK9OoPjkowJ5IJQ/1u+u9rJFihPW6l+If7BVPxexrT&#xA;9WSqI8/x+P1ruidPsobO5F0S093SjXEp5PxPVV6BF9lAGRMyfctMlRldQymoIqMilB6qsyxR3kUk&#xA;w+pM08lvAvqNOixsGh4VHImtV/ygPkVUVbzw3EEdxCweGZVkjcdGVhUEfMYqvxV2KuIDAgioOxB6&#xA;EYqo2kUkMXpOeSoSImqa8P2Q1e46e9K98VVsVdirsVdirsVYz5681z+WbbTr8iBNMe8SHVbu4LKs&#xA;FuVZmkqKKv2dix+1RaEtUKpl5V1K/wBU8taXqeoQrb3t9aw3M9ulaRtMgf09yTVeVDv1xVNMVdir&#xA;sVdirsVdiqRS10fXxOBTTdZdUnPaK+ACRufBbhFEZ/y1Sgq5OKpzLcQQgerIsfL7PIgV+VclGBPI&#xA;IJQt3PPLAwtYpCf5mHpLt1B5fH9ynJcAHM/p/Z9q2kEkszuYg5kkH2oYPhVa9pJTUin+TRvY48UR&#xA;yHz/AB+taaOkRTRMtyeXOh4JsoYGqsa1MjKd6vXfegyMpE81ARli01ynEr+/jPCZV6Bh3FexBqPY&#xA;5FKa2+nItGlPI/y9sVRoAAoBQDoMVdiqXW0v1TUnsZ55JmvWlurPmvwxogjEkPOpqQ7l1B/ZNBsu&#xA;KpjirsVdirsVdirsVdirsVdiryz8+fNegaHZeXYtXtFvYLvUk+uIzyRiPTlHpX0zemy+ogSdUaNv&#xA;hYPRgRir1JQoUBaBQPhA6U9sVbxVh+lfmjoGo+Y20IW15bT+vfWsN1PHH9Wll0xlW6VJI5JKcOY3&#xA;cKO3XbCBaso/SFmfsSiU9xFWUj5hORyfhS6ivft96OIO+vRnZI5WbsvpOtfpcKo+k4+Ge8fMLbvr&#xA;F02yWrKfGVkVfvQyH8MeGPf+PsWy6moNvWKL/Jo0tfetYv1Y+gd5+z9a7obUtGgv7Ce0vJJ7iGVC&#xA;OCuInB6go0YjowO6knY748fcAPx52tMM/KrzzqOs2urWfmHSTovmLR7sWdxY8azTIIY3S4+AcWEr&#xA;F2qlVA7kbmMpk8yoDOvSurn++Jt4f98o37w/60in4fkv/BdsilBXNklu4SCMJE32EQUAPcADFVa3&#xA;05mo0vwj+UdcVVZY0tJkuIxxiakdyB4V+Bz/AKpO/sanpiqMxV2KuxVDala3F1aNFb3DWs/JHjnU&#xA;cqNG4cBlqvJG48WFRVSRXFXadqFvqFml1ByCOWUq44ujxsUkRx2ZHUqw8RiqJxV2KuxV2KuxV2Ku&#xA;xV2KsG/Na2t5bfy0ZYkkJ8w6ZESyhqo845Jv+y1BUYqzkAAUGwHQYqsm9b0ZPQKibifSLglQ1Ph5&#xA;AEGleuKvGj+UHmPy7oWqNo0seo6xrunNp2rSQxRxStc3F3JJJqMUk8qBSsdyxdKnkUSnTFWefldo&#xA;OraF5OttO1Zp21GOWdrgzypMOTTMQYODMEgIoY0O6rs29cVZZirsVdiqFMl1cGkINvD3mcfvD/qI&#xA;3T5t/wACeuKqsFpBAWZFrI9PUlb4nalacmO5pU08O2KquKuxV2KtOiOjI6hkYEMpFQQdiCDiqHsn&#xA;dedrIxaSClGJqWjavBifHYg+4OKonFXYq7FUunn+o6mklxcsbXUGjt4ISoKRzhZG5epX4RKoCgEU&#xA;5AU3bFUxxV2KuxV2KuxV2KuxV2KsK/NL/ebyz/4Emlf8n8VZrirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirRRC4cqOYBAam4BoSK+9BireKuxV2Kqd1CZ7aWBZHhaVGQTRkB0LCnJSQfiHUYqh9LvVuIpI&#xA;Wl9W7snFvetwMX74IrFghLUV1cOu52PXFUZirsVdirsVdirsVdirz7z7dT6/pEc+hS2cTeXdctpp&#xA;7rV5nsrN5LGQmWJZVjmeqyUQnhxrWhNMVQ1j5z/NG91P9HW2meW5JXthe20qapevDPb8gjSQypp7&#xA;I3ByFYVqKjsQcVTX67+dH/Vm8uf9xS+/7x2Ksb13UP8AnI4a/YppOmaKtuyf6Un1iS4sVHL7Ussk&#xA;NndLIR0ESuNqkYqyHzxqXnG3s9HisDdW2oXDxDUZNLtVvoIo/XgFy5eaJ2+GFpDEojqzUJ2Ugqsv&#xA;0sXA0y0Fy0r3Pox+u86xrKX4DkZFh/dByftBPhr02xVE4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;pmEm4Wb1HAVChiqOBqQeRFK8hSg374qqYq7FXYq7FXYq7FXYq8j8s2esLrNvObU62NAvddS+tYJI&#xA;IphqN3drJa30sM8kaJ6lq0gHE7c/hXi3wqozynoV5pvnjSbSe6RdTisdY1PW47Ti8XPVtQiuEtjy&#xA;Wqxo7MUcBWfhXpyGKvUMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>372.794434</stDim:w>
            <stDim:h>443.310547</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=169 G=173 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>169</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:D48346FA7304ED11B3AFBB1527F8536C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:D48346FA7304ED11B3AFBB1527F8536C</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:4809c161-7eb0-4b17-ad7d-dc9a96161dab</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:c8508154-15a9-40c3-ba84-8ab370f04b4a</stRef:instanceID>
            <stRef:documentID>uuid:4809c161-7eb0-4b17-ad7d-dc9a96161dab</stRef:documentID>
            <stRef:originalDocumentID>uuid:4809c161-7eb0-4b17-ad7d-dc9a96161dab</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D48346FA7304ED11B3AFBB1527F8536C</stEvt:instanceID>
                  <stEvt:when>2022-07-15T15:35:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -442.212 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 442.212 li
372.794 442.212 li
372.794 0 li
cp
clp
82.3008 261.059 mo
229.593 176.02 li
297.171 201.504 li
286.287 274.215 li
138.993 359.254 li
82.3008 261.059 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.917647 .917647 .917647 rgb
f
206.218 146.066 mo
220.39 170.613 li
171.292 198.961 li
157.121 174.414 li
206.218 146.066 li
cp
.909804 .909804 .909804 rgb
f
284.652 282.199 mo
298.824 306.746 li
249.726 335.094 li
235.554 310.547 li
284.652 282.199 li
cp
f
116.41 197.203 mo
130.582 221.754 li
81.4839 250.102 li
67.3115 225.551 li
116.41 197.203 li
cp
f
195.777 334.68 mo
209.949 359.227 li
160.855 387.574 li
146.683 363.023 li
195.777 334.68 li
cp
f
gsave
16.9287 0 mo
284.929 0 li
284.929 433.793 li
16.9287 433.793 li
16.9287 0 li
cp
clp
1 lw
2 lc
0 lj
10 ml
[4 4 ] 0 dsh
true sadj
31.6128 .684082 mo
270.113 418.789 li
0 0 0 rgb
@
grestore
200.132 239.641 mo
214.304 264.191 li
165.207 292.535 li
151.035 267.988 li
200.132 239.641 li
cp
.360784 .360784 .360784 rgb
f
.613971 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
321.454 186.961 mo
100.715 314.406 li
0 0 0 rgb
@
46.5898 19.2769 mo
46.5898 18.6289 46.4609 17.98 46.2109 17.3789 cv
45.9648 16.7769 45.5967 16.23 45.1357 15.77 cv
44.6787 15.3091 44.1289 14.9409 43.5269 14.6948 cv
42.9287 14.4448 42.2769 14.3159 41.6289 14.3159 cv
40.98 14.3159 40.3315 14.4448 39.73 14.6948 cv
39.1328 14.9409 38.5815 15.3091 38.1206 15.77 cv
37.6636 16.23 37.293 16.7769 37.0469 17.3789 cv
36.7969 17.98 36.668 18.6289 36.668 19.2769 cv
36.668 19.9258 36.7969 20.5742 37.0469 21.1758 cv
37.293 21.7769 37.6636 22.3242 38.1206 22.7852 cv
38.5815 23.2461 39.1328 23.6128 39.73 23.8589 cv
40.3315 24.1089 40.98 24.2378 41.6289 24.2378 cv
42.2769 24.2378 42.9287 24.1089 43.5269 23.8589 cv
44.1289 23.6128 44.6787 23.2461 45.1357 22.7852 cv
45.5967 22.3242 45.9648 21.7769 46.2109 21.1758 cv
46.4609 20.5742 46.5898 19.9258 46.5898 19.2769 cv
46.5898 19.2769 li
cp
f
13.0386 21.1128 mo
14.2729 21.1128 li
14.2729 29.7852 li
13.0386 29.7852 li
13.0386 21.1128 li
cp
f
20.2148 30.0039 mo
18.8706 30.0039 17.8276 29.6089 17.0898 28.8159 cv
16.3589 28.0269 15.9956 26.9063 15.9956 25.457 cv
15.9956 24.0117 16.3706 22.8911 17.1206 22.0981 cv
17.8706 21.2969 18.9219 20.895 20.2769 20.895 cv
21.0576 20.895 21.9688 21.02 23.0107 21.27 cv
23.0107 22.4258 li
21.8237 22.02 20.9058 21.8159 20.2607 21.8159 cv
19.3237 21.8159 18.5938 22.1367 18.0737 22.77 cv
17.5615 23.4063 17.3076 24.3091 17.3076 25.4731 cv
17.3076 26.5781 17.5776 27.4492 18.1206 28.082 cv
18.6719 28.7188 19.4258 29.0352 20.3857 29.0352 cv
21.2065 29.0352 22.0898 28.7852 23.0269 28.2852 cv
23.0269 29.332 li
22.1719 29.7813 21.2339 30.0039 20.2148 30.0039 cv
20.2148 30.0039 li
cp
f
26.0347 25.1909 mo
26.4258 25.1909 li
27.9756 25.1909 28.7539 24.5898 28.7539 23.3789 cv
28.7539 22.4839 28.1006 22.0352 26.8008 22.0352 cv
26.0347 22.0352 li
26.0347 25.1909 li
cp
24.8159 29.7852 mo
24.8159 21.1128 li
27.4409 21.1128 li
28.2729 21.1128 28.9097 21.2969 29.3467 21.6602 cv
29.793 22.0269 30.0186 22.563 30.0186 23.27 cv
30.0186 24.4258 29.4326 25.2461 28.2686 25.7231 cv
31.1597 29.7852 li
29.6436 29.7852 li
27.1758 26.1128 li
26.0347 26.1128 li
26.0347 29.7852 li
24.8159 29.7852 li
cp
f
66.3467 292.949 mo
372.488 292.949 li
@
1 lw
192.027 292.555 mo
191.992 286.516 190.812 280.549 188.558 274.93 cv
@
185.203 267.637 mo
191.23 272.895 li
186.441 275.539 li
185.203 267.637 li
cp
f
.25 lw
185.203 267.637 mo
191.23 272.895 li
186.441 275.539 li
185.203 267.637 li
cp
@
2.06985 lw
116.687 155.145 mo
115.347 147.258 li
121.441 152.438 li
183.633 267.273 mo
115.597 147.699 li
1 .129412 0 rgb
@
196.753 279.977 mo
197.16 278.008 197.644 276.836 198.332 275.898 cv
198.738 275.367 199.425 274.93 199.863 274.93 cv
200.316 274.93 200.816 275.367 201.019 275.898 cv
201.332 276.836 201.316 278.008 200.972 279.977 cv
196.753 279.977 li
cp
200.769 280.977 mo
200.332 283.023 199.878 284.18 199.175 285.133 cv
198.738 285.695 198.082 286.102 197.628 286.102 cv
197.16 286.102 196.675 285.68 196.472 285.133 cv
196.16 284.18 196.175 283.023 196.535 280.977 cv
200.769 280.977 li
cp
199.988 274.258 mo
199.3 274.258 198.519 274.555 197.753 275.102 cv
196.332 276.102 195.269 278.039 194.769 280.539 cv
194.3 282.898 194.519 284.742 195.378 285.758 cv
195.957 286.43 196.707 286.805 197.488 286.805 cv
198.175 286.805 198.957 286.523 199.738 285.961 cv
201.144 284.977 202.207 283.055 202.691 280.633 cv
203.191 278.18 202.972 276.352 202.113 275.305 cv
201.535 274.648 200.785 274.258 199.988 274.258 cv
199.988 274.258 li
cp
1 0 0 rgb
f
265.355 176.629 mo
265.23 176.832 li
265.277 177.051 li
265.089 177.16 li
265.042 177.41 li
264.933 177.504 li
264.902 177.77 li
264.855 177.77 li
264.832 177.875 264.765 177.965 264.652 178.035 cv
264.558 178.41 li
264.449 178.582 li
264.449 178.625 264.449 178.676 264.449 178.738 cv
264.261 178.91 li
263.98 179.535 li
263.761 179.91 li
263.761 180.035 li
263.761 180.153 263.699 180.246 263.574 180.317 cv
263.542 180.535 li
263.464 180.582 li
263.308 180.77 li
263.277 180.91 li
263.199 180.973 li
263.199 180.996 263.203 181.047 263.214 181.129 cv
263.089 181.238 li
262.871 181.363 li
262.792 181.488 li
262.558 181.738 li
262.308 182.168 262.046 182.379 261.777 182.379 cv
261.558 182.379 261.359 182.27 261.183 182.051 cv
261.23 182.129 li
260.808 181.52 li
260.777 181.379 li
260.714 181.332 li
260.699 181.035 li
260.574 180.91 li
260.574 180.613 li
260.261 179.91 li
260.277 179.785 li
260.183 179.629 li
260.152 179.488 li
260.105 179.41 li
260.011 179.192 li
259.792 179.02 li
259.699 178.629 li
259.542 178.488 li
259.433 178.332 li
259.234 178.27 259.136 178.106 259.136 177.832 cv
259.136 177.613 259.308 177.438 259.652 177.301 cv
260.089 177.594 260.347 177.887 260.433 178.176 cv
260.464 178.457 li
260.496 178.449 260.55 178.434 260.636 178.41 cv
260.636 178.52 li
260.824 178.66 li
260.761 178.848 li
260.777 179.004 li
260.886 179.285 li
260.949 179.348 li
260.964 179.457 li
261.058 179.504 li
261.058 179.707 li
261.183 180.176 li
261.214 180.348 li
261.402 180.738 li
261.558 181.207 li
261.683 181.332 li
261.714 181.332 li
261.746 181.332 261.769 181.301 261.792 181.238 cv
261.886 181.192 li
261.855 181.098 li
261.875 181.059 261.902 181.035 261.933 181.035 cv
261.964 181.035 261.996 181.047 262.027 181.067 cv
262.089 180.903 262.128 180.817 262.152 180.817 cv
262.16 180.817 262.167 180.832 262.167 180.863 cv
262.199 180.77 262.269 180.688 262.386 180.613 cv
262.542 180.395 li
262.636 180.145 li
262.761 180.051 li
262.839 179.895 li
262.886 179.863 li
262.855 179.707 li
262.996 179.645 li
263.011 179.582 li
263.011 179.551 263.031 179.512 263.074 179.457 cv
263.152 179.238 li
263.214 179.317 li
263.261 179.285 li
263.261 179.254 li
263.261 179.153 263.308 179.063 263.402 178.988 cv
263.402 178.957 li
263.48 178.801 li
263.542 178.551 li
263.621 178.52 li
263.777 178.145 li
263.886 178.004 li
263.917 177.879 263.972 177.785 264.058 177.723 cv
264.167 177.395 li
264.246 177.285 li
264.246 177.035 li
264.308 177.035 li
264.402 176.973 264.48 176.875 264.542 176.738 cv
264.613 176.606 264.667 176.528 264.699 176.504 cv
264.761 176.473 li
265.089 176.27 li
265.355 176.629 li
cp
.258824 .258824 .258824 rgb
f
268.246 177.754 mo
268.246 177.735 268.23 177.688 268.199 177.613 cv
268.152 177.598 li
268.121 177.613 li
268.109 177.613 268.093 177.613 268.074 177.613 cv
268.05 177.613 268.035 177.613 268.027 177.613 cv
268.015 177.613 268.003 177.613 267.996 177.613 cv
267.972 177.613 267.957 177.613 267.949 177.613 cv
267.839 177.692 li
267.73 177.707 li
267.667 177.723 li
267.464 177.988 li
267.324 178.082 li
267.136 178.426 li
267.027 178.488 li
267.003 178.637 266.949 178.754 266.855 178.848 cv
266.808 178.926 li
266.902 178.875 267 178.848 267.105 178.848 cv
267.199 178.801 li
267.23 178.707 li
267.402 178.707 li
267.496 178.567 li
267.574 178.567 li
267.699 178.613 li
267.761 178.442 li
267.839 178.442 li
267.839 178.301 li
267.996 178.27 li
268.042 178.238 li
268.058 178.129 li
268.214 177.895 li
268.234 177.856 268.246 177.809 268.246 177.754 cv
268.246 177.754 li
cp
269.433 181.207 mo
269.433 181.301 269.359 181.422 269.214 181.567 cv
269.171 181.692 269.109 181.797 269.027 181.879 cv
268.964 181.895 li
268.824 182.113 li
268.605 182.16 li
268.386 182.301 li
268.261 182.52 li
268.136 182.488 li
268.042 182.528 267.968 182.555 267.917 182.567 cv
267.839 182.676 li
267.816 182.664 267.781 182.66 267.73 182.66 cv
267.625 182.66 267.527 182.731 267.433 182.879 cv
267.261 182.738 li
267.23 182.738 267.183 182.738 267.121 182.738 cv
267.015 182.738 266.925 182.723 266.855 182.692 cv
266.652 182.692 li
266.558 182.629 li
266.253 182.586 266.062 182.473 265.98 182.285 cv
265.98 182.254 li
265.839 182.176 li
265.761 181.973 li
265.621 181.879 li
265.621 181.707 li
265.48 181.176 li
265.511 180.738 li
265.558 180.551 li
265.558 180.301 li
265.605 180.098 li
265.605 180.02 li
265.683 179.879 li
265.667 179.895 li
265.667 179.824 265.683 179.75 265.714 179.676 cv
265.714 179.613 li
265.683 179.317 li
265.683 179.184 265.746 179.063 265.871 178.957 cv
265.871 178.949 265.871 178.926 265.871 178.895 cv
265.871 178.863 265.855 178.801 265.824 178.707 cv
265.8 178.606 265.792 178.531 265.792 178.488 cv
265.792 178.387 265.816 178.281 265.871 178.176 cv
265.933 178.281 266.019 178.332 266.136 178.332 cv
266.183 178.332 li
266.191 178.301 266.222 178.266 266.277 178.223 cv
266.347 178.028 266.437 177.86 266.542 177.723 cv
266.589 177.66 li
266.589 177.629 266.613 177.543 266.667 177.395 cv
266.761 177.395 li
266.792 177.332 li
266.886 177.301 li
266.925 177.238 266.953 177.203 266.964 177.192 cv
266.972 177.184 267.058 177.137 267.214 177.051 cv
267.246 176.988 267.296 176.938 267.371 176.895 cv
267.402 176.875 267.437 176.856 267.48 176.832 cv
267.527 176.77 li
267.746 176.699 267.878 176.66 267.933 176.66 cv
268.003 176.66 268.066 176.676 268.121 176.707 cv
268.183 176.692 li
268.261 176.738 li
268.355 176.813 268.453 176.875 268.558 176.926 cv
268.761 177.082 li
268.761 177.129 li
268.937 177.278 269.027 177.481 269.027 177.738 cv
268.996 177.863 li
269.027 178.254 li
268.917 178.332 li
268.808 178.645 li
268.574 178.895 li
268.558 179.082 li
268.308 179.27 268.074 179.422 267.855 179.535 cv
267.781 179.641 267.671 179.692 267.527 179.692 cv
267.48 179.692 li
267.261 179.832 li
267.058 179.832 li
266.777 179.957 li
266.558 179.848 li
266.542 179.848 li
266.519 179.91 266.503 180.012 266.496 180.145 cv
266.386 180.207 li
266.386 180.348 li
266.308 180.567 li
266.328 180.754 266.339 180.875 266.339 180.926 cv
266.292 180.973 li
266.292 181.078 266.285 181.153 266.277 181.192 cv
266.277 181.203 266.277 181.219 266.277 181.238 cv
266.277 181.25 266.277 181.262 266.277 181.27 cv
266.277 181.332 266.308 181.387 266.371 181.426 cv
266.39 181.52 266.433 181.578 266.496 181.598 cv
266.574 181.676 li
266.839 181.754 li
266.839 181.785 li
266.933 181.801 li
267.339 181.832 li
267.574 181.801 li
267.699 181.707 li
267.777 181.692 li
267.886 181.504 li
267.949 181.488 li
268.246 181.395 li
268.285 181.344 268.339 181.297 268.402 181.254 cv
268.449 181.192 li
268.605 181.16 268.691 181.078 268.714 180.942 cv
268.828 180.828 268.972 180.77 269.152 180.77 cv
269.199 180.77 li
269.355 180.949 269.433 181.094 269.433 181.207 cv
269.433 181.207 li
cp
f
273.507 180.879 mo
273.507 180.973 273.476 181.047 273.414 181.098 cv
273.351 181.192 273.246 181.293 273.101 181.395 cv
272.992 181.488 li
272.882 181.629 li
272.773 181.676 li
272.601 181.785 li
272.476 181.801 li
272.429 181.848 li
272.273 181.891 272.148 181.969 272.054 182.082 cv
272 182.125 271.949 182.145 271.898 182.145 cv
271.867 182.145 271.839 182.141 271.82 182.129 cv
271.683 182.211 271.507 182.254 271.289 182.254 cv
271.109 182.254 270.992 182.238 270.929 182.207 cv
270.71 182.082 li
270.648 181.957 li
270.648 181.926 li
270.648 181.824 270.601 181.738 270.507 181.676 cv
270.46 181.442 li
270.367 181.332 li
270.304 180.879 li
270.289 180.613 li
270.304 180.426 li
270.335 180.348 li
270.304 180.309 270.289 180.262 270.289 180.207 cv
270.328 179.863 270.351 179.653 270.351 179.567 cv
270.242 179.348 li
270.351 179.16 li
270.398 178.863 li
270.367 178.66 li
270.445 178.488 li
270.367 178.238 li
270.476 178.082 li
270.492 177.973 li
270.492 177.551 li
270.523 177.457 li
270.507 176.957 li
270.554 176.442 li
270.507 176.348 li
270.492 175.988 li
270.523 175.66 li
270.492 175.551 li
270.554 174.817 li
270.898 174.746 271.046 174.707 271.007 174.707 cv
271.132 174.707 271.234 174.778 271.32 174.91 cv
271.335 175.004 li
271.523 175.176 li
271.429 175.442 li
271.445 175.488 li
271.433 175.637 271.414 175.735 271.382 175.785 cv
271.414 176.035 li
271.476 176.27 li
271.382 176.52 li
271.382 176.656 271.367 176.781 271.335 176.895 cv
271.335 176.926 271.324 176.988 271.304 177.082 cv
271.289 177.145 li
271.398 177.285 li
271.351 177.41 li
271.371 177.473 271.382 177.52 271.382 177.551 cv
271.382 177.594 271.367 177.656 271.335 177.738 cv
271.351 177.848 li
271.273 178.238 li
271.273 178.488 li
271.195 178.738 li
271.242 178.957 li
271.195 179.488 li
271.226 179.551 li
271.179 179.832 li
271.148 180.16 li
271.125 180.215 271.117 180.246 271.117 180.254 cv
271.117 180.391 271.117 180.5 271.117 180.582 cv
271.179 180.754 li
271.148 180.926 li
271.226 181.082 li
271.21 181.145 li
271.25 181.188 271.292 181.25 271.335 181.332 cv
271.445 181.332 li
271.601 181.395 li
271.679 181.285 li
271.789 181.285 li
271.828 181.266 271.867 181.254 271.898 181.254 cv
271.929 181.254 li
272.011 181.246 272.074 181.203 272.117 181.129 cv
272.195 181.098 li
272.246 181.016 272.335 180.957 272.46 180.926 cv
272.5 180.895 272.578 180.828 272.695 180.723 cv
272.695 180.621 272.761 180.535 272.898 180.473 cv
273.023 180.473 273.101 180.453 273.132 180.41 cv
273.296 180.442 273.402 180.488 273.445 180.551 cv
273.484 180.606 273.507 180.715 273.507 180.879 cv
273.507 180.879 li
cp
f
277.523 179.676 mo
277.523 179.613 li
277.46 179.563 277.429 179.5 277.429 179.426 cv
277.46 179.379 li
277.351 179.145 li
277.367 178.91 li
277.32 178.848 li
277.214 178.778 277.164 178.715 277.164 178.66 cv
277.089 178.629 277.054 178.551 277.054 178.426 cv
276.976 178.41 li
276.835 178.176 li
276.726 178.082 li
276.476 177.988 li
276.382 177.973 li
276.328 177.973 276.296 177.957 276.289 177.926 cv
276.039 178.176 li
275.882 178.52 li
275.632 178.645 li
275.601 178.785 li
275.476 178.848 li
275.429 179.16 li
275.289 179.223 li
275.257 179.34 275.242 179.442 275.242 179.535 cv
275.039 179.723 li
275.101 179.754 li
275.101 179.848 275.062 179.934 274.992 180.004 cv
274.968 180.078 274.937 180.16 274.898 180.254 cv
274.898 180.348 li
274.867 180.395 li
274.882 180.535 li
274.742 180.863 li
274.773 180.926 li
274.773 181.254 li
274.726 181.426 li
274.726 181.598 li
274.835 181.754 li
275.007 181.801 li
275.07 181.832 li
275.164 181.785 li
275.476 181.801 li
275.523 181.692 li
275.57 181.692 li
275.621 181.692 275.652 181.703 275.664 181.723 cv
275.773 181.692 li
275.867 181.723 li
276.023 181.613 li
276.039 181.582 li
276.148 181.551 li
276.199 181.469 276.328 181.379 276.539 181.285 cv
276.57 181.238 li
276.804 181.067 li
276.945 180.879 li
277.132 180.77 li
277.148 180.723 li
277.21 180.582 li
277.21 180.426 li
277.351 180.301 li
277.398 180.223 li
277.46 180.145 li
277.429 180.051 277.414 179.985 277.414 179.942 cv
277.414 179.871 277.433 179.797 277.476 179.723 cv
277.523 179.676 li
cp
278.32 179.379 mo
278.257 179.598 li
278.257 179.809 278.242 179.973 278.21 180.098 cv
278.148 180.207 li
278.148 180.348 li
278.085 180.426 li
278.039 180.598 li
277.914 180.723 li
277.835 181.035 li
277.726 181.067 li
277.679 181.192 li
277.539 181.285 li
277.445 181.488 li
277.304 181.551 li
277.289 181.707 li
277.054 181.785 li
276.96 181.934 276.835 182.028 276.679 182.067 cv
276.632 182.067 li
276.515 182.231 276.367 182.317 276.179 182.317 cv
276.105 182.367 276.015 182.395 275.914 182.395 cv
275.789 182.473 li
275.664 182.52 li
275.507 182.629 li
275.351 182.629 li
275.195 182.676 li
274.992 182.582 li
274.476 182.551 li
274.289 182.27 li
274.023 182.004 li
274.085 181.801 li
273.914 181.395 li
273.992 181.238 li
273.929 180.957 li
273.992 180.77 li
273.968 180.668 273.96 180.59 273.96 180.535 cv
273.96 180.379 274 180.27 274.085 180.207 cv
274.093 180.125 274.148 179.988 274.242 179.801 cv
274.304 179.801 li
274.273 179.723 li
274.32 179.551 li
274.32 179.379 li
274.382 179.309 274.417 179.254 274.429 179.223 cv
274.382 179.067 li
274.382 179.004 li
274.445 178.903 274.476 178.785 274.476 178.66 cv
274.726 178.317 li
274.726 178.317 274.734 178.313 274.757 178.301 cv
274.777 178.281 274.792 178.262 274.804 178.238 cv
274.789 178.192 li
274.835 178.192 li
275.023 177.988 li
275.039 177.723 li
275.335 177.613 li
275.449 177.543 275.523 177.422 275.554 177.254 cv
275.71 177.254 li
275.792 177.203 275.871 177.176 275.945 177.176 cv
276.015 177.176 276.085 177.192 276.148 177.223 cv
276.289 177.238 li
276.601 177.113 li
276.757 177.27 li
276.898 177.348 li
276.992 177.348 li
277.164 177.457 li
277.273 177.457 li
277.375 177.551 277.496 177.684 277.632 177.848 cv
277.648 177.91 li
277.726 177.957 li
277.992 178.285 li
278.21 178.848 li
278.21 178.957 li
278.32 179.379 li
cp
f
283.679 180.317 mo
283.445 180.535 li
283.429 180.613 li
283.406 180.75 283.339 180.863 283.226 180.957 cv
283.039 181.313 282.773 181.578 282.429 181.754 cv
282.242 181.895 li
282.085 181.91 li
281.898 182.067 li
281.773 182.067 li
281.46 182.27 li
281.273 182.238 li
281.054 182.332 li
280.898 182.285 li
280.804 182.363 li
280.585 182.317 li
280.351 182.363 li
280.273 182.285 li
280.023 182.238 li
279.679 181.973 li
279.492 181.738 li
279.367 181.582 279.304 181.453 279.304 181.348 cv
279.304 181.317 li
279.179 181.129 li
279.179 180.973 li
279.156 180.879 279.148 180.797 279.148 180.723 cv
279.148 180.629 li
279.085 180.426 li
279.148 180.285 li
279.101 180.192 li
279.242 179.957 li
279.21 179.77 li
279.304 179.457 li
279.351 179.379 li
279.398 179.098 li
279.382 179.051 li
279.523 178.895 li
279.554 178.77 li
279.648 178.488 li
279.804 178.16 li
280.007 177.973 li
280.07 177.863 li
280.132 177.723 li
280.164 177.613 li
280.351 177.379 li
280.402 177.36 280.46 177.344 280.523 177.332 cv
280.554 177.176 280.75 177.09 281.117 177.067 cv
281.429 177.129 281.632 177.215 281.726 177.317 cv
281.808 177.34 281.875 177.375 281.929 177.426 cv
282.179 177.442 li
282.335 177.66 li
282.375 177.735 282.406 177.813 282.429 177.895 cv
282.523 177.988 li
282.492 178.176 li
282.492 178.231 282.492 178.317 282.492 178.442 cv
282.554 178.488 li
282.554 178.66 li
282.601 179.035 li
282.433 179.203 282.246 179.297 282.039 179.317 cv
281.921 179.11 281.781 178.953 281.617 178.848 cv
281.585 178.457 li
281.507 178.332 li
281.507 178.238 li
281.398 178.082 li
281.335 178.035 li
281.226 178.082 li
281.07 178.082 li
280.964 178.106 280.867 178.176 280.773 178.301 cv
280.679 178.426 280.578 178.563 280.476 178.707 cv
280.476 178.832 li
280.398 178.895 li
280.398 179.113 li
280.242 179.27 li
280.054 179.801 li
280.07 179.942 li
279.96 180.16 li
280.007 180.426 li
279.929 180.457 li
279.914 180.801 li
279.914 180.863 li
280.07 181.004 li
280.117 181.254 li
280.289 181.301 li
280.304 181.395 li
280.507 181.442 li
280.664 181.473 li
280.714 181.442 280.781 181.426 280.867 181.426 cv
280.945 181.426 li
281.046 181.387 281.136 181.363 281.21 181.363 cv
281.273 181.344 281.343 181.317 281.429 181.285 cv
281.523 181.16 281.656 181.098 281.835 181.098 cv
281.914 181.098 li
281.953 181.098 281.98 181.078 281.992 181.035 cv
282.085 180.903 282.226 180.813 282.414 180.77 cv
282.64 180.574 282.773 180.418 282.804 180.301 cv
282.906 180.238 282.976 180.137 283.007 179.988 cv
283.085 179.942 li
283.117 179.676 li
283.492 179.731 283.679 179.91 283.679 180.223 cv
283.679 180.317 li
cp
f
287.664 180.442 mo
287.664 180.629 287.632 180.746 287.57 180.785 cv
287.507 180.832 li
287.46 181.004 li
287.257 181.067 li
287.203 181.192 287.121 181.293 287.007 181.363 cv
286.898 181.395 li
286.742 181.567 li
286.601 181.598 li
286.546 181.746 286.433 181.824 286.257 181.832 cv
286.234 181.856 286.199 181.903 286.148 181.973 cv
286.023 182.059 285.898 182.106 285.773 182.113 cv
285.71 182.129 li
285.632 182.238 li
285.398 182.238 li
285.195 182.379 li
284.71 182.02 li
284.476 181.551 li
284.46 180.973 li
284.414 180.817 li
284.57 179.77 li
284.617 179.723 li
284.585 179.598 284.57 179.485 284.57 179.379 cv
284.57 179.309 284.593 179.156 284.648 178.926 cv
284.71 178.645 li
284.687 178.606 284.656 178.551 284.617 178.488 cv
284.679 178.27 li
284.71 177.988 li
284.726 177.957 li
284.695 177.887 284.671 177.809 284.664 177.723 cv
284.671 177.703 284.683 177.684 284.695 177.66 cv
284.703 177.629 284.71 177.606 284.71 177.582 cv
284.679 177.512 284.664 177.442 284.664 177.379 cv
284.664 177.192 284.773 177.106 284.992 177.113 cv
285.132 177.129 li
285.234 177.078 285.296 177.051 285.32 177.051 cv
285.476 177.051 285.585 177.141 285.648 177.317 cv
285.648 177.363 li
285.679 177.457 285.695 177.551 285.695 177.645 cv
285.695 177.719 285.683 177.77 285.664 177.801 cv
285.585 178.395 li
285.664 178.567 li
285.664 178.715 285.617 178.844 285.523 178.957 cv
285.57 179.098 li
285.414 179.551 li
285.402 179.75 285.382 179.903 285.351 180.004 cv
285.351 180.301 li
285.289 180.473 li
285.289 180.598 li
285.273 180.879 li
285.289 181.082 li
285.476 181.238 li
285.617 181.207 li
285.648 181.176 li
285.742 181.176 li
285.898 181.129 li
286.023 181.004 li
286.07 180.926 li
286.164 180.926 li
286.179 180.863 li
286.226 180.817 li
286.289 180.863 li
286.414 180.738 li
286.476 180.754 li
286.507 180.66 li
286.523 180.66 li
286.57 180.567 li
286.679 180.52 li
286.898 180.41 li
287.085 180.285 287.265 180.223 287.445 180.223 cv
287.492 180.223 li
287.574 180.278 287.632 180.348 287.664 180.442 cv
287.664 180.442 li
cp
286.445 174.082 mo
286.445 174.176 286.382 174.266 286.257 174.348 cv
286.257 174.363 li
286.101 174.551 285.964 174.656 285.851 174.676 cv
285.679 174.895 li
285.554 175.051 li
285.289 175.129 li
285.164 175.285 li
284.976 175.395 li
284.664 175.66 li
284.46 175.488 li
284.507 175.176 li
284.632 174.973 li
284.64 174.86 284.703 174.762 284.82 174.676 cv
284.82 174.629 li
284.898 174.582 li
284.914 174.41 li
285.101 174.348 li
285.101 174.254 li
285.242 174.223 li
285.273 174.067 285.339 173.953 285.445 173.879 cv
285.492 173.848 li
285.554 173.785 li
285.648 173.488 li
286.179 173.613 286.445 173.813 286.445 174.082 cv
286.445 174.082 li
cp
f
292.039 177.879 mo
292.039 177.953 291.964 178.02 291.82 178.082 cv
291.789 178.125 291.73 178.16 291.648 178.192 cv
291.531 178.246 291.449 178.285 291.398 178.317 cv
291.148 178.238 li
291.023 178.332 290.859 178.379 290.664 178.379 cv
290.523 178.332 li
290.414 178.442 li
290.085 178.442 li
289.882 178.567 li
289.789 178.535 289.703 178.52 289.632 178.52 cv
289.601 178.543 289.542 178.559 289.46 178.567 cv
289.417 178.567 289.375 178.559 289.335 178.535 cv
289.289 178.988 li
289.304 179.317 li
289.273 179.738 li
289.289 180.207 li
289.335 180.41 li
289.335 180.582 li
289.492 180.942 li
289.468 180.965 289.46 180.996 289.46 181.035 cv
289.46 181.09 289.546 181.129 289.726 181.16 cv
289.742 181.301 li
289.835 181.332 li
289.976 181.442 li
290.07 181.504 li
290.152 181.496 290.21 181.488 290.242 181.488 cv
290.312 181.488 290.386 181.5 290.46 181.52 cv
290.492 181.5 290.558 181.442 290.664 181.348 cv
290.734 181.285 290.804 181.254 290.867 181.254 cv
290.875 181.254 290.886 181.254 290.898 181.254 cv
290.917 181.266 290.929 181.27 290.929 181.27 cv
291 181.113 291.132 181.016 291.32 180.973 cv
291.484 180.973 291.625 181.028 291.742 181.129 cv
291.742 181.207 li
291.742 181.481 291.64 181.653 291.445 181.723 cv
291.382 181.891 291.23 182 290.992 182.051 cv
290.851 182.176 li
290.695 182.176 li
290.414 182.254 li
290.351 182.262 290.261 182.27 290.148 182.27 cv
290.085 182.27 290.015 182.254 289.945 182.223 cv
289.789 182.223 li
289.367 182.004 li
289.257 181.957 li
289.007 181.629 li
288.867 181.473 li
288.601 180.879 li
288.507 180.301 li
288.523 180.16 li
288.429 180.035 li
288.492 179.863 li
288.429 179.598 li
288.507 179.52 li
288.539 179.363 li
288.507 179.223 li
288.523 179.004 li
288.476 178.801 li
288.539 178.754 li
288.539 178.551 li
288.445 178.52 li
288.226 178.567 li
288.007 178.41 li
287.976 178.41 li
287.738 178.41 287.617 178.285 287.617 178.035 cv
287.617 177.988 li
287.46 177.77 li
287.695 177.551 li
287.992 177.598 li
288.148 177.567 li
288.382 177.629 li
288.632 177.629 li
288.632 177.395 li
288.476 177.051 li
288.632 176.973 li
288.57 176.785 li
288.585 176.426 li
288.492 176.27 li
288.429 176.176 288.398 176.094 288.398 176.02 cv
288.398 175.938 288.417 175.863 288.46 175.801 cv
288.507 175.645 li
288.601 175.551 li
288.808 175.512 288.949 175.488 289.023 175.488 cv
289.281 175.488 289.421 175.606 289.445 175.832 cv
289.414 175.895 li
289.464 175.969 289.492 176.035 289.492 176.098 cv
289.492 176.11 289.484 176.129 289.476 176.16 cv
289.445 176.223 li
289.429 176.317 li
289.492 176.473 li
289.476 176.535 li
289.492 176.692 li
289.382 176.832 li
289.445 177.082 li
289.398 177.363 li
289.492 177.473 li
289.398 177.692 li
289.773 177.645 li
290.429 177.707 li
290.96 177.613 li
291.148 177.629 li
291.195 177.613 li
291.664 177.613 li
291.914 177.613 292.039 177.703 292.039 177.879 cv
292.039 177.879 li
cp
f
298.824 179.926 mo
298.8 180.012 298.769 180.11 298.73 180.223 cv
298.73 180.301 li
298.824 180.723 li
298.73 181.176 li
298.777 181.395 li
298.699 181.551 li
298.746 182.082 li
298.699 182.16 li
298.699 182.52 li
298.683 182.785 li
298.73 182.91 li
298.699 183.66 li
298.792 183.879 li
298.73 183.973 li
298.761 184.176 li
298.699 184.238 li
298.761 184.442 li
298.652 184.567 li
298.652 184.645 li
298.605 184.754 li
298.582 184.887 298.496 185.086 298.339 185.348 cv
298.261 185.645 li
298.187 185.676 298.144 185.699 298.136 185.723 cv
298.105 185.754 li
297.996 185.895 li
297.871 186.082 li
297.667 186.192 li
297.574 186.367 297.457 186.465 297.324 186.488 cv
297.292 186.528 297.265 186.555 297.246 186.567 cv
297.214 186.598 li
297.042 186.66 li
296.949 186.77 li
296.824 186.77 li
296.761 186.863 li
296.558 186.817 li
296.324 186.957 li
296.105 186.91 li
295.714 186.973 li
295.621 186.957 li
295.574 186.973 li
295.167 186.91 li
294.996 186.91 li
294.917 186.832 li
294.433 186.676 li
294.027 186.613 li
293.964 186.504 li
293.761 186.488 li
293.683 186.285 li
293.542 186.254 li
293.449 186.067 li
293.214 185.988 li
293.027 185.707 li
292.667 185.488 li
292.699 185.27 li
292.675 185.258 292.64 185.102 292.589 184.801 cv
292.589 184.664 292.613 184.508 292.667 184.332 cv
292.667 184.223 li
292.792 184.16 li
292.871 183.957 li
292.917 183.973 li
293.042 183.785 li
293.246 183.613 li
293.417 183.567 li
293.746 183.301 li
294.058 183.332 li
294.128 183.246 294.234 183.207 294.371 183.207 cv
294.546 183.301 294.636 183.41 294.636 183.535 cv
294.636 183.617 294.605 183.696 294.542 183.77 cv
294.371 183.863 li
294.183 183.988 li
294.011 184.035 li
293.902 184.238 li
293.714 184.238 li
293.652 184.363 li
293.496 184.488 li
293.496 184.676 li
293.402 184.848 li
293.449 184.957 li
293.542 185.16 li
293.808 185.317 li
293.871 185.504 li
294.183 185.754 li
294.371 185.77 li
294.589 185.942 li
294.792 185.942 li
294.933 186.067 li
295.105 186.051 li
295.199 186.129 li
295.777 186.098 li
296.136 185.988 li
296.371 185.988 li
296.621 185.848 li
296.683 185.824 296.738 185.817 296.792 185.817 cv
296.8 185.805 296.828 185.789 296.871 185.77 cv
296.933 185.676 li
297.058 185.707 li
297.105 185.66 li
297.105 185.567 li
297.113 185.512 297.167 185.473 297.261 185.442 cv
297.292 185.356 297.355 185.289 297.449 185.238 cv
297.468 185.196 297.488 185.106 297.511 184.973 cv
297.683 184.879 li
297.714 184.801 li
297.746 184.738 297.777 184.668 297.808 184.598 cv
297.824 184.551 li
297.855 184.082 li
297.902 184.051 li
297.902 183.863 li
297.855 183.676 li
297.933 183.535 li
297.91 183.379 297.902 183.27 297.902 183.207 cv
297.902 183.133 297.906 183.051 297.917 182.957 cv
297.925 182.871 297.933 182.821 297.933 182.801 cv
297.933 182.192 li
297.839 182.035 li
297.933 181.785 li
297.902 181.551 li
297.902 180.926 li
297.871 180.77 li
297.917 180.692 li
297.917 180.535 li
297.917 180.485 297.921 180.449 297.933 180.426 cv
297.839 180.145 li
297.839 179.738 li
297.699 179.942 li
297.558 180.051 li
297.417 180.207 li
297.324 180.238 li
297.277 180.379 li
297.167 180.442 li
297.167 180.473 li
296.996 180.613 li
296.761 180.895 li
296.449 181.238 li
296.324 181.27 li
296.292 181.332 li
295.933 181.598 li
295.824 181.598 li
295.699 181.707 li
295.652 181.832 li
295.386 181.91 li
295.339 182.004 li
295.152 182.02 li
294.902 182.192 li
294.699 182.238 li
294.605 182.317 li
294.48 182.332 li
294.433 182.363 li
294.328 182.477 294.167 182.535 293.949 182.535 cv
293.707 182.535 293.519 182.457 293.386 182.301 cv
293.121 181.91 li
293.105 181.676 li
292.964 181.238 li
292.964 180.879 li
292.917 180.738 li
292.98 180.613 li
292.933 180.348 li
293.011 180.285 li
293.027 180.16 li
293.089 180.02 li
293.074 179.77 li
293.121 179.676 li
293.121 179.582 li
293.121 179.418 293.144 179.223 293.199 179.004 cv
293.167 178.676 li
293.199 178.379 li
293.089 177.942 li
293.121 177.863 li
293.074 177.785 li
293.214 177.41 li
293.246 177.278 293.261 177.145 293.261 177.02 cv
293.355 176.969 293.453 176.942 293.558 176.942 cv
293.621 176.942 293.687 176.957 293.761 176.988 cv
293.871 177.223 li
294.074 177.363 li
294.05 177.488 294.031 177.59 294.011 177.66 cv
294.121 177.832 li
294.074 177.957 li
294.23 178.082 li
294.089 178.348 li
294.167 178.66 li
294.074 178.801 li
294.089 178.817 li
294.011 179.332 li
294.011 179.801 li
293.949 179.879 li
293.902 180.301 li
293.792 180.426 li
293.792 180.469 293.796 180.52 293.808 180.582 cv
293.808 180.637 293.808 180.676 293.808 180.707 cv
293.886 180.926 li
293.808 181.082 li
293.824 181.27 li
293.808 181.317 li
293.816 181.41 293.824 181.457 293.824 181.457 cv
293.933 181.551 li
294.011 181.535 li
294.027 181.598 li
294.121 181.488 li
294.464 181.488 li
294.515 181.438 294.574 181.395 294.636 181.363 cv
294.824 181.238 294.988 181.168 295.136 181.145 cv
295.152 180.988 li
295.371 180.875 295.652 180.719 295.996 180.52 cv
296.042 180.426 li
296.019 180.449 296 180.457 295.98 180.457 cv
296.011 180.449 296.066 180.41 296.152 180.348 cv
296.199 180.207 li
296.292 180.067 li
296.449 180.004 li
296.558 179.863 li
296.605 179.879 li
296.683 179.832 li
296.824 179.676 li
296.886 179.66 li
296.902 179.629 li
297.121 179.395 li
297.246 179.176 li
297.339 179.156 297.417 179.098 297.48 179.004 cv
297.636 178.66 li
297.621 178.285 li
297.746 178.238 li
297.746 178.207 li
297.667 177.988 li
297.683 177.942 li
297.621 177.86 297.589 177.793 297.589 177.738 cv
297.589 177.656 297.64 177.547 297.746 177.41 cv
297.746 177.457 li
297.792 177.332 li
297.792 177.285 li
297.792 177.317 li
297.863 177.16 298.027 177.078 298.277 177.067 cv
298.667 177.442 li
298.699 177.754 li
298.824 177.957 li
298.746 178.145 li
298.761 178.238 li
298.761 178.285 li
298.738 178.317 298.718 178.356 298.699 178.395 cv
298.73 178.473 li
298.73 178.66 li
298.683 178.848 li
298.73 179.113 li
298.73 179.317 li
298.777 179.395 li
298.746 179.629 li
298.824 179.926 li
cp
f
.613971 lw
179.797 154.57 mo
294.644 353.828 li
0 0 0 rgb
@
48.4487 228.535 mo
118.086 224.957 181.328 186.828 217 126.918 cv
52.9878 385.898 mo
174.09 379.672 284.078 313.359 346.117 209.168 cv
.027451 .180392 1 rgb
@
161.258 271.496 mo
161.258 270.699 161.773 269.434 163.945 269.293 cv
164.039 269.277 164.117 269.184 164.117 269.074 cv
164.117 268.855 163.961 268.855 163.742 268.855 cv
161.758 268.855 159.945 269.871 159.914 271.34 cv
159.914 275.887 li
159.914 276.668 159.914 277.293 159.117 277.949 cv
158.429 278.527 157.664 278.574 157.226 278.59 cv
157.133 278.621 157.054 278.699 157.054 278.809 cv
157.054 279.012 157.164 279.012 157.367 279.027 cv
158.679 279.105 159.648 279.824 159.867 280.809 cv
159.914 281.027 159.914 281.059 159.914 281.777 cv
159.914 285.73 li
159.914 286.559 159.914 287.199 160.883 287.949 cv
161.648 288.559 162.961 288.777 163.742 288.777 cv
163.961 288.777 164.117 288.777 164.117 288.559 cv
164.117 288.355 164.008 288.355 163.804 288.34 cv
162.554 288.262 161.57 287.621 161.32 286.605 cv
161.258 286.418 161.258 286.387 161.258 285.668 cv
161.258 281.48 li
161.258 280.559 161.101 280.23 160.461 279.59 cv
160.039 279.168 159.461 278.965 158.898 278.809 cv
160.539 278.355 161.258 277.434 161.258 276.277 cv
161.258 271.496 li
cp
1 0 0 rgb
f
171.812 271.934 mo
171.937 271.496 172.172 271.387 172.953 271.387 cv
174.547 271.387 175.281 272.059 175.281 273.527 cv
175.281 274.668 174.797 275.543 173.937 276.027 cv
173.265 276.418 172.312 276.559 170.515 276.559 cv
171.812 271.934 li
cp
170.312 277.199 mo
171.609 277.199 172.453 277.277 172.844 277.434 cv
173.672 277.777 174.172 278.652 174.172 279.73 cv
174.172 281.887 172.687 283.199 170.265 283.199 cv
169.422 283.199 168.984 282.902 168.984 282.355 cv
168.984 282.121 169.219 281.168 169.687 279.574 cv
169.937 278.668 170.062 278.215 170.312 277.199 cv
170.312 277.199 li
cp
165.422 283.793 mo
171.031 283.793 li
174.172 283.793 176.312 282.152 176.312 279.809 cv
176.312 279.074 176.078 278.371 175.64 277.934 cv
175.234 277.48 174.844 277.246 173.812 276.793 cv
175.219 276.465 175.797 276.23 176.437 275.668 cv
177 275.184 177.297 274.512 177.297 273.715 cv
177.297 271.824 175.875 270.777 173.312 270.777 cv
168.172 270.777 li
168.172 271.105 li
169.406 271.199 169.703 271.355 169.703 271.918 cv
169.703 272.215 169.625 272.715 169.484 273.199 cv
167.031 281.996 li
166.672 283.152 166.531 283.277 165.422 283.48 cv
165.422 283.793 li
cp
f
182.051 286.121 mo
182.051 286.918 181.535 288.199 179.363 288.34 cv
179.269 288.355 179.191 288.434 179.191 288.559 cv
179.191 288.777 179.41 288.777 179.582 288.777 cv
181.519 288.777 183.379 287.793 183.394 286.277 cv
183.394 281.746 li
183.394 280.965 183.394 280.324 184.191 279.668 cv
184.879 279.09 185.644 279.059 186.082 279.027 cv
186.176 279.012 186.254 278.934 186.254 278.809 cv
186.254 278.621 186.144 278.621 185.941 278.59 cv
184.629 278.512 183.676 277.793 183.457 276.824 cv
183.394 276.605 183.394 276.559 183.394 275.84 cv
183.394 271.902 li
183.394 271.059 183.394 270.418 182.441 269.668 cv
181.644 269.059 180.269 268.855 179.582 268.855 cv
179.41 268.855 179.191 268.855 179.191 269.074 cv
179.191 269.277 179.301 269.277 179.504 269.293 cv
180.769 269.371 181.738 270.012 182.004 271.027 cv
182.051 271.199 182.051 271.246 182.051 271.965 cv
182.051 276.137 li
182.051 277.059 182.222 277.402 182.847 278.043 cv
183.269 278.449 183.847 278.652 184.41 278.809 cv
182.769 279.277 182.051 280.184 182.051 281.34 cv
182.051 286.121 li
cp
f
317.599 206.638 mo
317.427 206.825 317.333 206.95 317.146 207.184 cv
316.693 207.778 316.458 207.98 316.24 207.98 cv
315.943 207.98 315.755 207.716 315.615 207.168 cv
315.583 206.997 315.552 206.888 315.537 206.825 cv
315.037 204.809 314.818 203.903 314.818 203.591 cv
315.693 202.059 316.412 201.184 316.771 201.184 cv
316.896 201.184 317.052 201.247 317.255 201.341 cv
317.49 201.48 317.63 201.528 317.787 201.528 cv
318.208 201.528 318.49 201.23 318.49 200.809 cv
318.49 200.388 318.146 200.075 317.677 200.075 cv
316.802 200.075 316.037 200.793 314.662 202.918 cv
314.443 201.825 li
314.162 200.466 313.943 200.075 313.412 200.075 cv
312.974 200.075 312.287 200.247 311.083 200.653 cv
310.865 200.73 li
310.943 201.028 li
311.693 200.841 311.88 200.809 312.052 200.809 cv
312.552 200.809 312.677 200.98 312.943 202.184 cv
313.521 204.638 li
311.896 206.966 li
311.49 207.559 311.099 207.918 310.88 207.918 cv
310.755 207.918 310.552 207.855 310.365 207.747 cv
310.099 207.605 309.88 207.543 309.724 207.543 cv
309.349 207.543 309.052 207.841 309.052 208.23 cv
309.052 208.763 309.443 209.075 310.037 209.075 cv
310.662 209.075 310.896 208.903 311.896 207.684 cv
312.427 207.043 312.849 206.513 313.693 205.355 cv
314.287 207.747 li
314.537 208.763 314.802 209.075 315.443 209.075 cv
316.193 209.075 316.708 208.591 317.865 206.809 cv
317.599 206.638 li
cp
f
323.041 203.067 mo
323.134 202.754 323.306 202.661 323.884 202.661 cv
325.072 202.661 325.619 203.161 325.619 204.254 cv
325.619 205.098 325.259 205.739 324.619 206.098 cv
324.119 206.395 323.416 206.489 322.087 206.489 cv
323.041 203.067 li
cp
321.947 206.973 mo
322.9 206.973 323.525 207.02 323.822 207.145 cv
324.416 207.395 324.791 208.036 324.791 208.833 cv
324.791 210.427 323.697 211.411 321.9 211.411 cv
321.275 211.411 320.947 211.192 320.947 210.786 cv
320.947 210.614 321.134 209.895 321.462 208.723 cv
321.666 208.052 321.744 207.723 321.947 206.973 cv
321.947 206.973 li
cp
318.306 211.848 mo
322.478 211.848 li
324.791 211.848 326.384 210.645 326.384 208.895 cv
326.384 208.348 326.197 207.833 325.884 207.504 cv
325.587 207.177 325.291 206.989 324.525 206.677 cv
325.572 206.427 325.994 206.239 326.462 205.833 cv
326.884 205.473 327.103 204.973 327.103 204.379 cv
327.103 202.989 326.056 202.223 324.15 202.223 cv
320.353 202.223 li
320.353 202.458 li
321.259 202.52 321.478 202.645 321.478 203.052 cv
321.478 203.286 321.431 203.645 321.322 204.004 cv
319.509 210.52 li
319.244 211.379 319.134 211.458 318.306 211.614 cv
318.306 211.848 li
cp
f
99.3008 131.484 mo
99.5659 131.422 99.7065 131.406 99.9258 131.406 cv
101.051 131.406 101.347 131.906 102.269 135.328 cv
102.613 136.625 103.082 138.953 103.082 139.297 cv
103.082 139.609 102.972 139.938 102.676 140.297 cv
102.051 141.109 101.66 141.625 101.441 141.859 cv
101.019 142.297 100.769 142.469 100.519 142.469 cv
100.394 142.469 100.254 142.406 100.035 142.234 cv
99.7378 142 99.5186 141.906 99.3008 141.906 cv
98.8628 141.906 98.5186 142.234 98.5186 142.688 cv
98.5186 143.172 98.9565 143.563 99.5347 143.563 cv
100.816 143.563 103.426 140.563 105.582 136.625 cv
106.926 134.172 107.488 132.734 107.488 131.766 cv
107.488 131.172 106.988 130.672 106.394 130.672 cv
105.941 130.672 105.613 130.969 105.613 131.406 cv
105.613 131.703 105.769 131.922 106.176 132.188 cv
106.551 132.406 106.691 132.578 106.691 132.859 cv
106.691 133.656 105.957 135.203 104.269 138.016 cv
103.863 135.703 li
103.566 133.953 102.457 130.672 102.144 130.672 cv
102.066 130.672 li
102.051 130.688 101.972 130.688 101.894 130.688 cv
101.707 130.703 100.988 130.828 99.9409 131.031 cv
99.8467 131.047 99.5815 131.109 99.3008 131.141 cv
99.3008 131.484 li
cp
f
112.461 133.664 mo
112.554 133.352 112.726 133.258 113.304 133.258 cv
114.492 133.258 115.039 133.758 115.039 134.852 cv
115.039 135.695 114.679 136.336 114.039 136.695 cv
113.539 136.992 112.836 137.086 111.508 137.086 cv
112.461 133.664 li
cp
111.367 137.57 mo
112.32 137.57 112.945 137.617 113.242 137.742 cv
113.836 137.992 114.211 138.633 114.211 139.43 cv
114.211 141.023 113.117 142.008 111.32 142.008 cv
110.695 142.008 110.367 141.789 110.367 141.383 cv
110.367 141.211 110.554 140.492 110.883 139.32 cv
111.086 138.648 111.164 138.32 111.367 137.57 cv
111.367 137.57 li
cp
107.726 142.445 mo
111.898 142.445 li
114.211 142.445 115.804 141.242 115.804 139.492 cv
115.804 138.945 115.617 138.43 115.304 138.102 cv
115.008 137.773 114.711 137.586 113.945 137.273 cv
114.992 137.023 115.414 136.836 115.883 136.43 cv
116.304 136.07 116.523 135.57 116.523 134.977 cv
116.523 133.586 115.476 132.82 113.57 132.82 cv
109.773 132.82 li
109.773 133.055 li
110.679 133.117 110.898 133.242 110.898 133.648 cv
110.898 133.883 110.851 134.242 110.742 134.602 cv
108.929 141.117 li
108.664 141.977 108.554 142.055 107.726 142.211 cv
107.726 142.445 li
cp
f
1 lw
126.164 380.211 mo
55.6245 261.273 li
0 0 0 rgb
@
51.5308 254.371 mo
57.7188 259.441 li
53.0107 262.23 li
51.5308 254.371 li
cp
130.261 387.113 mo
124.074 382.043 li
128.781 379.254 li
130.261 387.113 li
cp
f
.25 lw
51.5308 254.371 mo
57.7188 259.441 li
53.0107 262.23 li
51.5308 254.371 li
cp
130.261 387.113 mo
124.074 382.043 li
128.781 379.254 li
130.261 387.113 li
cp
@
.613971 lw
228.972 151.191 mo
46.5698 256.617 li
312.902 282.004 mo
111.765 398.352 li
@
81.2759 310.282 mo
77.9639 310.282 li
77.9639 310.579 li
78.9331 310.657 79.1201 310.798 79.1201 311.298 cv
79.1201 311.579 78.98 312.032 78.7451 312.501 cv
75.4009 319.095 li
74.6831 311.892 li
74.6509 311.626 li
74.6509 310.892 74.917 310.657 75.8857 310.579 cv
75.8857 310.282 li
71.605 310.282 li
71.605 310.579 li
72.6509 310.61 72.8228 310.735 72.9478 311.61 cv
73.1201 312.86 li
70.0259 319.095 li
69.2451 311.813 li
69.23 311.72 69.23 311.595 69.23 311.563 cv
69.23 310.86 69.4331 310.704 70.5259 310.579 cv
70.5259 310.282 li
66.3081 310.282 li
66.3081 310.579 li
66.8857 310.642 67.0581 310.704 67.2139 310.86 cv
67.4331 311.063 67.4951 311.407 67.7139 313.048 cv
68.8228 322.329 li
69.167 322.329 li
73.1509 314.173 li
73.2451 314.173 li
74.1357 322.329 li
74.4951 322.329 li
79.9331 311.86 li
80.417 310.954 80.5889 310.798 81.2759 310.579 cv
81.2759 310.282 li
cp
f
86.4136 202.707 mo
201.265 401.965 li
@
1.34191 lw
190.515 173.574 mo
234.078 148.23 li
@
238.535 145.637 mo
233.414 151.781 li
234.519 147.973 li
230.66 147.051 li
238.535 145.637 li
cp
f
.335478 lw
238.535 145.637 mo
233.414 151.781 li
234.519 147.973 li
230.66 147.051 li
238.535 145.637 li
cp
@
1.34191 lw
268.839 307.547 mo
326.984 273.375 li
@
331.429 270.762 mo
326.335 276.93 li
327.425 273.117 li
323.562 272.215 li
331.429 270.762 li
cp
f
.335478 lw
331.429 270.762 mo
326.335 276.93 li
327.425 273.117 li
323.562 272.215 li
331.429 270.762 li
cp
@
343.796 267.695 mo
343.89 267.414 344.062 267.32 344.484 267.32 cv
345.578 267.32 346.125 267.82 346.125 268.805 cv
346.125 270.117 345.281 270.805 343.625 270.805 cv
343.406 270.805 343.265 270.789 342.937 270.727 cv
343.796 267.695 li
cp
347.234 275.367 mo
346.656 275.336 346.39 275.102 346.14 274.414 cv
344.906 271.164 li
345.921 270.945 346.359 270.758 346.843 270.336 cv
347.281 269.945 347.515 269.43 347.515 268.836 cv
347.515 267.602 346.531 266.93 344.765 266.93 cv
341.468 266.93 li
341.468 267.133 li
342.031 267.211 342.093 267.227 342.218 267.32 cv
342.328 267.383 342.406 267.555 342.406 267.695 cv
342.406 267.852 342.343 268.164 342.25 268.523 cv
340.625 274.398 li
340.375 275.18 340.296 275.258 339.546 275.367 cv
339.546 275.586 li
342.781 275.586 li
342.781 275.367 li
341.968 275.273 341.875 275.195 341.875 274.758 cv
341.875 274.633 341.921 274.461 342.046 273.992 cv
342.781 271.227 li
343.64 271.289 li
345.281 275.586 li
347.234 275.586 li
347.234 275.367 li
cp
f
39.6558 227.688 mo
39.7495 227.313 39.9839 227.188 40.562 227.188 cv
42.0469 227.188 42.7808 227.859 42.7808 229.188 cv
42.7808 230.969 41.6396 231.891 39.4058 231.891 cv
39.1089 231.891 38.9219 231.859 38.4839 231.797 cv
39.6558 227.688 li
cp
44.2969 238.078 mo
43.4995 238.016 43.1396 237.719 42.812 236.781 cv
41.1396 232.391 li
42.5146 232.078 43.1089 231.828 43.7495 231.25 cv
44.3438 230.734 44.6719 230.031 44.6719 229.234 cv
44.6719 227.563 43.3438 226.641 40.937 226.641 cv
36.4995 226.641 li
36.4995 226.938 li
37.2495 227.047 37.3276 227.063 37.5146 227.188 cv
37.6558 227.281 37.7646 227.484 37.7646 227.688 cv
37.7646 227.906 37.6719 228.328 37.5469 228.813 cv
35.3438 236.75 li
35.0146 237.797 34.8896 237.906 33.8896 238.078 cv
33.8896 238.359 li
38.2646 238.359 li
38.2646 238.078 li
37.1719 237.922 37.0469 237.844 37.0469 237.25 cv
37.0469 237.063 37.1089 236.828 37.2646 236.203 cv
38.2646 232.453 li
39.437 232.547 li
41.6396 238.359 li
44.2969 238.359 li
44.2969 238.078 li
cp
f
50.4258 232.395 mo
46.8008 232.395 li
46.8008 232.598 li
47.6289 232.676 47.8315 232.785 47.8315 233.176 cv
47.8315 233.363 47.7686 233.66 47.6758 233.988 cv
46.0508 239.863 li
45.8159 240.629 45.7217 240.707 44.9717 240.832 cv
44.9717 241.051 li
51.7217 241.051 li
52.5039 238.676 li
52.2378 238.598 li
51.7686 239.551 51.4097 239.973 50.8315 240.27 cv
50.3628 240.488 49.8159 240.566 48.6597 240.566 cv
47.6597 240.566 47.3159 240.473 47.3159 240.129 cv
47.3159 240.035 47.3936 239.707 47.4565 239.457 cv
49.0815 233.582 li
49.2847 232.91 49.6289 232.66 50.4258 232.598 cv
50.4258 232.395 li
cp
f
46.0781 383.508 mo
46.1719 383.133 46.4063 383.008 46.9839 383.008 cv
48.4692 383.008 49.2031 383.68 49.2031 385.008 cv
49.2031 386.789 48.062 387.711 45.8281 387.711 cv
45.5313 387.711 45.3442 387.68 44.9063 387.617 cv
46.0781 383.508 li
cp
50.7192 393.898 mo
49.9219 393.836 49.562 393.539 49.2339 392.602 cv
47.562 388.211 li
48.937 387.898 49.5313 387.648 50.1719 387.07 cv
50.7661 386.555 51.0942 385.852 51.0942 385.055 cv
51.0942 383.383 49.7661 382.461 47.3589 382.461 cv
42.9219 382.461 li
42.9219 382.758 li
43.6719 382.867 43.75 382.883 43.937 383.008 cv
44.0781 383.102 44.187 383.305 44.187 383.508 cv
44.187 383.727 44.0942 384.148 43.9692 384.633 cv
41.7661 392.57 li
41.437 393.617 41.312 393.727 40.312 393.898 cv
40.312 394.18 li
44.687 394.18 li
44.687 393.898 li
43.5942 393.742 43.4692 393.664 43.4692 393.07 cv
43.4692 392.883 43.5313 392.648 43.687 392.023 cv
44.687 388.273 li
45.8589 388.367 li
48.062 394.18 li
50.7192 394.18 li
50.7192 393.898 li
cp
f
55.5781 388.98 mo
55.6719 388.699 55.8442 388.605 56.2661 388.605 cv
57.3589 388.605 57.9063 389.105 57.9063 390.09 cv
57.9063 391.402 57.062 392.09 55.4063 392.09 cv
55.187 392.09 55.0469 392.074 54.7192 392.012 cv
55.5781 388.98 li
cp
59.0161 396.652 mo
58.437 396.621 58.1719 396.387 57.9219 395.699 cv
56.687 392.449 li
57.7031 392.23 58.1411 392.043 58.625 391.621 cv
59.062 391.23 59.2969 390.715 59.2969 390.121 cv
59.2969 388.887 58.312 388.215 56.5469 388.215 cv
53.25 388.215 li
53.25 388.418 li
53.812 388.496 53.875 388.512 54 388.605 cv
54.1089 388.668 54.187 388.84 54.187 388.98 cv
54.187 389.137 54.125 389.449 54.0313 389.809 cv
52.4063 395.684 li
52.1563 396.465 52.0781 396.543 51.3281 396.652 cv
51.3281 396.871 li
54.562 396.871 li
54.562 396.652 li
53.75 396.559 53.6563 396.48 53.6563 396.043 cv
53.6563 395.918 53.7031 395.746 53.8281 395.277 cv
54.562 392.512 li
55.4219 392.574 li
57.062 396.871 li
59.0161 396.871 li
59.0161 396.652 li
cp
f
2.06985 lw
[4 4 ] 0 dsh
210.921 250.902 mo
142.886 131.328 li
1 .129412 0 rgb
@
[] 0 dsh
143.976 138.773 mo
142.633 130.883 li
148.73 136.066 li
@
212.417 253.777 mo
212.417 252.98 212.933 251.715 215.105 251.574 cv
215.199 251.559 215.277 251.465 215.277 251.355 cv
215.277 251.137 215.121 251.137 214.902 251.137 cv
212.917 251.137 211.105 252.152 211.074 253.621 cv
211.074 258.168 li
211.074 258.949 211.074 259.574 210.277 260.23 cv
209.589 260.809 208.824 260.855 208.386 260.871 cv
208.292 260.902 208.214 260.98 208.214 261.09 cv
208.214 261.293 208.324 261.293 208.527 261.309 cv
209.839 261.387 210.808 262.105 211.027 263.09 cv
211.074 263.309 211.074 263.34 211.074 264.059 cv
211.074 268.012 li
211.074 268.84 211.074 269.48 212.042 270.23 cv
212.808 270.84 214.121 271.059 214.902 271.059 cv
215.121 271.059 215.277 271.059 215.277 270.84 cv
215.277 270.637 215.167 270.637 214.964 270.621 cv
213.714 270.543 212.73 269.902 212.48 268.887 cv
212.417 268.699 212.417 268.668 212.417 267.949 cv
212.417 263.762 li
212.417 262.84 212.261 262.512 211.621 261.871 cv
211.199 261.449 210.621 261.246 210.058 261.09 cv
211.699 260.637 212.417 259.715 212.417 258.559 cv
212.417 253.777 li
cp
1 0 0 rgb
f
222.976 254.215 mo
223.101 253.777 223.335 253.668 224.117 253.668 cv
225.71 253.668 226.445 254.34 226.445 255.809 cv
226.445 256.949 225.96 257.824 225.101 258.309 cv
224.429 258.699 223.476 258.84 221.679 258.84 cv
222.976 254.215 li
cp
221.476 259.48 mo
222.773 259.48 223.617 259.559 224.007 259.715 cv
224.835 260.059 225.335 260.934 225.335 262.012 cv
225.335 264.168 223.851 265.48 221.429 265.48 cv
220.585 265.48 220.148 265.184 220.148 264.637 cv
220.148 264.402 220.382 263.449 220.851 261.855 cv
221.101 260.949 221.226 260.496 221.476 259.48 cv
221.476 259.48 li
cp
216.585 266.074 mo
222.195 266.074 li
225.335 266.074 227.476 264.434 227.476 262.09 cv
227.476 261.355 227.242 260.652 226.804 260.215 cv
226.398 259.762 226.007 259.527 224.976 259.074 cv
226.382 258.746 226.96 258.512 227.601 257.949 cv
228.164 257.465 228.46 256.793 228.46 255.996 cv
228.46 254.105 227.039 253.059 224.476 253.059 cv
219.335 253.059 li
219.335 253.387 li
220.57 253.48 220.867 253.637 220.867 254.199 cv
220.867 254.496 220.789 254.996 220.648 255.48 cv
218.195 264.277 li
217.835 265.434 217.695 265.559 216.585 265.762 cv
216.585 266.074 li
cp
f
232.648 250.844 mo
232.726 250.656 232.773 250.531 232.773 250.375 cv
232.773 249.953 232.398 249.594 231.945 249.594 cv
231.523 249.594 231.257 249.875 231.148 250.266 cv
229.398 256.703 li
229.398 256.734 229.335 256.906 229.335 256.922 cv
229.335 257.078 229.726 257.188 229.835 257.188 cv
229.929 257.188 229.945 257.141 230.039 256.938 cv
232.648 250.844 li
cp
f
238.261 268.402 mo
238.261 269.199 237.746 270.48 235.574 270.621 cv
235.48 270.637 235.402 270.715 235.402 270.84 cv
235.402 271.059 235.621 271.059 235.792 271.059 cv
237.73 271.059 239.589 270.074 239.605 268.559 cv
239.605 264.027 li
239.605 263.246 239.605 262.605 240.402 261.949 cv
241.089 261.371 241.855 261.34 242.292 261.309 cv
242.386 261.293 242.464 261.215 242.464 261.09 cv
242.464 260.902 242.355 260.902 242.152 260.871 cv
240.839 260.793 239.886 260.074 239.667 259.105 cv
239.605 258.887 239.605 258.84 239.605 258.121 cv
239.605 254.184 li
239.605 253.34 239.605 252.699 238.652 251.949 cv
237.855 251.34 236.48 251.137 235.792 251.137 cv
235.621 251.137 235.402 251.137 235.402 251.355 cv
235.402 251.559 235.511 251.559 235.714 251.574 cv
236.98 251.652 237.949 252.293 238.214 253.309 cv
238.261 253.48 238.261 253.527 238.261 254.246 cv
238.261 258.418 li
238.261 259.34 238.433 259.684 239.058 260.324 cv
239.48 260.73 240.058 260.934 240.621 261.09 cv
238.98 261.559 238.261 262.465 238.261 263.621 cv
238.261 268.402 li
cp
f
127.082 114.926 mo
127.347 114.863 127.488 114.848 127.707 114.848 cv
128.832 114.848 129.129 115.348 130.051 118.77 cv
130.394 120.066 130.863 122.395 130.863 122.738 cv
130.863 123.051 130.754 123.379 130.457 123.738 cv
129.832 124.551 129.441 125.066 129.222 125.301 cv
128.801 125.738 128.551 125.91 128.301 125.91 cv
128.176 125.91 128.035 125.848 127.816 125.676 cv
127.519 125.441 127.301 125.348 127.082 125.348 cv
126.644 125.348 126.301 125.676 126.301 126.129 cv
126.301 126.613 126.738 127.004 127.316 127.004 cv
128.597 127.004 131.207 124.004 133.363 120.066 cv
134.707 117.613 135.269 116.176 135.269 115.207 cv
135.269 114.613 134.769 114.113 134.176 114.113 cv
133.722 114.113 133.394 114.41 133.394 114.848 cv
133.394 115.145 133.551 115.363 133.957 115.629 cv
134.332 115.848 134.472 116.02 134.472 116.301 cv
134.472 117.098 133.738 118.645 132.051 121.457 cv
131.644 119.145 li
131.347 117.395 130.238 114.113 129.926 114.113 cv
129.847 114.113 li
129.832 114.129 129.754 114.129 129.676 114.129 cv
129.488 114.145 128.769 114.27 127.722 114.473 cv
127.629 114.488 127.363 114.551 127.082 114.582 cv
127.082 114.926 li
cp
f
139.367 107.668 mo
139.445 107.48 139.492 107.355 139.492 107.199 cv
139.492 106.777 139.117 106.418 138.664 106.418 cv
138.242 106.418 137.976 106.699 137.867 107.09 cv
136.117 113.527 li
136.117 113.559 136.054 113.73 136.054 113.746 cv
136.054 113.902 136.445 114.012 136.554 114.012 cv
136.648 114.012 136.664 113.965 136.758 113.762 cv
139.367 107.668 li
cp
f
140.242 119.035 mo
140.336 118.723 140.508 118.629 141.086 118.629 cv
142.273 118.629 142.82 119.129 142.82 120.223 cv
142.82 121.066 142.461 121.707 141.82 122.066 cv
141.32 122.363 140.617 122.457 139.289 122.457 cv
140.242 119.035 li
cp
139.148 122.941 mo
140.101 122.941 140.726 122.988 141.023 123.113 cv
141.617 123.363 141.992 124.004 141.992 124.801 cv
141.992 126.395 140.898 127.379 139.101 127.379 cv
138.476 127.379 138.148 127.16 138.148 126.754 cv
138.148 126.582 138.336 125.863 138.664 124.691 cv
138.867 124.02 138.945 123.691 139.148 122.941 cv
139.148 122.941 li
cp
135.508 127.816 mo
139.679 127.816 li
141.992 127.816 143.586 126.613 143.586 124.863 cv
143.586 124.316 143.398 123.801 143.086 123.473 cv
142.789 123.145 142.492 122.957 141.726 122.645 cv
142.773 122.395 143.195 122.207 143.664 121.801 cv
144.086 121.441 144.304 120.941 144.304 120.348 cv
144.304 118.957 143.258 118.191 141.351 118.191 cv
137.554 118.191 li
137.554 118.426 li
138.461 118.488 138.679 118.613 138.679 119.02 cv
138.679 119.254 138.633 119.613 138.523 119.973 cv
136.711 126.488 li
136.445 127.348 136.336 127.426 135.508 127.582 cv
135.508 127.816 li
cp
f
1 lw
167.859 237.055 mo
186.746 226 li
0 0 0 rgb
@
193.671 221.945 mo
188.566 228.102 li
185.801 223.379 li
193.671 221.945 li
cp
f
.25 lw
193.671 221.945 mo
188.566 228.102 li
185.801 223.379 li
193.671 221.945 li
cp
@
177.304 213.887 mo
177.976 213.918 178.414 214.402 178.414 215.105 cv
178.414 216.777 177.429 219.121 176.054 220.59 cv
175.57 221.137 174.898 221.48 174.32 221.48 cv
173.617 221.48 173.164 220.902 173.164 219.98 cv
173.164 218.902 173.914 216.855 174.773 215.621 cv
175.57 214.465 176.508 213.824 177.304 213.887 cv
177.304 213.887 li
cp
180.398 220.043 mo
180.086 220.34 179.976 220.434 179.836 220.59 cv
179.242 221.215 178.976 221.418 178.804 221.418 cv
178.633 221.418 178.523 221.293 178.523 221.152 cv
178.523 220.762 179.351 217.355 180.289 213.918 cv
180.351 213.73 180.367 213.684 180.414 213.512 cv
180.273 213.449 li
179.054 213.59 li
178.992 213.637 li
178.773 214.605 li
178.617 213.871 178.039 213.449 177.179 213.449 cv
174.554 213.449 171.492 217.09 171.492 220.246 cv
171.492 221.637 172.242 222.449 173.523 222.449 cv
174.914 222.449 175.773 221.793 177.523 219.324 cv
177.117 220.871 177.07 221.137 177.07 221.605 cv
177.07 222.184 177.304 222.434 177.867 222.434 cv
178.664 222.434 179.164 222.059 180.633 220.246 cv
180.398 220.043 li
cp
f
177.304 213.887 mo
177.976 213.918 178.414 214.402 178.414 215.105 cv
178.414 216.777 177.429 219.121 176.054 220.59 cv
175.57 221.137 174.898 221.48 174.32 221.48 cv
173.617 221.48 173.164 220.902 173.164 219.98 cv
173.164 218.902 173.914 216.855 174.773 215.621 cv
175.57 214.465 176.508 213.824 177.304 213.887 cv
177.304 213.887 li
cp
180.398 220.043 mo
180.086 220.34 179.976 220.434 179.836 220.59 cv
179.242 221.215 178.976 221.418 178.804 221.418 cv
178.633 221.418 178.523 221.293 178.523 221.152 cv
178.523 220.762 179.351 217.355 180.289 213.918 cv
180.351 213.73 180.367 213.684 180.414 213.512 cv
180.273 213.449 li
179.054 213.59 li
178.992 213.637 li
178.773 214.605 li
178.617 213.871 178.039 213.449 177.179 213.449 cv
174.554 213.449 171.492 217.09 171.492 220.246 cv
171.492 221.637 172.242 222.449 173.523 222.449 cv
174.914 222.449 175.773 221.793 177.523 219.324 cv
177.117 220.871 177.07 221.137 177.07 221.605 cv
177.07 222.184 177.304 222.434 177.867 222.434 cv
178.664 222.434 179.164 222.059 180.633 220.246 cv
180.398 220.043 li
cp
f
15.9136 365.758 mo
15.9917 365.508 15.9917 365.461 15.9917 365.336 cv
15.9917 365.023 15.7256 364.852 15.4609 364.852 cv
15.2886 364.852 14.9917 364.961 14.8359 365.227 cv
14.8037 365.32 14.6636 365.883 14.5859 366.195 cv
14.4609 366.664 14.3359 367.148 14.2256 367.633 cv
13.4136 370.867 li
13.3506 371.133 12.5698 372.383 11.3979 372.383 cv
10.4756 372.383 10.2729 371.602 10.2729 370.93 cv
10.2729 370.117 10.5859 368.992 11.1948 367.414 cv
11.4756 366.68 11.5537 366.492 11.5537 366.133 cv
11.5537 365.32 10.9756 364.664 10.0859 364.664 cv
8.38281 364.664 7.71094 367.258 7.71094 367.414 cv
7.71094 367.602 7.89795 367.602 7.92871 367.602 cv
8.1167 367.602 8.13281 367.57 8.21094 367.273 cv
8.69482 365.586 9.41357 365.055 10.0229 365.055 cv
10.1787 365.055 10.4756 365.055 10.4756 365.633 cv
10.4756 366.07 10.3037 366.539 10.1787 366.883 cv
9.46094 368.789 9.13281 369.805 9.13281 370.648 cv
9.13281 372.242 10.2578 372.789 11.3198 372.789 cv
12.0229 372.789 12.6328 372.477 13.1328 371.977 cv
12.8979 372.914 12.6787 373.789 11.9609 374.742 cv
11.5078 375.352 10.8198 375.867 9.9917 375.867 cv
9.7417 375.867 8.92871 375.82 8.63281 375.117 cv
8.91357 375.117 9.14795 375.117 9.39795 374.898 cv
9.58594 374.742 9.75781 374.508 9.75781 374.164 cv
9.75781 373.602 9.27295 373.539 9.10059 373.539 cv
8.67871 373.539 8.08594 373.82 8.08594 374.695 cv
8.08594 375.602 8.88281 376.258 9.9917 376.258 cv
11.8359 376.258 13.6948 374.633 14.1948 372.602 cv
15.9136 365.758 li
cp
.00392199 .00392199 .00392199 rgb
f
67.3076 420.543 mo
67.418 420.074 67.8398 418.434 69.0898 418.434 cv
69.1826 418.434 69.605 418.434 69.98 418.668 cv
69.48 418.762 69.1206 419.199 69.1206 419.637 cv
69.1206 419.918 69.3237 420.262 69.8076 420.262 cv
70.1987 420.262 70.7769 419.934 70.7769 419.215 cv
70.7769 418.293 69.7148 418.043 69.105 418.043 cv
68.0737 418.043 67.4326 418.98 67.23 419.402 cv
66.7769 418.215 65.8076 418.043 65.293 418.043 cv
63.418 418.043 62.4019 420.355 62.4019 420.793 cv
62.4019 420.98 62.5737 420.98 62.6206 420.98 cv
62.7607 420.98 62.8076 420.949 62.855 420.777 cv
63.4648 418.887 64.6357 418.434 65.2456 418.434 cv
65.5898 418.434 66.2148 418.59 66.2148 419.637 cv
66.2148 420.184 65.918 421.387 65.2456 423.902 cv
64.9648 425.012 64.3398 425.762 63.543 425.762 cv
63.4326 425.762 63.0269 425.762 62.6519 425.527 cv
63.105 425.449 63.4956 425.074 63.4956 424.559 cv
63.4956 424.074 63.105 423.934 62.8237 423.934 cv
62.293 423.934 61.8398 424.402 61.8398 424.98 cv
61.8398 425.809 62.7456 426.168 63.5269 426.168 cv
64.7148 426.168 65.355 424.902 65.418 424.793 cv
65.6357 425.465 66.2769 426.168 67.355 426.168 cv
69.1987 426.168 70.2148 423.855 70.2148 423.402 cv
70.2148 423.215 70.0576 423.215 70.0107 423.215 cv
69.8398 423.215 69.8076 423.293 69.7769 423.418 cv
69.1826 425.34 67.9648 425.762 67.3857 425.762 cv
66.6826 425.762 66.4019 425.199 66.4019 424.59 cv
66.4019 424.184 66.5107 423.793 66.6987 423.012 cv
67.3076 420.543 li
cp
0 0 0 rgb
f
55.2944 16.0864 mo
55.2944 16.2739 55.2622 16.3911 55.2002 16.4302 cv
55.1372 16.4771 li
55.0903 16.6489 li
54.8872 16.7114 li
54.8335 16.8364 54.7515 16.938 54.6372 17.0083 cv
54.5283 17.0396 li
54.3726 17.2114 li
54.2314 17.2427 li
54.1763 17.3911 54.0635 17.4692 53.8872 17.4771 cv
53.8643 17.5005 53.8296 17.5474 53.7783 17.6177 cv
53.6533 17.7036 53.5283 17.7505 53.4033 17.7583 cv
53.3403 17.7739 li
53.2622 17.8833 li
53.0283 17.8833 li
52.8252 18.0239 li
52.3403 17.6646 li
52.1064 17.1958 li
52.0903 16.6177 li
52.0444 16.4614 li
52.2002 15.4146 li
52.2476 15.3677 li
52.2153 15.2427 52.2002 15.1294 52.2002 15.0239 cv
52.2002 14.9536 52.2236 14.8013 52.2783 14.5708 cv
52.3403 14.2896 li
52.3174 14.2505 52.2866 14.1958 52.2476 14.1333 cv
52.3096 13.9146 li
52.3403 13.6333 li
52.3564 13.6021 li
52.3252 13.5317 52.3013 13.4536 52.2944 13.3677 cv
52.3013 13.3481 52.3135 13.3286 52.3252 13.3052 cv
52.3335 13.2739 52.3403 13.2505 52.3403 13.2271 cv
52.3096 13.1567 52.2944 13.0864 52.2944 13.0239 cv
52.2944 12.8364 52.4033 12.7505 52.6226 12.7583 cv
52.7622 12.7739 li
52.8643 12.7231 52.9263 12.6958 52.9502 12.6958 cv
53.1064 12.6958 53.2153 12.7856 53.2783 12.9614 cv
53.2783 13.0083 li
53.3096 13.1021 53.3252 13.1958 53.3252 13.2896 cv
53.3252 13.3638 53.3135 13.4146 53.2944 13.4458 cv
53.2153 14.0396 li
53.2944 14.2114 li
53.2944 14.3599 53.2476 14.4888 53.1533 14.6021 cv
53.2002 14.7427 li
53.0444 15.1958 li
53.0322 15.395 53.0122 15.5474 52.9814 15.6489 cv
52.9814 15.9458 li
52.9194 16.1177 li
52.9194 16.2427 li
52.9033 16.5239 li
52.9194 16.7271 li
53.1064 16.8833 li
53.2476 16.8521 li
53.2783 16.8208 li
53.3726 16.8208 li
53.5283 16.7739 li
53.6533 16.6489 li
53.7002 16.5708 li
53.7944 16.5708 li
53.8096 16.5083 li
53.8564 16.4614 li
53.9194 16.5083 li
54.0444 16.3833 li
54.1064 16.3989 li
54.1372 16.3052 li
54.1533 16.3052 li
54.2002 16.2114 li
54.3096 16.1646 li
54.5283 16.0552 li
54.7153 15.9302 54.8955 15.8677 55.0752 15.8677 cv
55.1226 15.8677 li
55.2046 15.9224 55.2622 15.9927 55.2944 16.0864 cv
55.2944 16.0864 li
cp
54.0752 9.72705 mo
54.0752 9.8208 54.0122 9.91064 53.8872 9.99268 cv
53.8872 10.0083 li
53.7314 10.1958 53.5942 10.3013 53.4814 10.3208 cv
53.3096 10.5396 li
53.1846 10.6958 li
52.9194 10.7739 li
52.7944 10.9302 li
52.6064 11.0396 li
52.2944 11.3052 li
52.0903 11.1333 li
52.1372 10.8208 li
52.2622 10.6177 li
52.2705 10.5044 52.3335 10.4067 52.4502 10.3208 cv
52.4502 10.2739 li
52.5283 10.2271 li
52.5444 10.0552 li
52.7314 9.99268 li
52.7314 9.89893 li
52.8726 9.86768 li
52.9033 9.71143 52.9692 9.59814 53.0752 9.52393 cv
53.1226 9.49268 li
53.1846 9.43018 li
53.2783 9.1333 li
53.8096 9.2583 54.0752 9.45752 54.0752 9.72705 cv
54.0752 9.72705 li
cp
.329412 .329412 .329412 rgb
f
63.6226 15.8989 mo
63.6226 15.9614 63.5674 16.0474 63.4653 16.1489 cv
63.3252 16.3521 li
63.2783 16.5864 li
63.1694 16.6177 li
63.1533 16.6958 li
63.0283 16.7388 62.9346 16.8364 62.8726 16.9927 cv
62.7866 17.1099 62.6924 17.1919 62.5903 17.2427 cv
62.5474 17.2739 62.5122 17.3013 62.4814 17.3208 cv
62.4194 17.4302 li
62.3096 17.4458 li
61.9976 17.6177 li
61.5903 17.6646 li
61.4814 17.6489 li
61.3096 17.6802 li
61.2314 17.6021 li
61.1143 17.5396 61.0366 17.4849 60.9976 17.4302 cv
60.8916 17.4106 60.8174 17.3325 60.7783 17.1958 cv
60.6416 17.0396 60.5752 16.9146 60.5752 16.8208 cv
60.5752 16.7739 li
60.4814 16.6333 li
60.4653 16.6177 li
60.3872 16.3989 li
60.2783 16.1646 li
60.3096 15.8989 li
60.1846 15.7427 li
60.0122 14.7114 li
59.9814 14.5669 59.9653 14.4458 59.9653 14.3521 cv
59.9502 14.2896 li
59.8872 14.2114 li
59.7783 14.3521 li
59.3403 14.8052 li
59.1846 15.0708 li
59.1064 15.2271 li
58.9814 15.4302 li
58.8726 15.5239 li
58.8872 15.5864 li
58.7153 15.9458 li
58.6226 16.0708 li
58.5122 16.1021 li
58.4033 16.2114 li
58.4033 16.3677 58.3252 16.4731 58.1694 16.5239 cv
58.1533 16.5396 li
58.0796 16.7192 57.9976 16.8286 57.9033 16.8677 cv
57.7944 17.0396 li
57.6143 17.1958 57.5015 17.2974 57.4502 17.3364 cv
57.4263 17.4106 57.3872 17.4771 57.3252 17.5396 cv
57.3013 17.563 57.2705 17.5942 57.2314 17.6333 cv
57.2085 17.77 57.0986 17.8599 56.9033 17.9146 cv
56.7622 17.9614 li
56.6064 17.9497 56.4736 17.856 56.3726 17.6802 cv
56.1846 17.3833 li
56.2476 17.0864 li
56.2314 16.9302 li
56.2476 16.9146 li
56.2622 16.7583 li
56.1372 16.4614 li
56.2314 16.3208 li
56.1846 16.1646 li
56.2622 15.9927 li
56.2944 15.7271 li
56.2314 15.6802 li
56.3403 15.5083 li
56.2944 15.4302 li
56.2944 15.2271 li
56.3403 14.8677 li
56.3174 14.7974 56.3096 14.7427 56.3096 14.7114 cv
56.3096 14.7036 56.3135 14.688 56.3252 14.6646 cv
56.3252 14.645 56.3252 14.6294 56.3252 14.6177 cv
56.2622 14.5239 li
56.2944 14.1333 li
56.2944 14.0083 li
56.3252 13.8208 li
56.2783 13.4927 li
56.4976 13.1333 li
56.7354 13.1763 56.9033 13.2349 56.9976 13.3052 cv
57.0986 13.3677 57.1533 13.4888 57.1533 13.6646 cv
57.1533 13.7739 li
57.2314 13.9146 li
57.2002 14.1646 li
57.2476 14.6489 li
57.1694 14.8677 li
57.2002 15.1177 li
57.2002 15.3208 li
57.1064 15.4614 li
57.1694 15.6802 li
57.1064 15.8052 li
57.0903 15.9458 li
57.1694 16.0708 li
57.0596 16.3208 li
57.0283 16.4302 li
57.0283 16.5396 li
57.0903 16.6646 li
57.2944 16.4614 li
57.2944 16.3364 57.3335 16.2544 57.4194 16.2114 cv
57.4194 16.1411 57.4502 16.0825 57.5122 16.0396 cv
57.4814 15.9927 li
57.6372 15.8521 li
57.6694 15.8052 li
57.6694 15.6958 li
57.8564 15.5552 li
57.9033 15.4302 li
58.0122 15.3677 li
58.4814 14.8364 li
58.4385 14.8911 58.3096 15.0356 58.0903 15.2739 cv
58.0903 15.3052 li
58.1064 15.2271 li
58.2622 15.0396 li
58.3726 14.8364 li
58.3726 14.7114 li
58.5596 14.6489 li
58.5752 14.4927 li
58.6226 14.4458 li
58.6372 14.3989 li
58.6372 14.3052 li
58.8096 14.1333 li
58.8096 14.1255 58.8096 14.1099 58.8096 14.0864 cv
58.7974 14.0552 58.7944 14.0396 58.7944 14.0396 cv
58.7944 13.895 58.8726 13.813 59.0283 13.7896 cv
59.0986 13.645 59.2085 13.563 59.3564 13.5396 cv
59.4346 13.4302 li
59.4502 13.4146 li
59.5205 13.313 59.6294 13.2388 59.7783 13.1958 cv
59.8872 13.0552 li
60.1694 13.0552 li
60.3252 13.2271 li
60.4502 13.3052 li
60.4653 13.3364 li
60.5444 13.3677 li
60.5752 13.6177 li
60.7783 13.7271 li
60.6846 13.9927 li
60.8252 14.2896 li
60.8252 14.6177 li
60.9194 15.0708 li
60.9502 15.5083 li
61.0444 15.7583 li
61.1226 16.0708 li
61.1724 16.1255 61.2085 16.1919 61.2314 16.2739 cv
61.4502 16.3364 li
61.4502 16.5708 li
61.5596 16.7114 li
61.5596 16.7427 li
61.6226 16.7583 li
61.6694 16.8208 li
61.7153 16.7739 li
61.6924 16.7739 61.7153 16.7739 61.7783 16.7739 cv
61.8604 16.7739 61.9502 16.6958 62.0444 16.5396 cv
62.1846 16.5083 li
62.2314 16.4458 li
62.2515 16.3833 62.2974 16.3364 62.3726 16.3052 cv
62.4502 16.3052 li
62.4976 16.2583 li
62.5122 16.2114 li
62.5444 16.1489 li
62.6265 16.0981 62.6763 16.0161 62.7002 15.8989 cv
62.8403 15.7583 li
62.8564 15.6489 li
62.9502 15.4614 li
63.1694 15.3833 li
63.4976 15.4771 li
63.6064 15.8364 li
63.6064 15.8481 63.6104 15.8521 63.6226 15.8521 cv
63.6226 15.8755 63.6226 15.8911 63.6226 15.8989 cv
63.6226 15.8989 li
cp
f
68.4893 16.8521 mo
68.3486 17.0239 li
68.2085 17.3364 li
68.1143 17.3989 li
68.0366 17.5708 li
67.7866 17.6021 li
67.6294 17.7583 li
67.3955 17.7583 li
67.2544 17.8677 li
67.1143 17.8364 li
66.9585 17.8677 li
66.9585 17.9614 li
66.5205 17.9302 li
66.3335 17.9458 li
66.1924 18.0239 li
66.0674 17.9458 li
66.1494 17.9341 66.2124 17.9302 66.2544 17.9302 cv
66.1924 17.938 65.9976 17.9536 65.6763 17.9771 cv
65.6455 17.9614 li
65.5513 17.9614 li
65.3955 18.0396 li
65.3403 18.0083 65.2544 17.9692 65.1294 17.9302 cv
64.9502 17.9185 64.8374 17.9146 64.7866 17.9146 cv
64.6924 17.9146 li
64.6294 17.9028 64.5674 17.8989 64.5044 17.8989 cv
64.4424 17.8989 64.3794 17.9146 64.3174 17.9458 cv
64.1455 17.8364 li
64.0513 17.8052 li
64.0283 17.8052 63.9814 17.7974 63.9116 17.7739 cv
63.6182 17.7427 63.4736 17.5005 63.4736 17.0396 cv
63.4736 16.9302 li
63.7085 16.7583 li
63.9893 16.6489 li
64.2085 16.7583 li
64.3794 16.7583 li
64.3794 16.7896 li
64.4502 16.8208 64.5122 16.8833 64.5674 16.9771 cv
64.6616 16.9927 li
64.6616 17.1489 li
64.8174 17.1958 li
64.8486 17.2114 li
66.3955 17.1177 li
66.7544 17.0552 li
66.8013 17.0552 li
66.8174 16.9927 li
66.9893 16.9771 li
67.0205 16.9302 li
67.1846 16.9106 67.3403 16.8638 67.4893 16.7896 cv
67.4893 16.7271 li
67.4893 16.7271 67.4736 16.7036 67.4424 16.6489 cv
67.3794 16.6646 li
67.2236 16.5396 li
67.1143 16.5396 li
67.0674 16.4614 li
67.0986 16.4146 li
66.9585 16.4302 li
66.8643 16.3208 li
66.8403 16.3325 66.8052 16.3364 66.7544 16.3364 cv
66.6494 16.3364 66.5444 16.3169 66.4424 16.2739 cv
66.3335 16.2739 li
66.2393 16.2427 li
66.0835 16.3052 li
65.9893 16.1958 li
65.9424 16.1958 li
65.7705 16.0552 li
65.4116 15.9146 li
65.2866 15.8208 li
64.8335 15.7427 li
64.7866 15.6489 li
64.4424 15.4302 li
64.2705 15.0396 li
64.1143 14.8364 li
64.0674 14.2114 li
64.1143 14.1333 li
64.1333 13.9575 64.2002 13.8013 64.3174 13.6646 cv
64.4302 13.6021 64.4893 13.5083 64.4893 13.3833 cv
64.6763 13.3521 li
64.7085 13.2896 64.7705 13.2271 64.8643 13.1646 cv
65.0513 13.0239 li
65.9263 12.6958 li
66.1763 12.6802 li
66.5674 12.5708 li
67.3335 12.6177 li
67.3486 12.6802 li
67.4194 12.7036 67.4976 12.7661 67.5835 12.8677 cv
67.5835 12.9302 li
67.7866 13.0552 li
67.6924 13.3364 li
67.6763 13.4458 li
67.6226 13.645 67.5083 13.7427 67.3335 13.7427 cv
67.1846 13.7427 67.0835 13.6763 67.0205 13.5396 cv
67.0205 13.5083 li
66.8643 13.4927 li
66.7085 13.5396 li
66.5513 13.4302 li
66.4585 13.4927 li
66.3525 13.4927 66.2583 13.5239 66.1763 13.5864 cv
66.0513 13.5864 65.9346 13.6333 65.8335 13.7271 cv
65.6763 13.7271 li
65.5674 13.8208 li
65.3955 13.8521 li
65.3643 13.8833 li
65.3013 13.9146 li
65.1924 14.0239 li
65.1616 14.0396 li
65.0513 14.1958 li
64.9116 14.2739 li
64.8794 14.3794 64.8564 14.4692 64.8486 14.5396 cv
64.8564 14.6567 64.8726 14.7271 64.8955 14.7583 cv
64.9155 14.7896 64.9653 14.8286 65.0513 14.8677 cv
65.0513 14.9302 li
65.2085 15.0239 li
65.3403 15.0669 65.4424 15.1177 65.5044 15.1802 cv
65.7393 15.1802 li
65.8955 15.3052 li
66.1763 15.3364 li
66.2866 15.4146 li
66.7544 15.5396 li
66.8174 15.6802 li
66.8643 15.5864 li
66.9653 15.5864 67.1025 15.6411 67.2705 15.7427 cv
67.4893 15.7739 li
67.5205 15.8521 li
67.7085 15.8521 li
68.0513 16.0552 li
68.0835 16.1606 68.1694 16.2544 68.3174 16.3364 cv
68.4424 16.4146 li
68.4116 16.5708 li
68.4624 16.645 68.4893 16.7271 68.4893 16.8208 cv
68.4893 16.8521 li
cp
f
73.1572 13.5239 mo
73.1572 13.5981 73.0835 13.6646 72.9385 13.7271 cv
72.9072 13.77 72.8486 13.8052 72.7666 13.8364 cv
72.6494 13.8911 72.5674 13.9302 72.5166 13.9614 cv
72.2666 13.8833 li
72.1416 13.9771 71.9775 14.0239 71.7822 14.0239 cv
71.6416 13.9771 li
71.5322 14.0864 li
71.2046 14.0864 li
71.0015 14.2114 li
70.9072 14.1802 70.8213 14.1646 70.7515 14.1646 cv
70.7192 14.188 70.6616 14.2036 70.5796 14.2114 cv
70.5366 14.2114 70.4932 14.2036 70.4546 14.1802 cv
70.4072 14.6333 li
70.4224 14.9614 li
70.3916 15.3833 li
70.4072 15.8521 li
70.4546 16.0552 li
70.4546 16.2271 li
70.6104 16.5864 li
70.5874 16.6099 70.5796 16.6411 70.5796 16.6802 cv
70.5796 16.7349 70.6655 16.7739 70.8442 16.8052 cv
70.8604 16.9458 li
70.9546 16.9771 li
71.0942 17.0864 li
71.1885 17.1489 li
71.2705 17.1411 71.3296 17.1333 71.3604 17.1333 cv
71.4302 17.1333 71.5044 17.145 71.5796 17.1646 cv
71.6104 17.145 71.6763 17.0864 71.7822 16.9927 cv
71.8525 16.9302 71.9224 16.8989 71.9854 16.8989 cv
71.9932 16.8989 72.0044 16.8989 72.0166 16.8989 cv
72.0366 16.9106 72.0474 16.9146 72.0474 16.9146 cv
72.1182 16.7583 72.2515 16.6606 72.4385 16.6177 cv
72.6025 16.6177 72.7432 16.6724 72.8604 16.7739 cv
72.8604 16.8521 li
72.8604 17.1255 72.7583 17.2974 72.5635 17.3677 cv
72.5015 17.5356 72.3486 17.645 72.1104 17.6958 cv
71.9692 17.8208 li
71.8135 17.8208 li
71.5322 17.8989 li
71.4692 17.9067 71.3794 17.9146 71.2666 17.9146 cv
71.2046 17.9146 71.1333 17.8989 71.0635 17.8677 cv
70.9072 17.8677 li
70.4854 17.6489 li
70.3765 17.6021 li
70.1265 17.2739 li
69.9854 17.1177 li
69.7192 16.5239 li
69.6265 15.9458 li
69.6416 15.8052 li
69.5474 15.6802 li
69.6104 15.5083 li
69.5474 15.2427 li
69.6265 15.1646 li
69.6572 15.0083 li
69.6265 14.8677 li
69.6416 14.6489 li
69.5942 14.4458 li
69.6572 14.3989 li
69.6572 14.1958 li
69.5635 14.1646 li
69.3442 14.2114 li
69.1265 14.0552 li
69.0942 14.0552 li
68.8564 14.0552 68.7354 13.9302 68.7354 13.6802 cv
68.7354 13.6333 li
68.5796 13.4146 li
68.8135 13.1958 li
69.1104 13.2427 li
69.2666 13.2114 li
69.5015 13.2739 li
69.7515 13.2739 li
69.7515 13.0396 li
69.5942 12.6958 li
69.7515 12.6177 li
69.6885 12.4302 li
69.7046 12.0708 li
69.6104 11.9146 li
69.5474 11.8208 69.5166 11.7388 69.5166 11.6646 cv
69.5166 11.5825 69.5366 11.5083 69.5796 11.4458 cv
69.6265 11.2896 li
69.7192 11.1958 li
69.9263 11.1567 70.0674 11.1333 70.1416 11.1333 cv
70.3994 11.1333 70.5405 11.2505 70.5635 11.4771 cv
70.5322 11.5396 li
70.5835 11.6138 70.6104 11.6802 70.6104 11.7427 cv
70.6104 11.7544 70.6025 11.7739 70.5942 11.8052 cv
70.5635 11.8677 li
70.5474 11.9614 li
70.6104 12.1177 li
70.5942 12.1802 li
70.6104 12.3364 li
70.5015 12.4771 li
70.5635 12.7271 li
70.5166 13.0083 li
70.6104 13.1177 li
70.5166 13.3364 li
70.8916 13.2896 li
71.5474 13.3521 li
72.0796 13.2583 li
72.2666 13.2739 li
72.3135 13.2583 li
72.7822 13.2583 li
73.0322 13.2583 73.1572 13.3481 73.1572 13.5239 cv
73.1572 13.5239 li
cp
f
77.3013 13.6021 mo
77.2544 13.5239 li
77.1616 13.4927 li
76.7866 13.1958 li
76.5513 13.1489 li
76.3643 13.1489 li
76.3335 13.1333 li
76.2393 13.1646 li
76.1294 13.1021 li
75.8174 13.1021 li
75.8643 13.1489 li
75.5835 13.2583 li
75.5366 13.3052 li
75.5044 13.3208 li
75.3564 13.4458 75.2544 13.5474 75.1924 13.6177 cv
75.1143 13.9146 li
75.0674 14.0239 li
75.1924 14.1958 li
74.9893 14.3521 li
75.0044 14.3989 li
74.9194 14.5474 74.8794 14.6919 74.8794 14.8364 cv
74.7705 14.9614 li
74.7705 15.1802 li
74.6763 15.2739 li
74.6616 15.3833 li
74.6143 15.4146 li
74.6143 15.5864 li
74.5835 15.6333 li
74.5835 15.7388 74.5752 15.8169 74.5674 15.8677 cv
74.5835 15.9302 li
74.4736 16.1489 li
74.5205 16.2271 li
74.4424 16.3521 li
74.5205 16.5708 li
74.3955 16.7427 li
74.4116 16.9771 li
74.4116 17.0083 li
74.4585 17.0396 li
74.5205 17.0239 li
74.5596 16.9849 74.6025 16.9458 74.6455 16.9146 cv
74.6143 16.8208 li
74.7866 16.7896 li
74.8335 16.7114 li
75.5366 16.1333 li
75.5986 16.1021 li
75.6924 15.8989 li
75.7314 15.8911 75.8013 15.8599 75.8955 15.8052 cv
75.9585 15.6177 li
76.0674 15.6177 li
76.0205 15.4146 li
76.1924 15.3833 li
76.2124 15.3521 76.2393 15.3169 76.2705 15.2739 cv
76.3096 15.2231 76.3486 15.1763 76.3794 15.1333 cv
77.0044 14.3208 li
77.0986 14.1333 li
77.0835 14.0864 li
77.1616 13.9614 li
77.1924 13.8208 li
77.3013 13.7271 li
77.3013 13.6021 li
cp
78.4424 12.9771 mo
78.3335 13.1333 li
78.4263 13.4146 li
78.2705 13.6021 li
78.2085 13.8521 li
78.1763 13.9146 li
78.1924 13.9771 li
78.1924 14.0825 78.1655 14.1646 78.1143 14.2271 cv
78.0835 14.2583 li
78.0835 14.3052 li
78.1143 14.3677 78.1294 14.4224 78.1294 14.4614 cv
78.1294 14.5044 78.1226 14.5356 78.1143 14.5552 cv
78.1294 14.6021 li
78.0835 14.7271 li
78.1143 14.8677 li
78.0205 14.9614 li
78.0513 15.1333 li
78.1294 15.2271 li
78.0205 15.3208 li
78.0205 15.5083 li
77.9263 15.6958 li
77.9893 15.8989 li
77.9263 15.9927 li
78.0366 16.0708 li
77.8794 16.3521 li
77.8643 16.3833 li
77.9893 16.4146 li
77.8955 16.6802 li
77.8955 16.7271 li
77.8955 16.7896 77.8872 16.8364 77.8794 16.8677 cv
77.8955 16.8989 li
78.0835 16.9302 li
78.2393 17.1646 li
78.1616 17.3521 li
78.2866 17.3364 li
78.3374 17.4302 78.3682 17.5161 78.3794 17.5864 cv
78.1924 17.7583 li
78.1372 17.8208 78.0596 17.8755 77.9585 17.9302 cv
77.7544 18.0396 li
77.6924 17.9771 li
77.5674 18.0552 li
77.2085 17.6177 li
77.2085 17.4146 li
77.1533 17.2583 77.1294 17.1138 77.1294 16.9771 cv
77.1294 16.8989 li
77.0513 16.1958 li
77.1616 15.6958 li
77.0835 15.3989 li
76.8794 15.7427 li
76.7705 16.0552 li
76.6763 16.1021 li
76.5044 16.3677 li
76.2085 16.6333 li
76.1143 16.7739 li
75.8643 17.0083 li
75.8013 17.1646 li
75.4116 17.3989 li
75.0044 17.8677 li
74.7705 17.9146 li
74.6143 18.0239 li
74.4155 18.0239 74.2622 17.9497 74.1616 17.8052 cv
73.8052 17.6294 73.6182 17.3755 73.5986 17.0396 cv
73.6616 17.0083 li
73.6455 16.9302 li
73.6294 16.7896 li
73.5674 16.6333 li
73.6294 16.4614 li
73.6616 16.2114 li
73.7393 15.8208 li
73.7393 15.813 73.7393 15.7974 73.7393 15.7739 cv
73.7393 15.7544 73.7393 15.7388 73.7393 15.7271 cv
73.7393 15.6958 73.7432 15.6567 73.7544 15.6021 cv
73.7432 15.5942 73.7393 15.563 73.7393 15.5083 cv
73.7393 15.4575 73.7622 15.3638 73.8174 15.2271 cv
73.8955 15.1958 li
73.8525 15.1567 73.8335 15.1138 73.8335 15.0708 cv
73.8335 15.0396 73.8374 15.0161 73.8486 14.9927 cv
73.8374 14.9731 73.8335 14.9458 73.8335 14.9146 cv
73.8335 14.813 73.8794 14.7388 73.9736 14.6958 cv
73.9932 14.6138 74.0366 14.5317 74.0986 14.4458 cv
74.0513 14.3521 li
74.1924 14.1802 li
74.1924 14.1333 li
74.1924 13.9771 74.2432 13.8364 74.3486 13.7114 cv
74.3335 13.4927 li
74.3794 13.4458 li
74.3794 13.438 74.3794 13.4263 74.3794 13.4146 cv
74.3682 13.395 74.3643 13.3794 74.3643 13.3677 cv
74.3643 13.3286 74.3794 13.2896 74.4116 13.2583 cv
74.4116 13.1802 li
74.4424 13.0981 74.5244 12.9771 74.6616 12.8208 cv
74.8052 12.6646 74.9116 12.5239 74.9736 12.3989 cv
75.0366 12.4614 li
75.1616 12.3989 li
75.2236 12.3833 li
75.6143 12.1958 li
76.5366 12.2427 li
76.5366 12.3208 li
76.8335 12.3833 li
77.0083 12.3833 77.1294 12.4458 77.1924 12.5708 cv
77.1924 12.5513 77.1963 12.52 77.2085 12.4771 cv
77.2085 12.4575 77.2085 12.4419 77.2085 12.4302 cv
77.4585 12.6646 li
77.6763 12.7114 li
78.1143 12.6021 li
78.2705 12.8989 li
78.4424 12.9771 li
cp
f
87.5122 15.8989 mo
87.5122 15.9614 87.4585 16.0474 87.3564 16.1489 cv
87.2153 16.3521 li
87.1694 16.5864 li
87.0596 16.6177 li
87.0444 16.6958 li
86.9194 16.7388 86.8252 16.8364 86.7622 16.9927 cv
86.6763 17.1099 86.5835 17.1919 86.4814 17.2427 cv
86.4385 17.2739 86.4033 17.3013 86.3726 17.3208 cv
86.3096 17.4302 li
86.2002 17.4458 li
85.8872 17.6177 li
85.4814 17.6646 li
85.3726 17.6489 li
85.2002 17.6802 li
85.1226 17.6021 li
85.0044 17.5396 84.9263 17.4849 84.8872 17.4302 cv
84.7822 17.4106 84.7085 17.3325 84.6694 17.1958 cv
84.5322 17.0396 84.4653 16.9146 84.4653 16.8208 cv
84.4653 16.7739 li
84.3726 16.6333 li
84.3564 16.6177 li
84.2783 16.3989 li
84.1694 16.1646 li
84.2002 15.8989 li
84.0752 15.7427 li
83.9033 14.7114 li
83.8726 14.5669 83.8564 14.4458 83.8564 14.3521 cv
83.8403 14.2896 li
83.7783 14.2114 li
83.6694 14.3521 li
83.2314 14.8052 li
83.0752 15.0708 li
82.9976 15.2271 li
82.8726 15.4302 li
82.7622 15.5239 li
82.7783 15.5864 li
82.6064 15.9458 li
82.5122 16.0708 li
82.4033 16.1021 li
82.2944 16.2114 li
82.2944 16.3677 82.2153 16.4731 82.0596 16.5239 cv
82.0444 16.5396 li
81.9692 16.7192 81.8872 16.8286 81.7944 16.8677 cv
81.6846 17.0396 li
81.5044 17.1958 81.3916 17.2974 81.3403 17.3364 cv
81.3174 17.4106 81.2783 17.4771 81.2153 17.5396 cv
81.1924 17.563 81.1616 17.5942 81.1226 17.6333 cv
81.0986 17.77 80.9893 17.8599 80.7944 17.9146 cv
80.6533 17.9614 li
80.4976 17.9497 80.3643 17.856 80.2622 17.6802 cv
80.0752 17.3833 li
80.1372 17.0864 li
80.1226 16.9302 li
80.1372 16.9146 li
80.1533 16.7583 li
80.0283 16.4614 li
80.1226 16.3208 li
80.0752 16.1646 li
80.1533 15.9927 li
80.1846 15.7271 li
80.1226 15.6802 li
80.2314 15.5083 li
80.1846 15.4302 li
80.1846 15.2271 li
80.2314 14.8677 li
80.2085 14.7974 80.2002 14.7427 80.2002 14.7114 cv
80.2002 14.7036 80.2046 14.688 80.2153 14.6646 cv
80.2153 14.645 80.2153 14.6294 80.2153 14.6177 cv
80.1533 14.5239 li
80.1846 14.1333 li
80.1846 14.0083 li
80.2153 13.8208 li
80.1694 13.4927 li
80.3872 13.1333 li
80.6265 13.1763 80.7944 13.2349 80.8872 13.3052 cv
80.9893 13.3677 81.0444 13.4888 81.0444 13.6646 cv
81.0444 13.7739 li
81.1226 13.9146 li
81.0903 14.1646 li
81.1372 14.6489 li
81.0596 14.8677 li
81.0903 15.1177 li
81.0903 15.3208 li
80.9976 15.4614 li
81.0596 15.6802 li
80.9976 15.8052 li
80.9814 15.9458 li
81.0596 16.0708 li
80.9502 16.3208 li
80.9194 16.4302 li
80.9194 16.5396 li
80.9814 16.6646 li
81.1846 16.4614 li
81.1846 16.3364 81.2236 16.2544 81.3096 16.2114 cv
81.3096 16.1411 81.3403 16.0825 81.4033 16.0396 cv
81.3726 15.9927 li
81.5283 15.8521 li
81.5596 15.8052 li
81.5596 15.6958 li
81.7476 15.5552 li
81.7944 15.4302 li
81.9033 15.3677 li
82.3726 14.8364 li
82.3296 14.8911 82.2002 15.0356 81.9814 15.2739 cv
81.9814 15.3052 li
81.9976 15.2271 li
82.1533 15.0396 li
82.2622 14.8364 li
82.2622 14.7114 li
82.4502 14.6489 li
82.4653 14.4927 li
82.5122 14.4458 li
82.5283 14.3989 li
82.5283 14.3052 li
82.7002 14.1333 li
82.7002 14.1255 82.7002 14.1099 82.7002 14.0864 cv
82.6885 14.0552 82.6846 14.0396 82.6846 14.0396 cv
82.6846 13.895 82.7622 13.813 82.9194 13.7896 cv
82.9893 13.645 83.0986 13.563 83.2476 13.5396 cv
83.3252 13.4302 li
83.3403 13.4146 li
83.4116 13.313 83.5205 13.2388 83.6694 13.1958 cv
83.7783 13.0552 li
84.0596 13.0552 li
84.2153 13.2271 li
84.3403 13.3052 li
84.3564 13.3364 li
84.4346 13.3677 li
84.4653 13.6177 li
84.6694 13.7271 li
84.5752 13.9927 li
84.7153 14.2896 li
84.7153 14.6177 li
84.8096 15.0708 li
84.8403 15.5083 li
84.9346 15.7583 li
85.0122 16.0708 li
85.0635 16.1255 85.0986 16.1919 85.1226 16.2739 cv
85.3403 16.3364 li
85.3403 16.5708 li
85.4502 16.7114 li
85.4502 16.7427 li
85.5122 16.7583 li
85.5596 16.8208 li
85.6064 16.7739 li
85.5835 16.7739 85.6064 16.7739 85.6694 16.7739 cv
85.7515 16.7739 85.8403 16.6958 85.9346 16.5396 cv
86.0752 16.5083 li
86.1226 16.4458 li
86.1416 16.3833 86.1885 16.3364 86.2622 16.3052 cv
86.3403 16.3052 li
86.3872 16.2583 li
86.4033 16.2114 li
86.4346 16.1489 li
86.5166 16.0981 86.5674 16.0161 86.5903 15.8989 cv
86.7314 15.7583 li
86.7476 15.6489 li
86.8403 15.4614 li
87.0596 15.3833 li
87.3872 15.4771 li
87.4976 15.8364 li
87.4976 15.8481 87.5015 15.8521 87.5122 15.8521 cv
87.5122 15.8755 87.5122 15.8911 87.5122 15.8989 cv
87.5122 15.8989 li
cp
f
91.6025 13.5239 mo
91.6025 13.5981 91.5283 13.6646 91.3833 13.7271 cv
91.3525 13.77 91.2944 13.8052 91.2124 13.8364 cv
91.0942 13.8911 91.0122 13.9302 90.9624 13.9614 cv
90.7124 13.8833 li
90.5874 13.9771 90.4224 14.0239 90.2275 14.0239 cv
90.0874 13.9771 li
89.9775 14.0864 li
89.6494 14.0864 li
89.4463 14.2114 li
89.3525 14.1802 89.2666 14.1646 89.1963 14.1646 cv
89.1655 14.188 89.1064 14.2036 89.0244 14.2114 cv
88.9814 14.2114 88.9385 14.2036 88.8994 14.1802 cv
88.8525 14.6333 li
88.8682 14.9614 li
88.8374 15.3833 li
88.8525 15.8521 li
88.8994 16.0552 li
88.8994 16.2271 li
89.0552 16.5864 li
89.0322 16.6099 89.0244 16.6411 89.0244 16.6802 cv
89.0244 16.7349 89.1104 16.7739 89.2905 16.8052 cv
89.3052 16.9458 li
89.3994 16.9771 li
89.5405 17.0864 li
89.6333 17.1489 li
89.7153 17.1411 89.7744 17.1333 89.8052 17.1333 cv
89.8765 17.1333 89.9502 17.145 90.0244 17.1646 cv
90.0552 17.145 90.1226 17.0864 90.2275 16.9927 cv
90.2974 16.9302 90.3682 16.8989 90.4302 16.8989 cv
90.4385 16.8989 90.4502 16.8989 90.4624 16.8989 cv
90.4814 16.9106 90.4932 16.9146 90.4932 16.9146 cv
90.5635 16.7583 90.6963 16.6606 90.8833 16.6177 cv
91.0474 16.6177 91.1885 16.6724 91.3052 16.7739 cv
91.3052 16.8521 li
91.3052 17.1255 91.2046 17.2974 91.0083 17.3677 cv
90.9463 17.5356 90.7944 17.645 90.5552 17.6958 cv
90.4155 17.8208 li
90.2583 17.8208 li
89.9775 17.8989 li
89.9155 17.9067 89.8252 17.9146 89.7124 17.9146 cv
89.6494 17.9146 89.5796 17.8989 89.5083 17.8677 cv
89.3525 17.8677 li
88.9302 17.6489 li
88.8213 17.6021 li
88.5713 17.2739 li
88.4307 17.1177 li
88.1655 16.5239 li
88.0713 15.9458 li
88.0874 15.8052 li
87.9932 15.6802 li
88.0557 15.5083 li
87.9932 15.2427 li
88.0713 15.1646 li
88.1025 15.0083 li
88.0713 14.8677 li
88.0874 14.6489 li
88.0405 14.4458 li
88.1025 14.3989 li
88.1025 14.1958 li
88.0083 14.1646 li
87.7905 14.2114 li
87.5713 14.0552 li
87.5405 14.0552 li
87.3013 14.0552 87.1802 13.9302 87.1802 13.6802 cv
87.1802 13.6333 li
87.0244 13.4146 li
87.2583 13.1958 li
87.5552 13.2427 li
87.7124 13.2114 li
87.9463 13.2739 li
88.1963 13.2739 li
88.1963 13.0396 li
88.0405 12.6958 li
88.1963 12.6177 li
88.1333 12.4302 li
88.1494 12.0708 li
88.0557 11.9146 li
87.9932 11.8208 87.9624 11.7388 87.9624 11.6646 cv
87.9624 11.5825 87.9814 11.5083 88.0244 11.4458 cv
88.0713 11.2896 li
88.1655 11.1958 li
88.3726 11.1567 88.5122 11.1333 88.5874 11.1333 cv
88.8442 11.1333 88.9854 11.2505 89.0083 11.4771 cv
88.9775 11.5396 li
89.0283 11.6138 89.0552 11.6802 89.0552 11.7427 cv
89.0552 11.7544 89.0474 11.7739 89.0405 11.8052 cv
89.0083 11.8677 li
88.9932 11.9614 li
89.0552 12.1177 li
89.0405 12.1802 li
89.0552 12.3364 li
88.9463 12.4771 li
89.0083 12.7271 li
88.9624 13.0083 li
89.0552 13.1177 li
88.9624 13.3364 li
89.3374 13.2896 li
89.9932 13.3521 li
90.5244 13.2583 li
90.7124 13.2739 li
90.7583 13.2583 li
91.2275 13.2583 li
91.4775 13.2583 91.6025 13.3481 91.6025 13.5239 cv
91.6025 13.5239 li
cp
f
95.7476 13.6021 mo
95.7002 13.5239 li
95.6064 13.4927 li
95.2314 13.1958 li
94.9976 13.1489 li
94.8096 13.1489 li
94.7783 13.1333 li
94.6846 13.1646 li
94.5752 13.1021 li
94.2622 13.1021 li
94.3096 13.1489 li
94.0283 13.2583 li
93.9814 13.3052 li
93.9502 13.3208 li
93.8013 13.4458 93.7002 13.5474 93.6372 13.6177 cv
93.5596 13.9146 li
93.5122 14.0239 li
93.6372 14.1958 li
93.4346 14.3521 li
93.4502 14.3989 li
93.3643 14.5474 93.3252 14.6919 93.3252 14.8364 cv
93.2153 14.9614 li
93.2153 15.1802 li
93.1226 15.2739 li
93.1064 15.3833 li
93.0596 15.4146 li
93.0596 15.5864 li
93.0283 15.6333 li
93.0283 15.7388 93.0205 15.8169 93.0122 15.8677 cv
93.0283 15.9302 li
92.9194 16.1489 li
92.9653 16.2271 li
92.8872 16.3521 li
92.9653 16.5708 li
92.8403 16.7427 li
92.8564 16.9771 li
92.8564 17.0083 li
92.9033 17.0396 li
92.9653 17.0239 li
93.0044 16.9849 93.0474 16.9458 93.0903 16.9146 cv
93.0596 16.8208 li
93.2314 16.7896 li
93.2783 16.7114 li
93.9814 16.1333 li
94.0444 16.1021 li
94.1372 15.8989 li
94.1763 15.8911 94.2476 15.8599 94.3403 15.8052 cv
94.4033 15.6177 li
94.5122 15.6177 li
94.4653 15.4146 li
94.6372 15.3833 li
94.6572 15.3521 94.6846 15.3169 94.7153 15.2739 cv
94.7544 15.2231 94.7944 15.1763 94.8252 15.1333 cv
95.4502 14.3208 li
95.5444 14.1333 li
95.5283 14.0864 li
95.6064 13.9614 li
95.6372 13.8208 li
95.7476 13.7271 li
95.7476 13.6021 li
cp
96.8872 12.9771 mo
96.7783 13.1333 li
96.8726 13.4146 li
96.7153 13.6021 li
96.6533 13.8521 li
96.6226 13.9146 li
96.6372 13.9771 li
96.6372 14.0825 96.6104 14.1646 96.5596 14.2271 cv
96.5283 14.2583 li
96.5283 14.3052 li
96.5596 14.3677 96.5752 14.4224 96.5752 14.4614 cv
96.5752 14.5044 96.5674 14.5356 96.5596 14.5552 cv
96.5752 14.6021 li
96.5283 14.7271 li
96.5596 14.8677 li
96.4653 14.9614 li
96.4976 15.1333 li
96.5752 15.2271 li
96.4653 15.3208 li
96.4653 15.5083 li
96.3726 15.6958 li
96.4346 15.8989 li
96.3726 15.9927 li
96.4814 16.0708 li
96.3252 16.3521 li
96.3096 16.3833 li
96.4346 16.4146 li
96.3403 16.6802 li
96.3403 16.7271 li
96.3403 16.7896 96.3335 16.8364 96.3252 16.8677 cv
96.3403 16.8989 li
96.5283 16.9302 li
96.6846 17.1646 li
96.6064 17.3521 li
96.7314 17.3364 li
96.7822 17.4302 96.8135 17.5161 96.8252 17.5864 cv
96.6372 17.7583 li
96.5835 17.8208 96.5044 17.8755 96.4033 17.9302 cv
96.2002 18.0396 li
96.1372 17.9771 li
96.0122 18.0552 li
95.6533 17.6177 li
95.6533 17.4146 li
95.5986 17.2583 95.5752 17.1138 95.5752 16.9771 cv
95.5752 16.8989 li
95.4976 16.1958 li
95.6064 15.6958 li
95.5283 15.3989 li
95.3252 15.7427 li
95.2153 16.0552 li
95.1226 16.1021 li
94.9502 16.3677 li
94.6533 16.6333 li
94.5596 16.7739 li
94.3096 17.0083 li
94.2476 17.1646 li
93.8564 17.3989 li
93.4502 17.8677 li
93.2153 17.9146 li
93.0596 18.0239 li
92.8604 18.0239 92.7085 17.9497 92.6064 17.8052 cv
92.2515 17.6294 92.0635 17.3755 92.0444 17.0396 cv
92.1064 17.0083 li
92.0903 16.9302 li
92.0752 16.7896 li
92.0122 16.6333 li
92.0752 16.4614 li
92.1064 16.2114 li
92.1846 15.8208 li
92.1846 15.813 92.1846 15.7974 92.1846 15.7739 cv
92.1846 15.7544 92.1846 15.7388 92.1846 15.7271 cv
92.1846 15.6958 92.1885 15.6567 92.2002 15.6021 cv
92.1885 15.5942 92.1846 15.563 92.1846 15.5083 cv
92.1846 15.4575 92.2085 15.3638 92.2622 15.2271 cv
92.3403 15.1958 li
92.2974 15.1567 92.2783 15.1138 92.2783 15.0708 cv
92.2783 15.0396 92.2822 15.0161 92.2944 14.9927 cv
92.2822 14.9731 92.2783 14.9458 92.2783 14.9146 cv
92.2783 14.813 92.3252 14.7388 92.4194 14.6958 cv
92.4385 14.6138 92.4814 14.5317 92.5444 14.4458 cv
92.4976 14.3521 li
92.6372 14.1802 li
92.6372 14.1333 li
92.6372 13.9771 92.6885 13.8364 92.7944 13.7114 cv
92.7783 13.4927 li
92.8252 13.4458 li
92.8252 13.438 92.8252 13.4263 92.8252 13.4146 cv
92.8135 13.395 92.8096 13.3794 92.8096 13.3677 cv
92.8096 13.3286 92.8252 13.2896 92.8564 13.2583 cv
92.8564 13.1802 li
92.8872 13.0981 92.9692 12.9771 93.1064 12.8208 cv
93.2515 12.6646 93.3564 12.5239 93.4194 12.3989 cv
93.4814 12.4614 li
93.6064 12.3989 li
93.6694 12.3833 li
94.0596 12.1958 li
94.9814 12.2427 li
94.9814 12.3208 li
95.2783 12.3833 li
95.4546 12.3833 95.5752 12.4458 95.6372 12.5708 cv
95.6372 12.5513 95.6416 12.52 95.6533 12.4771 cv
95.6533 12.4575 95.6533 12.4419 95.6533 12.4302 cv
95.9033 12.6646 li
96.1226 12.7114 li
96.5596 12.6021 li
96.7153 12.8989 li
96.8872 12.9771 li
cp
f
105.958 15.8989 mo
105.958 15.9614 105.903 16.0474 105.801 16.1489 cv
105.662 16.3521 li
105.614 16.5864 li
105.504 16.6177 li
105.489 16.6958 li
105.364 16.7388 105.271 16.8364 105.208 16.9927 cv
105.123 17.1099 105.028 17.1919 104.926 17.2427 cv
104.883 17.2739 104.849 17.3013 104.817 17.3208 cv
104.754 17.4302 li
104.646 17.4458 li
104.333 17.6177 li
103.926 17.6646 li
103.817 17.6489 li
103.646 17.6802 li
103.567 17.6021 li
103.45 17.5396 103.373 17.4849 103.333 17.4302 cv
103.228 17.4106 103.153 17.3325 103.114 17.1958 cv
102.978 17.0396 102.912 16.9146 102.912 16.8208 cv
102.912 16.7739 li
102.817 16.6333 li
102.801 16.6177 li
102.724 16.3989 li
102.614 16.1646 li
102.646 15.8989 li
102.521 15.7427 li
102.349 14.7114 li
102.317 14.5669 102.301 14.4458 102.301 14.3521 cv
102.287 14.2896 li
102.224 14.2114 li
102.114 14.3521 li
101.676 14.8052 li
101.521 15.0708 li
101.442 15.2271 li
101.317 15.4302 li
101.208 15.5239 li
101.224 15.5864 li
101.051 15.9458 li
100.958 16.0708 li
100.849 16.1021 li
100.739 16.2114 li
100.739 16.3677 100.662 16.4731 100.504 16.5239 cv
100.489 16.5396 li
100.416 16.7192 100.333 16.8286 100.239 16.8677 cv
100.129 17.0396 li
99.9502 17.1958 99.8374 17.2974 99.7866 17.3364 cv
99.7622 17.4106 99.7236 17.4771 99.6616 17.5396 cv
99.6372 17.563 99.6064 17.5942 99.5674 17.6333 cv
99.5444 17.77 99.4346 17.8599 99.2393 17.9146 cv
99.0986 17.9614 li
98.9424 17.9497 98.8096 17.856 98.7085 17.6802 cv
98.5205 17.3833 li
98.5835 17.0864 li
98.5674 16.9302 li
98.5835 16.9146 li
98.5986 16.7583 li
98.4736 16.4614 li
98.5674 16.3208 li
98.5205 16.1646 li
98.5986 15.9927 li
98.6294 15.7271 li
98.5674 15.6802 li
98.6763 15.5083 li
98.6294 15.4302 li
98.6294 15.2271 li
98.6763 14.8677 li
98.6533 14.7974 98.6455 14.7427 98.6455 14.7114 cv
98.6455 14.7036 98.6494 14.688 98.6616 14.6646 cv
98.6616 14.645 98.6616 14.6294 98.6616 14.6177 cv
98.5986 14.5239 li
98.6294 14.1333 li
98.6294 14.0083 li
98.6616 13.8208 li
98.6143 13.4927 li
98.8335 13.1333 li
99.0713 13.1763 99.2393 13.2349 99.3335 13.3052 cv
99.4346 13.3677 99.4893 13.4888 99.4893 13.6646 cv
99.4893 13.7739 li
99.5674 13.9146 li
99.5366 14.1646 li
99.5835 14.6489 li
99.5044 14.8677 li
99.5366 15.1177 li
99.5366 15.3208 li
99.4424 15.4614 li
99.5044 15.6802 li
99.4424 15.8052 li
99.4263 15.9458 li
99.5044 16.0708 li
99.3955 16.3208 li
99.3643 16.4302 li
99.3643 16.5396 li
99.4263 16.6646 li
99.6294 16.4614 li
99.6294 16.3364 99.6694 16.2544 99.7544 16.2114 cv
99.7544 16.1411 99.7866 16.0825 99.8486 16.0396 cv
99.8174 15.9927 li
99.9736 15.8521 li
100.004 15.8052 li
100.004 15.6958 li
100.192 15.5552 li
100.239 15.4302 li
100.349 15.3677 li
100.817 14.8364 li
100.774 14.8911 100.646 15.0356 100.426 15.2739 cv
100.426 15.3052 li
100.442 15.2271 li
100.599 15.0396 li
100.708 14.8364 li
100.708 14.7114 li
100.896 14.6489 li
100.912 14.4927 li
100.958 14.4458 li
100.974 14.3989 li
100.974 14.3052 li
101.146 14.1333 li
101.146 14.1255 101.146 14.1099 101.146 14.0864 cv
101.133 14.0552 101.129 14.0396 101.129 14.0396 cv
101.129 13.895 101.208 13.813 101.364 13.7896 cv
101.435 13.645 101.544 13.563 101.692 13.5396 cv
101.771 13.4302 li
101.787 13.4146 li
101.856 13.313 101.965 13.2388 102.114 13.1958 cv
102.224 13.0552 li
102.504 13.0552 li
102.662 13.2271 li
102.787 13.3052 li
102.801 13.3364 li
102.879 13.3677 li
102.912 13.6177 li
103.114 13.7271 li
103.021 13.9927 li
103.162 14.2896 li
103.162 14.6177 li
103.254 15.0708 li
103.287 15.5083 li
103.379 15.7583 li
103.458 16.0708 li
103.508 16.1255 103.544 16.1919 103.567 16.2739 cv
103.787 16.3364 li
103.787 16.5708 li
103.896 16.7114 li
103.896 16.7427 li
103.958 16.7583 li
104.004 16.8208 li
104.051 16.7739 li
104.028 16.7739 104.051 16.7739 104.114 16.7739 cv
104.196 16.7739 104.287 16.6958 104.379 16.5396 cv
104.521 16.5083 li
104.567 16.4458 li
104.587 16.3833 104.633 16.3364 104.708 16.3052 cv
104.787 16.3052 li
104.833 16.2583 li
104.849 16.2114 li
104.879 16.1489 li
104.962 16.0981 105.012 16.0161 105.037 15.8989 cv
105.176 15.7583 li
105.192 15.6489 li
105.287 15.4614 li
105.504 15.3833 li
105.833 15.4771 li
105.942 15.8364 li
105.942 15.8481 105.946 15.8521 105.958 15.8521 cv
105.958 15.8755 105.958 15.8911 105.958 15.8989 cv
105.958 15.8989 li
cp
f
108.935 13.3989 mo
108.935 13.3794 108.919 13.3325 108.887 13.2583 cv
108.84 13.2427 li
108.81 13.2583 li
108.797 13.2583 108.782 13.2583 108.762 13.2583 cv
108.739 13.2583 108.724 13.2583 108.715 13.2583 cv
108.705 13.2583 108.692 13.2583 108.685 13.2583 cv
108.662 13.2583 108.646 13.2583 108.637 13.2583 cv
108.528 13.3364 li
108.419 13.3521 li
108.356 13.3677 li
108.153 13.6333 li
108.012 13.7271 li
107.825 14.0708 li
107.715 14.1333 li
107.692 14.2817 107.637 14.3989 107.544 14.4927 cv
107.498 14.5708 li
107.59 14.52 107.688 14.4927 107.794 14.4927 cv
107.887 14.4458 li
107.919 14.3521 li
108.09 14.3521 li
108.185 14.2114 li
108.262 14.2114 li
108.387 14.2583 li
108.45 14.0864 li
108.528 14.0864 li
108.528 13.9458 li
108.685 13.9146 li
108.731 13.8833 li
108.748 13.7739 li
108.903 13.5396 li
108.922 13.5005 108.935 13.4536 108.935 13.3989 cv
108.935 13.3989 li
cp
110.123 16.8521 mo
110.123 16.9458 110.047 17.0669 109.903 17.2114 cv
109.86 17.3364 109.797 17.4419 109.715 17.5239 cv
109.653 17.5396 li
109.512 17.7583 li
109.294 17.8052 li
109.075 17.9458 li
108.95 18.1646 li
108.825 18.1333 li
108.731 18.1724 108.657 18.1997 108.606 18.2114 cv
108.528 18.3208 li
108.504 18.3091 108.469 18.3052 108.419 18.3052 cv
108.313 18.3052 108.215 18.3755 108.123 18.5239 cv
107.95 18.3833 li
107.919 18.3833 107.873 18.3833 107.81 18.3833 cv
107.705 18.3833 107.614 18.3677 107.544 18.3364 cv
107.34 18.3364 li
107.248 18.2739 li
106.942 18.231 106.751 18.1177 106.669 17.9302 cv
106.669 17.8989 li
106.528 17.8208 li
106.45 17.6177 li
106.31 17.5239 li
106.31 17.3521 li
106.169 16.8208 li
106.2 16.3833 li
106.248 16.1958 li
106.248 15.9458 li
106.294 15.7427 li
106.294 15.6646 li
106.373 15.5239 li
106.356 15.5396 li
106.356 15.4692 106.373 15.395 106.403 15.3208 cv
106.403 15.2583 li
106.373 14.9614 li
106.373 14.8286 106.435 14.7075 106.56 14.6021 cv
106.56 14.5942 106.56 14.5708 106.56 14.5396 cv
106.56 14.5083 106.544 14.4458 106.512 14.3521 cv
106.489 14.2505 106.481 14.1763 106.481 14.1333 cv
106.481 14.0317 106.504 13.9263 106.56 13.8208 cv
106.623 13.9263 106.708 13.9771 106.825 13.9771 cv
106.873 13.9771 li
106.879 13.9458 106.912 13.9106 106.965 13.8677 cv
107.037 13.6724 107.126 13.5044 107.231 13.3677 cv
107.278 13.3052 li
107.278 13.2739 107.301 13.188 107.356 13.0396 cv
107.45 13.0396 li
107.481 12.9771 li
107.575 12.9458 li
107.614 12.8833 107.642 12.8481 107.653 12.8364 cv
107.662 12.8286 107.748 12.7817 107.903 12.6958 cv
107.935 12.6333 107.985 12.5825 108.06 12.5396 cv
108.09 12.52 108.126 12.5005 108.169 12.4771 cv
108.215 12.4146 li
108.435 12.3442 108.567 12.3052 108.623 12.3052 cv
108.692 12.3052 108.754 12.3208 108.81 12.3521 cv
108.873 12.3364 li
108.95 12.3833 li
109.044 12.4575 109.142 12.52 109.248 12.5708 cv
109.45 12.7271 li
109.45 12.7739 li
109.626 12.9224 109.715 13.1255 109.715 13.3833 cv
109.685 13.5083 li
109.715 13.8989 li
109.606 13.9771 li
109.498 14.2896 li
109.262 14.5396 li
109.248 14.7271 li
108.998 14.9146 108.762 15.0669 108.544 15.1802 cv
108.469 15.2856 108.36 15.3364 108.215 15.3364 cv
108.169 15.3364 li
107.95 15.4771 li
107.748 15.4771 li
107.465 15.6021 li
107.248 15.4927 li
107.231 15.4927 li
107.208 15.5552 107.192 15.6567 107.185 15.7896 cv
107.075 15.8521 li
107.075 15.9927 li
106.998 16.2114 li
107.017 16.3989 107.028 16.52 107.028 16.5708 cv
106.981 16.6177 li
106.981 16.7231 106.974 16.7974 106.965 16.8364 cv
106.965 16.8481 106.965 16.8638 106.965 16.8833 cv
106.965 16.895 106.965 16.9067 106.965 16.9146 cv
106.965 16.9771 106.998 17.0317 107.06 17.0708 cv
107.08 17.1646 107.123 17.2231 107.185 17.2427 cv
107.262 17.3208 li
107.528 17.3989 li
107.528 17.4302 li
107.623 17.4458 li
108.028 17.4771 li
108.262 17.4458 li
108.387 17.3521 li
108.465 17.3364 li
108.575 17.1489 li
108.637 17.1333 li
108.935 17.0396 li
108.974 16.9888 109.028 16.9419 109.09 16.8989 cv
109.137 16.8364 li
109.294 16.8052 109.379 16.7231 109.403 16.5864 cv
109.517 16.4731 109.662 16.4146 109.84 16.4146 cv
109.887 16.4146 li
110.044 16.5942 110.123 16.7388 110.123 16.8521 cv
110.123 16.8521 li
cp
f
114.287 15.3208 mo
114.287 15.2583 li
114.224 15.2075 114.192 15.145 114.192 15.0708 cv
114.224 15.0239 li
114.114 14.7896 li
114.129 14.5552 li
114.083 14.4927 li
113.978 14.4224 113.926 14.3599 113.926 14.3052 cv
113.853 14.2739 113.817 14.1958 113.817 14.0708 cv
113.739 14.0552 li
113.599 13.8208 li
113.489 13.7271 li
113.239 13.6333 li
113.146 13.6177 li
113.09 13.6177 113.06 13.6021 113.051 13.5708 cv
112.801 13.8208 li
112.646 14.1646 li
112.396 14.2896 li
112.364 14.4302 li
112.239 14.4927 li
112.192 14.8052 li
112.051 14.8677 li
112.021 14.9849 112.004 15.0864 112.004 15.1802 cv
111.801 15.3677 li
111.864 15.3989 li
111.864 15.4927 111.825 15.5786 111.754 15.6489 cv
111.731 15.7231 111.7 15.8052 111.662 15.8989 cv
111.662 15.9927 li
111.629 16.0396 li
111.646 16.1802 li
111.504 16.5083 li
111.537 16.5708 li
111.537 16.8989 li
111.489 17.0708 li
111.489 17.2427 li
111.599 17.3989 li
111.771 17.4458 li
111.833 17.4771 li
111.926 17.4302 li
112.239 17.4458 li
112.287 17.3364 li
112.333 17.3364 li
112.383 17.3364 112.416 17.3481 112.426 17.3677 cv
112.537 17.3364 li
112.629 17.3677 li
112.787 17.2583 li
112.801 17.2271 li
112.912 17.1958 li
112.962 17.1138 113.09 17.0239 113.301 16.9302 cv
113.333 16.8833 li
113.567 16.7114 li
113.708 16.5239 li
113.896 16.4146 li
113.912 16.3677 li
113.974 16.2271 li
113.974 16.0708 li
114.114 15.9458 li
114.162 15.8677 li
114.224 15.7896 li
114.192 15.6958 114.176 15.6294 114.176 15.5864 cv
114.176 15.5161 114.196 15.4419 114.239 15.3677 cv
114.287 15.3208 li
cp
115.083 15.0239 mo
115.021 15.2427 li
115.021 15.4536 115.004 15.6177 114.974 15.7427 cv
114.912 15.8521 li
114.912 15.9927 li
114.849 16.0708 li
114.801 16.2427 li
114.676 16.3677 li
114.599 16.6802 li
114.489 16.7114 li
114.442 16.8364 li
114.301 16.9302 li
114.208 17.1333 li
114.067 17.1958 li
114.051 17.3521 li
113.817 17.4302 li
113.724 17.5786 113.599 17.6724 113.442 17.7114 cv
113.396 17.7114 li
113.278 17.8755 113.129 17.9614 112.942 17.9614 cv
112.868 18.0122 112.778 18.0396 112.676 18.0396 cv
112.551 18.1177 li
112.426 18.1646 li
112.271 18.2739 li
112.114 18.2739 li
111.958 18.3208 li
111.754 18.2271 li
111.239 18.1958 li
111.051 17.9146 li
110.787 17.6489 li
110.849 17.4458 li
110.676 17.0396 li
110.754 16.8833 li
110.692 16.6021 li
110.754 16.4146 li
110.731 16.313 110.724 16.2349 110.724 16.1802 cv
110.724 16.0239 110.762 15.9146 110.849 15.8521 cv
110.856 15.77 110.912 15.6333 111.004 15.4458 cv
111.067 15.4458 li
111.037 15.3677 li
111.083 15.1958 li
111.083 15.0239 li
111.146 14.9536 111.18 14.8989 111.192 14.8677 cv
111.146 14.7114 li
111.146 14.6489 li
111.208 14.5474 111.239 14.4302 111.239 14.3052 cv
111.489 13.9614 li
111.489 13.9614 111.498 13.9575 111.521 13.9458 cv
111.541 13.9263 111.555 13.9067 111.567 13.8833 cv
111.551 13.8364 li
111.599 13.8364 li
111.787 13.6333 li
111.801 13.3677 li
112.099 13.2583 li
112.212 13.188 112.287 13.0669 112.317 12.8989 cv
112.474 12.8989 li
112.555 12.8481 112.633 12.8208 112.708 12.8208 cv
112.778 12.8208 112.849 12.8364 112.912 12.8677 cv
113.051 12.8833 li
113.364 12.7583 li
113.521 12.9146 li
113.662 12.9927 li
113.754 12.9927 li
113.926 13.1021 li
114.037 13.1021 li
114.137 13.1958 114.258 13.3286 114.396 13.4927 cv
114.412 13.5552 li
114.489 13.6021 li
114.754 13.9302 li
114.974 14.4927 li
114.974 14.6021 li
115.083 15.0239 li
cp
f
122.676 17.1333 mo
122.676 17.2388 122.606 17.3599 122.474 17.4927 cv
122.364 17.5239 li
122.287 17.6333 li
122.067 17.6958 li
122.024 17.7505 121.981 17.7739 121.942 17.7739 cv
121.942 17.7739 121.935 17.77 121.926 17.7583 cv
121.903 17.7583 121.896 17.7583 121.896 17.7583 cv
121.715 17.8521 121.504 17.8989 121.254 17.8989 cv
121.162 17.8989 li
120.864 17.8364 li
120.662 17.7427 li
120.192 17.3521 li
120.099 17.0396 li
119.912 16.8833 li
119.931 16.8442 119.942 16.7896 119.942 16.7271 cv
119.942 16.6763 119.912 16.5942 119.849 16.4771 cv
119.879 16.1958 li
119.879 16.1489 li
119.879 16.0474 119.853 15.9224 119.801 15.7739 cv
119.879 15.4146 li
119.724 15.7271 li
119.537 15.7427 li
119.521 15.9927 li
119.446 16.0356 119.368 16.0552 119.287 16.0552 cv
119.162 16.3364 li
119.004 16.5239 li
118.93 16.5864 118.873 16.6255 118.833 16.6333 cv
118.364 17.1021 li
118.317 17.1021 li
118.083 17.3677 li
117.864 17.4771 li
117.754 17.6333 li
117.474 17.7114 li
117.083 17.8677 li
116.833 17.7583 li
116.676 17.7583 116.567 17.688 116.504 17.5396 cv
116.396 17.4771 li
116.396 17.4575 116.399 17.4263 116.412 17.3833 cv
116.412 17.3442 116.412 17.313 116.412 17.2896 cv
116.208 17.1333 li
116.254 17.0552 li
116.114 16.7271 li
116.162 16.6802 li
116.146 16.6489 li
116.146 16.6294 116.146 16.6021 116.146 16.5708 cv
116.133 16.5513 116.129 16.5356 116.129 16.5239 cv
116.129 16.4302 116.137 16.3442 116.162 16.2583 cv
116.176 15.9458 li
116.129 15.6958 li
116.169 15.6333 116.192 15.5825 116.192 15.5396 cv
116.192 15.4771 116.166 15.4263 116.114 15.3833 cv
116.254 15.2739 li
116.254 15.1333 li
116.208 14.7427 li
116.333 13.9771 li
116.333 13.8442 116.294 13.6567 116.224 13.4146 cv
116.243 13.1567 116.412 13.0161 116.724 12.9927 cv
116.833 13.0239 li
116.989 13.0552 li
117.208 13.2896 li
117.146 13.6021 li
117.114 14.1177 li
117.146 14.5083 li
117.083 14.6489 li
117.114 14.7583 li
117.051 14.9458 li
117.051 15.0708 li
117.037 15.1021 li
117.037 15.1255 117.037 15.1606 117.037 15.2114 cv
117.037 15.3169 117.021 15.4263 116.989 15.5396 cv
117.051 15.6177 li
117.004 15.7896 li
117.037 15.9458 li
117.037 16.1021 li
117.067 16.1567 117.083 16.2192 117.083 16.2896 cv
117.083 16.3521 117.067 16.4146 117.037 16.4771 cv
117.037 16.5239 li
117.075 16.6606 117.099 16.7505 117.099 16.7896 cv
117.208 16.8989 li
117.258 16.8677 117.317 16.8286 117.379 16.7739 cv
117.399 16.7036 117.458 16.6489 117.551 16.6177 cv
117.551 16.5083 li
117.59 16.5083 117.666 16.4927 117.771 16.4614 cv
117.801 16.3677 li
118.004 16.2739 li
118.037 16.2427 li
118.087 16.1802 118.18 16.1294 118.317 16.0864 cv
118.317 16.0396 li
118.537 15.8677 li
118.599 15.7114 118.7 15.6138 118.849 15.5708 cv
118.93 15.4771 118.989 15.4263 119.021 15.4146 cv
119.176 15.2114 li
119.176 15.1802 li
119.224 15.1489 li
119.333 15.1021 li
119.396 14.9302 li
119.646 14.8208 li
119.692 14.8052 li
119.692 14.8052 119.715 14.7817 119.771 14.7271 cv
119.771 14.6177 li
119.849 14.6021 li
119.868 14.4692 119.931 14.3677 120.037 14.3052 cv
120.224 13.8989 li
120.287 13.6802 li
120.301 13.6333 li
120.349 13.6333 li
120.442 13.5708 li
120.364 13.5552 li
120.458 13.4106 120.524 13.2583 120.567 13.1021 cv
120.912 13.0864 li
121.192 13.3052 li
121.317 13.5083 li
121.176 14.0239 li
121.004 14.2583 li
120.864 14.7271 li
120.739 14.8052 li
120.739 14.9771 li
120.662 15.1177 li
120.708 15.3208 li
120.599 15.4146 li
120.662 15.7896 li
120.676 16.3364 li
120.739 16.3364 li
120.739 16.6489 li
120.912 16.8521 li
121.067 16.9302 li
121.067 16.9927 li
121.129 17.0044 121.196 17.0239 121.271 17.0552 cv
121.583 17.0864 li
121.754 17.0396 li
122.083 16.8833 li
122.146 16.8442 122.224 16.8208 122.317 16.8208 cv
122.556 16.8208 122.676 16.9263 122.676 17.1333 cv
122.676 17.1333 li
cp
f
127.887 16.8521 mo
127.748 17.0239 li
127.606 17.3364 li
127.512 17.3989 li
127.435 17.5708 li
127.185 17.6021 li
127.028 17.7583 li
126.794 17.7583 li
126.653 17.8677 li
126.512 17.8364 li
126.356 17.8677 li
126.356 17.9614 li
125.919 17.9302 li
125.731 17.9458 li
125.59 18.0239 li
125.465 17.9458 li
125.547 17.9341 125.61 17.9302 125.653 17.9302 cv
125.59 17.938 125.396 17.9536 125.075 17.9771 cv
125.044 17.9614 li
124.95 17.9614 li
124.794 18.0396 li
124.739 18.0083 124.653 17.9692 124.528 17.9302 cv
124.349 17.9185 124.235 17.9146 124.185 17.9146 cv
124.09 17.9146 li
124.028 17.9028 123.965 17.8989 123.903 17.8989 cv
123.84 17.8989 123.778 17.9146 123.715 17.9458 cv
123.544 17.8364 li
123.45 17.8052 li
123.426 17.8052 123.379 17.7974 123.31 17.7739 cv
123.017 17.7427 122.873 17.5005 122.873 17.0396 cv
122.873 16.9302 li
123.106 16.7583 li
123.387 16.6489 li
123.606 16.7583 li
123.778 16.7583 li
123.778 16.7896 li
123.849 16.8208 123.912 16.8833 123.965 16.9771 cv
124.06 16.9927 li
124.06 17.1489 li
124.215 17.1958 li
124.248 17.2114 li
125.794 17.1177 li
126.153 17.0552 li
126.2 17.0552 li
126.215 16.9927 li
126.387 16.9771 li
126.419 16.9302 li
126.583 16.9106 126.739 16.8638 126.887 16.7896 cv
126.887 16.7271 li
126.887 16.7271 126.873 16.7036 126.84 16.6489 cv
126.778 16.6646 li
126.623 16.5396 li
126.512 16.5396 li
126.465 16.4614 li
126.498 16.4146 li
126.356 16.4302 li
126.262 16.3208 li
126.239 16.3325 126.205 16.3364 126.153 16.3364 cv
126.047 16.3364 125.942 16.3169 125.84 16.2739 cv
125.731 16.2739 li
125.637 16.2427 li
125.481 16.3052 li
125.387 16.1958 li
125.34 16.1958 li
125.169 16.0552 li
124.81 15.9146 li
124.685 15.8208 li
124.231 15.7427 li
124.185 15.6489 li
123.84 15.4302 li
123.669 15.0396 li
123.512 14.8364 li
123.465 14.2114 li
123.512 14.1333 li
123.532 13.9575 123.599 13.8013 123.715 13.6646 cv
123.83 13.6021 123.887 13.5083 123.887 13.3833 cv
124.075 13.3521 li
124.106 13.2896 124.169 13.2271 124.262 13.1646 cv
124.45 13.0239 li
125.325 12.6958 li
125.575 12.6802 li
125.965 12.5708 li
126.731 12.6177 li
126.748 12.6802 li
126.817 12.7036 126.896 12.7661 126.981 12.8677 cv
126.981 12.9302 li
127.185 13.0552 li
127.09 13.3364 li
127.075 13.4458 li
127.021 13.645 126.907 13.7427 126.731 13.7427 cv
126.583 13.7427 126.481 13.6763 126.419 13.5396 cv
126.419 13.5083 li
126.262 13.4927 li
126.106 13.5396 li
125.95 13.4302 li
125.856 13.4927 li
125.751 13.4927 125.657 13.5239 125.575 13.5864 cv
125.45 13.5864 125.333 13.6333 125.231 13.7271 cv
125.075 13.7271 li
124.965 13.8208 li
124.794 13.8521 li
124.762 13.8833 li
124.7 13.9146 li
124.59 14.0239 li
124.56 14.0396 li
124.45 14.1958 li
124.31 14.2739 li
124.278 14.3794 124.254 14.4692 124.248 14.5396 cv
124.254 14.6567 124.271 14.7271 124.294 14.7583 cv
124.313 14.7896 124.364 14.8286 124.45 14.8677 cv
124.45 14.9302 li
124.606 15.0239 li
124.739 15.0669 124.84 15.1177 124.903 15.1802 cv
125.137 15.1802 li
125.294 15.3052 li
125.575 15.3364 li
125.685 15.4146 li
126.153 15.5396 li
126.215 15.6802 li
126.262 15.5864 li
126.364 15.5864 126.501 15.6411 126.669 15.7427 cv
126.887 15.7739 li
126.919 15.8521 li
127.106 15.8521 li
127.45 16.0552 li
127.481 16.1606 127.567 16.2544 127.715 16.3364 cv
127.84 16.4146 li
127.81 16.5708 li
127.86 16.645 127.887 16.7271 127.887 16.8208 cv
127.887 16.8521 li
cp
f
136.364 15.9614 mo
136.129 16.1802 li
136.114 16.2583 li
136.09 16.395 136.024 16.5083 135.911 16.6021 cv
135.724 16.9575 135.458 17.2231 135.114 17.3989 cv
134.926 17.5396 li
134.771 17.5552 li
134.583 17.7114 li
134.458 17.7114 li
134.146 17.9146 li
133.958 17.8833 li
133.739 17.9771 li
133.583 17.9302 li
133.489 18.0083 li
133.271 17.9614 li
133.037 18.0083 li
132.958 17.9302 li
132.708 17.8833 li
132.364 17.6177 li
132.176 17.3833 li
132.051 17.2271 131.989 17.0981 131.989 16.9927 cv
131.989 16.9614 li
131.864 16.7739 li
131.864 16.6177 li
131.84 16.5239 131.833 16.4419 131.833 16.3677 cv
131.833 16.2739 li
131.771 16.0708 li
131.833 15.9302 li
131.786 15.8364 li
131.926 15.6021 li
131.896 15.4146 li
131.989 15.1021 li
132.037 15.0239 li
132.083 14.7427 li
132.067 14.6958 li
132.208 14.5396 li
132.239 14.4146 li
132.333 14.1333 li
132.489 13.8052 li
132.692 13.6177 li
132.754 13.5083 li
132.817 13.3677 li
132.849 13.2583 li
133.037 13.0239 li
133.087 13.0044 133.146 12.9888 133.208 12.9771 cv
133.239 12.8208 133.435 12.7349 133.801 12.7114 cv
134.114 12.7739 134.317 12.8599 134.411 12.9614 cv
134.493 12.9849 134.56 13.02 134.614 13.0708 cv
134.864 13.0864 li
135.021 13.3052 li
135.06 13.3794 135.09 13.4575 135.114 13.5396 cv
135.208 13.6333 li
135.176 13.8208 li
135.176 13.8755 135.176 13.9614 135.176 14.0864 cv
135.239 14.1333 li
135.239 14.3052 li
135.287 14.6802 li
135.118 14.8481 134.931 14.9419 134.724 14.9614 cv
134.606 14.7544 134.465 14.5981 134.301 14.4927 cv
134.271 14.1021 li
134.192 13.9771 li
134.192 13.8833 li
134.083 13.7271 li
134.021 13.6802 li
133.912 13.7271 li
133.754 13.7271 li
133.649 13.7505 133.551 13.8208 133.458 13.9458 cv
133.364 14.0708 133.262 14.2075 133.162 14.3521 cv
133.162 14.4771 li
133.083 14.5396 li
133.083 14.7583 li
132.926 14.9146 li
132.739 15.4458 li
132.754 15.5864 li
132.646 15.8052 li
132.692 16.0708 li
132.614 16.1021 li
132.599 16.4458 li
132.599 16.5083 li
132.754 16.6489 li
132.801 16.8989 li
132.974 16.9458 li
132.989 17.0396 li
133.192 17.0864 li
133.349 17.1177 li
133.399 17.0864 133.465 17.0708 133.551 17.0708 cv
133.629 17.0708 li
133.731 17.0317 133.821 17.0083 133.896 17.0083 cv
133.958 16.9888 134.028 16.9614 134.114 16.9302 cv
134.208 16.8052 134.34 16.7427 134.521 16.7427 cv
134.599 16.7427 li
134.637 16.7427 134.666 16.7231 134.676 16.6802 cv
134.771 16.5474 134.912 16.4575 135.099 16.4146 cv
135.325 16.2192 135.458 16.063 135.489 15.9458 cv
135.59 15.8833 135.662 15.7817 135.692 15.6333 cv
135.771 15.5864 li
135.801 15.3208 li
136.176 15.3755 136.364 15.5552 136.364 15.8677 cv
136.364 15.9614 li
cp
f
139.676 13.3989 mo
139.676 13.3794 139.661 13.3325 139.629 13.2583 cv
139.583 13.2427 li
139.551 13.2583 li
139.541 13.2583 139.524 13.2583 139.504 13.2583 cv
139.481 13.2583 139.465 13.2583 139.458 13.2583 cv
139.446 13.2583 139.435 13.2583 139.426 13.2583 cv
139.403 13.2583 139.387 13.2583 139.379 13.2583 cv
139.271 13.3364 li
139.162 13.3521 li
139.099 13.3677 li
138.896 13.6333 li
138.754 13.7271 li
138.567 14.0708 li
138.458 14.1333 li
138.435 14.2817 138.379 14.3989 138.287 14.4927 cv
138.239 14.5708 li
138.333 14.52 138.431 14.4927 138.536 14.4927 cv
138.629 14.4458 li
138.662 14.3521 li
138.833 14.3521 li
138.926 14.2114 li
139.004 14.2114 li
139.129 14.2583 li
139.192 14.0864 li
139.271 14.0864 li
139.271 13.9458 li
139.426 13.9146 li
139.474 13.8833 li
139.489 13.7739 li
139.646 13.5396 li
139.666 13.5005 139.676 13.4536 139.676 13.3989 cv
139.676 13.3989 li
cp
140.864 16.8521 mo
140.864 16.9458 140.791 17.0669 140.646 17.2114 cv
140.603 17.3364 140.541 17.4419 140.458 17.5239 cv
140.396 17.5396 li
140.254 17.7583 li
140.036 17.8052 li
139.817 17.9458 li
139.692 18.1646 li
139.567 18.1333 li
139.474 18.1724 139.399 18.1997 139.349 18.2114 cv
139.271 18.3208 li
139.248 18.3091 139.212 18.3052 139.162 18.3052 cv
139.056 18.3052 138.958 18.3755 138.864 18.5239 cv
138.692 18.3833 li
138.662 18.3833 138.614 18.3833 138.551 18.3833 cv
138.446 18.3833 138.356 18.3677 138.287 18.3364 cv
138.083 18.3364 li
137.989 18.2739 li
137.685 18.231 137.493 18.1177 137.411 17.9302 cv
137.411 17.8989 li
137.271 17.8208 li
137.192 17.6177 li
137.051 17.5239 li
137.051 17.3521 li
136.912 16.8208 li
136.942 16.3833 li
136.989 16.1958 li
136.989 15.9458 li
137.036 15.7427 li
137.036 15.6646 li
137.114 15.5239 li
137.099 15.5396 li
137.099 15.4692 137.114 15.395 137.146 15.3208 cv
137.146 15.2583 li
137.114 14.9614 li
137.114 14.8286 137.176 14.7075 137.301 14.6021 cv
137.301 14.5942 137.301 14.5708 137.301 14.5396 cv
137.301 14.5083 137.287 14.4458 137.254 14.3521 cv
137.231 14.2505 137.224 14.1763 137.224 14.1333 cv
137.224 14.0317 137.248 13.9263 137.301 13.8208 cv
137.364 13.9263 137.45 13.9771 137.567 13.9771 cv
137.614 13.9771 li
137.623 13.9458 137.653 13.9106 137.708 13.8677 cv
137.778 13.6724 137.868 13.5044 137.974 13.3677 cv
138.021 13.3052 li
138.021 13.2739 138.044 13.188 138.099 13.0396 cv
138.192 13.0396 li
138.224 12.9771 li
138.317 12.9458 li
138.356 12.8833 138.383 12.8481 138.396 12.8364 cv
138.403 12.8286 138.489 12.7817 138.646 12.6958 cv
138.676 12.6333 138.728 12.5825 138.801 12.5396 cv
138.833 12.52 138.868 12.5005 138.911 12.4771 cv
138.958 12.4146 li
139.176 12.3442 139.31 12.3052 139.364 12.3052 cv
139.435 12.3052 139.498 12.3208 139.551 12.3521 cv
139.614 12.3364 li
139.692 12.3833 li
139.787 12.4575 139.883 12.52 139.989 12.5708 cv
140.192 12.7271 li
140.192 12.7739 li
140.368 12.9224 140.458 13.1255 140.458 13.3833 cv
140.426 13.5083 li
140.458 13.8989 li
140.349 13.9771 li
140.239 14.2896 li
140.004 14.5396 li
139.989 14.7271 li
139.739 14.9146 139.504 15.0669 139.286 15.1802 cv
139.212 15.2856 139.103 15.3364 138.958 15.3364 cv
138.911 15.3364 li
138.692 15.4771 li
138.489 15.4771 li
138.208 15.6021 li
137.989 15.4927 li
137.974 15.4927 li
137.95 15.5552 137.935 15.6567 137.926 15.7896 cv
137.817 15.8521 li
137.817 15.9927 li
137.739 16.2114 li
137.758 16.3989 137.771 16.52 137.771 16.5708 cv
137.724 16.6177 li
137.724 16.7231 137.715 16.7974 137.708 16.8364 cv
137.708 16.8481 137.708 16.8638 137.708 16.8833 cv
137.708 16.895 137.708 16.9067 137.708 16.9146 cv
137.708 16.9771 137.739 17.0317 137.801 17.0708 cv
137.821 17.1646 137.864 17.2231 137.926 17.2427 cv
138.004 17.3208 li
138.271 17.3989 li
138.271 17.4302 li
138.364 17.4458 li
138.771 17.4771 li
139.004 17.4458 li
139.129 17.3521 li
139.208 17.3364 li
139.317 17.1489 li
139.379 17.1333 li
139.676 17.0396 li
139.715 16.9888 139.771 16.9419 139.833 16.8989 cv
139.879 16.8364 li
140.036 16.8052 140.123 16.7231 140.146 16.5864 cv
140.258 16.4731 140.403 16.4146 140.583 16.4146 cv
140.629 16.4146 li
140.786 16.5942 140.864 16.7388 140.864 16.8521 cv
140.864 16.8521 li
cp
f
149.262 15.8989 mo
149.262 15.9614 149.208 16.0474 149.106 16.1489 cv
148.965 16.3521 li
148.919 16.5864 li
148.81 16.6177 li
148.794 16.6958 li
148.669 16.7388 148.575 16.8364 148.512 16.9927 cv
148.426 17.1099 148.333 17.1919 148.231 17.2427 cv
148.188 17.2739 148.153 17.3013 148.123 17.3208 cv
148.06 17.4302 li
147.95 17.4458 li
147.637 17.6177 li
147.231 17.6646 li
147.123 17.6489 li
146.95 17.6802 li
146.873 17.6021 li
146.754 17.5396 146.676 17.4849 146.637 17.4302 cv
146.532 17.4106 146.458 17.3325 146.419 17.1958 cv
146.282 17.0396 146.215 16.9146 146.215 16.8208 cv
146.215 16.7739 li
146.123 16.6333 li
146.106 16.6177 li
146.028 16.3989 li
145.919 16.1646 li
145.95 15.8989 li
145.825 15.7427 li
145.653 14.7114 li
145.623 14.5669 145.606 14.4458 145.606 14.3521 cv
145.59 14.2896 li
145.528 14.2114 li
145.419 14.3521 li
144.981 14.8052 li
144.825 15.0708 li
144.748 15.2271 li
144.623 15.4302 li
144.512 15.5239 li
144.528 15.5864 li
144.356 15.9458 li
144.262 16.0708 li
144.153 16.1021 li
144.044 16.2114 li
144.044 16.3677 143.965 16.4731 143.81 16.5239 cv
143.794 16.5396 li
143.719 16.7192 143.637 16.8286 143.544 16.8677 cv
143.435 17.0396 li
143.254 17.1958 143.142 17.2974 143.09 17.3364 cv
143.067 17.4106 143.028 17.4771 142.965 17.5396 cv
142.942 17.563 142.912 17.5942 142.873 17.6333 cv
142.849 17.77 142.739 17.8599 142.544 17.9146 cv
142.403 17.9614 li
142.248 17.9497 142.114 17.856 142.012 17.6802 cv
141.825 17.3833 li
141.887 17.0864 li
141.873 16.9302 li
141.887 16.9146 li
141.903 16.7583 li
141.778 16.4614 li
141.873 16.3208 li
141.825 16.1646 li
141.903 15.9927 li
141.935 15.7271 li
141.873 15.6802 li
141.981 15.5083 li
141.935 15.4302 li
141.935 15.2271 li
141.981 14.8677 li
141.958 14.7974 141.95 14.7427 141.95 14.7114 cv
141.95 14.7036 141.955 14.688 141.965 14.6646 cv
141.965 14.645 141.965 14.6294 141.965 14.6177 cv
141.903 14.5239 li
141.935 14.1333 li
141.935 14.0083 li
141.965 13.8208 li
141.919 13.4927 li
142.137 13.1333 li
142.376 13.1763 142.544 13.2349 142.637 13.3052 cv
142.739 13.3677 142.794 13.4888 142.794 13.6646 cv
142.794 13.7739 li
142.873 13.9146 li
142.84 14.1646 li
142.887 14.6489 li
142.81 14.8677 li
142.84 15.1177 li
142.84 15.3208 li
142.748 15.4614 li
142.81 15.6802 li
142.748 15.8052 li
142.731 15.9458 li
142.81 16.0708 li
142.7 16.3208 li
142.669 16.4302 li
142.669 16.5396 li
142.731 16.6646 li
142.935 16.4614 li
142.935 16.3364 142.974 16.2544 143.06 16.2114 cv
143.06 16.1411 143.09 16.0825 143.153 16.0396 cv
143.123 15.9927 li
143.278 15.8521 li
143.31 15.8052 li
143.31 15.6958 li
143.498 15.5552 li
143.544 15.4302 li
143.653 15.3677 li
144.123 14.8364 li
144.08 14.8911 143.95 15.0356 143.731 15.2739 cv
143.731 15.3052 li
143.748 15.2271 li
143.903 15.0396 li
144.012 14.8364 li
144.012 14.7114 li
144.2 14.6489 li
144.215 14.4927 li
144.262 14.4458 li
144.278 14.3989 li
144.278 14.3052 li
144.45 14.1333 li
144.45 14.1255 144.45 14.1099 144.45 14.0864 cv
144.438 14.0552 144.435 14.0396 144.435 14.0396 cv
144.435 13.895 144.512 13.813 144.669 13.7896 cv
144.739 13.645 144.849 13.563 144.998 13.5396 cv
145.075 13.4302 li
145.09 13.4146 li
145.162 13.313 145.271 13.2388 145.419 13.1958 cv
145.528 13.0552 li
145.81 13.0552 li
145.965 13.2271 li
146.09 13.3052 li
146.106 13.3364 li
146.185 13.3677 li
146.215 13.6177 li
146.419 13.7271 li
146.325 13.9927 li
146.465 14.2896 li
146.465 14.6177 li
146.56 15.0708 li
146.59 15.5083 li
146.685 15.7583 li
146.762 16.0708 li
146.813 16.1255 146.849 16.1919 146.873 16.2739 cv
147.09 16.3364 li
147.09 16.5708 li
147.2 16.7114 li
147.2 16.7427 li
147.262 16.7583 li
147.31 16.8208 li
147.356 16.7739 li
147.333 16.7739 147.356 16.7739 147.419 16.7739 cv
147.501 16.7739 147.59 16.6958 147.685 16.5396 cv
147.825 16.5083 li
147.873 16.4458 li
147.892 16.3833 147.938 16.3364 148.012 16.3052 cv
148.09 16.3052 li
148.137 16.2583 li
148.153 16.2114 li
148.185 16.1489 li
148.267 16.0981 148.317 16.0161 148.34 15.8989 cv
148.481 15.7583 li
148.498 15.6489 li
148.59 15.4614 li
148.81 15.3833 li
149.137 15.4771 li
149.248 15.8364 li
149.248 15.8481 149.251 15.8521 149.262 15.8521 cv
149.262 15.8755 149.262 15.8911 149.262 15.8989 cv
149.262 15.8989 li
cp
f
153.356 13.5239 mo
153.356 13.5981 153.282 13.6646 153.137 13.7271 cv
153.106 13.77 153.047 13.8052 152.965 13.8364 cv
152.849 13.8911 152.767 13.9302 152.715 13.9614 cv
152.465 13.8833 li
152.34 13.9771 152.176 14.0239 151.981 14.0239 cv
151.84 13.9771 li
151.731 14.0864 li
151.403 14.0864 li
151.2 14.2114 li
151.106 14.1802 151.021 14.1646 150.95 14.1646 cv
150.919 14.188 150.86 14.2036 150.778 14.2114 cv
150.735 14.2114 150.692 14.2036 150.653 14.1802 cv
150.606 14.6333 li
150.623 14.9614 li
150.59 15.3833 li
150.606 15.8521 li
150.653 16.0552 li
150.653 16.2271 li
150.81 16.5864 li
150.787 16.6099 150.778 16.6411 150.778 16.6802 cv
150.778 16.7349 150.864 16.7739 151.044 16.8052 cv
151.06 16.9458 li
151.153 16.9771 li
151.294 17.0864 li
151.387 17.1489 li
151.469 17.1411 151.528 17.1333 151.56 17.1333 cv
151.629 17.1333 151.705 17.145 151.778 17.1646 cv
151.81 17.145 151.876 17.0864 151.981 16.9927 cv
152.051 16.9302 152.123 16.8989 152.185 16.8989 cv
152.192 16.8989 152.205 16.8989 152.215 16.8989 cv
152.235 16.9106 152.248 16.9146 152.248 16.9146 cv
152.317 16.7583 152.45 16.6606 152.637 16.6177 cv
152.801 16.6177 152.942 16.6724 153.06 16.7739 cv
153.06 16.8521 li
153.06 17.1255 152.958 17.2974 152.762 17.3677 cv
152.7 17.5356 152.547 17.645 152.31 17.6958 cv
152.169 17.8208 li
152.012 17.8208 li
151.731 17.8989 li
151.669 17.9067 151.58 17.9146 151.465 17.9146 cv
151.403 17.9146 151.333 17.8989 151.262 17.8677 cv
151.106 17.8677 li
150.685 17.6489 li
150.575 17.6021 li
150.325 17.2739 li
150.185 17.1177 li
149.919 16.5239 li
149.825 15.9458 li
149.84 15.8052 li
149.748 15.6802 li
149.81 15.5083 li
149.748 15.2427 li
149.825 15.1646 li
149.856 15.0083 li
149.825 14.8677 li
149.84 14.6489 li
149.794 14.4458 li
149.856 14.3989 li
149.856 14.1958 li
149.762 14.1646 li
149.544 14.2114 li
149.325 14.0552 li
149.294 14.0552 li
149.056 14.0552 148.935 13.9302 148.935 13.6802 cv
148.935 13.6333 li
148.778 13.4146 li
149.012 13.1958 li
149.31 13.2427 li
149.465 13.2114 li
149.7 13.2739 li
149.95 13.2739 li
149.95 13.0396 li
149.794 12.6958 li
149.95 12.6177 li
149.887 12.4302 li
149.903 12.0708 li
149.81 11.9146 li
149.748 11.8208 149.715 11.7388 149.715 11.6646 cv
149.715 11.5825 149.735 11.5083 149.778 11.4458 cv
149.825 11.2896 li
149.919 11.1958 li
150.126 11.1567 150.267 11.1333 150.34 11.1333 cv
150.599 11.1333 150.739 11.2505 150.762 11.4771 cv
150.731 11.5396 li
150.782 11.6138 150.81 11.6802 150.81 11.7427 cv
150.81 11.7544 150.801 11.7739 150.794 11.8052 cv
150.762 11.8677 li
150.748 11.9614 li
150.81 12.1177 li
150.794 12.1802 li
150.81 12.3364 li
150.7 12.4771 li
150.762 12.7271 li
150.715 13.0083 li
150.81 13.1177 li
150.715 13.3364 li
151.09 13.2896 li
151.748 13.3521 li
152.278 13.2583 li
152.465 13.2739 li
152.512 13.2583 li
152.981 13.2583 li
153.231 13.2583 153.356 13.3481 153.356 13.5239 cv
153.356 13.5239 li
cp
f
163.806 13.1021 mo
163.696 13.5083 li
163.258 13.5542 li
163.024 13.7114 li
162.869 13.6489 li
162.696 13.7427 li
162.508 13.8208 li
162.399 13.8989 li
162.399 13.9458 li
162.149 14.0708 li
161.978 14.2896 li
161.899 14.2896 li
161.763 14.4253 161.668 14.5083 161.619 14.5396 cv
161.446 14.8042 li
161.383 14.8364 li
161.36 14.8989 161.336 14.9927 161.306 15.1177 cv
161.133 15.1792 li
161.071 15.3208 li
160.961 15.4458 li
160.946 15.6333 li
160.853 15.6646 li
160.853 15.8364 li
160.806 15.8833 li
160.836 15.9253 160.869 15.9683 160.899 16.0083 cv
160.711 16.0864 li
160.696 16.2427 li
160.571 16.4458 li
160.649 16.6021 li
160.494 16.8208 li
160.5 16.895 160.508 16.9458 160.508 16.9771 cv
160.508 16.9888 160.508 17.0044 160.508 17.0239 cv
160.498 17.0542 160.494 17.0786 160.494 17.0864 cv
160.524 17.1958 li
160.728 17.4146 li
160.571 17.6958 li
160.431 17.8042 li
160.086 17.9614 li
159.649 17.7896 li
159.649 17.5083 li
159.603 17.3989 li
159.633 17.2271 li
159.623 17.0933 159.619 16.9927 159.619 16.9292 cv
159.619 16.9106 159.619 16.8794 159.619 16.8364 cv
159.619 16.7974 159.619 16.77 159.619 16.7583 cv
159.619 16.6333 li
159.556 16.5825 159.524 16.52 159.524 16.4458 cv
159.524 16.3833 159.556 16.313 159.619 16.2271 cv
159.619 16.188 159.606 16.0669 159.586 15.8677 cv
159.619 15.8364 li
159.586 15.6792 li
159.619 15.5239 li
159.586 15.4458 li
159.619 15.1646 li
159.556 15.0542 li
159.603 14.9146 li
159.556 14.7583 li
159.563 14.7183 159.571 14.6567 159.571 14.5708 cv
159.571 14.4458 159.547 14.3677 159.508 14.3364 cv
159.571 14.2583 li
159.508 14.0396 li
159.416 13.8833 li
159.461 13.6958 li
159.416 13.6177 li
159.369 13.3364 li
159.369 13.2427 li
159.326 13.1919 159.306 13.1294 159.306 13.0542 cv
159.306 12.8989 159.481 12.7651 159.836 12.6489 cv
160.133 12.7114 li
160.196 12.9458 li
160.321 13.1021 li
160.291 13.4146 li
160.31 13.5825 160.336 13.7583 160.369 13.9458 cv
160.399 14.1333 li
160.407 14.1567 160.418 14.2036 160.431 14.2739 cv
160.431 14.3169 160.407 14.3677 160.369 14.4292 cv
160.399 14.6646 li
160.383 14.9292 li
160.336 15.0542 li
160.369 15.1021 li
160.399 15.2114 li
160.438 15.1606 160.465 15.1021 160.478 15.0396 cv
160.524 14.8521 li
160.543 14.813 160.58 14.7817 160.633 14.7583 cv
160.681 14.5708 li
160.853 14.4771 li
160.869 14.3364 li
161.008 14.1792 li
161.103 14.0083 li
161.205 13.895 161.306 13.8208 161.399 13.7896 cv
161.431 13.7583 li
161.524 13.5864 li
161.649 13.5542 li
161.744 13.4614 li
161.869 13.3833 li
161.946 13.3042 li
162.008 13.3042 li
162.103 13.2583 li
162.149 13.1958 li
162.306 13.1177 li
162.508 12.9927 li
162.791 12.8833 li
162.903 12.8755 162.965 12.8677 162.978 12.8677 cv
162.978 12.8794 162.978 12.8833 162.978 12.8833 cv
162.965 12.8833 162.961 12.8833 162.961 12.8833 cv
162.978 12.8833 li
163.008 12.8833 163.056 12.8677 163.119 12.8364 cv
163.158 12.8042 163.215 12.7896 163.291 12.7896 cv
163.321 12.7896 163.373 12.8003 163.446 12.8208 cv
163.653 12.8325 163.774 12.9253 163.806 13.1021 cv
163.806 13.1021 li
cp
f
157.205 13.3442 mo
157.205 13.3247 157.189 13.2778 157.158 13.2036 cv
157.111 13.188 li
157.08 13.2036 li
157.068 13.2036 157.052 13.2036 157.033 13.2036 cv
157.01 13.2036 156.994 13.2036 156.986 13.2036 cv
156.974 13.2036 156.963 13.2036 156.955 13.2036 cv
156.931 13.2036 156.916 13.2036 156.908 13.2036 cv
156.799 13.2817 li
156.689 13.2974 li
156.627 13.313 li
156.424 13.5786 li
156.283 13.6724 li
156.095 14.0161 li
155.986 14.0786 li
155.963 14.2271 155.908 14.3442 155.814 14.438 cv
155.767 14.5161 li
155.861 14.4653 155.958 14.438 156.064 14.438 cv
156.158 14.3911 li
156.189 14.2974 li
156.361 14.2974 li
156.455 14.1567 li
156.533 14.1567 li
156.658 14.2036 li
156.72 14.0317 li
156.799 14.0317 li
156.799 13.8911 li
156.955 13.8599 li
157.002 13.8286 li
157.017 13.7192 li
157.174 13.4849 li
157.193 13.4458 157.205 13.3989 157.205 13.3442 cv
157.205 13.3442 li
cp
158.392 16.7974 mo
158.392 16.8911 158.318 17.0122 158.174 17.1567 cv
158.131 17.2817 158.068 17.3872 157.986 17.4692 cv
157.924 17.4849 li
157.783 17.7036 li
157.564 17.7505 li
157.345 17.8911 li
157.22 18.1099 li
157.095 18.0786 li
157.002 18.1177 156.927 18.145 156.877 18.1567 cv
156.799 18.2661 li
156.775 18.2544 156.74 18.2505 156.689 18.2505 cv
156.584 18.2505 156.486 18.3208 156.392 18.4692 cv
156.22 18.3286 li
156.189 18.3286 156.142 18.3286 156.08 18.3286 cv
155.974 18.3286 155.885 18.313 155.814 18.2817 cv
155.611 18.2817 li
155.517 18.2192 li
155.213 18.1763 155.021 18.063 154.939 17.8755 cv
154.939 17.8442 li
154.799 17.7661 li
154.72 17.563 li
154.58 17.4692 li
154.58 17.2974 li
154.439 16.7661 li
154.47 16.3286 li
154.517 16.1411 li
154.517 15.8911 li
154.564 15.688 li
154.564 15.6099 li
154.642 15.4692 li
154.627 15.4849 li
154.627 15.4146 154.642 15.3403 154.674 15.2661 cv
154.674 15.2036 li
154.642 14.9067 li
154.642 14.7739 154.705 14.6528 154.83 14.5474 cv
154.83 14.5396 154.83 14.5161 154.83 14.4849 cv
154.83 14.4536 154.814 14.3911 154.783 14.2974 cv
154.76 14.1958 154.752 14.1216 154.752 14.0786 cv
154.752 13.9771 154.775 13.8716 154.83 13.7661 cv
154.892 13.8716 154.978 13.9224 155.095 13.9224 cv
155.142 13.9224 li
155.15 13.8911 155.181 13.856 155.236 13.813 cv
155.306 13.6177 155.396 13.4497 155.502 13.313 cv
155.549 13.2505 li
155.549 13.2192 155.572 13.1333 155.627 12.9849 cv
155.72 12.9849 li
155.752 12.9224 li
155.845 12.8911 li
155.885 12.8286 155.912 12.7935 155.924 12.7817 cv
155.931 12.7739 156.017 12.7271 156.174 12.6411 cv
156.205 12.5786 156.256 12.5278 156.33 12.4849 cv
156.361 12.4653 156.396 12.4458 156.439 12.4224 cv
156.486 12.3599 li
156.705 12.2896 156.838 12.2505 156.892 12.2505 cv
156.963 12.2505 157.025 12.2661 157.08 12.2974 cv
157.142 12.2817 li
157.22 12.3286 li
157.314 12.4028 157.412 12.4653 157.517 12.5161 cv
157.72 12.6724 li
157.72 12.7192 li
157.896 12.8677 157.986 13.0708 157.986 13.3286 cv
157.955 13.4536 li
157.986 13.8442 li
157.877 13.9224 li
157.767 14.2349 li
157.533 14.4849 li
157.517 14.6724 li
157.267 14.8599 157.033 15.0122 156.814 15.1255 cv
156.74 15.231 156.631 15.2817 156.486 15.2817 cv
156.439 15.2817 li
156.22 15.4224 li
156.017 15.4224 li
155.736 15.5474 li
155.517 15.438 li
155.502 15.438 li
155.478 15.5005 155.463 15.6021 155.455 15.7349 cv
155.345 15.7974 li
155.345 15.938 li
155.267 16.1567 li
155.287 16.3442 155.299 16.4653 155.299 16.5161 cv
155.252 16.563 li
155.252 16.6685 155.244 16.7427 155.236 16.7817 cv
155.236 16.7935 155.236 16.8091 155.236 16.8286 cv
155.236 16.8403 155.236 16.8521 155.236 16.8599 cv
155.236 16.9224 155.267 16.9771 155.33 17.0161 cv
155.349 17.1099 155.392 17.1685 155.455 17.188 cv
155.533 17.2661 li
155.799 17.3442 li
155.799 17.3755 li
155.892 17.3911 li
156.299 17.4224 li
156.533 17.3911 li
156.658 17.2974 li
156.736 17.2817 li
156.845 17.0942 li
156.908 17.0786 li
157.205 16.9849 li
157.244 16.9341 157.299 16.8872 157.361 16.8442 cv
157.408 16.7817 li
157.564 16.7505 157.65 16.6685 157.674 16.5317 cv
157.787 16.4185 157.931 16.3599 158.111 16.3599 cv
158.158 16.3599 li
158.314 16.5396 158.392 16.6841 158.392 16.7974 cv
158.392 16.7974 li
cp
f
55.6064 26.7192 mo
55.6064 26.6567 li
55.5444 26.606 55.5122 26.5435 55.5122 26.4692 cv
55.5444 26.4224 li
55.4346 26.188 li
55.4502 25.9536 li
55.4033 25.8911 li
55.2974 25.8208 55.2476 25.7583 55.2476 25.7036 cv
55.1724 25.6724 55.1372 25.5942 55.1372 25.4692 cv
55.0596 25.4536 li
54.9194 25.2192 li
54.8096 25.1255 li
54.5596 25.0317 li
54.4653 25.0161 li
54.4116 25.0161 54.3794 25.0005 54.3726 24.9692 cv
54.1226 25.2192 li
53.9653 25.563 li
53.7153 25.688 li
53.6846 25.8286 li
53.5596 25.8911 li
53.5122 26.2036 li
53.3726 26.2661 li
53.3403 26.3833 53.3252 26.4849 53.3252 26.5786 cv
53.1226 26.7661 li
53.1846 26.7974 li
53.1846 26.8911 53.1455 26.9771 53.0752 27.0474 cv
53.0513 27.1216 53.0205 27.2036 52.9814 27.2974 cv
52.9814 27.3911 li
52.9502 27.438 li
52.9653 27.5786 li
52.8252 27.9067 li
52.8564 27.9692 li
52.8564 28.2974 li
52.8096 28.4692 li
52.8096 28.6411 li
52.9194 28.7974 li
53.0903 28.8442 li
53.1533 28.8755 li
53.2476 28.8286 li
53.5596 28.8442 li
53.6064 28.7349 li
53.6533 28.7349 li
53.7046 28.7349 53.7354 28.7466 53.7476 28.7661 cv
53.8564 28.7349 li
53.9502 28.7661 li
54.1064 28.6567 li
54.1226 28.6255 li
54.2314 28.5942 li
54.2822 28.5122 54.4116 28.4224 54.6226 28.3286 cv
54.6533 28.2817 li
54.8872 28.1099 li
55.0283 27.9224 li
55.2153 27.813 li
55.2314 27.7661 li
55.2944 27.6255 li
55.2944 27.4692 li
55.4346 27.3442 li
55.4814 27.2661 li
55.5444 27.188 li
55.5122 27.0942 55.4976 27.0278 55.4976 26.9849 cv
55.4976 26.9146 55.5166 26.8403 55.5596 26.7661 cv
55.6064 26.7192 li
cp
56.4033 26.4224 mo
56.3403 26.6411 li
56.3403 26.8521 56.3252 27.0161 56.2944 27.1411 cv
56.2314 27.2505 li
56.2314 27.3911 li
56.1694 27.4692 li
56.1226 27.6411 li
55.9976 27.7661 li
55.9194 28.0786 li
55.8096 28.1099 li
55.7622 28.2349 li
55.6226 28.3286 li
55.5283 28.5317 li
55.3872 28.5942 li
55.3726 28.7505 li
55.1372 28.8286 li
55.0444 28.9771 54.9194 29.0708 54.7622 29.1099 cv
54.7153 29.1099 li
54.5986 29.2739 54.4502 29.3599 54.2622 29.3599 cv
54.1885 29.4106 54.0986 29.438 53.9976 29.438 cv
53.8726 29.5161 li
53.7476 29.563 li
53.5903 29.6724 li
53.4346 29.6724 li
53.2783 29.7192 li
53.0752 29.6255 li
52.5596 29.5942 li
52.3726 29.313 li
52.1064 29.0474 li
52.1694 28.8442 li
51.9976 28.438 li
52.0752 28.2817 li
52.0122 28.0005 li
52.0752 27.813 li
52.0513 27.7114 52.0444 27.6333 52.0444 27.5786 cv
52.0444 27.4224 52.0835 27.313 52.1694 27.2505 cv
52.1763 27.1685 52.2314 27.0317 52.3252 26.8442 cv
52.3872 26.8442 li
52.3564 26.7661 li
52.4033 26.5942 li
52.4033 26.4224 li
52.4653 26.3521 52.5015 26.2974 52.5122 26.2661 cv
52.4653 26.1099 li
52.4653 26.0474 li
52.5283 25.9458 52.5596 25.8286 52.5596 25.7036 cv
52.8096 25.3599 li
52.8096 25.3599 52.8174 25.356 52.8403 25.3442 cv
52.8604 25.3247 52.8765 25.3052 52.8872 25.2817 cv
52.8726 25.2349 li
52.9194 25.2349 li
53.1064 25.0317 li
53.1226 24.7661 li
53.4194 24.6567 li
53.5322 24.5864 53.6064 24.4653 53.6372 24.2974 cv
53.7944 24.2974 li
53.8765 24.2466 53.9546 24.2192 54.0283 24.2192 cv
54.0986 24.2192 54.1694 24.2349 54.2314 24.2661 cv
54.3726 24.2817 li
54.6846 24.1567 li
54.8403 24.313 li
54.9814 24.3911 li
55.0752 24.3911 li
55.2476 24.5005 li
55.3564 24.5005 li
55.4585 24.5942 55.5796 24.7271 55.7153 24.8911 cv
55.7314 24.9536 li
55.8096 25.0005 li
56.0752 25.3286 li
56.2944 25.8911 li
56.2944 26.0005 li
56.4033 26.4224 li
cp
f
62.7046 22.0786 mo
62.7046 22.2349 62.6104 22.3911 62.4224 22.5474 cv
62.3296 22.4849 li
62.1416 22.5942 li
61.8916 22.1255 li
61.8794 22.0122 61.8486 21.9146 61.7974 21.8286 cv
61.7192 21.8599 li
61.5166 21.7661 li
61.4546 21.7505 li
61.2974 21.8442 li
61.0474 21.7661 li
60.9546 21.813 li
60.8794 21.8872 60.8052 21.9224 60.7354 21.9224 cv
60.7046 21.9224 60.6763 21.9224 60.6572 21.9224 cv
60.6572 22.0317 li
60.5713 22.1567 60.4736 22.313 60.3604 22.5005 cv
60.3486 22.5864 60.3174 22.7349 60.2666 22.9536 cv
60.1724 23.0161 li
60.1265 23.1567 li
60.0635 23.2661 li
60.1265 23.5005 li
59.9692 23.7192 li
59.9224 23.8911 li
59.8765 23.9849 li
59.8916 24.1567 li
59.7192 24.5942 li
59.7515 24.7974 li
59.7393 24.8286 59.6885 24.938 59.5942 25.1255 cv
59.5942 25.1724 li
59.6655 25.1411 59.7354 25.1255 59.7974 25.1255 cv
59.8604 25.1255 li
59.8794 25.1255 59.9155 25.1177 59.9692 25.0942 cv
60.0166 25.0942 li
60.0166 25.0942 60.1494 25.106 60.4224 25.1255 cv
60.4546 25.0942 li
60.5474 25.0864 60.6025 25.0786 60.6265 25.0786 cv
60.6963 25.0786 60.7866 25.0942 60.8916 25.1255 cv
60.9854 25.106 61.0674 25.0942 61.1416 25.0942 cv
61.2046 25.0942 61.2583 25.106 61.3135 25.1255 cv
61.4072 25.1255 li
61.5635 25.1724 li
61.8525 25.1724 62.0015 25.2896 62.0015 25.5161 cv
62.0015 25.5786 61.9893 25.6567 61.9692 25.7505 cv
61.4224 25.8911 li
61.1104 25.8442 li
61.0244 25.8755 60.8794 25.9067 60.6724 25.938 cv
60.6104 25.8755 li
60.5552 25.9302 60.4775 25.9536 60.3765 25.9536 cv
60.2515 25.9536 li
59.9072 26.1099 li
59.7515 26.0317 li
59.6885 26.0317 li
59.6265 26.1177 59.5405 26.1685 59.4385 26.188 cv
59.4546 26.2661 li
59.4072 26.4224 li
59.4854 26.6255 li
59.3296 26.938 li
59.3604 27.4224 li
59.2974 27.5942 li
59.3442 27.7661 li
59.2192 28.0161 li
59.2515 28.1724 li
59.2583 28.1724 59.2666 28.188 59.2666 28.2192 cv
59.2666 28.231 59.2515 28.3208 59.2192 28.4849 cv
59.1885 28.6528 59.1724 28.813 59.1724 28.9692 cv
59.1724 29.0786 li
59.1802 29.0903 59.2236 29.1411 59.2974 29.2349 cv
59.2192 29.438 li
59.2974 29.6724 li
59.2354 29.8755 li
59.3765 30.4536 li
59.4072 31.1099 li
59.5942 31.3442 li
59.5015 31.6099 li
59.5942 31.7739 59.6416 31.9106 59.6416 32.0161 cv
59.6416 32.0474 li
59.6416 32.0669 59.6455 32.0864 59.6572 32.1099 cv
59.6572 32.1411 59.6572 32.1606 59.6572 32.1724 cv
59.6572 32.4731 59.4775 32.6333 59.1265 32.6567 cv
59.0322 32.4692 li
58.8765 32.3755 li
58.8604 32.1567 li
58.6265 31.4849 li
58.6265 31.3599 li
58.5835 31.2114 58.5635 31.1294 58.5635 31.1099 cv
58.5635 31.0669 58.5674 31.0356 58.5796 31.0161 cv
58.5474 30.813 li
58.5796 30.6099 li
58.5474 30.4849 li
58.5474 30.2192 li
58.4224 29.4692 li
58.4546 29.438 li
58.4224 29.313 li
58.4546 29.1411 li
58.3604 28.9849 li
58.4385 28.8442 li
58.4385 28.2192 li
58.5015 28.1567 li
58.5015 27.7192 li
58.5322 27.6255 li
58.5015 27.2505 li
58.5474 27.1099 li
58.5552 26.9771 58.6025 26.6724 58.6885 26.2036 cv
58.6416 26.2036 li
58.4854 26.1567 li
58.3135 26.1567 li
57.9692 26.2036 li
57.7666 26.1567 li
57.4224 26.2192 li
57.2974 26.2036 li
57.2544 26.2036 57.2085 26.2036 57.1572 26.2036 cv
56.8013 26.0474 56.6182 25.9302 56.5942 25.8442 cv
56.5322 25.6411 li
56.6372 25.3286 56.7822 25.1724 56.9692 25.1724 cv
56.9692 25.1724 57.1025 25.1997 57.3765 25.2505 cv
58.0635 25.2817 li
58.4072 25.2036 li
58.6885 25.2192 li
58.7974 25.2192 li
58.8296 25.0786 li
58.8604 24.7192 li
58.9224 24.5786 li
58.8765 24.3442 li
58.8765 24.2505 58.9116 24.1724 58.9854 24.1099 cv
58.9692 23.9849 li
59.0942 23.8286 li
59.1572 23.4692 li
59.2046 23.4224 li
59.1724 23.2661 li
59.2666 23.1528 59.3135 23.0591 59.3135 22.9849 cv
59.3013 22.9341 59.2974 22.9067 59.2974 22.9067 cv
59.2974 22.9692 59.3604 22.7896 59.4854 22.3599 cv
59.5635 22.2974 li
59.5796 22.0317 li
59.5942 22.0942 li
59.5942 22.063 li
59.5942 21.9302 59.6494 21.8286 59.7666 21.7661 cv
59.8442 21.6567 li
59.9854 21.2974 li
60.0166 21.2974 li
60.0986 21.2974 60.1416 21.2466 60.1416 21.1411 cv
60.1416 21.0942 li
60.4854 20.9849 li
60.5796 20.9849 li
60.6802 20.9536 60.7866 20.938 60.8916 20.938 cv
60.9854 20.938 li
61.0474 20.9067 li
61.3135 20.8442 li
61.6265 20.9224 li
61.6333 20.9341 61.6655 20.9458 61.7192 20.9536 cv
61.7905 20.9224 61.8442 20.9067 61.8765 20.9067 cv
61.9893 20.9067 62.0942 20.9927 62.1885 21.1567 cv
62.3604 21.2817 li
62.4854 21.5161 li
62.6572 21.7036 li
62.7046 22.0317 li
62.7046 22.0786 li
cp
f
69.8765 24.7661 mo
69.7666 25.1724 li
69.3296 25.2192 li
69.0942 25.3755 li
68.9385 25.313 li
68.7666 25.4067 li
68.5796 25.4849 li
68.4692 25.563 li
68.4692 25.6099 li
68.2192 25.7349 li
68.0474 25.9536 li
67.9692 25.9536 li
67.8335 26.0903 67.7393 26.1724 67.6885 26.2036 cv
67.5166 26.4692 li
67.4546 26.5005 li
67.4302 26.563 67.4072 26.6567 67.3765 26.7817 cv
67.2046 26.8442 li
67.1416 26.9849 li
67.0322 27.1099 li
67.0166 27.2974 li
66.9224 27.3286 li
66.9224 27.5005 li
66.8765 27.5474 li
66.9072 27.5903 66.9385 27.6333 66.9692 27.6724 cv
66.7822 27.7505 li
66.7666 27.9067 li
66.6416 28.1099 li
66.7192 28.2661 li
66.5635 28.4849 li
66.5713 28.5591 66.5796 28.6099 66.5796 28.6411 cv
66.5796 28.6528 66.5796 28.6685 66.5796 28.688 cv
66.5674 28.7192 66.5635 28.7427 66.5635 28.7505 cv
66.5942 28.8599 li
66.7974 29.0786 li
66.6416 29.3599 li
66.5015 29.4692 li
66.1572 29.6255 li
65.7192 29.4536 li
65.7192 29.1724 li
65.6724 29.063 li
65.7046 28.8911 li
65.6924 28.7583 65.6885 28.6567 65.6885 28.5942 cv
65.6885 28.5747 65.6885 28.5435 65.6885 28.5005 cv
65.6885 28.4614 65.6885 28.4341 65.6885 28.4224 cv
65.6885 28.2974 li
65.6265 28.2466 65.5942 28.1841 65.5942 28.1099 cv
65.5942 28.0474 65.6265 27.9771 65.6885 27.8911 cv
65.6885 27.8521 65.6763 27.731 65.6572 27.5317 cv
65.6885 27.5005 li
65.6572 27.3442 li
65.6885 27.188 li
65.6572 27.1099 li
65.6885 26.8286 li
65.6265 26.7192 li
65.6724 26.5786 li
65.6265 26.4224 li
65.6333 26.3833 65.6416 26.3208 65.6416 26.2349 cv
65.6416 26.1099 65.6182 26.0317 65.5796 26.0005 cv
65.6416 25.9224 li
65.5796 25.7036 li
65.4854 25.5474 li
65.5322 25.3599 li
65.4854 25.2817 li
65.4385 25.0005 li
65.4385 24.9067 li
65.3955 24.856 65.3765 24.7935 65.3765 24.7192 cv
65.3765 24.563 65.5513 24.4302 65.9072 24.313 cv
66.2046 24.3755 li
66.2666 24.6099 li
66.3916 24.7661 li
66.3604 25.0786 li
66.3794 25.2466 66.4072 25.4224 66.4385 25.6099 cv
66.4692 25.7974 li
66.4775 25.8208 66.4893 25.8677 66.5015 25.938 cv
66.5015 25.981 66.4775 26.0317 66.4385 26.0942 cv
66.4692 26.3286 li
66.4546 26.5942 li
66.4072 26.7192 li
66.4385 26.7661 li
66.4692 26.8755 li
66.5083 26.8247 66.5366 26.7661 66.5474 26.7036 cv
66.5942 26.5161 li
66.6143 26.4771 66.6494 26.4458 66.7046 26.4224 cv
66.7515 26.2349 li
66.9224 26.1411 li
66.9385 26.0005 li
67.0796 25.8442 li
67.1724 25.6724 li
67.2744 25.5591 67.3765 25.4849 67.4692 25.4536 cv
67.5015 25.4224 li
67.5942 25.2505 li
67.7192 25.2192 li
67.8135 25.1255 li
67.9385 25.0474 li
68.0166 24.9692 li
68.0796 24.9692 li
68.1724 24.9224 li
68.2192 24.8599 li
68.3765 24.7817 li
68.5796 24.6567 li
68.8604 24.5474 li
68.9736 24.5396 69.0366 24.5317 69.0474 24.5317 cv
69.0474 24.5435 69.0474 24.5474 69.0474 24.5474 cv
69.0366 24.5474 69.0322 24.5474 69.0322 24.5474 cv
69.0474 24.5474 li
69.0796 24.5474 69.1265 24.5317 69.1885 24.5005 cv
69.2275 24.4692 69.2866 24.4536 69.3604 24.4536 cv
69.3916 24.4536 69.4424 24.4653 69.5166 24.4849 cv
69.7236 24.4966 69.8442 24.5903 69.8765 24.7661 cv
69.8765 24.7661 li
cp
f
73.4263 26.7192 mo
73.4263 26.6567 li
73.3643 26.606 73.3335 26.5435 73.3335 26.4692 cv
73.3643 26.4224 li
73.2544 26.188 li
73.2705 25.9536 li
73.2236 25.8911 li
73.1182 25.8208 73.0674 25.7583 73.0674 25.7036 cv
72.9932 25.6724 72.9585 25.5942 72.9585 25.4692 cv
72.8794 25.4536 li
72.7393 25.2192 li
72.6294 25.1255 li
72.3794 25.0317 li
72.2866 25.0161 li
72.2314 25.0161 72.2002 25.0005 72.1924 24.9692 cv
71.9424 25.2192 li
71.7866 25.563 li
71.5366 25.688 li
71.5044 25.8286 li
71.3794 25.8911 li
71.3335 26.2036 li
71.1924 26.2661 li
71.1616 26.3833 71.1455 26.4849 71.1455 26.5786 cv
70.9424 26.7661 li
71.0044 26.7974 li
71.0044 26.8911 70.9653 26.9771 70.8955 27.0474 cv
70.8726 27.1216 70.8403 27.2036 70.8013 27.2974 cv
70.8013 27.3911 li
70.7705 27.438 li
70.7866 27.5786 li
70.6455 27.9067 li
70.6763 27.9692 li
70.6763 28.2974 li
70.6294 28.4692 li
70.6294 28.6411 li
70.7393 28.7974 li
70.9116 28.8442 li
70.9736 28.8755 li
71.0674 28.8286 li
71.3794 28.8442 li
71.4263 28.7349 li
71.4736 28.7349 li
71.5244 28.7349 71.5552 28.7466 71.5674 28.7661 cv
71.6763 28.7349 li
71.7705 28.7661 li
71.9263 28.6567 li
71.9424 28.6255 li
72.0513 28.5942 li
72.1025 28.5122 72.2314 28.4224 72.4424 28.3286 cv
72.4736 28.2817 li
72.7085 28.1099 li
72.8486 27.9224 li
73.0366 27.813 li
73.0513 27.7661 li
73.1143 27.6255 li
73.1143 27.4692 li
73.2544 27.3442 li
73.3013 27.2661 li
73.3643 27.188 li
73.3335 27.0942 73.3174 27.0278 73.3174 26.9849 cv
73.3174 26.9146 73.3374 26.8403 73.3794 26.7661 cv
73.4263 26.7192 li
cp
74.2236 26.4224 mo
74.1616 26.6411 li
74.1616 26.8521 74.1455 27.0161 74.1143 27.1411 cv
74.0513 27.2505 li
74.0513 27.3911 li
73.9893 27.4692 li
73.9424 27.6411 li
73.8174 27.7661 li
73.7393 28.0786 li
73.6294 28.1099 li
73.5835 28.2349 li
73.4424 28.3286 li
73.3486 28.5317 li
73.2085 28.5942 li
73.1924 28.7505 li
72.9585 28.8286 li
72.8643 28.9771 72.7393 29.0708 72.5835 29.1099 cv
72.5366 29.1099 li
72.4194 29.2739 72.2705 29.3599 72.0835 29.3599 cv
72.0083 29.4106 71.9194 29.438 71.8174 29.438 cv
71.6924 29.5161 li
71.5674 29.563 li
71.4116 29.6724 li
71.2544 29.6724 li
71.0986 29.7192 li
70.8955 29.6255 li
70.3794 29.5942 li
70.1924 29.313 li
69.9263 29.0474 li
69.9893 28.8442 li
69.8174 28.438 li
69.8955 28.2817 li
69.8335 28.0005 li
69.8955 27.813 li
69.8726 27.7114 69.8643 27.6333 69.8643 27.5786 cv
69.8643 27.4224 69.9033 27.313 69.9893 27.2505 cv
69.9976 27.1685 70.0513 27.0317 70.1455 26.8442 cv
70.2085 26.8442 li
70.1763 26.7661 li
70.2236 26.5942 li
70.2236 26.4224 li
70.2866 26.3521 70.3213 26.2974 70.3335 26.2661 cv
70.2866 26.1099 li
70.2866 26.0474 li
70.3486 25.9458 70.3794 25.8286 70.3794 25.7036 cv
70.6294 25.3599 li
70.6294 25.3599 70.6372 25.356 70.6616 25.3442 cv
70.6802 25.3247 70.6963 25.3052 70.7085 25.2817 cv
70.6924 25.2349 li
70.7393 25.2349 li
70.9263 25.0317 li
70.9424 24.7661 li
71.2393 24.6567 li
71.3525 24.5864 71.4263 24.4653 71.4585 24.2974 cv
71.6143 24.2974 li
71.6963 24.2466 71.7744 24.2192 71.8486 24.2192 cv
71.9194 24.2192 71.9893 24.2349 72.0513 24.2661 cv
72.1924 24.2817 li
72.5044 24.1567 li
72.6616 24.313 li
72.8013 24.3911 li
72.8955 24.3911 li
73.0674 24.5005 li
73.1763 24.5005 li
73.2783 24.5942 73.3994 24.7271 73.5366 24.8911 cv
73.5513 24.9536 li
73.6294 25.0005 li
73.8955 25.3286 li
74.1143 25.8911 li
74.1143 26.0005 li
74.2236 26.4224 li
cp
f
78.8374 24.9224 mo
78.8374 24.9966 78.7622 25.063 78.6182 25.1255 cv
78.5874 25.1685 78.5283 25.2036 78.4463 25.2349 cv
78.3296 25.2896 78.2476 25.3286 78.1963 25.3599 cv
77.9463 25.2817 li
77.8213 25.3755 77.6572 25.4224 77.4624 25.4224 cv
77.3213 25.3755 li
77.2124 25.4849 li
76.8833 25.4849 li
76.6802 25.6099 li
76.5874 25.5786 76.5015 25.563 76.4307 25.563 cv
76.3994 25.5864 76.3403 25.6021 76.2583 25.6099 cv
76.2153 25.6099 76.1724 25.6021 76.1333 25.5786 cv
76.0874 26.0317 li
76.1025 26.3599 li
76.0713 26.7817 li
76.0874 27.2505 li
76.1333 27.4536 li
76.1333 27.6255 li
76.2905 27.9849 li
76.2666 28.0083 76.2583 28.0396 76.2583 28.0786 cv
76.2583 28.1333 76.3442 28.1724 76.5244 28.2036 cv
76.5405 28.3442 li
76.6333 28.3755 li
76.7744 28.4849 li
76.8682 28.5474 li
76.9502 28.5396 77.0083 28.5317 77.0405 28.5317 cv
77.1104 28.5317 77.1846 28.5435 77.2583 28.563 cv
77.2905 28.5435 77.3564 28.4849 77.4624 28.3911 cv
77.5322 28.3286 77.6025 28.2974 77.6655 28.2974 cv
77.6724 28.2974 77.6846 28.2974 77.6963 28.2974 cv
77.7153 28.3091 77.7275 28.313 77.7275 28.313 cv
77.7974 28.1567 77.9307 28.0591 78.1182 28.0161 cv
78.2822 28.0161 78.4224 28.0708 78.5405 28.1724 cv
78.5405 28.2505 li
78.5405 28.5239 78.4385 28.6958 78.2432 28.7661 cv
78.1802 28.9341 78.0283 29.0435 77.7905 29.0942 cv
77.6494 29.2192 li
77.4932 29.2192 li
77.2124 29.2974 li
77.1494 29.3052 77.0596 29.313 76.9463 29.313 cv
76.8833 29.313 76.8135 29.2974 76.7432 29.2661 cv
76.5874 29.2661 li
76.1655 29.0474 li
76.0552 29.0005 li
75.8052 28.6724 li
75.6655 28.5161 li
75.3994 27.9224 li
75.3052 27.3442 li
75.3213 27.2036 li
75.2275 27.0786 li
75.2905 26.9067 li
75.2275 26.6411 li
75.3052 26.563 li
75.3374 26.4067 li
75.3052 26.2661 li
75.3213 26.0474 li
75.2744 25.8442 li
75.3374 25.7974 li
75.3374 25.5942 li
75.2432 25.563 li
75.0244 25.6099 li
74.8052 25.4536 li
74.7744 25.4536 li
74.5366 25.4536 74.4155 25.3286 74.4155 25.0786 cv
74.4155 25.0317 li
74.2583 24.813 li
74.4932 24.5942 li
74.7905 24.6411 li
74.9463 24.6099 li
75.1802 24.6724 li
75.4302 24.6724 li
75.4302 24.438 li
75.2744 24.0942 li
75.4302 24.0161 li
75.3682 23.8286 li
75.3833 23.4692 li
75.2905 23.313 li
75.2275 23.2192 75.1963 23.1372 75.1963 23.063 cv
75.1963 22.981 75.2153 22.9067 75.2583 22.8442 cv
75.3052 22.688 li
75.3994 22.5942 li
75.6064 22.5552 75.7476 22.5317 75.8213 22.5317 cv
76.0796 22.5317 76.2192 22.6489 76.2432 22.8755 cv
76.2124 22.938 li
76.2622 23.0122 76.2905 23.0786 76.2905 23.1411 cv
76.2905 23.1528 76.2822 23.1724 76.2744 23.2036 cv
76.2432 23.2661 li
76.2275 23.3599 li
76.2905 23.5161 li
76.2744 23.5786 li
76.2905 23.7349 li
76.1802 23.8755 li
76.2432 24.1255 li
76.1963 24.4067 li
76.2905 24.5161 li
76.1963 24.7349 li
76.5713 24.688 li
77.2275 24.7505 li
77.7583 24.6567 li
77.9463 24.6724 li
77.9932 24.6567 li
78.4624 24.6567 li
78.7124 24.6567 78.8374 24.7466 78.8374 24.9224 cv
78.8374 24.9224 li
cp
f
82.9775 25.0005 mo
82.9302 24.9224 li
82.8374 24.8911 li
82.4624 24.5942 li
82.2275 24.5474 li
82.0405 24.5474 li
82.0083 24.5317 li
81.9155 24.563 li
81.8052 24.5005 li
81.4932 24.5005 li
81.5405 24.5474 li
81.2583 24.6567 li
81.2124 24.7036 li
81.1802 24.7192 li
81.0322 24.8442 80.9307 24.9458 80.8682 25.0161 cv
80.7905 25.313 li
80.7432 25.4224 li
80.8682 25.5942 li
80.6655 25.7505 li
80.6802 25.7974 li
80.5942 25.9458 80.5557 26.0903 80.5557 26.2349 cv
80.4463 26.3599 li
80.4463 26.5786 li
80.3525 26.6724 li
80.3374 26.7817 li
80.2905 26.813 li
80.2905 26.9849 li
80.2583 27.0317 li
80.2583 27.1372 80.2515 27.2153 80.2432 27.2661 cv
80.2583 27.3286 li
80.1494 27.5474 li
80.1963 27.6255 li
80.1182 27.7505 li
80.1963 27.9692 li
80.0713 28.1411 li
80.0874 28.3755 li
80.0874 28.4067 li
80.1333 28.438 li
80.1963 28.4224 li
80.2354 28.3833 80.2783 28.3442 80.3213 28.313 cv
80.2905 28.2192 li
80.4624 28.188 li
80.5083 28.1099 li
81.2124 27.5317 li
81.2744 27.5005 li
81.3682 27.2974 li
81.4072 27.2896 81.4775 27.2583 81.5713 27.2036 cv
81.6333 27.0161 li
81.7432 27.0161 li
81.6963 26.813 li
81.8682 26.7817 li
81.8872 26.7505 81.9155 26.7153 81.9463 26.6724 cv
81.9854 26.6216 82.0244 26.5747 82.0557 26.5317 cv
82.6802 25.7192 li
82.7744 25.5317 li
82.7583 25.4849 li
82.8374 25.3599 li
82.8682 25.2192 li
82.9775 25.1255 li
82.9775 25.0005 li
cp
84.1182 24.3755 mo
84.0083 24.5317 li
84.1025 24.813 li
83.9463 25.0005 li
83.8833 25.2505 li
83.8525 25.313 li
83.8682 25.3755 li
83.8682 25.481 83.8403 25.563 83.7905 25.6255 cv
83.7583 25.6567 li
83.7583 25.7036 li
83.7905 25.7661 83.8052 25.8208 83.8052 25.8599 cv
83.8052 25.9028 83.7974 25.9341 83.7905 25.9536 cv
83.8052 26.0005 li
83.7583 26.1255 li
83.7905 26.2661 li
83.6963 26.3599 li
83.7275 26.5317 li
83.8052 26.6255 li
83.6963 26.7192 li
83.6963 26.9067 li
83.6025 27.0942 li
83.6655 27.2974 li
83.6025 27.3911 li
83.7124 27.4692 li
83.5557 27.7505 li
83.5405 27.7817 li
83.6655 27.813 li
83.5713 28.0786 li
83.5713 28.1255 li
83.5713 28.188 83.5635 28.2349 83.5557 28.2661 cv
83.5713 28.2974 li
83.7583 28.3286 li
83.9155 28.563 li
83.8374 28.7505 li
83.9624 28.7349 li
84.0122 28.8286 84.0444 28.9146 84.0552 28.9849 cv
83.8682 29.1567 li
83.8135 29.2192 83.7354 29.2739 83.6333 29.3286 cv
83.4302 29.438 li
83.3682 29.3755 li
83.2432 29.4536 li
82.8833 29.0161 li
82.8833 28.813 li
82.8296 28.6567 82.8057 28.5122 82.8057 28.3755 cv
82.8057 28.2974 li
82.7275 27.5942 li
82.8374 27.0942 li
82.7583 26.7974 li
82.5552 27.1411 li
82.4463 27.4536 li
82.3525 27.5005 li
82.1802 27.7661 li
81.8833 28.0317 li
81.7905 28.1724 li
81.5405 28.4067 li
81.4775 28.563 li
81.0874 28.7974 li
80.6802 29.2661 li
80.4463 29.313 li
80.2905 29.4224 li
80.0903 29.4224 79.9385 29.3481 79.8374 29.2036 cv
79.4814 29.0278 79.2944 28.7739 79.2744 28.438 cv
79.3374 28.4067 li
79.3213 28.3286 li
79.3052 28.188 li
79.2432 28.0317 li
79.3052 27.8599 li
79.3374 27.6099 li
79.4155 27.2192 li
79.4155 27.2114 79.4155 27.1958 79.4155 27.1724 cv
79.4155 27.1528 79.4155 27.1372 79.4155 27.1255 cv
79.4155 27.0942 79.4194 27.0552 79.4307 27.0005 cv
79.4194 26.9927 79.4155 26.9614 79.4155 26.9067 cv
79.4155 26.856 79.4385 26.7622 79.4932 26.6255 cv
79.5713 26.5942 li
79.5283 26.5552 79.5083 26.5122 79.5083 26.4692 cv
79.5083 26.438 79.5122 26.4146 79.5244 26.3911 cv
79.5122 26.3716 79.5083 26.3442 79.5083 26.313 cv
79.5083 26.2114 79.5552 26.1372 79.6494 26.0942 cv
79.6694 26.0122 79.7124 25.9302 79.7744 25.8442 cv
79.7275 25.7505 li
79.8682 25.5786 li
79.8682 25.5317 li
79.8682 25.3755 79.9194 25.2349 80.0244 25.1099 cv
80.0083 24.8911 li
80.0552 24.8442 li
80.0552 24.8364 80.0552 24.8247 80.0552 24.813 cv
80.0444 24.7935 80.0405 24.7778 80.0405 24.7661 cv
80.0405 24.7271 80.0552 24.688 80.0874 24.6567 cv
80.0874 24.5786 li
80.1182 24.4966 80.2002 24.3755 80.3374 24.2192 cv
80.4814 24.063 80.5874 23.9224 80.6494 23.7974 cv
80.7124 23.8599 li
80.8374 23.7974 li
80.8994 23.7817 li
81.2905 23.5942 li
82.2124 23.6411 li
82.2124 23.7192 li
82.5083 23.7817 li
82.6846 23.7817 82.8057 23.8442 82.8682 23.9692 cv
82.8682 23.9497 82.8726 23.9185 82.8833 23.8755 cv
82.8833 23.856 82.8833 23.8403 82.8833 23.8286 cv
83.1333 24.063 li
83.3525 24.1099 li
83.7905 24.0005 li
83.9463 24.2974 li
84.1182 24.3755 li
cp
f
89.2393 24.9224 mo
89.2393 24.9966 89.1655 25.063 89.0205 25.1255 cv
88.9893 25.1685 88.9302 25.2036 88.8486 25.2349 cv
88.7314 25.2896 88.6494 25.3286 88.5986 25.3599 cv
88.3486 25.2817 li
88.2236 25.3755 88.0596 25.4224 87.8643 25.4224 cv
87.7236 25.3755 li
87.6143 25.4849 li
87.2866 25.4849 li
87.0835 25.6099 li
86.9893 25.5786 86.9033 25.563 86.8335 25.563 cv
86.8013 25.5864 86.7432 25.6021 86.6616 25.6099 cv
86.6182 25.6099 86.5752 25.6021 86.5366 25.5786 cv
86.4893 26.0317 li
86.5044 26.3599 li
86.4736 26.7817 li
86.4893 27.2505 li
86.5366 27.4536 li
86.5366 27.6255 li
86.6924 27.9849 li
86.6694 28.0083 86.6616 28.0396 86.6616 28.0786 cv
86.6616 28.1333 86.7476 28.1724 86.9263 28.2036 cv
86.9424 28.3442 li
87.0366 28.3755 li
87.1763 28.4849 li
87.2705 28.5474 li
87.3525 28.5396 87.4116 28.5317 87.4424 28.5317 cv
87.5122 28.5317 87.5874 28.5435 87.6616 28.563 cv
87.6924 28.5435 87.7583 28.4849 87.8643 28.3911 cv
87.9346 28.3286 88.0044 28.2974 88.0674 28.2974 cv
88.0752 28.2974 88.0874 28.2974 88.0986 28.2974 cv
88.1182 28.3091 88.1294 28.313 88.1294 28.313 cv
88.2002 28.1567 88.3335 28.0591 88.5205 28.0161 cv
88.6846 28.0161 88.8252 28.0708 88.9424 28.1724 cv
88.9424 28.2505 li
88.9424 28.5239 88.8403 28.6958 88.6455 28.7661 cv
88.5835 28.9341 88.4307 29.0435 88.1924 29.0942 cv
88.0513 29.2192 li
87.8955 29.2192 li
87.6143 29.2974 li
87.5513 29.3052 87.4624 29.313 87.3486 29.313 cv
87.2866 29.313 87.2153 29.2974 87.1455 29.2661 cv
86.9893 29.2661 li
86.5674 29.0474 li
86.4585 29.0005 li
86.2085 28.6724 li
86.0674 28.5161 li
85.8013 27.9224 li
85.7085 27.3442 li
85.7236 27.2036 li
85.6294 27.0786 li
85.6924 26.9067 li
85.6294 26.6411 li
85.7085 26.563 li
85.7393 26.4067 li
85.7085 26.2661 li
85.7236 26.0474 li
85.6763 25.8442 li
85.7393 25.7974 li
85.7393 25.5942 li
85.6455 25.563 li
85.4263 25.6099 li
85.2085 25.4536 li
85.1763 25.4536 li
84.9385 25.4536 84.8174 25.3286 84.8174 25.0786 cv
84.8174 25.0317 li
84.6616 24.813 li
84.8955 24.5942 li
85.1924 24.6411 li
85.3486 24.6099 li
85.5835 24.6724 li
85.8335 24.6724 li
85.8335 24.438 li
85.6763 24.0942 li
85.8335 24.0161 li
85.7705 23.8286 li
85.7866 23.4692 li
85.6924 23.313 li
85.6294 23.2192 85.5986 23.1372 85.5986 23.063 cv
85.5986 22.981 85.6182 22.9067 85.6616 22.8442 cv
85.7085 22.688 li
85.8013 22.5942 li
86.0083 22.5552 86.1494 22.5317 86.2236 22.5317 cv
86.4814 22.5317 86.6226 22.6489 86.6455 22.8755 cv
86.6143 22.938 li
86.6655 23.0122 86.6924 23.0786 86.6924 23.1411 cv
86.6924 23.1528 86.6846 23.1724 86.6763 23.2036 cv
86.6455 23.2661 li
86.6294 23.3599 li
86.6924 23.5161 li
86.6763 23.5786 li
86.6924 23.7349 li
86.5835 23.8755 li
86.6455 24.1255 li
86.5986 24.4067 li
86.6924 24.5161 li
86.5986 24.7349 li
86.9736 24.688 li
87.6294 24.7505 li
88.1616 24.6567 li
88.3486 24.6724 li
88.3955 24.6567 li
88.8643 24.6567 li
89.1143 24.6567 89.2393 24.7466 89.2393 24.9224 cv
89.2393 24.9224 li
cp
f
93.0205 27.4849 mo
93.0205 27.6724 92.9893 27.7896 92.9263 27.8286 cv
92.8643 27.8755 li
92.8174 28.0474 li
92.6143 28.1099 li
92.5596 28.2349 92.4775 28.3364 92.3643 28.4067 cv
92.2544 28.438 li
92.0986 28.6099 li
91.9585 28.6411 li
91.9033 28.7896 91.7905 28.8677 91.6143 28.8755 cv
91.5903 28.8989 91.5552 28.9458 91.5044 29.0161 cv
91.3794 29.1021 91.2544 29.1489 91.1294 29.1567 cv
91.0674 29.1724 li
90.9893 29.2817 li
90.7544 29.2817 li
90.5513 29.4224 li
90.0674 29.063 li
89.8335 28.5942 li
89.8174 28.0161 li
89.7705 27.8599 li
89.9263 26.813 li
89.9736 26.7661 li
89.9424 26.6411 89.9263 26.5278 89.9263 26.4224 cv
89.9263 26.3521 89.9502 26.1997 90.0044 25.9692 cv
90.0674 25.688 li
90.0444 25.6489 90.0122 25.5942 89.9736 25.5317 cv
90.0366 25.313 li
90.0674 25.0317 li
90.0835 25.0005 li
90.0513 24.9302 90.0283 24.8521 90.0205 24.7661 cv
90.0283 24.7466 90.0405 24.7271 90.0513 24.7036 cv
90.0596 24.6724 90.0674 24.6489 90.0674 24.6255 cv
90.0366 24.5552 90.0205 24.4849 90.0205 24.4224 cv
90.0205 24.2349 90.1294 24.1489 90.3486 24.1567 cv
90.4893 24.1724 li
90.5903 24.1216 90.6533 24.0942 90.6763 24.0942 cv
90.8335 24.0942 90.9424 24.1841 91.0044 24.3599 cv
91.0044 24.4067 li
91.0366 24.5005 91.0513 24.5942 91.0513 24.688 cv
91.0513 24.7622 91.0405 24.813 91.0205 24.8442 cv
90.9424 25.438 li
91.0205 25.6099 li
91.0205 25.7583 90.9736 25.8872 90.8794 26.0005 cv
90.9263 26.1411 li
90.7705 26.5942 li
90.7583 26.7935 90.7393 26.9458 90.7085 27.0474 cv
90.7085 27.3442 li
90.6455 27.5161 li
90.6455 27.6411 li
90.6294 27.9224 li
90.6455 28.1255 li
90.8335 28.2817 li
90.9736 28.2505 li
91.0044 28.2192 li
91.0986 28.2192 li
91.2544 28.1724 li
91.3794 28.0474 li
91.4263 27.9692 li
91.5205 27.9692 li
91.5366 27.9067 li
91.5835 27.8599 li
91.6455 27.9067 li
91.7705 27.7817 li
91.8335 27.7974 li
91.8643 27.7036 li
91.8794 27.7036 li
91.9263 27.6099 li
92.0366 27.563 li
92.2544 27.4536 li
92.4424 27.3286 92.6226 27.2661 92.8013 27.2661 cv
92.8486 27.2661 li
92.9307 27.3208 92.9893 27.3911 93.0205 27.4849 cv
93.0205 27.4849 li
cp
91.8013 21.1255 mo
91.8013 21.2192 91.7393 21.3091 91.6143 21.3911 cv
91.6143 21.4067 li
91.4585 21.5942 91.3213 21.6997 91.2085 21.7192 cv
91.0366 21.938 li
90.9116 22.0942 li
90.6455 22.1724 li
90.5205 22.3286 li
90.3335 22.438 li
90.0205 22.7036 li
89.8174 22.5317 li
89.8643 22.2192 li
89.9893 22.0161 li
89.9976 21.9028 90.0596 21.8052 90.1763 21.7192 cv
90.1763 21.6724 li
90.2544 21.6255 li
90.2705 21.4536 li
90.4585 21.3911 li
90.4585 21.2974 li
90.5986 21.2661 li
90.6294 21.1099 90.6963 20.9966 90.8013 20.9224 cv
90.8486 20.8911 li
90.9116 20.8286 li
91.0044 20.5317 li
91.5366 20.6567 91.8013 20.856 91.8013 21.1255 cv
91.8013 21.1255 li
cp
f
97.1143 26.7192 mo
97.1143 26.6567 li
97.0513 26.606 97.0205 26.5435 97.0205 26.4692 cv
97.0513 26.4224 li
96.9424 26.188 li
96.9585 25.9536 li
96.9116 25.8911 li
96.8052 25.8208 96.7544 25.7583 96.7544 25.7036 cv
96.6807 25.6724 96.6455 25.5942 96.6455 25.4692 cv
96.5674 25.4536 li
96.4263 25.2192 li
96.3174 25.1255 li
96.0674 25.0317 li
95.9736 25.0161 li
95.9194 25.0161 95.8872 25.0005 95.8794 24.9692 cv
95.6294 25.2192 li
95.4736 25.563 li
95.2236 25.688 li
95.1924 25.8286 li
95.0674 25.8911 li
95.0205 26.2036 li
94.8794 26.2661 li
94.8486 26.3833 94.8335 26.4849 94.8335 26.5786 cv
94.6294 26.7661 li
94.6924 26.7974 li
94.6924 26.8911 94.6533 26.9771 94.5835 27.0474 cv
94.5596 27.1216 94.5283 27.2036 94.4893 27.2974 cv
94.4893 27.3911 li
94.4585 27.438 li
94.4736 27.5786 li
94.3335 27.9067 li
94.3643 27.9692 li
94.3643 28.2974 li
94.3174 28.4692 li
94.3174 28.6411 li
94.4263 28.7974 li
94.5986 28.8442 li
94.6616 28.8755 li
94.7544 28.8286 li
95.0674 28.8442 li
95.1143 28.7349 li
95.1616 28.7349 li
95.2124 28.7349 95.2432 28.7466 95.2544 28.7661 cv
95.3643 28.7349 li
95.4585 28.7661 li
95.6143 28.6567 li
95.6294 28.6255 li
95.7393 28.5942 li
95.7905 28.5122 95.9194 28.4224 96.1294 28.3286 cv
96.1616 28.2817 li
96.3955 28.1099 li
96.5366 27.9224 li
96.7236 27.813 li
96.7393 27.7661 li
96.8013 27.6255 li
96.8013 27.4692 li
96.9424 27.3442 li
96.9893 27.2661 li
97.0513 27.188 li
97.0205 27.0942 97.0044 27.0278 97.0044 26.9849 cv
97.0044 26.9146 97.0244 26.8403 97.0674 26.7661 cv
97.1143 26.7192 li
cp
97.9116 26.4224 mo
97.8486 26.6411 li
97.8486 26.8521 97.8335 27.0161 97.8013 27.1411 cv
97.7393 27.2505 li
97.7393 27.3911 li
97.6763 27.4692 li
97.6294 27.6411 li
97.5044 27.7661 li
97.4263 28.0786 li
97.3174 28.1099 li
97.2705 28.2349 li
97.1294 28.3286 li
97.0366 28.5317 li
96.8955 28.5942 li
96.8794 28.7505 li
96.6455 28.8286 li
96.5513 28.9771 96.4263 29.0708 96.2705 29.1099 cv
96.2236 29.1099 li
96.1064 29.2739 95.9585 29.3599 95.7705 29.3599 cv
95.6963 29.4106 95.6064 29.438 95.5044 29.438 cv
95.3794 29.5161 li
95.2544 29.563 li
95.0986 29.6724 li
94.9424 29.6724 li
94.7866 29.7192 li
94.5835 29.6255 li
94.0674 29.5942 li
93.8794 29.313 li
93.6143 29.0474 li
93.6763 28.8442 li
93.5044 28.438 li
93.5835 28.2817 li
93.5205 28.0005 li
93.5835 27.813 li
93.5596 27.7114 93.5513 27.6333 93.5513 27.5786 cv
93.5513 27.4224 93.5903 27.313 93.6763 27.2505 cv
93.6846 27.1685 93.7393 27.0317 93.8335 26.8442 cv
93.8955 26.8442 li
93.8643 26.7661 li
93.9116 26.5942 li
93.9116 26.4224 li
93.9736 26.3521 94.0083 26.2974 94.0205 26.2661 cv
93.9736 26.1099 li
93.9736 26.0474 li
94.0366 25.9458 94.0674 25.8286 94.0674 25.7036 cv
94.3174 25.3599 li
94.3174 25.3599 94.3252 25.356 94.3486 25.3442 cv
94.3682 25.3247 94.3833 25.3052 94.3955 25.2817 cv
94.3794 25.2349 li
94.4263 25.2349 li
94.6143 25.0317 li
94.6294 24.7661 li
94.9263 24.6567 li
95.0405 24.5864 95.1143 24.4653 95.1455 24.2974 cv
95.3013 24.2974 li
95.3833 24.2466 95.4624 24.2192 95.5366 24.2192 cv
95.6064 24.2192 95.6763 24.2349 95.7393 24.2661 cv
95.8794 24.2817 li
96.1924 24.1567 li
96.3486 24.313 li
96.4893 24.3911 li
96.5835 24.3911 li
96.7544 24.5005 li
96.8643 24.5005 li
96.9653 24.5942 97.0874 24.7271 97.2236 24.8911 cv
97.2393 24.9536 li
97.3174 25.0005 li
97.5835 25.3286 li
97.8013 25.8911 li
97.8013 26.0005 li
97.9116 26.4224 li
cp
f
106.474 27.2974 mo
106.474 27.3599 106.419 27.4458 106.317 27.5474 cv
106.176 27.7505 li
106.129 27.9849 li
106.021 28.0161 li
106.004 28.0942 li
105.879 28.1372 105.787 28.2349 105.724 28.3911 cv
105.637 28.5083 105.544 28.5903 105.442 28.6411 cv
105.399 28.6724 105.364 28.6997 105.333 28.7192 cv
105.271 28.8286 li
105.162 28.8442 li
104.849 29.0161 li
104.442 29.063 li
104.333 29.0474 li
104.162 29.0786 li
104.083 29.0005 li
103.965 28.938 103.887 28.8833 103.849 28.8286 cv
103.743 28.8091 103.669 28.731 103.629 28.5942 cv
103.493 28.438 103.426 28.313 103.426 28.2192 cv
103.426 28.1724 li
103.333 28.0317 li
103.317 28.0161 li
103.239 27.7974 li
103.129 27.563 li
103.162 27.2974 li
103.037 27.1411 li
102.864 26.1099 li
102.833 25.9653 102.817 25.8442 102.817 25.7505 cv
102.801 25.688 li
102.739 25.6099 li
102.629 25.7505 li
102.192 26.2036 li
102.037 26.4692 li
101.958 26.6255 li
101.833 26.8286 li
101.724 26.9224 li
101.739 26.9849 li
101.567 27.3442 li
101.474 27.4692 li
101.364 27.5005 li
101.254 27.6099 li
101.254 27.7661 101.176 27.8716 101.021 27.9224 cv
101.004 27.938 li
100.93 28.1177 100.849 28.2271 100.754 28.2661 cv
100.646 28.438 li
100.465 28.5942 100.353 28.6958 100.301 28.7349 cv
100.278 28.8091 100.239 28.8755 100.176 28.938 cv
100.153 28.9614 100.123 28.9927 100.083 29.0317 cv
100.06 29.1685 99.9502 29.2583 99.7544 29.313 cv
99.6143 29.3599 li
99.4585 29.3481 99.3252 29.2544 99.2236 29.0786 cv
99.0366 28.7817 li
99.0986 28.4849 li
99.0835 28.3286 li
99.0986 28.313 li
99.1143 28.1567 li
98.9893 27.8599 li
99.0835 27.7192 li
99.0366 27.563 li
99.1143 27.3911 li
99.1455 27.1255 li
99.0835 27.0786 li
99.1924 26.9067 li
99.1455 26.8286 li
99.1455 26.6255 li
99.1924 26.2661 li
99.1694 26.1958 99.1616 26.1411 99.1616 26.1099 cv
99.1616 26.1021 99.1655 26.0864 99.1763 26.063 cv
99.1763 26.0435 99.1763 26.0278 99.1763 26.0161 cv
99.1143 25.9224 li
99.1455 25.5317 li
99.1455 25.4067 li
99.1763 25.2192 li
99.1294 24.8911 li
99.3486 24.5317 li
99.5874 24.5747 99.7544 24.6333 99.8486 24.7036 cv
99.9502 24.7661 100.004 24.8872 100.004 25.063 cv
100.004 25.1724 li
100.083 25.313 li
100.051 25.563 li
100.099 26.0474 li
100.021 26.2661 li
100.051 26.5161 li
100.051 26.7192 li
99.9585 26.8599 li
100.021 27.0786 li
99.9585 27.2036 li
99.9424 27.3442 li
100.021 27.4692 li
99.9116 27.7192 li
99.8794 27.8286 li
99.8794 27.938 li
99.9424 28.063 li
100.146 27.8599 li
100.146 27.7349 100.185 27.6528 100.271 27.6099 cv
100.271 27.5396 100.301 27.481 100.364 27.438 cv
100.333 27.3911 li
100.489 27.2505 li
100.521 27.2036 li
100.521 27.0942 li
100.708 26.9536 li
100.754 26.8286 li
100.864 26.7661 li
101.333 26.2349 li
101.291 26.2896 101.162 26.4341 100.942 26.6724 cv
100.942 26.7036 li
100.958 26.6255 li
101.114 26.438 li
101.224 26.2349 li
101.224 26.1099 li
101.412 26.0474 li
101.426 25.8911 li
101.474 25.8442 li
101.489 25.7974 li
101.489 25.7036 li
101.662 25.5317 li
101.662 25.5239 101.662 25.5083 101.662 25.4849 cv
101.649 25.4536 101.646 25.438 101.646 25.438 cv
101.646 25.2935 101.724 25.2114 101.879 25.188 cv
101.95 25.0435 102.06 24.9614 102.208 24.938 cv
102.287 24.8286 li
102.301 24.813 li
102.373 24.7114 102.481 24.6372 102.629 24.5942 cv
102.739 24.4536 li
103.021 24.4536 li
103.176 24.6255 li
103.301 24.7036 li
103.317 24.7349 li
103.396 24.7661 li
103.426 25.0161 li
103.629 25.1255 li
103.537 25.3911 li
103.676 25.688 li
103.676 26.0161 li
103.771 26.4692 li
103.801 26.9067 li
103.896 27.1567 li
103.974 27.4692 li
104.024 27.5239 104.06 27.5903 104.083 27.6724 cv
104.301 27.7349 li
104.301 27.9692 li
104.412 28.1099 li
104.412 28.1411 li
104.474 28.1567 li
104.521 28.2192 li
104.567 28.1724 li
104.544 28.1724 104.567 28.1724 104.629 28.1724 cv
104.712 28.1724 104.801 28.0942 104.896 27.938 cv
105.037 27.9067 li
105.083 27.8442 li
105.103 27.7817 105.149 27.7349 105.224 27.7036 cv
105.301 27.7036 li
105.349 27.6567 li
105.364 27.6099 li
105.396 27.5474 li
105.478 27.4966 105.528 27.4146 105.551 27.2974 cv
105.692 27.1567 li
105.708 27.0474 li
105.801 26.8599 li
106.021 26.7817 li
106.349 26.8755 li
106.458 27.2349 li
106.458 27.2466 106.462 27.2505 106.474 27.2505 cv
106.474 27.2739 106.474 27.2896 106.474 27.2974 cv
106.474 27.2974 li
cp
f
3.78076 426.665 mo
3.78076 425.946 4.25 424.79 6.20313 424.665 cv
6.29688 424.649 6.35889 424.587 6.35889 424.478 cv
6.35889 424.274 6.21875 424.274 6.01611 424.274 cv
4.23389 424.274 2.59375 425.196 2.57813 426.524 cv
2.57813 430.603 li
2.57813 431.306 2.57813 431.884 1.85889 432.478 cv
1.23389 432.993 .546875 433.024 .15625 433.04 cv
.0629883 433.071 0 433.134 0 433.243 cv
0 433.415 .108887 433.415 .280762 433.446 cv
1.46875 433.509 2.32813 434.165 2.53076 435.04 cv
2.57813 435.228 2.57813 435.274 2.57813 435.915 cv
2.57813 439.462 li
2.57813 440.228 2.57813 440.79 3.43799 441.478 cv
4.14111 442.009 5.32813 442.212 6.01611 442.212 cv
6.21875 442.212 6.35889 442.212 6.35889 442.009 cv
6.35889 441.837 6.25 441.837 6.07813 441.821 cv
4.95313 441.743 4.06299 441.165 3.82813 440.259 cv
3.78076 440.103 3.78076 440.056 3.78076 439.415 cv
3.78076 435.649 li
3.78076 434.821 3.64111 434.524 3.06299 433.946 cv
2.68799 433.571 2.17188 433.384 1.65625 433.243 cv
3.14111 432.837 3.78076 432.009 3.78076 430.962 cv
3.78076 426.665 li
cp
0 0 0 rgb
f
20.4922 439.821 mo
20.4922 440.54 20.0229 441.696 18.0698 441.821 cv
17.9771 441.837 17.9141 441.899 17.9141 442.009 cv
17.9141 442.212 18.1021 442.212 18.2729 442.212 cv
20.0078 442.212 21.6802 441.337 21.6948 439.962 cv
21.6948 435.884 li
21.6948 435.181 21.6948 434.603 22.4141 434.009 cv
23.0391 433.493 23.7271 433.462 24.1172 433.446 cv
24.2109 433.415 24.2729 433.353 24.2729 433.243 cv
24.2729 433.071 24.1641 433.071 23.9922 433.04 cv
22.8052 432.978 21.9448 432.321 21.7422 431.446 cv
21.6948 431.259 21.6948 431.212 21.6948 430.571 cv
21.6948 427.024 li
21.6948 426.259 21.6948 425.696 20.8359 425.009 cv
20.1172 424.446 18.8828 424.274 18.2729 424.274 cv
18.1021 424.274 17.9141 424.274 17.9141 424.478 cv
17.9141 424.649 18.0229 424.649 18.1948 424.665 cv
19.3198 424.743 20.2109 425.321 20.4448 426.228 cv
20.4922 426.384 20.4922 426.431 20.4922 427.071 cv
20.4922 430.837 li
20.4922 431.665 20.6328 431.962 21.2109 432.54 cv
21.5859 432.915 22.1021 433.103 22.6021 433.243 cv
21.1328 433.649 20.4922 434.478 20.4922 435.524 cv
20.4922 439.821 li
cp
f
10.7427 438.122 mo
11.5186 438.122 12.2427 437.876 12.9146 437.385 cv
13.5864 436.893 14.1592 436.258 14.6333 435.479 cv
15.1069 434.701 15.4702 433.885 15.7231 433.028 cv
15.9756 432.172 16.1021 431.374 16.1021 430.636 cv
16.1021 430.058 16.0029 429.528 15.8052 429.047 cv
15.6069 428.565 15.3022 428.178 14.8911 427.884 cv
14.4795 427.59 13.9873 427.442 13.4146 427.442 cv
12.8521 427.442 12.3052 427.578 11.7739 427.849 cv
11.2427 428.119 10.7607 428.479 10.3286 428.926 cv
9.88574 429.379 9.49268 429.939 9.14893 430.608 cv
8.80518 431.276 8.54443 431.979 8.36768 432.716 cv
8.19043 433.452 8.10205 434.146 8.10205 434.796 cv
8.10205 435.702 8.32471 436.482 8.77002 437.139 cv
9.21533 437.794 9.87256 438.122 10.7427 438.122 cv
cp
10.6177 438.599 mo
9.81543 438.599 9.10449 438.415 8.48486 438.048 cv
7.86475 437.681 7.38721 437.17 7.05127 436.517 cv
6.71533 435.863 6.54736 435.138 6.54736 434.341 cv
6.54736 433.18 6.87646 432.023 7.53564 430.872 cv
8.19434 429.721 9.06299 428.782 10.1411 428.056 cv
11.2192 427.329 12.3467 426.966 13.5239 426.966 cv
14.1333 426.966 14.6904 427.075 15.1958 427.294 cv
15.7007 427.513 16.1279 427.816 16.4771 428.204 cv
16.8257 428.592 17.0952 429.047 17.2856 429.567 cv
17.4756 430.088 17.5708 430.656 17.5708 431.271 cv
17.5708 432.15 17.3833 433.027 17.0083 433.899 cv
16.6333 434.771 16.1138 435.566 15.4497 436.282 cv
14.7856 436.998 14.0396 437.563 13.2114 437.978 cv
12.3833 438.392 11.5186 438.599 10.6177 438.599 cv
cp
f
248.464 137.816 mo
248.464 137.536 248.464 137.286 248.433 137.02 cv
248.386 136.614 248.089 136.004 247.605 136.004 cv
247.183 136.004 246.949 136.364 246.949 136.754 cv
246.949 137.099 247.214 137.349 247.371 137.629 cv
247.589 138.052 247.652 138.489 247.652 138.958 cv
247.652 139.911 247.339 140.849 246.886 141.677 cv
246.511 142.364 245.589 143.458 244.73 143.458 cv
244.027 143.458 243.855 142.833 243.855 142.239 cv
243.855 141.927 243.855 141.583 243.933 141.254 cv
245.246 136.036 li
245.183 136.004 li
244.292 136.224 243.402 136.379 242.496 136.489 cv
242.496 136.739 li
243.23 136.739 243.574 136.739 243.574 137.254 cv
243.574 137.583 242.98 139.661 242.574 141.254 cv
242.558 141.474 242.464 141.927 242.464 142.129 cv
242.464 143.474 242.855 144.114 244.308 144.114 cv
247.089 144.114 248.464 140.066 248.464 137.816 cv
248.464 137.816 li
cp
f
257.605 144.254 mo
257.292 144.177 li
256.808 145.114 256.433 145.52 255.824 145.817 cv
255.324 146.051 254.746 146.129 253.449 146.129 cv
252.355 146.129 251.98 146.02 251.98 145.677 cv
251.964 145.583 252.027 145.302 252.089 145.02 cv
253.699 139.224 li
253.902 138.552 254.292 138.316 255.183 138.254 cv
255.183 138.052 li
251.058 138.052 li
251.058 138.254 li
251.996 138.333 252.23 138.441 252.246 138.816 cv
252.246 139.02 252.23 139.286 252.105 139.629 cv
250.496 145.427 li
250.261 146.176 250.136 146.254 249.308 146.395 cv
249.324 146.598 li
256.824 146.598 li
257.605 144.254 li
cp
f
239.511 215.215 mo
239.511 214.887 239.511 214.575 239.464 214.247 cv
239.402 213.747 239.058 212.997 238.464 212.997 cv
237.933 212.997 237.652 213.435 237.652 213.918 cv
237.652 214.34 237.98 214.652 238.183 214.997 cv
238.433 215.497 238.511 216.043 238.511 216.622 cv
238.511 217.777 238.136 218.918 237.589 219.935 cv
237.121 220.777 235.98 222.121 234.933 222.121 cv
234.074 222.121 233.886 221.355 233.886 220.637 cv
233.886 220.23 233.886 219.824 233.964 219.418 cv
235.574 213.043 li
235.496 212.997 li
234.402 213.262 233.308 213.465 232.214 213.59 cv
232.214 213.902 li
233.105 213.902 233.527 213.902 233.527 214.527 cv
233.527 214.935 232.808 217.465 232.308 219.418 cv
232.277 219.685 232.167 220.23 232.167 220.496 cv
232.167 222.137 232.652 222.902 234.433 222.902 cv
237.824 222.902 239.511 217.98 239.511 215.215 cv
239.511 215.215 li
cp
f
339.714 267.078 mo
339.714 266.797 339.714 266.547 339.683 266.281 cv
339.636 265.875 339.339 265.266 338.855 265.266 cv
338.433 265.266 338.199 265.625 338.199 266.016 cv
338.199 266.359 338.464 266.609 338.621 266.891 cv
338.839 267.313 338.902 267.75 338.902 268.219 cv
338.902 269.172 338.589 270.109 338.136 270.938 cv
337.761 271.625 336.839 272.719 335.98 272.719 cv
335.277 272.719 335.105 272.094 335.105 271.5 cv
335.105 271.188 335.105 270.844 335.183 270.516 cv
336.496 265.297 li
336.433 265.266 li
335.542 265.484 334.652 265.641 333.746 265.75 cv
333.746 266 li
334.48 266 334.824 266 334.824 266.516 cv
334.824 266.844 334.23 268.922 333.824 270.516 cv
333.808 270.734 333.714 271.188 333.714 271.391 cv
333.714 272.734 334.105 273.375 335.558 273.375 cv
338.339 273.375 339.714 269.328 339.714 267.078 cv
339.714 267.078 li
cp
f
32.6982 330.559 mo
32.6982 330.631 32.626 330.699 32.4824 330.764 cv
32.4502 330.803 32.3901 330.84 32.3022 330.871 cv
32.1899 330.919 32.1104 330.959 32.062 330.991 cv
31.8101 330.907 li
31.6821 331.004 31.5181 331.051 31.3184 331.051 cv
31.1743 331.016 li
31.0664 331.1 li
30.7422 331.1 li
30.5381 331.243 li
30.4502 331.211 30.3662 331.195 30.2861 331.195 cv
30.2622 331.211 30.2061 331.227 30.1182 331.243 cv
30.0781 331.243 30.0342 331.23 29.9863 331.207 cv
29.9502 331.663 li
29.9502 331.999 li
29.9502 332.418 li
29.9556 332.874 li
29.9922 333.09 li
29.9863 333.258 li
30.1543 333.619 li
30.1304 333.643 30.1182 333.671 30.1182 333.703 cv
30.1182 333.759 30.2061 333.803 30.3823 333.835 cv
30.4063 333.979 li
30.4902 334.016 li
30.6343 334.111 li
30.73 334.184 li
30.8101 334.168 30.8662 334.159 30.8984 334.159 cv
30.9702 334.159 31.042 334.172 31.1143 334.195 cv
31.146 334.18 31.2144 334.123 31.3184 334.027 cv
31.3901 333.963 31.458 333.932 31.522 333.932 cv
31.5303 333.932 31.542 333.932 31.5581 333.932 cv
31.5742 333.932 31.5859 333.932 31.5942 333.932 cv
31.666 333.785 31.7939 333.689 31.978 333.643 cv
32.146 333.643 32.2861 333.695 32.3984 333.799 cv
32.3984 333.883 li
32.3984 334.155 32.3022 334.327 32.1104 334.399 cv
32.0381 334.567 31.8862 334.676 31.6543 334.723 cv
31.5103 334.855 li
31.354 334.855 li
31.0781 334.928 li
31.0142 334.943 30.9224 334.951 30.8022 334.951 cv
30.7383 334.951 30.6704 334.936 30.5981 334.903 cv
30.4424 334.903 li
30.022 334.676 li
29.9141 334.639 li
29.6621 334.303 li
29.5181 334.146 li
29.2544 333.547 li
29.1582 332.983 li
29.1943 332.84 li
29.0864 332.707 li
29.146 332.539 li
29.0864 332.275 li
29.1704 332.191 li
29.1943 332.035 li
29.1582 331.891 li
29.1943 331.676 li
29.1343 331.483 li
29.1943 331.424 li
29.1943 331.23 li
29.1104 331.195 li
28.8823 331.243 li
28.666 331.1 li
28.6304 331.1 li
28.3901 331.1 28.27 330.969 28.27 330.71 cv
28.27 330.674 li
28.126 330.442 li
28.354 330.223 li
28.6543 330.271 li
28.8101 330.247 li
29.0381 330.307 li
29.29 330.307 li
29.29 330.067 li
29.1343 329.73 li
29.29 329.646 li
29.23 329.467 li
29.2422 329.096 li
29.146 328.939 li
29.0903 328.852 29.062 328.771 29.062 328.699 cv
29.062 328.611 29.082 328.539 29.1221 328.483 cv
29.1582 328.315 li
29.2544 328.219 li
29.4702 328.18 29.6143 328.159 29.686 328.159 cv
29.9419 328.159 30.082 328.275 30.106 328.51 cv
30.0703 328.569 li
30.1182 328.642 30.1421 328.711 30.1421 328.774 cv
30.1421 328.783 30.1382 328.803 30.1304 328.835 cv
30.106 328.907 li
30.0942 328.992 li
30.1421 329.148 li
30.1304 329.209 li
30.1543 329.378 li
30.0464 329.522 li
30.106 329.764 li
30.0581 330.054 li
30.1543 330.162 li
30.0581 330.379 li
30.4302 330.319 li
31.0903 330.379 li
31.6182 330.295 li
31.7983 330.307 li
31.8584 330.295 li
32.3262 330.295 li
32.5742 330.295 32.6982 330.383 32.6982 330.559 cv
cp
.259 .259 .259 rgb
f
37.7617 330.403 mo
37.666 330.799 li
37.2217 330.859 li
36.9819 331.016 li
36.8257 330.943 li
36.6577 331.037 li
36.478 331.107 li
36.3579 331.189 li
36.354 331.235 li
36.1045 331.36 li
35.9365 331.579 li
35.8525 331.579 li
35.7246 331.715 35.6328 331.799 35.5767 331.831 cv
35.4092 332.107 li
35.3491 332.131 li
35.3252 332.195 35.2969 332.291 35.2651 332.419 cv
35.0972 332.479 li
35.0254 332.623 li
34.9297 332.743 li
34.9063 332.924 li
34.8101 332.959 li
34.8101 333.139 li
34.7739 333.176 li
34.7979 333.215 34.8257 333.26 34.8579 333.307 cv
34.6777 333.379 li
34.6538 333.535 li
34.5337 333.739 li
34.606 333.895 li
34.4497 334.111 li
34.4658 334.191 34.4736 334.247 34.4736 334.279 cv
34.4736 334.287 34.4736 334.303 34.4736 334.327 cv
34.4658 334.352 34.4619 334.371 34.4619 334.387 cv
34.4858 334.495 li
34.6899 334.711 li
34.5337 334.987 li
34.3896 335.096 li
34.0537 335.264 li
33.6099 335.083 li
33.6099 334.807 li
33.562 334.699 li
33.5977 334.52 li
33.5815 334.391 33.5737 334.295 33.5737 334.23 cv
33.5737 334.207 33.5776 334.176 33.5859 334.135 cv
33.5859 334.096 33.5859 334.067 33.5859 334.051 cv
33.5737 333.932 li
33.5176 333.875 33.4897 333.811 33.4897 333.739 cv
33.4897 333.676 33.5176 333.604 33.5737 333.523 cv
33.5737 333.483 33.5659 333.363 33.5498 333.163 cv
33.5859 333.127 li
33.5498 332.971 li
33.5737 332.827 li
33.5498 332.743 li
33.5859 332.467 li
33.5137 332.348 li
33.562 332.215 li
33.5137 332.059 li
33.5215 332.012 33.5259 331.947 33.5259 331.867 cv
33.5259 331.747 33.5098 331.668 33.478 331.627 cv
33.5259 331.555 li
33.478 331.34 li
33.3696 331.184 li
33.4297 330.991 li
33.3818 330.919 li
33.334 330.631 li
33.334 330.535 li
33.2939 330.487 33.2739 330.428 33.2739 330.355 cv
33.2739 330.195 33.4497 330.059 33.8018 329.947 cv
34.1021 330.008 li
34.1616 330.235 li
34.2817 330.391 li
34.2456 330.715 li
34.27 330.875 34.2979 331.051 34.3296 331.243 cv
34.3657 331.436 li
34.3735 331.451 34.3818 331.495 34.3896 331.567 cv
34.3896 331.615 34.3696 331.668 34.3296 331.723 cv
34.3657 331.963 li
34.3418 332.227 li
34.2939 332.348 li
34.3296 332.395 li
34.354 332.516 li
34.4019 332.459 34.4297 332.399 34.438 332.335 cv
34.4858 332.155 li
34.5098 332.107 34.5459 332.071 34.5938 332.047 cv
34.6416 331.867 li
34.8101 331.771 li
34.834 331.627 li
34.9658 331.483 li
35.062 331.303 li
35.1655 331.191 35.2656 331.119 35.3618 331.088 cv
35.3857 331.051 li
35.4937 330.883 li
35.6138 330.859 li
35.6499 330.823 li
35.6978 330.751 li
35.8296 330.68 li
35.9019 330.596 li
35.9736 330.607 li
36.0698 330.559 li
36.1177 330.487 li
36.2617 330.415 li
36.4658 330.283 li
36.7539 330.188 li
36.8657 330.172 36.9258 330.163 36.9336 330.163 cv
36.9336 330.176 li
36.9258 330.176 36.9219 330.18 36.9219 330.188 cv
36.9336 330.188 li
36.9658 330.188 37.0137 330.172 37.0776 330.139 cv
37.1177 330.107 37.1738 330.092 37.2456 330.092 cv
37.2778 330.092 37.334 330.1 37.4141 330.115 cv
37.6216 330.123 37.7378 330.219 37.7617 330.403 cv
cp
f
41.5415 330.631 mo
41.4937 330.547 li
41.3979 330.523 li
41.0259 330.223 li
40.7856 330.188 li
40.5938 330.188 li
40.5698 330.139 li
40.4736 330.188 li
40.3657 330.139 li
40.0537 330.139 li
40.0898 330.188 li
39.814 330.283 li
39.7656 330.344 li
39.7295 330.355 li
39.5859 330.476 39.4858 330.576 39.4297 330.655 cv
39.3457 330.943 li
39.2979 331.052 li
39.4175 331.22 li
39.2139 331.376 li
39.2378 331.424 li
39.1504 331.576 39.1069 331.725 39.1069 331.868 cv
39.0107 331.988 li
39.0098 332.204 li
38.9136 332.313 li
38.8896 332.42 li
38.8535 332.443 li
38.8535 332.611 li
38.8179 332.672 li
38.8179 332.768 38.8096 332.844 38.7939 332.9 cv
38.8179 332.96 li
38.71 333.188 li
38.7578 333.26 li
38.6738 333.379 li
38.7578 333.607 li
38.6255 333.775 li
38.6499 334.004 li
38.6499 334.039 li
38.6978 334.063 li
38.7578 334.051 li
38.7979 334.012 38.8374 333.975 38.8779 333.943 cv
38.8535 333.847 li
39.021 333.822 li
39.0571 333.738 li
39.7622 333.162 li
39.834 333.138 li
39.9175 332.934 li
39.9653 332.918 40.0327 332.886 40.1206 332.838 cv
40.1987 332.647 li
40.2939 332.646 li
40.2578 332.443 li
40.4258 332.419 li
40.4419 332.387 40.4678 332.348 40.5039 332.299 cv
40.5396 332.251 40.5776 332.207 40.6177 332.167 cv
41.2295 331.352 li
41.3257 331.172 li
41.314 331.123 li
41.3979 330.991 li
41.4219 330.859 li
41.5298 330.764 li
41.5415 330.631 li
cp
42.6816 330.008 mo
42.5615 330.163 li
42.6577 330.451 li
42.502 330.631 li
42.4419 330.883 li
42.4058 330.943 li
42.4297 331.004 li
42.4297 331.115 42.4014 331.199 42.3457 331.256 cv
42.3218 331.291 li
42.3218 331.34 li
42.3457 331.395 42.3579 331.447 42.3579 331.495 cv
42.3579 331.535 42.3535 331.563 42.3457 331.579 cv
42.3579 331.627 li
42.3096 331.76 li
42.3457 331.903 li
42.2495 331.999 li
42.2856 332.167 li
42.3579 332.251 li
42.2495 332.348 li
42.2495 332.539 li
42.1655 332.73 li
42.2256 332.924 li
42.1538 333.02 li
42.2739 333.104 li
42.106 333.379 li
42.0938 333.415 li
42.2139 333.439 li
42.1299 333.715 li
42.1299 333.764 li
42.1299 333.819 42.1255 333.863 42.1177 333.895 cv
42.1299 333.932 li
42.3218 333.955 li
42.4775 334.195 li
42.3936 334.375 li
42.5259 334.363 li
42.5737 334.459 42.6016 334.543 42.6099 334.615 cv
42.4297 334.795 li
42.3735 334.852 42.2935 334.907 42.1899 334.963 cv
41.9858 335.071 li
41.9258 335.012 li
41.8057 335.071 li
41.4336 334.641 li
41.4336 334.438 li
41.3857 334.279 41.3618 334.131 41.3618 333.996 cv
41.3618 333.924 li
41.2896 333.22 li
41.3857 332.718 li
41.314 332.432 li
41.1099 332.768 li
41.002 333.079 li
40.9058 333.127 li
40.7378 333.393 li
40.4375 333.671 li
40.3535 333.816 li
40.0898 334.045 li
40.0298 334.202 li
39.6455 334.443 li
39.2378 334.902 li
39.0098 334.95 li
38.8535 335.071 li
38.6538 335.063 38.5015 334.986 38.3979 334.842 cv
38.0376 334.666 37.8496 334.413 37.8335 334.084 cv
37.8936 334.048 li
37.8818 333.976 li
37.8696 333.831 li
37.7979 333.675 li
37.8696 333.506 li
37.8936 333.254 li
37.9775 332.855 li
37.9775 332.848 37.9775 332.832 37.9775 332.809 cv
37.9697 332.792 37.9658 332.775 37.9658 332.76 cv
37.9658 332.728 37.9736 332.688 37.9897 332.639 cv
37.9814 332.623 37.9775 332.592 37.9775 332.543 cv
37.9775 332.486 38.002 332.395 38.0498 332.266 cv
38.1338 332.23 li
38.0859 332.189 38.0615 332.146 38.0615 332.098 cv
38.0615 332.065 38.0615 332.041 38.0615 332.025 cv
38.0615 332.002 38.0615 331.973 38.0615 331.941 cv
38.0615 331.845 38.1099 331.772 38.2056 331.725 cv
38.2295 331.645 38.2734 331.564 38.3379 331.483 cv
38.2778 331.387 li
38.4219 331.207 li
38.4219 331.159 li
38.4219 331.008 38.4736 330.867 38.5776 330.739 cv
38.5659 330.523 li
38.6138 330.475 li
38.6138 330.467 38.6138 330.455 38.6138 330.439 cv
38.6055 330.424 38.6016 330.411 38.6016 330.403 cv
38.6016 330.355 38.6177 330.315 38.6499 330.283 cv
38.6499 330.211 li
38.6816 330.131 38.7656 330.012 38.9019 329.852 cv
39.0376 329.691 39.1377 329.551 39.2017 329.432 cv
39.2617 329.491 li
39.3936 329.432 li
39.4536 329.407 li
39.8496 329.227 li
40.7739 329.275 li
40.7739 329.359 li
41.0615 329.419 li
41.2456 329.419 41.3657 329.479 41.4219 329.6 cv
41.4219 329.575 41.4258 329.547 41.4336 329.516 cv
41.4336 329.491 41.4336 329.475 41.4336 329.467 cv
41.6855 329.695 li
41.9136 329.743 li
42.3457 329.635 li
42.502 329.936 li
42.6816 330.008 li
cp
f
48.5259 332.995 mo
48.2979 333.211 li
48.2861 333.283 li
48.2617 333.428 48.1938 333.543 48.082 333.631 cv
47.8901 333.991 47.6216 334.256 47.2778 334.424 cv
47.0977 334.567 li
46.9419 334.592 li
46.75 334.735 li
46.6177 334.747 li
46.3179 334.939 li
46.126 334.915 li
45.9097 335.035 li
45.7417 334.963 li
45.6577 335.035 li
45.4297 334.999 li
45.2017 335.035 li
45.1177 334.963 li
44.8779 334.915 li
44.5298 334.651 li
44.3379 334.411 li
44.2178 334.26 44.1577 334.131 44.1577 334.027 cv
44.1577 333.991 li
44.0381 333.811 li
44.0381 333.655 li
44.0137 333.559 44.002 333.471 44.002 333.391 cv
44.002 333.307 li
43.9419 333.104 li
44.002 332.959 li
43.9541 332.863 li
44.0977 332.635 li
44.062 332.443 li
44.1577 332.131 li
44.2061 332.059 li
44.2539 331.771 li
44.23 331.723 li
44.374 331.567 li
44.3979 331.447 li
44.4941 331.172 li
44.6499 330.835 li
44.8657 330.643 li
44.9141 330.535 li
44.9858 330.403 li
45.0098 330.283 li
45.2017 330.055 li
45.25 330.039 45.3057 330.023 45.3701 330.008 cv
45.4019 329.855 45.6021 329.768 45.9697 329.743 cv
46.2817 329.807 46.4819 329.891 46.5698 329.995 cv
46.6577 330.012 46.7261 330.047 46.7739 330.104 cv
47.0259 330.115 li
47.1938 330.331 li
47.2329 330.411 47.2598 330.49 47.2754 330.57 cv
47.3687 330.666 li
47.3325 330.846 li
47.3413 330.902 47.3457 330.99 47.3457 331.11 cv
47.4097 331.158 li
47.4097 331.339 li
47.458 331.711 li
47.2876 331.879 47.0938 331.975 46.875 331.999 cv
46.7617 331.79 46.6196 331.633 46.4497 331.528 cv
46.4497 331.13 li
46.3657 330.996 li
46.375 330.9 li
46.2505 330.76 li
46.1904 330.715 li
46.0815 330.751 li
45.9248 330.751 li
45.8203 330.775 45.7197 330.852 45.6235 330.979 cv
45.5269 331.105 45.4307 331.242 45.3345 331.385 cv
45.3223 331.505 li
45.25 331.564 li
45.25 331.78 li
45.0938 331.947 li
44.9019 332.475 li
44.9141 332.617 li
44.8179 332.833 li
44.854 333.096 li
44.7817 333.132 li
44.7578 333.467 li
44.77 333.527 li
44.9146 333.67 li
44.9751 333.922 li
45.144 333.97 li
45.1558 334.065 li
45.3589 334.105 li
45.5151 334.146 li
45.5708 334.115 45.6392 334.1 45.7188 334.1 cv
45.8027 334.1 li
45.8989 334.059 45.9868 334.039 46.0669 334.039 cv
46.1226 334.016 46.1948 333.991 46.2827 333.967 cv
46.3784 333.84 46.5146 333.775 46.6904 333.775 cv
46.7627 333.775 li
46.8022 333.775 46.8306 333.756 46.8467 333.715 cv
46.9346 333.579 47.0742 333.491 47.2661 333.451 cv
47.4902 333.252 47.6182 333.092 47.6504 332.971 cv
47.7622 332.907 47.834 332.807 47.8662 332.672 cv
47.938 332.623 li
47.9741 332.348 li
48.3418 332.403 48.5259 332.588 48.5259 332.899 cv
48.5259 332.995 li
cp
f
56.3018 333.979 mo
56.23 334.111 li
56.23 334.344 56.1499 334.523 55.9897 334.651 cv
55.9897 334.731 55.9614 334.795 55.9058 334.844 cv
55.8457 334.975 li
55.6899 335.083 li
55.6177 335.215 li
55.1377 335.467 li
54.9097 335.527 li
54.562 335.551 li
54.3696 335.467 li
54.2139 335.467 li
54.0576 335.361 li
53.938 335.35 li
53.458 335.102 li
53.0259 334.747 li
52.8979 334.635 52.7056 334.475 52.4497 334.268 cv
52.1855 333.907 li
51.9697 333.727 li
51.9336 333.643 li
51.8257 333.512 li
51.7217 333.383 51.5977 333.247 51.4536 333.104 cv
51.25 333.031 li
51.022 332.575 li
51.0576 332.395 li
51.106 332.139 51.2339 331.995 51.4419 331.963 cv
51.6699 332.035 li
51.8618 332.227 li
52.0659 332.359 li
52.2578 332.359 li
52.3057 332.395 li
52.3696 332.395 52.4219 332.399 52.4619 332.407 cv
52.5415 332.367 52.6816 332.323 52.8818 332.275 cv
52.9897 332.251 li
53.062 332.096 li
53.3496 332.096 li
53.4375 332.023 53.5298 331.983 53.626 331.975 cv
53.6499 331.975 li
53.6738 331.92 53.7056 331.852 53.7456 331.771 cv
53.9736 331.663 li
54.0698 331.567 li
54.25 331.268 li
54.334 331.268 li
54.3657 331.188 54.3979 331.075 54.4297 330.932 cv
54.5376 330.859 li
54.4536 330.811 li
54.502 330.607 li
54.4858 330.575 54.4419 330.547 54.3701 330.523 cv
54.2266 330.57 li
54.1797 330.475 li
54.0591 330.427 li
54.0229 330.379 li
53.9028 330.363 53.7305 330.348 53.5059 330.331 cv
53.5059 330.307 li
53.4336 330.307 li
53.3696 330.307 53.3218 330.307 53.2896 330.307 cv
53.1855 330.307 53.0337 330.363 52.834 330.475 cv
52.666 330.475 li
52.3618 330.579 52.1899 330.654 52.1499 330.703 cv
51.8857 330.786 li
51.5137 331.085 li
51.166 331.432 li
51.1602 331.48 li
50.9331 331.877 li
50.8638 332.105 li
50.8179 332.129 li
50.8179 332.177 li
50.7939 332.225 50.7739 332.27 50.7578 332.309 cv
50.6855 332.345 li
50.71 332.381 li
50.6738 332.441 li
50.6655 332.457 50.6616 332.477 50.6616 332.501 cv
50.6616 332.541 50.6777 332.577 50.71 332.609 cv
50.71 332.777 50.6729 332.886 50.5996 332.934 cv
50.585 332.965 50.5776 332.998 50.5776 333.029 cv
50.5776 333.054 50.5776 333.074 50.5776 333.09 cv
50.5776 333.226 50.5498 333.338 50.4937 333.426 cv
50.4536 333.466 50.4297 333.494 50.4219 333.51 cv
50.4219 333.689 li
50.4219 333.93 li
50.4219 334.123 li
50.3657 334.267 50.3379 334.383 50.3379 334.471 cv
50.3379 334.551 50.3379 334.595 50.3379 334.604 cv
50.3379 334.691 50.2896 334.783 50.1934 334.879 cv
50.0977 334.975 50.0073 335.023 49.9229 335.023 cv
49.8154 335.023 49.7036 334.955 49.5884 334.819 cv
49.4619 334.447 li
49.4619 334.23 li
49.4619 333.764 li
49.4619 333.643 li
49.4619 333.26 li
49.5098 333.104 li
49.5098 332.971 li
49.5098 332.811 49.5176 332.649 49.5337 332.485 cv
49.5498 332.321 49.5576 332.235 49.5576 332.227 cv
49.5576 332.023 li
49.5698 331.915 li
49.5698 331.579 li
49.6177 331.483 li
49.5698 331.34 li
49.6177 330.943 li
49.6177 330.523 li
49.5698 330.283 li
49.6177 330.188 li
49.605 330.139 li
49.5527 329.491 li
49.4619 329.096 li
49.4619 328.987 li
49.5576 328.579 li
49.5098 328.424 li
49.4858 328.135 li
49.4697 327.943 49.4619 327.859 49.4619 327.883 cv
49.4619 327.604 49.6787 327.455 50.1133 327.439 cv
50.3735 327.295 li
50.3379 327.883 li
50.3735 328.219 li
50.3018 328.567 li
50.3223 328.951 li
50.3735 329.168 li
50.3379 329.371 li
50.3735 329.66 li
50.3379 329.899 li
50.3735 330.151 li
50.3735 330.211 li
50.4219 330.332 li
50.3379 330.668 li
50.3379 330.74 li
50.4219 330.968 li
50.3848 330.984 50.3667 331.044 50.3667 331.148 cv
50.3315 331.435 li
50.3496 331.543 li
50.4937 331.291 li
50.5659 331.016 li
50.7339 330.739 li
50.7339 330.659 50.7617 330.588 50.8179 330.523 cv
50.9497 330.523 li
51.0459 330.319 li
51.3218 330.188 li
51.4336 330.075 51.562 329.995 51.7056 329.947 cv
51.7778 329.887 li
51.9697 329.791 li
52.126 329.756 li
52.2939 329.611 52.6577 329.516 53.2178 329.467 cv
54.1538 329.539 li
54.3457 329.646 li
54.4419 329.659 li
54.646 329.875 li
54.6577 329.803 li
54.7617 329.852 54.8379 329.928 54.8857 330.031 cv
54.9258 330.023 54.9414 330.02 54.9336 330.02 cv
54.9658 330.02 54.9976 330.031 55.0298 330.055 cv
55.2817 330.571 li
55.2695 330.631 li
55.3096 330.711 55.3296 330.783 55.3296 330.848 cv
55.3296 330.959 55.2856 331.071 55.1978 331.184 cv
55.1978 331.256 li
55.0298 331.699 li
54.7778 332.047 li
54.7056 332.059 li
54.562 332.251 li
54.4736 332.251 54.4058 332.227 54.3579 332.18 cv
54.3579 332.371 li
54.2617 332.432 li
54.1899 332.563 li
53.9736 332.623 li
53.9419 332.631 53.9058 332.668 53.8657 332.73 cv
53.314 332.947 53.0059 333.055 52.9419 333.055 cv
52.918 333.055 52.8716 333.049 52.8037 333.037 cv
52.7358 333.025 52.6777 333.02 52.6299 333.02 cv
52.5977 333.02 52.5737 333.023 52.5576 333.031 cv
52.5654 333.055 52.6099 333.143 52.6904 333.293 cv
52.8477 333.389 li
53.0649 333.77 li
53.3911 333.961 li
53.415 334.008 li
53.5239 334.068 li
53.6807 334.246 li
53.9629 334.481 li
54.3467 334.639 li
54.5625 334.699 li
54.7188 334.688 li
54.8027 334.651 li
54.9624 334.627 55.1143 334.563 55.2583 334.459 cv
55.4619 334.088 li
55.582 333.943 li
55.6543 333.727 li
55.7739 333.688 55.8701 333.667 55.9419 333.667 cv
56.1255 333.667 56.2456 333.771 56.3018 333.979 cv
cp
f
67.4375 330 mo
67.3774 330.23 li
67.4014 330.352 li
67.2573 330.824 li
67.2334 330.994 li
67.0654 331.176 li
67.0054 331.405 li
66.8735 331.6 li
66.6816 332.023 li
66.4536 332.407 li
66.1055 332.924 li
66.0454 333.079 li
65.8657 333.403 li
65.6616 333.823 li
65.3018 334.471 li
65.2295 334.76 li
65.0376 335.035 li
64.6777 334.915 li
64.4736 334.795 li
64.2817 334.23 li
64.0415 333.822 li
64.0454 333.701 li
63.8975 333.367 li
63.8374 333.295 li
63.3335 332.239 li
63.1772 331.987 li
63.0454 332.191 li
62.8535 332.348 li
62.5776 332.73 li
62.3857 332.936 li
62.2773 333.247 li
62.0137 333.571 li
61.9897 333.68 li
61.8096 334.051 li
61.8096 334.23 li
61.6895 334.399 li
61.6777 334.567 li
61.5576 334.604 li
61.2935 334.879 li
61.3413 334.855 li
61.2617 334.903 61.1533 334.936 61.0176 334.951 cv
60.9336 334.855 li
60.7534 334.783 li
60.7534 334.651 li
60.6816 334.555 li
60.6094 334.23 li
60.5137 334.016 li
60.5137 333.859 li
60.5015 333.811 li
60.3218 333.295 li
60.2734 332.971 li
60.1533 332.84 li
60.1777 332.684 li
60.0576 332.395 li
60.0576 332.287 li
59.9614 332.023 li
59.7935 331.795 li
59.8174 331.531 li
59.8057 331.447 li
59.6733 331.135 li
59.6494 330.943 li
59.5776 330.823 li
59.5298 330.743 59.4937 330.663 59.4697 330.583 cv
59.2656 330.067 li
59.4336 329.852 li
59.4814 329.764 59.5815 329.707 59.7334 329.684 cv
59.9854 329.646 li
60.0693 329.768 li
60.2256 329.84 li
60.3335 330.057 li
60.4297 330.141 li
60.3936 330.332 li
60.4414 330.453 li
60.4058 330.561 li
60.5254 330.753 li
60.5015 330.934 li
60.6577 331.475 li
60.6338 331.606 li
60.6958 331.932 li
60.8682 332.313 li
60.9424 332.769 li
61.0654 332.912 li
61.0635 333.199 li
61.1509 333.451 li
61.1631 333.547 li
61.3311 333.439 li
61.6064 332.995 li
61.6904 332.791 li
61.7861 332.623 li
61.7861 332.543 61.8022 332.483 61.834 332.443 cv
61.9058 332.443 li
61.9419 332.227 li
62.0737 332.203 li
62.0898 332.139 62.1255 332.092 62.1816 332.059 cv
62.1816 332.035 li
62.1816 331.987 62.2056 331.939 62.2534 331.891 cv
62.2295 331.807 li
62.2896 331.783 li
62.2773 331.711 li
62.3496 331.584 62.4292 331.487 62.5176 331.424 cv
62.5176 331.184 li
62.6855 331.088 li
62.7334 331.051 li
62.7573 331.027 li
62.7173 330.947 62.6978 330.859 62.6978 330.764 cv
62.6978 330.619 62.7617 330.479 62.8896 330.344 cv
62.9614 330.312 63.0493 330.295 63.1533 330.295 cv
63.2173 330.295 63.2656 330.299 63.2974 330.307 cv
63.5254 330.512 li
63.6455 330.691 li
63.7178 330.979 li
63.8257 331.172 li
63.8018 331.303 li
63.8857 331.567 li
63.8857 331.676 li
64.0894 332.035 li
64.0894 332.071 li
64.1377 332.107 li
64.3774 332.684 li
64.3896 332.84 li
64.5098 332.971 li
64.7856 333.596 li
64.8501 333.489 li
65.0659 333.045 li
65.2002 332.938 li
65.2856 332.682 li
65.4097 332.621 li
65.4097 332.441 li
65.4575 332.401 65.5215 332.361 65.6016 332.321 cv
65.6494 332.297 65.6733 332.277 65.6733 332.262 cv
65.6616 332.01 li
65.8027 331.865 li
65.8618 331.829 li
66.0405 331.528 li
66.0454 331.492 li
66.0615 331.404 66.1133 331.305 66.2017 331.193 cv
66.1777 331.061 li
66.3936 330.797 li
66.5015 330.533 li
66.4136 330.294 66.3696 330.09 66.3696 329.923 cv
66.3696 329.676 66.4976 329.535 66.7534 329.504 cv
67.0776 329.6 li
67.1255 329.504 li
67.2095 329.612 li
67.3296 329.697 li
67.2935 329.83 li
67.4375 330 li
cp
f
70.0054 326.753 mo
70.0054 326.849 69.9414 326.937 69.8135 327.016 cv
69.8135 327.04 li
69.6606 327.223 69.5283 327.327 69.4165 327.352 cv
69.2358 327.566 li
69.1157 327.722 li
68.8394 327.791 li
68.7197 327.961 li
68.5278 328.059 li
68.2168 328.34 li
68.0254 328.159 li
68.0615 327.859 li
68.1934 327.643 li
68.2012 327.531 68.2651 327.436 68.3853 327.355 cv
68.3853 327.307 li
68.4575 327.26 li
68.4692 327.079 li
68.6611 327.031 li
68.6611 326.924 li
68.8052 326.899 li
68.8374 326.739 68.9053 326.623 69.0093 326.551 cv
69.0454 326.527 li
69.1172 326.455 li
69.2134 326.167 li
69.7412 326.295 70.0054 326.49 70.0054 326.753 cv
cp
71.2295 333.115 mo
71.2295 333.299 71.1973 333.415 71.1333 333.463 cv
71.0732 333.512 li
71.0132 333.68 li
70.8213 333.739 li
70.7651 333.867 70.6812 333.967 70.5693 334.039 cv
70.4614 334.075 li
70.3052 334.243 li
70.1611 334.279 li
70.1055 334.424 69.9893 334.5 69.8135 334.508 cv
69.7974 334.531 69.7612 334.579 69.7051 334.651 cv
69.5854 334.731 69.4609 334.779 69.3335 334.795 cv
69.2734 334.807 li
69.1895 334.915 li
68.9492 334.915 li
68.7573 335.059 li
68.2651 334.699 li
68.0371 334.23 li
68.0254 333.643 li
67.9771 333.499 li
68.1211 332.443 li
68.1694 332.395 li
68.1455 332.275 68.1333 332.159 68.1333 332.047 cv
68.1333 331.975 68.1572 331.827 68.2051 331.604 cv
68.2651 331.327 li
68.249 331.279 68.2173 331.227 68.1694 331.172 cv
68.2412 330.943 li
68.2651 330.667 li
68.2891 330.631 li
68.2573 330.559 68.2373 330.479 68.2295 330.391 cv
68.2373 330.375 68.2451 330.354 68.2534 330.325 cv
68.2612 330.297 68.2651 330.275 68.2651 330.26 cv
68.2412 330.188 68.2295 330.119 68.2295 330.055 cv
68.2295 329.863 68.3374 329.775 68.5532 329.791 cv
68.6973 329.791 li
68.7935 329.752 68.8535 329.73 68.8774 329.73 cv
69.0371 329.73 69.145 329.819 69.2012 329.995 cv
69.2012 330.043 li
69.2334 330.139 69.2495 330.231 69.2495 330.319 cv
69.2495 330.391 69.2412 330.443 69.2251 330.475 cv
69.1411 331.075 li
69.2251 331.243 li
69.2251 331.387 69.1772 331.516 69.0811 331.627 cv
69.1294 331.771 li
68.9731 332.227 li
68.957 332.428 68.9375 332.579 68.9131 332.684 cv
68.9131 332.983 li
68.8413 333.151 li
68.8535 333.271 li
68.8291 333.547 li
68.8535 333.764 li
69.0332 333.907 li
69.1772 333.883 li
69.2012 333.848 li
69.2969 333.859 li
69.4531 333.811 li
69.585 333.68 li
69.6328 333.607 li
69.7168 333.596 li
69.7407 333.535 li
69.7769 333.487 li
69.8486 333.535 li
69.9688 333.415 li
70.0405 333.428 li
70.0645 333.344 li
70.0884 333.343 li
70.123 333.246 li
70.2314 333.199 li
70.46 333.091 li
70.644 332.963 70.8247 332.899 71.001 332.899 cv
71.0488 332.899 li
71.1372 332.955 71.1973 333.027 71.2295 333.115 cv
cp
f
75.7173 331.074 mo
75.6689 331.051 li
75.6128 331.019 75.563 330.967 75.5186 330.895 cv
75.4746 330.822 75.4326 330.751 75.3926 330.68 cv
75.3125 330.654 75.2441 330.604 75.188 330.523 cv
75.1157 330.523 li
74.8994 330.391 li
74.6226 330.331 li
74.3579 330.355 li
74.0742 330.437 li
74 330.369 li
73.9053 330.404 li
73.9053 330.453 li
73.7974 330.477 li
73.7251 330.604 73.6133 330.716 73.4614 330.812 cv
73.3652 331.015 li
73.2695 331.086 li
73.1855 331.277 li
73.1494 331.673 li
73.0415 331.769 li
73.0415 331.984 li
72.9453 332.067 li
72.9375 332.355 li
72.7368 332.753 li
72.7036 332.944 li
72.6812 333.256 li
72.7534 333.389 li
72.6812 333.52 li
72.7412 333.604 li
72.6211 333.82 li
72.6826 333.928 li
72.7319 334.071 li
72.8027 334.121 li
72.8862 334.123 li
72.9946 334.027 li
73.0903 334.039 li
73.2939 333.955 li
73.3179 333.883 li
73.5454 333.799 li
73.5693 333.727 li
73.7134 333.643 li
73.7134 333.619 li
74.0132 333.306 li
74.1572 333.246 li
74.2295 333.09 li
74.3853 333.065 li
74.5771 332.849 li
74.5415 332.824 li
74.6245 332.74 li
74.7437 332.488 li
74.8501 332.38 li
74.9097 332.115 li
75.1001 332.055 li
75.2354 331.865 li
75.2852 331.83 li
75.2852 331.613 li
75.4653 331.53 li
75.7173 331.074 li
cp
77.5054 334.004 mo
77.3613 334.508 li
77.2651 334.651 li
77.1372 334.844 77.0132 334.939 76.8936 334.939 cv
76.7974 334.939 76.6694 334.871 76.5093 334.735 cv
76.2695 334.387 li
76.1611 334.172 li
76.1133 333.955 li
76.0054 333.596 li
76.0054 333.067 li
75.9692 332.611 li
76.0054 332.359 li
75.9814 332.287 li
75.6812 332.707 li
75.6455 332.707 li
75.6333 332.743 li
75.4292 333.067 li
75.0933 333.428 li
74.8413 333.775 li
74.5771 334.027 li
74.5054 334.155 74.4214 334.268 74.3252 334.363 cv
74.0854 334.531 li
73.9414 334.723 li
73.6772 334.807 li
73.5693 334.939 li
73.3052 334.987 li
73.0894 335.119 li
73.0532 335.119 li
73.0293 335.167 li
72.6572 335.119 li
72.2134 334.807 li
72.0933 334.672 72.0171 334.523 71.9854 334.363 cv
72.0015 334.355 72.0171 334.342 72.0332 334.321 cv
72.0493 334.301 72.061 334.287 72.0693 334.279 cv
72.061 334.271 72.0171 334.252 71.9375 334.219 cv
71.8291 333.979 li
71.8892 333.895 li
71.8291 333.751 li
71.8892 333.583 li
71.8652 333.367 li
71.9492 333.02 li
71.9492 332.646 li
72.0332 332.539 li
72.0332 332.287 li
72.1172 332.131 li
72.1411 331.951 li
72.1655 331.928 li
72.1655 331.771 li
72.2852 331.579 li
72.3096 331.411 li
72.3813 331.291 li
72.4175 331.219 li
72.4653 330.932 li
72.5493 330.68 li
72.6094 330.619 li
72.6333 330.463 li
72.7896 330.295 li
72.8052 330.256 72.8413 330.172 72.8975 330.043 cv
73.1973 329.911 li
73.3892 329.707 li
73.9414 329.551 li
74.0293 329.551 74.0972 329.547 74.1455 329.539 cv
74.2295 329.588 li
74.2534 329.491 li
74.5293 329.467 li
74.6255 329.504 li
74.7095 329.491 li
74.7813 329.551 li
75.0093 329.563 li
75.0571 329.527 li
75.1172 329.575 li
75.2373 329.588 li
75.2373 329.672 li
75.2852 329.707 li
75.5254 329.756 li
75.7056 329.959 li
75.9453 330.139 li
76.0054 330.26 li
76.0171 330.271 li
76.0654 330.104 li
76.1372 329.947 li
76.1133 329.672 li
76.1611 329.167 li
76.0894 328.975 li
76.1855 328.831 li
76.1372 328.699 li
76.1733 328.363 li
76.1313 328.075 li
76.0054 327.991 li
76.1973 327.799 li
76.1973 327.667 li
76.1973 327.531 76.145 327.383 76.0415 327.223 cv
76.1133 327.223 li
76.2451 327.031 li
76.3652 327.008 76.4731 326.995 76.5693 326.995 cv
76.6812 326.995 76.7734 327.02 76.8452 327.067 cv
76.9731 327.107 77.0371 327.299 77.0371 327.643 cv
76.9775 327.643 li
76.9653 327.691 li
77.0732 327.787 li
77.0015 327.979 li
77.1094 328.207 li
77.0493 328.279 li
77.0732 328.336 77.0854 328.391 77.0854 328.447 cv
77.0854 328.504 77.0732 328.563 77.0493 328.627 cv
77.1094 328.699 li
77.1255 328.731 77.1333 328.783 77.1333 328.855 cv
77.1333 328.943 77.1133 329.023 77.0732 329.096 cv
77.0332 329.6 76.9971 329.911 76.9653 330.031 cv
76.9731 330.055 76.9775 330.092 76.9775 330.139 cv
76.9775 330.203 76.9653 330.271 76.9414 330.344 cv
76.9414 330.415 li
76.9414 330.512 76.9238 330.619 76.8892 330.739 cv
76.8506 331.1 li
76.7852 331.195 li
76.8335 331.303 li
76.7852 331.483 li
76.8335 331.639 li
76.7373 332.012 li
76.7852 332.287 li
76.7852 332.443 li
76.7998 332.684 li
76.814 332.739 76.8213 332.791 76.8213 332.84 cv
76.8213 332.879 76.8096 332.911 76.7852 332.936 cv
76.8813 333.008 li
76.7852 333.247 li
76.8813 333.499 li
76.8452 333.571 li
76.8813 333.643 li
76.8452 333.715 li
76.8813 333.751 li
76.9893 333.848 li
77.1934 333.871 li
77.5054 334.004 li
cp
f
82.521 330.559 mo
82.521 330.631 82.4487 330.699 82.3052 330.764 cv
82.2729 330.803 82.2129 330.84 82.125 330.871 cv
82.0127 330.919 81.9331 330.959 81.8848 330.991 cv
81.6328 330.907 li
81.5049 331.004 81.3408 331.051 81.1411 331.051 cv
80.9971 331.016 li
80.8892 331.1 li
80.5649 331.1 li
80.3608 331.243 li
80.2729 331.211 80.189 331.195 80.1089 331.195 cv
80.085 331.211 80.0288 331.227 79.9409 331.243 cv
79.9009 331.243 79.8569 331.23 79.8091 331.207 cv
79.7729 331.663 li
79.7729 331.999 li
79.7729 332.418 li
79.7783 332.874 li
79.8149 333.09 li
79.8091 333.258 li
79.9771 333.619 li
79.9531 333.643 79.9409 333.671 79.9409 333.703 cv
79.9409 333.759 80.0288 333.803 80.2051 333.835 cv
80.229 333.979 li
80.313 334.016 li
80.457 334.111 li
80.5527 334.184 li
80.6328 334.168 80.689 334.159 80.7212 334.159 cv
80.793 334.159 80.8647 334.172 80.937 334.195 cv
80.9688 334.18 81.0371 334.123 81.1411 334.027 cv
81.2129 333.963 81.2808 333.932 81.3447 333.932 cv
81.353 333.932 81.3647 333.932 81.3809 333.932 cv
81.397 333.932 81.4087 333.932 81.417 333.932 cv
81.4888 333.785 81.6167 333.689 81.8008 333.643 cv
81.9688 333.643 82.1089 333.695 82.2212 333.799 cv
82.2212 333.883 li
82.2212 334.155 82.125 334.327 81.9331 334.399 cv
81.8608 334.567 81.709 334.676 81.4771 334.723 cv
81.333 334.855 li
81.1768 334.855 li
80.9009 334.928 li
80.8369 334.943 80.7451 334.951 80.625 334.951 cv
80.561 334.951 80.4932 334.936 80.4209 334.903 cv
80.2651 334.903 li
79.8447 334.676 li
79.7368 334.639 li
79.4849 334.303 li
79.3408 334.146 li
79.0771 333.547 li
78.981 332.983 li
79.0171 332.84 li
78.9092 332.707 li
78.9688 332.539 li
78.9092 332.275 li
78.9932 332.191 li
79.0171 332.035 li
78.981 331.891 li
79.0171 331.676 li
78.957 331.483 li
79.0171 331.424 li
79.0171 331.23 li
78.9331 331.195 li
78.7051 331.243 li
78.4888 331.1 li
78.4531 331.1 li
78.2129 331.1 78.0928 330.969 78.0928 330.71 cv
78.0928 330.674 li
77.9487 330.442 li
78.1768 330.223 li
78.4771 330.271 li
78.6328 330.247 li
78.8608 330.307 li
79.1128 330.307 li
79.1128 330.067 li
78.957 329.73 li
79.1128 329.646 li
79.0527 329.467 li
79.0649 329.096 li
78.9688 328.939 li
78.9131 328.852 78.8848 328.771 78.8848 328.699 cv
78.8848 328.611 78.9048 328.539 78.9448 328.483 cv
78.981 328.315 li
79.0771 328.219 li
79.293 328.18 79.437 328.159 79.5088 328.159 cv
79.7646 328.159 79.9048 328.275 79.9287 328.51 cv
79.8931 328.569 li
79.9409 328.642 79.9648 328.711 79.9648 328.774 cv
79.9648 328.783 79.9609 328.803 79.9531 328.835 cv
79.9287 328.907 li
79.917 328.992 li
79.9648 329.148 li
79.9531 329.209 li
79.9771 329.378 li
79.8691 329.522 li
79.9287 329.764 li
79.8809 330.054 li
79.9771 330.162 li
79.8809 330.379 li
80.2529 330.319 li
80.9131 330.379 li
81.4409 330.295 li
81.6211 330.307 li
81.6812 330.295 li
82.1489 330.295 li
82.397 330.295 82.521 330.383 82.521 330.559 cv
cp
f
88.1245 334.747 mo
88.1245 335.066 87.9507 335.227 87.603 335.227 cv
87.4331 335.227 87.3076 335.159 87.2271 335.023 cv
87.146 334.911 87.0771 334.699 87.0205 334.387 cv
87.0205 334.219 li
87.0522 334.18 87.0684 334.139 87.0684 334.1 cv
87.0684 334.083 87.0645 334.063 87.0566 334.039 cv
86.8887 333.787 li
87.0205 333.559 li
86.9604 333.307 li
87.0205 333.163 li
87.0205 333.008 li
87.0205 332.863 li
86.9844 332.646 li
87.0205 332.539 li
87.0205 332.143 li
87.0205 331.627 li
86.9604 331.23 li
87.0205 331.088 li
86.936 330.787 li
86.8389 330.871 li
86.5723 330.979 li
86.2085 331.436 li
86.063 331.424 li
85.8447 331.771 li
85.8086 331.915 li
85.6768 331.975 li
85.5376 332.18 li
85.4746 332.311 li
85.397 332.738 li
85.1602 333.001 li
85.1074 333.168 li
84.9761 333.264 li
84.9233 333.551 li
84.6602 333.766 li
84.6206 334.207 li
84.5127 334.207 li
84.4766 334.279 li
84.2607 334.651 li
84.0566 334.867 li
83.8765 335.107 li
83.6846 335.047 li
83.5288 335.047 li
83.3848 334.855 li
83.2524 334.424 li
83.2524 333.787 li
83.2168 333.583 li
83.2524 333.344 li
83.2524 332.779 li
83.334 332.756 li
83.3848 331.928 li
83.4082 331.771 li
83.4087 331.52 li
83.4639 331.483 li
83.5083 331.1 li
83.5527 330.967 li
83.5044 330.799 li
83.5405 330.739 li
83.5166 330.703 li
83.5527 330.367 li
83.4565 330.283 li
83.5405 330.115 li
83.5293 329.768 li
83.4087 329.419 li
83.4927 329.311 li
83.4087 328.987 li
83.4087 328.795 li
83.3726 328.711 li
83.3125 328.327 li
83.2524 328.146 li
83.0728 327.799 li
83.2046 327.631 li
83.3247 327.428 li
83.4321 327.428 li
83.6074 327.428 83.7388 327.492 83.8267 327.619 cv
83.9937 327.752 li
84.0659 327.969 li
84.2485 328.124 li
84.2007 328.292 li
84.2964 328.544 li
84.2964 328.568 li
84.2964 328.592 li
84.2964 328.988 li
84.3086 329.516 li
84.3926 329.852 li
84.3325 329.996 li
84.3564 330.199 li
84.2964 330.367 li
84.3325 330.656 li
84.2964 330.896 li
84.2964 330.943 li
84.2964 331.676 li
84.2964 331.844 li
84.2246 331.928 li
84.1885 332.323 li
84.1406 332.504 li
84.2007 332.827 li
84.1406 332.924 li
84.1406 333.163 li
84.2285 333.139 84.2725 333.092 84.2725 333.02 cv
84.3687 332.924 li
84.4526 332.768 li
84.4766 332.539 li
84.6084 332.348 li
84.6807 332.107 li
84.8481 331.916 li
84.8931 331.689 li
85.0044 331.678 li
85.0044 331.57 li
85.0186 331.428 li
85.1846 331.344 li
85.1846 331.248 li
85.3047 331.225 li
85.3286 331.033 li
85.3198 330.938 li
85.5347 330.84 li
85.5894 330.788 li
85.5635 330.668 li
85.6724 330.633 li
85.7568 330.428 li
85.9014 330.428 li
86.0342 330.344 li
86.0342 330.287 86.0381 330.247 86.0459 330.223 cv
86.1787 330.163 li
86.3232 330.043 86.46 329.971 86.5884 329.947 cv
86.5884 329.924 li
86.7964 329.819 86.9404 329.768 87.0205 329.768 cv
87.1406 329.768 87.2485 329.823 87.3447 329.936 cv
87.4326 329.967 87.4888 330.027 87.5127 330.115 cv
87.6206 330.188 li
87.6567 330.355 li
87.8125 330.631 li
87.8125 331.592 li
87.8125 332.012 li
87.8726 332.119 li
87.8726 333.008 li
87.8125 333.163 li
87.8125 333.403 li
87.8726 333.667 li
87.8125 333.895 li
87.8467 334.016 87.8677 334.115 87.8765 334.195 cv
88.0166 334.327 li
88.0166 334.424 li
88.0645 334.459 li
88.1045 334.596 88.1245 334.691 88.1245 334.747 cv
cp
f
2.06985 lw
301.274 195.635 mo
309.151 194.236 li
304.016 200.37 li
183.778 266.819 mo
307.653 195.104 li
1 .14902 0 rgb
@
3.47561 lw
184.059 266.348 mo
235.839 235.926 li
0 0 0 rgb
@
248.96 228.554 mo
233.259 247.556 li
236.617 235.806 li
224.718 233.019 li
248.96 228.554 li
cp
f
1 lw
240.907 216.171 mo
266.005 183.978 li
.298039 .298039 .298039 rgb
@
2.06985 lw
10.394 422.299 mo
53.3687 421.844 li
0 0 0 rgb
@
1.55239 lw
48.2661 419.162 mo
55.8125 421.818 li
48.3242 424.633 li
@
2.06985 lw
10.394 422.299 mo
10.4546 381.742 li
@
1.55239 lw
7.71094 386.811 mo
10.458 379.297 li
13.1831 386.818 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig4_diff_drive.eps)
%%CreationDate: 7/15/2022 3:35 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B7'3\dP,u2YNs>\J<5G%Cc[4\H3ki.+9YRb'N7=WYh!.,L\J8"8T(hRUYP=kkLoU;ZN/0)dV(I31XbZ-C:.CYVos'poq/1>
%U:_g&7%*u3TIEG-YPu,H/PKsP<o/W<;%_<@#_g1#H%6/s^(C<>Ai83okiJtiX9S<?RpO?@bVj3.s4^bHSpOu:Uh=GkoD.Yn;ek/.
%beQ<^@\B3[cKX,A=nHkaJ:^2(;Vl;+5Fi<lp5;,Z6qtK'Kmrc=&_+9A!!aXacfk+"\$uE&e`km"oG8X(?uBcU']'Yq/,EoUXO6(m
%G/s5ue(+$Dc9l2ElU?l&D'`[<M-r:UOH1-bDpXF8]XOXJFaPHZDXp5Jn?;VTD[M5TRY:a'+@V\HOpLjcPUR.E+/hHW'FOYlLu0<:
%?4]\"s#m4YM4+cnDb)Z(`KJHJ55cQg!6XaX8bOh3W4&>IbhI0L"/G@[h]aVnSl\:*%c.a_jQ8Tn.J/Z6s)K\04_@CV!#Ma!HUt'5
%.4ej-do,W49>fGZ3$abH]kjd=W3bml"UGYJ5r&EY;?9"L=b"fZ%C0)`h@THL$E,ED08BNoK<TSO+ZQ#m0Z+W;3h@t!HoFFK4>S"8
%diS(K_X&@$'I&M75JmGmlS07VDFZAU+TRg$5@Y*i'$k]V27jj*<spu*>PL&Z=D%rMC;(U-:W5!N)$$pKF2L7-FC/),L$93O^A@/L
%I2;6OkBl\Pc`Hj+ic;E;qTG0EY55N)8Iotp##+L4<9aF706WNg0t4-uoEG:"pb&osHIK9-#9Xj26^u`+i*Gsir-&;DCZPF&4T_Z_
%"Mk#*?2dRE=)/5Kn4R[[1qiXN[1V?IH#MAG9^%$-]0-$24Qum0M9s6!%"SReZN`fa0;19Z'H.Fb7tsk5FqZ"EkiHb65\IjS3m[e=
%"D%Jg7=R1eDAN@>r"n=u_;=QmAm&9Bh.666M5da`bsat'%Cepf,VqOUSc9TR6=V;Ei8K/=n8rS4T8o>rH86Kh_,kk6+B!L:&/Pce
%eWhg\*sp!uhtV-,__Y/53!I/pAQ`fWWW1H%%44?QoU-aVV01?5SDMY8$.Q,W^7Xh,EP>J327/<9ogs'2ItfOr=A'6DTF2G:XoR6p
%?.Eo:3t_0(1^nR-c=rrN4Jh0)T-a>GMF&46=+Kq7Qem<P\\R8%'Nd#qn=2=8^`UE4LmZ3O)oX8hf"^_/'DV2-Ies?e/uE:1k;R)n
%?@dkh[V9L_!4)1lrou/##A=P@6/I;kn9](<hgOha"1&C9oH*o6U*;o)dL1@j"@J;ZfS;YP?EY.pFcm+.q*$0e)?HZu!^p0F)]2lR
%-`Gag""St8LJdFXn$h()720G6&#>`N@''oH^MV&tA(fU)fg4pRS34Y)n:ng,e,e#9!&d"8!:]h0a<V)s]tj8.I0f^uW)rJ<+[fsI
%m=>U69_eoCj>3XJ?]mcW9o24R#'_+dQGEhP>]<5@[`OAAJ0N[%XF>hqrZD,`!)3Bm)@!@n]E+Vgm/U:,],pqVaJA=kF9(Kua8F-Z
%d!@=Z!#&Sun\*'<T>c0a)Rt?O@]',&NX"Wt$T1[79^i!2Qj[?=g'oCE=_$YAf?.n"'EP1da7.FC?RRGPA)#g[gYInh\Hd_Z%M123
%d\_Ngk'NdRI'?Ub\-,]_CWCR0/,f<oMr<lrTX7:!J,n@"F?ge>JF!4?F70J;f,AnF-;TWhbr(7ScZH[d(n,ZOV301*n_je:"23[l
%`u%JL[g\1Uq</:R?UMa-pV16@I_V6=;H-&.=;-!AT'QlFNGnZ#0gIF$.:?ItN3'eJm8f-#4kd07'glInI-E&Qqo>OEIC3\l1^[S.
%(S#u^=/19E[g6rK]`7CSg])`irVnmWqGS(mVi4FZOL.dO?4]g>O:-"+?Qj0#^qj"9\n%K*eR1iW%1SJ=qS1:N"-Y\2p#l@%XL]'u
%6M,3V@KEq9mpL/qcG=r;[,6@aq"pg;)Vt*pA-P*15g]FQW)8$"J.DOep#j)B5RVni)hJs>5\D9RGK)E!@O?gF!7i(e6ur(][VV,#
%HV(RhUEo<i;BQ[1KNTZR'FAc>Ap#t:mSLZ8BT#i!\+6IQe*VJ<qtIYAbkNn<R9b<m@tl\Mk':0+#GBuP=>8he3(DG/NV>%"*FiLg
%=mS\=Si9\-[L[2PWiPM$%K\feb+6WsjZ!/s-+Ei2>CI8kkj:fq%JVi;Z94Q:V"FoeJZa@;Th%?_dA"+@acUMnX.?n/Da*:%=bmm(
%_tB8P.EDBD=Nq_G5E\H6EkbhHC;'"pL3oP5W6$5PR<U&6c'H.g=RC=00cU&BC-17Si'tG[%sR6a%]d6b`3es7Bu[NN0(s?#KpCm1
%fOW%pQJ6Nm/>9np!:=k6Rf<mM>MHAjO(YHnN8JXb!a`W#XP1bV"hbS8Q>YG36OO9)[kT+p=M[8<(Jo$BiI0'iMt]NHZ.K:2kR79@
%VL7#Rh-9m7gX[\C`29i_cs)t7Rl3.fs6S,#:Tm!R:Nui]<]FhFKQ>I@]rBdkNq[LB]t.ATS:ZA@9d;Pr!&22r5$`e96d>BJd-3:C
%"J1mrE2A<fId_j+_02&O\j@2oc>_e_Gc8uM7P/cPY5&+$rhc)@$s<rg-q"*C6HD_'D6p^ADC9tT,tLUd4ucRIXYok1.,D\gmt!Y5
%"S)Ke9Fn&uKh4rMq*(%*8d*HHnBnW19Xl2SOM$6tI.BsL-c1a2lOH;&^#C7_Y>k5-2-BQ50B&':LlJpRgeCL.54u>k%<9erd5%=H
%C"%7GXCeieeiU[=C9giOg"#>4Tsk-"/$B/j3@*!Q,+;M8K5%-L@Rec]J)5_L$:N,H0Tk:6IOW&HPLZsh#IJ;HO<=iOVU9%u@W"E&
%o5i[i5es>6;ji<'6Z6?e@;dP2;JB0aaRbcI+gi5cPi\*<gR97*r*`SD^a(0Z9OJb)0])O/eCqetQKo"DjDm@!UpV[oe;qb`2\7:#
%E@FfCo`UhhgFn4OhD)P3WJ^p6+0@nVQu?SE.Wb43M@lhjgD$.$JGK\JO_+R!'.l_6`c-7"D,m("/kG0F*sdZ">!9n$e/S$XC5lX\
%n@"SH]VXlg4MBJ/<j>\L8#%XfOs(I81cca`.iL"E3E*m-4,U"MFh4<GZ%T3SaW9;N\-=;^ZaU1STTL_hZ*<*jerGdul,/*HK2aPk
%[tGt_jU6C23SdG5lN/\))IL"JLk1716>EUQP5ZD,q]^h`'-\D)))MU1'LbWK+p!=\'PnZIKG=Bgic7TiVbRb'bMeR:jeg7&%hW7b
%N>YZA:DhNj'.j3Ic1=)GF0K,.oME@>0R6u*46^g8)4,nO_u"/eN4'ma=^YPLE1XG</u^]24Y:=O-(u2%\jNuAMBJdi/Y(s>iL7\#
%5%n0Z%%t23\Kkn?&FH9TkVo__=Nf"-k.mE`&u1\S[B7NPAUS#bVJNYh"LVWQ4`[e]%FU/OXA:Na3u*XXN=:u/K.*W8L&8^0Q0<ge
%VG#tX_<?L_RF,GSOk(R.[d!TnonbQq_12bRQ?V\g*CS_QcZP[nB@CuF%!3h#mIGE/%>M3c@2BfPVSH?*MfQUVkj?Gui8*0uL;go[
%"bSfO(K10FeVECG-Hq(n'cqfjaL8mHY1F(:Ko+p0DT06$JOkS&C,]`YD]fbBD9d#6o-DN+,J^BJ;u^3'L&kbHdAA&iZ]m#R6W=0?
%#YtIuD^F)*f)W7rbpX$?nob90MOL6CO:Gn4l0WT*<!k0*Z:U\Cg"(h5>-:?D"7ofdo="V^DUDZ-B5ZtP*0,Hm&.A!=:(s;t!?:B5
%Qr%Q`Yc/ahqQP9:#TtTTB8-QY?=Cs<eEL%N3<FeXZ=<fg?N_k'em+G>P;*X.0qljN>U+]!M]u/jD5$hQ5gsTF\'@ORKCsW]YD+<3
%)\&)<`g+3a%bO3pUf:oi@*7WF[/k;e%CHDE*\V+.]n?Cp\[ct3C^\]`NU\c=cgL%+MoEb1?kr%*4)oZ\hLM=SKPcM:#jQ,lTMk2?
%(ngj6#L$qbf*88).8Uh,m2.Cf=;NWLf_0[9<bk=H@/q0:b^gdN]_)aVQX40,)_#PHfGp1Laa.Eh[Fc,pNU`SgXfToj7h"QA&s7%<
%Ak&htVDs7r[emeC8ps=<[0=JHS(=m/5a20])@fr7^*T*;\;+q8WO.8C+L%-?3]mNa!kktjJMsDK]UgfBA]Y/qDC;YDP1H?CCdmf#
%1j03%-dk?oSuc'c8K7S?9h9oq5#M\?BZ;asa>8]m.lA=h1f\82WD"k/X>ICq6T.?7dhJ`GD6,EHhNPN1.P4`fJX45?/[ej3O'2td
%g+JkLE!Gds(am*Eh\o<;W7bk!*,+jNgPGG;"hrC3+6]QXE[bgb.f2Z5)6976PkG0fZtsYKSM7b+IGelBDe3VYZIRh_eM"Q!Dm+>^
%!1Yp!>Du0D-ti`W0NtbnV::=YYo51meT/L1QE/h0f*,ZD<2GkSV^WmOL]McRBs/pI-/eN%3jTa#i)_YaJ/(1\OWCrs1ihQN)$L6^
%\%=Z-,9TNf#7K&0@5dm%pB%cUN4cM=6H5HINV@3O1_-*gD"/6/faU%lh$!ctE?3sbR.@9QV76gIMPrFs3/dVs1hKl]4n^/Y)Y_qT
%3)2`o+0A<<6dMei1STShOpt8HW0M"A6g36s6>Lb"<-(j"IB*dO7'Mmj^4j#;&)NK/@\Z4Z,@b(:J.88>^%XJa$moo(T$p86r'N-M
%@J_V$kBgaQXr,V*.o&rr^]@Fk\Lq(<NR_3b$2LH4c40mXdGSfSFfr40!Efm+)%H>8VIO@m`dZR-(J"bAd9rgZR.hlIY/USMAJ70d
%!(^Z7\%#+9mX,/d58/?Wg@kN#V!Ta.p_6!l@Hq^gcWj=b-7@m.&>log!X\iuJc347S(>BP19HihT^UhQKUN''mS0$%gk[+oR/f#$
%eKl'1Bt&[:#./*%@Zrt(]_=)'!U?f=oBCd""k`5J'A1"X14t02+rD*M&s+.?F44kLU7Z<tqrJ5eZP(uN"W&,P4M;ahdl"kJ1l.2>
%$*9M^@1F\Y4=X@HnAL9[[f7^q/TC#R3c:La%k1aLC4WP8A"9r+."US_hZ8!'(;Db,0?^V.<lM-`%K&OX>LQ^;><f<WX20Hl/V$%b
%B?;L:*_K$VU3#H*`i<1-T@:J2S!Gn-2;O08Z>d1,a_&E*KFi5P&*.7Lm]%eA(B-H2q,.dDEc8>3,E>A@(M&Hp'QCDtmt%kKLrJI6
%@.3:r'[fh\]L*C7.h9DZVk^4g>=f!WJUVYc/hRB:h@0rs5GQ;-GI[eFIpWW=G7*D[d<:uNF./,5eH@bNJq_t+BYR9^&sf`/jFCD+
%HTUr2TMm36@$PES5r3(G-!#"bEgjSQ^uB3=\YdAL9I"nHdM.T3I32-TDRJ9M@%Xj>-pd-mc&itWUqdQ<B>r(5g<hb-pM,!t51MSj
%\h9W?X13a]$1#`.Vg$h^Op9AZ<t)fq-,KBdl(k['A1LB.X9lXN9F62Qe7IhpWFUMO[up?[U^SujhEXotA`,WI$Vrse+(dg>291IG
%]'j&6]R"gel/MB9W)qq@/\5U.<Vl8`#(lJI_rO5^oE]b`qY(,Eb25$L;=rki,aH&k'MW0-@Qi;4#q-O841[0"0D`lKFKQ?IjqS)>
%@*f6ui&b==!I3BC"B&0]OFD,RJOcfE9+0T)YIR'9M/<9;RT@M!fZH!sSlU8<KmeX;W.[Lc]G\@"`]p'EP]s3molRGU%V07O0[Wi!
%A**.-)1-k;hY13V-f84KSOtU3`?[KNR\+V4Qd(tjp5&*1n?%c]>,$k_I/M[t(bL5?T+fFt&B\Rtcf&*Nn$eD>2Y3CU]?$J[I>;be
%@]oA^Yq:5a!);IeChEHC:V5,dn6/T*r,b(bI>ACh"CW;mi$o8l!+@:>]8_P/o"3-7GKTsEFsRs*nhsXPmj?>)d'Cu/r&=)DhmrD#
%TZN/6VnO@^Ro!W0C;,.G,o^QmWK%^3(]@+IB"@@uFA"0T);"7>B?LfU!"GZ(mK]*oRF1bU-oFfE>L?;_Z:dt[+-_F&5BiLr<Sf!1
%O4JLj&EraEh&1E;i7$L/;]HRt.<kR]-<YOsQ>@pP^#:$*M>Z(tKBs`MC.hA#h>:=Fep$:N]srN]M6uq-Q_sM;Gk9$4\K;6+1\b\L
%b`9gZ(,\O,H6HmHo+R[<Sqa6?mA&4V35>1/ErBkX#@L?_5>?M*:%5mmSOb@<eqN_Sq;)cgHp(.j+jY>m9/;,Djd\ag!TYBpZu#le
%KrfC[h+%sMe$Q"X-CK1/Ydn%]C*'B-fJ0bV[u#2]ApM_6+ouqc;Ps4,[)>>r<Q>tm%R6`F^?$<MNA#4dOQ&Q]"]!6Rn3-QXKVXL'
%B(hmeA'jAB9N'c6kDZ;T]??V5*t1ONKF^*L$>KXhOT"L>++8.KF#!)]loeQ^gS\?1*u:<Sm4AALDNW4h4R;QM*led2T_F5orUBQX
%K4\'G0n<=s"aDks<U*0>_RJ/$b4\YaX_9rq/RV=b\qo.W#(Q7M5D$Y&A0^^3b`"Z\9t&Z[hP>c%\(=1D[e5rfUf5gfW'9#_2W%AV
%ggnRbDKK$5IKYEJfe2B&VYmQ,-("FUn#!"t6-oLCEBDIB7h,mQ0`D^meV5Rd@CX$SP`h<;UQisSLF&6I4K[9_!*N^=-=37(c/+0q
%;EPfa-12_alX]$i[m(k&N49]NprR2(AfanlXIr0(VGCegL::[]:[Bf'k.VHl`!<Q>==s]#`8Pa6<frDi^8/]d-^UG6Q@0f%gHD8E
%*">ZCVfFuSIA.;1`16/jT:Bat,*HK<n_pn5FCK&^U_F.'CCrU?]3F%=P@/6nFd@lSaKJtlZr]fNe?_N`W!T]>(3a/*(41?ia_jK?
%K=>#>o\k4bcU5)oDb>OekHf&-5GBtdOVqFs"#S->o?[es9g"S1Q.n*krh?8l]6l[s!fJGl-,"U(o-+"tW]>EKI\4dd5.o0crWf$P
%,n:BCCG<nB1P&@PkcQb)lli;odtP#<4?mUOl?>0lUuok_.bU2rD?,WY;ZO&I\lLK@gmpP!RB2Ap<q+i;>q5%h:H6a9c]"rZ+R&9/
%_MZ9JZW5p03l"SgDYS7/nO!],qk$R>5C$&=h%$mAG'D&3j)Z:@S\&B&\qt_6U(J?GT#b#KAm8&PYrlU87/]X#dDO'-F:0G,.C-_7
%g)`0@U?7S$Ka_hQKuTd<FT%jupr@Yegl?p_*`rImC-V_lepj:>gs\gb-P7l)$..b2$04DJ/k(3T]?0o`i>8,\`_`O`?PWr[&A;SO
%$t#s)G3lJs?A:eCSqVRGI4!$uD35!OL+0Dr%?p.VVtNI\HtpX:DnQ;Q)`:Ba2]s$OBodVIA/hHB2h/XkH_efu`4aH+?idOZeiD+F
%Ym*DjB%SG8j#)T]kTF\q"%$Z:)*&,,qna:JZXJUS%biA`3s5_/!hj$mMEo$rfi*%e2\$`E(IA42QW$K>ZlEjA`_cuV@n6.dLqWep
%X2I9([n#rN1Po$DiO<qB4<\4<(_Kl5ITTs%.%R/)>_kj1>KZPalt"1L6:BikkBVB)Y&`noj#j:d'OfaQ?Wj6lliU*,G!^%&7]$?K
%Jc3N>jISuX6JatKUV\&j]^]D_j5UdJjcEg4!CEPL06Xj](d(6k;8^D2F@?UiNLHW982U.X_+Pb7!J[sCfP4t&r#(i/L%&3GXZ3q1
%`$pmF/PA85P&1_cTsS@?PmLfMlMtQtK^4to)qa(NEpGIiU3__<*6)^0m#*O%lZ&FYM&F^JE!'^/L=S3"D@]eC:M<:<+RE44?W*B?
%O_cjIb?VnV2h2u(o&BKjP$A(U3A0KDT%hY_fg.m27ah6KR(!(N2o)$,bS'B1[rH`JkpE]gg#e=FD4$:pfN$JX*S_EM^*@h,H>?E>
%#B_m[G2"*AS$6)'Iu-cnifB4f7+5n/UaQ&n8#B8>V!oP(\ob6dbZ#5J%b$3Qm6%YHUhH:>[>;PYo5;eNP?Z/$HEQY-^ensOZNF:H
%P7"n6DToMa;Z1TiG%:uTab:/%VgUt/%;25[Ke&O7LKbP0It\AOA=d"b=L7Ap5g'[EF0@^P[BCkB(c7n9/KaaIa*BDt\KD">9]sBF
%kJE^@!i*?ci)n$'iZWMXU'D@''23tHLUZ"UB/[/h;TQ]i8L8ub?fuYVJ"-2B$=B3!.VJu&m/>FLimX$9^&?e2;ji$U;]u<BiN<OI
%rckY8A;\-qSk(m*GX18.;ik6"6HsedOfZ3\!8E-;b4;L`'/cD7-##IYF9q1TT:-#*T?&qkBLMUQYcDjlPFp[Z@%G!N@/+435.Pk4
%olWJ3ESgS"Ui=L,5"s2C$(H=J5#4/Slf/F3W'+1oM)TL/F(ZF%)UN9^f*Mq35A$5RjNAMH4mmK=(AK5lJ-dV-;R:!`E)`h^^T^P/
%cu8-DB&3d!pd!b_1-/[a8N9^G&l1QUb/LYnKE*<_l[1cF\a4>IQ`'R9Z3[f7jgsu0L-pUa;sLcZW-[ju`=(;JIJYquqGM5uQ^iQp
%rp/Uc]Xf=TZ[KS\QIj&;^TGkA$oPd^A_8Yq)P@[%1RDL:adYNkr;ML+glmfn5L9F)PG:[[L]O]\;h^HcT->`9gX[pDLX/^NEaNhp
%%iYEV0hnt1>1SsHY+H%]LY_%sU?`gZ5d'&YW2j)Sf<q(qE3-cAXP[/-hHugtd>>1n"kk[$MqB&6eH_e.JiiSB3.<h^46.?%2U42q
%<jDjsZ"<82-L[$g6noXoQ0]1EPhO:tlNph9^ft''daRS?Lr'\j:LI.42ea.#"47)Wm].3RF+,#(W-l057no^Wf_bfIJA#7E,ti)i
%aNim7l"-5"/g;p>"`;l,SUVn@l%4Uh:@=B-:9Xa$2VRm(&;\b!G;Mgi6Ih9g'/^*sXY5eg!mn/2?f&ZWfl$!H'6J_?:2EfKS"RVF
%!qu^5*5&fc`/#,$%N9!WSr]l#Z9e'Y'=mn.$87I6!>Tp1?Iu%MS8B1%q6G+N;sALW`GuK#ccD[u36AA"h\LJ@U@:=ig'8UHT-Y(r
%I(RQ9(Xp]0T\1NPYE%m-=_g!<E8B=3^I+t<2.UY.L/fo<SkS[\m!ojB%5e0l3`]>II^jBA;pTS<GO<T[O=W7"hmbF;2S0Ed4JENT
%k/I+="umiJI6Y<B:DC&0JQf0mZVF#0K^1]Z?gDU0PA&h>FopqaR-(Y6\1?a8;j[nK#e/l_eP$`Co.^`0TQ3n7p\B"iMGC:WcbS+Q
%-$,Jt_4`\F8\9KdTXk)/I=>n<C-"[7KDUP-aZ\IbcVWCKqD,dWAmMGJ$Ace(Q)k42htb7:@>4)t"^uJf99q0V/^G*]]Qjpoo')K_
%o23LMgti9GrWFS@V?UWnZ,+XR%MVJ7$GXKblI#Tf_E8B;TpC;HLYSa<bKS-1d6Qh@Z=>V%7eNBRH?suQ!;u5f,a\&\8r8\Wgd'_s
%X9S"3o>j9F/(&/^EM$FpAi\JPQn?.a,C:i4'?SVqn0KlJr-5Lho^5IDd`=(OD#de5dn[%m'aH"QP[stJ$@Vjc]+;LG=N";frXe]N
%ECj],bVkWX8.F79h9>)*$^EP!27WW$/@flnH^m_V`jN\."'&#a4L:i(PGI4td;0MD\QEI!FU-!!bB5$*:6-(I2:G!f9Ed7UYMFcl
%$h.&:@W\]Qr?m:3bKldsc?LaEJGNmLEShODb6OhTFpg\8YCK,lmh3lB@ugYO#G:]-U,I*@U+a8;b]3r<)Stap1<j[l#jZYtoYR_d
%e,ni$aV7k?SdF6KiQ4gkEJbG[qb3]ih.Bpj>W-3/\U=Q"g"rM?Q$D5KBjRuo3h(O?"6uJ`!MS\k"ZBW'P8Q4pi")!G"h#,'g[Cd4
%D9cBY0UC!:1KlMd!oHIt*Za"ok"mRp*^0A<A]4I)csd9sn1AF%j_e8:;plVP9euP>/Ih',8<Ahd%[nJD!UbB]<ZJh@#P8BrMcPRm
%FeBtaGD\SYYYF2"f^.PsF8l`/V>P8;6D](F)h4A(@e$i0?^/3G"?m8X(a7#'lQ[6ro4O6fGNfj"$q^O0C5'7Qaa"h_9'SH=?=jFn
%,s^iEljEBj-:@Ih*12M)27Z>>Cas)uoh/^N(cGc$OlPZ3dg'u1j3DISa\'(8RiAa=+N3Zh*E^UHAWl[Lk$A((rK,\uRgEU<L%U1=
%lrl\B0?A04^7CXdm76$oE'?C44CJ?oC?R`:%jc+TVnm5+#3!iqaK^MpUDA!5@Z3!A4BCuWY`l'^I/P;]o.a"X<-^^_-Y$34^?7`c
%fa#WEO+r!"(:`$b->T[Q0&rsJL:dOEgC)i'kSo3;/j$QQIKNBdbiH(g>![%WC^RR*Ei8@rMn;(/h>[[J'1p"iGR!_#9:uTHBJ^-W
%qtI1u@W__jG2-9gim2!qQ>Q]f*2/$(TFnEC-Xu\;*B2@,d-Bm(&?b+hqB[*V5mkULhgRs]5m]t-*7]]/e_Z$%b_p+KM8hMZQZ&/T
%c94H90SAsbW&;jI_ti[0DPXmc[O68T9t`-epN6%F!CgA$j/D"-"Yq`nKROof;UN$NLAU9kVBM&rrHR]EJ.]:8mmh_nOUL06,NHVs
%&GDJ'kJ/LdL5OK30j`2f&nA`DomL>Kcc/93)'_a=0B!f<d(:)2.C&&Hh3@t]1Nk;qBFp5:#Q*h)1@-?jTrAln0cA>69021,%>Vd^
%gNPFnH;#.'PL&2FFMY*nYub9[;_#bhKmdV0CX>i"p$T,BqsQIOObR25Ut<!l!29EI")<(f:=eQYGDSlY[1Z\jlT.sjncA0fUt//d
%PtqI[IY8Wq4Zr9L1eg2F`e!&jbdIJ>#3-Xm(:Zqr9eM_NE(h_%.R?buie`k5>L)E1hDlYjU$E+Z7K>UI:5A,P<=G>]l^No=N/0rY
%_a,O4m5_2G\XR?p>9BsnR%%ARN;p.W?98%5mcSp]JJfG.j?0u>Y(e#m#!Uuk\m1&^Ocd]_%VGacQ<a.(>=$P+5^'dJU_U/I%11f:
%Y\Q=I5f<:I&94n#nL;Lmn&`RRW$.<W1/%P2_;H-uOt\8ZoZoVG=_i&I,\&KC/<GbQQ*SCJ)9:5_Lq269<&3ei6?m]Q3#]/="Zo;8
%qYUJ9VI(+k=K+Tl;C]J1f5Va-_COm"lS[$(o]LYkIJ!tR>Yk(f2OBE)VV+^[nciWc]<0HZ-hpa<r8iT+3VT?W4D3R-YHieR4cjuu
%gS^`Vn^WI9G'Or%("`T63@j%QRuaY_*?M-Vmli\M!n30FS8;`ENo6eaH[Gf7Zjh7e0hR="JDtg(l_Ybp4_2:)D%"@$![-S'"!+aF
%KAh/O:D-$=VDqAdbKKt7qtamGfh*]8[;>NR[DGHWM4b(W))6h/C*;8LA-8QnPbA#+`^F6k,2IW#jWfAo0?B@NO[Ei1-CX?#r48'7
%7rpQ^A,Gu:7IcXg164u2K08X@kIt%Ie:Q*!>9AfYc>g9;?oUo!4HV<_%.-8@_!m&uq1DPf\"Tn"5c!_i5!'usof6;c/N'ui6+d1_
%^"of/,&c/\S&k@FHIAI)"W5]93m#BPY_0Xe5Og7tc;0m5QU-CF9C(=BN`;OMr[CNr=:V6$];9HdbIp7$)g4H:m'\[:GfX3$"tT0;
%LKAu!N(!Rkjh*fj4Ra#)4uW9Zdc5^u4!,h3+8k3ma'PN)iPDSa#sGfm4Z7I4@!C[E"\\6V#<djPnC6cOW!+P\]<C^3G'g;EFC9:3
%B/-akjWe5X9r?k%c\O8:pX-S*p"[]Wh;ko/oK9Kt#_0X[[_M[JhCVQHJ]u@<=S[gN;INoLE:`&k`R,7KM,25[Q\ILU$kn-S-XH&)
%VaMu>NJ@nHG9XNmn2I\tf*@`>aL)ttLZH@'!d;\K6fYd=DK*ZN7H7kp^Y.0('[?'M4)B'MLcQMW)#fgY]=Pn1ffktOc1YFX$3t4a
%#Np<]i27:Qa]B)a,T\Dir/*jneiXr&f)0C0GcgN%N3!cQfnT+T7n]NX^?4V>n?/>@#?'D6bl+ulI*KPTdc7O;F;7@NhRm_$'!F24
%6o2KN&2>Zoj>#P+7tU5q_g?#YDnZl4"(Cl+CA"DAedh<-S^_4QL!bSF%mPW)@neF^m0#YRC01k0H/J4eN&>5Hgfg.`[*bp6gt)dH
%4IZ7s;Sq_3+8B=q=G%A^oA_,>_hue``;]H8R7d]6MHI''^YtZYn%PfTQ->3l"]_XJ?@P&[/l.2[qV+@mT4cm#A'JlI]]hm-cDuG;
%0X&:*iilIc<eQ`,_bI7oBmM*3/)\X#<][X\b]fpeKim_t%-@N_mt`p31=gU,$-$2FLdeD](\6FWL3::R_Gj/GlV#f;f`_&q,$()S
%/0NeQeu>/Xf#"2+8UW!sp"S6Hqt]!),1c'b%pnr^6]=fXkr#;h2/'N0KEI8b=PI+:[q[`fXDDLWJ2i&ME*&naDi.ZgYMlAD=RY$W
%Jt(BYf.8:P4P.qugfbAo/O\qb(iH%Zi0S7n/]V$I^3k!(gMWKsXJ#V[I#(lJVr>Pl8<N#QCIf=YnTl90[g->1XHbeO:rNdgP_dT<
%V*&#_Vj"3K2g],;-"!R?b<;:/Yr7KgU50Q0N>-C23S=+(_jVa<A1++1[Ht=YL0_j5&lpDsR[o59l>W4N]";"\qFnW8+&aXkZd/;5
%Qq8O(!0)B9+0J('($k=2URY5uq@t9jHTt7OXH:o6?f%Zdkj=:$OiX(gX/h,#76fMGC07+MT56N?YTci+YM(r#]!Zl:.UcnU(Uo+9
%g@s93MoQ]TA:6#[hXrKS@RVV6bT(3f^,--.]+2&G*c.<@[Zphp*uMQNM6>Pb%dP\*OC>gCI9qsG<k+clC/[R#XJh97Qd7e4l9:Gj
%05b+fUj$hdB=#>UMtPJ`Fbs4oK_B3a'C4#e8LWIj1gQ9e7G@PKIeeY!4bm-l\(;/X631JB1<Znj]rB-W@7>5NI3iFArEVQsB.VWS
%[rPWOh>s$o-S)"]aML_1NBd+((1qK,fp=i:Q*babBD)cNCZX1HG-H5N!F"k>"$#:cWq)B33O5n^Q>LT6WBVHFEl.!.:ClRca!4`i
%4o3^#-HYh_'LY^t)MJB0o%Ep^<dQu&<X-O3g=%ZW:X=3iVjM&ekp#FfMco07:P*C.So&4<"6>qs6RY0YR7Xo+p>uq<i)"/'aQAuf
%JUK"REU`3+fc7UGeXi)KpR=]O+PL7V(\0_V9rks6,sNrSDmcLXjEKq-+a](Ym41SRs,L>6YCB!^cJ-$.m:h1=#.kJ4Vd8MX;M:eZ
%:he:_;3;shZc^b2KhC0DEb\D9<9a)P8Y'OI(%j?R:/tUBg8Xdakt_%gTX/Iia*&Q)7.Y;sAukk:fig;ll.??+e\+\GM*`E35*\c,
%mr!$'q4E,$TDIq^..HXF^T'0dG/iqd2=,&2mAP#"+cpU3[;FQ8VH2Ff<g(EDf!h%<QMmOV]]bUUDb)-/bTh8"nEd7@>iRQg7Lj+o
%,9%lCDe(Jk+pR:Rb#<>4fBR/>[@c26m#I,qLnV9PXK8E#Zs`j+\+TYt'V_2^nBq[Abgmj26U9.]@Y/**nOt&$G-D[aZbRH9<[FK0
%\b92KWc$Z2W]Wpk!Jm,`)ONL%A*0%3<e%`XNqGFloZ47'[3d"CF,e\M$<COk=/O;,269"\=S(s:e.rnXh-!.IbVnbA$<V]hXPncG
%2(@GS=S$S?Ks,>Q<e(&PTFhblq]C\l`JSn8"Y9(%JR@rDN7HhbADJXRZ%U1+Y:<T6>,YnaI`5.%$:c=,9WMY4^V%#)YsK[(Q,568
%#M:J2[Geh@9W]W+ip`^=*4n_KgEC"C28(pOdf3<*f$7T5gHiBdH3E?&1nGsq`48$MkH1@jDADeY.:a:$EeYsE\FpT#l]#okIm3\=
%i=$/JT!ZKRerOkY@FVO6?+bKmJfTN1IQ`8*.#@mPE-mNB^aX\uH#"CSMU8+,oIb3`'p%kKOUFnFhl>W#h(AB!f?/n%J1RW()Ll@t
%m.WEa`GE%=A"AWmDn/*8k7pW4eg'+,ZT&0)LM7&(ERLaI'0:1B)&iDhE98BJeF&XL7&<\^XGd%pOd*^LM3s4E&q4bLnE:BA6KG^.
%Nj*768'#GkK0]ioC:K>#0SdICIb("+mN/o9>k_Bf8JWsj=\G.H;s+]\#MDE"4--2(3_.u;A>$kKMAFqso6e9cf&eWJ\N#=Ek:^jD
%?+18>?^p]/(')k9j&X&Jkak`t4[1n%oTDfi@W`fIg9.gdK.q`S*hkZ(7^?tUGmoGSBo*P0h]^iU?(Pob::3Ss:OoB6IlR"m:osfp
%Z<p?%o#0Y"o($<S,DErs;Pg[M_6J'6O&%Mj[mbX_llWf2gr7n=fNO]eq<A#"[jq5G*7l2m/nLXCA4_)/He0;O)U76*aZ'Rj%&"=u
%ATlCdmUV'bK[[_QANZ<P9ikV?_pQiC2\3qp!^j:(O<V(2<Y_&Q-sT>:(Eg+L=Fbhg`k\O<<hIkd!'SK@LfI;^6G%Rp0ERkPJp:2K
%gB3F^3Uc]+Ksmt.>ju'2<oG.'qeYp%O?pYfV=IFab*B9+5-^+Qei0LAhoJZ`pf&,Cj]0D`'5*[WRWMa2RtGFCKc+a(V_*TJC(6-&
%[8k[TMUnTQPS@ai0,(VWns!l=_im4,;nX,c_15C:R2hI>(+l=``2lJ4LV?Kp:WQrLh=@F,,#?A;'$NHq>>Ns#MjF&NB@)/a!@45l
%BNc>j4c]T87NG_%LcIjYXk/!5$oF.HV41)MfXX!\RT.,eG75:Y#LGrk:$ZgfdkUWX)<N>^qm[WnACBjYU2c;L5%_-ZDe._,2q@2l
%as4IY/=OhRk`kdb>`^Fb/R):ZB,BLo:-i*]iRYK4!<Ip3]=uec/AOE9dP:0s?"Gq70UUk3\M'5o,*9NOaQ@MV'<"P@N]1X17TDbp
%0i_LJY=@jbms&Mi7Sb)hp&o6k[CY5$aeC6b:et2JQMHThNO$j``O?cN:W[lM>GJhMKu2l+NJ-XQfI\ff%XRbO"S/4P23's8rfC;A
%hqP"'(eLI1:k"<X>=@Tfl?5hKVk(f*.$1:s*3?j5AOHR"#_%]O7=k.<G>>3e#d7&ZfTCj=ZQA1tlX,L+5g$a#[`jbPUjdA$(u]Yt
%`N2gE!E'Za*I(!JYDk#%E'[%To[7"29(YGH:`T=n?:QVk$,*,bS`&%eA?deZUl/NtNRNkUq/2qYf7nl+RR)_JPD1T4(s'ZP+V37c
%@Nu5+!<`9c/lL+pb'IYfAb"i.Cc7kb#D[tlDCi_M'A8K1"@>'sn-%)p=(`%8Y%@.EX`drF10%+sWIQoI,a.@18=RD7i=_F.cBBff
%UVY:mjcG/Fb^PLOG;:u/p\8oIQI0'\K[dB9&*IA,3\&,r$6(F04haeI@7.SjXJQe,82'Pf;_'&,^e.q"UjDRLFn>D%?pBG&=b^7L
%j9j:B(`R,^kc7jd#dGP0UG4O">Q9PS!9^`;JHe5&'EH"k1`u&tT;\icr)CmF80Fnoe'Ueo%<(J\-pK4ID6[Q>]&6L*r+90sNuD5N
%lJ[M!rP[M$HsHL4!oJtmU&d-g>7d57V:Am2#,8I)ReA3f-DBDXU!=,-_jRjcA5H6K$M=E[Np;Yq%QaaQ]Z@U%bN:?@D?J_R&n&(h
%+bE1RTiM>knJ8CcIcts`)J<ta@)<+5PBgafWuotKaf^cBSO-=k%e%&"G-^lkLWkf\P&A(C$.rh;%K$u!@,>&5`eoe%d<[lY\tQY8
%#3SkW]p<aBTG41@QXk+&*Ya-JP]ThYTO:%>GIA39qtc=G8:e[3$?]+m"_:#kBL?5"U$mt3')h6C<.08WYcjQ-4>.^C_A"?AWO8YB
%m6JNQ*mnqh7QFS9a"J=o'KP57A)K9jP@5l7.h/'b<B%2m>&:=<-ufFXH1IO\J>Ou>`E9%0cts[qW)/X:U(k\Xf@j!/!Ab\>S2=YH
%?.e?B;DnAPTuaU=!9i4>$5SNWG&)$WlN/i1dj/J$W3/VnmBe"FW#Y=-YncK^]MksTHe2g25*(`mbrUQ\pIeWg?g;nJU8`$456>Me
%f"[Ag</]NuBI@!`pq0MVJW$J7hY$JOe/A=/^,BGY0:pKb:.!c6O6fHDmIUEVWqoRs3@Y=SlIp[!Iah2S;&d[GQKuSim78Tl-.+CU
%HLeT[iW;0?=^l-$W]Z0me6Q*C9sd%E.oU9m&,6bb)Slc-":3`/lWgi-BT[(c+1*;sP\<AMfp(paC:[)H6CUI2:Sho1gaR&R`k9hX
%p=/qlZ%Y$cWP?`Cgc05PeTT-cPUm]i:`NZhNGE=/.6KHtau"h=3&q:CXbf/lIFKI)`b\+Y6H=@,RZ.J:"gmFSW9kZ49o#'r#c;iF
%mH_Aolje<8,L4YQ'UUZ`9kE#P[n<(&(`Jo#FRq._T@BXXnjUREN@\Ol096E%hBpiSjD&QR:u,Hj1<Ik3]l(hFgh1\jRm\XULf^p]
%Q4KY!9KA_DZ^1%e.p>!7S.Erm3iqGT_N-E2VjpPpQL@Es>s,<\&&YDDbD.GpT2j17?-@GGQS+k.cDOsk-T.RB.-K'^jh&B&(XFPn
%e#qfEP*R_l?I#HSbK$Tio?6s:C\\N/?_X&d]9\Ksc#MimdKF6C!^%WT+Dg$$)1:^l?lK2r1(k]6h9sI]IpQhnmT`p^7_T7LEoQJ!
%7VWcecNt.aX[hKVC[;aaAu#I,'1g*o[iL_/*2^#5S2.3m5g>NX`LT=)BR3ff.O.'S=><XjB6](7JZ^d7hpj>aAc%/BVeL6G0@6QC
%VmXa'5.5q/#dMj0#Fh8)E!5"#m'Q@W36/p%MFmN3%6fULKuS=[GRFrJb9@mqE]T8!g"iq/,t`.X=E\n1V"nt#)8`$cV,qhQ4MO9i
%F9:/EUmR\5V'(LN=t!u._(4C:Y%2,JMD/E%'OhuE?[_BL2je'am^78p^"/ea`M1rd$(]PJW&uQV#/ca5XT5UOU7r96PK"N7&aYZM
%<:Z,)=]rng))ZI"WX^\C1K9DNhW`]1a4(fHp.#k1B[d_g$o4[U)jo$,`OOE5jCm'f*4_K>Q[,4Tb.Oq-KS["\*+!VBKmK0]`bPnr
%PL?Z(MYn]6$>!(14cWp6/C^BX<;7<t)!aaPe[OIt*iAok#0/u-htoBeBKGfN7hX'j%Q%n4Qp!!!P!m9T@-NpE(c$.?nkcSXd?;$+
%NKrpGa:/jaBQ!J?6+"od?!0<C./AKf3O]4j_;1k]nVLp\MZE60Ba!JaGSh%nnL^_ZNf2-#'rG2p/:&Uh.^OdI[tTHo'b*Z-[Hp\/
%h9)OD/k$0R,#k?&H3JX#qG,#$JOB"OL3/fZ.WrP68dK5N7UE(k]cHR+W.'G#H:]\^'nuq8oV_bF*B+4GC@uZOOEt'\6#tDqG1pk3
%FmY*&?B>6"Ub]T#Pu=,+:AZUa(CSZi@$C![!BrL44Upt5IZ9qp:KPCVVi':k.XIl;-^8.])6VDFhHU@7NZ%06ER>`9)^UI_5O@IY
%)d!ku:@nbN[)LMId2Ut;e97VJkt-Pf6*K;4pum]`>[[)DG4YtIc>V0&))5G.B/"XQV0*7^WeWYpH39)aHrpsNe@_S)"48'*h<<Ds
%W^gt9<<ihr%4':t"[\Z7(EStfIDo96l'01+18IRC3>Yc;<(KJcFXC#:F#_D-nia^@$l$#d3;0F!B'H=-&/uOXh'eVaGa^C_Q4,*-
%k`rEhA-cnNo>D8+I>Q/DSiS0H7OhS!="mj7W=c$aP'2Eh81eX-@q`98/5$3N!n/XVO9NCuEs/'oVS@7nEb1id>N:Y5/mXmCST]Fd
%auis)]1ccW)]_$hc9!)/G%KMBafsr-k2A3T<h+Bub.L*>ctHnL;3cE1WE-YDH@a5O/,V^]L%T\aauh<J?='.Gl,l,R\[cfnSrU:W
%[P*k`XtETH%oo2rrjq(<9)si)BQY4a]`c]pQ]M9!k&gcq?AbT\SoFLK#o`t43QOQO@C$dOP.K;Wh,0-a+@'Q]!J$h^M\4R4fIkKI
%.FtL(*%PXX)bR@><dNOE?]WmDZo/B(gd)&.Z$k23[mI0;ACWd%`HWl>FX(6Z#%X0;.^X>.\A2+^<)5#U9,u2obmPP7Mu`+5Kk&'?
%7=^D'O324>H'.dP<)ns'bf6=7O.c0,3Z-9oMqQ0L-GTlt&shHo8%[S:)JL3k:%`mGUGRA5BT_ZY7>k^602s4o[CJPb/9U?o9T^k+
%FI==U#jD11=U=+57C'.V:B-u&H1%>?)&ZO))FqU^b$U=/o0?Gu\/r9+fjQR0fO/iIBBKUN($/$:RZUhukqJ*CpXn9"3qsL>b/9Mm
%=-rYOMXjO:4c_)8;\._lZm^u.ZHt&P4M*$1$CqU[dFKlR4h1Jl<CX75/LD9m<F8==0(_rS^CkFF;j_+k_9"&H$-*WpUUZ#"FPn$[
%Co:t@SRU9Zj[U`bmn?ucQHI*c3Wj^o=sjhJ_<sTMn4Keu=24$(egK-rk#/Y'e#p+->t&NmL!Cf<5_rbqDl_]Ibc]'+*Sr+R.uWB*
%lWpilFAJ<1RG'a8GeFS??>l2ONFWTLWktWIZb+]rOIk#S`$qU>eI:n'+.n^&TuU2eiP)4cm&oUsECrk2i3q4+'n4-'[-Z)h^T#IW
%MuESI0<MOlNa!5K\qsYqCX@ZJZ`_f9rAn+nGNOE:<d5:gJCUQ::SE(8>g3,JENS#3U5!*A?(hLAkIshGp'XP6M0I!DXV@n><H^;J
%AQZ.3pCr&me;O9CB:`^B%;S`ACS$JWX\O.Yj7p`jMUhW9$,3B9fVMa;GF^8@aefiV>;sE[54M'mqk9^,'alV:+BE9(?$S+C!6OT>
%1]4V"3,6i/(#s$++pP6_Cbd$3'm%sPml`LFX*4qsI_IoSHW"k2'mlk1=uB'O*+2XYdjq,:(:AHXQ[3Y6mM.U7qe(f6_=Oh]PP/]D
%:[l-Kom06ZB/FF+[9fJ(S;@E*5;W/FX[mI;2=>XO?`Rf^Cj3hBHE&4&d_?/cn"LOA,J6o8%IW;W=@7;6(aZi?ob0is)fepOIi0FF
%*[at&PtuK/036`'jF&!eZS>;/VrT-PL[EA:lr0qL;mi;p0C2Vp,'!_D9,@4M<V<&.F4nDo-2%rEeh1%VV]P9?BORN2H3u!m03-Z&
%RgFA._EOfE*gL$dEshf?o?(,,Bl'l@>1faYMgO^*5)kGb9,@4=4eq>e_EKO.?`<6ghHi@GYYRhNYn<pm(A93M$/bTn:goto<M(h;
%lOno"8olD^S')Q?.=pJ;M_A2bVc;3E<3^IU@Gf0p40Ge`O(]=Zlr0qL4-jOa$N$'fqQ<dI^!8%m;mJuujAk+#(\T<"*_].4Wj#95
%Z\A'803[!U"`UC*igs9)V_m#j)_39Pp>N?rn'#J0RhH2,<.%JAMO[f$LQOs.0sB(7b"aPT;]=(!G&ib7]aDAoVN8g\$UhH/j[6J8
%Y2,dOW5a&@[toE"gl4A.qFXh,a@qUegu>5EEa7fD^UV,qIYoJ-0iI8m!K=95)h_2*/5N`Sh\[G#(81?glua/7^59Gt<DN&8\oLU8
%Y$T(2*N"e2DAcU0LAJi8Tgj`q#-!2E#THd1a`eDdH)*(APMB_19Pfm4bZ&scg&6CJ(=.hGB%9!_KD)mmbPuf^e"2/t0E5OW*.%AZ
%)6E)7`"Cs@?2fW4Bc?aG))%7Q\btpK+QSBGs!\0rjnJcq=YFoBq;9`=J`fZ"s.,6;!n7?rNBLY/Tph4H;*9'5)NT%*11ucF\V\%l
%>tn;HcL2;X/p1t+PVO5>c0g<"J+bH[-.P]LK*3%IC\uU;6O]=%Tc<lN''P9#WBog&N%q^)I:JH='>*YYSVBRa'$VfoerJH<Jl-s6
%ojq;UnXuq3m9'3>WE.(b\4in;3h,&T:'3=3P%A4#&G#rb.0tgLPZ;/nK7K!0Ja/)%&C=!AnGipcF/A3bkXp1ARee1a7P:m2=8W!F
%[Y&>P?Wqq<b'3s@05]p%A-KS@+c.1(Eu5O+QnhU:ApoN7BjbgtB2`Se$<V;'.GISj3+)'$:IDt8oKb[`M1m[&(VSVom;eOT^<&tq
%:6bn*ePX?"MAq9;U-$E8&><d8NueDe!ll.^J53`8>O(*25T8<Ha/-b,Kq_C1ER&/NYfRC,,PY!,K]86Sr<`5t.;#I8=9"i$*\gJ-
%]^&ejhEQXiqRQA"nYWn_eUL)Tri"WLGH?^Lik9gKC/'$Ih`9^XLtNbl=e?\&rk3fe!3p.Dmn*9Q)*Ybts0Xl!^'q:IYkiH:hCr:'
%93j'ZQ3'Dq=7&Xd+*YK4E\I[FS2O4<Tj*>pQemWA_5Vqn"i#.7\e(P+WdPHn<dUEFmJF&3[TrrKcXX!D&$g?eh'+8PCui!'LKQ^C
%N9j8CUFCr6Pk&Y+kV^rOObHadZra*,es'sL[&W6alHqeUdgS>5!8>@V:86OU=';*pg<@A'1f-`n68&7kI*XF?mH5SdSgm>^C*PPj
%-?Un0H2%D^9='rL=GsH1DVWC^J=eK7r#@8P)e(2296YAOW4Pb;lD]0*:q2[ZH*:)5G0['jLIAc,AXNFu\<X,+)eIO)8J<6LHM#A<
%"bNkZnV^:FGGEMJI2BL('D+lfPS(fU\)K0'#G.9>#e<MTD]-R,K=+Q]_;J7f%8.-Ln5$pf*"YoM`%[29$jg9$E[+98SW%7;-V9:;
%Z__OW&M%=(l.'n-hIo<f1,!g!VcoM/m!f<6H9d95jrMW`icBuYdja'5-rd6qBN65T;DS8A<er_]WN0LAURo%!2690q)EE=[)h(B/
%Z/J;jjL1?\X]Ci+0#T\-$Xp-Bauhad%sTDU*et@'_5iHYbXKSh's'^E9l8kV-t*9mi,CQr+0T`i^H0rYl_g_>eOnR_'.hKV0*ro2
%Ya2Dk=IJP\goQ/DTOA3?'Ar54A8:?7Nurf0-GuGS(bUcSlg,E\M6Kik)RO<AfiCNXA738o+/_),M9]1#Ar^=l(:M1J"=CTje9.(M
%q$^eHEXo^uNm_S&,1eGXTJMmtD0kGX,AGrU-S^AkYB;YT/Y`WELO3SF70"YfVgX;];'S%F$NaZa>YJWemdupp]`A=1\C;kU0o9+\
%j`(c1#OJtk342H,/(kfYL:HNi*&.&e+ZMgE7!PI1JA<M`?8ok3!-Q`O3'5Ae\($K&3Hj66X/F?ch)W]sPrdh1LO6<CTj>OaaD.?R
%CG^(dG4!S3Kh7,erG$)FfGNEIcX(4QW9q#u+J+n4`$(AL*g'gL=)%u0)(S98)?f.gWi@A%3_,8MX%,!Q\#/?=A2SGDN5a8AW@69T
%k"ssId2o](@FND*d$*npY)Q,0JL^WToeRr(%b#]`4K&Y79B4r[5+$E1(B,82^s'Z2q7Si[R&#V%ElB)hUK_@99KEn/@&T_-gQ3E;
%[8"4W$JN@DR6%l>Vp_WLEtj6D?=QF%HC^W';%*Y&Fbp-A&1'KJ/eOR?frh.1q#Z:d96G1O3LE1aXJ&dad4H(gbRr'M/T;I^eIpRd
%iP)^0TH2;P>"$iA-9@#tQT?2l5Z?J>4c*hjQ#R%/bgObq'2&stRZ2Rjbm>\QdcIH7O*IL?r5TBqM:,.tf-=VDmZTi?,gg9g,-M8O
%I3^Zea'CO#['t3H8YV*p4/bYKEnHF$8^pg!C=s+fPpEAkoUm7&Aj@A@P%_p"P]*`tLNHMWP"n07\gLd/;]aO^QPJLXi"'-pLq?Lh
%[>gNbXACSJE1tG^77Ek&5L-d?:bL5rct.o98G1Jj!KCDd."q!elt(m,dpTZalt(lqk5?C7XACqT!4tZM?9=&2C:63MVcr&g*=?M"
%k?`DSZ`<S5LW=#]WEsgob,JDh>^32.\4`?,-!kh@<XtAa$P0WQ!3\"oWYN,7n,fLk)7f7`=M<nN(ESG:;@7^u1%\$R*l^'U42`,"
%o.E-fZCpR6$P2?8+hd:4+9CWS$P0WMGGTT"k7JLOC>X35&aMRI_F*]6Z)7@$/j.WXL:tfbLYA)HEAHqZ$P0Y3Z!aTT9;%<Yn5*?\
%amHI!00GJp598O&W9E-/EoE^8?5AiMIGT[5#"hH>ET*VbD23_W3VUD.,O['Dotj'F'_uU$LB6BJ00E30=6%Y4k/'LQr>8;,SU]Ul
%Ap"NOX+%$_2>,]6EKB%Z$P0Z>H&sUsM$jj%;nQ*T\&Vg"W)ek3Dag1!EWMitL_5IXcmcMu[4XR(6406(iM"&)MROTI`,&2^n5((H
%Q0LMdkEfF][iM&A9(JkEU!%VKNMZ=e\F<<VL\=>"?U._SVd4PGII`3XGas'<ThtN\=L!:.(G-LXJNCI5d""g%`.a!#[iM&YWcJst
%?D&:maG#C=>hf]lGfW6Lp:(X_g9DG8l<[>d+`'o`n5-14j(lR.T''I*W5rMdD27;r[!/:b&&.LXeqJn5`XeC6E8H;(,/KO:K9)!%
%Wa9ppHnFbX(EP%m&O`mI`QAc/*hJtNV/YDPWMTGm>_V7l(EQ3"j2#Sf/=HrOGfWt:.Go<iagCXm4Od-#@ZB+M>^347h=F%H=Q,P9
%D21X"3i,6.?[-h,ms3E:LMHCA^$Y;e.>hj,gCCDt8*cdpiM#s^LRcJ+re6-]7CpW6qLf4e[;S.VZdXjLl"]'uL^,*L](#2'bN=Hc
%%om6UD#d/:^9sWu>^0p1YOhZ"&%-N`$E;1u"hd")h8!so\q3io#AGGM31.0kaO+5A,EE+_h_aE-G.t_uLls>9_7453$[I:0Whr2c
%+PEZ8/o`).q?3K%X*;6NF!Lp^AB@DK3mBAKg,.dA`L`5lpq?+'`ih1s$*<DA3#gBhA%qn^hO.g%aDC5X->)8r2sIu9D^*KZIBDmQ
%9P5k2S,N#AfjArfb`uLu:_Dbhdk[>@NO[)NnYJmE(S`]fRF;hTrp5Q)NT.<:^255BZ:XKHA@(m3-f<`S)u8H=Z]j;FlO)>0ZpnT8
%k1c"_^6Y&^H+(CA%$U?<gTT-jZ_s*`J;2a$_mZ[)F9h2dg(%/Q>2@Y9Ti-,lN"XD(O0RAXGMB.SK^\*'gM/nOF>oWD?=-2b0/h"$
%E*Ms)mOJ1m<[QteM\=9]f@p8qK;Jg;^]?:SA?O=i-#_ujppmt6'IV\kTT[po()FEGc0eQcO'Rjhh67_jalnG7"c8OpNVWZEp)EQM
%f!.$TMq]ZjpL((OHcm;u=VG<u<D&CadGTl*='cYH9./AI`O'4e@=48]5(m9,8PcL)^1&T<?cd+?e4'*RP+E$JOr7]VAL+h/nAhsK
%UU8\36u=4'!c7i(S_5'2nXJ>UCD3!7B?W<&YfH+9-PGpX-aWF;q?>FO^VC)8Ap;Z^1qT>`"g_]K!FtM6_Am?tpPX?g:l*t)N\kkh
%d%mR&%g@a>:#))[%%<hof)$EkTB^472'0fSVre2os.j:N9q^*d2j)(>,]/2>I>&<^`dR][*T2p/SOGNDDOg().6+kFU,Ft.lK5gH
%r>Z4g%sHXBC_IsTJKgLeXNK:.l2CQ"aFdcOlXr=j(E];)n.-Q_)XLVq-N1_E9=r.JhUKU#,QFG#&K_"BCn0Q.<%-]k#>Ek=SFkka
%*9]>;#6'Qkc_k&XHQ71B8-#*j*'gu]3<:7\h>=nah1Gqi$@VS1^6ughC;M+okT\anYs:20Jup$."K,0hYX#`9#-tWV#/[>@k-nOa
%^kf?*l!j/T%Dd1k'BH-AqE3*sR1Hsb!;*b=/F]VP?m$5\Vd4K+7/Prjr.*H2I^h2*?L0:*?<Z6,Z)msAPFnpuc*q#!n!80;H#6fH
%nFH/uN*,!N+F+QW\nHR#^IH*9>f')l1<&4)RJ/k\crq.0`XT+-j1=(0CkZ?GCS,f&*0[dWIUVG'SB:UB2l)TEco&05?f*scp\.l;
%eLqa+BQ![='Pe;-qAjK:;Y7--Vk/tL2"W"0h#,H4#c&DRFRZ^"iSL,RP5M5<aE)d&;9Ns!H-V..lrhBqlfPePc]\%cH#q/gB!qsh
%&`ZN<IGoOa@iqNp_-A9D%pQnQ==9]pc]KD`LVt4db'mdZKm\Q7o^#b7J9AZ4bcX<2Gq*5)T6_4OC$6;d!M*Ku,M`7oA_hp4R07]X
%SAQD_%lN1pcaf\2gB^]a^:Wek6pB_'!AIm<6"dXZ.O7Y=d\<Ma3CBP]Q0"o86WrWEB#f+5&(O8[?HAW?'(W_I[_I4B3$GkoU0F#n
%5d3F1bkC9`DK[[?^S"to-loE4m!*arg8s?;M^N4+CQEPnJGeJsoJTP*[2D5A5GXX*!+3?"Sj<`bQu9NeU=75@:3`,+<-5QM"9`W8
%=qg%:2#GXqFJ/elJ7fcNHD[eb_$7ZOY,E!OdQj[@T9LP:^;oA/l&Z),ZT!C]`#OS:ZkS%TjZ?ag+o)R!9K8K(`u,CF$gF9dE[VO)
%AWdJo9/)0!U>T^<V+B]HRin)kE<SIOE<merZdnLq$Ne/erW[:iA&Tl0U;2EY:!Kl.3ND#_;%N^R6AFW1iNWT@hQ'!Zph'I4;;9)4
%etOH!F2f8'^Bs26HR72nkiEqoC]F]/+HN2E3)X@T2tt1<"Ze^P3NWS_Ws4j]*IM%GqDjQbBjdgJbV&LJ("r^`)3]V36#$ia)0\;c
%p+*Tab_CK%@q1kHp3s<R`,ao68MmQWG-Z,fCWdDVK29VchKGHG4m!$d-J]fSa?&ufDHEun*=iR`2V.LWGK0]:X\E8)@+r/oX'eM"
%`j'QiOn%=>7^(Pb16K'.Dek(IhC^SmoC-0s)>\XCbmZ(_;Qn(glIX8DDJb7,d[<99qOjlG@,=jI*:o<o+R=KerQ/86<q]o-mLY6<
%-.K&7[Yps[-;9TWbVE1t-GFPh5i;l^:ZLM*W4sOsUP<iBY^6U\8)jM`d`i?2+!s-s=S@^e*eEr0)0894l@4]?ibr*mp+Y9]`#/uh
%6D=.\i(aBrFe)'FMV9:gM3_q6BU56eAiACZ[SWMmM+uE^bS1lBD([WB;V\#=B;VCJ"4.VY6?7(sFR'S[TM_T^A+UKcNb`9TIqP'9
%.#oB15]bH=q4SnPDM%REMqs&[5MjHLE46*&67c`DFPK_i?)BZaQC-@5=dPgU/OOYd!Y=&pPb`HQ,I0C/0!dY+mN<5S,rDgE8_F$)
%<TUac5@rNk(a#Eu?2!GPS0je?Q6)]&bB8"<F7pt`R2B9(V[FHg0qU&\Y/K@t1ra?>^l[BP?s^`tcHmMKZ1N,]QfB8G/KH\[CsAFX
%>&u)EE;Hjr]&o*g3E+'>;!X4:O4N[<X*(4VrdZG=XBI^5P`a?3G<?:tqj7Djm)JItMc)`M4_LWl7kISRMG*;0:1LCcJ4A:T1FQ_`
%-qGWgJIdZLd@9A76$fm+WV0!5[3cR/_<X`HoB6TF-!dRM2=lsbI4#E=T9mKpZ+eO>hu-/ThXB61p:Y2eiF-mgWLjuF4Vt@+ijm-)
%D4(<OZ4ua$j1$U.pmEIu0AsqCfO<FR?aoPQR<`].g*_u+-])>8[TVecA!1XbhjJgP_T]gjc'-MO:b-1*4Y)Zn(g]uLl-UbA:.+Vl
%]D>8iZbbs%[Afm2i'pT$g]6qTo*$KBcp-@^&e,8j!ZEu:p4YT4m0'NZh@)]ghLTeKL/)1:rb5ChB%\<.;TlqE;8oI,SmtY:ORDK7
%N?N_!UbZSB.ZWFrU@Ll42bNS_WO:ap-qpsR%"FI1C@)X'Kf3[h2sNpmicno/V]9l15?&AO/_ho6gapT\;dZ$dEd`RaJNG1L'!VL$
%LV47[VE^^J(&(Og'-;$mU@X+NZ3T8"HlRp7>5PHd7t<?$-GZ6U$7HD-$i1d"\T]d$;=\:kM!F)TBD5M#('8CW:d<2cpe'\CGH4Co
%@i5Km5GN.W'EslG_2I3/pp;g0CII'MMgCph,>[%)r5oQoldgTp'ijZ$AUS&ZeZlq)]eLHH0G$/.)l:?p'jcK7q7mHpG@%ku.&sEk
%69#b\IH`*MQ-&22AjF<02WE'a)?\H:VIfE1e)66f\]8bP>+QN;Rq\Nb\`u\dZP+/.@62^VM%_A[Znj[9FhfJsVRk&J*&Y*>N`g!B
%/i"/:;dF%V0/C%#_]EhJ-L`I#k.*6)0+7orR%5>-K\8B[kKL*sn-OQO_Hjlo2C$*7H@6=AJJGNiB,'KOrjkH=3_CF[hala\(CCpM
%XZa2_H/V$%P0(TF\h4lJ3$jr$A914_O$I4[=VCNPpS9GYd81`BZoU(^LR3"$:uq>GnE!OB2']RXD]'PIg*akgNb<b#i[S(,(Z(EV
%E,i9KNB\;k<Ud379(=aBZttF0j(Z[oPA<;W>KCBt7BZA.D-ocSOh(>S<d2MeD<\%qdr&.LYkei@p;NoFGI6ZHh5F;R[l_F2V6';A
%4UHPc#36ao[#L9mN=7Ap59"fh2LgG*;E.kU5Lpf]ai<(Ra/Br2539@fnEJfK`fmXJkn-%%"])F;m#npID!o@jkIk4)M[b(9J=O0P
%q;Igh1[8f_<FO2X;uYkEUT'St8H+J!8"]SCLHd`pB^4POiLcZh2"bNLnrM'[RX-T^q?L[5[%5(/B:k4pro)O#;_M_os/F[A;\*$h
%,.!==Is@'Q;[g$i"TtjpGrq@W/&:F`SnQP,fHgqpXmt"T&VlJ:Ki1MFU5'nrJ35EKcT5UcqB,"U+`B1J,h_!E\&M&/U2KY$)h#KR
%:HkRhf`_&q4H,n:3K/C$]"oA_]+=?D2?rfCq4YJ54P2U7[7Fu^g[IB.*(F>$PJcl)5=HE3('^C/).:qjfY"t(fBTas;B_FoDPQcn
%0aX8aNda?cf%W0oT4cbNn+X74i,Ug7hhMFX'HHfF-V?CQqemI2G=N26#((V0bX+f1m'as\\MS)8GiuAPMth`u'5gJ>``Dj4r9XZ2
%oicNu&tDjh3&`G\b*-BE(RS2!'47=E>Q:So7J3h^H-dd..\VY5:UIf<X;!Ac\"@mBqQdTg",kePS-AfHPn<05s!2t/*H#BL+.`sk
%O%9N.SXIPglnstX&Mi+P5_Le\#lDpTRN%7s/L_]Fg2oS^I>M$pN?^dYYp(>XF=Yj<I'K3]=%ojIU/-P7l=nEnJX!hn&>ASf>lVMe
%0`sZcncPTg'LX4ebG!(;UP!bdiH,o9T%04EapM@]gYVHNFpjV#Tep1c*6H)P!!)b3\3jhfL*8bb6Xa,:F(8ThE0gm'ed64Qb)19&
%8HWCZ1Y(&8n$$R<":?:2S5)?0p*MQdSASM7GS?*,$\f+':T\cB[`E<A2[,qH"p=&5'8;DTB29M%d2B3G]Eq*'%Kdf/*/;P(l;RNr
%SLkER<XLg(jY/C^4GC1Z1>ZR%Bh-#OGuK>.Op/]p!=90c4ip$fhA>T@>Y<c(72@.iNKc,)kp:nbSO$$"(mj'W'Z<$!!/:iY).e$(
%K[W\#qt?e\+K',f?soLJdQg2q6_b2Qm>-=lELM2$%QM^N5S0BdRBK[%L3MC7!cTPZ6&oVJM;]#2oMM0pQ*eH-+B7_2cC5HTO==n'
%)0(K!Bg@Kr,T*GT*N(B$jHS',1c.l6/nrSu"R`7:^qGsC\8If=U0r.Eln7@1_c!<S>@>UbI1L20C/q:]P12"rDXFg2<2[Qq<.O,$
%W`5`>WE2EkhaphI7S?Vk$_1OgC:#7ObCM^^.b/3(Wl0X8*aP%GZm>>0Y?Pk*g/Y+A92a0mS6hIqZm6ATDGRH.2-Q0#7WWlUWmQu/
%K]_p,<21b=OOM.J<9PJuj-<Y?IO2nQVmQ%QT[acIaOZ:bETj&5<b+q.X*90:g589+&?H\dXginR22o=K8AME+-WR\PNO(C-O0X.a
%2ju#iNBh.C^n]lqFANg>mh"uEp4DJc#X.-GQ3)n<?kJDo]AjutCoB1UEfnNe?5f.M>ifVpG0NUuGQJ0T)b4K__,/N,)m^t*=OF$^
%SL--gYn_O4cCQ*QU<a&L5Je3a>*&#a*+0mc9Y\*bjXX;Z*JKC7`IlNV`MYPSAA^!^A0PtiSFIKVg]%r%qC<6i#>O/B3,J08p2c\%
%0[oQ6B`\\'rou.4Z:Ii2bMaqkcuap>cRuOBlkf;7B8W-?aa1O#$jSQ[?o=b=$ZMV#+[L:]\WLh>NZX]68S:;Ne5U#oaj1<[g-[ML
%,27*_Z@gt7GX,9)=6rBF0t'Ek2473I=p"e`Qg:j[.V!XccX'S5XE6E8(-;F#/j<b4TA1pgmN[K^Ba,e;Xl9liUhfr"PUJu/nSfZF
%:?5FtraqJlqB.R9\TT4lOF.lf=`eoX90&_)@&t1aN^d'1D0,HSi<Z(6T6jZd>6P,DlR:7m+79U,&n)JA&uQbT*K3f>cKj:;^/ttY
%I:rl\[Fdp,lXiqOM[-u)n>h=O]s'8]qda2j'YU%\6c-[-$IlHk/O[MYka++lYfi,Xdj$JChd^_uijH>SL050WRk;cILcR5b+kqjn
%p]h+]#.#7&E?*::fRrX@-Qs75A(Cd;59E>.SK14k:H51`>[Z4U3DhAPd/B*b[kb-AneDcE.4;%Po5@s2n8SV49fnJ3^aZL&d4Jt8
%_kWFJ,uZB/XQ<i<BRt;2Xc^tkTt"Z>D6\&r\ll<sT@\NZfJu[Y/u%$@ic\/16:b!/%4`TIe\%i6g,4p(4IB5s1<;Be>FoaDd<+sH
%mf"Rs$'j)`7WS=MRMi)#7gJFm5rQ.^>#S`S2gb[jrSWmp0=roRK!hfY21d\2Z<nJ2ql+eqA;ps^ot#db&qF9Q/"hk>FMInQ`6E4M
%*+1?'<r^G$#j@UOK)Tg!V]iQiZZk!l@Rc""m%'.7]Qs,mmN2"Om*6?+ZIZPG1"ed]WJ4t!Q=DmQmQNe<Q]UBn%e`iplcI7t_Krp8
%qp99<<83h+FXQsh.*OKBgMMSfnn@iE/)_Ea&,B;X#P$VEDsre%PR>VkIP)DFa!L/6Khj]M-mf5I8+q08f4J;c4s!6SJ;A9b4Ej>Y
%Mq;nK98?a2(#$L,3.XR2ItO"HEPj(q+rJ&7pM>mRT)uN0"=H7hGnrYe\tl(Lj3>(ufp&eXK1e06_i7D,"2CZ=Ga)?h'@-E:SNBn+
%ORjlmXU71t!u=-4J?WUk4PGH^e=tn'3B-k(SYfY'-T!SNDU-<@5BqF""W+Et0J[9:TQ&d&-i?#QZ1BRSB<mc*#rG0u>N$hl6P^)M
%[N(C.:qDdZh#t\GG?Dim922Dt/;q<s=ebb`>;r/sVg[bC/n,;c.$_t(Hk5hbo8De5'M/']i/qkdhYLS7YP]Fgj#l*%IB8?R9P!\:
%77[GQ\=>dWc:D@_e%<#$mt6eV==#Ka@D3cafOFoSa`1Cl/)X&/R-r%3i2h+RM\eis+:AsTn.QuCjq3%EF5s8fGJ_A("u*:=5=Eq,
%ECU1A>C,)hBFeEhF%pG*dC'TEf=odYf!q*Mg*S%LEQ;mua`c7R:t<Zb:^9IC:WD#LM1@L53?m,)+2\R4!b;>],Ff8CNBi7/:'VK?
%iool_'*31[-NZD17nNoUTlE-c@P8oGI%PI0N:"!D[ZuLN-3s]8X]ir1fW/mKEs^O243mZ%aA?6aDq-%dcI\EG^d+g7C'3C'\sb>,
%CBH(S$NPZGq)JQA1'R_l02HhAkBR.qVfd$So@/=be6,EK5dKo0JMB*UQOQf/ML<s:AJ,hckLK:k-pb[f]LlRZXj7Y=eZN.\M;)H.
%B;F6oPWOEuplGN<,qi<`XmV--DD2ogl-2g%@'W_jDm]%LGTa?kM2P'O_lKraqS^`a,?<lp#LHe5!6E#uHQXP:qb,k?2V)4jpK`k#
%P2#CCi0'Cbdq%9LpG_7ATJeCb&s:Y%Ebg#rcQrgeO:uK.a='OeA@Yd9-K6l""(=q>5U*,6pXeT1r==h*J<KVD^I/oNCNEC?UkSKf
%&jSuZpZ[YY0m#H2;%Z'@-THOL7?%4^HQHD`QTJ&9T.%YS)^>DT=\5eWY8*LeUSobr74rGL%R2KfCU"+A!Dg9nE1+)KDrp$7/a27!
%%m:!E.-5#,PR*7LPk$RQ8i/J1;9I(8.+t^pN@<n"6Bl/):Ff%_R1Q4)>HJO7]M+-ENshmU.5)@/"DG0;Pa;\R_JNi..-5#,PRrgd
%Pk$RQ8mVk'7O]u(U-sPbXXL$^&7nJhiob%h=D@<4&FTGuEn&BPI.j_8cn%3Q<m;(I0d*.=Z=-X(O>GZ@ZN5s.0*HbGJGKY,fPDW0
%YO4oB+W;JU2gc*)_Mp#X@$8Nb1[]!5r,-M1b>0"h76_N*A/TM&?U?12::MMs9t@>=&%>PQa1!NC4.%9kEXJB:#2Lc3;>(4+h$KDG
%N"#j"3[%\Z+=5"5E+M*`gf=Os"9\i7;_7b8Dmllh(+sg:DLUr-Hd=>J(C@`Gn<$6aak/EZ/3-,REVXT,KlHbnmW66K/\%;'bq=eH
%:+#c3(Aq.0GPa74''Q4VnT7q%rC\qJIo.Qd*sqq_^S-I?nqKlq5QH0<^gG:`X1rJL[>D2Yaq/FAP@Sj)l!QGU/UP^VVC;;Coiuqr
%AkZ&8gU[brhj\GT:Lk7u#ES4b'=A3pg:d?@1aV+Qej!5c3VMqU0\&^G$q:;,ck1m%7j=TNi'Y:Q#5tcY7"bmNr?6k*XW@V\NWOb/
%(Og]4T74Ups-P4_oPFC%-;DB.n?<*$*=3:QfAm<aM27epRhf(Tq>=R97sP1`^FquC_IUG=^\Z,L7Yl#:%%@*YQgdLs'`?>pM%CpM
%LmWS(#S@CK]^SF0J0I=Ef+//M-UN9jV&Ts>Br$PI#>"@(Ob&=M!578H#+2>C&b1Q?T7W_35!O`^lLPT%)=a3oINRMVLKO1W5=&1H
%#]pa\pI,X>D\2Qt(C>^;7>O2GoQ[MAPO4VZ0!&Eo8;Qbh-jkp%,/PTCL<of470NNPPE-+ahLLYU&-Sg"#CIk:#XBYf54kU79R&og
%5A9:+^dF-DEfaO-PYbdonTlD_i6_fICleokJe@e5$`O0]qBB7_.nkJcn<*d@0B`KO)+IOiK`P!F@*<L+oJFDtn,Ofi(I_Rg=i`;?
%(uA)Bn,Zd-MS*7>(_!a`!(RJ1KR?01jS,+UhB:eO#/VqC6jQ"K76jL"n"F,#OlZQg7i!CM>ZWhFiG7pY*^Bn1rsAJ<KK,Roq[&n@
%CC3si5lWKan$8s!Y%<I_$dLh%e*\3AmS^C,<8Ssu%##X4)nWGOPu(&d^"4+mWc.>c=cIHQ+^=L*&^pMtR@8=oQ,*d6?!kaQIt/7!
%92,,7J!)T4a/$AsIa?PiHcbMs[q,2VrMG[]s,G"!cf2N>TAM?ipDSJ[q/?;lAKh*>hu:Ohj+$ots7kLOo6'oaI+D?PItp#+r1gB<
%r8YjPl?\L$aJckLrTks`q[tFq[+4aArf0Ta^\rS3,$U[[1;888VU>Ar^SNH-0C/6(G8\_QREFE5l[LRg^6F17iQ-QWhaQrm4S<7u
%j0Yp=M^arVrYM%O-A]X\GMXos$2<idrpJZFD>[-1LR\Mjn&!WlR:%+Ji4S@4ZbA$*cu&f2mZ)2RJ],$JE7]ZBp&;Y]WK-`!pHUY$
%o:ECs%\`\RT=<)CqsGD1Gra\?Ka?!=OS1G?kr<3l!KJlgVZ-=2Zl-mbUtMZ%Y[`$0kg\Ch]g)-1an2P^BCl,AQQM04%BRXM:P4.M
%l/`esKXL-+20^!(WAUg+92=s?/,*Mei(Fd'=8`#dr&46o&D]D7k2:k*T0Ccckbm<b.BiG[_pi*pgH6R&q>4F\(pba]aaIl/QUM_L
%&Y`&/ouLOhH9Qg3^%b(<Z>[gp+r_\0ZSB=#dgd;5Njd?_b_RE+jYW0Nd7MLdk2b]X2\OA6F>EQTE)Nl*l?XZFUAD."[En#1p?0I&
%r45XrK#0#ZSDmo%X>5`9LNr!e[L<7:`-Hg"rk#6h_!_]Gd[N&kcJ<sR;tp;rfh/:hYK(Od.JUSXEkXW?""`hb7J/e@DW:q$n5)ef
%O*?TUCqeiNJd"7Eb?FY@flVW,j`=gD$/$$mm-!#HeYh6uq.D4WQM4bWK1<KY@LjJ6/nnAd^*'I2p'H&]QBbM`isa6BJDFQ2^+^RG
%e6dN`cb*U8m9QtD+-cjF:db_%<SoDG5)4bC0C@B-5$STsmZ,&sA?hc`Egugi(&>k@X`9o`&O>$qMq"lLP;30[;l:TNiECfF98\44
%7g7L;]1&1=6Y*oYnrZ_iRUX$h*#=J>3t/4YdQ!H=#P\3_6C&t!k(#'5j_/DZK0i+e>X]_!(Kko@"74NaFD\LG!G&k)-P&&K7$=1,
%qt1mgX4I1fR3tG)]P@=gFm:qFIqCAV]DhArq>:Ba"8]=)QQ5]jK__&BcQ%Nn/3;I4I@3/Y(-O>l1q/.^?Y^hfO&;Z>0*Mar'(6Tq
%+qu/I&4>/EN`fX['<dl%@cq>6Y[(l>i#)u_G`[/tQ;,-m(LZ\0\X^5?A:N!:$\A4)^F(k8R',^:asdU*<VpMT3I5sc6Jg6!g$<#X
%fniMl@a%3<o3JpGIt-R2)>O0bBJV%9D(>ROl;q9qS:gm%P6)H,&C/@tof=Fg+541oD*i!9Y`5=!!eftNV=moc`ASWB-8=ud92mQB
%AERB94tdLWP5gb(B%81,<Y(GQ,5Q0Z,N;M37g26Z4Z>@gZtZ5%P5O&rofbh?s4L]&TAMi%XjrIYHJ.Jrr-pJfJ,YA2r)4Z[HX6o5
%[YQa"[G5'r]>>f^+5d(e/Sl<_qZ3WcpsQ1Gf`fp>Wf#3e'Qm#+&/JZ'?FJKnr;q;%[NtsIm<a/uKS2XAah0_6pG&_Jrr:_KocLj/
%jWE4]M@oi[@1p?s=Wf"M)"@2_`C>,Ajp81+8=84hOK)K0hG[>hQ]pS"(DcuU4gt)U'83bg&`$d5IB`!%\fa`@JK:*U,'FCW&^5Y%
%ik$NPq?Uock:BI.bG2X^LB+<KJ[,NZ(1ZQ.OnY%p<&lN;T\k[po<OJ-Wl15blshS6+7ab8]%F3Cm)?3I4=jc4_H/i@=dgN#"uC(:
%aZp5E-Gf4eN/ofbkI"<p=>Y!e.@A7[dcgl$ipOV)2]@_F&B:K$m`rioI`WX;=CO\nJo:Z;nY^oKGNp9c-\a2IYosof[<L)JB#U,$
%AMf>29ih[&;Q/MB>$ick,o2B)B_EXp5#8?aOMWlt5PXZWG-l5i@7MF:F)9NOMI4-CgUnQIBXu00q!^PZLWfT$0>N=-=)I#EkaH?3
%gUnT[`HU*Ba3shjcH;F.ojY=6Ik[,:WejtS?[=S,3JRA(H5nsd<jtm#d$rEdO6--km=2>[QeV!UpXeW&lXXieCuEI3To,\!QN[5q
%F%#),`1T`q2W]E<8Cn3ah8T<qE)$*D?gnf[%aOSo\H(GI$4p)T?u=mn"ZU$\+!B,?+?Zh--jTjp=tQ:1-`>DApO[Oi7PKl,ZNA_$
%re04^]`*Y2R";9'D-KrO^AoAUp_9bG5+djD.+kA-^KN,>AAFhqIWt;m,%VEi"/>f!l=gC`((6@oXEhF,[HodT[#)XaZ(uTFm]aBA
%Bm=)4&4;LSm,;'$aOq&g)]Cf#`ZKVoj&L2G_s!nR%mW?KCC]9=.mQ.nS*J-'l7Q+?I0Fa?7C_c3Q)$De!Kn1Z0(UQq/csO`V.R)E
%JLmlo>ORS7<SEPefs050-o/,I!Ct\6okj$Jm!#N.KRpQcdgfC,]rd+mRW!-27:>8tIi$>-0@Nn.SV/IV!gMA[3?efJ3A*HH[!G(F
%VJgKT3_d9Sh0#@$LHkj^FN3u88t"`9SKcis`**kKTMFgB])^1,ORr.&LC?kJ`\6T=(tSs6=2L?SXT0b^d'NPE;`3.V&UM5:5B@0)
%.A[@1__a"Y5rhqt/cj]K(d>l-OfklJ/n6!u.Ze8KiS*S;*6dJr%s&V8:d?sG__Kthf%p</31hAK[7V"\,l?lDL(0?'oK86^LSH4T
%SNr:1@S0QnQH$_;$n$Md<HX#;[rckASEP+.@@'ce"4DZZ1gOA\L(Sr>5QLZh`4<s0G27"DC80a+dRFb(JT/=77,3cMAJ0;eM$tDA
%Lmr9TR[U@QK2i,T"s/oXS1,mEim]WL_M62:UhoFs-WUiF#VG4Wp8V;Jkjel'Q7mu4ng]EsMkWug"+0V#Y=4aMR>s%CQSVPl1Or*9
%:!TJb+l-C1_"$&DE[>jPJh:+8/EK8pF2QS7b7>M)grY7T`b7mEdD)YGipY?doM%dm6d.;X.CtGA2:+=$S?NFqq6QnjF(J)e0iS4#
%4GLB<<La<H6^ipB1#sG6QeWZ(T*3dlQCF;b1gVob-;@_@OVl.I[^fAhU4Ac.I8V@A,jT.q@ELme;(J?b6l].<.fa(a&f?4="lIUu
%Y(Zd],0,pH<<[LS<mo5.,FMMH.6?>cb1L)B<mg,!==mYmmA34_7',9<mLli%r_7<3h>9-Z3lcc[90Qd3IsteB^Ks;cP#ole+)R?@
%X1E;1>r:[$"l#fsG1DTcc$g7;2oTm3(N_k&kAV4P42q/H^mZYS,o$8_N&).c0>Y\"]`c`rTF0ip_Z'ei4t*uW0/E:M^,3ZW#S!(V
%h8d$\N_7&U,E#r^TEQNh@_hcFS(^>"5LheTHtl]olABPV"41=&Z#K$I/45eq:^dXC1&]K3c*&OP871,cd>1B=-;7,XMr]>G&Jj&0
%mALq_JiX<ACd\0TY<cH:+Ua7P(Kk_LF&1jbD)5=P*76G((ngK,*BOg1J(pZra\pd2K9Y^d6"fK;NcVlt=dobZ=QXJlCPgXhctO*,
%,?3E\:s\'[A)'d9^4n)L,"nmDXsqQVIE@8Qkpftf8XD.s=5?g$O=CRlKc8u07E8rX2N(/FK)S#CU3^E^d<J@k-hQ)S@[Dn4RS"D@
%Wek3"XBSQ@<]KD'?0db6ds@:\np<S)VeF]::+kW(q&&9i.l^60pLa&lR.UHp%>AM>_6tSU9T1Pe4CU37.X5EEFICE/3OrD#*A\-9
%l-t>h`Y;i]qGW2LF*lEdZ'gjh\pO^M]EG$ebCcrFr-_.7rKa%]/7+Ahl\oO!PNjrp$0Nj<e/KTi[QDp&<Yn0B_A!G^J(B=gdcCeo
%0@!Pd];?Ud?9T^sQY89bWD=BU8Y;u4D"n@S"QMA%:B=6dbdCbr`!LCGInG&:s'F[:!:RB?[&42!Vb`P50n,t&FifD_Rm3>rJWC(B
%6MiL'^AN(<$9n/<A'?)7=)bKILq9<Wp7e34Z5kjj@]XE<;jH-5"@q"uN4EF",2NUtSP%.q^r-i!!LH@XMlLBlNCV/(_>q=n1-/1_
%0'3W]TqZ$@VZlfLb\YEY&(cf["0eCodmX^l_CXn_FfE1.Hn<E`d>GML78=dbA7uNO^LX8nlm7[US%f8NbM*d('2o5Oh7:B--k&dT
%2ai>UR`8Q^a?HP"V+8[F1,k[92Ua=hRudE0JOo+"<+V"#aAB3AFQiofblKA1oS%g>n24]k't3TSY!GY9<M1?'K*=J2TX(,IC_^B0
%b`EqJNfQ[%Wo(lRIWQ6;iG2@d&fkIL<QNA8)S*3:fb9s\H@!%L=0q<D]X=MrHOVPACjN#^[(8/\5rXcup_?D!XrhFn,RC,.5MMSj
%dI\qS2Z:j^g_Jgd*e70*+mJ:4I4a^MqF6[h&@(aW1HUIS9ZSrQ[hScEGJJlc;8pBp3tj&[PdQDu;2B4/s4B#?/k_\5Ub\jf0&\Rb
%7M%8MZKpOT9JGSJ9spp9PVG&kL["O*M`LMPR1F$!1qW/$:N-eP:22pcEP)9"d_br8O>Z1;m&&0b!1KTc!Yc$hr1QA$><O.H<psBt
%iipY/7QV]J$&kopdn!.h'5!OB'.UPf.i.!#+l"$)5Ps]MR28;9>K'#,Y!nI/.p,KcGnQN0Woog)K#-U;g(hZ\j^:'SO%jh3HkC#D
%Jjm[l6aIiM-X9\9kng4BIZ,L)j@"8pNi`6NZ(nJrP#OWAXHD,Q4\H*&n$NN2B.l4+rr#6'm[,%?G!ib&0>Qp4=SCK"WGThk>4.7M
%BVE)cEh6)i6aq:kOt^0KoKt"bkT=I/laHunSRV$%S`\,#o>4$/&Q,QZe-q6/C/7E&#_+N>"Gbe8r?WI%6ZuM`OL&SiR#(iJo+7EL
%Zepj4TppnV_-5>_j=Bum.mhFGR+apep6S06b,5\/,g?]@kCK:?*CpCADc1`[@G%3d!TknL^$!2X>#F+h)i]JW%lTRQUqn&QA^s&Q
%)m?8Hc,)\"F8uER+!.f<NnrJHCS/IU\l#Kl!dUBF"(B5^bgi1?>O\A!eVd+(R1`s1$,pQQUq[(K^,2iV?C8!N%#X3KLi8LUW/eWI
%mpSR;*f[#m.=<RA(+g^[>LP$kFq'Z>83t;OEhi_"UME]ABd'mKe:mfddFTurQ:dEAN<TrVZ[h]=:F*T*<>(P!(ftSmrl]MO6;/Vl
%35.!ol@tVGaLM"nDAh6/fc_5YLTAeA%)"ZRm_o7[X%9E+[%LX714<+^4R:]uDjVoT5I6Q@o:O^f*51Gk+Sh]U@3l*M&0a-4bEcna
%?$'BS16rS3EK_=t\WQGq>!5jqS".nO#*GKT-*&'&#olp6K"DCt:mo^+bL17rG1sQGqV"tQ%7Jk;2MJ5*D@R8"LISTb_$PXtkp\A!
%h,eWM-h(-%FNQp=li!*DLs.e>6P:fm]\QRhEN`!DP;Y3eeWVj8g4M]4rhWF">07.CffC+CC6mj(NX9BNb)Me7k5n(fp3Fq?F.#pL
%4/?;L7)UQNmZZd@5*Mo.6*7\oE.j?LO>cHLmllu.Ua*[V[VYX>'3<m@G-WE[d)8@@U^]%QQ5u2TZ8=:TMRZ@$\Gtp(ZTbH+Q=M%<
%Q5_lcRT\(<.M@=cYYJEiZD'GAiU`1UXL`m=N`VAg4lfLCMmu-KRR3m_+nYR2$L=n\N"$)#6S'_ub'%>TO^"#rW`p%Eg*Uo!Hd)![
%mA0"0ZZ;]QOtm+*RKGi&@.+[o&&^nr8>L*CSa\DQ(>@]7-?="1F\$%t4)0f9%).V32R@op?!l+IMXEN$WG-n"+IaBW<tpcuZK+s,
%O^"WU5ii^CC_J-fc."L-L9R+\S)2S]T+Yo":cZt"oi='aT?=G3]0K6&J(:?ugVq-bKdLC#d]"RRnd+!QAPi#J+JpE?64TgV[^l85
%Jps<8c^$:%ZN))D!nW3P4&+7o4I.DtUkLO\><[57>cO;aJtS\XU7e,&pRRgE;QI!"KI_.f0V-+Pa(.RI%L:>jU"b1>eFRJW+B"k;
%K5hGF3q/jEOaV%r-.5u*jub`(?`Ot8jFr;99LKR$LZ,]7[Z>]oj5+DB_XU=Q]d%tej`G?DjcYRsD9SkF<.Ahs06tU=GF/D>.;]_m
%)-k0-E\)Nj0jqO?H^TmjP&+:C\8]Dqg;tp<hjHrAg%_!obKOU3R!p20VfB]l,1%9@#M?BpHt+R^J?^oPL;+;o]dHX^.J`dVC-FM/
%)2H/\r+Sp*VC(3-j4-l-R;l8cV=!Y]K\Wd(:mI\$8'_N#E@q+-4)BgCC$B60]L^LZYKEDI.V=aG@."lmSO)/Q'o%D&G6M7\c)JfU
%"JV2:K+XedJ<hZF)*?7s&+3WsYM.,DRA+,mLr$(pL-1gR6c7@0eFPGYT6AnE^VOK)93<(TfO&g6m83YrRb[0=f!+>oaUF>WcSdjq
%-?6fFR\!++mg+THFSBJ>'ZNH,+M0<P^)Tfl2,eglk'YiOS29R3#ou);gbBOWVC\0GgG@;u5:4'V1>@h[bo>HTWfhLLN8t'C5F8`G
%e]90^h!`D</`auL"l5`)!,[%R8fV;R3pV<,/#lHZJYNi7V5@kOH[cCjn)Q(@:qN<-1=SNQ6!I%h3+4h<G:!XKfc2)`RNe%Zq8(+'
%\Tbir@=VtHkJbfAV`AXUH4R>lIA_g64pd'5I4V-e';^oFeNCPRnQG>knG'N=&@-O+PP>:<E97*:K?:%aKZ+^%$BGlro339b%]?>=
%M>BTqh0/G^:q!nVa!GGb%We:fgYj#Aq:NM!A*J4(E>W0>L86rc"L[KEPP5<5Qs<KW2^'?tS;l>k7<RjdXKMbaM]R9ma/YWGZpO!1
%rFLL3F>_LS/8F&n)R_uS%h=uB?k^_BV3II-QB/'BIPCtg@Hq7;!Og2qS8H=^?K.74lO)pu/IdXEeI)750@qsdAVfh%T%GR1\a8\4
%hoHu8G/9;nS1eQJbb1l,2<4(m9*[%N"\81AF`+sX^H?qhmF*WOQ4G=!\n.nQX+i^+j.W/_%HLL%i#?=6RYGrKe:(s<52.WJL8k,S
%s.3i@Kt$f08Q_14Eg%lJGJ[bQ_-%c$Arq&bPaVh@m,X\\+?,iI+"jG%*g:4$K7f$e=5AR4?oWeKeLSn!Aa2!4%HOJ.a1(i!#l7<d
%TAS_YAX-#sJ+QpqT)sb\m.T7oM1nciHYm#%aKV'F1[#!,_n8"SF8sMkU7r]R;G]k='MaP7GbFAEj*)sNp[k[H6LL\[9A#upIcUcV
%&!KS+gfIR/-r5a,OElj]Mr+i[U)EWi\0,s`ger:D:dI%fU1I%`mbb*SAAs@>(tUAB;(KZQWL@":oE<*.^eU7V=#)O:_oeX5\sSae
%,GH&`9"$_m(\8;5^e^h(FSRns?eWiAQ@IkkcQ]cU`@Bh,$E$6_/sO`Lo_eIA*\lif?NeS0Y#*$9nUqr)2h5d8\]:Gu+\\kG!)6D7
%5HZJQne/^1><AuFJ0O:V:k/NQ2bdFoV](UiL(.pKe;kl6TZ<Itg!#ukUDt_X`rgE^'5:2K"IZ1\['5,"5XBfBES+%"P^_Cd4N%&:
%4=m4PJO!K;(KWK>Z>'.&BmIO'2_d^53dr;gZLA;@K7,hGlu'0l,7\caZM]*t8!kb=FZJLNQD@ECQ20?$)M/lL5O;)p9QqqV)5NHF
%"6*k6aDg)mJs]%,"U"?1RV@3/],Mo-`!SZq3UW=SKfW&-=QUoZBgTmhT1>@7e`*ahBhcj80\j5o_mkVL4Hpk#R2HC8f-:]=-Gjau
%s%&@E5XK5<m!r?n[%!2jY6bDNVGpBp"`O;g-<Rj@NLDmRH#\uX2=XRhe`)H(.j7D,[-J-p"b1N]r1n<%8mF_P;t;OE02Nr^62,a)
%_FcRrXl4k)Cs\`hq0)m64NI,(pEkISZlBi9Sn$X4:q'Vk4)$i?=Wi`=$`2IGUaOu$(/kNDqM-U#BnoXL,j<$,d(To0.^lG%dk&C/
%msgPJ/35ZUVIJa#Q>HmOSTTT>9q3hM`2AAf+LVuEbE@==1H]18It-HSbpssX'VT(Sh6$.QM^r8LSK8hS^ChH"Q/1d07kdZ_=e1<P
%/5$TAAK2k_?9.Bb"raO<]YK=;$Th&Bmo'rma[ZANo]IK(+)5:cPM!&YSmg['<'H8f66h5&WdM.r9rUs;/Y+mP_sT2TTcno$$.iN@
%k=`-FVF4(;gRfRTEYeCZkbY<RRqDJgUkiU/&(rj(kEt:G)_3ug[6@g[dh"7ki="qt:LZ9NZeS,nESn]0\t0kN4"4IYp1pQN]BjX:
%b`*E<oc[m+YYO;Em"LOUbN/Xo3mKJf4*lVBB^Ic+B$`biQDIC==_BG5`KN[5/-I;QIDT94<\/F4d1R99c.t-&fo!u*_%BCs91rKg
%5:.ni;Fc3\gk]ejg%Hf(.;c9b'.sLU.WrcJN-2Oi<7blL6%eqTcg_76If2UG6M(/$Cd0f0qWA)3/r@W^[7rDoJ>emn4?8+g7nc>a
%!qYKV&0/`h5DL"MeF4#np[QFaRVR.C\86aOT*WC@TcS8,e]8[m-h7<_+GuX#.M*kpkbS-&8T]m>>5b0+0F<2-amM:M0i8.Er$mcH
%`Qq<,2;[T<)>BZ<,CnOVgTlgbNmta%\3&]=ThfN(1GY?WKOG1gPR_@JdBg]p'd;:rOp]XRFa;rf=ZH/QV1]Sj9PI0a9Rt.I]83cB
%GDK`T+^R1j![XANX:RGJY[iqJln3Jia*a)W(Z7),gi`7!91r\!'4.C'qE7/qVC\l,:QGcEM%fjs?n=sOYSnV]hP1)`T9NK#@7dA/
%i[*[\[A&f'<mo%Ef,m-*0)ObHg;G#91nU/te<0u\=K79*,]AiuHCEZF4-e)m"IXke<uADL5^=]al8Ulb!67L(L.9VI^U#07i6@\q
%eV5,(O#ht8PeeW;I5+hk*f&0Eg')Z$]d3qsOMsqNfVZb*OgAQ24N\Xr*Jq1LbENX36&G@:#t%FtR!UF?FgpB^Kp'!aF4lc>TPakB
%Apeb]7\&AHUX`i^)%:Ro8&B*kq$@Jtls_k5M5+WmPb$lrc`F@]JT<rMC.fAVcOOrW5o2)?jgnMVjOlHW.)daQr_8>XTIH9Td8eW5
%6Wj/)7*CcnFJ#DMdo%Y:`1"g-d+"(Q^^"P*^I4oXdt;3TBj9#\:<KSE!W`G7e3pWp4jOf@B@Fbt/QaFDe1-&R@>_N_0@`EBV#AYC
%^4'!krdfZbPktCO8.r-PY7%-Q#K0mTE\[1UKRPR`9[".cQ8IlMo7a%`&=6%5'bOggJ[7bTl<`P2.n[V4$-&^rc^B(kc4kfPc8`![
%TKoQBn/-JHk@qa^N*QOe\Y"=DM(NVk]EcooqZ\:PW[%_o=+`dD+=`!pL[[_pr(?$C3dUQ9q%s*0FW"H7HE-3S__^`fg-oD$5h*K6
%3kAhC6EC<,UaEMVRbQK=`7I%A)*Tjabh!(.Za<Cf.Mo%l$0Poui(<6;bgF_9Jn`)*nh)(ojkh16066GLWe8>tYR'Joomi\i5\&9u
%_45FZ>A\aGn%X4)llIN'`<)LGL?s@(.T/\$B2,c8h=6M#C=_`hEJ<018Jb!NC0JPIUlAILi]%V-7mNm)gFhp!iIN^bQ!CVAg.1k?
%G4aKnhTRXZ#4e0-9MhZeZ\s[Mf*KO7^Zn*;Q4+5aM!'3ModSk'O'bt%DIAQo=;n9r0*]be<^pnF4aRfcX#Lo9d)e7U\?!qo%D@bF
%9/+5aeB:lo%&2BS0=edoGh#-KMC0g@XsTZ2K4cN`\Na]8A?]0ZV-3&Y)XB"e3M%-XE[1f-,WX++C;Fer7In*ZkB#o`<c]RQ,f"0U
%F+s[qO[ONn.$UqXeH>m7[]Fa-!/;T%/oTDor+.o#5aUqZ?q\Rbo*,;U!4MaPg!ZC'VHp!`Oh@35W4OBAcsm<[]=3al-kWZ.lObc@
%4EsNQWBFEGBW<Jm>8C]Wl&"UhaIpQhGpG<Gr6/IK86KF>2$_U&Pqs[233Iliac7_MC1[V?(G946#3a[CI*&!Oo8BT48<D!didnID
%6*hKXP"4?`e8i*&cQsB>^>'ODQB0o&0jf5NU:>E3LhLLo1_=)J9<PMVLbiuT2lj4q&5Kci7Z!M1d>XkhG2'.qFCt582]>KI>,h$@
%HGOZlUa`0*m3Id.D?4t-UH`s%&DI@AFUj6XU41PM>>X_0pJq;2_I%5&h8iNcd5]4?*"cWM/#9c6!R"AHLUJfFjVnnk:&9]S4R&?k
%3Cdgu#tSlHpW?*A$H9;U:M;h=odff,NN7leDd1E_1[[ScX_n`EXX:NGKuG5SSeU=7=Ss@DDV;oEc_,TH'til93b*W-'48N-(hT98
%@XDY?Uf\d&IItQdYEQ7n>+c$i[t:#7*2T%QOfYYn]"IN>LqKb;0MGo,?G+5?\J27<iCBs`X*!D]N2'\.m`Uu=E+!"Sc59=cVg(7!
%oR>SSQ'J&*n:[$bhG5i8@WdRn\S$^oee?&&DWnZLdG#H;SN1?0$+!`*&Ni3a!j1\(<rhL\"!Yk7FXnmV.q;J$BWB%O2q>k/!0X*X
%X"&n!q1u0c6)c:WN,R8f$5u/IgJ27b+p^&GXeLjsiQX@>;6+A-QRChoV!23P>`/VZ=@T(N_^n&tB,#kN=('gmWYI8YJu.\?eNBaj
%Q1+k7k+8D4f9Jbed?4r]"_g)&#G\FINK92##H%C3P#>iPPQ3bV4?aA/kNl@`0\7eUls@p<eoF"DhR7[VDJ:-?l\is[kQ]#'W/:I*
%NFLE!1"03AWBq!>);A-R7U=,^S$<aHobph.!%q=^XS+0[*o2`,q/Hk`MV-LN<2F"Jg;1IXOk3@C4nO9mUh^Bak^akqp1*(HC5t1p
%9QJ1)F.FJ*U:pYBE`PWI`#t):5[@L5;_&RnG2ae17HL/oj'e6\@Rcab<43OqQ5A5!Y&,Z>4g`(?r:W]oJ60^<_JYuHa8%GCdkmu6
%QJo[?.5keO*sG?o#Prik>%RLa9fXBU;b>n_NG12Z2toS(PYY;O]:3;E'QFDVe['T8l0']7/:89m)M>O:q(qCThOsK,R=7\pn[Z`t
%_0hK)rK,!<KBuD#\f[!(a?qg*EqgZ%WLS-=k>5c^)7?YFh2-J1UZn=38TrYL".[@LicM?]?XY&_cR5?/NCcX\L<b!e#as><'>r%e
%Eke0rm20?d&oo9RADH7WACrf(Z9nhP3`OB&:VMjR/M'VibO<BT#*i>:1D?9*4I5Dmo:cnM1(+d$j!Yt_s$08:Mdu[3lY\p7A@T7S
%6ND"g`Y9l4o]qE6J0^].qe!oDnI\f.',0VfpPFRr8Zuml_qd\)Db4"+,W4hCoATCfZ(dL[?gt*aAEU?q.!,P7j5Y:F#^415HqOfB
%eWZ7(5H-"fe@JTCoQtLq%Th;q?KMp@$+mMP]mV8X:q4Ju*$;Ls@NuErp*G0gP"J#UoSf0&8S3j0)APusqLP%3a^A/B]P>g81U:PE
%:l:li#,)!$\qi;!p6P,FUoC`*XYP.'Vh'fJbEO*\T!/!eNj*fs?(+DkV+>"bSeip>(&;13>cX`l8Yap?bWfeKV.H(Z3V6B`VRt#H
%4?a<olO:?i5#quk-/!X>kX!kma3+bN+.!#YUnsk"PqJ)@Chlg?FS)3X7k$mlO60OtnNHW.BC5;1JiY&:[aj`)8)sOOUdU9iEZ6Um
%k<cg,_<%N_92':ng%(6-bO,oVFg=5<X1qbuBR7q*:aYi5nZ.q@/l`SYR30E+<F>>#U0*[hp\/H4r?Ef>a(-47Nn4k5U?7b3Xm7*u
%&I2gWV"6Mg>#M%g$,6>G,MqF9NJ[rcC=7]VQMm86K-"f#(c"#Vcr`,c/N$<eN>BBDX0$BLr-^*f2q-4M>;i0kN2R4(qV:S_O-e:1
%2=sAlXE_1IWa:.eatQhUN.a-07U9MH[`p4:r('4hVTQn"8bQ49;DZQ/&pl3H,HH7bQ*iQ_Rr'XTc82Mg?K"dfMGmgbR9FRZ(#+tg
%_is*G(eVJi5,k#XCsfq61[b(aUoMG;-G=M(M<&2AGjgf;<I`^JR2CtGhY,r)*2+75.N9tWWr%O+3J4bu_ofl1%,#aek1,;@N:jSr
%7,62sWQ,g#=qTdB&&J\HVBm6Ipj?h#.J6SE^7)SH?1Hg%eXptud$#2WKnF\,Du:K4O:a;$>So'9]ZiC62,>^ZU`uJ>Lh,LR[mc0#
%XU(CJ2*lI1*\H:!jDWA<\%7Aed^5hLD_pjXe8pdb9p29%\-.i]mP[-ePD<5t2e@Yj[H`OgKcQ[dT@f9Db(HIY<)mkF903>"d:,c=
%9S*1BPklY(5W"+ZjDHTnSX`?t*]bfC=,Fs?ltd^:"_Vnq+"Y!N?'_?&:@8dSIjXj-DZoI'<Bm@T0p=Al?()p+`%%(bOFU!NlI:Pa
%p5'T9<`38SAWcOa/hiMOYFFkMj7Z-31%@@%$3CeQ75TlS+PBTU=Tk:t`j_im#/nT[(TG!^m_f!N!o_#e!^oE9'3*I=3Kfds,o&FP
%c6Jmnrq*%46/bVJ7ERgZY,.Voj&mcYA48KD7oIc.'[lsE$,8C(GfZ,u+CM1T@`]B=e8&'GP"U7Wd[e5@dI6dNL3j9%AR(t@^f\ts
%[ILGfKb;!?O3^)7\&;p.M8/smcYQZfmDRc:I3:T?8C.Q''gekE7oYRgIhGtW=FRZ^Eo'O/QBtJRT3%nRYR`o)]q9K;7Pl0?/p!-M
%euBUTGhndqNDB;EP!LeX(8;f#@NMl.n//P-3oteJ06ur38i:]+G+8%.I>&R:B\a4r9>t0aEN:XY!ZoT$:5`:FgV+FV>Q;1F)I;l2
%hcb9T]#nO$q!e?R`(K=CS)3TOPueAESc[pk[CpW9^<gdj4H11-@0>JIJagpG$fQ0Mg/5[00C89$)])7*_Fte:f^TuKN7=?I(fu89
%Jd<ISm8YdDZD2u,%i9LE4G!':=9>Ad3$+LK5frpF*BaJl9-+r4Hb4E7dN]>tZ;.o3\fsQJ0i;]e:PuLV$cY6d!3>Z>=o""1/R:Ff
%W/pWA;t>j$/1k3r"JaD=^'@(l5.$7t1*7,7K1/%[FDUK*YnC'NFsBQF]+@/8EHQq-%pJ_8cjVU6II!+VV^nCC`8]:Ze=+)(lEH:9
%$)J.-d3',jPeql-PHF`tiQ!V"X@$5eV"+k]bK-V^gGjoGY-<N-OYD%BF^R\Eh+R@[YRZVeI-&h4^sB05>QA\9-=i<:YATLPV@2d!
%Zh8VRgi>:b>!\GBQp*h;:7?FnPt/@kWrerrL1E](QC(p$;'qkrQ%$G,5(mXO_iZ6]iYoNcU@5%knLKquJbgRM:^RL&.[mkUad!h2
%Q7DI-I/9X>'b$E$<>Z``(Xcf&)'n+>W8p;E:(&&ra]_/<\HA_ONd>i"o>eQFiH5,S'tgSt0hI3<,lB&D7COVFLuq?A?*gN2`f8aL
%oFuP;;8H;,!)+4^Wint.,B!$:E7YOk2`_.FPn2dX3J?8]J=nYGa(Yg/n^.LtnG<9fn/6gX?8;N#,JH#UR@K\`OqEsn#qKI0!+A&;
%OD9SN^ZbN)4\=q[k#Zi)jBJ9h].]Y57p:R4<+7.'ic]bK6<]d8G;I*4c:,<#-,@==Wj"p*6[i_[-\LBr12VCpem.GSMV5S&/faQM
%,3p`L%%im'bO(/J5-G\6Lp!mV9q)m":V_VoraJ3kM;A[3jk7eS.>@_aAROP/"C7grrgmBODA)CA+E.3DZ^&f5>g]b4Q<EpSZE?E+
%;G32<o#m(2^B!6r3Gj1hOkUI2F`l!1R?3h-3<&H(OD"10@jU_KG!7jmEbpTXFG0_7lOC-)b1oiXfZq3MBTub?g;LtWO(nTGl2T\#
%\<"?P5.FI>?4`,7riBKr&6;+$7h4H'dSSb2K=SVT"&`+"$?OOLO$81_eu7j8Sp;L/GV67\EOE2q1K5^V,"0Pf;)"uJ0&b6s6/F'@
%_]PNuoj7tHS,jfYKc7-W("\uOP@4@aT9WKF9\\R(iE?g`T=$9-2&]%6j#,C7L\[(o8r1ZZ%#UdpS#iVd3[,;AZ9jC0Isjs[jn3"0
%6hlM?(+'CJi]lk];DmN%KIR'iP,8,KJ\;Dkq#19>h7$%nJr2l"*.1P_giZ?'YA%!WF627m,hi;o9$tl(m2%$N*>r*OK:dYFg28,?
%V(f=r3?n/o3X8YXHa@QYs!CtrLd=e+$buI@P^rOu[$eKJTld;k@aMJ>_I>YP<qr70eoo7\C<7@igI#&*GD704F)N@6"db(VN#*cM
%SS[mDd/c(&0D+^D>CE`F/1c9kU/,C?&9D::&<->*Q]W/EmSgcn0A1(]b.qL[#\f8g_VKPKnLJZsE-<?.?E/_u(qr7gI3B++!=DJ*
%34-gC?p>VamH:VJl;PF(/KqqsBWZNop=QU@ehu]qkg556Opq>_:50cdAWku6jd2dV,n;Wcn%=ak?+"%()&AK8S7+cGDlL#RP#I(M
%L*=,bZ]'2h>9%B$;$q>'klS,l^ITYA5-Lria9"NQ8hp[G4?_^-UA[j+b"&et?daah!F^:dC_k8SOGtk@';NLm%`lO!S_n3f-]m"#
%>iUEFBldr'*^BYh3ns?>3IG)Z.f0;a($sAN_g%LP].oR=iqq1?4q@aX8ZZJ[H^Xo/_pDsa=Z'#MBl^2.*Pj;'T,GqiV@AMDM$S:"
%J9TPJ8O1;SL,:-PDHiT2(..ZqJbVP]famu!P"5gqbssNXGt)on6;Ja&epVAi4@JOh35IS_S/SOikK1OYU6G?#k0<N<9k!<P*rT!U
%19t8HcYI-%NR.>R"mK;'/eRLGbh[?HU.^4_P\"uJ#edNR!af60nbYX;:U_@JG.;lCN2Eruc'kcmYS6J@WjN"PgQWR"JT/aYNN#&3
%jjuhVb4i?Fm*&R[PgaWk^'.JRjPsTnE+35P@n+Uc::[:uZ5F^&Ul%@)of[D%ELoB4HkI"*ErVaU!q4#:^%jBV6pPRj(*Fq//c.h=
%_E]Qse)YtP`_.;.8$O^dg-\0(#T8n!+$7X91tdW_mXt-6s.@_Uf;=mKA-duk(C>oLN\kh>EjTR%lOdqamC,\&.Bt5si<^h@@ET4(
%TK3G'EFU;j.`lSS%qND5cT2C=egKL(IrPpS)PhSJ:C2[p&Xh10*bWgWGj3Vko9scNV!(8!9g[??N!hqCf@Io3i$r$uY`5R\Oht@B
%LeCq2n^WE/[UjOY<WePr\<'^&09<t-\S'""?51pr:"ofs9kG38,4%L)=0]h=K!XYf5#sU>[sCN$`)+80[*Zc2@NlE_G.M8]7DFu;
%Hj?-<%F4p:R5"pYj-28IU0Dk;0=b67l"K=R!-#!JHT/jP8<R3.KMrSCKIVtA\Egr)m9OAR[tKULm)b3Zm'WEl^T=\pKm6<6ZS%;l
%iH4Hu.(IOLX[%/3Ec+T=MK2`+d5>0$in=`Sh)]Rpj$o-!f$d2,E5to76LM?V0_M5WRrk&,LWVl3SmD)_ahes#HZ\O@^4)RG5?Nsg
%5(GuKk$<B);Z%sT]k7IFU&^"FGl`IL#KVQ42$!J9e<ZBSTF;nf#Th;TYM]XPH_[br:)8$%"TKe0IIK0ITtZ87[M#;\1:<U(oSim>
%#D.$%rZ;.X\UCm8NL%Sb98VO2J(&?@,!Xu("pI7&Qqa]&i9K,"d^LFmZiI'W,MJ8,DJE4kLaOCIU8Atr5,\BhPo/qP#5Vm_Rp`j?
%J$VM)3-DSW0ckf;6CJH]_Xq,A+S*VAH<=C85;2%15j'HH1YrDkQ`RUm^%FFODC[dh+W<O@Mk@#<(lcSm3C3tNpq"g&@621K3A,^@
%;?9p26hk0V#YE:Z*T#%P(dKG-^fY"ZJ8@'7JCa2)I=kC8>=IV7&CE'mRPBP`WSsYeO<?%Y+7WTWe?\if7DQe*R8FbD4&4Vu/Yi4Z
%9TSQSk=4lb`=d:_(YpUl293_Pml2\FMO[p3>8cof[oMY3-CQMmo<"aRRs\]q_r7)*9'aA3"_/`AKR1)!;s.'uTp2aQX=O/]IWDh<
%N3D7:P--0R$ml,,C?<YK`)9QFFZ]u3]JiZ@BeUNm&1ob,b&n7ANjYY;C0K!.O*#cNbshu)*LDElqgs$$iF"4Y=ocF_lEtB"]j':>
%3qC;Y$SjKW>QeAn?2DDL&-bs^E"))XC`#el>H=#7>$HG:+kg$[$Fh/s(iF_/@6s.I*N*4K2hW4=b-6HS(\gO+S7%Q=1dD8OCUO!Z
%qm#fi842bA90,,T43KlKjj"^)G*G<3$j#&X,G)/NJ,,#[!m9>/E*,dU#Xc-F%$($*.Mc@dqMioYV,hsB&f[ls.2AESedjL>dbNF0
%DR'I6/$sgrL/H`j?NA0q2i2d7KZFhTe,DF2NGtu+ldF3B*3+ri&RAlqSe005q:hata"N)bU)b98;H6ok>g=[/L`7b<g*KFr*LQuH
%).BS&aNeJGs6$D2rO12o.tQNhN=07=\cji+]J'k"W!lpmXrk4'LddLp@u)0l\MPDQm%KfK:IG>kNhhK`fc@(4[:`#d+oM(2cDcS*
%gFR'6HWL[+9clY*7h0)H7cMM@D\N-U$h@MRe_b,j;JNUR\aMbF\$S"$41*dcA6!@;dJq*XUVBh(_1b@Hn]V+`8T_,>c@uH3qKm%G
%5@p0`5PrR,?gbpqm5X*Ta&&_*?mPU:pU=aK[21=PX82bJo.RlQT5l"'SS@f+r0RGT'Dgnlc4g'QHT<f3P3(o_j"h<k5=K-nL]0S&
%)g*03>7h$MZ-V$@P>jK"F(jsP2RM9#p[r$Z?'gD!BkN.-]MW%#KnpLsjomDJZAQ,Bh]H6]/!43OV[UAlhd6OR>7F+,.nL"]f8?B6
%5^n]b68!+BM4hE?;]R2DOFDFd$Q^7e:Q]nF,;.r\p"Fb&nI8VLJ8M!71->m/'5Q#-aDA2[$1Mr9&_#6:29aZ^C]<j2K"ad&`36Ut
%jrZjC[]6YA0OHTr=OH,$]'0j$qTBK!6]`@WOSA[2pa/!#4bnY@`/134qe:Ob84VPVC#XY;@$BKeNu$L3M?lr8]B,f8XAT+J7@*ea
%rY"j7>/qGi_,gqnDQW]eAJM(ZB`-Q(7Y_W!mj*G1<<?\NDQ7"W7geHWD$:Tl/g1'OQgGLp%F7f]71;b0YbP5ROGeR?F=)G.?8@rW
%4Ojp:NQoGK#Y'bKa+TL[92)64*EZ\E+/_(I4MMs-Ik,lTG^3#NX+t#hL:@Pi;,GqaU/iFSp,tBSD#MQ73(d;8.)8Qp"PpYdhfc6K
%oiJGUlj,.B/DmG1_<V>:/@3L:m,%f0?@/0g$,e#tROijp1J0b-r2)$jYJ9`@jNT3A?U`q'j<4Ku0*\Cl4fpdo)8`@9R]HIdpm%2B
%@SLhFs5h,lY4"5%Gmm'k0<e&Yj&>]@MiQNVLgr-V9*J%So<m(%[f$'#]#fEuXoF]@ruX/?J,Y?lrnHuXamPU.W:(d;LuZi,6]<qB
%3)U-GaapP<JW+^%?q+RRkfiNPN[7KuFF@EtiuM?EfJ,!-U%s.rDA%toQJm`1l)='"i+)@eVM+T0O5,1n)EDR:"u=,5Ps,E+M\&7]
%oX_1_L=l=u\fi&;QOEU!IUAb^/$,C1;DiN;H%_OjT)fdRaB.-#O;371*L-bAE/sI4lR.C,'#8O)g<D=NPD/JH6CI4pT:9$t>PLN9
%q_cp-)<3/EL>Kl9a$!sa2'BDj#=N=2$nXL)eA/76OI"\2$uPnG_N)30I%6AWB:ZN*O$I[n/4p_7\d<IC*0co(6Q\62\M[Z<^'93'
%o;FlBa3aJg*fa[OXWW5W0q/"WH9)2DJi4nciXENDkhGd.J<Qn,:TXd\VPYa[0nB6[h_^OP3pBNu<#f>@lI<CjJIJNETcFk)"*_g.
%;GdO[\,RIsV@o0')BpMR*bh"%@9J]gE7ic\;c`>]gJWFqd`P[\,Rbb@gmp8&E.o.9]6"0e$ut.3V5t2`Ua`GmNM/OpVTj:H'o+P"
%L1WY:+2gtECWrW/5.HDBH1hZ&\=>Q79GP\mkQucMddAGP.j7N+g/#O6=/YP-q3&ILJmleW)M3G:kbJ[crW"%*I/rABD_:]^LAGbD
%aDX7#BmgG]6[OK7gH4[#BUAhZ?<p)pr>[)`i0Ru;Re+ZDA=b="P..T&h_K9>OcCGn-(ActkT.`lFDL!u+Eg&8-MXPCo#-%$^a/[I
%Y<[9_23Vi^r!J)c&B6VY0^8O&C]Xp+L$]e0^mp($YT<:]9D$-*4:(67U+j:']r'E![m).n<^t[Ts(`,/=SrN[`*>;Deb>C,p8;<S
%#_`['Lo=3@(8++D,q_OK3pgTM#.g]Hb-XB[l6;#g87GV(Ws*S8?nV_g;b73k>/>\l'To";aqu]Ts6H$)Wo)p)7JO]=An/>B=Mu'=
%F5Y<QijT7.A9Y?&Ho)X_CDB)W9R[,]E`*3hr#PP?A>';POp/DhRO^U_[+_XYK/h'!gr@n+]'d$mN1RGR&,?4ibh$*?k8e*MJ-u?/
%?CJ+`W]HY2g,"@K'3&%4L-SCVTRb!rFIg:sMYKF^h\/jd=N+BXR5j3)>,MZLo>'=c`D"IV0dkO'_Ylo,(67T.hB7p#3Y(u%KNJuU
%$fpto+HepI$WKXm8J:X[G,612O9FqK=LekLPrCq3iOnal,`"d11'l)2./b:"Hua][aPVgIQ.LXs!kTS4TB99"#Yc*@%l4:mE:IEN
%&f3nD!fF06Lc-3HY("Q9.?ra_jA58\iu(6e;](>/eDTu&U82aEHZY*$6"L5jIXXgQ#Q!\=Yb\UK'G-P#T`!gHngTfRJMtQ^A*DDR
%jY\f5"2@&c.ZE8Z8P"LVQ("AHM55X#PmDk]kcG1#_h&O%q8andc!oLZYV%:n$iT9UHKs]:<?r\JGC9ad^UU`q<+D3Vl7s-#ZU]^:
%O\O7#T0OY)?2aXP&8n"Q65lgeU=?4DiUrVr60iFS-=_KM63*ftV*KA#0>r\j^pLaH79Z+J>9L\Z2:TCD@17AYPM:*OiDruZ)^I`*
%q3m!ZOC,g\[1J]eG*oo9Vgq+l<\t5*i0>Q4Vuqi$Eb'L4NGHhoS)NGeNdkVo1Uo"W_')>i("DGCbg1m5>R%iDieRpH5FpZt>sUWW
%r'dm&("m`A<4O>n_Xj)tq8%juSSXtIZ6[Wn:B?/A!J3`bfV$')]jM18Ni/^tE:PA)JV)lc!u8*c)OB=5js(/m&:T_K*>%o*%t<ci
%ADO9YX.h:&4pXBpKl$5Ai/jFGpllgK]g7C8C7^8+?Qq!2H&7+0+!<<jM!9%U@ZV["R.!oF?4Dur[%H10"fV5LP3N2.fJ-g?d=p4a
%K*6A.l+o$pP''oBrh'g!>Y<!!L"rq-7;dfFYeSoPi,2Fj!te^^&L8:ri3PI>(LPV:_4o>Q17&??^B3(o=%ue>d47RLRL]OB]b%lH
%P-@YTK-):+Pq>a%0#*?]q\?:O7+M.g*/%YJ'Xg,g"W_)=Bb'rPr!M/r6Lo&o1%&7Y0i4";H=7o:OE7Og!T]'<8@5Zr<-knDf^[S*
%q$CbU;b9&#=QROubcg;c-8'qX.FE,fUG?br1gpdu<XX`Si$*B5^4)Q]`D(hbOP@[6W/$J-<1dQX`_oZei]i<m'j:;"ir&="J,GZ4
%8,qWLGlIKQrmm/@5W@),EifaYah\T:bk7B$_W/D87tln6/dcLP,:]ENQoDg^U`utV3iu9d'4AaMoM7]BX8bZF%,=@KQJ\@+JL'35
%&$X-,n=h2g/Q6^BH1d#f\lnu0Ct$P``:tT(!5rB:CYK`3K`2@D-[kN1kd;3N0j[5]A>E-nlHPcW9<Z/65sW&M-I7-u_'d\WKTI=B
%Ba?u1`*1]Hg=g4hD#th1rrA;H(9:D]+[@D9PS0qI7&l6>LrIo!dRL9uPcZ/SX6rN$o"RH(AQkphB`=L/H2pY#YSa6j3/5+I?.F6e
%N.f69':+YSqDhc68"[lH!:N)i!09OWT/1<)nb^&*Ed-le<Z<[cTJRH)IBgRkh1m%<l).P(r*j9bL*9/g5F]b!rdluA%=3TMW=aCc
%(W)&i*fa]"XUYf%2^tf@r7S]!ZIZqR.[6T83H'>ah;LV&bs55?$'9Tp>@n+uX]LjZI3A+QB'j%b[S[],2EAFFWqhT92J]_]<curS
%njSX<(D:8ZCZ?Z'`[i*dbLAaZ:D-R?ntf-i&=%n3i^KO$=M0lbRoq^@5qE?qYDh6LIX:j[6+4Gr*QSLpP<`\\E;;;NNUnHK5nF#R
%8BDZI9*7^kbsgR>dh[*L6c!VCK\WGP4Dsbr,HM*NQ/#q@fE=rnXrd>@X)d)eU'?P+!>Jkpop)")U`N#-[WiM#,TfLlUPtj[Z69uj
%c:QKoHl_0:obBLm^H]N5"c4-JnfbVWC,(UsoI2V;AQ"L4(l#'U(J#:,#i[@"*^c`h%La+Q78X4TWSiT4oe#)5.bM>q9p7hnW5N_F
%g9PX(^CaWr<F57D>o]k.nDZJ:9c8bFc*UlhrN`@X#bjB9/03ba[e<2&O:*gY7magZ,VJ2rH'9/o6dE.(rI#-tk*9[9@;Vm&RfVJJ
%ab1Ye/_tj\WPGdcP)uiW*h,@47Rgn9*k-!>HCKdq<bEJ*kVdoClITr)Xf2T9Y9`n*"/n:(^LA0NC0`9&2I.K*M55YS,Q/b4809s,
%)OaVTE+HQePJCang3.:2XTG'g#g&%#`D%5ir:t=#OClAGEUi7+)])F;B)N6@is4o:RU$<OPZIFK!n*><YZZ'Da;@Y]&*t2i`=&<B
%DLpoCg^jBf#%LJ@JEp\N4*GV4V.NGl1Q?9XM$n2?.,WH_^M:u8q0di6PZY$W,4(/N!6WBGqZI4q'&`g7$SeL^e>jV5#ZsX.+)X_d
%-F4]c.!2p"<'t/0?b`^ljsRo\c&_fBqM5Yc%lGpOf[Yg@[(IY7<q('PH'.%5>P^7S`'ek%2jtV)V$PD'P@/p<:j%2Lk!J9N^N;8j
%9,&Ud2GB2"9dTGYWnKe*f$V;Y,q6Pa3$)(!!\%TDMXFb<.s@&3aR*J@0nTbi/;kPAiWniO;:Ldj4bfs.WcX:F7</]R_(t$87"D0-
%%t.JB+^K[*Qanf=l0h>7q9V17PS:c;>LfmYk':,9eMhD7Asa-N:F5Ld&@`L%RdqPV5"ER,?YZLX6L2Ms[/-S-MEVR`QCAO[2Xm6.
%EjKf>JJ[;mAHoaYU:cSZ&^f4:%JpWOg;$+k)tNb5VC6e.(>+!I7G-:7'dk6#ml:Hp4B27dcolRZlaG)-ZSW9RUeDiKFE+GYUUqkR
%3jdN@l-YrVp+VY5+,"@m_o!6;`_]X*$m]!(58[70A\W5a*uCE8l?aN^Q"tZpMDQ5XZ!o%+Y(:].<X/UXaAtrsFQ?(ne]5";1\^ui
%',[!h"KB$`G*&C@Sa=cLE]rASWES5X+%F;R^THX:@/@)4JBjXI7j$+9LO#T\4K4t,=+0DH-:$W!kMGq07EXQhYt#'Z2eg3KiGW&^
%dmD^^><g!>^LS5DlCYO_%LL(?;/Sj@IDA>LaXp."cPsC\Jdmi3ZA?51L4%*D2S#uWRQ]oirqGtKBnH-<!WM4U;Il'.%-LF0#cF#G
%`ai<4*B\8;N"G<TaJ:37\!?oX;2mcR#Xg9r*d)0CAD>!S#s6P<)mTX8ZJ#Mehir*SeOlf8h\3S_TO\;:,XqILm04FerJk-r4BhMb
%L\V5Squ4HSirBk`Cui?`ZlF`,TA?C2_L_:j^Fo72:UN_N&D?F!3P]RLo[lo%30b!E1jcolIBAXfV_mm)*ts0_VlADG8k?8lpD'XP
%-Y1n&Ct$Q4aYms&7\.T`]a9nLf=FLpU`DOmR8)r3!'aUf@Xc)_[3*V2kUXu3Y=/`c)uAFUi&^pgi,?X!n2Jqd!kbaFJ4jo3lHg`i
%5Zk1*k`%h0f^08p7PoG0"[2Vh(i!kQGhX'0@+;pXj,`QLpEtbc#/U_^5YuXiqHHDH"gTO_m:o@(mA(L8Emf3Ibn,'*KZr4FVl38k
%#YQ]>(Y,2YZ0ZbnIbBl+gBLr8f@,hN[!T'+dsI\o@S)[2,hM>rKTDa,iI^(nU;DpX9]3:<nriCf](q-jaOS0!">*!%i+q?8OV7^b
%&r1GE;dAR<5a:63HAV<XS#dt-OGCr9OtXTY@7-g#huWQN'L3[)<C$XILR/D[XSYf377D_o#;tQd-NL,2Nhcb`IPjOX<Tucbmgme%
%F9&_lX[%D!dmL0*PGu[H3s$M'r'5kt%O]-g$VL;!2b=`S207q(>,].'Gj$mgR8l)c=HD7>#/[WO`+5D"#D$.p>4cYdD!3iRI4U3@
%i-W+GRibd`VO>sW%HG1L.%.^W[=sbiB\"GC7Ukg,>Y6c#Ip(Z?iCGsW6Ze%T_R2>/a3qE-p(O_WR\>)s+;P;kd^@S[]q*,NTZq2J
%BEC$Q,MhE)_0Mj(cP?ETD4+rGYgRQU)+7tgmchn56>^k=Q2jnRWWZ&l>_h,<2FLX:aMII[6^,ZR>(R&Hac^bk"g"^]%_DsmjGbg?
%>FUl(J;.?f5/m6-)$NRpMC_S+89&YLA(LZf21E;f]-#.q@9P2:.kKV)e3gKb$=VfcDB"M,+cq$"<<I0[UICB/qo`M!S@>hm5\V,r
%N2[niePGnn8,o\!ZiBtoo$;e?P(3A7$n?LZ_[H>.OQc87qVD9um:;4..e4R8QF<o9gDWVI>V-lF39n<;I66[q[G#?Bo'd!"2tFuD
%86gI24<kZH2+JmBH9I'19>Tubg]Wl^L_%qlo6:RY@$Cqs9cUd/s#aa"E(tS<$lXr$#rj'u'^t&g58XHe%^molcN,.kg@P)&14\B@
%K^,`EkqVY(^F[\e*%gR95Csg9XH;BH`WCU$5HE&?M!&A-HP=i_:QWAlO+?S7>?:)he!@CH^F2kj7'g_DW`i-kZ$tMW#ol.Bj%'&E
%/BZ6lc;E3:Km;SV!)'?J/sK:n#$%RC`/&-^8?E6j2FIql2C#`=2P2??$VUA6mSmoCF]?I?ikc3@=em92OqT&$F*)qiR>q_VN,N<i
%=)7>RH.*t00%fM4/%>0$JQ&>6^-&,t#Wl5>.%1TLP%J:M*U0/RQ,$hQVU<4hl7[T_a^D_F-]Rb#_>^3Mm*Tq:T1f%RgH)B_phftZ
%<qcN:<qc!`m,(t!^U(6G^ToVCIL@#"mkA'"X]3!38Q2d-VDfUV<kenFHm*P++<u(.p];<U"[_O8-75oXn3-B@#,3-7`_J?pp8K:K
%"@VO.d1Oj7it<-L@3CS9Wg6*T,$FV>X89V]\Fl:E5TRkmS:/oQQ1%M^Mh%9:1AD`2&ZXC^T\J8mmSU<HKu^d%)\c74@f<.+&,-d6
%'!ki/+oGLW.l0%]hC3>0/qkOpY?tWZkmj?6Bb":i_Ha&m/nV_6c=+dI0$T&>'r+dJ#s4qm6FK\F6!rn(LRS2n=[SI/Nj'``$Z!l/
%*\G0])rR7iQB2qu!d,sa2U%/bOH^pBOdu&Y`lGjX0s2MoUF"U)-Fi89V;,8+9?ii$Yld=6&;X;YlKQ"m-@XOfc$X/R6\:h3Cr`Nd
%W_s*3Y'XJSMN9D6+oOhU@!.uJn2a(a5Y4M1q^"9n"cEX_dLrUE+]]h[;X<'L,ljLG2mZ[r>p$Q\U)ulc2`mhQG--Ss^lC1F-[npM
%N8[OD(1&Ll?OIURVQbb$r!/$_>,lm=h%<p4/mW4h`TN$_or9A#jgK8NKHD,Rj^NqQ5W"1i=q[A)U7=Cd5KCQ>7ArbeBL9/"%Kk\G
%(L"58Dr#<2<HV+uU-nT2e7Oc4^;oAL83:-$+b;_(OVQh)b4BcsWikXX,&Dtb,M:D5=kuIr3^B9>1cQ?8nPdTk9`O!<d!rWS$4p1H
%q[">k.c#3o]ic$TXs$i\@7EDM2t2B`UG(]4f$BNlN!HiJ&O/n41dg1f(jH+VBihBuA/M^fI\&J;O!_2<Lh38c+Ko(DltLAXq2u7g
%nVoW)^P?@Oe>gV8TDX]X1Eh5C-9ui<'-HN/X9%62+UlHSCNi-B=q;E5^!.e<3<3$"=IP)u=\kAT3P)>VIS=VlD4?H4klp;)c+g]a
%D4WU'Opcio1-sndoVJu(dm4GRVj[XsD/+n#lhbS\lciNWOk#/Slq&I_EpLU,r?o;rSHoC#)gHE^;])PE?A,gFC(>o3C-iQ0"K67Q
%!1C,heaA@k00Z+FZK%)J%-j37aomA-@3@n=9-47Z`2:UmNb1Xf$5XmFWaX#Nl<>Dg`:,jTE9^GAN.D3hOQ5S&(T>UF;j`[uf:Ypk
%!W>;1,B)-*]Pl'_]TCcn#;m<\jM3'0N$"D,QG+AUJ1dgk)K2u/7`pe8c`'PZLm.$<$JB_ISU5\2\&lkT47Qh=8L4gZ=!Ii"F*&RS
%qD'Is%qRd;.6Ab+rmku0-rV?R&5Vd(3S0=;++eKMXTOQ^38#`R`.cY06"@FKGgk<mF1h/tYCmn)j"=/h_a-Tt#)2a4Q\uge^I%TB
%/$cPX7?1o&qC;_oBBoMZ]5m5fs8SIIC;,1HJFAQB%D()I+:lWl".@J7jB6f4b<_A-.rgR;<OiFMVMT\[[u5gM(<%Iq+)NgcWV3_)
%&)mWV\Gp9p/"\.rHb/+FS8Cpn>%]R/]Q?f.L5UZN<F&pm_%Qe1,;%HJAX=I11C<KKjVIn,SKM"RW[$jSi+nXd!0@%=ht#^/i-d$s
%j7#ejo);DaQurI3R`h`K:B@^p##:_^Pro8LX0)9i$,5+uX:J&N_,e82b<2]L_qm.b?<.:ToSrEc7NV#kM@FoVrRsfWX.,phK+0q9
%INfOC#o6`KY$Qc,r)`Zh`_Te:qMg$c.O"P.+PEX!Bm2'JjP'/3,PDTQlcTibV%jRmEX\',:9[d6Zq:Z+pf\`X5TTrV>X/Gt[N8hE
%/7%eO?#Uo/G]<^KP@'\tFS'4Vm0&t`O[B#L1r/4fJ5SZ1*p`_^"8@)OoJk;HLFuSqNMa18FhIS3YV,3cQ$7iYkWR\J\,9ohH)OuJ
%4ZYK!rKgg'XTI'0KhqIX?K5-O<N<Ik`UE0-Ea6FKot!0)[kLF*i78ENE:f0VaBaVir_:o!o+MN:!,t%"k\2En$!pPeAMdWSDUbq"
%_tuA'nko]K_@craI1kV$>^c?5D4?J(5=l@ETm!R^T&`7>%^ON9?ZnFs5i2P$S3uIt-[QMFCK!N%IsijVM"5$ts,dt/?]u/FB>=>O
%Um%tJ=SufoV`nRl);'3e@C^76G#*MjOWj=:^AH!_q<r&Sk%VmNW]"'M45.`sY^QB%9Fl=cD9UfJB-Cud].7CbJWY658E+n%(-C)7
%BH'LM?YmRq9;6SXlBE.IQ<0PRYt3^Q=`5C61ta=Bf0)8.A%a)8;DZ`B5D>9&M<UbA_4K4T_<2H_Yo;7h,.?2X^`=Spfb*pPBiCMS
%`pp8EZ"4n"`igcO,VD$8<M,2m3B1AS,kEe>jg-jM%:MP"QClFg9[sa'8ItSkX8l&RPTa]8OU\,O"$ejg%*hB>OmhTh3;AFC]`]ls
%mj)?O>\P`fR,SaHqUr/$WNQ_H?2RKb@7fZ*$X/.bXA"g!2lKDr-$jZ>T#DY=+Y"MSGYE@O=M;M]jbJ.+Y-Gto:Rs5bgsWb%/>4Bb
%guf><EnMGdgGCCi5o8o=al^X`\Qqh/=HH@]BIX<YVa<s`s"65BW_b6sE-`&5["ht2JGQ\FRL/Pmf9j[ka;3=nV\8UoRqD7&1nG]D
%`VU00$7t&++!C@\NPmu&lD/Xo%g]J#hNsgW0!J4.8efm"BXE,qDQaH"2.D&?NF+<lQTTHqA<+*^ij;[#V;c$/#=&l8d!3>B@/I[9
%6cJs=Uck^enCVHq3i@Ro)*jYU*+GB;GuV1l/KHG^U"L<Pm2AGd;n1Skf]B0X*I<m#4r@?q:lNVIa:B8+WTc?GYod_SmCC/(ag5SO
%)qZPM4qc!-PYhRg_74NtO=^/T8E13Qe=&#5`7&Zj>he![GYj$1C<'i!=H?>`Q%fYq^3U*-IKT(:Q.U3ee?Ca_Mq,`4<]fik##N7`
%B[>#pC:8FM$m2j(o]3P:^fr"gmjIaNJ23oFA_2LWXg3ggHm)Eqj<-E^hRG$>:kkN/g8_Tc-_7"NRTqT8KkF;"fZ1Mg.`N'E(l!EQ
%9P%'4B<d)q6c,p66e^e?QGhsVN/KEJFoAlmQ6j+oK#L,\9J_6!oiP_G(l1._;!,k:L"hjmND[2!@)7c%4M,Jl<ZWK%QK@I:l:*ir
%-XMj*WanpXgb762,Po[%7:ig&*qI*:XE$<5b)$.B[BK5\4@Y`R9sH1/9N+``G,1-kYXuYOH4(!@XIF:Z&U0fDaEtt7Or>;,pJCDK
%,5TZk=\h&.g9$hbosiL7iX$bf*r/u"e\9T@\>;dRUZ+ecE$iE6:&gS5P6_Z-ER"@;TrE]JZ,6pHP,r'Dgck#qc0=MO%k3G+r?4mX
%dOHJcd]!)54'4%;aq<E#.7r@5T96qYc(&m-?0%W^`@At:M!ueB95e@1U7OY*X,j41e8gH]-rW/g,#PG6K5fFKJ=)uIEAQJ'mNcZA
%K^p.4Rfo=q9P+Tq]Lc^ON3jZAa-NSkqIUgT>.u4b6.N>$jq'R\ehJ^@4Uu@*&m<pcc%C]1F`K2.?TitL!IVbG#Z<`mKS64MN18W;
%&2&M3$Q(^KK!CAYB(_WPV0YcN(''uu_8E$pio+"]V7\Yb\nbcCclEOElq+>n(V<JAU-A>\:=8/EZ.LKSn-UZ@VqX[1r>B-kn&13Z
%l7ON%k*"pR2I"ua1QhjL+"Hj:<!$_@)ZhsLTqae`_._D\K$&5B^jX(=FKZ6$VJ-`DBMCIHV',_Y&<<Wsn8T5d6/,4NW[8\pS8$Wj
%W!#n8_[q47q"m2k#AXt0FmT\H#C)JUpk]JDi?TGRfUAG.Y[oL;3Q!hI1P?-@N1+?H'`NcqW<BFR_ke4uM"*!s_nTA2oh$p>A%E;(
%/HmM'=6<N-i;qcXfF>AA1c1#$qRjVQTZ<I5/;-6fJ2d:K&5+martBiM4G27G3ki%MYOua[Y_`#+NN7e??7cR!D]ol[8@[7VfTIK"
%Br/dN@Ui@L-g7qc/->>e&m+1dbE>hJ+(n;4e/qtQ31nH#\QO&M@/d&"%C/=U9_2#")eP.VH<e48^%>6uD(&Yh<eQQ<1S&<L-.tTi
%M5/^U-,o^+clF>bo9Lo1Hi=0(-L%4Fa0<0qV<#EX%IVe3*&mpk8`7p,6r*IR==AHcO(Qif+tgm#]]2<34VY/'r#X%HXl<j\%r.4>
%pf>/I1fN:;<A*=`8F,W\3CJi<6"7Sj66q4)U+nIuALQ3B\s4Q5]D2Bs&-R.R`M&rH78)),%]1N&oXc_!>5AOQbE.N)`4;qs9H;De
%JqofQVK!LBe<N=Gb),>,.,/X;O'AM"X<dA[2mbe252l.E_/F<VrT7;+Xs]ISIoWF3gcbJ2JBq3T`FCfN^""YR5=VTJD[)Yg%mJpO
%c4*!BaGhrFO?5r,7.O(R-O#F<mLk?2T@Gd,jS\A_YK,@l&tFt<[rg!a/B782Zu[`'n&C?%`g<6QQ]9+49gL>Ck.K4ZP?[Icm@/K"
%%Oj:#mh4M'&=^l'XrdV".:G_ohAeipCdM`h"V'k$?@oM5c3uUq>-SspFWF'$fObR%YnEG\j.g*,Ekt>Y5KCD&fYF"/K?_E'ahT33
%HgW46dTV$m/l,O[_K1gdJqlp6F\0)2C.jA3Xj$@`loFrQ(f/<oV$CVe]&e"FCu%G2S11Ob\tg&mEsIT1\DScbA>[2EiB^_S6t/L"
%?Yaht6uOjog9H:P4N@Q5-LKep?mL&GK;6\QMp]t>jf^q9kUZG<jHs?:NF*J6#qK9.6&KUa5!!L])B>9(Xfq5'H@1KD="Dl/WGmG,
%\64Qf)^Ea,Qr'eLp[/*PNRNZ)@aQ7[j/@?F5$T;i3[Q^1\HW@&j-]:M8d^`&:ffn8d$-"62VV:&'`aXJ"`jUC2"OEJ]Br^n3BPuc
%s4uV=XVluGWB4i@-.\Jn1*s27>JKDl-U=0/HC_=p4XjBF;c`J,+Ye2E]:"S&55*,N[RCIum3De@#0/ko=4Q>Pi4+iV%(0Tc('fC6
%CWnWV"SStp*b9n:&;bQX*jmR\^QX!,q'4R&m<gSQ):#4e,s';_R#SjpgNmbgZn5Lt:If.;2Am!.Pq`0SoUMc*2&]1%3Dl)eq-#Jh
%Y0AAhH-Dm4TB[aD*2-hP#QG29h/H`<Y<3FlA?4*GPD0GkJb;N\2Yo9d@1VSVhH^/+g\PDf#m)Gh!gpA+bs3[cV#[$m&l\P,/e&$K
%m?"=qXN8Rj<*LFBRQI`0kR>D:T$+M$X#9"V@,"JYU$L^fO4;mKUeZ0NQF%9e&i3JI/+K`T"pXR1ZUW930tc6BcJT#bbBIYG-L0?T
%Gu(iMb8d?0D4/"#94p^jZm)%Z4e$/4*smLs^>m^/OJH;c48n]n!;A?R8PudsKq5i8=HYnu'IA?+cJSi:#Thb+BGiO-QVgKF,l0ru
%_'>pBER:&O)s7idW_/f"q%g+^C+QC%3t+MnRA9Re+[8cVd+#.>:#@#[7C#jjZ18Qb0H<R6Ap/PbS>Lk-2#[dA,VTAc16lBWBA+C%
%7q-^)GU0+K2b91I/XK:U/%`k'"cYlO`';EGc*Q0Hp-6C7ZS5AK[4ci,ojM297O;T*bT0oXD.Et9Y?G7,I%r'V]cYeO'R'6V!&e]Y
%'F;-UCR@Cnm<(-#(Q!OsRu"U%`1IDVYK[St]h=/j?Q"Age[f.e-lh<:bP:*Q,_`<Pe'd7!5O;+P;h),@009nO#r?RV5<hG*n/dG2
%6(m`#o<CK(!Pk]U6"P9lIB(%Y<;__<Yb?M8?_/FpN-HSVr1<Kj1%'QKmHEe>\@V'71Zj6Iq@KE791C16A0-_2n<<nj:Dn`If@nbP
%^K-,t1oeK@R$,R3K<%0Xq-1JQMNAPf:'?S?@ns=obq`d)8F*B23D%96<m<V[3dOAr*d%I0kQ'Pf>XsB69'piCZ?5kjp]9)>4W+9.
%=.\^^0:r;k2#4JRQI7pg,6+?aMA#+o=Nmq>O$">2O.N1;T6EtSl/BC=1`$BIUM!iFXp?%qfS?F5GqiYF5k>)hmf@cK!tMohVqeHM
%0BhCmGDI2L!%lVN_46K_eXGG`oodDElkn&=h-KZmX-oIBS(s^l6t[^7DJL,lgqb/USO*9)V[24d6mF^6G\^ElOa$ormd&=8U)fRs
%=Dh0oB1JKL+!$&;h%&L-S@SaZPlIa2=q#kfZ$Gi`RG*<-%uVj<M!BSs<1OUent2mKD&#'Ei),j,=$&G[eEl*m:H?,nh(#]WaLKaE
%jU&X$/\.T3[^AVM!h4)T[QX4=="OC.l8C@K$G4g[(G_poC.?bbkf:8!]RBl:]6uXacERKI]%C5%7b]<G6/ZoEdEpF7gEdpb%\o+Z
%9(Kj*WFpV>F)@.";:&<">][4=m]#-h7hoe\Y/bD*5!BTW!D[3,mWuafWq00hi+:<^r.j(U:#l.=*YJ^fPQ@B*?!F1fGRQ$T(',1.
%3Cb.g;P"kGhupW7MfJ0RA;Gi`e8L(0.^mDGn`407lipb9Puo5;na2ZF:.VVH%([i9_Q'b`++D)tV.2,Hc3!B9?h4o)53>c)@!Mgd
%dDl#QT\Bd]k*PTW/[J%GK$P(V%5<=?M#lr$1nu7"U2n`%W!K'+rd]ec;`4)$,ORV6?t\+6aIqX!eTCj[(:H\e\IflJO"&e^i<?DA
%?hFCu]aK?([qE8W`e,_/;,-$VC;=/d)0Coac/eR!OBn]BhmHn!,/<=g!G/sQHkd)jG\e[qWD8J,U7X_K_4,Cl+suVuU['5lI;B_+
%ZCT,FO8_O=/>raB\?V9&L's^nQ'R5E`NPWha_[[3"qU6B51cubbPX_$CN\6jM2&"0ZoaBmB'h9upb6L4EH'?+P\<'FIJ<rsaP^W"
%aMjGek/Q"k2Mg$=^XsmdFua;;d5+bp-7A+j)FlO=K9k>`5^"Q$\+G&Qi]0d[1q;I.:H2%>gtfV;Xq_j'L&oRMX.?9(0C&O^_R\kh
%EfQWT-WW'VDL1L6P4AdPWtStsYPpl4=N[;lcQo5;$dhW<a-l8bfeG.EO3QoJGP<>9S&\u[-QD'TID+)fq%';aT'2bd`A6Y_)V(dt
%3[L;eoA6hM!F.G'/NnK$SkqnISb#af"q>1=L[aDl(qdK#1QAC*A;-b?_7XjjdOtaAEk^W^5TYmM>e+@9TR/0D=Tm_(WXl\$5l/ti
%;G=<^-RZm/H*T9:6lAO+CETc9B)m`:R-n.:6]hGr/.eq/_]f^b&o,T\N#kphkct@_cXRH]'Q-'0$@\kiW55j'Pa[h5*9',4Tpm%F
%_k+lo:'>CBa='PV]Ini1N1Y&;L$Ut2pk`JSZ+\m`krZ?H.3='kofln:qa;W`B;i03Qj&UWf'S9+L75Oqp(`%_*OfNG0'roQL<A`m
%St*<pbSn];_6UnTGW!X,bHIgsJ.66@$Q\BDR;kr%1:^8pfuQ,ur3TkceD/rP6H>9H#/h.s4\uR6^)$=2Q4]5('Ys\cl.tSj;(QNu
%l1)[dTp2g7;V^Dh%1=hA#W60YK&mg.Q>?ao4j&SZSf)NT?32DR$Ad?[>CG?nbdm$u%s'PKm*D;5QJ_r!eaEpholhP5o1>hg_&^QH
%NRU,@EO;T'1Ua9j1I?tFH4t>c:@SMYM@U<t;+Z`K@Ng;AT6R];`@0_E7h!fbEH=3m[^@0An/[rfmmDkW@%,j3R*%NcKH7aXN,qj<
%UgY7e#UP-r3(%fpI5Z_7P&JU##e&O%\i@$WH%%oU+/%k1*jOFf.rbgX1,u,+8cXc+PS%9F,nc%Q-d.dV#VSc"k<dsDO[6upo&h=C
%8iH=3cu6[X2^oTE[S/E(XKW$O=*edgQV@!0)!c8srXsrSgJ`L;)RX&(F_S6$Ooe>dGGHhDGa]Jp>VnA$/JVg5"2PUDT59k&9Thcn
%^:BEJER;*J#UbN3a#=TB>9cD"M]Cg)JicRr,qejt@,FVHBft)W%'=&:=Z6S>I:QmTnpr'?6K>!jnj8@lND$(KRX3/CfjYLKU*T^'
%dkjpcL;doQ'@BO'k"d!]=D9[F>X,_/b_b!H[949Z%F=VPWkQ7j#1D'2&5O,s<PWXY6^-0>JU`27IqY<?T8gd+oTM&4[g")=oGLNn
%a<Xi%=_W_;:Ns##7,dcD[S+rC=Ep9)<\/j74i)GDO3c%t24/G*--aFn0cju_NLA65M0PAf4uoY&i4_0BZT)`fjIZ45j"IPqV;Q+n
%,HA%[?RW9ol>E8PS7QmbTPu`UMlJZ!VK_GF>1&4dXIt>[_:K\$=V2OrX6hJ`1:f#H/`hm0qn5?Q.s0.bhNj[PfCSDPRMStK@f!u(
%`0d<R&KW19cioX&Br3qHhW?gk=[>a3ELaYndGUaqK@qfl/0?gYG*5Q-d-gO?&ChNfX`l(8MWKVZ]ZnUQaWg:$g^hc5m[u:1YhbX2
%dH'(7gZfc5Llg)GYeB4tm1\*%Utut#dC$F>NFSA7[=uI:H.!!nK#tEm=OIkSMhp.7:)c^o"FDT>p#+Ue>OOLDs%^PTIcL1EO&[::
%aVDAI(WZX-k:m=p1'KoaX"E:A$8=!BnIPnQ\d.DWi1t^=^;g4*O"d(P-^Ed9GCV_gGF?uAiE'nq8F`4+4NacPE^l$-alO.A%F'Ts
%[%iBIX@rX+]B:\U$;S16lX^FK8JMQeo<I\s@4G2@o3+9g1&[Xm'"B^$e#d"fB4o1B_mSNI02bp<,kG*['Q@jS)Dt[A=fEg7CF76!
%[!(4#/B_%u1'QIFD<n/.5$=\)4SF\><Brls)0#g:K5UX['t7(G?iW%;Mq+:oOhep]SL&HId?esp%FC8AH79G=n[-fR\kQjI1Qnl9
%9Ym,GDi6_=,@76t"RoPKlHH1tYgQ<(]?M8WB\:S$<2ST4(j7kKLKu^W^<@0($%b-,=LkU1!L+`RaaHW`J+3O%8XFnsYC#d?(E7"_
%>&Z[M"KFPo#6WB-OZaP8HgT/BFf93Z2.CE6$@oW&PElr`bh=_)(UM<(\4\rVSF/WY`9ES6@KC\;bT.T]pO"KAQ3XSuV\s&LR0%Z$
%1S%-]CuMCiVZQNpbnDAJN762e2sJ5cY3JHU=oe?&a?;sFSdhqc%'D>C'aA_6L24HTFXV<KnU1nZO$bjS%KDbb?1Ch6;/]N\V/*SD
%?.eZROdtWT[nL??!*Ut3E8B)e<SBs6^):g7+&Y<!rlseWcP9(M\C@H$'J-[^m=K<UVsYeSaMF.U)(4'('\,=><i,l<<Bf_<bbK0/
%bcTm&1q/?R$KQmt[0\CeH\&7[S,p2N0>q[r=M%P0+Qf*!S.)"%9W`do2!LI1)js2(cJ2j8AjKuY;d`R!)iohV.._6qr<f;?#PYb?
%Z$WiUVB@+g:'h>Se?&.O%`^H=(nM?_!8<.m&DYO?=f-]bpW>Y?R_bZ](6![;1TTEWPaYd1Y\:dN9oJG-LUXdERXa-NYorZA"tTBh
%9%R@ahsB>s*k[,GR08?%MNP9se"^NBk8Ir/1>@C">F>P3Cm.9T?Ulo9K>@W#<?OpPKZA!;k;>q@kbtZfZ'(>XVBBDDjpO=e(O.Xp
%N*e%:n9n+XPt*2=od_>!g1*M+N61!O_u<(NkeR_7i:C\/0pi*p,ef2%>m^o\VT#Ae"ed<>"J[bhc')Mp!gAer]aT]QKFBU\mQs>#
%:Pb>d!;NXc>"$=(Q'EdP:_JERo28%Ub7kr"K:L'uYWfe,)lr8lFULU=C\>L/P/^)T*.q@*eBa)XmL69Pb7me>gD(\_OApXM0AT]-
%2!Gj#)P(pD5=+J^5q=J*&f\0o:DU4h'bqO:`)dX0#aKhW3,A@605(p[du+6=eN&3VS&9#e3'1>aF$/OWZ>+UJ3]U<d:Q9O#^7gf@
%^d$U3,*q9s*@-[)%[IgpP<ejrJ]/JDN<>J4[n1c,gbJ.9I\RIWgJml_:i3Oi/K+@S1EpEgeMJ)GU$U&%#,+HLcAhsX6/"C7YupoE
%bE]3h/]iiMV?!+\XF/XhUuGAtj%iik-dEBJlQWImr),/,#/=0FE^k3tbDDH+:OAU2X&2b)NYN='fCnHk<W64On%+0ckpMuP6R&*5
%kGCl#s'h8R/<,R*)OKtd>rTi[QQIlaVR#T4qP\O_K*Y8&pkJKT8"K*En693.qouNj\XpC/b!h3<%6bb\[pn^(RoPbSYK71G,ousT
%fuj`t[o]!VF%E7ahTValef)>0ljB-(Z!$UFbqfMY\&B=EUBt?&YPC*@V#cWP!qAnlo^Z%I_XI:e#eu+iaE].T<S#4"QGrR,g?mW6
%/9BUg[K)q"dS5Yr'MGr:4dAPUks>X\;c;?%.o-FMok*\/#E[JW]jU6joc"2=R9"(E43jS<\*G+9LQ0fR49QtH-NY"c/K>geUI;WJ
%Pdg9POe6ZF-J:BFAc0YOZrgaG^&F.kXOf[S,gF:o?N6,;b=V]gRHH!-<ZX`WDI8lRcAf44B=_KNCUU98(R?@c4:GUV5JrdA,BHpl
%!E>mFZX\?nl(N_IQ6PeB]J]mFG#[VWg6\=OWi]j>EfUCERclt`[5]L>NlDU#k'(M`P8pE_&FJ[_0;@,^T,i-i8YR6=r[G%#&@%]M
%G5[&dM1.4$*rM`m:;$QlrpWlUe641<Z-+Bqaa[!MnbNK9P\mtQfaA4'G#5Aln8!2CK&.pT@ati0Q<_51c!b0u]8Y=36#F]0WpQ59
%GAtePmjW.#E9ll58HtGQ`Usanet(DW85WEUPH-4PR>ZfI?0j.#o4ph,T2dL;kNa4HgI7\Mcb&"BC47Rg?%NGKH0*:i"YJ@5n>/+H
%F0Y,%Sl?Z\56.j]iN>/QO"g6C5I+k*6mf=m$*J_0rUai=3=sdQRB(m'ACj^TmXF^qhKqd@/I7M8cWrpkI5@t2$acQa]?>AfCImJG
%l$f;i-8q[XacCGJ)q:%QDPP%F4%Uu182qeLkbd>O<d!.o-gmkp\aV02lQ;CHRu7&)(ETZJYRXKn7K*?F/)/Z<?iNYKj8'#4>Y76!
%oacXQ.iOeCi`)/GIlJ2=oad'fe/>t!E?WS0Gli9iK:e<>KCo!FOfhLU=GE.U?G?EtV^>dN_"i;:?C"uj*06dA?e+440pSacnPnTK
%jOK2J[J]k+&]k'2lQ9XCBBl$'h[;(rW7O7=-1L4B(Lku\D@is#,'JZ-AUUhCY"@3BZ"7P/4-^O%rJ?\>:^Q.7c9kLQ3CAd'.P8b[
%.$5NMP8<4ODX\5;k&^L4[u;E/P+\ALIo%(4R[Q0@PVl*(Mq"7iRuW-MjG)]-9<&L]M!%>cGhE[MW#]lI)dgA5+D/7`@[gW2b:ue6
%>lOd@eKJ4X4]1!Tpn9gEQfX;l^h..t6h$_H(@n9hD5a'g[)*I[5*)5cA![O.h*4b=FLgLT_W;O`H@G_LY3sdnLj2eF7@bbMDCd)q
%f0>'n:6b#il/Qscj6E!Jb/Y:iS%?Y&3oQ$V,B^jicJ.Ct7k9"o=946BqG%)Z<hF=\#<R.=_G6QIq<<@jYF@9cm/6d/o7<RF]u'hB
%rejH[mLomq,Ct.)!lWb,,ep!p%462"e1jbG+7j_hr2tfW6Us[)dIRLQ<FQL,E`+ZEQj5!V,4kX9&MO)hRM2:-o2QH@HQ%]t`08?j
%M=2[#I+\+QqKOL18<S?jPVWg02E0Vd9$NBPCP_]f`np*m(ngeC)h%#EO+bIENsgmefhnq/AFGP'IS6>h6"]Db>9B7FoiVm*NsR-T
%kk<K:;CKWtk";i5p_ccIDq0QWMO^,s9/?q5#<@(T`CtoVnWH/AKb<;<@&h-BDK5UWTO,5Pk.V^q"iCU+&1?M"n6RA*YC?QB9C#Mi
%bd//Gq?K980eMOW?;-85e\eRo?0(_K?cU$\QG_B`O4SeHX6gM-%LXqB>D-bpbf0;"8?ub.'_Nk!U3cNof_];Od\\.Q-RbEm$AR7,
%O/j-S-E^-1laQu/rc*M5h^2fdH$K:?Lo&7Ill8mj.#sVFf%m4Sq?(cm:2`JcqSs%?11Im;Vse+9@<3Zb!!r=U2q.(7ku2p,j$qhZ
%:7uFjL^+9/L]$P1PM?6bC8e2U4JL=dYC@+O/S.@b8**/enba!!9B`]"F@mSrRLda)A!^dr</ns,W:$,pTplK-]D@Or^A`,)3jSfe
%>9AYSjbRpY\Gee0Sp'/eNuN'^RR&2J?(YIma^A5@c)uP$?s^5h7P=[]Io3SkP5,K/Q@28pkbSMP=e$8_e*A)dVH-3*\g,HAP:_X%
%9RHQB>eF1VI3n,1*e>m,">-r:9/=Bu(u!W"QhKF.>H7T\k]5(SIo-+Re_n%]^^Tog*ORL5YCF'lcIY9u:tS9-E;efdP!Unj!Q3JT
%phtZ"E$qL4Q74?$h&[W]qU]SQI)kmjI(NVLg!YEX=t.S_BPlM?Hsfu;dW',i^FJ5,V%lt#_-[VH'lir/jXCHTR`)S"J"KBIG^fY=
%N!BL&UmX\::GQX]4n8:mU7.7XmX,%+/<T!Xceq4MoUWE`fijl-r"+b)9\dloEge&ARH'5WMgUaG/+:E$ianNjQiEDU2p&I<a0l*I
%!ra1PWU'bH2*$F'e<INN:S^&>9a)*7QgJfFSpU)A"l<OGB#fk=\a/6E&FZ@XO0FEEL8QdSaTOSjj9*j`E81XAQK+l([4/,=,Ngt!
%-Np<fa]s<Is"G^-M8VFG6>/eM">]4M6mk3Zq[@"jZ7*k\4Y<pi5W:OXJ`2L5qZh4>BQ!uOU0on?&'[c'bgoctrh2mVUbYgfU^N@T
%=eG56rN%^\!"'nZ%0UmCaOe;FUm[<l#'\@6+_o5]N#kA]"l7?doULZ5">+nQQ*n^X>)4+RQrZ.Z/>kH`2(nMfRMP<t@=3CsLE\`1
%37ZQ5Jmp>3:aQqq>af`48D$8u7W(8\\bR2u&%6StF+MCQEEX@(%JE]`T#nZS]mm?[5:HR,b4"#E<N,mDb<HiNnrL(2h9F),9%Na0
%r'S9$.*iQ,2CaoR&X89H!;VTXbf8h^'?^k\kN*enXJjq]k<rHd-BL9.TlLF`"qr8O^2)/W+B]'ajW=gnPsRcgA/B;=s%jt22MMQ=
%(0[*'VnO_SnkU:4/.<f>lVBW:.Ka8ALGE79-LR;)SMJSt5;e*\k-+Wn"j)''/cSWm*[Wb.1*T?V=mU`N9+!9N:un)+k8._ictjOb
%Z;+.^HAnX$b$\EQAY@Y%$4Hrfp98nIJfe^%.4/CUBeOT:!G<dKG;-Y8-AsP1.1]RB$H?1./cSWmJlS[#0G<Ih$H=@\FHI@X2P*ro
%l-s;mcVZSu7/;Ugq:Opk/0,aT;qdKf9@uY&%9@@]IO,YH8TL/PSiI\H/.Kkdn`qb:$]0iZm+LJ`?^!`r-^P#AU?*JK,bmo6]n!pI
%15]!c@dW8!K#!;DQ;snt2P4_PWT^FHijj$>K=W0t`@)-&\-m>"Wq!^_oLD,*2(6qs56T(D+-@nJ@/(>a;^"DNK$9W[.NS&@4p$HT
%8b]HD''\L"[1r8i8WBDX</m^'.4)RiLNBNWTJ%hq&0UpYRIjAaC0=IHQNB*]$9MD$3RQknM=M/\,K2ED[kF,f]n;n;n!W__O2OOQ
%mn(fK!Mf6b8laZ1_Xt,hoUL%%oAtV^kd-`m>tuOM!Mc[3Hte2VB\b8AkXNFaEIjQ_V+>iG<)OL=mEN0/"\Sd7"fSKm6Gg1IhAtSj
%q4=DD0R.i3U<'ah7qtmR5NmHQcR&YoH;N;<5E`%Qr'Mks]*h#ABHDs$\`eU$$uITr\.J!?JWNBeH:''V<jY!oWR[YUb-[7q;()h[
%aNIH[EIjeI9&h7]qX^:PWO*;TU;d1=k2@$`(-K7(hOT-Z2),Y'JXr1+s3MraVZ,pJFFhn_\Vf0P/cSZH)+-qMf8r;AC]cWinde/U
%&fkGffu41ITLOhYarl)J'cY>CQlpM#MDFfPrubHc$f!9]cX9;cq;8-\:uQZSIP@6`KOa3t>5k3>YB,I'(QJg!RmXu`.R=.q4=!CC
%PbVLpP;R)#^2q3m.(j!:!D[b%$'\gC@'gZ#_T!]]r!lI,L;9Ho`*J0Jr.IK6LOtg?l)@+/,erp@Ns)6U,B]h2s%n\))NR;^L[&2+
%\3d`Aa3[9hlQ)0U+T+=@W.7u2R]WC1.q"ZJpg_OHXB9'WFYk7m?J_IO%OsV@l]($S$mqkVXUI<"50SPL/7Z'h7e7gcpkVs;c_[r1
%F&r.2S5t753A>.LW\]3RcP&c1f\+2^#fuCi:(GW(-M9Blb<=a%"fY4bCM9"Z[9^[IS7"q@*s+P&"?J7!!Fmg#OpR\K*ucfX([d\s
%ruf*(l=V\7l,PPFmP]Il/go(RCKSPO]SK#@$B6)/BlcY,gjGPJ``@)fgc)^U+N$!NB:/NU0b#n0qOE'qWR"04J76R+*O=&G10oXo
%"c/s_$`"Ih%FS?`=jcf!as"^l&5$E.hb=CX?:i&4+;&<I$<68L^2TL[<H@^HQ%*&3juk.+c8kQQ>u%$!:)VRNo^*UOT,0\1qV:!N
%9;24E>%6)^V5!@E%W[-_mX,UjJ5.%3,=oCE;]g8#m#Q(L,"RPOHk!nkb(`\rZ<$$nU]OJ1\0*5;j9;/HS5+L*()4K\:/sq(Nro_t
%/`A`1OCGUc[Ym,r-%Dq\E*nKp=%k;6bRPWb^*Pmu!udVYe_?;5o<LhO]FFnFPG*g.`s3)N/MZ-HQTYon(nRj+ZXN<qh0\Xg8Z`'V
%:ZsgA:\:5dUi&NsDV]?eBj(/j2!t61SFm@/h)-ST%:Z\)-[m1gnUc3R`3CpOIA3f[R.`+&Fu@Ck*sU[\b#Bb2LG&lb2i&dF$j5OH
%5^&L^c[it8HEtH"R"E'pV=ah!*WH9(Z?(ph.-ZteG!0IJ@8B%K5b1nt?)n"qEo>c/PE\>:jb!VJ3$S]NpWZ!Om$4+7':>"*=We-a
%j+J#,\Mo\GMEssU0'=I76'6uc_6nL(+a#pE\/_;3\@p$U3c>9dRPdqP<3g/UKb798[#N-7NFb,_c/SZ_+HIX$`!YV$B%X+'k\O&-
%Ah%Ut*`ER@9_cn.oR;2#VPP7OnY#0LVL$BFN1f^:$VuG-+gMD2c[2M^<Eb8\+&j5X9iiEq:esGJ(e(5.jGO?^GlV7(%m!OQA31Cr
%2^p4IK^T;R*U9CK'Ik)=`a$?cNF*jI+3M*D_\3a6OXGtJY8>NnY7D6j3k_KsrurILR<%A%aRE>$,0;#B'S;f)\06r+4N+9CQu'hu
%M^^5]j<Ch8kg:Y3QZ_VSkc#FLmA`C!*YSQMgb%0##g4`N6cA8+e50)*c&!;+h^<S.o/CCn6D2Qr$Of$lF%4,A#b&7Cg4>EUCAEfR
%7TH67UcQ[L;``E#EP76bao&'DAE7$j])m)9&tGJtS7Q'eEf6d8ejio4lUN7G(<5[&+s8,/]3XW1T6=mA&(1G[ZsmcrI^9acUlP`I
%ItAQI79&P;8ARl:cs,Z71I,BgqB8R:PO$Ab'Z'oPSpdm%d38"QT3++uIREhi`$fb'-k_8u56q1ji6(816F&hl)EPp_Tu#m_4\.Y*
%p2Y_]b;5kqM&0&4<<0TU:;G$B/gOp.%#,&0J`S>QZ;^b]pV'+JR2GEIj,00eOTLPFlTm<UW3Hl_Wq6]SQl_FUZW+-dW\D_'8T^=a
%1e:CqdJ,=/0KgkU/;_`T1]9B$2dq^YZ!iW@7el)l=j@QWW6;^eOO%Ff8O6ZQ)HQu0A$!'-@#0('YTc+!>Ba;=?:=-9)no@[1pHIQ
%XV>_1ISu<oP.?Q]E^cu:j@?$nCoV*Pok(K*+%G,UDjK9&b#"#pZSY;#8@UoZV%b2$Y?3VbON;gn*(c8Pj("SmaX5.?'<k/&),oT7
%1m>TGo-\k(+`^_qg43^('u$o\rNRnYK0UJaitoQu(X(;cHm@[pDIb7$-LHsX8V[;*?,DFGU*'f-1)M[B/_VL99KchM*k9Tc5"+\h
%VTX=n6!g6=AS.I;?C6-.;g,^9K!a!&ZtRD>l;>"dd4=n3b*RH8H(U"SA;=a_bC`Ps$td,XPTX?n$mrkP(Zf6):rZ(8hgYZ*9b/%,
%ON9f#>n<L<OA^f)Ti?\;kblb'Hg'fb;f[njXuM!-ci37n62gcLo_tOpUi/d#nd$fU+$%^[Ub:^0iWKqY:U;H%ULnmZM!8HhB$EWc
%U_YYOC-a.A+\6i$o7S24LS!G*/4?Zt.T[G2dnQ:(0%=;!.hYB$9O9(n`S^aX%/C2_5Y[k'$T:U')Ka;!:?Y\P(`H"U-=*24KG3<W
%!K6+`iEZXK?()G3%O>+X/m03Z@h8fq0BgYEhE1)3FdY03oi`k3I%LY3I`$KXVu+IU_a@huJ*W4T7dcq<R5R"fSkJdZFc?=AW(:b;
%iu>B$%@`C\foR_I%cH'&<sHCfBOGQraG+X]c>sBM\Y*0ub!Ef!,84%/7KR+a4Umu=!ipl;.t80WbRHKrng2AH/7<^XoIr0C0fO=r
%%W#1$#T-\\]HQNNa8'K.'tj,s!spZ5J<05XAj$2HZs)guZ5J/g2Y]U83.^uJZ\>;g@tQIq(G%<C9=c@g+T5UJ7R$c\[VnZk2s'r:
%nn$jc#=srTei#*eO@WGDlTgfI:B_0)gSt2U1[#'ph^RcUT;/1'*<]S:_^0B\GQs]7C!9WNA@ejMn2"?Zap>*5&MKJ'R:3q*/7VPK
%&L03^;c^6qLR.aHE;/HB:Pq^kq#81VEOpjo?[C).:h1\1n.e"S'@%alPmKqeK/4hWB#\)Hn>n@S6`[Pp1m&)A,B)+"eRoV-:6!H1
%C`8ZY$6bEhF'-4!K.\9l(;fWp,UDLRdH*TQ+E[L7J<r%B^E;C.*R,SBV4QO)@J=PM+U6@+jm0\_-IO>!%pm&A8=2Iod@PjWkD;*%
%<o[LB;cg=kaY^Mh4P^ZfXk]I-Om/"c0+iYk*k^LZZf-S7<19&IPYu3<1CD0G(ur1On9'CGnHl=3THU+[<&t3o3SGnPO,"Uo8;#P8
%TdR(^CS6%YW^nM/R@E)j1M>(:@tmr+(5,PGRb1k,7#^f1@K]$#@oNUf1nQg!Q-]rN3RL\7i9F62'g[brGQG,sT\8Kk3g9!9iB&Be
%J/&^ld%4dr'JtK'W?>?];`eR:*jFaro`<6m^d@KoUQbK3PlX2VmSFgI]5l%8Uj8"t2LB'tbp<'U%t+3J3?;#6\0lnTdeIHoq<VfQ
%6\L^!h+<"O\)P,+$U#7n18*-JF_,am,XjGOgK@/kO^\kZrAAA;B'<Ij_[pedJAc&_9UScZF_)b&U(]c8]TPS?.b!kVJeNS`]F0:`
%MWD#VGH;H&-4AWc=Yt20G]eWnAf?A7V(r+=(5&'?;);'\8)/UBpm:p$T<d[d<5/\g[T)"Sd3?G9s*fKaLt)\g\.C[J7cZ3u#j7N/
%OFkB0#X+T#lS/#fqbY(A`)ehkfWkVOoN[q'8Y[e7H3=XXV==IRVbhN*J,,h[[]fs\Ju%KUaM2Rpk#PTM8YZ:nVId4P\QKRcY0i>`
%A3;N41I"eWD%0Y>)9$K]H:aFj$YF:'1<<LqkTgXtJC`[R>jUIf'I:nBCPHjQ;>AIFe+bQQhqXobnkV%U-X\8?jX7-:16<?[U+8O(
%dA7#K":<b8mohHL2:$Ki.Kmn7Dj4hW>FIDq.<A[9(gW_\g+"!t=rsL_R=Q:tHs2Bq90$sn+C>QlT?[5fAM)!Ei@c+4CB[:8=TQnW
%c;1I_!f"/d@#cQ\0&@W\>=t^bTU#u+n%n5lM`nQtR,!7WK:+t,M<lY@6NnKF+]0I&"FUec/J+<YR[&,l=6T9?"bPf#gbf$J['22.
%qr>7&&[f3bH(R!T1c/2Rj-rqVK+?fNgL3f0ZDJKrcHh:qV1_)_h3$C&]R%>19LH6@;\tU"9E_r7^(GSZ9qpg+6[_>u5jIIe-q1dd
%KMgP+6F4itim5]AD%G!nL\+X'USmgV2hWiuo0t&X>[%>;+#1+6;kp*bN=QV,JgG(XgFQPg<pgaN%g7tPL9t,WPb9c("dn43&N2):
%if&Mcb>NmOkckYu435a&TlJ0=8K7?<*e_l/^p*uARDuXc53[)OgM)h$&e9f]TICnkZSjrZ5YF:K7,,p@Jil:"XgVAooSj(pa>*>2
%<:\]\D*lrHQ1cn]id/!P(s$V-.VO:mS-?[7..9J0*[X1Rg#cLa@$5sNM(JjR-BDhae7.`%C<=cr5j0r.NYk74M5Iag1FQ_jM5!sB
%q[k+6Y:52JoPV)=X[Z7]PahlUMb@4O_??&:>DBR+<$WC0RPcQ].k7=#pR[2MYTR'1V#X9Q+CK"t>';JZ`k#HTaDj5RPs7Xe0%=$/
%?n,Rg$:bHH7TF^`<Wu(\f\-^ii"%J^143aD_&GhJ#Z<V@(Z_#()+mJ\2@Vst?s:o1R+;U[Aku1n5#=;hd?0Hq<oFZ_5Dc=J5C=BO
%,!'J,@tMXp<Y_D0nmqjaZ%\oDSi?bGJ%?q>6J7@lNA$GN]@1UC.WmFaf#Z<_S)RYf*%mXO;T&-D#'28:qA`[+!DU/`AE@"BX&fdL
%qeR+L8@Z'OA::n@N5^aC[Y?6"R:b)t31VLP9C.`gc:gOQ1.X_$=r8WOR+3*[G5.p;V@8.r6fibK$`p;^Y>K]`oQ[r0=`eEnJg>[L
%jji8(P\@1]Bp;(d!s]#n1RPU:UB51)q:'8B(mb"Q":8EHCkM_`6F_/OhV]=n!WpAGLD&gj>K?(YoC]T/]K5hB`Y(J$jT\mBjbJ]]
%(Z(fF%DMZ@fO)uI)FPFM%R'FFVuo_CaCPo)XZn4(8FK`3;!3f_77gP<":#61WNa$C[Xi'FM]om-%t5P=Gc#uJ.hg-G<nia,0o:oK
%\pUAMd<:=*lG2%1d]n%.NM;MI%Uo8sHJSG$.$F02_fLR)&?tH"1nuT_fG7J/Ut*3+WY'08SLnd,pQ^&X^0m!]nM0"9Gl".TkCj$t
%4R\/R;2I@LZ%0f]`P!c:M/SubHu6`aQm&Fe5mYe><NjY"7.-k=nFs^iPESXR=cZ+'5"9jKSd=PgM<4r6*U_%;]Q1k(CC]m#"a\Y(
%,R'$V$)guO;Dm8^,fkcW-^MH_8>ZjsA-P!>'beVs@Zh:ik+o7R['F=gV6=:4lj;j:o:Yp<TVAVW/RI1"X!b.0M6+oq:RGuoiG,+<
%WDJ"$QiUaG7`1S"Z5QFn^;+CdMasN39+ZP"WfMDN&%@$bOaeLM/C1^EE7!+d06#kto!>p]I?;mUTC6-q/3cam^U+[MUf>SKrc`uT
%X>k"ig-MK>#jd1P`Imq-VHB\-hrmgE3K8ViSrQ>`AKaS@"g^d&/kbr7R>$WTF_-+RfJ&cq3th&8%+sc?%7P$l'8+)6]G\M=W[<f:
%NG8QVU1R]XQmZpliMW3q-'i3c,IMR$F.>!#\i4BIGHn#Y(lm'2/(82Vi:-)0bL1&DT[bYl_%K`_DW&a6?P-=!k)m4>VB$iEctP\;
%qF]6O4s*2tegn+%N)\>pNG__h:!CX[<&6nYeu')-</O/Y1SO[6W!4`<p>K/01r#b*Pf2MN@ps:MUPM8u/T!cl[tm8I*VB6QU^RHq
%JXf8^"Eba'[O8%+\VD&$C^29L>-fm.;Q!%89r&ci;e@dnn?$J/N>@^!'fa:;:#F+tV?+!mPqr7ha#uU>GgAk*9'.PT(P"1-lQOW^
%,(DIclAEpb+KX-PW5F&R)m2DH?oDa(MR^aE#(n3T.NQ\g^!NVm7`V5@S#PR(1uDh-Of?'fhh;+q<k^?(Q5Pjd&r/I(6oSXL1DaT4
%!U*#F6s1!`-nR5.W1H"-hXq[0o=0MW=hs/07ZTGZUdhk8M4PgPJ3]WWKq@_F-U"2rQ?:Yj)Q&e4ap3fubfktVSfQW%2kBiI)J(pj
%_\7"=2AeH-iPrf=VWY$B@Kr%`[^-@0aO3VpE3_SCDJ2u%g&\PCUH2n6@\u<sfR+tnn=[[5K)NMZZ",QeJOhU.XWZ:"6@7>Vb]tRU
%h4K`@$btGP_%+R`"^J%;N*hnpBk2@SQ=8_NYW(B5rFUgkFt2m_=u9ul;KO2KTMpds4X1#_O&@KYqo1<PPAFO+_8fR?E8C/G1fKU7
%I>=^Wb(og[Zb]<on'o*,af-qhSYTJh0=VoUFOq=X"lKfm!a/8]]5C=3V4MC)2#3h@r(nHY4sO]PTHdJZE/CCdpk%pr]3"-uj.8)`
%!09OI"=\nK&(_S>BBpR@b,-KkP1`%QnH'!he\&\Fm*(E_?6]mL_^+cA!9tRZ>t`gX,SN'Q>kA]on]hCJ<`3;_Y.:X*E0ZHKb]ofG
%`1Hc6`45<fjRO$>]\2f4FMs,9=7)EcEM-G,:2.U;]po7m^Rba,Uk/5jgqP\@KdssuM*2s%l0Lf;,J9Ze([.8*96n09PF&<%#:>b*
%e$!D=@IYO#U%$.D:&D>2G%0Omp5)+H)k#Bc!I$iK6(cOWaQn*4r$$Jio4tr"\U&[J6pUUS_2e4s_j4k*^%dJ<4%(Hjbei_iaS0^'
%pB=hWje%'C44>.%>D;W^dJ;^-QQk&u@[?7/n(p=ldZuL^.k;IAb)3pSKcQVPr'\o\VOtA^d@GVsJ'o%KqUciXYdA3-\K42Db!faK
%dDM2-]uA2t)ue5$Cb$IlgD;_B:&[JJ'2I87+.l\QK$9I'.ch$gU#?eAjU<!qauh-^[Ma//21-e\I<#7e&okiAdf%^q9tSi=1&WL.
%e&:BDD61$@T#"+rcm)UVq#u>7:2HdP5K#rf&PUq,=MptIFmb@ga]WL^b7/Xd@h$pOnIHqe4=H+fdY.)=hDaIjnjZbJ9D=+XU(,5'
%0HAgR5AE6hjHE$LN9(<=$"pSoY8OTI.X)YSaFHcu`Ipn=8u76"`Lp*"qY#cq\J)knTNag(E2P$gI^H(#=#u-6Ui<`Q9`'G1`@TG4
%h7$9$mSo\\&[gQja_N]J>XJh@0M+0PKtat-qP>ii1;WpP,f3(-2eIqMEWFTQ))#Rd@L]T#;jC,Um>fW/3@LbO^Oo]K'#b"/*X`1W
%DbC%)G"[ZTf)CJ*A*ZOu8D7W>2!E<!^M)3"H&i/8.3h4h>$Db.Sf%F-`nY7k"eJj?!`o&>RmZ[6Eb;[-=ee:YbtKMdK0YX>N/Ama
%A2-G=`ue(S;,LeiVfZIZS#Z!J[PF^t=JJ?7?$*t&3WD.O@D.JhAEnn,$>TJ/)ifOL:Y#tJOQK>JNCu`Q-W2n);.:Fs/OMt"P/A^<
%BrE!%.!X3?Zq!%'NM]aO:fFD[ZALC8IA93Q,qX1>Ecf23jDf5amE:VpNmnMR4M`PIdW%BXUO+r$n\bk&k_:r9e#9FR'SBf@#PJSu
%Q32"5IIt>KaK-Bde%OG\8#Q+^e%)#is1g0W02JLi-V041PY9;4"u@7G&+]#\3HmmQ+b^4Z57q7<[W!R\;)^$1Tl3k])([<?bqC>5
%W-d))CXCSl1p._']]9Gt.<cr/S6hkG00qolZu0":H,K.UjX!"!6oQY_6:8+t=;R.uR6VR^-bB4DOlN*p;!IE[0N@^MQ4?T(AMP<A
%h&OGUGbFi0?9'(lX^u>C_.Zl-:s$i$DQptT"cWF\<]WAb9>WF,CD\gfB@fhgn>B:&TTtQE'"qh`TMeO2KH(JM[oA8a.hXP"/+Z1;
%lmK%'K!AZ/fT'"\T_)-DE7S[6)?HV^Pu4Ka[Du!)'?_U><DYWUiI0,$%8.OPO603+)_:hE/4*0HFpb^M:s,#hO71N4Y;#CK#;^'J
%\G=YaCQpNNU)TChRVZDD@\BIj'@NUQ)m*6)"h`4l99:PJc!rLYg5^_Y=6cnf+;_^$2nEFWC,8KQc"gk.;E([SK+Ot#echojBU6i&
%DHMP>YUgr_&]cA=2LTidG\'L&6"saM^^<.[F*:&BdM;'j.m!%e]-+j\P7RpU6[/K"M\=*h*Vr*\G1bLX90Ribk(TZe(%a/M7-!^L
%,YpA;4uL%]g:tH/mB"an"Na>sYC]LH!2JqIl(I'n&t\<A,tPPQ1/KT>.%6a*;k(UYIcBO`%KRdXelo?fau&eS^u#l33Sh7qq\cK/
%F/4lPniVN7WmiDu#,#rZ7Pmcr6BXeUI)`kBlJsTDb``DC&X!W2P>C4)Z/;8L::ni`@1=\@=n0p)-P)3\b,&uX68P<9Ab$Xi)$1dW
%#;_1,UBm'>1Ok3^Af>#+?uf/^bKNWe[5DC$O,A$"f'%TAZPXE!g^N%:5sFF0&sek1NoBCJ<"W-o@9dj].sQ"P.bj>_jW`Y$;mXKC
%g:C]!j,0^:Q?4a6<2?Ceh'ufuMkp8aiEqW90=K`=)qGNEn+ScamgiFBa8RO:NG_i7W:%[!D7htg5Vkob%ou4kDFg;eNFc],A.uM$
%"WW;E;[IJWi<HLar/$A_kH_D(pQZpG+8A11G4&q:I69khS*Rq)@"`)m-a9Dkqa*4[Y69D1#d5M3;4qNtX'A%YoN=`Bm3l>sLEgHR
%:cBrQQ=;2XVTZ<^m0\Qh:K;MSK#pMX;rIs)#s8)R7L`Tc.cIqGCk/5Dq#05Z1qn[36bC!qIn9V9"Om)N#uW16R_WaU!6Qf?peUW)
%m/&GDWp/J/#SK_TBD<2o8+H@4hdobD;IeNMrEuM`*'[_K!j2LPO+[<+gZeZ(29+O62LC*h5la#;o.apM_-,\!ZmsI+OM[B[q-GaR
%$1h*?Jm"N+&"<`Rk`jd&7a&W,?d41"/]Q^\U%.`S70sUKEu@<7"hC3_WFH]CnCp3^q1K>O!`Hf]_SU%#c%i1EC!tOZd!7D6m.hbg
%1?IVFOM@9<4s)V(K[Oo10^0SpeD`6SfAke\)/0oml).AT%eACl1uFu&:`IY,83BS+jr;>rcP/3GoY?aTlp((mBf+^,0dSqOo*nIM
%1kA.&b\I9"<&UO'ptl;C@J;\8g!F+bBFeFc%0a5fb3ZBqrgL*+CfW<U*U0%JRW!"1U!.#_#Y_L_A0TYL1otcG:Qur,!QU(DHRf"3
%1b'2EJ"]AM2H4q;(6`p8bg@-SoKA2X&LRhW=Qm[54ue[4MI2uH*mJBCTJ<Wp9`j/"8@cgE/PXAi8JgRnUAtC]4NQl9-f2*_&SuDn
%!KC'06Y3"3!UA]q45-.eN+'DnPqA@,6&d^/]FAsYn:NOrEOUf?,ST1rB:tQ53l>T,3tGEd.)S1-%:c'GS*o6crF#0\(WlT"(`jpO
%:eD-6*I6BtRW!:Y`0_"g@mC?[jr<!IL6=c-E(8klaOC,7+!)qH1uIL6#E+*t7mcmAVp9Y+U<,pbUYh2c#&CT`]S/D3pS;o9OY&5"
%`"-3=pl,>[FAJFbeF9aS@#X4],dQhh7WopmNaP\i>P2%"fP.&ZkWri<RdU;(h<P-LeFGr#?kdrXU\XDNXC)ZcGaj/XB*oJ9We8"j
%qN'`$a/bq\k,C@bK;qr-eqB&<d#Jm5Z[pE4c=@-"6>\P$,M4@F+ccg:2FpHbakbI0C(.IrL#=#gc'SRP8#G>p#augar&gs.+Mf(_
%8h2&9"r]m\LCZ(@nF.$dZ0V8ZeAOW9"En7GRIT0Z6\^pFnA?X;*\iPg>C,>&Z/Z,0&SRs8#)t1Cd<oFh&fkGf3H6)k+Bs`/lRE9n
%GRk*S*EC$Mn_MK$5fal+$SsUHC',dq1GfG`*+j:SO3r>!*(+YLmO2T)K4_XtK9IARMb5\>%1e<CoqPuI_+N_AX)s`GZQ+etX$KNh
%@up5S+1aR#;K@k'SIC'8o,TW]$9oc'X!HVBL2/AP'FB4'U\OsJs0CIp7Ls5SbpOE0e3LeU]"i3B].PA@R93hImJb8U)O/Xpg)9In
%P1_DW*Va-?Kk_X%6@Dg>R<nZu>Na3_(9KNaPV\+uIn;/[$69UWB&N`[)]No4+RpJY6(Z9Xale?84]*4dU\Vp'MO@G7$06GZE]u"l
%#Ith9gBX_<cnA.9SmBt0UUbm"8aXn"Bsf2k'nkNo*_KGXr?8Do:ZUjg*&%R%[N]k^I-gY3=/#uoHr(KB!_gCKH.FZemq%)]rENAg
%c6mYjBj!?PY]ab;,Q0HfDa%"9EqAIHm:*,@QH+]1"pG/J0o4.Lr<Mra;T@%<p,Rq-^oT5bNCo=pG0%nYlI6YD_!PV?/5^\5Y6f%m
%UCN"!&UN@<WM(Ts!u4@_jH\`Y#dR-\#gWd9k*lNS''WbqR<h3A`YUW4Z-R`pf&1`JKQVTlRXK5RLA'eaoY*9Za-)S!\X"l"dmWs1
%*f\f*cusi+59Y0U3X>;p/.%aIX@SSg3NQC=o9KQ2!ZKYDUf:lSa&dJIn#lRYCV0fWhNaM,0:374o_-O<oRM=>ffpB=#a.Zm$%mDE
%9T[?*jii1FjH"])&m@91#"]6'DW)m%hG`N)Z?`F'N*[cHLb.6n0Y@pb!&.UkLe'Sk[-RQsYD$?8#F@:tP&hH!_Xsd;TN&^OdWG$c
%(eRZZVZOkp_;T&U84qtQ5=EII%&RR![n@56m:[",D!!ir<6D6KkCq9pTF>&,P1`%!(A'\a(F"-,UPeBuL^i^.korVc???e!2L&>b
%Gtc\Pj;5r7IoW<ZaeJ4m.Emh-dp2$6';otBSfP67+IsR#M,iREc@,rqZ`c:Q6rk;=:?,P8,k3)#V87PbF"]2ImIS3e2Y)PHSW`!0
%RHaTf-cEdu6jM&IDL-?mUIr`+50X*e;d.A.nr'X7nJqS%Ar`&R0Zf'#S0\`r4K.gW23:D[3p)E"`YJG6)BPYD-,&uKRfcqJ<'cdN
%N,P$81:$j=M)#eQEr@\Z)9M,;(&H&:Q5]Z:15k*cjoe`Ej;nuL0D7lYdV81-ZXM!S3q:#QW)\Wn`b\V;LSA5";YnLBn-K>#-8*T$
%Sel+.cV!/TKpCnW`SmpQiR<7'_)0*Y>*kKto:[AUb)E+d&#H<m_!oSi\icnN?pcD+("eU?dq\[:=*Uqk=rC_F5K\&%EQ=-)drZ^p
%C2>YJ*1mr\WrOq92Jf`l@pPTl&-DRKi.Ufg)09L^a\RRMa7&T[cmIIf`0TXnZ<Wb'->TKnJn\f:SmOAE=@neFZUU4/TqG<&]Z2j-
%Jr8\hiL:0('$tAaAr[J)&Ps\th-URoG+9["&5C[h`&>&5]LEI(J8)('W=b59gZM10n)PiDcBPLNEi4U`<Co<\BS&Lmh!D28%6@]-
%Gul9Qbn_&f(#CF*ou4)A5&d2.-k`OY,$ElDJa075jKVpcXS36203OpnFtp&m;QTBKKM/PB#3*a.=^IN)VCGu/1)'[m^J5Yn!eujG
%*n&sfi*XO?9)>6'&)a4,N.OAU\C:6'1lk1s`k`O3\F@X`V1(Ck9`cj^KC&s1_Z%I.q#/GA$/=R"D8Na)P"8?G\J]l+m,^#tE=IlP
%kV%bs\0B0DXo5*FM7fZjnE)TIcZB3#@'/aiG&Ig?@^ttP),.TJUna@DpW5O(0]u6m#8FE;8d8YnnH=p'hp#IOmA%U!)1s'VHNg8k
%i!$gD5Q[=X'g3K!PIp>gT.i5ujpNqLnu1-<8F=pc:4K!,F'eB14oQ+uApljYDdIDN(^-9hdkJa)V8m?7LRl_,#4^?jW$4lh!ZVe3
%[I%`&Te3sP(c%kCB3&h#3G5KCVj]8Hn_0oU:eNV`f/<A0g@T`hRNj=UrMXg7n5/DE!-N9Md"MTY]g.RP!/VbF(D<W@IkZ2sadJgb
%Opjj;e6Y\UDO3:rbb/cg8b]inFN9\D&,Xm$2/*[(MEq#S-b!i,hF'.O#'%@-'g^rdX#;eJ*1G.q?t=;J7td0Nc+Sp.e;UKLUr<M;
%WPV3Rgq4"$k6?PS>.frXhog0d%,qt#F>Gar@+G#hQCZ3KV_Z&\\b,YdlG)JR>N*k9:jinUU(NjU>RU+UfcOf+Y2aRp.pI#t>+'\!
%YJa#,Q)W^$27Cp%9aju5Mj77'/)ZG>g0K)5:6a;-1;l_\4#:Q\-A"oer3HC$+ElrYne1`7`K(T];`A"4-CA&@/HL&P*I=qG\M=oN
%V(MSjXWK5&^8:OR92YAV$^,OQ3FO;0qs<e2?jZX*0o*HNpKn6$HrlTt85PMf*n.bEGcUKL]a@`)(kaUWT%N5tGetr:R^<t1A2Fs#
%.^ZfDpjE%A0GSaFdWLb\.FJr'5pM!uBeE]9M$?.e&8P\#R^)CbS1sjq9QUMdTuUR:Q=<u7;7pV!1=1F*F'fmJpS?B\!Y2D,YZ<Z6
%`8#7D<fuE3Dh`)Ep((CP!_tsG)NIa^mf?@f!tl2*r$B/7Ul2AD;heX%cD_EtEr$=j9=%qh0s"gM3;9C7Y@`fn$m:;EP%pI95NO\Q
%.%kt/U`S-D1,1h\PbM_X`rP=hU3&n<r01h7\n1_47D"IgkXkX'$Jgk2ID8G>%Q3f4T\#h=S/`^F<LQE*lE6[()LT!ulrjc`XFV.+
%eeh\Sj+U:eq[Ao]A45kcDdSfS1N>6F&,`^!\i,fHG`048]bK))mD_Nnr7Q8;$TtHVN!P.Rn&MhJ0U>%Y0S9Q!1<VkD>FhUH-a_>V
%_DS*M:nC!6P%ZCa0tJ"oBu0`HB%FIPoZc1%bTYXO&)=.Ynb3-md)qLOg+&s#l29'XpM5L3\'q7:^tiLnjejbO]_I2e<4d*4_[nDR
%oa>F,]4l$G*s9P^9p67Ykuccd61G^M(_1Y9>W"(ioA$uX>bV4YRCd7%Wp85_e^\$*BV(Btl':GsAX3&[oG-nn!g[++>geYZn't3X
%d(B_6(XS)fc*njilWo):c.^Y3]r]p7H,7'7r_3U*D=2dC*U`^CZ1nKlpc*Jn58)rn.ZX;KAlRCFZME.%WP1;;fGW!aT@Y`3m3r&6
%+afINYgs6jMZ-[oV'U^fM=3WO_rJNPgHMf]Ol(=&^bPClrW/nhK64=V:V1EnT_)RV^3tUuJp4HOc`HGmA\6*S41sS74Fu`$2\G!U
%C>G?0pB+(2'Rfq:oIrDhbA1p**f:=^2`k;,a0AodFuHfAVsbhF3)7!WR(*)/FB@+P&<^_:dMQ/r^UqS<VB5^M!&]?*67hV$Lq_C%
%KiTiMLln,cZ+"*8(ndMFYNmh'/^mdP@]NfneSdhdI9uZ"'^]1LFB-309oj1#Bl'O+3F'biGm0u"8kW[WqF@ok<5>]d,FID]!0@.l
%]]22Y5\S<C*18O/a^/uF;G_^f8t6[7?>!s>YFNAm00!t-qnM-jJ@!N/eC88"r1Vn3]8bgU4dOu!:0M+U0Ak;H0.A>l5*e-gL%,ll
%K$TGP\uuGp$k\&PV;]7a9YZGp?c'n<fPlWrZTEW0#((tu<j0?J0q<is@EVu/2?s&#pVMM9`>X,?fk;RXPn+CP8[ICZ&\ar0IW/rX
%<m_BPe)N0a)6\jY=+)qO358Bo\HKiue[TtZlJ3%hLF^I9kJmT`6$J$MZ\_.%5;+He+$"99'&*214Y_I9?<q)[CpkBsQeXk4)B/Qq
%@l9Xg8GLgrf=5&t;#=)D9JDW=8M48NN%8i9]B.0L$)0)C=mn^)cXP!]a)[/,M\m0k.'VhAo1`bribHZXQYde`ISCE;:Y;20COk%2
%]uMOuBcj7@@^KDqJqW#,92CA:IE>A#o%V7/Ynb]A_*7d_b*-a8/-iF,Aie7l(#`X<a?4VKbHBr.(8ECc,4BE$'4g:U#<s-Z1K3XO
%;O2&pYqC&SXJpdo-Iu6<3'renjDMuf(JFVC>*E(pK$:/>f6$rKVi'Q<1MGR!OJ8k./n@8,!"?sW`%nbRj=*;G9VIU'it?&F5;JM9
%*Gfok.C8*$*I=D)F-OLJBrV7fGlKH,$JOd""uT>]@SdcCi7IK<P8*@2<e:HMrXLStSF-rYE""K9*/n@8o>L5kVe&Xj+dG4^6m-je
%^9rsu&=+)b;o80'DJn?IV!1`#X"p7L<^t:8>8!/aKnrA5e#+I$Ei/r&a[]k<ZCE%P1LA$kCAno'-pk_jQ4.c,7[H>nWDdW#]ao+3
%rNtI2Il$Bh:s!tKT#K=<:&+SlY$q6"bm96n\U`I4PqDiBaHuV1[L`d`$DN:ic!tp)Jr9I+>`%G:0DC91;>Gcr.,aEsMbYmG&^!WM
%QKuD,iF#f58qGKa)klH7U8T3uSpO#(n*6.:Ar[VTFro+.ida2#%e=<5,8)o!-\O$)8TO$RCjTG&H_D:1dk+^>Wn8L!6ELW@fBENp
%*Ld/&S<Zl;_sZM8r->IO/Paalgc.IKN]_<2#"qo`6!g(GgPfE%f%BaeIA6_f(]"K9$6D;W#c!LL[R-`AMjt$s1JUltOY_"T@h**H
%`Q9d`7N=G3Nqtl+^V:f@5?&m,m4=HFVoU3":=`akU]26GWR'>J+ocq?._$2?Pb7@67hO#?fq+E&>;"];qRgHE'c._E?9h.WgT\U2
%eBlp@oJ#%b/-HAS]Z_c0hXKA-B^&S;DP!Rj/>m$><;F[qg><?HM1Cmj\VK]o#;%#r5aOh>WrGi0R]dSLn6`E\4_#2U*[\u4nL*e&
%kR-<Ff^5qngP+5P,XB,6[Gout!X=6Y(?=g0.a!\gSNugbdnAYD[piB(G2,^8VuXQV4V"T%QJK<&1&q>,T1qT"[KNpahA6Rn,bUF_
%>[UNE]jMfm!H!^[XB^/VBF1g341Xr-G.n3r/<]%l+[t']f5sY450DIoEHR=d*22XIB"ne9<QPY@+g2P$3*/j4^B;r<fBl;k'q'M'
%2!TB1h45#lW/"6B=M)Ui)lu`:0[oeIR>AR__^h/Vlc2Y$R;S0.<bOAm3[$01OPr&AHdULbi"Ncn2tI;Oj$)5p7-I.ilB8i>H^DhQ
%;8bUFf7fl8!q@:$*(nPu,eDWOc7Yp($na@$+nn_X8jQ/R<mWJ,6qRJj=8q<^<e-qE.&,tPgM?<^Z*M^cMp7P&qb?RK&I8:>SS!)g
%*sIWS*Vp]'Mg2\NP9%$5%PObh,X$^%6Pmq'(dEV59M`$8D+I_ik'l^p]#Gbl!a-'pV90kG4#l5DF!a5sS7^Tm<n:dAH0G./36$^`
%>mtf.&Ej2l#<Fj6d6V1_&h#JkmfTq%E7q,kH/qACK@UcIHfIa6#O3)]hF(+-M=G+0j`HX:j8C%n8<>+N`'8E-i?k7^@MGDC!Z,/A
%.DAB7=+OE4+Np,HqZ2:j[V,4>W01QKJG(_<NC7mI\df-V#E)r_nLJ2qBjVh=&'qF.`k7p5%=6FrnsZTuag3R(UY(8M=\/>Upj@bQ
%-+rudK)'5@%VU`qKeKr7,V:\gSD*1+045./AcAt<NTBg:8R.&/Blp.sY`O7"BW!"l#Ee>jR*c&Uli_0'5pl-Fh"jTIq93+.&%'b>
%TO?u8)KJk(`/CY&(BOo0h!C=YQAWFcN*`/@TjFcOf_,Z[BgDHb&_q1fqPo0T&M8tTR47T),10APLG!t'W2.=hW'hndFq>ZX6?\+u
%$"Z*U,UP@&h=>8VC`FG5D?n\@_(,V@l8t[#nnqTmjJCNtM7e?R)O-kbnVnO`nrt35I!Gb44W1Wb:On=9"ca]K4aR$D9pS#K'mqst
%no776*=p%#Dhl=B'es8-/*G(p(C;Kb=ZVKdFKP50s#Y;CpLU$T6iUd^gkF]\hm.:&k+kltWDYZbgEeF!]F'4+%lnuj;be3M&iAFN
%L,qnbf[%(>ckHdbl:@FtOHndp)jI:18\ae=hkhSe7Z5"NV\C?HoW*dWo2JV`c&l)OV#1#iRQg6c5.e;Vd1rJL@Rrm/"a#N68\;TJ
%Wlnm[dYfGB4.)OE&oF_6?89d?,3E_7WXM<qI%?^4?idrf;,)7cJF7Ta+9T^r17q$i&Lk7ZH-c9FP,gD[`8rS>`7-%ka`OhdY3+dr
%QHJ"MWKm*W<d3,R81Ia?B"?.?M_VO"pi3!["VMD=]>YJpU?Q(NO"Ftu8@I4BYGaLLhou&P`O/l8XDH4<rKL="2-rtgcjQo?"6Y4@
%?=&m@@&fDD\1D"Y_;X@<W=Zf%[$jX4Etn!?6RbYS6h0s5:Qen(Wa]O_<@<f'1':da5UM\%dB%S>"*[0T=&:3%,![YVO1Gp<]"tV]
%Qa\5>E9NF`_6a)DI>Q=iphjdOiFkVd<PDM)U5DJM)Oi+scJo\=m(G-9SM#?Hqru7i3[Q]`Z-_n<AX$V9jgqgE_Q88R/s`ss81f"o
%f#,c?bp8MAH'rsCj8OA;m/-=%]Edt`D=`Oj-=M:mZ'ak%4b`B/B'j.#:>KPE?GG)ToCL]9mO?3.-gmT$(gt_o^rNid#qoXV`6N8I
%p*,6XD=8+>*&>6?%7c)K2jOu6?5"`X?nV0'_o/NH0F];'$C%e7^Y@f*-iKKRZd<FIUG"R#[!o5iWbL*)au.%>B-(LK'A+iJ3jfDD
%56MJW,+b+@mfo>o('reEV[0$b)9K!%I\@#)'O0rld2"F-,n2EMLN]:\UD%=H:#rW2We/o$S_)D0@*OVe4L:#O-X"mXI%/Oe%N6?8
%p)lsX6+J3gXZ/rhUsp>S?blokoBX!"B!knT&P3cGg;XZH2A3s1^S-hZ!n*/3f\muSd+tP]3HhN!OUs`mn4)<BDCW]qCO^Za#/%21
%p'g]MJnSp2A:rQlmp.U#F8fI=nS*0]mSqFVZ"p25^F3QmVcnKT+XNo'2`Mpu!(pCK+_lUoi3(UAr@[S<?XW4BO;<n>8.Egp5]%+4
%)e''*-TgPTZL_(T(&=b0k5-XTPZJ/-<lmn?Jp&IJal!eE[ZY)j?oeZ!1l#nTjEEn[oi<SY\<5P[!dul"WO!`4GSJ*/99h\8$&R6+
%e)eG9+.j>>9-fn-",[##56ec)c@:Y=C#R!KkIS`O'[Skb+EaRbQQrPo6%0q(k&Ge`#:Cs)-(LK9-h5?<0]C8(*MjC3,('[e6*#>X
%>-P0jl4L_[ATej12^3GR7a-q\6CYe=Ua9@hM+8X<IENGocP'Q;4YnfQ-U:*M5C(Y4r#GIC84Z\6=+j@TOJXfP;h,2f3[;KFd5Q==
%.k]JkV`)fmI]VZMHA@7+2^*XZ*K$7[k0hii)6Mfd?hWn<<1C81Ko/2'im6R*DI93)3p[%D9fh7X)9tZhVVI)Qc7?dk5)HN&0UIRH
%CX'h;+;J0`4;VX$UOph;f)7f=-7`baeT79ccZOM(a;5[XMrhL;8RhTK1DbF`\.i=6LCp>&.TkMMe'&\c3C-&9q_u\^!TijEJ/kb5
%JF7Fb,*=:@/+A@/9q**fQZ?Zl;D*"kTR0"VePHRY_R#Eu[+PKko4IiQN@i)hm:1U\'a?dQ5/tc31M.\8VQMUB1.ojMA^/lr2Bn-^
%Kt>*t8rS:on9Ug+F5&CM(C)SQ`Ne1(d,<#>;rfdpjkV5YXB_tj]J-AiZ1OCbffWLELI`Y$]Z4R"(>a`dhkGfrO=c5-$$54]+3XTS
%1b202`;@:#/C@:DOHF0%ehU^\/)o=C?j]+g9n("*WJSf:O-R8f^3[*;e$U^YLD&WS"'n6T=gq>Y-]YWf?gJ5-8+`D3$o,]p0"C#!
%YId`*5TPE+-(&iY(`5ob@m?XlDg69rj&EsoeUAVG(pk.l,*#Y&hD$<H"J[_I6%6o9rP/H%lu50CUXF'*?p>]jB_DgJ=.)4`;t_@&
%o0(0'UJlPfSZq5mS\GgF-u0bLS/[YO`!M8U&b0?BhPLr30f*$8=5&jrq52`cM6@o@"Y7RZ1nDYD`MN,NfA[*OTW#gjU$I['?$b.3
%O=2K@g-I4OEDN5%g.eN9+Ko3QF!Jd.))V0-Lfr#^K]RSJOWGjZYNO?@hA]%174L<Mr3@[a#.>+b901`--e(mlUN^BVPd[l@CgJJn
%O$Hgq4+&(iZ>:bu!j>4TVpuTHW2LgmMNnV`daR['?lbl_1t[-ul%p]_Mbe90=?Rnn%jhk.@#&k^67d#%NEuI"5Z1l3d'Qm0C5,WY
%^Glgi^HbLedEVBt)7)5FfUjrUG-C4N2JFI:5[#$+(LDp8[)(%\h/,-3TRS:O/CHas,uhVGE]7L6JcqihB*of$@h?0;FRCgfgoi#[
%+$37^\1cV_r\m4O,ioM'BbMlKYU4=dBI-(;%\&S9-NG2s?/)7fMi54e;*?@/+/`rul%gN["b]!n7?NXRjq>TMmtlWF_-B/DnhBEL
%C)o(TUH"IdGh*2%H!dX"Eru8I*#LaQWY?^:UufEPONj&d9fbTmSO0he\8o"$LA2V]=W&a0_u3%r'*h9+Gd[,deg9,pP95V.'Yto9
%\gMDph@o=`j4u<Z#Ru9CU&KAQ<fuWYF68=0kqCKRNXo*T'4i`U\@JiWj,$CD:^4_i%fF23a9?:la@28$RdtZgB>WQ?nahmbinuib
%0K5uBa]c-;$di^@!_+Oh.DB=JMuCH(:QL>\=eWl%Z$a2K2MW7F"3!%OKqe+F6)c@87`#jlrdkB6"'Xc:0]%KnCTmnSX-ERkaa-_u
%,7:Z0(q5j$$F5U]NcB;4N(=G'rWT;m]TMsfs7U#L2jHfn*K_GeY&"!hEbFrHpMA9aSVZa2*#>c*rgKi-C(WT-)#E&'M;8.X<:HPc
%<i1?P9+VfXEI>]H[u2-PI2g5UlpA&&1h_1$_V9P8rQV9\A*BDeEu@>$*:T2X/cnuWaDk6AK-o(O0ctOKV/',5#<1)f(6q#1KQ$tu
%bS21"hHcV*R5)D6.qb^E!d?XOpJU*9U+!k=jXTZ6b:9rNO6`ad912pNY3.)u'h(WFigc::pLe=r5cBP0RaGK.F+?YggTFVG(:@Z)
%:hHP^Anb%3=m;qrNs!bt<[+<pZI7h]3e8rjdW[#s;c`bg*[Sm"h]9i/R[(&@[VP)hPqMmj`V&BSlC(K9$e'^pOnV3DRbbiGH@qUp
%T)radS(W%cpUc.#VQBDqA*;f4f1<dJ*DK!7K8J8U/gmI*9bZB.\_;M%EfkO(3T[>aX@1d)SiO!LYcMq4[\!p`*#Zkg4U+XZf\W;Y
%ZdS@NPa*k/,SjP8;iitFVF0^-SA')$bKbe\RlA9,gds;`Q,+iNNPCiNI%nZH"3X<oh?40gl%4R5,.!I.6;TUlpl:K9P$.%BMo\M'
%,W1`*dpQ;j(,4S0h(H,2R@KPV_sNdnl'q5\/1Y"f)K,*7D!^BBc3`^H`IYciVch/\'efaq^..]+U6f,NG)r6ACABr3!pt^kF?8uo
%1EBC(=E>(<<hg^W^XeWZ5u&]/X7<qL.>tO\_*ht)dqiQkn#Y9:XRmN-a>kbV=Ip!Ij[:.uNn`CgH/PGr3%(@,q[Fd(6-gIC"E]n=
%rjiMa[7k,-b:,+DEgDtCB06ll1k5agpOi3WK)!,GAj#%dKT:sf9'u\hY02<b^s#DPlT5SsA>M'fd[<:Y3jR0;L]cpG)'PEpc.@LI
%$q/:U2V5Tro9'"qTKPEPVY5K(^L0OiHUV!3L#go&<aG)Z$SOjA7TMPpG_punQpK&Q".CEJi!Vk=+-]o')T%[U9dCuI*At.NQ/nL8
%=B7I)JkW&',;k+-jMQ'b9p*M>@RO8.@!7,M.p[Bgo#ohb:0]e!$GpOM6qN78Ub6=%&4&Xq\;<TZ,[>ArF`B2V36YOi$sH]C>T3i=
%Xu8-Chon]ZR!_G3b=WR]G]JfJCNg.u6!<F\Jlsq&G"u3)44D_..p_4'.)Y9pfaVgPfOP;OP7Eb4ZI0VDlJ%unnnu^nZ%aB>@?XPh
%qTbVAnVnO`nrt2[1+ltiP<nLcQs&[*/2-=i+[+aE-C19._0>K&VlXu?>^[nk]GVVL<5b"QXIT$@J4EX$%V'%GbI_-X^GCXm?PZ6s
%oRGH0>o6I?]"2.;<!jlcMAGg^"tZZAX<g.D7C$"cLT3Qs#b(+R-e-7K`6$"D.pY`q9e"7X#=;SX(T7YmH7MK:.pY_re*6l19a^im
%XRpETMTo'k+!6^E(OnY823K7qfrAr!qXOg21lKT@'_$r)>?-k5=<?R``YhPAmb4A%q1XV,C2dIQpe_i=W>L5_2AddlH+XeKqcG.k
%^sld'+:@,"lYnpX0#DdlT,o].>.?37%k8$A@V#`X7GXs'#FHD\,)QVP@L9!&r/hc245LV#J_tX=lTmUSbq*&m%Q-\h73pQ`lZC0l
%l2V!=%k]KAp>b[:Ic5aGg)t!O*:$&ir:WVAH]][+04uY#rm2q4:EWElZ-JMY\8t"rE[nJ(.D>;V^8j1Zmt)f[1C$]dKgo7DI"pRY
%Lr5h*D]Nrn:P9t472E&-O,F(r:%;up1o:b?JD>3i_D*a]4!lk9s"6EX-aJ_GR9,P?GY=-Ce"@^)j6,p3'=7;i@>Xu=a^W$3_\`K2
%Xp&#gb>JmE[NCUt!_.oZ0'i&'5RL.q^X0%ZUm7phJd(CF>U?8f^\pD6(N!2lEMCj>WjmMKX0i$9LVd,e<lu,nPA,Qb*C7Q:@d>hD
%Mnu3$#.52ThCUJ_[G/(YX\'=8rg'.A4$8QlEgaMJ#rqI3/7h4JGMRZiq`;Xf'RHa+-.Ba<"IJDLo:.3mk[?`K-kPe6mPr$JH\R-f
%gp"j?k<8_Nims*%83rKAY*4g/RYgJ$Pt+0<]6ZgIQs/6[H"8_[F1";OE/*afNiWP#Vni9T[Wc]_8K.=1YOa"uk)Mg88A364m&/)M
%>-JAm6o@k>BHch7qJ*5V$PAN<cT]2OHa%Pt6MXeNFC_@%<$adHXk7*k`)^i_)b`W>*ULt<W'_ab!nPP&MNJc]l9J!H6,r)6'0cYU
%2LG[fT'KDS9V%)F4?;R(!iC[6)h*mC`X<=)g7p3iZPV/je&3r_?;(\e&"Ft45j&G\c#P[2R)5pHa9hC/=L"7TNp=g/;H-'Y<1-SX
%)h[3>'ap!X:((,,m\j/#YUaMA0up>J[+VTP"nFa.s8H,4dB;LMlkNBD4=(s$g+k<kN;PdQn>1J?gG/tuRs78*8d$:J"uX.bOlH7Q
%!e1#*4q@tpI'i&tPPLK:jj6dWkK/(f18U6iZF85[cqPu!na$(6Iq+7CH\cmA5'64"O-TL6bY^Frj9K\4%$emYa!"+a%gk.a(tkB<
%RTN]ZA%9A3(qaYi1JE:c(r*i=*U[#+Arg3jap^#nBaT>!FFEEsL*S:MHY\8s8>j0U(K0[7qnDn=5h8,KT$]]@[;0ts*\\uES.l5l
%?.F9&lr.fNGCS@Y4a$MS9`d-0KJ0f>J2>$\c%C3`Bc@ZZ8=*7D,(\PB&A!.!YN!EAm?0]g!pS]bP&P&gU.7+oJ0@M['BK`^\n>?@
%YporV3m5a;lAhfRiW>Rc5`(B21-JFe2r!Aaai($l[SB-Ie3X1k)^f@hn.-+ZA\MPe((BcZ!A*q]198`Kpir#(*K.,]fBZiJUlSa#
%CPM!$5f"[m7.bXY9S)7Sg,lW;[kC1UeX-+[FD?mfD!AsTH0C&3BKPcWHE9;Ne<*m1<G,Znef!<fBnG3TTIj]`Nnj86^bHhF=Xbq"
%>.KD4RfXVg^ip_p6kT6LJlLWTo4Kd56`;_qcS:%&W@UnINpm)^R"q]ijmLil8@^`*ga;W=57^:^3oB1q(m4RY"nSQh.m&li^8_,%
%F;R"eND>On.AEXS#!]Xi:Bp@1"HY`m[P8bK_VE8KL*X,rRl,E=eB#r"2BP^+ho?5+IVSM6kjDnA0s4I8>AgL41tXt@0!!toi+6\;
%k^8h6kjfs(I@;\T[N7?7_@4QA+8jE;#(()ub*.dr$f&/oM/9LQ)+faO6.LcD6oE3s8P)=C3@knbo1GpL.UqQ67*['Dq,f>^eZp'(
%2\JOh$u0D7WLPHIlj)?+=<o\41_b_d[CaBJXO;@G9W.KW91VOK/o]NnTe2K`\<mUMOt<.LZtr?9r9I*mH/=?]eVrUVbmM2_5aeSV
%-U@>J`<+'VoPdB*7?AXY!U1C]+54[#/+f+V?n[Tiq,V_31g[<@"A(+"ZY0IMFY%$0!\WqKQ6u#'arHihd4BeU_-X](MH!][890-h
%<p'HJ;LC6uiFT`O.s@KT[=b2Y#'nfu(U[L'.<m=tZr?(-U!I<Rs0Q08a1^`^4X\:>\LV,8?;J!j(=9emH&/pdB8Eh@6(c[%ON,_j
%U<3#U_^p.BEAIk@Cr?lC^?:="eIFnk*q*.58=7aAEkO^Uj.M4J'a<8/4U=n*2UlZ2hrf"I_1783/gOGR&T6cqjTqSQ6q0\dR@r'$
%gIMT3M=n%+)#6P@!QTsOV60:>_/M-)k6e3iT9fS"lhX^lf;3um"d>f:n>Ak-6R=i+j#qMRF6O8*bqSqaG8`S*Y[^ir,7iH^%1X?(
%<'u\F'2&_Zmd\f%e%gasfkiEJ8>k\1#(oZ:=(<<k3lZ\+;?G:CcpW%s5)u]*;<,V$6<^A\YSBPKfLQAo>\&FF3#$Ab)LRe2LE]/5
%>f)9_X3=3m8MJ,C\#9jL6dh;(Yq;JVF3oWB&@l_I._8@a#6fg)^aA4jL2pi0mY)IT;)BCT;U:$-:EV0*45r)2/EH8Y9@#`Jd`o'J
%"?G<XGm59U$Oj;h&6N('_APp:bqR/ZEr6iR@a^BTTp=Ia]N[@3_e-6F))9Rhb,:62dj'1kh>Q(\C_:T<("D9FI"5X:-[kYI5O4IX
%1Rd^r-RI=f<dV;gR6g.A\L22"rEcqG`!RO.C:FD'j-4H%1[&e@6qXQd4$):fahSlu/EJ1T#i_p-B%sQ@5C*&H$F,(joK79a.EEeD
%QduV'mSJ%HH8s2]4I?Vj3E30NgTJ`f75b06BC>Q?=Nc/]@2%=`_2e`cKDQr$d\8UaNBe/Qpk:`0609-Jh4iT;:-&!k1-LkRT_56Y
%q9\)qNIpT5mD=<Xk]^g)NgEK$AZeb'?f=)<aKqbBL3D"+l<a-$9,IS@a(dfJ'</qVZ(LA'&L$jh+@%JU0&ppq;`-r/LK[ARLg=VJ
%7I/^@0]OMu@R"#!6m6`E46Cfj+O(R&0mr9WEXK)3LY+=H+SbG_4BW#rlO-1WGn%%=Pp=4r+nRAn>)6I.Dj!1J5==KGJK5cl'P3e0
%5+t+n1\h\5UZ8)!'?Nm-pIAj=7J;iR%s]5g`)P<\8Gm@c0[XlQV;KI"8/;Z+.hZdc[%h.O[0X;mI;o%e7/mOt=.NXTEH+3b:ZUKF
%$V?K%jN?F^3e&CN\Atn>JO%@=5;(0q\;&WNM6&WHZ0Qrn*hp)g^,fgbZLPP5-Sp[/lZ5UXn<F:O/#_g4qifa4.q);[p#3-b^mrck
%TSD+lDSqY\1rO9ZX&Jk`h^o42Ca+muhD.OJ6gXN,;3:.q[ILB>S5VG\;9.#Vo`K:gKb1j/:gC.HG,;N>`=be5du,kg4<9fYLY.<^
%@ig6b9:SQAU_#Ui*W+FuC-sbP/0&32k6tD87U6I&bme^::m2=2ML7?".Qc)L.)[a2EHDPmb7lNQ0ab1XXRg$OI]fIX4+7GYG+J6d
%b]D.]\IeY#:IHB"P6KAK@`LW7jX1TT_[`Eqr'VjR#p>1-Cb\B-AIM]=3.k@ZBH_O>!u>'t3SauBlX_cha?n$ul>@!_q08*W"DHZ]
%-OL=P.Qbr*\Z!Inl2Lo\br[kS6L;AS&?T)!.YlYfV=f50&:7:dL"MT>1;p?e8(XFG4!P>H#Nd3'';a\+@M_H,PXFe/EYN!/e&!8O
%3EO`5o^8.&DDPkj>UPb_j&kNVa5'*bG.aGgL=cZ,HK5Y7M:,`<Z)aD_RmQJ@#@rX]OUSL%TK/5IHp&q:]o2<"$$^s,kMfA7Puu5O
%T)e&JHbr7LQ&&9XVb[f-kHAr_?,.<<!8`k7d(+Wh<q6c4m;5P*'kq''$R'\YXDnN`)aXlgc!&WUh#<\RdPZaugl9.nG0gft:D;d_
%2nQtdQEU#'AZt_Kk%[!QpB.eMW@q^s;S9lD=%&I?+K=iA(gAYd#q'^ibBX]<b\cln9*_m$1hWWD-?me8J>O]/0.d,9Od](*ZinVE
%Z#eB`.kla5JNcp\-`I>jbNbskV#83%XXEBNj&cMqrQ%9'L`4-/0Y-P,)FA^k*BG[+RS4@o0\mm%"0Znq&G/ma8R9+HG#WV?=S=eQ
%LHZ/oSYO:DKJ(`*,?>4JI%j$gGR$c*bY+Vs&1,(>m"fgdri*Q(Gf-mCI&i"<@S]stVuprcM3nSo*]PDANaL1Z_*84upG_@HWi*rF
%Wh9=i!-N&l#oh'Bffp^?R#,7=cTiXf8MbO_d.O2K1.#cPg$I&#O92i:"j%&9PXpTQ:RD[16YGt5?CNW6X;tJocIdS,lCpYg.p-<@
%J\<%WJ8J,"T%?+ZP[)"oae7\K*i_G%^Si@,$]e^:FHdGW*NT$5II\GukfM)3Nfip/<mgR*r'L9T=2[`gEC0q//^J^5Eo'\ip,T,`
%eK"<o*`TDgk;Nd6E_tVV<RBtb;_2e[L9%X59>AMiW=<EN":c(H[G'5MjW2.FZ-!t3jN[`5]e.7/58cE7VFMK$/*%bLa5:DTf<ETM
%h1#=<+b#dgRP6g^d7(I?`%)RZED%V7b)bO*X,`LVV#(SY>rRgJ7Bk@)\b*7a?9OE]+-kPfFQ^dA?uFUQ6Jj4X5LMFQqLI!m'4=G9
%;7t):mKY@6]*i)s4'\=WjAN47l_]7SbHeibHVo@O9%YWLHiuc22qe_3P:T8kG)uMJibcml9EY-7Vh8eJ"_,5e4>!->Z^S.<'71s#
%931`6+Boe8qd^Ld1j[S]ELc`Q<:ZftL^>o`c'e:nBn8=kCG:R>54SbreF5iUM`GR;_+"s!VK37@`_,<RdC1/5kKB;^\5aICQr6Rk
%j=MQ0"Uq>lWYZi2Z?d)p*#/Mu:bON8OUnFA/]IgCSbA[5SuQH.j3=::,.OAk/gkWH(fD5d>DtW=!)oi&bfj8-R'R6Q4%Z9k6H0m<
%]Fb6i4Dq%=^f<'*C."4>6Gj]RnXS1blr$/LAc&I?r;NSAr$SKS/,84_>#r#+&^VU/I[CL"2I.Bj]=IeAM&-W];*[>qE)g7QC80fU
%"`N&h$H<tALN*J"M/<<+%;jAm/l.^0ZHbn!j6-al+C(V>O-2:;qWL5c'(C\jZo,o14?0BqmTH;uejc5q-_@u+RrkF-9I/(8Qjrub
%>rG0(CA+GG1YdC:H2@oO$FQ[,YkX7hBh9O?Md,Ffitk6L/uBRPS%?H^pKGr)o!g5-RXqTHJudee#S1TD'7Rc6aoe\V6>aWcce/%'
%Kk/%d$T9k>!F5o4Y4Y_Qk*AHXAgY($;k9>p]("IWd<eM)6i:2&9:?6FR*Z"_gan6*:3RgV*0Fo+,G=qiB*88`Nn:O<`^DmlaOk<b
%Z*"NRd:WMAlNEj<NPClOJ>)PFP+!iq.tSEj\C)RU8/Hlh$0:QB)Q4&$$2q1I(S3kG<X;D_m3D8(@#nHUC.g0I3MRm[JscY;KArNb
%Kg0p>]75MZ#;'Z^_JFUe]Onucb[?/hTgUR)/N"NW)80Y?**SU(;q,VgE#74*E^@PeL8`IZH?L2or^9o<p6IOm6l(rtI5]faXE7;b
%';9!:S@UbODY6BSJ&a9-FQbVFe2d@&3RF>g^`TN#E,?S>XVl4*&ID1S]u/[GTJs\X"ns/6cV9E54;f_b'MPu>BF9hhA.FH<$QCOK
%%`Bb6L(LktbC?%ta?%e*N@$P\msfnJ2UlkkCIt9d*)M]1&i.n<V!Ger%a<ZJ`o]Q?R+r5R@rQ+TYB(Med.^02Srl.i>&j#iGr,%%
%`G+?'-,M<4K2W2)2B:'X8I&T6ReQenqJKCXn/?,=b^+MUA$YY[Ru.[VbkI)t3-^f2B`X\lDPgm=SY%X.9e+4.I[OETLb#BH]O3`O
%i]jCMC=8=jfs/UL@mV<s(*\.Mbq^%?rLL`5H>h*1>bO&-#[`s($e!YOjV;Lg1U:I*APYF1iUa%3$DUpF^nl4Y@cu.%7bN/;__>.-
%RY&<X>&`UUHJMP!#HnOI2W:B*0m%[Kq[J.)+^"i+aVAH$Hm=FDnf?T%8ht/%4W3m.2?su=dW^lr$cZ^'QChB4]B+;&5r>n+M?M\f
%e?XkTA%(`TVR#18e2dRjN$EGHrLs8g'B]0Y.%QIk[nQnHQ?ZgB`![hjl=P:U"3V"S66M*DTLC55$3sVkU3g?[0Gnf`K-tp'$<-5W
%n+!%ie<:(`K2N;T87_%#Y-fI#dcpc09a^hb^>)d%Fd]-47nq=Ph[e*#)aU2j7CsHGP)XWo:hhRD6LVuZ<A8hPO`:#GlUl(%0J%nd
%/sQmP:BSgu4DlpC\l1?jJ[0dJN_YCn\L:phjC$_Nh.Ho54JarTTm&Wg`!o$'(g4XJODkG9n>Im?]m95X*U#W^-2Dncf3e&%E1*'R
%H=UWQCgPl<%\MsB$M>^#I1HeG.1d_[M[Gb*j&$"I/nILmSqK]]hH2+Ff;.TC!caZ=8:Z5^bAOb[!6Ipb^1&3b=pEFf<[QorL"n<p
%*#fhU65q3M<#Hgj&Dr)m`Z`r8_":$kQa.%PBZYf.N5W_+ebq7b*MOYM6=O>UJt[+;g/+^q?_^t!70Ejo;q&<S)bTtQ(:eH@&;;$0
%!F_?B<Hb2*,Vq$CI'.`mZdfqu_pZ@Ept&F]Vi"h"I!U$3!gSfQP+8:<TpHnD82JOo)L,tLUe?W9ggPgk"\Fk`C.+9jTq(gQ+[>G2
%bt8rm;e\ll\teB*#uViXWd6HnCA/B?K.:.g&0u<J]j\Wa0dp;Mp_8R1i`bWF807/S&s\@B1?OcK)6<%gU+SuklQR;9`R8ai-@2X^
%@+3P"6/6.?RgjWqRVj#-;$*Wl0)`bc^tG8-`WCn<#DO(t$q%?8W'tE_Q3-lO*c0UEPQ'd&khHu]SqAi+T]()5)gk;_eq+!kW[BF^
%@mse#Hi@\>W@OajE#Vpp[%UG_F<fb>]YP?+]Gs27CFTrkO$*[4`mj"\&62CV,f7^V]M5IO?PM#j(H?Z3cDR?`?oVG"J6-t9E6fFO
%_T,7aLo?C3qFX3>hDA;R)G]dhMQ!"5XU<$fF.W_j/>>[NdV6]f@3:dPj2Tr_;Ep[kpXL*.EIf7r$Dq.n^d?:>3mEqR"@`9`cLU)T
%h_j0moD8-=k^^k`9K$.<9mgV9ie[-"-YUMYE6<.'l2W2#+q3"bnd2\AF)^.7&*$h&+t3BRV87,hiGUs0q\>&q_>Y#PV6hB\(B13G
%1<^?a(M@[FhR!rJ2N,b[BV\I7>+LkQZ7[pP.YK#"d*cER;$@l>!Kq]\F;`Ck+Om$"J^;9jiQ&c+mVn^2dM[(U%(%hq8[lf.&24.i
%2-^#G9Yi)%,Bj2Yl&E9H$jf,jDSs5!<Oe>P!Y#lY>7J,X;E:l9U[Optc"MDcr45RWE/EEr:&.'B&'Wl1Ym`UL_jV>,GhK/%43BfW
%F#/_f^kWA)I)#uWDRVALSV"Xn(CjW:GSY[p<54R#WS2]p=+\@<kQ6W&2%AI86Wq*To/Vq!Sf2ZZlagZ)'7c9@\8ias-i,>\YK64R
%]InEGHNpIopnfhu`sG08-ZO\Z@=&8R+-kK);)3b+`aDso$U&k,fF+B.#h=X+`/n432X`P6p2cWEQmtGkd_k74b=:^/k1V3k>FL5Y
%TRUD=(Nt^ri#Rf/<-M:el<IUOUr.><B]$2A8Xc&I5N0D0iQg"E%f8RMXb'F-WVm"M>7b,cTamKr&O&mlB%a-Tg@W"$Y"EpoJgqoQ
%2j=Cmcl%>Lj=9i=Ui]Dl@Sm#RJo#oXQ#*pj-V[JC26)'J-@\4M6U*2F2ZE`+_`sTHM*(!JTCJoBf-@gB_V!rl*pFg;]G+B&0DXg]
%roa=Y?6G#*47A$Eq?oPN02cCa,k?8_)r5ke;P\'&=qa!.7+1+,,E#<ZO[M#DZ7a5PL@c\]e/9.3ikb[s*Reo`p'n)]3fr7mN+]N`
%3Z0nkSbr,Uci(0<Z`L!5?ZBA'P%_9TP9-Bm$24)Y6JgUG?X@9+4_UOeDt+OiPP(be60asulg$*M/hoK/0Z5&"P4Z+o[M15_V3E+a
%)"R6VH6_m,G$Z#YL`F*Rh1YhJPraX9KSYAe[gd"6dKr=[>[KCs:/7n)Wf>gr+'Z+JTkPO^DBq,%&Q((HlX^"@0)*r>eDcOY2'XL-
%<'KXe)_9J:3fdG_*9hP5G](VphhC8<&A?Gi#HNHl^*7mlM[l)4ghKUH9(n2pHZHCN]mO-go;Xu7HRK1os10s@>'F)SXC;]dr1G+:
%-17/^C\5s%Q2^-rXrippD`_6SJ/inMq6Sb7*M[f2kbPL3ks=)VbJ8"k-Rh$o88&4,\"HibhXE0B,DL%sN(r@<Z9OiB@YLE,)9X*O
%0)sulTBrU8+cTs,Up'Oe![XW@=)!gflhfK0`&B-23p$?+00%9ooGn*Lc&kM`'bDPq#*!YlPR*Nbj;`RPU;<_/JsbV&[mGT?`G*X@
%>mYiQAV7VT_?@>fSNe4S/uS6Ia*:^#P3Cb=`Zh!]r2n`LJMO.#r<aQZqI#J!UQ'5LB>!/:%riHfN`4B,]71qp+q,AoPM:#JhOM[8
%NsKXUL'>_bM$a?H(S%fN>FeCBo#e<6@(Ug3fE[gK-0OP_@cnbG7dp)*e!Td8cXNMpghd:I8TO*phM*o]\],[3Ha[#08ZNmJ:.Zfa
%_igO7R??9+,e5.P->eJ-]AGi8@h0)!rBBJpNa]r.?Go)$Nh)JR0!Pj9IP?eRKurYa$Q2mB16H;.qS'2eiVR\I<?Fqc2QD26a69hJ
%F%KM4I'iSUK:ZpZinO2e'5\@PEWf@pUk+En2rC'7,eg10Co@\*Qk6U.D]HpQf`*j)epmY-s![PgZ_iqEL%!_pq,49>eI&N[WTS#N
%k_XY;qWJOCjCDa2<K<jPjNHhR&\LAk+Hmq[4XSq5Z1[C^ipH"SgU&'9ZBZbB%>k[&<LtsW`[hZ=K6gED)CR[P+'YUp+dMFJq,^SM
%lZX;K;sHF6UaKc2]i``"Ea^6mCT5sf2$D&UTr/\bCV-Y]Y*QH1YL-W^9["isMQ4TW>6U`;:2?%\b>q<N'RH!9eZ/SGJ(_WYl$Fm\
%`Nb8)I7q>i\tf),7(VJ+WfGYIqP<EcImpX.]2)j_G1C09FJ$Q0>gPT/[u!iJ'Bc>J1&('H+h#VX'#""g`nqt0:7c]a`1;8AFDFdD
%WL9s+-blgpM)o0JKUP-$G0."']Ll;S@Dul:2gm]CbfZTS-/Pk;B;S9BCH(a.CsQHkZB`jaPMUC]]T:B:j9`h*LHjA<pomS<pZ@7(
%p!4lQS,/%C&adR:j^.9*H(fR5.*/Z)>,eApo5[6G^0*qR`60m$^.!<8!NRs18R>HnAR2Q.DD_4UmlG0s^$a<4^:SE8-(J:IOM)SL
%eDqh\MX0AH#Et==N0=:%MRBrH_4u4VU1m[JVV1))K".1io(!0X5,hAPT(+9g]2H2L'BEh.iRs8HB%8C/(!G9R3dQWYr:nLE0r,BW
%7>btt+T@5<dRVPn_jZ2nb9F7<dnfQ[1q^V2NjaDCmD360fJ[&QkS%%^::4oWqmlVjV81OieZ>LB<p?>]lqfkAYCq8J?/;A.rgY:C
%bMs#R;eNFNR-N66jOr#-<Sd1tO*<i&m7/7rVV3CT:NF;i;*O@`3[cU]]hg$U2*4:&/:3,cKc^ZBSu'E$*okQZ<hK)Gg,4s?rpsOM
%W=aFIrjP"nYYg&Ps8.lW14T8Ss6&#6r#[8>SmVM'rpP@8a+%g0(dI?0);F$ZYY3F6Krbp.GUZ4GZgE]"pq0'_?]prP;UoQ2]S?0P
%MOa8F;*eB6[l"c.E(CG)hCY$&8Hd`SbU.NXTQXRPQp_0cP1'4aJ'KK2-9q7k@r'dR(9#Pe:F0I^gN0f)#?><I(A*SK]oKbP5RFnA
%^]2Yb2'Zmb.,+m(@W"&p[(^qN"\ZMSNb8odHLKaGoQ<;3LgDKIUKMi0UsJ?2MUAgqO>T[j$QYJ:d]NM[OC%k%BcjT`S67M0m'^dn
%IH9_oEU`fi%R.(uX5I0flO?M;rK3DNO*jG0m=%"M=T&O-lSK-YJB)!R6+L2_m2IbDEImpY8bX=?NthB32j0dpT5Q04aihIsVlatX
%cOEP.AL9])!$>HZq`8(bTN!Q`;s!.m3!n57aCR>2c,fVAEW#e&N0;K^o`0K1c7e#NR@D6?i3._*p#LCO:?<]od=1c1G<FsVK0H-U
%jsAtE-'VoTqhrFb;*6RbM9GZ/+g4?aXCEcTHe5,'`?mi'F/D^5\pllRe)nD(:6U5)ddg*.d:`2`1.Bp^M=.Y)Ri%A$a]?hdK)K33
%XFAO.0nZ:f@D=%CPQ(Uh0rS>Fmj9Zhoq-b\q&as?AVWMXiVb)#"A#]E[b^GZ3/AUgm.P%5@1W&_G#7p#OLs?HfZ=q7n\qQb6pH7T
%)hRE2%+1sf`9DQHi;INE`>A!k<@4[-'Dk(B9YK<ho*=rKC:ples/)r2'nMrPE$:[O+Gao=4'q%=gFb;u,n6sZCnpdWOo?Yf,Bg!e
%d0h%/Q<4pN5T6<?nUY@d?b]E'H&O2OUj=O7lDDg8Q6AjnK&@GN`\qZGj:CDAk]nEiU4"Be63j@bX4mOFRl9N,0/Pjt"?'u1.F0Wu
%F`IH(WRJ;IEa@SmUr!1?PMgjogP/,g6AaAS?8YF_2X/3.?hK3dd;c96quYJ4f.sV)a#:lMU3Jk]!VC4K>oK9U2Z.PgWB7hTJdYq4
%M7k%@1Kp**-5Lgkh3A3/CaWDXrW7X([d7nL:K;pc\#Oi=#GP`W<g^X7K"B]W.qQ(^-V!<0%"#5E4XHXuYBu=MdHeC5ji';Na@dg,
%/p'q^i-2Zlp.g;fSob-]3T@t,7i8:GX<`F#IdkC'r;H#EnhL/fJj5<A+4[GgfrQDF_qtidqLr#'>Y#rfkh530X_tOI"`-g#03Ps=
%LosWE9n;p)c\iL$gPP-:ETXK!r"`Lf[Kc[^!\1>S2Z([7HZ0N^g2WqQfog3%:B$\:H6mUFHSK61,]io9SpN7'#jc/$lJ;+mG6o>S
%n&:.PdYkrK8HDP?pM)A1:HX/047DQ`T(kS33dFf'6S)Gb'Ei]2mm:??.]uBSlULq!g9P'sN3A/ukM+[N*G,0TO*M!7]YBDWP#YhI
%;2t=1H:+HKq-N+;kME,9,0D),aT1"2`:DHFhKfDi!nTXiH9,I5%b&A"*ao?l$"?R&V5Bm[0&]'De/>'Pqa8F5+otebTl8sA8G'K1
%g2$aa,YmjC#U`.*cCA6+O502BkE&I0f0akr3(9hgYq=/2)lfE.EO0l`F#*OU$a3hdN9S$Z+cj"<l]Pa&.7IIh^SVme?!7h2oq(pm
%O#Z5(GljDnY##m;m,kKH?qr`@U!L"@^G8r@Z.lcc7CiMG[M3tFK*XG)a=):>%HF&bWdh&:C*u?0=)2Q*#SdX91s+DV7.2JcZ8j<Y
%nP98=*Y(A0Jf<58"RGPa;(oA1^*V<>>]SCQ>@L7NUpuTlGo4qaWA]`r/pn7*n.]ETKST!?bjuYL6B-.8W/.<7#U8h1OiLg$PQJU;
%`fmEtn"1][o99ceW"9AR8HlCf)=%])6Uk'<D;qQ&d!jXm*tI_hL4Ykd(19A8o!R&Of+jS#[j7*&>#)^95Re!-kFS>>B`hE&k%0SJ
%r9jZqVbe"cO8;D1Ld^H_-JE,;C6EVaKM[h`P,dK6&ZA1dX8]?bap?Ae,ft.e=,JBbcSE!0CbAZ$JKjBRm%1;W8<V4*c4S5@HWAUZ
%'Np?-?XCj^*s)>58s/VK6h<KB2.VU9<K<4.B-Meu(1Q(BB)0)YXnMA'dloD68C<D2?K2j1m9`d\OKsGcm(ufA6R_<mpb+,epk?.8
%TVrGM:K20oMc06n?UJ`1GbgG;pE,o="4U--f,AFg=H(OH8M2>\3;8,j.A)]X^I/n1Bgn^26u=N(a5u2Z[k;j*3`-SgfU^cr-fbK$
%o7/.O&[+G0YVcZ^s1D6tbTBkR7ZJA"qC<uR1tBVbpTh7+]q-[EeZS<9r8qW=0l"O*K#%K!'=,>gn.1A7.Ob9r#Fi#Hfff/"%N7!%
%Vf),#/QOML+%R,A#@Dd955!!m_-!Z_!1FB09M(*[`_oW.CLBU_'$1QR6jqU^/L79a+i+7Xn32=l4TY9j<BG'lb"DP.m,\?i5G.lX
%f;q2%AaXQK8Pb[$%Sl&0/>#NS-C/0qf[$J>/&<AK/7"^SL@j"9/k2j^@tHPunP972kS"knn/j>VhX68X7krC6Pta>I0?*p:s!^2p
%<a2"f[3!ig4Qep0:TO(sa+\r\53C"**'\UO)85[<Bap]N1]gNcqBl^]$[F!,l/o\gUaqc^U"Tp9p+`<<eo-&S"@_V.XW11V<MV^N
%FS#AR]4'6MpQ9Hj`SXb7AQ=@Z.QtE_8eD_)g*O--8``7Lb42cb2E`OI<8W]7)AK0QCu:4)EQJdjboaH0kZj2e>85d&ON>YU^uDrO
%*e#UUrM`j,LjjY,k`MV0ql;rbc&eUsJp*)H9uh0$@fTG#Eh,\s>UHuCY_CfWm@W!kG>k>Jj`5*"*T2sqn8?VKYu31!:cl;Th/bf[
%TfD0(b&339odi6N6&g6Ia2Y_mhCBoC1?e9n#.eJln1lGi8C3up#6JE#Dbr7"(l&[Mn^fI-<m?<(5/HcG!+Jc\@IN-#<!Qi3hF%=c
%YK"eO9guZ()`iP8j-om02&AGl'a%)KjqBjM^2+dkD-gBHB0-E7Fch3fL-4-If_6'GP#!4Y97*sGg[].pH&<bF1)a,TbcmhMQ\LA?
%b/`A93@Qq?34BVUR`JC_AQp@_8iGcVmQ*'S^K@F6Hip+s.[V]k\=gHj3n[-G?D2R:U8G#SJ<MJ8_WaE%XPi2/%D<^-m'JdO_.a'O
%:25<fQoST%[GiEhJak_*I#ScF^PQKd/!`[kg_0=]4[lf<T!*=L3hLf3<aCj;@&ekU-#TJC3jD;Krpn-n,*E-_Lruk>WR$Ib"'@aR
%:#fcCXH9p`MpoV&+KfZXZ++_Jpf'QPhYDko6kZ!g\5B#KpY$9XlUo-cC6oW+8591F]tRS]OH[(HZefe8=Wa"N]jNhK**K9UMA2#7
%A_N3GT.E61@!]7,Cj$1HlLl)#,%,_?%V$.,f>%:@g[t""-A`koo2?LU=1o2Eko!%tKE#7[1\$WFDPJLLBG'/WK!WrA!gEcH:6)`,
%d(IWHElKd3Z+`O<!2eJ$D6[%1e.a])VVQO,Yc&oXZb>o[g,_h)4M^kCQPI.IlbEesIYBU,H%Ti^20s8)J?U>Fd*ItI6q;e+1"H3g
%m9d11j-j.GGTj9(\8tFIXEG^4,%J9n2;?k"#;'aH]'?]7nnE1(9]JGd7.9/VA*25Uj,`WQ$;gV&LDMKo+0H?fjPL)l<Jg>)_,73M
%Uuqk)B&JAVbf@u_"C2p>k@LZA'K]);J\3bepHTC)FOdAd\saq@Z9KYp;X]bIC>(i"$mQMLoP)cXYgX_7?C/7k\m&d"hG,`k$)?.?
%4W1QjEXJ8g\mg;mkK,%%P0Xu5ILPMO$G67KP+[S\I?'(Z(J6eXLt*5fD8h9>9$]R7Es;cWHt?)2`oCWVHIOg`Js_F@)&*t3Ij&ph
%i:!+nfTU)P5=qk0-np(7AU]QAo+RMUCP'fDium/U]:'TNi,Ak!XaJ[0rTq>0?")Pg1A7&7m[G6_iq$/Cr%r+GRV4>.5H<jWL+;g(
%:lQtg[8^3Adu0u<SN`:YD'r&o'g,.<(lVW[Zo@km@bO!tot9RF\>L>=DJZnI1c':@V?S$OA"*^YfYJ64n4psO`4R(r'$mLnkmZ'L
%7;0BhD$KSNl6%nc1ndiu;)aToFrA(p\*-^'3s,33]"uHYnbgi$B(TIe?=DSsQekQQ:&1mVpi^3)SVFo^1oci"D#WEaPBt1t#k"FC
%?[0lUA`Ee925eH=X<^/O0!tB-%?LM`o8=,ZXHR)BTN(g+>kta=,\P]=U9_qV#&5*.h"Q::B_FtQic=Cn+?sDPd([if->*@[IA!rd
%`X):rnW6OC?dgWU_IrKXnk;8`YD-sC9>GGCD*@^9!N"<+CR(G>')%O_gURo)a)V+Z<O<Y'I,&b0q;uEMI9mb\7^*eI\po"4oL]V\
%*+LKDclidhmbG)+NqOtlC.1@i-%=-Iq@?(,ITGB;P*Ok>1lGn@gEJ#P>ZmF0OQ^qo0PllYA-=HdkA=JZRTVpdif5ZJ2)&V2"btIN
%?kJ0G+l/^KW]CL8>^'/RkkE,OWUqOV4CX'm'kr5=L,/n\:*aSdN'%P4/=\V>@Ar`H'BL'2[g;&j)W2B#bB"]%5kBO355Xm-1^BQo
%_Mc["/Mk%/"=s]g=mrQ*b_"Oq4+6.RAI9c!WFIuSr,Z9arj*LWrrbi05W@X;p7_O6!nBmTmoUd>_k(gfK1'CQJ=6Z?[-JMb^Udl_
%F'W>;LD34+lo;X=H%N)C!9f);@l4.7CdO*C9_>/d8b7/-N+nr60*e$M4I3:HTWfmFTP)3PX*Q8?U2pR-UmXd:$JiU1MPAA6(NlX0
%,aj?hgWp@GkYGQXWgKPhBic9_8FP<VQS=>"En)JH7$t7mOf&PCOALp:5B/Jf1R(JPUM33pn<WeE<h9pWWG$8W[&E2\%R0D;X/gtq
%[HXZO.I[@mO$qe>T.Bg'\7b>[el9looj!AS(BLB@'UEqfid&4fj2D-&L0Nm37GHA;Wa=Zmktf90!GXKthVC'@<ZG8'"/..lk!id#
%\Xa8]6N[<D<rQ?3_`m5s,[Ea,4lSsc3T,`c7Itf[=AA39g%B7KWnU@R1pQKmLC;L'Rs=W0Rr8atEB\p'kKiJ>k#IusH6\T&EaMnE
%"beQ"_d.,2\0+t<AS090\(5q9'thHYk#HGf9C-'lj;B-+,;,\5*)nk]T<6OISR:P-VU:)nctYB@#q]A`&j;ST5,Rd:_!Srcoo-hO
%G-,]4d=5P=oeE*sA.3_2X^\]M"t*[,&D-OGd+q5\9,U^`ghuSAYCRW]_DG,t5;#V`S91Mkj)g]^2WXn;m+PVq95a(-@K&X/(m5+7
%Fh^%"i'9tg6_"_&KqUXhJK?n39hbP7Nhj'.mILbi1CQ,+X*s]<W`6P\8^KcR6UHg%=S7!giR^ao8^'hEXsr[9+(H/,6)CLTT8&m?
%\Bq;kC#_Y,[Gh&G5_:J!"_=uO2Ma\VU!Q]''>cSt&b4E\0%t,^k1Jr>k,nmo,64AWJJOKTga+uF#!Tj7!rrR;J=;(gLg?qKjZ&X8
%$,q_d#jNd^,-nAC8FMNS^2-5eo+@EYa%1EFL%6_dR&4Z+YRcJBj1kSXamhCQlcil8_(CNd!7F.+.(VOE*b:>f+pAQlII9)?B>OFb
%,B%aM&"ZmuiToo[3V^.1o>j8QeH\#-Pi"`)"s-i)qn`j_=kI`L"`#a*I$b2Wet_(u(o5`I1uZLk]_6$%@4+^9I_7k[_%@UOHB0ig
%(lg/oVW@<^9MgK7<N2rjlCj+[<EF5%Iqh6h$oU4B[JWN2cOZiFlLG!O8kl##WfNZTEjPhaqQ!)5-!5,<cVn*"R$&_&d]a_X-T%aS
%@6Sh=nD?N3+r+gIlGYMU2<cnI(DR5HKuH:+d/GnsBDOrn&oC(%aN_NP'3lAB@5t*Gm\l81Zuha0+UVL,h6?07d#GbSSg04(m'e?O
%G_"\F&u:'/mqGB8-?NS"ZK@&5i;2u&K2g`._4=Q\]tfV3S:'!&+R45SGr@_OMPZaD>ddt8NU1\*Y(r3mW`"[`eu#HJ$'30q'OJ33
%L2bPbVL32c#rCsmcEd$nA0=V7=BupK\N[qp4<i>J#t9k;mP6@oOsW6-S=k'433h2G*p]A36aa_Vlo^*K'7d,gmEn0<NMJl7Up"^G
%S=4bbhSlK"!92d*hT2Z!]2)2/rVBIPqt%_]A>Kc:AVd(L+6*S.9*@q^.gSZaS.!J>E1@`_%[Ik80LSWM9cSkV6(d.p?+-7oW+Y%_
%o1Y+KTuK+kE+8NWA2[5[:#;P^I5]Gs,m"iS9dtS7THll5o4!R[,U[9B3]EWKSK8$s,6<j8)B)V>NWGDjb]Df65!\ee]a]'BJif#O
%<2@RM%1gS@(H8dEI\(D?^<rnuR-Dt4/CM%4>"mG[X[KeadP[=q!<G17P8NHg^BFNM!fueXB@&oZNgR=;XqdYLY;(P46C.N_A<^..
%>Sdh%n7o)0\&\o<J\*/>k^K.X<MO.JoqB?,6C&I9kJW"7YLd0eGpH8&h.cR&Iisie&FeY;ghoVr/D8:=%6l6'Z\!cLEabk*_t&Y^
%[pCM`^_Y1ROd=Fm/i)7@\\FtU'FG?eU;lc$5IhQO;G`ck;sFn?3m\3WJfJ`c<.Xt!V&gt9)C`^a[hsNb:[\B1+*oG\[m^:P`V0OL
%"Zi^T$5G;'E1";TF``E!8A#^V<Q%l,97*>d!lB)_TrQ9NiW'Tb.`*6n&_B@=DOnmE5mX?d"YK:[/EhMJI9&4@*Q'qhZ=]P,1Z@Ue
%n418oi05$bP9Em:oaZO0,Eq*sRNZ*ODfr>OT^EbN)f*`5)Y0A/_4]Bm$n>_[q3a,aARU=!=%_S@ZUdR712eXD)>[UTgj1+L%Q>nX
%JZBbQRkjKEqQ<Ra@Woq4MAuc_CH4/]7Kr0]6&.s\=G1mLOj#f?7,,'r1cqXRn1.)h'XGZ;XjTBEP>^*mQFA1A)Y4?[]1PFa$TC^9
%PDK@!k-gYk04&\A,*(^/qR4T*#C-PY]tSK7As1A?*p7[<KZaGEWgdpHf7RjpK"7Si3?Lc,!`?RSRdO!tSW"`MEV;qLT\dL>l#G!_
%ks]YCLLekm7a!,,Ie*XW\b`Wd:O8-E=*OFJgr-&_TQgi8En.Bs:hlqkE6>s)T)^PsZaITY>j<IiVqRD>=NK$978?=d:iWE]E^=f(
%<X(>'i4iH?a'QEjAu#7[]X#MbOHj(K7A7>rggjp5<_UE8JW-=qYFX_-]JM*?<Y([>*W4W[Qp-LuWK:Wt`oQ1;"&3`ts1\n]@+9RU
%7`PoVMk_oT!+>sdA/).4]:pKcZ3lSKMIU$/jMT=eU^fum!Z?\".`3LP-Aj>+'m^'JFP`][RPNmqPs2.d:]:*c:l%[;jI&953?Mo7
%RGX>sod0rbBEG3K7$(];0)*>f,M(GN6-@[L8<b;-aW;*%G#B#^5qac'#uY0I@Sst>P=c7\BV+-V8bIT?d!*'c$_ZYJ4+1s$muD\k
%!#c1+EVY3miXOZ^2praK!,YU;SCi`tE+/o3(IloC34lLHrrNu=.]V\=U<YdLL\3W21FSVp<"](@9$"JQn(_f_:4`@0B;8iJ<j_1!
%0@8sZKCQQ"ISeD[N6T!>=Ga=PPXMqaSX_"5P1;#YMa`Cc)e]O4Z=_hsORWLP"0KjND`-.5rnrI4C*h'a^'eguO%d^VSSK%Q0s]^O
%I;kCGil/_cgpno,O;<(kP6tfK_F^I9j!6B-K1<D7P6<mj?ZlBtYmY!f_X"#H>7f.a_SX\H;#%hjOg8(CMXgI!6iHbSDb1-#F$>,1
%2R4mj>-PH)jU;HGe5n%m?gKgemOdhD7>K;!'\A]pKAdGA3YmmIh6t,&+dSBK04bY7gqmod[6f)i%(FBn,fT$LJr=6rR[))0/$$.&
%iZQ[+00A((s2bEf,AC5hBdb3sPX8I)g=\j9]9&n!Y&f"JfG2\*PrBZRKSkc@I0g'jior8fI1UMR8`E9!WG;-Kk%W?_B_Fo5Q-V[f
%;OTsDk.AlK'&[1"Un+N$"o;[4Z/,L21?ofT::^q9(.-,u9bSN2@4)RY]KIn>'SuN0PC`[mPC99\l>Fn9JTL)J8<mJLG\C35K"_HB
%[8"gs;XcA5belCADBsn[H@;T<=>N!!Z$C.I\rJ-T<S"K:@2WmOg)cjCX\S9F!?cAm91W%o(Jp&JYKieuBFN@^"o_s#&RN4*FtRMm
%&0t=I9K<1tC0n)'Squ#)?[*GC$.A+"Db0V7J3SY:SbVdL>[#^tY%pj=.Nb<MKW4^2pXAh,!d6^CPP7t55R&>W%hStnJ6H4QJ[B^Z
%OG[.f#5924)+YWP96ID_5Z4lX*OsB*`2T"c=/Q$Jf!*L4pjtUs/;'LM2]40YoI#GoB4*1p<@,GV\Jl!5G=&/WY6hS/k6$hT\-LI2
%)'>Nk:D[9KWm<(P@OY=-&nBHKf*beB5g;Du;?B_Ns.\3"nKbj2<Wg0lem(9Ie$Wde(0(_fR"_>Sj_s*EcNA/g<<f#5i*b]#AM=gq
%"F@.\2:.;GMpJYm5`d\CI1W&)7L=sc)A7'9=u-!`0Zh,1+Ud6#$ulkDO\IR#^rtZuC@jkNpW$mi'=CkN<$:^uo13L]`lJi+bi&8@
%oAmd3,<`!5O=pHeKB`gf23j3XR$!W%)W6PoT(j;snWl'\1I@/G"/42l@f.Tbi'Ma8ggca)nO-pV4]\9M+B^Vgh)oWa6jqZe?0PiL
%Qkl`di4gHZdC139nbFmp-+g;i,B"n4X4*%aNK4%OH>!nGkA>t,:[\CnOO3kq2*dcY]/=n]#9u.U,:9eKqbQp(qhGE>BNEpC0.ss6
%8F9_-R$?W^Lr>-7=+)9]jm%F,"<f@n`nQY8.s_CRM#ZB=Y>3M?9#t76$([[Z%Vjci&TFdZe%;352+T-7cgB60!V`BPfJQo&Mqp3V
%]7YDlR!LU+[":?2P$eF*S6hAGgq4WaqDK6cGou1EU#K*=A[.Kf7J\rV-)rD;".UtfHL\EkF)%sneP6OHdk$aP@G_]*?[*35rU%(r
%9YQSqJL?S4"INH9`Bo12og^lP@6lS;!/Jr;6"mu7jYA@G+8^"9mmm]Q@4D?Wk7qEa6@o4,M(lDPOJ&S,.@HU?@#k_4LC$K&>V(R8
%*&s<!U:`tPJY:R<dTaR\Zm6O"@5XCUk'5j=Li&c'^-IU87et=Gb3LA@7_f5qdj%fZQH@-!P<^"u(8/o3kB(9Of;_L,_`8S)CE_c.
%(qtS:.&MXhKs4[CK?iM%+@2CnAP]&m\[<"'!r3j0fic:[UaLnY).1?0=m^Z-#\2SbE]Ajd5&B(brgQ!MH&*g?%ScB2Kk']JpFq@*
%F+LUcUtc\El`iWd\9NB<ZRN0--dU,%p4Hn$J3Dm&C/f:PLU7Q9Rc43f"^RSb;Q[)aZfM$&eAI0i7Q$$/XA8u85!&Hfc-9cN_/DO4
%l;!%^0>(o'qbgOo5prgJKoDF=A\-$XMfM%gFCk9b(Z1F8TeG84g:HNG+\!m1lD%le,>7`lD6sm6Qq0QkZF8+W2<PAE]9A6d9%IGL
%OR23nO\0NP@<&@iYSOT5LNm1:k'D53i#*%F"FacFiJr-&nQQonnoN=<A<k`q-+T+-6sX"$298E<Q>#o>)5oDO#tjeG$a>2j-*q:N
%X[V68V@!`rNk'u+b6MU1jC!'tNLTL9&rY.&I[DoL`FWgQf9E`groQ(sZ/j\inI6Rn)&TB>Q:QdVc:kOua$(RS0uZtl=KNqh'N330
%R.Q5@Z'!M-GSE69aErNZ7Q,!>E26aHq&^8S8jU+Kp(IG9.P_\RF!(,`U6_jS)\(NG#_DOiFl5^12%O2<&3!3-KVZI=$$76YfJAJ5
%cQJCn_arB-b^SAOQ5!+_-b@eKG3/u>9*%2B*1!sRY\GjpSY)4api&Q*`Uk^][o1Tj1Z>A,*Y=>gQ2u;D9r6`bUHsDVi:)0+SP:'"
%UpL<WDRft:[-?jHYOLOO]0k1pq_=(Q\4-B,\ptEt+B%6FhHTP6c[,I"*I]e6#9TTi/%SX_Cg:a'/n[dU/>,HRIBnto)PUH?Qhs(c
%e];f>Nk(BPrt%N<T[oA.BYgUeSo9pFC.1YPM.U,QS2,Vgjk6?X\/R^`ledG=6CN]30(<[_6q[V?P4V*SZs^R]&OQRi:.?<<g7)CD
%PrdT`ftjYnPDgaH]"1"@eg&b(mT;D'0Z]Nr,UN4[\dnV9?h"$:=ALf$2`/;r"br4"?nK;ZFc$=L@(S')GJkS8IL0-@DN5H8WCbEe
%5f)l[ni;#"MZ\WtQ\_e_bH;(q;jK2]hmbanCO&9G;K%VE!.'91nSRg^U;5JDbAXN-QAs*mI3d+6C8;^PRr*dF`Be]*-jlRG.c>#K
%,>^`C.5;3n*6IR]_:)5RNIb@K;:ln<,`./,ETb#"@-TQ*K;&!rH5V;gJ3?K=h8AnjB:B49hLfSfBi,s>Z^QGr\^$T!p;G+2kdniU
%5Eeqpkm@1ukTEV:72UZ_[OZrGCi!-4<fh,u0>JcK2%%fF>tk+2P.3t:dbOnGBtG&7CZZROefkL)]G@<h%!ln%D(pW5G3r&?fi#di
%JfE$VG9!K[3LZ&GXdQe>I]*Bon_/Yq@\Nj$]!^pa2+KuhB#\DDS`4';2JfR\l==&dQ^/1fGkm^jbb^YhP?!76/(NVT@VUU8D@]<3
%l]d+)U[B%R<$fP=B=4VM(sl#O`6IQgWV428YjGBe0k"Cg:cdU#o2b,F!P5#1Qq*D+;i*8QfDEtW'fbb%[m)p4pL_]BM/!D;XmK(C
%<9dbYJaF*7U7tjmPd2l7YMCSS^3c]X4/C\h]K#Wfk]%gJ2j4KC)nP_X)BRWKGC_0W%68`m%5.li@&n'3D+-(;qQ3&W#LZEB$Q3ur
%\%!Wbes7Y3$s0V[94cTnb5%VF>Ba0#cCp=lCB!qM4[[T-ab^=3DHU+%ds<EnD(6D`'T`RRM0(?1&U!,]e#Mp<rJ2A@l<VTqZYctK
%J#5_A2(k/U@=F1hG+jOh-&LoYH-X@O\'Y4AOh:NX<1Oj:_[']h,AD_:@pirj8Z]LCR*F._XLQ[$9[o6]%t!g;S#PW9"iV<s5J2Oo
%+nQ-nfN-$2\S=Jp$a\ebaHsL=?"=3hb0!*A=3[JT?Dbtf:a00[<[DCKDBHlDDH36Bd#";JVgJNLRP(Qk.ZH^^o/`\iHS$J*g'KZL
%DJL_uHB]#eS(:TH6Y.@8-o2d:TXkSDAKMa'(*D-^%_O#]b#5,WDJ-%%fdE[?dm-k!8^MR3;D5,uds%fuAuGCP*0op*nG!<r1JG4e
%4alU*_DcM5MHY&$5KsZIZ].p2)kcoM[E*)/G"-a%`TuMmL(%o%AVZ:Fj]7KM(!"IDB#Mjo"\=6M+</n7H4[0Qm%ANYR&Rj'a:VG_
%1FF++S_M1<4>L%?4e<an)1QKX_NE[h\*3+i_5Dd2>L]OHS!`%pPsL$SD^S:pdfb]/4SQp7aMSd?4Hc*0&uMYoUEUXG.-OG`q:<rG
%SBpI6&.#W%o6VCt-U3qt8'6Yb:'2Iah4`]W"Ui?<LeN080X/iX$(H`dW+laOf$H_qD@70,X^l'*K&<lQS;3Xm%'^EiW]UtGWp:N'
%!Hu_EjBeT+b`ld@7c:W1[[.Z5(]f,:RY@C?IU9L?,%Dn@%5'b$X<l!N,?'<X$sH]#W]sV*(?A?%:O-!.e#dedB=B-ODDR!cbmIGp
%(3[.+A^k4s83/3N.<5%36d<J"*:sTklMS[/i1\8V1(8AQR$W['AsVP@c4nXI`_kb9bkMUGWd;m,YlG3X!>HnU?5/SO(eHB<M=C4^
%VDXZ89hCnUeukq1W(meSW5pHZ+1Lri>T*UupVY(+3\%5AUWWYUm().fp?D&g1'(OcV7cm">=dHQb[,M;CQ,^7=j?4l+g88g3'(a4
%AB^]`]sO[`6%B?F3^>2I&8DU=,g,a\"(024<98\N_6/)d0A@!uMn-U)Q)B)aD=33%hE^JN=H,%D86J*Jn'VT2=nWBQ-aW8WKE9=f
%(Z]_:V23[]=%.AfAW+M;<,bN@$Y\!'0$J3<K=6iE@+F`]%+/]pF%+_M`9,^l.X7KG.(/H,O>s^^e?h2AK4Ca3?9f8=IRH6UYtl.#
%*'YX5eNg2sI:M8rLWeKRPHFtVAHcd<^iO>Q:%-jJmct;D!-^g4%N;nCr6d<I4J@%iHDrZul18!_>%L,a"q4O-4dG`^%[O]Oe$;&/
%QB@=JmEJ*mWpWsVCHS5Wg3N3kNn9%DqA-ZQaL:ScmiMrhVl\60oa,Nah->J:C`h+$[8jl>hone0`9[=8P$Ff44LJ<6VHa/nR7kEN
%6'l7\Lt)kD@c7,QFd7#7c$&FQ\.t@QELk#9OTf7sh7kEkkRZ[aT'.7@'4kE6QK)uJo/SWRUA;YdoO^3?C7JT?iuGXuncN`-LRqt!
%a0Fd;1c!Z!Zf:s/!BJW[fL&^/^bkAIBt*Ya3EESkIdq!'bM;U^CnM*BI3W`r9W+f)Yel"_A7^lT1mU7/,U,Uh/,P^&#B6`\p(!)b
%OD@*0-L6*<^p\MNdD1O%Pq8t)&?Xt4fe%diI'*/V__cN?#C<HJKkh`FODR%0+S:3j\F9s7`L.oJ)+20P(;a+*d21BWILO\%CqcZV
%/I>?KPp23LU-b*kC8f%[O%`"YX=CFBSOYH[0Fo.BSS5-n@11??K/.Bh"R>[X!_h,Sr3Mnm2_]lhE<aBhb%MQPHDqS1cA46Uh@:lb
%TjMQV6bD+kJ1">ooYbh8Skr69ElYspcD:;WWsA&b%in2j#5UkX:R_Wjd030^,/,e"1+um#Ep>ekVZ"Tl7M;;Q+QOnQ4]+4j.g#,T
%e\:+?VH$RmoqWAp1"4#d&@XF\+9Ahik/EJ.@Zc$R$PI!tFl^9!'h6iKQWl_dUR]-!-PEHqOma[<jTg!oS;q\]ji_9coBieA:Y?>e
%T!MQ?A>E.IF.&"Y:HFuRDLV?`p2mfP7?&k@iPA8o3&q56>o2-s,M@4cUST>L"U4&5AEIVj$p4.?*Qr.UnNNO[)b8iXdI"0fSJDI/
%3OWR2rg^lBNYuF&i]]0/E/o4X<>B$R"!(MQ$sV0;E^brl\WJJo'b)iPf]+\,K6hcU>qaR]jUOb*JC=AWnKCq4FukD=N3)Z.$O_if
%eR(CYF>TqIb*Wm^_uc\q)=WstIMt,IX81+^k2MH.0":%7pA55?J'Xr)@F60c&9%KC(IGeE%JmAHc&.=6>^l5>blo]E)4_+!,?04\
%ruA3-bK/"':/([ZdJd,sTtmWOk&a/8,dT=[]#,USA`Te;7s>rK-]<]AhWmbjk,#DE]lGl+h-NXFdCRY`]jeX`GV1\oE?WUY37/J?
%E;?H*9llC%UbU,5=f(q(h<'Z@?0D]ss8MQccjFZP;*BZ#6+>Y`VClpY#)UIa>e<,t;gCZ7\qm8/cM>kZ)QC\#_21FYLY_Ml:FaF1
%STlNo`l)_Rd^!k<eeA`6Y$Wn7)!+rkQt0^D4M-OW=R>qdBP<Fpm%BZ5&;1e2I'3DkPcqtXDd#O8Q=>eHe>5:U?.pnW&tLH^ba[EY
%H7at9dP\Uo!5l_SFD6<$pkBWN*t6$4WP4rDB(T&<0%CK:@*ScXh@JW;/Sd^f^J@!4%oO8W>*4+:)l.#q<>Nd@G(<d+k9GEiE+W(N
%^4;)U,b;k\3KH8^graZ!@s`?C`\mc_OHODYIA%]9"2fu1CA*:lAl>21EX@>9S1<lr`VK[75I1SsOh/&KEHM[rJo7:&%j:*jir*9+
%>dO&&%_?WLMK2`aX_bkQ<K3&jI._hO8])_'X=s\i9sDg1Q%'oIdXoJRBrEVL7W"j3inSCeONF/-AH5u2"bq.]_m^Rl;V2S[K]%M*
%c/N0MHqo/:O5)`I?,-n!NcU3O8FNoqS`UJ?FHoJnd\,ULIFF0P]HW:EGtnurIE,)1#+lpuKt#"m\E`B!8XAYj>+]JC`jd7qAi9c$
%O2aL@Y_Tu=RE%^,J88,k`(qQdX,!pmbEWL-\@VuH[5J@W7)H5cGD3ra>NDg!%'n"`V7<Ei,j_VHdl_@$8\r":\k-4(";8U[H.H5C
%boStRn\GrAiYOTa?8tM>.[P:`VL);1"@p6V#,1HD$Zj(8rIi`0]26.]GFPMu?#G,jM8FF[)A1UHF?dEhQ@<dQ))jhX);GO*8uDRB
%@0_j2HYog+eJ5s,>f&,'b/hF:p8l!f?\#YoT%/$=pDJ6#!\b,+QIU15(m/!&?]DW70uI0q?ff)S3%J=-5=M++(VQ@h<D'='SSCaE
%5VD-Q4/eDO*W`=rpdNh\>*+>gb8LLhKNfJm@MbUkhCdTJM&NS28;d$Yi]:@o%LSs#IRQ(Q-qIi%(b*&*RFCh+2^*gT`>;WuXB'.i
%7LRUiRq3p2[U\)QFf^m!Aq8_3rRKj!#RQW"QQ<+_ibA/u:ch_TLL\6egDDi0L=I**A08OdMbLkj%J_K[epLn4]1,g($E?)YmWP\W
%NIKEe>MV_hL?^CS9h-!TqgVr><qA5.jdF?cEhRG&i_-.ubPLta5"6<pNtSS7QT^$d0#JH9[q\s6e@*c9GnPXUVl.m_e9S[-(3!(@
%Fg\CG2QS(u(J)k^E+)*lP'*aiS_m;/agtGYiKqQ)_,ZF<@L3M31q'=uq)!$nH]..tqVgS0Ha6q?D76BdTgerEISGat3e:Y"Q\LLd
%*T^2@94,o-\%oT?;e]%9rDi=0#L)o>:*$@<L>5W4;f0d['b<f2qK7M_%@lL__@>@/+83"t)-mgboMtHparoUX@][Rr_-Ch$(9^>M
%0i8M+/[-`Nnps[?1uN8(jPHk^fi?$FF=Dse"Y9qnHMCd]NaTS"+0R$U4_#ah^%[l8j1J^p<D/Fu50q:(3,:;k..sKuObr^UST9gn
%e3)/X`A?_RV-B]eLmu;kJs5jeN%0!J5.)jbru!@%$#ECc[0!]U[+_'3!QYF<M"dd\7JZYss$1Ab>AOJ8<:4"_ikBaZDiN6%:"P;$
%g!8R\Gh@i@-SSWrj%H;ae35Q4+ioFNl9CiXK%Zii;ZD1(Uo)YnR36<</P%VbV5:UH^fs]L9[f>N!?,>TW<HDAio/bh+kBe280(n[
%jlg'JZ.heh&C'44d:rGlr#u-@#,gAA-pF%rWWX.X`=?!c7)4]Ki9dK'G\0&&X!Ot:XVs'f5hM+n!ELU,len]=@#*/ao>0jU(-82@
%hF>Hg;KCe-W?$-ZA@/*AKdF.%^)G=k^E5al\9VgZ/KhC$]cD7nAnji,7sZJYX7Ue@G,F6A&^[4(a%.K!4<ck2d([_nA^EPfNmtq3
%%Xp:a!(T#:p=WP%BD;_$iYh`67EA<HB[ur(5<M2F"=+D:,/WADjZD";"aR(W4ch=?@@\8MUbn=[_h,SqV&uO?0&"Z1Egm6c$t7&t
%OWZNen%?8N#%Mkjrk7XAlBhD`AR^ThQOtmOq#Ka#.+Fs!Q:Ul,a;&k^n.crGWft'HrR"As5):t7ZU(onGoGoVo.oM^_uN`<BE:ab
%Ps<3!)B%^O!Y9/H!2IA84D$e5dQl,cOcbj@bL<N<M&_`%/Gp=:DFOP^X7a?1B;-/_4Kl]4@-ba^HVAe.@9p_'7K>EPNp[K#aEh9n
%re=;O!9%XVKB)gYfMaXG$/Ed_?nrJKZ*lW)NL4;cW(H(p7d<IYQ/Z5p/#4<cU=OuDW9j`]p!CkiCMJhnZ.H]R:JU_N&CZi4F&snm
%mq2CtVf`8,Of\*T?ZHDkhUT./Xd,T-@MOcEW4_`0O)&425JY="R,El+X!!IEemO$l5DEAYVPncZQ-YX#!.qWW^/>`+Rhea`!=pY!
%L:4Rm.F_9(>GsahhmF!]84KD59gGICVU@+!Fqasn9TVn3\^KQ;^Iok6'@ZMJ]'%3_#F&esB#[K@AjJ2X<Wcj"qoD_`.>+30/"bYo
%=j0Ep'@<9:1O/:ACGQh6&k0/G8F_Zb*8D.7>j3WX3h1IFB,r)0DEAB%0&LBXVb'%_aN(Y0;`D]4C^8.j[=ujW@bF]'P\G$3[@qk_
%?PU%Vq_fCua1KTmh<:^7!4!<X"(]$!%!of0!DT;Jk_q&3h?"`IdoT"6J6mq7^l8Q$cD$:;je_++GOqlLO&TKR46UA`!G:XHJ^l]c
%pk&A^8OpRJXp&U]69k(Im,4m^+$MPhcQf!J).5WsjmLkC%lj>1X:L.t6.Z@YZ7,8r<X(eG64/Gk\/;i<iqRNAD@)8P-cgP%JG6c(
%$=<7'6X5nD>H$j>8crCn[WHuhpdk_(^8QR11F4nJhL^"Y8XmLYrLbaEUWh8K'=81hccZ_T!BZ1MH((Fu[B)pfLAin[JnYPaqT+;j
%&JqHfH<5'^eol$!Kp5Se+/pL0i-#1r7*I;j14_p&;e3ecSO?RVb=Np[oD=WbT(K<D&7O$u_0\aO+-s\kL_V5["goDE0.7--:BN1-
%7.mP&"Ff<?L=ufa$F;>X1^m8tJFm(RgkEWJe#&i!1p@$MV0pJSHq)KrJ,oYUh,W;"4G6Q,7_oPE!c:3,l#Bf2pB3C@IgM&n^Og9o
%6kX,66PW@_a*)r_/BRIm*(6OA5Z/a?A/ue6T*]O7gr!6JqIA`n8p@Ih]0dh'H2%B=(F_n-6E:$4Kt5`a.4+duQ.`nI@&J]!pMU[/
%.\D1aqepql55j<pJ,8!91T9q!qA5!)Bi;lbd-H0qqs`=)Y7#gT](`+0IhKNQIAmj/rMI\&.OD_'fX;c,f&13sb:d^^e73=$f/*I#
%L"C3ZRg%E\CHAt/SV'dn_:(:<26$ch?\1Zu=j:tTIqoQJ5sm)\;oIOSX>p#GBs0N4kq)9"UAr?Q8q:6.=aSNI/j9'(.UHKVmaARN
%EZ)H!3_Oa!gd]&tDuPK<I4#j/qNK^6YA0A"Q_RdO<kX]q3j2?1(BX)5"h`t&QeU+"Y]$9[G!0&9Wf2HMIe0U8k"jk"+7YnD1<%b+
%0XIk'2QOL,gp26;MRkp4(A&2Ui8[$UhqrNm=oA+iC;RWtQb:]M/T5_cf_Oe2QJ%++oK'OaA=ts$Wca$IP1'5^Vors$bT/]\?C,A=
%Y)1e]pg)7<5W>]L-7-(6$7NGG*B=4B9%\(\Iub`1Q;,l*f]m8JI!C=r>(:sOQW.eUP-=d=;:YQJ6q2HT2Q`gXNO7kprRU.]puZ3R
%s5cJis7k+dJ,f>Vs8Dr;?i8mer;<2%qnr1.qVuf"p%A2(^\QP)rqtUPI/iHC5Q:1KJ,/LchuEH::S7XUj7e'&bFa7]rmRM>o1siN
%6n\$<IfAqGrT:KtrXXi^'SZ~>
%AI9_PrivateDataEnd
