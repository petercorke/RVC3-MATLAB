%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.7 (Build 19H1615) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 372 228
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 372 228
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: DYGIOR+Times-Roman
%!FontType1-1.0: DYGIOR+Times-Roman 1.0000.0.0000
14 dict begin
/FontName /DYGIOR+Times-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /parenleft put
dup 34 /hyphen put
dup 35 /one put
dup 36 /comma put
dup 37 /space put
dup 38 /parenright put
dup 39 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -416 1 index div -877 2 index div 3482 3 index div 2604 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000041E6670676D00000000000004BC00000588676C79660000000000000A44000006146865616400000000000010580000003668686561000000000000109000000024686D747800000000000010B40000002C6C6F636100000000000010E0000000186D61787000000000000010F800000020707265700000000000001118000006C305740002054B001D054B0018039700130000FFE30000FFED0000FFEAFE420000054B001DFEBDFFD6031E000000B4000000B402FE3F3C0026001C007D00980003007D00DE00350017002800E3013E000300B400D000DF004C005A00C4004A00AB0147008A004E0039006D013D002401D200360045009E00BE00170079006F00D000460091002100B400BAFFC20017003600AB00B800F60009001D003D0058005A008C0099FFC400A000E800F5FFA1FFEA0033008500B800D5FFE2002F0080008C0002001A00250045006A0070012D0274FF87003E004E009800BA00DE0116FF3E00150034003C004400670068006D006E0084009800BD00D500D7011C0000002D0030003D00460057008B0093009700B000C6011F017B019D0409FF68FF6A0056005A006A006D009200C400D000E700F1011101BF01C7FF1CFFB4FFFF0002002300380042006D0092009C009D00A100A200B400BA00C700C700E400ED0153015703230334FF0DFF32FFFBFFFF000F001C0040004B005C006D006D007C0085009800C500CB00CB00DF011F01280136015501700180018A01C7024203130407054EFF82000000080026003D003D004F006E0073008B00900095009E00A800AD00AD00C300D300E3010901230241028002F40311034004510576FF7FFFAFFFBEFFCF00030005000E0039004B004B004C00740078008800890092009200B600C200D800DF00F000FD010701100117011F01B401DD01EB020002110229028002CA036F038A03AF0400049C04DD053E0587FEA6FEE4FF67FF95FFCBFFF8000200020007002500280037003700380039003F00510053005900640068006B007D0098009900AF00B100B900D000D500DA00DD00FD00FE011E013601370142015A017A01A301C401CC01F702020210021F022902290287029F029F02C002CC02D5031A031D03280331035E0396039F03A8049305640571059405B106EB0788FE63FE64FE76FE7CFEBCFF4BFF97FFACFFC0000700210028002D003000480049004C0051005400560066007A007C0085008A008C009900AF00B300B500B500B600B900BB00BC00CC00D000E100F400F600FC00FD0109011001170118011F01300139013C013E0142014301440149014B014F01540155015701580161016A017D017E0184019C019C019D01A101A301B401B401B901BB01CB01D001D701D701E401EC01EC01F702050207


171A9F0601062B13C40D191415C4217856182B2B4EF44DFD7CED72184E456544E6003F4DED39333301111217390010C93130015D040607273E01353426230722263534363332161501F69254136049120A432A463A423F6450AE2628367E2A0E08073734284C635800010050018E0247020E00030020400A003D03011A0500190405B801AFB3218356182B2B4EE410E6002F4DED3130132115215001F7FE09020E80000000020012FFED03B10560000E001E00924022AC01EB0CE51403C500D600E5000331003505390D034C0806A01E050EA0160D028812B80208B3200A881AB80207B1201F2FCCF4ED10F6ED003FED3FED313043794038001D0C261825142608251C26102504260D170A35000015023501071D0A3500050F0235010B190E350001130E3500091B06350103110635012B2B2B2B012B2B2B2B2B2B2B2B2B2B2B8101715D005D24121134270223220306151417163312171615140702212227261110373633027D6E213EAAAA3F212240B0E37F653E75FEE0C57F885B7BFF2501420131F391010EFEEA94F2E388FE053BF1C3FDC7B0FEB5B3BF01480102BAFD00000100E300000325055E0016006F4019761486140226143614020CFD6208E02203F96207E02314E00DB8016EB2136214B8017E40110D0C03020408150508070C1817171A0203B80130B50C0C0D191718BC0178002101A5015D00182B2B4EF43C4D10FD3C4E456544E6003F3C3F1217394DF5EDFC01F52B2B313000715D001615111416171521353E0135113426232206073525330262015270FDCC794A18281A5324016F0C05590509FB4C4D2A041C1E06365A039E30321D101CBB000001FFDE0461025E04CE0003002AB7003D030517171A01B8010DB300190405B8010DB3214657182B2B4EF44DFD4E456544E6002F4DED313003211521220280FD8004CE6D00020031FFEC040005760038004500D240899833A933E337F437046D397C398B399B39AC39BA36BB39CD36CC39C643DB390B03364C3402404433374037422600443342260041363F2601433445260023080DDA071B07471E0404380D0D1C0E901626201F50251C26922B2E323D3A3B1F0305453F16013F333807453E2B320B060604422E3B0703042F19271B1F1A1D47424435194647B021718D182B2B4EF44DED4E10D6F63C4DF4FD173C1112392F003F3CED3FED3F11121739123910F5EDFC01F50010F5ED1112392F3C76DD3C0110F531304379002B2B012B2B818100715D015D001716173521352134262322060735373E01373E013332161707060733152311141633323637150E01330706263D010607062322023534123312363511342623220615141633022E3D2825FEC801381B330C121F522D5A22102401020202020102A2A420450B160B068C019D020538294960AAD3FDB773608B427E8C9594


00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/hyphen 5 def
/zero 6 def
/one 7 def
/macron 8 def
/dcroat 9 def
/dong 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-416 -877 3482 2604} readonly def
/UniqueID 4327706 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68263D9BC79CC22555FC30C8CC45F0EA7FA6979C0C69989BA601085E91EA7C51AF16BFF9C5A381CF5171ADB17357090B65B3037850271FBCCB1F14B060087B70AB07F8F6EC3583ACD29E4883274800D35561C5E38BFD1D81FA1E040AEB1AC3D362E87E729BBFD91CA67DE8A616308E16B13AECC74388CDF5AB80816131CDB7953D589A9AFDA193BC383120537D370200A731BA3ECD5C1FE6324D72908CF68A357D6D655141B1BA0404BA8995E8B8AFDE279CB9A88D85B3345714E453F718B5C20255930C37CE704205A246293A836780AD201BB5EAF7F72BE0BE2593568B62B4D6C83B96C4BBC9AC371E2CBAFAD801AEEB232EFBF1413F08645B9F2ED35D719B74DF95C0DBC9B9565BEDA420EAEB9C47E3B860E3775A8E9262CBAD8E28541829800ED8E8BA911FA96E89E4F4DE305606910122C4B4F3247A664CC1B09CC0CEC1A6C9F05D754179FEE2140AC124624B5A8A123CC89FA8EE10A759FBFC6D1C4484EFB6F6CA7EB3DB8058E148C764DADAEC7038D7E8FEBD47BD9CB305FE70E31AC2B122A5AAEECCB9C1CB47F9852209CA772098383255344F4D89592ECA054C073112961DF871E38D1BD3589844E4CE4BF6132AF33B92C8033193F25D16CDBB6EEF4ED644FA789F51940E362D718D7D7C5E839D486CDF69A253920B6B8E9A6F037D5B64B23707B80778ED5FC1025E82B0BDB5AEAB7426FD75173F55F400D317D5D7F23CD96316CD13477A64F8C617A32A25284A614132C571F32E2F767BE1DD481685CED1D1699FE417D394D94609FEA7FF8036672AB6E5E33E359E0367BDB4102D3BF705AE1

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/DYGIOR+Times-Roman cguidfix
/F1.1/DYGIOR+Times-Roman renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 sc
q
0 181.91861 358 46 rc
-57 33.91861 m
403.79999 33.91861 l
403.79999 379.51862 l
-57 379.51862 l
h
f
Q
[/Indexed
/Cs2/ColorSpace fr
1 < 80 80 80 00 00 00 >]
scs
q
0.60000002 182.26479 357.12 45.451637 rc
357.12 0 0 45.720001 0.60000002 182.26479 cm
BI
/Width 992
/Height 127
/BitsPerComponent 8
/Decode[
0 255
]
/DataSource cg_aiproc
ID
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$
JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$
JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2AD
mf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96d
JH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';
JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$
JH16$JH2ADmf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:O
b5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eR
lN$JUb5pE!b5pE!b5qG>j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96d\H'eRlN$JUb5pE!b5pE!b5qG>
j8d@(h#PV!h#Pk(q#T:Ob5pE!b5pE!mf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2AD
mf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96d
JH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';
JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$
JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$
JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2ADmf96dJH5';JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2AD
JH16$JH16$JH16$JH2ADJH16$JH16$JH16$JH2ADJ,
~> %APLeod
EI
/Cs2 SC
1 0 0 sc
1 0 0 1 -57 33.91861 cm
70.586182 180.81163 m
90.065453 180.81163 l
90.065453 161.33237 l
70.586182 161.33237 l
70.586182 180.81163 l
h
S
Q
/Cs1 SC
1 sc
q
0 127.91861 358 46 rc
-57 -20.08139 m
403.79999 -20.08139 l
403.79999 325.51862 l
-57 325.51862 l
h
f
Q
[/Indexed
/Cs2/ColorSpace fr
2 < ff ff ff 80 80 80 00 00 00 >]
scs
q
0.60000002 128.26479 357.12 45.451637 rc
357.12 0 0 45.720001 0.60000002 128.26479 cm
BI
/Width 992
/Height 127
/BitsPerComponent 8
/Decode[
0 255
]
/DataSource cg_aiproc
ID
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=
JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(o
m/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"
JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5G
b5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_
h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GF
mfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5f'Rh#d$FlN-PWmfM;F
h#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73
b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!
h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!
h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5
mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$F
q>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1b
j8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXX
mfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]N
h#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;F
h#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73
b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!
h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!
g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4
pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3M
q#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!h
h#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4O
mfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsG
h#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;F
h#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73
b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!
h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!
mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsF
h#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5G
b5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"
\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'R
h#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lf
mf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$F
lN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YS
ncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PW
mfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\
h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;F
h#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73
b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!
h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!
h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5
mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$F
q>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1b
j8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXX
mfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]N
h#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;F
h#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73
b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!
h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!
g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4
pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3M
q#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!h
h#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4O
mfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsG
h#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;F
h#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73
b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!
h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!
mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsF
h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GF
mfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&
T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&
JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&
JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&
JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=
JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&
JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&
JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&
JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&
JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`KZ
~> %APLeod
EI
/Cs2 SC
1 0 0 sc
1 0 0 1 -57 -20.08139 cm
70.586182 180.81163 m
90.065453 180.81163 l
90.065453 161.33237 l
70.586182 161.33237 l
70.586182 180.81163 l
h
S
Q
/Cs1 SC
1 sc
q
0 73.91861 358 46 rc
-57 -74.08139 m
403.79999 -74.08139 l
403.79999 271.51862 l
-57 271.51862 l
h
f
Q
[/Indexed
/Cs2/ColorSpace fr
2 < ff ff ff 80 80 80 00 00 00 >]
scs
q
0.60000002 74.264793 357.12 45.451637 rc
357.12 0 0 45.720001 0.60000002 74.264793 cm
BI
/Width 992
/Height 127
/BitsPerComponent 8
/Decode[
0 255
]
/DataSource cg_aiproc
ID
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&
JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&
JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GF
mfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<f
JH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=
JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&
JH:<&JH;GFmfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5
mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kT
lN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#
b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@
j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#
h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!h
h#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eX
h#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5
mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kT
lN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#
b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@
j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#
h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!h
h#ZsGmf;eXh#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eX
h#ZsEh#cC5mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5
mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGmf;eXh#ZsEh#cC5mfD5Gmf;/F
\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kT
lN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PW
b6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#
b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#
h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$F
q>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXX
mfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqX
mfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;G
mf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/F
h#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*
q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Q
b6$K#b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#
b6$K#mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#
mfD5Gmf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5G
mf;/F\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F
\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kT
lN-PWb6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfD5Gmf;/F\H0kTlN-PW
b6$K#b6$K#h#d$Fq>oXXmfMqXmfM;Gmf;/Fh#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eX
h#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5
b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*
h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*
q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#
b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f
\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YS
ncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eX
h#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5
b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*
h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*
q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#
b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f
\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YS
ncA1\mf;eXh#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eX
h#ZsEh#cC5b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<f\H1Lfmf;YSncA1\mf;eXh#ZsEh#cC5
b6%M@j8mF*h#Y\#h#Yq*q#]@Qb6$K#b6$K#mfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&
JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GF
mfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<f
JH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=
JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&
JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&
JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&
JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&
JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&
JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&
JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJ,
~> %APLeod
EI
/Cs2 SC
1 0 0 sc
1 0 0 1 -57 -74.08139 cm
70.586182 180.81163 m
90.065453 180.81163 l
90.065453 161.33237 l
70.586182 161.33237 l
70.586182 180.81163 l
h
S
Q
/Cs1 SC
1 sc
q
0 19.91861 358 46 rc
-57 -128.08139 m
403.79999 -128.08139 l
403.79999 217.51862 l
-57 217.51862 l
h
f
Q
[/Indexed
/Cs2/ColorSpace fr
2 < ff ff ff 80 80 80 00 00 00 >]
scs
q
0.60000002 20.264791 357.12 45.451637 rc
357.12 0 0 45.720001 0.60000002 20.264791 cm
BI
/Width 992
/Height 127
/BitsPerComponent 8
/Decode[
0 255
]
/DataSource cg_aiproc
ID
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GF
JH:<&JH:<&JH:<&JH;GFJH:<&JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&
JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&
JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GF
mfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<f
JH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=
JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&JH:<&JH;GFmfB<fJH>-=JH:<&
JH:<&JH;GFmfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f
\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#
b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*
h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!h
h#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!
mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PW
b6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@
j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4
pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73
b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kT
lN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#
b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#
h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsG
h#Q73b5g?!mfB<f\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfB<f
\H0kTlN-PWb6$K#b6$K#b6%M@j8mF*h#Y\#h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8
h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#
h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1b
j8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;F
h#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!
g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!h
h#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;F
h#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!
mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"
\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1
nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#
b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5
mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXX
mfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73
b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4
pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4O
mfM;Fh#Y\!h#ZsFh#bb"\H0kTlN-PWb6$K#b6$K#h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73
b5g?!mfD5Gb5f'Rb6$u1nc?o8h#Y\#h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsF
h#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5G
b5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"
\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'R
h#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lf
mf;YSncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$F
lN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YS
ncA1\h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PW
mfM;Fh#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\
h#Q73b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;F
h#Y\!h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73
b5g?!h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!
h#Z=5mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!
h#d$Fq>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5
mf<1bj8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$F
q>oXXmfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1b
j8n]Nh#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"\H1Lfmf;YSncA1\h#Q73b5g?!h#d$Fq>oXX
mfM;Fh#Y\!h#Z:4pAk!hh#ZsGh#Q73b5g?!mfD5Gb5f'Rh#d$FlN-PWmfM;Fh#Y\!h#Z=5mf<1bj8n]N
h#Q73b5g?!g]I3Mq#K4OmfM;Fh#Y\!h#ZsFh#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&
JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&
JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=
JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=
JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(o
m/_b=JH:<&JH:<&T`OT_h#bb"JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`OT_h#bb"
JH>-=JH:<&JH:<&JH;GFmfD5Gb5d(om/_b=JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&
JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&
JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&
JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&
JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&JH:<&T`K]FJH:<&JH:<&
JH:<&T`KZ
~> %APLeod
EI
/Cs2 SC
1 0 0 sc
1 0 0 1 -57 -128.08139 cm
70.586182 180.81163 m
90.065453 180.81163 l
90.065453 161.33237 l
70.586182 161.33237 l
70.586182 180.81163 l
h
S
Q
/Cs3 SC
0 0 0 sc
0 i
q
0 0 371.09949 227.91861 rc
1 0 0 -1 -162 299.91861 cm
/F1.1[ 9 0 0 -9 0 0]sf
224.60284 290.91861 m
(!"#$%"#&)[ 2.997070 2.997070 4.500000 2.250000 2.250000 2.997070 4.500000 0.000000 ] xS
259.01379 290.91861 m
(!'$%"#&)[ 2.997070 4.500000 2.250000 2.250000 2.997070 4.500000 0.000000 ] xS
290.1012 290.91861 m
(!"#$%#&)[ 2.997070 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
322.94818 290.91861 m
(!"#$%'&)[ 2.997070 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
358.83014 290.91861 m
(!'$%'&)[ 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
389.36319 290.91861 m
(!#$%'&)[ 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
420.2681 290.91861 m
(!"#$%#&)[ 2.997070 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
454.50778 290.91861 m
(!'$%#&)[ 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
486.93347 290.91861 m
(!#$%#&)[ 2.997070 4.500000 2.250000 2.250000 4.500000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
