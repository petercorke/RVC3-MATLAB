%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig7_mod_denavit_hartenberg.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 2/15/2022
%%BoundingBox: 0 0 395 323
%%HiResBoundingBox: 0 0 395 323
%%CropBox: 0 0 395 323
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-02-15T06:21:48-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqkHkNbd&#xA;PKtlBb3r6hFbGa2F3IrIzG3neJgQ5ZvgZCtSd6VxVPyQoJJoBuSegGKvFfz189yQS6NY+XPMIhue&#xA;dw2oQ6fcp6wVVQJ6ojJZRUnrmu7S1EseO4ne3o/Zns/FqdQYZRceG3mEnnHz9EwWXzDqqMVVwrXE&#xA;gPF1DKd+zKQR7Zoz2nnHX7Hu4+y+gPKN/wCcXS+cfP0MrxS+YdVjljYpJG9xIrKymhBB3BBxPaec&#xA;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&#xA;uxV2KuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-02-15T06:21:48-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-02-15T06:21:48-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>395.000000</stDim:w>
            <stDim:h>325.000977</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:CF760677518EEC11A81EBAE6071F37D9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:CF760677518EEC11A81EBAE6071F37D9</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:CF760677518EEC11A81EBAE6071F37D9</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF760677518EEC11A81EBAE6071F37D9</stEvt:instanceID>
                  <stEvt:when>2022-02-15T06:21:48-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -323 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 323 li
395 323 li
395 0 li
cp
clp
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
240.77 59.1719 mo
189.434 38.582 176.172 34.4648 93.2729 58.7661 cv
93.5898 75.7852 li
176.484 51.4839 189.746 55.5981 241.086 76.1909 cv
240.77 59.1719 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
240.77 59.1719 mo
189.434 38.5781 176.172 34.4648 93.2729 58.7661 cv
93.5898 75.7852 li
176.484 51.4839 189.746 55.5981 241.086 76.1909 cv
240.77 59.1719 li
1 .129412 0 rgb
f
240.77 59.1719 mo
189.434 38.582 176.172 34.4648 93.2729 58.7661 cv
93.5898 75.7852 li
176.484 51.4839 189.746 55.5981 241.086 76.1909 cv
240.77 59.1719 li
0 0 0 rgb
@
302.875 165.488 mo
304.406 165.488 li
304.406 177.832 li
302.875 177.832 li
302.875 165.488 li
cp
.027451 .180392 1 rgb
f
307.5 167.801 mo
307.5 166.27 li
309.031 166.27 li
309.031 167.801 li
307.5 167.801 li
cp
307.5 177.832 mo
307.5 169.348 li
309.031 169.348 li
309.031 177.832 li
307.5 177.832 li
cp
f
312.125 177.832 mo
312.125 169.348 li
313.656 169.348 li
313.656 170.941 li
314.469 169.754 315.461 169.16 316.641 169.16 cv
317.379 169.16 317.969 169.395 318.406 169.863 cv
318.844 170.324 319.063 170.949 319.063 171.738 cv
319.063 177.832 li
317.516 177.832 li
317.516 172.238 li
317.516 171.605 317.422 171.156 317.234 170.895 cv
317.055 170.625 316.754 170.488 316.328 170.488 cv
315.379 170.488 314.488 171.105 313.656 172.332 cv
313.656 177.832 li
312.125 177.832 li
cp
f
322.055 177.832 mo
322.055 165.488 li
323.586 165.488 li
323.586 173.457 li
327.18 169.348 li
328.836 169.348 li
325.414 173.301 li
329.555 177.832 li
327.586 177.832 li
323.586 173.473 li
323.586 177.832 li
322.055 177.832 li
cp
f
335.656 167.801 mo
335.656 166.27 li
337.203 166.27 li
337.203 167.801 li
335.656 167.801 li
cp
332.672 180.723 mo
332.672 179.504 li
333.391 179.805 333.938 179.957 334.313 179.957 cv
334.852 179.957 335.211 179.816 335.391 179.535 cv
335.566 179.254 335.656 178.684 335.656 177.832 cv
335.656 169.348 li
337.203 169.348 li
337.203 177.832 li
337.203 180.02 336.281 181.113 334.438 181.113 cv
333.883 181.113 333.297 180.98 332.672 180.723 cv
332.672 180.723 li
cp
f
138.23 76.73 mo
139.761 76.73 li
139.761 89.0742 li
138.23 89.0742 li
138.23 76.73 li
cp
1 .129412 0 rgb
f
142.855 79.043 mo
142.855 77.5117 li
144.387 77.5117 li
144.387 79.043 li
142.855 79.043 li
cp
142.855 89.0742 mo
142.855 80.5898 li
144.387 80.5898 li
144.387 89.0742 li
142.855 89.0742 li
cp
f
147.48 89.0742 mo
147.48 80.5898 li
149.012 80.5898 li
149.012 82.1841 li
149.824 80.9961 150.816 80.4019 151.996 80.4019 cv
152.734 80.4019 153.324 80.6367 153.762 81.105 cv
154.199 81.5659 154.418 82.1909 154.418 82.98 cv
154.418 89.0742 li
152.871 89.0742 li
152.871 83.48 li
152.871 82.8481 152.777 82.3979 152.59 82.1367 cv
152.41 81.8672 152.109 81.73 151.684 81.73 cv
150.734 81.73 149.844 82.3481 149.012 83.5742 cv
149.012 89.0742 li
147.48 89.0742 li
cp
f
157.41 89.0742 mo
157.41 76.73 li
158.941 76.73 li
158.941 84.6992 li
162.535 80.5898 li
164.191 80.5898 li
160.77 84.543 li
164.91 89.0742 li
162.941 89.0742 li
158.941 84.7148 li
158.941 89.0742 li
157.41 89.0742 li
cp
f
171.004 79.043 mo
171.004 77.5117 li
172.551 77.5117 li
172.551 79.043 li
171.004 79.043 li
cp
168.02 91.9648 mo
168.02 90.7461 li
168.738 91.0469 169.285 91.1992 169.66 91.1992 cv
170.199 91.1992 170.559 91.0591 170.738 90.7769 cv
170.914 90.4961 171.004 89.9258 171.004 89.0742 cv
171.004 80.5898 li
172.551 80.5898 li
172.551 89.0742 li
172.551 91.2622 171.629 92.355 169.785 92.355 cv
169.23 92.355 168.645 92.2231 168.02 91.9648 cv
168.02 91.9648 li
cp
f
175.238 83.8711 mo
182.176 83.8711 li
182.176 85.0269 li
175.238 85.0269 li
175.238 83.8711 li
cp
f
185.746 89.0742 mo
185.746 87.918 li
188.059 87.918 li
188.059 78.793 li
185.746 79.3711 li
185.746 78.1841 li
189.605 77.2148 li
189.605 87.918 li
191.918 87.918 li
191.918 89.0742 li
185.746 89.0742 li
cp
f
.25 lw
76.7578 221.117 mo
56.6602 265.781 li
220.648 222.172 mo
182.441 212.508 li
0 0 0 rgb
@
39.0161 49.5391 mo
39.105 51.7729 53.0269 52.1558 66.8628 50.3052 cv
80.6948 48.457 94.4409 44.375 94.355 42.1411 cv
94.27 39.9102 80.3481 39.5269 66.5122 41.375 cv
52.6758 43.2271 38.9302 47.3052 39.0161 49.5391 cv
39.7188 67.4609 40.4219 85.3789 41.1211 103.301 cv
41.207 105.531 55.1289 105.914 68.9648 104.066 cv
82.8008 102.215 96.5469 98.1367 96.4609 95.9019 cv
95.7578 77.9839 95.0591 60.063 94.355 42.1411 cv
1 .129412 0 rgb
f
1 lw
39.0161 49.5391 mo
39.105 51.7729 53.0269 52.1558 66.8628 50.3052 cv
80.6948 48.457 94.4409 44.375 94.355 42.1411 cv
94.27 39.9102 80.3481 39.5269 66.5122 41.375 cv
52.6758 43.2271 38.9302 47.3052 39.0161 49.5391 cv
39.7188 67.4609 40.4219 85.3789 41.1211 103.301 cv
41.207 105.531 55.1289 105.914 68.9648 104.066 cv
82.8008 102.215 96.5469 98.1367 96.4609 95.9019 cv
95.7578 77.9839 95.0591 60.063 94.355 42.1411 cv
0 0 0 rgb
@
gsave
40.207 0 mo
89.207 0 li
89.207 68.145 li
40.207 68.145 li
40.207 0 li
cp
clp
1.59806 lw
[4 4 ] 0 dsh
65.8481 45.48 mo
62.8091 -1.15186 li
@
grestore
1.59806 lw
[4 4 ] 0 dsh
69.6172 104.059 mo
79.4531 265.313 li
@
228.266 304.41 mo
228.27 303.039 227.996 301.664 227.469 300.395 cv
226.941 299.125 226.164 297.961 225.191 296.988 cv
224.223 296.016 223.055 295.238 221.785 294.711 cv
220.516 294.184 219.145 293.914 217.77 293.914 cv
216.395 293.914 215.02 294.184 213.75 294.711 cv
212.48 295.238 211.316 296.016 210.344 296.988 cv
209.371 297.961 208.594 299.125 208.07 300.395 cv
207.543 301.664 207.27 303.039 207.27 304.41 cv
207.27 305.785 207.543 307.16 208.07 308.43 cv
208.594 309.699 209.371 310.863 210.344 311.836 cv
211.316 312.809 212.48 313.586 213.75 314.109 cv
215.02 314.637 216.395 314.91 217.77 314.91 cv
219.145 314.91 220.516 314.637 221.785 314.109 cv
223.055 313.586 224.223 312.809 225.191 311.836 cv
226.164 310.863 226.941 309.699 227.469 308.43 cv
227.996 307.16 228.27 305.785 228.266 304.41 cv
228.266 304.41 li
cp
.670588 .670588 .670588 rgb
f
215.402 300.195 mo
215.672 299.594 216.02 299.133 216.449 298.82 cv
216.887 298.5 217.387 298.336 217.949 298.336 cv
218.469 298.336 218.902 298.484 219.246 298.773 cv
219.598 299.066 219.777 299.414 219.777 299.82 cv
219.777 300.133 219.688 300.43 219.512 300.711 cv
219.344 300.984 219.047 301.297 218.621 301.648 cv
219.152 301.805 219.551 302.063 219.824 302.414 cv
220.094 302.758 220.23 303.191 220.23 303.711 cv
220.23 304.523 219.906 305.203 219.262 305.742 cv
218.625 306.285 217.824 306.555 216.855 306.555 cv
216.375 306.555 215.988 306.48 215.699 306.336 cv
215.406 306.191 215.262 306.004 215.262 305.773 cv
215.262 305.648 215.309 305.547 215.402 305.461 cv
215.496 305.367 215.613 305.32 215.762 305.32 cv
216.012 305.32 216.328 305.457 216.715 305.727 cv
217.098 306 217.406 306.133 217.637 306.133 cv
218.074 306.133 218.457 305.957 218.793 305.602 cv
219.137 305.238 219.309 304.813 219.309 304.32 cv
219.309 303.719 219.098 303.254 218.684 302.93 cv
218.277 302.609 217.684 302.445 216.902 302.445 cv
216.762 302.445 li
216.762 302.211 li
217.363 302.16 217.855 301.961 218.23 301.617 cv
218.605 301.266 218.793 300.848 218.793 300.367 cv
218.793 300.004 218.668 299.711 218.418 299.492 cv
218.168 299.273 217.844 299.164 217.449 299.164 cv
217.074 299.164 216.73 299.266 216.418 299.461 cv
216.105 299.66 215.832 299.953 215.605 300.336 cv
215.402 300.195 li
cp
1 .992157 1 rgb
f
190.715 215.445 mo
190.715 214.07 190.441 212.699 189.918 211.426 cv
189.391 210.156 188.613 208.992 187.641 208.023 cv
186.668 207.051 185.504 206.273 184.234 205.746 cv
182.965 205.219 181.59 204.945 180.219 204.949 cv
178.844 204.945 177.469 205.219 176.199 205.746 cv
174.93 206.273 173.766 207.051 172.793 208.023 cv
171.82 208.992 171.043 210.156 170.52 211.426 cv
169.992 212.699 169.719 214.07 169.719 215.445 cv
169.719 216.82 169.992 218.191 170.52 219.465 cv
171.043 220.734 171.82 221.898 172.793 222.867 cv
173.766 223.84 174.93 224.617 176.199 225.145 cv
177.469 225.672 178.844 225.945 180.219 225.941 cv
181.59 225.945 182.965 225.672 184.234 225.145 cv
185.504 224.617 186.668 223.84 187.641 222.867 cv
188.613 221.898 189.391 220.734 189.918 219.465 cv
190.441 218.191 190.715 216.82 190.715 215.445 cv
190.715 215.445 li
cp
.670588 .670588 .670588 rgb
f
178.117 214.648 mo
180.914 214.648 li
180.914 210.648 li
178.117 214.648 li
cp
177.664 214.555 mo
181.32 209.367 li
181.852 209.367 li
181.852 214.648 li
183.023 214.648 li
183.023 215.43 li
181.852 215.43 li
181.852 217.445 li
180.914 217.445 li
180.914 215.43 li
177.664 215.43 li
177.664 214.555 li
cp
1 .992157 1 rgb
f
1 lw
[] 0 dsh
265.578 142.117 mo
265.316 124.52 li
286.004 129.066 299.203 141.191 322.008 141.527 cv
345.773 141.879 348.531 132.164 367.363 124.52 cv
367.629 142.117 li
348.797 149.762 346.035 159.473 322.273 159.125 cv
299.469 158.789 286.27 146.66 265.578 142.117 cv
0 0 0 rgb
@
265.578 142.117 mo
265.316 124.52 li
286.004 129.066 299.203 141.191 322.008 141.527 cv
345.773 141.879 348.531 132.164 367.363 124.52 cv
367.625 142.117 li
348.797 149.762 346.035 159.473 322.273 159.125 cv
299.469 158.789 286.27 146.66 265.578 142.117 cv
.027451 .180392 1 rgb
f
265.578 142.117 mo
265.316 124.52 li
286.004 129.066 299.203 141.191 322.008 141.527 cv
345.773 141.879 348.531 132.164 367.363 124.52 cv
367.629 142.117 li
348.797 149.762 346.035 159.473 322.273 159.125 cv
299.469 158.789 286.27 146.66 265.578 142.117 cv
0 0 0 rgb
@
2.06985 lw
70.9019 169.266 mo
73.1641 161.594 li
76.3628 168.926 li
76.8711 220.676 mo
73.3521 164.602 li
1 .129412 0 rgb
@
.613971 lw
76.48 220.336 mo
283.758 304.305 li
@
2.06985 lw
116.469 233.637 mo
122.477 238.918 li
114.48 238.738 li
77.145 221.25 mo
119.668 237.82 li
95.4648 196.238 mo
102.535 192.492 li
99.5269 199.906 li
77.4531 220.254 mo
100.516 194.73 li
@
124.086 285.699 mo
124.086 284.324 123.813 282.953 123.285 281.684 cv
122.762 280.414 121.984 279.25 121.012 278.277 cv
120.039 277.305 118.875 276.527 117.605 276 cv
116.336 275.477 114.961 275.203 113.59 275.203 cv
112.215 275.203 110.84 275.477 109.57 276 cv
108.301 276.527 107.137 277.305 106.164 278.277 cv
105.191 279.25 104.414 280.414 103.891 281.684 cv
103.363 282.953 103.09 284.324 103.09 285.699 cv
103.09 287.074 103.363 288.449 103.891 289.719 cv
104.414 290.988 105.191 292.152 106.164 293.125 cv
107.137 294.098 108.301 294.875 109.57 295.398 cv
110.84 295.926 112.215 296.199 113.59 296.199 cv
114.961 296.199 116.336 295.926 117.605 295.398 cv
118.875 294.875 120.039 294.098 121.012 293.125 cv
121.984 292.152 122.762 290.988 123.285 289.719 cv
123.813 288.449 124.086 287.074 124.086 285.699 cv
124.086 285.699 li
cp
.670588 .670588 .670588 rgb
f
111.363 281.969 mo
111.113 281.938 li
111.27 281.188 111.574 280.617 112.035 280.219 cv
112.504 279.824 113.086 279.625 113.785 279.625 cv
114.441 279.625 114.965 279.813 115.363 280.188 cv
115.758 280.555 115.957 281.047 115.957 281.672 cv
115.957 282.141 115.82 282.617 115.551 283.094 cv
115.277 283.574 114.77 284.195 114.02 284.953 cv
112.223 286.797 li
114.551 286.797 li
115.164 286.797 115.574 286.734 115.785 286.609 cv
116.004 286.484 116.191 286.258 116.348 285.922 cv
116.566 286 li
115.895 287.703 li
111.098 287.703 li
111.098 287.484 li
112.379 286.141 li
112.504 286.016 li
114.129 284.32 114.941 283.059 114.941 282.234 cv
114.941 281.695 114.785 281.266 114.473 280.953 cv
114.168 280.641 113.762 280.484 113.254 280.484 cv
112.816 280.484 112.43 280.617 112.098 280.875 cv
111.773 281.125 111.527 281.492 111.363 281.969 cv
111.363 281.969 li
cp
1 .992157 1 rgb
f
.613971 lw
182.527 306.094 mo
60.9771 256.883 li
0 0 0 rgb
@
189.969 309.109 mo
181.973 308.824 li
184.027 303.75 li
189.969 309.109 li
cp
f
.153493 lw
189.969 309.109 mo
181.973 308.824 li
184.027 303.75 li
189.969 309.109 li
cp
@
2.06985 lw
255.828 252.5 mo
259.875 259.402 li
252.34 256.719 li
219.496 225.988 mo
257.234 257.219 li
248.52 222.934 mo
256.063 225.594 li
248.574 228.406 li
219.496 225.969 mo
252.637 225.629 li
.027451 .180392 1 rgb
@
164.758 227.547 mo
164.758 226.172 164.484 224.797 163.961 223.527 cv
163.434 222.258 162.656 221.094 161.684 220.121 cv
160.711 219.152 159.547 218.371 158.277 217.848 cv
157.008 217.32 155.637 217.047 154.262 217.047 cv
152.887 217.047 151.512 217.32 150.242 217.848 cv
148.973 218.371 147.809 219.152 146.836 220.121 cv
145.863 221.094 145.086 222.258 144.563 223.527 cv
144.035 224.797 143.762 226.172 143.762 227.547 cv
143.762 228.922 144.035 230.293 144.563 231.563 cv
145.086 232.832 145.863 233.996 146.836 234.969 cv
147.809 235.941 148.973 236.719 150.242 237.246 cv
151.512 237.773 152.887 238.047 154.262 238.043 cv
155.637 238.047 157.008 237.773 158.277 237.246 cv
159.547 236.719 160.711 235.941 161.684 234.969 cv
162.656 233.996 163.434 232.832 163.961 231.563 cv
164.484 230.293 164.758 228.922 164.758 227.547 cv
164.758 227.547 li
cp
.670588 .670588 .670588 rgb
f
154.02 223.281 mo
154.02 222.938 li
154.02 222.813 153.996 222.727 153.957 222.672 cv
153.914 222.609 153.848 222.578 153.754 222.578 cv
153.711 222.578 153.645 222.594 153.551 222.625 cv
153.465 222.648 153.363 222.688 153.238 222.75 cv
152.473 223.109 li
152.348 222.891 li
152.711 222.703 153.105 222.496 153.535 222.266 cv
153.961 222.039 154.473 221.75 155.066 221.406 cv
155.066 228.078 li
155.066 228.652 155.133 229 155.27 229.125 cv
155.402 229.25 155.754 229.313 156.316 229.313 cv
156.504 229.313 li
156.504 229.547 li
152.488 229.547 li
152.488 229.313 li
153.195 229.313 153.629 229.246 153.785 229.109 cv
153.941 228.965 154.02 228.621 154.02 228.078 cv
154.02 223.281 li
cp
1 .992157 1 rgb
f
.25 lw
211.492 274.266 mo
173.285 264.602 li
0 0 0 rgb
@
1 lw
185.41 267.195 mo
196.246 224.766 li
@
198.234 216.988 mo
199.023 224.949 li
193.723 223.594 li
198.234 216.988 li
cp
f
.25 lw
198.234 216.988 mo
199.023 224.949 li
193.723 223.594 li
198.234 216.988 li
cp
@
203.5 230.352 mo
203.5 229.633 203.969 228.477 205.922 228.352 cv
206.016 228.336 206.078 228.273 206.078 228.164 cv
206.078 227.961 205.938 227.961 205.734 227.961 cv
203.953 227.961 202.313 228.883 202.297 230.211 cv
202.297 234.289 li
202.297 234.992 202.297 235.57 201.578 236.164 cv
200.953 236.68 200.266 236.711 199.875 236.727 cv
199.781 236.758 199.719 236.82 199.719 236.93 cv
199.719 237.102 199.828 237.102 200 237.133 cv
201.188 237.195 202.047 237.852 202.25 238.727 cv
202.297 238.914 202.297 238.961 202.297 239.602 cv
202.297 243.148 li
202.297 243.914 202.297 244.477 203.156 245.164 cv
203.859 245.695 205.047 245.898 205.734 245.898 cv
205.938 245.898 206.078 245.898 206.078 245.695 cv
206.078 245.523 205.969 245.523 205.797 245.508 cv
204.672 245.43 203.781 244.852 203.547 243.945 cv
203.5 243.789 203.5 243.742 203.5 243.102 cv
203.5 239.336 li
203.5 238.508 203.359 238.211 202.781 237.633 cv
202.406 237.258 201.891 237.07 201.375 236.93 cv
202.859 236.523 203.5 235.695 203.5 234.648 cv
203.5 230.352 li
cp
0 0 1 rgb
f
214.125 229.68 mo
213.641 229.68 213.281 230.07 213.281 230.633 cv
213.281 231.211 213.625 231.586 214.156 231.586 cv
214.609 231.586 215.031 231.164 215.031 230.664 cv
215.031 230.148 214.609 229.68 214.125 229.68 cv
214.125 229.68 li
cp
214.484 233.539 mo
214.438 233.508 li
212.844 233.789 211.938 233.93 211.391 233.945 cv
211.391 234.242 li
211.875 234.242 li
212 234.227 li
212.141 234.211 212.5 234.305 212.594 234.383 cv
212.656 234.461 212.719 234.617 212.719 234.789 cv
212.719 234.977 212.625 235.461 212.422 236.227 cv
211.141 241.461 li
210.531 243.93 210.109 244.711 209.391 244.711 cv
209.188 244.711 209.078 244.648 209.078 244.523 cv
209.078 244.445 209.094 244.414 209.156 244.32 cv
209.266 244.18 209.313 244.086 209.313 243.945 cv
209.313 243.57 208.984 243.273 208.578 243.273 cv
208.156 243.273 207.859 243.602 207.859 244.039 cv
207.859 244.664 208.453 245.133 209.266 245.133 cv
210.828 245.133 211.906 243.758 212.625 240.914 cv
214.484 233.539 li
cp
f
219.387 243.508 mo
219.387 244.227 218.918 245.383 216.965 245.508 cv
216.871 245.523 216.809 245.586 216.809 245.695 cv
216.809 245.898 216.996 245.898 217.168 245.898 cv
218.902 245.898 220.574 245.023 220.59 243.648 cv
220.59 239.57 li
220.59 238.867 220.59 238.289 221.309 237.695 cv
221.934 237.18 222.621 237.148 223.012 237.133 cv
223.105 237.102 223.168 237.039 223.168 236.93 cv
223.168 236.758 223.059 236.758 222.887 236.727 cv
221.699 236.664 220.84 236.008 220.637 235.133 cv
220.59 234.945 220.59 234.898 220.59 234.258 cv
220.59 230.711 li
220.59 229.945 220.59 229.383 219.73 228.695 cv
219.012 228.133 217.777 227.961 217.168 227.961 cv
216.996 227.961 216.809 227.961 216.809 228.164 cv
216.809 228.336 216.918 228.336 217.09 228.352 cv
218.215 228.43 219.105 229.008 219.34 229.914 cv
219.387 230.07 219.387 230.117 219.387 230.758 cv
219.387 234.523 li
219.387 235.352 219.527 235.648 220.105 236.227 cv
220.48 236.602 220.996 236.789 221.496 236.93 cv
220.027 237.336 219.387 238.164 219.387 239.211 cv
219.387 243.508 li
cp
f
37.3091 225.102 mo
37.3091 224.383 37.7769 223.227 39.73 223.102 cv
39.8242 223.086 39.8872 223.023 39.8872 222.914 cv
39.8872 222.711 39.7461 222.711 39.543 222.711 cv
37.7622 222.711 36.1211 223.633 36.105 224.961 cv
36.105 229.039 li
36.105 229.742 36.105 230.32 35.3872 230.914 cv
34.7622 231.43 34.0742 231.461 33.6841 231.477 cv
33.5898 231.508 33.5269 231.57 33.5269 231.68 cv
33.5269 231.852 33.6372 231.852 33.8091 231.883 cv
34.9961 231.945 35.855 232.602 36.0591 233.477 cv
36.105 233.664 36.105 233.711 36.105 234.352 cv
36.105 237.898 li
36.105 238.664 36.105 239.227 36.9648 239.914 cv
37.668 240.445 38.855 240.648 39.543 240.648 cv
39.7461 240.648 39.8872 240.648 39.8872 240.445 cv
39.8872 240.273 39.7769 240.273 39.605 240.258 cv
38.48 240.18 37.5898 239.602 37.355 238.695 cv
37.3091 238.539 37.3091 238.492 37.3091 237.852 cv
37.3091 234.086 li
37.3091 233.258 37.168 232.961 36.5898 232.383 cv
36.2148 232.008 35.6992 231.82 35.1841 231.68 cv
36.668 231.273 37.3091 230.445 37.3091 229.398 cv
37.3091 225.102 li
cp
1 0 0 rgb
f
47.9302 224.43 mo
47.4448 224.43 47.0859 224.82 47.0859 225.383 cv
47.0859 225.961 47.4302 226.336 47.9609 226.336 cv
48.4141 226.336 48.8359 225.914 48.8359 225.414 cv
48.8359 224.898 48.4141 224.43 47.9302 224.43 cv
47.9302 224.43 li
cp
48.2891 228.289 mo
48.2422 228.258 li
46.6479 228.539 45.7422 228.68 45.1948 228.695 cv
45.1948 228.992 li
45.6802 228.992 li
45.8052 228.977 li
45.9448 228.961 46.3052 229.055 46.3979 229.133 cv
46.4609 229.211 46.5229 229.367 46.5229 229.539 cv
46.5229 229.727 46.4302 230.211 46.2271 230.977 cv
44.9448 236.211 li
44.3359 238.68 43.9141 239.461 43.1948 239.461 cv
42.9922 239.461 42.8828 239.398 42.8828 239.273 cv
42.8828 239.195 42.8979 239.164 42.9609 239.07 cv
43.0698 238.93 43.1172 238.836 43.1172 238.695 cv
43.1172 238.32 42.7891 238.023 42.3828 238.023 cv
41.9609 238.023 41.6641 238.352 41.6641 238.789 cv
41.6641 239.414 42.2578 239.883 43.0698 239.883 cv
44.6328 239.883 45.7109 238.508 46.4302 235.664 cv
48.2891 228.289 li
cp
f
59.6519 232.039 mo
59.9492 232.039 60.2769 232.039 60.2769 231.68 cv
60.2769 231.32 59.9492 231.32 59.6519 231.32 cv
49.9341 231.32 li
49.6372 231.32 49.3091 231.32 49.3091 231.68 cv
49.3091 232.039 49.6372 232.039 49.9341 232.039 cv
59.6519 232.039 li
cp
f
65.48 224.039 mo
62.2461 225.664 li
62.2461 225.914 li
62.4648 225.836 62.668 225.758 62.73 225.727 cv
63.0591 225.602 63.3711 225.523 63.543 225.523 cv
63.918 225.523 64.0898 225.789 64.0898 226.367 cv
64.0898 234.492 li
64.0898 235.086 63.9341 235.508 63.6519 235.664 cv
63.3872 235.82 63.1372 235.883 62.3711 235.898 cv
62.3711 236.164 li
67.3242 236.164 li
67.3242 235.898 li
65.918 235.883 65.6211 235.695 65.6211 234.836 cv
65.6211 224.07 li
65.48 224.039 li
cp
f
73.105 238.258 mo
73.105 238.977 72.6372 240.133 70.6841 240.258 cv
70.5898 240.273 70.5269 240.336 70.5269 240.445 cv
70.5269 240.648 70.7148 240.648 70.8872 240.648 cv
72.6211 240.648 74.293 239.773 74.3091 238.398 cv
74.3091 234.32 li
74.3091 233.617 74.3091 233.039 75.0269 232.445 cv
75.6519 231.93 76.3398 231.898 76.73 231.883 cv
76.8242 231.852 76.8872 231.789 76.8872 231.68 cv
76.8872 231.508 76.7769 231.508 76.605 231.477 cv
75.418 231.414 74.5591 230.758 74.355 229.883 cv
74.3091 229.695 74.3091 229.648 74.3091 229.008 cv
74.3091 225.461 li
74.3091 224.695 74.3091 224.133 73.4492 223.445 cv
72.73 222.883 71.4961 222.711 70.8872 222.711 cv
70.7148 222.711 70.5269 222.711 70.5269 222.914 cv
70.5269 223.086 70.6372 223.086 70.8091 223.102 cv
71.9341 223.18 72.8242 223.758 73.0591 224.664 cv
73.105 224.82 73.105 224.867 73.105 225.508 cv
73.105 229.273 li
73.105 230.102 73.2461 230.398 73.8242 230.977 cv
74.1992 231.352 74.7148 231.539 75.2148 231.68 cv
73.7461 232.086 73.105 232.914 73.105 233.961 cv
73.105 238.258 li
cp
f
183.355 224.355 mo
183.887 224.387 184.168 224.73 184.168 225.387 cv
184.168 228.105 182.293 231.199 180.652 231.199 cv
180.043 231.199 179.605 230.715 179.605 230.012 cv
179.605 228.512 180.496 226.434 181.684 225.184 cv
182.184 224.668 182.855 224.324 183.355 224.355 cv
183.355 224.355 li
cp
186.09 229.871 mo
185.121 230.979 184.918 231.137 184.605 231.137 cv
184.434 231.137 184.293 230.979 184.293 230.777 cv
184.293 230.527 184.855 228.34 185.449 226.371 cv
185.934 224.715 186.309 223.277 187.23 219.699 cv
187.137 219.605 li
186.184 219.809 185.543 219.902 184.402 220.012 cv
184.402 220.324 li
185.387 220.355 185.512 220.418 185.512 220.793 cv
185.512 221.027 185.496 221.121 185.246 222.043 cv
184.449 224.979 li
184.309 224.229 183.98 223.949 183.277 223.949 cv
180.949 223.949 178.043 227.324 178.043 230.012 cv
178.043 231.277 178.762 232.059 179.934 232.059 cv
181.152 232.059 181.934 231.48 183.152 229.684 cv
182.965 230.604 182.918 230.871 182.918 231.277 cv
182.918 231.762 183.23 232.09 183.684 232.09 cv
184.434 232.09 185.371 231.354 186.293 230.043 cv
186.09 229.871 li
cp
0 0 1 rgb
f
191.734 225.875 mo
191.375 225.875 191.109 226.156 191.109 226.578 cv
191.109 227 191.359 227.281 191.75 227.281 cv
192.094 227.281 192.391 226.969 192.391 226.594 cv
192.391 226.219 192.094 225.875 191.734 225.875 cv
191.734 225.875 li
cp
192 228.719 mo
191.953 228.703 li
190.781 228.906 190.109 229.016 189.703 229.031 cv
189.703 229.234 li
190.156 229.234 li
190.266 229.219 190.531 229.297 190.594 229.344 cv
190.641 229.406 190.688 229.516 190.688 229.656 cv
190.688 229.781 190.625 230.141 190.469 230.719 cv
189.516 234.594 li
189.063 236.406 188.766 236.984 188.234 236.984 cv
188.078 236.984 187.984 236.938 187.984 236.844 cv
187.984 236.781 188 236.766 188.063 236.703 cv
188.141 236.594 188.156 236.531 188.156 236.422 cv
188.156 236.141 187.922 235.922 187.625 235.922 cv
187.313 235.922 187.094 236.172 187.094 236.484 cv
187.094 236.953 187.531 237.297 188.141 237.297 cv
189.297 237.297 190.094 236.281 190.625 234.172 cv
192 228.719 li
cp
f
123.598 275.086 mo
124.207 275.117 124.598 275.555 124.598 276.18 cv
124.598 277.68 123.707 279.805 122.457 281.133 cv
122.035 281.617 121.426 281.914 120.91 281.914 cv
120.27 281.914 119.863 281.398 119.863 280.57 cv
119.863 279.602 120.551 277.758 121.316 276.648 cv
122.035 275.602 122.879 275.039 123.598 275.086 cv
123.598 275.086 li
cp
126.379 280.633 mo
126.098 280.898 126.004 280.992 125.879 281.133 cv
125.332 281.68 125.098 281.867 124.941 281.867 cv
124.801 281.867 124.691 281.758 124.691 281.633 cv
124.691 281.273 125.441 278.211 126.285 275.117 cv
126.332 274.945 126.363 274.914 126.395 274.742 cv
126.27 274.695 li
125.176 274.82 li
125.113 274.867 li
124.926 275.727 li
124.77 275.07 124.254 274.695 123.488 274.695 cv
121.113 274.695 118.363 277.977 118.363 280.805 cv
118.363 282.07 119.035 282.805 120.191 282.805 cv
121.441 282.805 122.207 282.211 123.785 279.977 cv
123.426 281.383 123.379 281.617 123.379 282.039 cv
123.379 282.57 123.598 282.773 124.098 282.773 cv
124.816 282.773 125.254 282.445 126.582 280.805 cv
126.379 280.633 li
cp
f
132.008 276.637 mo
131.648 276.637 131.383 276.918 131.383 277.34 cv
131.383 277.762 131.633 278.043 132.023 278.043 cv
132.367 278.043 132.664 277.73 132.664 277.355 cv
132.664 276.98 132.367 276.637 132.008 276.637 cv
132.008 276.637 li
cp
132.273 279.48 mo
132.227 279.465 li
131.055 279.668 130.383 279.777 129.977 279.793 cv
129.977 279.996 li
130.43 279.996 li
130.539 279.98 130.805 280.059 130.867 280.105 cv
130.914 280.168 130.961 280.277 130.961 280.418 cv
130.961 280.543 130.898 280.902 130.742 281.48 cv
129.789 285.355 li
129.336 287.168 129.039 287.746 128.508 287.746 cv
128.352 287.746 128.258 287.699 128.258 287.605 cv
128.258 287.543 128.273 287.527 128.336 287.465 cv
128.414 287.355 128.43 287.293 128.43 287.184 cv
128.43 286.902 128.195 286.684 127.898 286.684 cv
127.586 286.684 127.367 286.934 127.367 287.246 cv
127.367 287.715 127.805 288.059 128.414 288.059 cv
129.57 288.059 130.367 287.043 130.898 284.934 cv
132.273 279.48 li
cp
f
141.762 282.262 mo
141.996 282.262 142.23 282.262 142.23 281.996 cv
142.23 281.73 141.996 281.73 141.762 281.73 cv
134.59 281.73 li
134.371 281.73 134.121 281.73 134.121 281.996 cv
134.121 282.262 134.371 282.262 134.59 282.262 cv
141.762 282.262 li
cp
f
147.199 276.34 mo
144.809 277.543 li
144.809 277.73 li
144.965 277.668 145.121 277.621 145.168 277.59 cv
145.402 277.496 145.637 277.449 145.762 277.449 cv
146.043 277.449 146.168 277.637 146.168 278.059 cv
146.168 284.074 li
146.168 284.512 146.059 284.824 145.84 284.934 cv
145.652 285.059 145.465 285.09 144.902 285.105 cv
144.902 285.309 li
148.574 285.309 li
148.574 285.105 li
147.512 285.09 147.309 284.965 147.309 284.324 cv
147.309 276.371 li
147.199 276.34 li
cp
f
143.719 248.094 mo
143.078 249.266 li
142.094 251.094 141.188 251.969 140.297 251.969 cv
139.734 251.969 139.25 251.609 139.078 251.094 cv
138.828 250.359 138.844 249.234 139.094 247.938 cv
139.344 246.641 139.828 245.547 140.438 244.766 cv
140.875 244.25 141.344 243.984 141.891 243.984 cv
143.172 243.984 143.797 245.016 143.734 247.063 cv
143.719 248.094 li
cp
146.266 243.453 mo
144.563 246.531 li
144.531 244.375 143.672 243.219 142.031 243.219 cv
141.203 243.219 140.266 243.563 139.469 244.141 cv
138.297 244.984 137.547 246.266 137.188 248.047 cv
136.625 250.891 137.672 252.656 140.016 252.656 cv
141.594 252.656 142.922 251.844 143.969 250.25 cv
143.984 250.594 144.063 250.922 144.172 251.359 cv
144.438 252.375 144.672 252.656 145.25 252.656 cv
145.844 252.656 146.344 252.281 146.719 251.531 cv
146.938 251.109 147.063 250.719 147.266 249.719 cv
146.813 249.719 li
146.594 250.625 146.125 251.297 145.672 251.297 cv
145.078 251.297 144.672 250.344 144.703 249.109 cv
147.859 243.453 li
146.266 243.453 li
cp
f
151.883 246.457 mo
151.523 246.457 151.258 246.738 151.258 247.16 cv
151.258 247.582 151.508 247.863 151.898 247.863 cv
152.242 247.863 152.539 247.551 152.539 247.176 cv
152.539 246.801 152.242 246.457 151.883 246.457 cv
151.883 246.457 li
cp
152.148 249.301 mo
152.102 249.285 li
150.93 249.488 150.258 249.598 149.852 249.613 cv
149.852 249.816 li
150.305 249.816 li
150.414 249.801 150.68 249.879 150.742 249.926 cv
150.789 249.988 150.836 250.098 150.836 250.238 cv
150.836 250.363 150.773 250.723 150.617 251.301 cv
149.664 255.176 li
149.211 256.988 148.914 257.566 148.383 257.566 cv
148.227 257.566 148.133 257.52 148.133 257.426 cv
148.133 257.363 148.148 257.348 148.211 257.285 cv
148.289 257.176 148.305 257.113 148.305 257.004 cv
148.305 256.723 148.07 256.504 147.773 256.504 cv
147.461 256.504 147.242 256.754 147.242 257.066 cv
147.242 257.535 147.68 257.879 148.289 257.879 cv
149.445 257.879 150.242 256.863 150.773 254.754 cv
152.148 249.301 li
cp
f
161.637 252.082 mo
161.871 252.082 162.105 252.082 162.105 251.816 cv
162.105 251.551 161.871 251.551 161.637 251.551 cv
154.465 251.551 li
154.246 251.551 153.996 251.551 153.996 251.816 cv
153.996 252.082 154.246 252.082 154.465 252.082 cv
161.637 252.082 li
cp
f
167.074 246.16 mo
164.684 247.363 li
164.684 247.551 li
164.84 247.488 164.996 247.441 165.043 247.41 cv
165.277 247.316 165.512 247.27 165.637 247.27 cv
165.918 247.27 166.043 247.457 166.043 247.879 cv
166.043 253.895 li
166.043 254.332 165.934 254.645 165.715 254.754 cv
165.527 254.879 165.34 254.91 164.777 254.926 cv
164.777 255.129 li
168.449 255.129 li
168.449 254.926 li
167.387 254.91 167.184 254.785 167.184 254.145 cv
167.184 246.191 li
167.074 246.16 li
cp
f
300.379 6.01172 mo
361.551 6.01172 li
361.551 28.9531 li
300.379 28.9531 li
300.379 21.4731 li
274.16 17.4839 li
300.379 13.4922 li
300.379 6.01172 li
cp
.027451 .180392 1 rgb
f
1 lw
300.379 6.01172 mo
361.551 6.01172 li
361.551 28.9531 li
300.379 28.9531 li
300.379 21.4731 li
274.16 17.4839 li
300.379 13.4922 li
300.379 6.01172 li
cp
0 0 0 rgb
@
93.7969 3.04297 mo
156.648 3.04297 li
156.648 28.0898 li
93.7969 28.0898 li
93.7969 19.6021 li
66.8628 15.5659 li
93.7969 11.5269 li
93.7969 3.04297 li
cp
1 .129412 0 rgb
f
gsave
52.207 0 mo
171.207 0 li
171.207 43.145 li
52.207 43.145 li
52.207 0 li
cp
clp
93.7969 3.04297 mo
156.648 3.04297 li
156.648 28.0898 li
93.7969 28.0898 li
93.7969 19.6021 li
66.8628 15.5659 li
93.7969 11.5269 li
93.7969 3.04297 li
cp
0 0 0 rgb
@
grestore
313.797 14.4688 mo
313.797 13.313 li
314.953 13.313 li
314.953 14.4688 li
313.797 14.4688 li
cp
311.547 24.1411 mo
311.547 23.2339 li
312.09 23.4609 312.5 23.5781 312.781 23.5781 cv
313.188 23.5781 313.457 23.4688 313.594 23.25 cv
313.727 23.0391 313.797 22.6172 313.797 21.9839 cv
313.797 15.625 li
314.953 15.625 li
314.953 21.9839 li
314.953 23.6172 314.258 24.438 312.875 24.438 cv
312.469 24.438 312.027 24.3359 311.547 24.1411 cv
311.547 24.1411 li
cp
1 .992157 1 rgb
f
319.766 21.2661 mo
320.992 21.2661 321.609 20.4448 321.609 18.7969 cv
321.609 17.1641 321.004 16.3438 319.797 16.3438 cv
318.586 16.3438 317.984 17.1641 317.984 18.7969 cv
317.984 20.4448 318.578 21.2661 319.766 21.2661 cv
319.766 21.2661 li
cp
319.75 22.125 mo
318.844 22.125 318.117 21.8242 317.578 21.2188 cv
317.035 20.6172 316.766 19.8091 316.766 18.7969 cv
316.766 17.7769 317.035 16.9688 317.578 16.375 cv
318.117 15.7813 318.859 15.4839 319.797 15.4839 cv
320.734 15.4839 321.473 15.7813 322.016 16.375 cv
322.555 16.9688 322.828 17.7769 322.828 18.7969 cv
322.828 19.8281 322.551 20.6411 322 21.2339 cv
321.457 21.8281 320.707 22.125 319.75 22.125 cv
319.75 22.125 li
cp
f
324.637 14.4688 mo
324.637 13.313 li
325.793 13.313 li
325.793 14.4688 li
324.637 14.4688 li
cp
324.637 21.9839 mo
324.637 15.625 li
325.793 15.625 li
325.793 21.9839 li
324.637 21.9839 li
cp
f
328.105 21.9839 mo
328.105 15.625 li
329.262 15.625 li
329.262 16.813 li
329.863 15.9302 330.609 15.4839 331.496 15.4839 cv
332.047 15.4839 332.484 15.6641 332.809 16.0161 cv
333.141 16.3589 333.309 16.8242 333.309 17.4063 cv
333.309 21.9839 li
332.152 21.9839 li
332.152 17.7813 li
332.152 17.313 332.078 16.98 331.934 16.7813 cv
331.797 16.5742 331.574 16.4688 331.262 16.4688 cv
330.551 16.4688 329.887 16.9341 329.262 17.8589 cv
329.262 21.9839 li
328.105 21.9839 li
cp
f
337.461 22.125 mo
336.875 22.125 336.418 21.9609 336.086 21.625 cv
335.762 21.293 335.602 20.8242 335.602 20.2188 cv
335.602 16.4839 li
334.805 16.4839 li
334.805 15.625 li
335.602 15.625 li
335.602 14.4688 li
336.758 14.3589 li
336.758 15.625 li
338.414 15.625 li
338.414 16.4839 li
336.758 16.4839 li
336.758 20.0161 li
336.758 20.8521 337.117 21.2661 337.836 21.2661 cv
337.98 21.2661 338.164 21.2422 338.383 21.188 cv
338.383 21.9839 li
338.027 22.0781 337.719 22.125 337.461 22.125 cv
337.461 22.125 li
cp
f
344.02 14.4688 mo
344.02 13.313 li
345.176 13.313 li
345.176 14.4688 li
344.02 14.4688 li
cp
341.77 24.1411 mo
341.77 23.2339 li
342.313 23.4609 342.723 23.5781 343.004 23.5781 cv
343.41 23.5781 343.68 23.4688 343.816 23.25 cv
343.949 23.0391 344.02 22.6172 344.02 21.9839 cv
344.02 15.625 li
345.176 15.625 li
345.176 21.9839 li
345.176 23.6172 344.48 24.438 343.098 24.438 cv
342.691 24.438 342.25 24.3359 341.77 24.1411 cv
341.77 24.1411 li
cp
f
100.43 12.5508 mo
100.43 11.395 li
101.586 11.395 li
101.586 12.5508 li
100.43 12.5508 li
cp
98.1802 22.2231 mo
98.1802 21.3159 li
98.7231 21.543 99.1328 21.6602 99.4141 21.6602 cv
99.8198 21.6602 100.09 21.5508 100.227 21.332 cv
100.359 21.1211 100.43 20.6992 100.43 20.0659 cv
100.43 13.707 li
101.586 13.707 li
101.586 20.0659 li
101.586 21.6992 100.891 22.52 99.5078 22.52 cv
99.1021 22.52 98.6602 22.418 98.1802 22.2231 cv
98.1802 22.2231 li
cp
f
106.398 19.3481 mo
107.625 19.3481 108.242 18.5269 108.242 16.8789 cv
108.242 15.2461 107.637 14.4258 106.43 14.4258 cv
105.219 14.4258 104.617 15.2461 104.617 16.8789 cv
104.617 18.5269 105.211 19.3481 106.398 19.3481 cv
106.398 19.3481 li
cp
106.383 20.207 mo
105.477 20.207 104.75 19.9063 104.211 19.3008 cv
103.668 18.6992 103.398 17.8911 103.398 16.8789 cv
103.398 15.8589 103.668 15.0508 104.211 14.457 cv
104.75 13.8628 105.492 13.5659 106.43 13.5659 cv
107.367 13.5659 108.105 13.8628 108.648 14.457 cv
109.188 15.0508 109.461 15.8589 109.461 16.8789 cv
109.461 17.9102 109.184 18.7231 108.633 19.3159 cv
108.09 19.9102 107.34 20.207 106.383 20.207 cv
106.383 20.207 li
cp
f
111.27 12.5508 mo
111.27 11.395 li
112.426 11.395 li
112.426 12.5508 li
111.27 12.5508 li
cp
111.27 20.0659 mo
111.27 13.707 li
112.426 13.707 li
112.426 20.0659 li
111.27 20.0659 li
cp
f
114.738 20.0659 mo
114.738 13.707 li
115.895 13.707 li
115.895 14.895 li
116.496 14.0117 117.242 13.5659 118.129 13.5659 cv
118.68 13.5659 119.117 13.7461 119.441 14.0981 cv
119.773 14.4409 119.941 14.9063 119.941 15.4878 cv
119.941 20.0659 li
118.785 20.0659 li
118.785 15.8628 li
118.785 15.395 118.711 15.063 118.566 14.8628 cv
118.43 14.6563 118.207 14.5508 117.895 14.5508 cv
117.184 14.5508 116.52 15.0161 115.895 15.9409 cv
115.895 20.0659 li
114.738 20.0659 li
cp
f
124.094 20.207 mo
123.508 20.207 123.051 20.043 122.719 19.707 cv
122.395 19.375 122.234 18.9063 122.234 18.3008 cv
122.234 14.5659 li
121.438 14.5659 li
121.438 13.707 li
122.234 13.707 li
122.234 12.5508 li
123.391 12.4409 li
123.391 13.707 li
125.047 13.707 li
125.047 14.5659 li
123.391 14.5659 li
123.391 18.0981 li
123.391 18.9341 123.75 19.3481 124.469 19.3481 cv
124.613 19.3481 124.797 19.3242 125.016 19.27 cv
125.016 20.0659 li
124.66 20.1602 124.352 20.207 124.094 20.207 cv
124.094 20.207 li
cp
f
130.652 12.5508 mo
130.652 11.395 li
131.809 11.395 li
131.809 12.5508 li
130.652 12.5508 li
cp
128.402 22.2231 mo
128.402 21.3159 li
128.945 21.543 129.355 21.6602 129.637 21.6602 cv
130.043 21.6602 130.313 21.5508 130.449 21.332 cv
130.582 21.1211 130.652 20.6992 130.652 20.0659 cv
130.652 13.707 li
131.809 13.707 li
131.809 20.0659 li
131.809 21.6992 131.113 22.52 129.73 22.52 cv
129.324 22.52 128.883 22.418 128.402 22.2231 cv
128.402 22.2231 li
cp
f
133.84 16.1602 mo
139.043 16.1602 li
139.043 17.0352 li
133.84 17.0352 li
133.84 16.1602 li
cp
f
141.723 20.0659 mo
141.723 19.1909 li
143.457 19.1909 li
143.457 12.3481 li
141.723 12.7852 li
141.723 11.895 li
144.613 11.1758 li
144.613 19.1909 li
146.348 19.1909 li
146.348 20.0659 li
141.723 20.0659 li
cp
f
223.645 100.543 mo
223.086 102.73 235.461 107.207 248.398 109.488 cv
261.336 111.77 274.836 111.859 275.395 109.668 cv
275.957 107.48 263.578 103.008 250.645 100.723 cv
237.703 98.4409 224.207 98.3521 223.645 100.543 cv
219.141 118.129 214.633 135.715 210.129 153.305 cv
209.566 155.496 221.941 159.969 234.883 162.25 cv
247.816 164.531 261.316 164.625 261.879 162.434 cv
266.383 144.844 270.891 127.258 275.395 109.668 cv
.027451 .180392 1 rgb
f
.977067 lw
223.645 100.543 mo
223.082 102.73 235.461 107.207 248.398 109.488 cv
261.336 111.77 274.832 111.859 275.395 109.668 cv
275.957 107.48 263.578 103.007 250.641 100.722 cv
237.703 98.4409 224.207 98.3516 223.645 100.543 cv
219.141 118.128 214.633 135.715 210.129 153.305 cv
209.566 155.496 221.941 159.969 234.879 162.25 cv
247.816 164.531 261.316 164.621 261.879 162.434 cv
266.383 144.843 270.891 127.258 275.395 109.668 cv
0 0 0 rgb
@
1.59806 lw
[4 4 ] 0 dsh
196.73 312.813 mo
235.766 163.148 li
@
242.98 34.645 mo
242.422 36.8359 254.797 41.3091 267.734 43.5898 cv
280.672 45.8711 294.172 45.9648 294.73 43.7729 cv
295.293 41.582 282.918 37.1089 269.977 34.8281 cv
257.043 32.543 243.543 32.4531 242.98 34.645 cv
238.477 52.23 233.969 69.8198 229.465 87.4058 cv
228.902 89.5981 241.277 94.0698 254.215 96.3521 cv
267.152 98.6328 280.652 98.7271 281.215 96.5352 cv
285.719 78.9492 290.227 61.3589 294.73 43.7729 cv
1 .129412 0 rgb
f
.977067 lw
[] 0 dsh
242.98 34.6445 mo
242.418 36.8359 254.797 41.3086 267.734 43.5898 cv
280.672 45.8711 294.168 45.9644 294.73 43.7734 cv
295.293 41.5815 282.914 37.1094 269.977 34.8281 cv
257.039 32.543 243.543 32.4526 242.98 34.6445 cv
238.477 52.2305 233.969 69.8203 229.465 87.4058 cv
228.902 89.5977 241.277 94.0698 254.215 96.3511 cv
267.152 98.6323 280.652 98.7266 281.215 96.5347 cv
285.719 78.9497 290.227 61.3589 294.73 43.7734 cv
0 0 0 rgb
@
1.59806 lw
[.0726633 .0773367 ] 0 dsh
251.34 104.191 mo
253.465 96.5659 li
@
gsave
245.207 0 mo
301.207 0 li
301.207 61.145 li
245.207 61.145 li
245.207 0 li
cp
clp
[4 4 ] 0 dsh
268.344 38.3711 mo
278.066 .824219 li
@
grestore
.572498 lw
[] 0 dsh
190.914 290.211 mo
185.094 291.52 184.684 295.145 190 298.309 cv
195.316 301.473 204.344 302.977 210.164 301.664 cv
214.637 300.66 216.042 298.23 213.68 295.605 cv
@
211.617 293.316 mo
216.766 296.332 li
212.012 296.453 li
211.617 293.316 li
cp
f
.143125 lw
211.617 293.316 mo
216.766 296.332 li
212.008 296.453 li
211.617 293.316 li
cp
@
1.61554 lw
139.891 261.195 mo
141.765 265.887 147.59 264.094 152.902 257.188 cv
158.215 250.285 161 240.883 159.128 236.188 cv
157.347 231.727 151.965 233.102 146.805 239.332 cv
@
138.668 258.129 mo
142.012 259.957 li
138.613 264.535 li
138.668 258.129 li
cp
f
.403885 lw
138.668 258.129 mo
142.012 259.957 li
138.613 264.535 li
138.668 258.129 li
cp
@
gsave
196.207 282.344 mo
205.207 282.344 li
205.207 296.145 li
196.207 296.145 li
196.207 282.344 li
cp
clp
198.621 288.645 mo
199.027 286.676 199.512 285.504 200.199 284.566 cv
200.605 284.035 201.293 283.598 201.73 283.598 cv
202.184 283.598 202.684 284.035 202.887 284.566 cv
203.199 285.504 203.184 286.676 202.84 288.645 cv
198.621 288.645 li
cp
202.637 289.645 mo
202.199 291.691 201.746 292.848 201.043 293.801 cv
200.605 294.363 199.949 294.77 199.496 294.77 cv
199.027 294.77 198.543 294.348 198.34 293.801 cv
198.027 292.848 198.043 291.691 198.402 289.645 cv
202.637 289.645 li
cp
201.855 282.926 mo
201.168 282.926 200.387 283.223 199.621 283.77 cv
198.199 284.77 197.137 286.707 196.637 289.207 cv
196.168 291.566 196.387 293.41 197.246 294.426 cv
197.824 295.098 198.574 295.473 199.355 295.473 cv
200.043 295.473 200.824 295.191 201.605 294.629 cv
203.012 293.645 204.074 291.723 204.559 289.301 cv
205.059 286.848 204.84 285.02 203.98 283.973 cv
203.402 283.316 202.652 282.926 201.855 282.926 cv
201.855 282.926 li
cp
0 0 1 rgb
f
grestore
209.004 289.258 mo
208.645 289.258 208.379 289.539 208.379 289.961 cv
208.379 290.383 208.629 290.664 209.02 290.664 cv
209.363 290.664 209.66 290.352 209.66 289.977 cv
209.66 289.602 209.363 289.258 209.004 289.258 cv
209.004 289.258 li
cp
209.27 292.102 mo
209.223 292.086 li
208.051 292.289 207.379 292.398 206.973 292.414 cv
206.973 292.617 li
207.426 292.617 li
207.535 292.602 207.801 292.68 207.863 292.727 cv
207.91 292.789 207.957 292.898 207.957 293.039 cv
207.957 293.164 207.895 293.523 207.738 294.102 cv
206.785 297.977 li
206.332 299.789 206.035 300.367 205.504 300.367 cv
205.348 300.367 205.254 300.32 205.254 300.227 cv
205.254 300.164 205.27 300.148 205.332 300.086 cv
205.41 299.977 205.426 299.914 205.426 299.805 cv
205.426 299.523 205.191 299.305 204.895 299.305 cv
204.582 299.305 204.363 299.555 204.363 299.867 cv
204.363 300.336 204.801 300.68 205.41 300.68 cv
206.566 300.68 207.363 299.664 207.895 297.555 cv
209.27 292.102 li
cp
0 0 1 rgb
f
gsave
209.207 193.145 mo
243.207 193.145 li
243.207 237.145 li
209.207 237.145 li
209.207 193.145 li
cp
clp
209.207 193.146 mo
209.207 237.146 li
243.207 237.146 li
243.207 193.146 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 323 ]ct
[34 0 0 44 209.207 85.8536 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 102 
/H 132 
/M[102 0 0 -132 0 132 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
dJj[Ns6K.A8dZ78!#J2io"b:jrt"Jlnb)f^+=]?%3,/Emna`[Z$e<r1RIL'g[,:o-euAZYqZ$QkmQD0h
!!!jMo()GQ[f6m+q>^Km9.1l91HC?ms7,U7s3:QOkiDc&q!Y`)i;_BZ_Z/g!%/p)!h]Wa:!"L-?o^o-_
&,Ghss6VHo*?dF.])Vg(oW%p"r9EMGP4[\Oh9#]Wj7`MZrs\Vup6ZF*#QP_p^@_$Qs3:QSqs=@_VB7E8
*^ic[s8Vcb`rG0#%/&oIs+9e'_W]VOj5R->rr3E'n+TNi#mgSW<7gm9W;dA$rVp+H-n$'%Dt<r.q>L0i
ZMtI/mHjK:\_>cos2b64nF6)/s2k9KnFn@W!s8cRKA,qi`rG-"&,lP-s#;eY+sfRIp&G'drNH8"rt"bq
mI\`IeC<[]p]'aRme!R[%fH@pdL-rs!#R0#jS/QKqu<o#%fHA,jrQ*),q1n)q"t*hir@.#$KULPn`9;c
`q06+rr3#QiQD2Yrs\@n!"98=*@Be,qYU/os7lU%\dKT8.P<[Rq#:<kWrE@ilMniNjjVEJr;QfOiVrkY
rsdsP!!ir4.VSGLp&Fmfjo<="$hmU<-8m80F8Z(,qTAirrsIcGs-<3Ue&C5Equ6Trf\Eh5p\t]P2ZO*e
">>Q(q>C9jql0T'ktE-F0J>JMs8Vfhrr9)"$KL1HNVNOubiJg'rr3#Qg#rCQrrK;HrW!!,5.LRk!Vu?4
s4mV^__ibi,W/34s8VifZiBe"&*)^M](u9Igp$hFm/R+Ji2ck[rr7ikrW!!3:"fLF!;QWcWW*?t.Ouqg
4B^eGr:fdFs24jIiT'sArqs^p^]3Zas8V6=d/Vl##lSBP"98E>E:*W(!Vc2ps7?6uG:,R8-:WI]r:K^P
WW*Cjk5XlFp"TA2s5Vl6!rr&fWrE@n;(<4k%jdb2rVlomp?VbKs3UcSo3j[S90?+Pq#0jYoYCLlrrM?9
rVm2os2=rug].<KpT"5ng'9]!'c/#@dH:E-!V,i_rs[^S79E_e;WIQLq![qKs0hq.mE#2)"3]W_i7\.V
rt#%J.m=U`-mS?Bs8W&tm.J<skPl"63(m:V;bmAaqto[PqPsPulF$ZlrVlg$mG$[]s8W&+s8Dp!o)Jac
rVm2`CbIF[)a@d1rr)lsnG*%%s8W)qrtY##qXaU^q"t&H<)c:U>($2Cp@eLbh>c70s7lWdq>Uchnc.DC
rVuo@mJ[(brVtots763grW)fkrs@I`.l/Om3/de8rVuoe]Dqp1qu6ior;-6er"&c)piTD8;FaZ_qYKpZ
rr0D,s7lWdq>UThoDcr.rr2u:r;Zfqs5WtU]`/-6rr<#sr;R)03[ZX;+u[@<rr)lsn_sMsrr`5uq>C3i
%F8'F;-6@ch>I3Gq#102s763iqZ$9hrVQTtp@eO)rr2otZ24M#mBurtrr2rpr;R6+qu?\=+Wq^M-U6Vi
rr)lsn[&6*rV?6dqtBsdOZbrk92/Rgr;ZQlrVHQ.s8VrqpAb*hrsAVrpA_2fo)Ja$qZ$T_j8[g4s8Mlp
&GH/(oCi1_0Fes%'JsCcrr2lrs7OP7l2MIks8V`cs8PhF1`\>LH2[dCqYL-f\,ZL,rV?QnoFM!%pA+ag
jMLlXir?amrVc]ps8'A-s8Mlp&G#l$o`"j[$P![I#<J"3rr2lrs7QBk[Jps3s8Vcls7.Ti.Ma=4V>^Go
qYL-fj8[[0s8Dom&cM5!s7cQnoY897hpqbls8Dops8Vr>s7$'gr;Zcort+i%rp]aX[/^X?$Pu=PnG`Fc
s8Vo(s8W)urso)%s8Vins1KU0*[<+:eGfLJrVuf+s8W&rrtYD,oB5oDrVuoGg#hesanbo8m-O]Lr;XG0
s8;orr;R?&rr2?]iI)%H!$3CVi:-aFrVuonkPrs0s8N#t%J]u'p&F91/2\8&2HoSKs8W&tr653/s8W&r
rtYD,oBQ,Gqu?Yaj6Z(2f)#FHm-O]L\,ZL*s8N&urVm?$qs<P9.KBPN&2f(8oDANps8W#srr)j)p[e>B
,qp#\4,En2rVlrsr;H]q]Dqp+rVm&uqsEeApAY'qDWL9Cn\tM-s5E#<e,TIFs8Mus&,lP*qsX+;0E;1W
&icKYp\Xs8s60L_r;ZcprsS]%ni\BT)C[kGrqu`ps8;or]Dqp+s8N?(s82]YmIp8QrrmN-n)X)]rr<#W
[K$:%s8;iq'`A",q<[UB,QIfQ),&BWs8N#nq>LBn[JpC+qY^9grr3B&ri@k01EnJAbl.M=s8W#srTjLR
s5F"Xnb`=gkO&0Drr3.ei8WDN])Ma0hu3TTqSN:/s8Vlor;6L-q>'OL=VCc8&KP6LrVulrq>($h[K$:'
s8;iq"oeL6+YbVR-Snrnq#10ks8;oq]Dqp$qu78omJHe\s2p#QhVIGAs8;oShu3TTqY's/s8Vinr;6L-
o(MJ40+7g\'IJ_:s8W)tp%A7\g]-%.'DVA!qZ$Tns82CP*&]T)5CDtpqu-QprVul8s7lWom/-eanaZSW
rsQoEai;EUhZ*9EjQ-:>s6RAts7cQkqu6ikp?fmJ(_$HF(,<>us8W)tp%A7\[Jpp8q"jjes8DupeMem5
1+u8"nGN%Zs8W&trqQN3s8VH_rrV`[rr2p*^p1r!b2r['qXrq1rVuoahuDO4s7cQkqu7?)p?IVY)#sXT
5j7h>s8N#io_eX*s761'q"X[\s8N&uqOK2d4$,<(f]2i#rVuos\c;]nqu6]hoD\aioF&sd\@B?:s8Vf^
kii!Fs5U`ks7cQkqu7?)p#0-f&-)\N8cS#Ss8N#io_eX^s1\O5q#C0hrs\nsC`jf^5<*3Cf_Y7=s8W)U
s4dSRkkkD[o`"k!_nj.!]Yj4<s7YsGkl(P]j2h8ms8W#orsec$nET$Z'+=jK,`DKnrVuops7lWk]Dqp0
rVlrqqY^?m%K8R7)&t4lV>^>hqtTrmrtXnenaZYZqu?0Ns,d9\q>ZBDk2l=1rVuods7-$e_#OH4qu7'%
r:06s*>8q`$nnISs8Vurq#C6Os4RGPrVccrqYgF'j#A/$)_O^ss8Vrmq"Vf-nGiOTs7-'f%IroeM?!VN
s-E]Om.L)Ns8VQfn[ni$rql]rq"tH]m"u;]#lkT,bPV>>qu?Klr4E"/rVca0qYL-irr8fE)]9\P>iPe`
o)&7Yq#A#,(%:V_oDejhs7H-eL&_2=s.]P[m-j`Js8VQfoB$#(s8W)qrsnYtkjMdk'+b<a?fM+cr;Q`r
qu?Klr6531s8W&rrrW&np\t1%GV:9a,rg)Ds8VK`q>%Ass6p!Zs8NW)s7Q<=MZ<_Is1JBum-=BEs8VQf
o=P&&rql^*q"sIG:+Ib;(+"\"s8W)ts8D`prr2r1s8W)srrW,rrVlg$C.CKJ2+3o4rr_cfq>'"Le,TI?
s7Z?i$eMccs6'+)s6K%@qu-Qpn,N70s6fperql^)p\X@075ltO,VZIerVZWorV?Km]Dqp1rVulp&HDdu
@8f]^6Vk]#r;6<eq>%Ass7H?br;R3'cG9J[p&G$kkN;U;rVlrfn+m%\Zi:L,p>W#.0e4J+6/Uu-q>L?n
q#C0Qs3q#DrXo)-pqBU"8O60XnbiF]qXjX\b5^c,s82imr;RDuf$aTuhs:=Bm,J'@s8Vrln*d[arVmW-
pu%2h1G'q68+,[Bq#C<ms7lBbq76P$rXo21p8(P\912`gs8;ojqX44Vrr9G,s82imr;RD\eC=Nuj730L
m,A!9s8Vrln*fN@nc.;B(&.Ic5r0uA,r^tMo`+ggr;Zflq"ss(s7lWmrVca,qc-Ka;G0c`o`+j_qX=@[
rVuor]Dqp.rVuokrr32'mH"<I\Gls:s6/JBq>^Keo^D7RrseMmb=+KI.3^pOn+?YYrVuoms82Hg`;ff7
'EA+/s5-s^:JXM\]_ha.q"jU[r;HZqrS@M2s8Vups8VflrroV!li7"!rr3;ijT#2Ys7GsPn&#+orsS2c
L,(;.*?\;%q"Xgfs8N&ms80;*rVR!%s7lV^78$-C9`\n^rr3,sq=adcrVuon]Dqp)rVuodrr3/8rqcZp
Y5\G%m,n9HrU9I[]`/B3mQ_Nt'Fl@)jS89Ds8W)up](-Hs4dSPr;Q^-qGSgp1HSEaq#C6kqtKpbrVccr
q8WI.s8Vfkrt"Ses8U99i9'P/aT);=m-+EJrU7#k"nL([&HE"=!$7Hoqt'dds8;ois80;*s8)cmrr3Pf
.Nol\1/XtLs82fkp%eRbrVuomqZ"G4s7-'f&*iH[qRs8sleVKfs7l*MkPbG\m/QP3s3puUntHmC#RUPS
^@(mmrVuoqs7QEh`rGW0s8)cmrr35--8?nu0iQEtrrrDqp\FddrVuom]Dqp$rVm&dlMo#;`!Pi"h#@3N
q"3q6rVuoas6m;o(]OF'C)&$"%0nWKnb)n]rVuopqt9X[r;-H-rtkM,qtpEnrcf_H-S7MqoDeXdrpom[
rr2lrs7bRRg&M*@rVm/ck5UX_e+W^urr3)ana,34s8VBan&YOqrtk\6m6hL'!"'B0na,]Cs8)cqqtp'Z
r;=&(#Pn2mqu?]n;@am!)Ce@.s82BerpT[Vrr2lrs7a/*s6opd#j1:LD8+'Tq<e1]"6&e:h>RBRlMp>N
s1SFBqu?]ns7l?>)$^NL&M0'ps4@8]rqZNhlh:AYln9kB(GAn(]`7I#%f5eds8U[#s1$b<li3=LV>gSi
p]mB&$4d+J2QNnY&,uP+r:9R]s0O.+1E8#VfC8gPrseu!o)Ja>f)Mu0iUHl@f)O;#!;l]o$1@Ic#mh+J
&l-igs6fmeq>U@$p[eFbCEP2b,VF67X8`A"s7>j^rs7TIq6&K2l1;'XrrDlmrsA8h,7O_]$l<U5o)H<$
%eou"rV,p`s#MDQ/LWE9f`0G#%f$(no)JaOkfC'[g[4dW^]3[#!r`/trr3;ofb"r!!Ym/Ik,\Laq#0sc
$N'`#mOKq3-7qNdWrE2!s6K4Srs//2`6Qral/)%3[f6@(rr3;oT+N+E"W9A2k1fq+s5Etfqu-0eqtpE#
.l\@p0iHN+s7lTpkk"fR#._OoaP#8CVuI;&s7ZBU:C%g<'-g<9mf3<hrt##*o`+aes(!N<(,J!`p\s=T
`;]l&o`"jpRE=1)k.9]us5!\aq>^$`kSaL<!$<RknEmU_q#:m$rUp3`s8=Sp2An_CE<#m9rse8crr<"/
_q3-'^@;1&WrES's8Vid],_1_"U.2dqYTLV`;^ACn,N@ds3`_U.jZKA[f-3Os4mVUqXj=Wrro"If@nr[
ZiB^u%fZM(p@!tN!"/cB7D\luX8`Y+pAameqkPM]0,c`Oec5WJrsJDas7u\Uc.gS1Yil&$rsJA`moKnt
'EBLcjNmk\rt##(s7QElE$Z_k)+JN;r;=))o)B'jlLFQI^Y8;.s.6(e#kmi[5q*Ej%4MC.lMpjart##(
s7lWo>!b8B/4bm#r:TFV^AeZ9mJ-JKh!tF,s1n[7qU>JrrsSi&mclVj,U"H[Z08^to)B6pqZ$Nos%QHi
:.%Cap\XN\rr_ucna6;T"o\DKs7GWVrsSi&m_153.2jimgZ\#(^Ae`=qZ$Nog-nk>7nl_Cp\Xg;s4.,O
p@@aiqu6css7Goqs6fmprqb]4.OlYZ.o5j2WW*5"q>^EnW^K5[;FX2ns8VfhWW*(oo&u)/rrMBOnGg*"
%0$.`Cbd=\*@>[sp%[,<ec-0VpAb-lND)T69LFa<s5Nmhs6Tafp@IEcq>UKGmA^*fp\2Wb#s/kO0JpE;
q=jlhrsnebs8V7aBgY!L9@Ek?qXOTsrt"nemHsr1s6fpeC@V?(nbCf;dJj[IpN\)1+"&X5bPCu3r4r@!
rsSSqs8SQZ;,'&8@cF<c"8MZUm0<U9r:p<lJc>]Lp8S'$kk-;<"s"m;Drgfls7c0c\Gm*5q"Oe]3AO/`
4bWY2rr;cJs7--JrsJT!nGUnTh=UaIU&P&mq!bThq#:fmoa230#Sn_NmJ?SWorJ*)lM1DZ/i+_/.6+=,
rql`hs8T5$$LR`crOBPdhuE_rrr3#omcOPfrseM2%LW:;&hUT^q=ajac2Z]$&+KGqbV:_#-n%I(s8;]m
q6^1srt"l(s5h/6e^ECQk5YJ\q!k?`%In9K"qUnR6IkT'pAb/nrsei$s*ZdS3\E!dk5YJWk5W9t"d[6A
jOiSmrrW2pps8uprsRp@&HiUM.qA):s8',&pAYX#r:W?2-9*_IHiEsCqYR2j"bb=Ci7Z0MrrN)n!V5rb
rsnl)i#314!s:Q/o'-2Oq!%gqrsnYunLHCE/1aY\s7cQjo[*WjrrmAiaOJ_irr3*!q<RanrrN,ppAadb
$i0Cg%3PW[%Q;<#m(r]&rqYgY$i]q-*^h,-2,`E4o)o$mrqj\7!WMoWrrnMRbhCgArr;uk!;#RWi;X&V
p%.eJq"jmPrsSSsEY/W^!u4GPp[6B-q>U]op%.eJq"jmPrt#&,K-Dos.Qh>,rq6<krqjn=#P[o_oC_nT
qtU3\rs&.\g==R0Yl=\%p&O^+rr`2lpAX7T$1[RD'EAUC,]D?:qt7r."8qicroO.h73is1,=dgjr:^0h
rVGs^h#@KSp%JCHrs%K!e`b-BV#LArn*Tc;ec5CD!Uog_rrW,fl083Uo&:K%"V(\eQK.l=a8Z2/q#:9p
r:&tIs6ostn0fV41+5r,s8;coq>L05rrMT`rr3&tnEK-9"i\C:kg&i$bPqMDn*0K7bPq_Cr;6<ck5PhV
W=B7L!"^s"l2L\Ks4mVWr;?Hfq;qVd^)n:S,V`9Us82]np\am>s7QBpr;?Hfq;qVdgYUZ[jOj@TqZ$T\
iq2f]rrVobo)/OUrse@+&-ijK)FE*@r;Q`p`;]o4o()#E"F2.-3#`/cA,?6$qu??eqSrO:p@@e<rsk@Q
fD++[s69C[s6AP7o()h7rrbAnU"B&$rsIj;%1`F=-=Z9*pXK67rrbAnU"B&$rt#)r+!DmS7t^jAo(r@X
r;4\;"?L(efD#1Bli.H(n+#W)m/Q51s8V<>o^g9+#PZW2@8Lj>e*6l7jUVeA"oo/fJElCk`r?;<d?S-:
DPttJrt#)W+#"?a;5+$in,!%Vr;6-df`)3Nd?S-:DPttIrshQfs4@#=s5rGCs6/A4o@s<8rt"i"s8VT0
P]'-0UtbnKs8Dor"82B_q"t(#meBud!<rQP0%BC[q>&)2'DD;&s7"*oDb4c@g]%6QrV#sarVc`rq@<Aq
pAb*js-Get0H<DMmeQnQqsjOQrVQR)pA4ghnApi48Sk3Wrr<#srr3'!q"age$MO,Fj8ZOHkKWU`r;Zfq
s5X.VoDA(Xnb`"Z$2<`be;[O'DPbVVrr_uhq"Xad%JBK`!!!32+AL_^nG2n>s5<ndpZhe.NE8ekV9S`-
rr)fq&,?"no)J[gs*m!W0IAkoq"as[qsjOQrVc`qrql^%pZhe.NE8ekV9T#>!ri#lqu7#so\ed*ZJaot
m'Q]js8DuXnb_kVnb`1_"8qc^qu6U*jRiKPn\^K.;gbe5p\4:\jS/TP%JBBN$P*mo*J!DHo_eXCs7-$a
qZQrsoCMkYrtFJcs8VW,O`3KsXlo`arU'(Jq>(!h#A64S1cI4TrVccrr;ZfUrp'Lcr:BOWrr3Pjo`+s]
_i\n4G-:'+qu#gYrr3?(rUKFWebAt&iS")-s7,=Qir9&Yr;Q]rr;?R%rqlQlf7m0lEO4U#rseY_0Hqef
1EWX]o^r(Zh>d$Cs82cl"98E#r;Q]rr;?R5rqlQ`_Lt``I_=qBqt^'es8Vh'<CTAJ289%fs8W#ss5EtA
rrN,srr2urr;R$$qtg??Ki(DCFh?l9rsAW%n_s?2s8ViRq>^KbbQ%VArVm'#qY'^]rr)isqu6U1i2q<,
<cY@skPXl%.kWS35<.$Zq>(!hs8V'Qnb;qUs8Mus"oeAlq"t'hru^P#s8VJtJ6bi^TZl["s63H_9M8,N
hZ!QTrVcThrr23_irB&XrVm'#qY'^]rr)iso`"juk-KM@<,f%qpAb0arVm&ikl:\SoDS^hqsjOQq!n"R
p]p]mqYBs`qYTsc(&.J"qshY!G#a6bGo@nX1-&V$nG2nWs5EbCp\X^jqtg0bq>0sbq>UNjp](0k([&Do
BNKtjMaC'*9Lrsjrr<#srVHBirlb<Hqtg0bq>0sbp&>I!rVuod_kM?cPdZkRrr2u_rr<#is8W-!s82?_
nbDYHqtTpc!rMchqYq6(q#('irVu]5_1j!I*%Ep,M=^E9s6TaYrpfmUrrW)mqYpNpqYU:%rUp'VbJp&/
3Bf]'7$dfOs8N&ps8VWfnc&.[s8Vupp\t<lq"k!is8Dor$N9r#oDe[Qk07K6rr2u:rr<#Ss82irs7je;
#5.fjs8Murqu6ctq=jn)s8;iiq#('iqZ$TfprZe^*@sB2V"OBUs5EtIqtpBtp%eRdrr)inrs&Jup\+=Y
rVca*rUTj_q>K5k5X.S76*^Cgs8N&ps8VWfnc&(Yqu$`lq>L?mrVl]o"oe>lq>($hrr`5uqsaO`!2BGl
!5\[7s5!_Ps8W,omf1H0'D_J'rr<#os7Gr\6nBfE4tb[eq>:3lr71i1s8W#srr)j+rqc3]qtn-6;,9kd
4m`.Is8N&ss8VWgq>UQpr;HW^s82]arrW5sqYgEsqtp!RqYgF*\,ZL%s-WiVn^>k_qu?]bn+#rDm/uY=
lg4T;naHAFmJdjqq>UBnqu-QdkXHC.)D"-Zjn\KEs8W#/s8W#srr)j0rq#j]qX7cG5X.Y=D"Rc,s8W#r
rVuosqZ$Hjr;Z`orW)ilqZZflqYU3hp\t!gqu-'bs8)]o"T/)fkl1S]&\3hinF$=ss7,C$dJ<Y=s6oFU
mJlVPn,MnUnbMDSkNM-olKdg'q<e4NqsXFRn,NFes82fq%fQG-k2?mW!!!N[O6?0+rVuons7F_=qu66f
rr<#tqu7K3o_naZm49G4-n\,cq>^Ens82]lrVuofq!n+SpA+CYo'ub[pAP!nq"X48rVm,)UWpp#ipHaJ
md/uorVuod\c2m5rqlTms82fq$g,8F$P!4G-c#!Bq>L3jp&FOWrrE&qs2tBArql^8o)AUco$'*?4"i'Q
dej(Err2Wbq>('jo^qhMp\spmnac;Dp%J.Tq=adXrU]j[q=sj]nc/X_rVluppu(N;rsQ?7gsEpps8V]^
hr"D4s6IK#qZ$Tps82cp"Shr]Aeb4E%0\<6h!Xn9s82]ao'Pi'p%e"No)%tArsSi+pA=Z-1)i&(-r107
nG*%]r:Ta[qmlb,oDS[uq"Wk0qu?]?d(.TM^utCjoYpgKn]gmRq9f)jn,NFes82cp(%;1g,n:@a!#J]!
kP+`Lr:p$SmHEd5oDJ1Xo_nCWo`XgSnF,iFmecYNo_\%=rtFf!q(jQP+#5m&qtpEnqYB^Pp\)/ts7?3h
!r2QO$01UVs,5%A^!P4$s8Vrp_u.CM`;RULbll/0aN)@#`pqOTddR59rr;lprttb2s25ug(B>:(DVin4
mJQnWq!RS5k3(q,k5sf-jo4EGjlGI]iVDR?gtUT;g"=p.q7ZU/qkNW[rVlfr(AIS&dk31002GN2nE0K;
p\41Hq"Xmhr::!\naZVM"S)!Mmd9i=!p8V+"Q\V&iSjUTq7ca8nc/XZrVm<"p>am)s8S)6k0ihk_#Ng%
s8N&qr;S%oAL@N\!"9,hD-;!uBP:mb=&r'k7R]^35X%:l4$#>Z1bpd>q'-+l-71#a,9e<,,P`GY*Uj%,
rW)sHs8DuseT<\m+X]W0=at47FCSfb>%(fWDc0G/:/"8N7n6$:69m^t4S^Q60eb:7/hJV)q(VUqq_@X@
s7-'f)><d^j8[i^Q-n"%k0<\ef;P@5S]Jj[[<Qp,f[n^(da6:ac-4>O`l,d3q83HX`l?!9_ns7cbk]?W
cLLr7o`+gerrrDtl*LErrW!9+%0d.M&IK'Z#7CD0rrMiorrrE/p]0RZqZ6`os8D]ls8;co.JNT3oDd)a
4!ZI44[_Fl4>\WA.kNG92a9Sh3^#Vk5X@\$5W_%c2D[/Z3;GB+2#fB11]@@Rq#B^\kl:#LoDe[equ>IO
jS]#dnV!7_jlc=$inE;Zl2CVerVG7'l07BorT+"As6fp[s82?Wq=j^[qss:W"SD?`qu?Zq"o%uQF9<6U
!!`W-$PF-]#RC5,rrrE'q#LErrs%unq#^?lqZ[#ss8D]ls8;co(\d[op\Bh-7jL,I2ENlX5;t2@,UF`h
0bH]B5!D7u6psI44Ztba1G^^=q)eC5q)J1.q`"KRs7lW\s60LLs7?9es82iOs5a+X%'btjg@44li8*/I
oBQ;S#P%HAj6c7"li$&IjT"QGo)JL]o`4[\o_JF\qYU!Vs8Vurrr)j%p\E/l',poTr;[c?$4I(R(`O8)
'Gqbq#mLS8!WW3+#Rh+S&f)8Y%/C/($Mar($2a`%s8W)urVcWns8Dcls!?A^,V0?I.PEJ/1H76E3'&uS
0/,1?,9nHZ-71/j1,:O;/hS\+q(;Cjq'l+dq]u.?s82ims82Tkrr38fkkk>YXRQ#Orr30$rVQWpr3QG'
qu?ZortG5(i$/jK!!3-$#6Y)0#n$nC%La!\%h&OP&Io9X$3g\<"UPJG%hfWP#5JZ&%J^M2(&S"1s8W)u
rVcWns8Dcls!?q^,:+<N/i5LD0JG7=-S$Yp.Oukf.k</%/hSk50/"n/.k<%tr$VIknLXJfq_8!Ks82im
s82Kh$0^UOrVrDVnbiCbs8Vl9s5j8(rr2]fo^D91()JYG!!s,C!!!3=":,_T-o*e9+<V[F)&`Agrtk\R
ruCh[q&&oJq'>hns8W,us8Duqs82]k!<33%qtpBlr;S$6+!<Wo-8.;7/1ESN1cR?J0KLp9.Olr!/1`D+
0ekI?1c.'Iq)\=(q)%n/qaUVZs82Khs5s:[$/4+jgAc2JLSU+/rrLX%$,4$dajS8D]thG^`rEjSZ2^U!
RJF5cW;2tZU\h.[s""*Jq"XLHn1XhB%Kc\6#mpY4%3fS4M1(2BSX?+ESt;C>Q^=PFVP^>lX/l6.r3lFK
q:bZ)qr[qYs8N&ss8;ooqu$Kos82iqr;S$,!!!lH,UtQ*0.]@gS#E<WOI;AqX/i>'Xf\e1^qdh(_o'F2
q98Ztq=4F[rVHEes7ZKip&G'SrVm2Xg>CH\BObD$GHq2GrW)rrrs/Guo()>@d1$!S(_ml!"UY;3"qu<a
i8F;$s8Vojq"XOTo^qtLq=XRRlhCGYs8Doos8Dips6fp`qu7,j,m=GP$9'Uf0/,%D9EDK]rVuosbQ%V>
p](9gs7-'f#5\2rs7Z/krW!$Z9^:X3s8VcjmJlnUrrhrbkih[8o_J"HlMKf>s82fort,))o()/;X8i;.
!(8=Q!!NH&!"MrHi:Z^As7lB`p[n+LoD.qPo(htSp]'p`p&"I_rr;rqr;Z`ms8VNeqYU:(`=<7g!'*Y/
,q:T$1cI+ImJd.crlb?AqtL*jp]C6\nbrItqYL6lnb.nA!!,$*rTO+WrseYrRJ$U[p%.S<m-OE<q>^Kd
s60:Kq=OLJq<7_=q>VK7qsjOYo^hnYs7u*[\03.U9dL2["9bIC?4.2N#7(;1$33T-p\+L[rs82qs8N#q
r;6BGs8Vrqqu?TnrrN,rqYqQ/lg(JR$6:uD!tYP9T^@4]0JkF80/k:jf`2!IqYpZsnc&Ocs7$'YrqlZi
rsSVpj6YpegYoEBj4O8/&=J%c$NQ+b`iucBnbrI8_l`q<$.I__f\tfVmJ6,Es7,s]rV?E`rs8;sqtp3^
pA"4Xrrr;60HD#Kr;[WHhqH;!(]Y3b!#l:c8@A3lqZ$HhrV?0cs8W)ur;ZZKrsJW!qtp<hs8Vlos8;ls
nG`Fkl`Ls(!<N-!)\Cj&m@-0U4%(\l3'(Zfs8Vlos8N&qq#CBnrp0USrqlZirsS;jmHs&qhVag(mHsfN
"`nVf#6;jErrB_Gh#79Oj3rU__>i?>f[S[4k2Z=7q>^!]nbr.\$3'qlqY9dRoC(uDs!.+0rT!UIHorGY
&1ORFmF-_S(',B`*#8T5Qf[N,me-JWpAOmgf`2!Hs8)]o!;HKm0DkbGpAb0jmdp59q5&Km&HDeCOT5@K
T3jDp2^'n%&ON;_p&Fmcs8Vigrqu]jqYg6UqY0j`q#13trVc?Zk48BDrVuoIrVm/ts3n$^T>o%6rVluL
gT]f<rrM]SrVm)qp\jsYo(^K0$3'r$oBGf>p\"4YrrrB"rqlTg)YLC;)&!c:X6&L&X$-Lr#8ns,$n7"d
p\4R^rr2une,TICs8)Zn!rV`iqu7c9q=sdbrqc>b8c\nl'Z0eJr5i1R/K?B&-5e_*jo>AZrrr>lr;?Ef
rV>FKqtU-is8Drg!pf1DrVuoIq#:NMe'68%d/EtGf[oiqrrKmirVm'"rVHBamI(#4s"FBNq=O@SnCc[h
p[n.Vs7PsRpAaop4TGHc7+q5$jMP:E+V>,'$31Jsa6E$UkkF9?nc&Les8W,ps8;fp/,]5?nCcRbs8Vlo
s7Z9arr;`!3<0$]6.Z#0pXX=<0H_Vu/fQulh>dNOoD8Lerr;rKrrr#cn*g;Uqu6lmnbrLHe<('"Z+^23
s1Rt!NrAt\pY)&8p\4[qp]'ODiSj"aqYL6lnauACqtU'g.K9>:q=j6H?"/f\p[\%Xrr<#ps7lAb(B=m`
]Cb%Gm_`i^$NLbR$ig82>c[;\o_7PKnc&Fcs7u]mrVm9$s82;V?!iKds7Q3brtkG(TG%;5(qBP/r;Y>t
/K,?Q3A<$7El%MMs8N&sq#B:P"S;6Rn,*+a%K3uus6B7Qro)\0V7"#9rr_!Is(2*-!pK[SrVlufl`U3b
s8VBaiW&-AqZ$Tco^VPQq#1!bs!@[Dm.p=P3s#O&II?n*s8;oqs7tXJdO>.r/!fW&q>'R8ANU,!r;['4
6^ZHonFlAIs7-$Wq>:'hqZ$Qnrs\Dqo;+,@!!e#Cq>'jsnEf?7m-4Q54obQnHKFi!rt+[L<\>sh5=nKn
=f^faqu-9fs8W&tqq;#Lq#BXZn,<7gjK%#'r;R0$q"+OYrr<#+lf#b\rs@`Gs69$nqYC0k"4l,Fr;6No
n,MqFs7,m]qtpC&rr2Wei,BPC&dT<*q!@nX&b>\Q5m@<0L%YH6nF?&,J.Dk_!!ah]1QU_gq>'jdqY^-d
nbN(Zs8)cprVm?'rSDE%!WW3<g%k%3q#:"-qYL6`<Z;DIC$bNkrr<#pRQ)rg2a0nt,t=X"qtpEnrVucR
s7u]pq#BXZn,E=jdDE?UhOsQA"3plB[Jp1,g"QB(#Q+PsbLtdo^\n-3n,MqFs7,m]qt^7!o)J5l!!jA@
"8)6tqs4%Ls-mlOmd"0Z!YfnVq#14,rr05u"r@pR"r%OU@Emujo^r(Trr2rrr;ZZoq>^?lr8mr-q"XFN
qYKXWl<aMk'EA-sp\jaao)4\\bj4b.!so0Hs8Vogq=t!i^fh'i1c?U.2_Zk>oDegg"oIuhrr)fMs8ULA
rrqHHqZ$"Arr2usrr3@[=2!Dh_=.'1s8)Kgrrr#cs/EZUrVlrjn]q"2!;HKirVllr!r_ohqt0p^j8U(l
s6bg`!=/]mnaQGJq#C@D(a9ea7K<E&Gl.:7rtkD.mE&]K!#>eF%h9jb\**;MqY^?drr;rps82ils82io
n,N.^4o"gCo(r4Rqr`YA!!N?\jmrBKs8Dm=%NcEV9*PA#CB+>0pA+L[s8(;o0HE/'.kr_MHeAApq"ag`
o(N%:s8UL?rr_lmrH.o9$PWXR#,\Bjke7#mp\k*mlgt,U!6P3>"SD;J_Vb:k"8D9Vqu-QprVuZio`+XD
ru(IE:'Uk9U%e0Uq"OgA#SR=D.UNSa&pF*Er;Qcp&bP_:C)d]m!!!-%!)&gEkk4QCs7uZLs"r,*&Hru;
mIpPZs8COL#ljrX@hSnJCB+>0pA4Ubrr<#\LcmCR/2]L;.VQ?ls8DigpAXU]s5*bep@eI`j5[8DUSHkQ
Y@t/WbPV;>jS]&`OiIFk_Z0T2rVloUg&D!WdFuhEs45u\hYdBXrVuoF`;TYts6ot,rUT^W]SMNGli6kW
q"4TN#T3gSF]&2>&pF*Equ78mmGcN8+ohTE$kNXY+f3ogp%eX`rnIGS`fc?9X5WdOqu?ZoOoQ!o#C0>M
!sWN?s7uBbq>^Keq#BfJ6S0`I6TQqW5/HsmrU0CYn_='Qp@eI`j5[8DTpFj's69=Y%%dM'!!(fblLMgl
rVHKm!T2`2rs@W`s4ZQ%jic9,r;QlH`;TYjs!.@8r;?Qns8Vi^q"XLInaZYZqsaCUs%Ne*"9bVd!!j-X
q"=Uc(&e13oBYnqRh#T$#71A1![N'Pmf3%\s7ZKmrr;o\rs/Q&q>'aXp[A+]$NC)*q>('`s8W$jr;\(B
5l_?!C]FG2p\O^^s8Vfms7!Kl5q=cO/hf+MRJ-[[p@@nTs8W&rqu?Torq6<Wrr_ocoBQ8R!;QQn!*9$u
#QLh!s2=s7q#::#rl*4WlhLGYhn#uhrrVHPjo58baM@ZNn*g&Hhu=,\q>C0irr<#rqtTsO(@LVJr;ZZa
q"XJ&'*n^JelWah&9R^?qu79-rp]F?iJBPp!!*'#&I9A'f(&e?rr;o\s!.OBq>'aXr;6NorVuohp%eX]
s8VX0#QOi.fioHs#AaA>qY($eq>1+&rPs+-+ttK&6RY'Vkl:\Kp&4pjrVcWnr;ZcRrrr&el0\NCrr3Q*
s8W$F!WW3$s2=s5`;f`0rr33%bKonUrVc`q!9F+Y#jhK2h6m:/cLV2;n*g&HhuE`Ns7lQg"ShQ_q"F^]
(&S%*qtTa.!sf/:60q_Z!"O&Bo)J[ertYD1rr2TbjKqf.#7(;0%KI&Fa6icqp&G'ks82WllMgk^qu6]j
qYpKrrlkKC!"_6[>7:K<D?'Y6q>'gcqsjO\rsmJ$7P?GK/j:O:J(4>opAP$krVcTmrT4(ZoDe%Rq>p6P
!pJt:rVm&nq"jX8%/p5449*J'i4]0_nbrIqg=5?Vhr"/&s8V&^r;Qi^Z2OY$s6BXUp](9ili7"Zs7lNf
)YWt$m-j]>s8VWdpu8@T%L<VsnOiic%W_75!WW,qrtG&%p\3A%b$G5V$ig8;&Hl"Dqtp'ds8N&qhu=hs
s8W&pqt^9lm]$6h!"+)E9`PM,D?'Y6q>'gas8Dckrr3E$s6kRl00:a>4u=Wo!m(B?rVuorrVHQmjo5_[
oB>E7qYU'Oki(V$rt4\oqW,$j!!!@Qs1J4.^&R`prVm,Rg@Xmbh"^[DrrDHbrrhuoZDF]&s8VBaoCr:b
qYU<_s!@F7oD&(Sme-8Dp%@k0^!?HRo_\FT8c]A,$-;XA!!E:Go]H/Pp&>^$l%Ubi)?9mK!!"0reEcc%
q"amcs8W)uq;qVbp\sjVn*fPk\B4ICrVlfu8,rZ'!!C+0?2t93FT;4:rqZ9cr:fsart,,+s7)[L,X*S2
3%QCL[K$+&rrr8urVQQlj8T5OpA"FUrt4Pdq"%Jo!<<;As3's4XoIeGrVuofs8W,js8Duh"TS)nWUfue
!8@GP!<)os$i^2)qtg0]o^VJ?n*C!"q"X+;p?L2\YDm?a+s.qhs8Vunp$Nk($j[^-nR2Cu$ukk.rr2Zl
(]+1-q:V,i!"Ju/'+k3nB_:oao`"jip\t0qs8N#nq<@nip%8:ZhVkYtAigqK)iO[mrr3c1*!-*?'%ukd
!!WaHs8W)tp\Fabp\4Xd)=@.ts7*<n*BYYt5<C;sR/d3]rr<#pnbrFLs8Ds@kN;O)rVuo\i3eQ%H0PA/
naZ;?.1ZCY'\iZ7mf0lumHOTL$1[Qcs7>j\rT*ADrrDB`rs%rJXmH)fqYpL$qXOFYo^q\Dn*fTB&G?&"
qtI'T$kj!^)A3Y_\c;[+!q4>5%g<=H7f2X_!!*jMnacSMrUg*pq>$gb"U>;FrW!!%HG'7B!qcKkrVuos
s82-^$iU,'r:['Q$3L8."9&95Zi9e#s81FK!rr<dp$uVn#S(>CrrMuirql`frVI<,rqZBis2&au+u),?
.P3rQg&D!Di;Wi1iVri[p:H+Fir/lnIK0?HnaZ(l$kWI>5kY0#lM&d-o(2n\p\tK:`rH)6q"CQ_rrhZA
nGhVHrrDEjmHX!(mITr8s!@[DqtoruH=9r($kX-m'_MG*qtKl>!!<K4OT4iO!!EsMo()\Jo`#6onG2.e
6lZ1-"o\K,$":p?o^2YWrVuoss829bqu6p!r:.IF?V)(5!!EE7mf*4brsY"i!<<+WrUa4r$O^GCrs&2m
qYU0^o_nY%rr2`VqZ$TY?T0,X69I1j-@XbLs7kRQs5EqV"SLRMrql]p!0[?]!qG[Q&;:N'!!%oTs1n:'
d/W_/s8)Ki"ieR^mI0iIrrqu[qYtZ]qu?]`s6BXOs7>LT-1pd'p[I\7BFt4E$S1`Gs8)?^0a.O_$eYLL
9EYA-C@^rcnG`:]s7u[,qtoc+&/,lf!!j5=4/hH0lhLAWs8;-]!UoFSrrW(G"9&9+1AC\Es8;mZ!r`03
e,&c8%13)<s8Vums82irp\4Xc(A.D%s8N&oq>ZI,0KCX84Z=Zg`;BH&ir9MKj8]/Xr5QbVWrMYXr/L^U
%eAr_1_U?!!71B=YOLrHrr30"qu?]ipA+^jbfobRrr3;,YHn3.q>]p>k5>8Znc/"VqX=I]rrDcls!.=3
i9oo<&eQ'/I.7%5o(_AJ'EACbs7>bh"99!3lgj]Arr)Hg&b5S^iJ9/f!X8]F#7EM^k4n`Ks8W#_rr_lm
qYL-i$$6:P$Pe<gq#1(,s7-=*!!!o9me16%"9:des8N&urr<#mp\k'lq!n@`&H)"hs7W9`(aD+$5:\*\
Y4poT$.Ru7s8Df&`;cP0rrCpTrt+Jbl2W"<!#bXus2=EimJm._s8Vfms82fu`m"/Jr;QcCrVm#pj0n"G
rr<#gs6]j_kPkecr;$-SnEEC@!#c$Nkl:\NqlBc%!";d*p[O[S!"gH`nFuJMqtp:,qtomNn+Qe[s8V0[
nsqQ`+;4_b('#idM<+=+s8W#]rs.lTp\+XeqcE^r(Y8WarV$9#"9SW(7fMuPT+)#*%)i2GrVccrrVQU0
nbE(Xqu>gYs/SdV2(0J,2]P,UmJ["`s8DupoDeXds4%#I-0FLmX8)5FnB1V-s6'$Z!#?+G7el?MqW[&?
s4RGPrV60Okl:\]mJHngdFHP-s2`U+r;Qf\\GlO.qu?BOrsnf"q>'7DclrT%"q'\SrtbP"qg&5B"<Ddf
s7+D>!tYHbjnJ$6q"ssmqtoLDq"Xde%eB#X[6aj+$igSQ*Z91[qu?]ol2N!ikkFiOs5Gj8"TSQ&rr)Zc
s+LUV!>02Jrq=hQ%0-Bko`+U_s8W&rrrr/sqYL0grr3K#qu=oE'dl!e.QfO@JEd%4s8Dupli7"7rVn2'
lMl\=s7,d\o)JaPoR?iP'G53Wq#CB\l2TnDs8Vcap#tW>s8D?^rr^p+lJ2C=!9!hU!;-WtX/;fpqtp*\
kPtSZrVn>Bq9K0D%1Z#+rpBacjG,Gp!!'h7s829&*!uZYI(I_gkP+`Drqc3\q"Xk&rqcZpjb+o_#Rgq>
!!"7PdcK6[o)JC_s7uWn*Q\9]#7X9$s6p!fk(tl#!W^%6r:T<e'`\4DGi8>prr_oln`ffJ(]OC-r;#5t
*@rm#/i>17?/PPXoDejgr9++[kl1Scdea!)bPqeHjS&6!Hm\gm!5SR5"R&/ImeHYY!TNGDs8Vrqq#C'f
qYU9pX%_[@rVloFr;HWtcI:k8li7"^rVmQ,q3)*f#7c%Yrr;]_rr<#Q\UX5MrsJVsPStD>"[/42aT:2k
rr3&nq""7\#lO\ur;ZfPW<rP(#mUP4'HrJ"l2U/6s8VonrrnAa!!*ORrr3#oo`"k'h7J1.r;?B_n;RMO
!!-TCs6JnJrr_u^s82Wl!rMrjrqQWFTeQg$*?mO&1epZOrr3&lp&+"Qs60I^&D-p]O8AnVp?h&7o^pS9
J+NU<%(ZE<g$=FPs6SnJn*g5Ts8)cjs7ZKhqYpWDlf.mC!n6Phrr3)M_;42Hs7QElqu-O'q>!Pl#6>CF
rqcZoq>UC-rpB+QpAb0bs7j!-!!!$"*BAGtrr3&tq==@]%K?D-q#16mq/&P-!Y5S9!!G35cM[D!s8Von
rrbXp!<<W6[f?7)s8)]o(@LSio_n[Vq=:q!!!*W3+?X\js8W&op\u'.rr)QcqYB`LD_NS)3AEH1?_6K]
rV--Rs8W&ts8VB`rr_*WqiCaV#lFJjqY9j[k3`!E"O"j3bIeGQs69RWpAb0OgAh3OrVHBfqtU1#kl:DW
s4H2Es6K^VmJZ>Ms82cp$MjK;&d/4NiVrfIrr3&im.gS[($Y\sn,NFYa\E<G!!E9HZhs[us7uBars&E$
s8;QcquuoGPU-J@rW!*<%j6;mr9++[q>L=!((:0C(#],ko`"jlo'Q8PrtFSmqs4(Ro#XZ<#R1M6)lrl6
qYg0g(]441qXF.NoDZHs.m,OC1I*o\Qi$gYq>('^rs\l)s8VBLs8VBBrqhu[rsJ5lqYKL=nbE.ao_JM$
h8@(W\W[!_o)JaKhZ*WSrVHBfqtC$sqZ$<Eg?@IMjQlF%s*t~>

%%EndBinary
grestore
np
grestore
gsave
209.207 167.145 mo
244.207 167.145 li
244.207 193.145 li
209.207 193.145 li
209.207 167.145 li
cp
clp
209.207 167.146 mo
209.207 193.146 li
244.207 193.146 li
244.207 167.146 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 323 ]ct
[35 0 0 26 209.207 129.854 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 105 
/H 78 
/M[105 0 0 -78 0 78 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
\c2j,s82fqr6YJqs82d%s8VfmqYgEjrr0S1jo5>UTE"]d"TAAts6-E]qu6Qo"oeH!qYo[Rs.TGmn)OG^
rrr>fs7H?gbQ$Ats8Moq#Q3uho`+gfrjVpmrrr>fs7ZKkTDnums5<nV!o`kHW;lnsqYpQRrr3&Yp%@tW
XT&:Yrr3&[qYK(K_uBi7V:Y@Xs4RDSq5)^8Y5e7rs82]l#PY"Do)8Oaqk3rkKE2**"(KI>qOminKE2**
@a"-8n,L!!s82]l#D)pU.q$K^p=]Jers!NI!!!);o>:Oars!NI!!!,=orS2krsADmqYL0hs8R-CrW!#5
lLpnN#T3UL%KP&Ys8Sem"W7:I%KY/Es1eREp@e@ZrVccr)#spN!7:E4eGn)!&,cJ-p&G'[fae&_!BKfP
p:gRmrt#,/s7ZKmmFVmK!!,.Rs7iPm&+T;gnGiO[h@p+p"#TK=l_sgorVuons8Vbc#QOr,DYsJ1qu<_s
%/U#(oUlEh!s!9;s8;!Y`;^A=o_S4[s8&T%"U+sAp@Rh"s4RD[qZ$Nos85ap!<rP6[f>gr!W;usr<E'n
!!!-%\>B3.p@8+YrsJf+@Ls+^$+Bg+p8@p!pAb*ks7R-,#m(P,rq-5rrrMoprr!)n&HE"8$M48Rs2k9C
p?hhUrr36L&/bijnbi+Sb5^>u%/9c!s8ULI!#,Dgs7`i!o`#?prVQNjbl@_S!&+?FVZ-\ooDS[klPUQl
!Y@]urqkpZ_#Fi@qu$KmNW9J3!-nP9d/V\s%/p&"r;)6M#9<eerq!`$mJd4aq#14!V\pdB&;^A]qtm>l
!W;s*q>^Kj4U2u^!6Y?;VZ.,'s7cKhoeumf.fdTfp\4]lrrMuprVm1.,s+m;huE`TrT!ptrt"c%q>^Kf
"qE%C#lj`#s8:.Ah#@oWs7cKhnGih=2$EgNrVuf)s760jo)8Oe"=,Nf=WRMA!WDl!s8W)ur;HU!s8W#p
d]`]U&-<>!jS&JZs8VfmqtpBtrr2lprr2fors%r:!&u)P;?$UqqXjg(s8VQfmJm.^rrL$[rr3?"HF2>c
P5j(dqYK(Ke,TIIs8;ip%KHIsr8qhr"U>W>jS8Vls7--hpAb$es8W)urVld&s7?9jM@qKe06.!ks8',&
s6p!Ts8Dip&&u`bs8THdWSQaCs4?!$qQU#"rqZR#mJ5cf%KZtLJ`?_,[f?C(s8Dips8Moq%IsDs68^2>
/tDn?s7H0Vs2P*=q#C'bs8Vurj8T&cI_N,Lm,@uug@Y6ps4IAOrqZR%q>%c0(Bb'US_j8@_>j6/s8)co
qu?]qqu7-(rS8__.jlmXq>^Kaq6^2%q#C'es8N&uqu>^UrsE/S[,pTOs4Z2rq7-J)qu?TorqHF(rVuE?
BFtLV$4`T]q>(!hs0Mb(rql^+qY^3KLG1A8-S)Y!s8VWdlMnj's8)ccs6T^a$f[)ebO>'&s4lE"qpbZ-
s8Vurr;ZchrsS=t1c>db',ZD^p\DK%p&G!iqu73)r;!a!<A[0!24jaGs7H2ks8Vrqnc.tTrs\b,Yg;;'
rTO:8h":KRs8Vclq#C9frt#,.o^KG1,X*8!,Um9apA"I`])Vg/s82ipqu73%oZ)>K?q+$Y7">49s7cBO
s4%)KqYC0koDe1WmJd+fn&!lQrr3/Gs4uT0rm1W0s8Vclq#C9frt#,.o\>$]+tb2e0fDkgp\;5tr;Zfq
s82ipqu73%i/^Ju:ejYW;/?12s8)Q$s8Vrks8V]jm/QJPrrKgK$I&JFs8TV/hV\>2\GmT?o(VnXrr<#r
s7Z']qs4">Ps.&_/gN"u-VNLfp[nL#ru:k4qYKscq=ajgp&F][;bC=r9iabPB)_i1r;>LQg&M*Dqu6ll
qW?i7qYpKo"7G:Bm/?qd\,Y4DaT(`/s763as8Mus'E%k,qXjN`CbI@l.N]ia-V<7cpTji!qu?Nmrr)j/
rr9QU6pamO84uH@AGcE,r;=))s7?-f"oA)^meZbYrrhuOh<X;'rr]\/h;m_udJs7>s82`o'`S",naZ#.
=[48[.4cbh.4@[5nFb0.j8T;ZqYU0irVca.r:G)86q(*X:eaAH@dX3qqu",,rVuofqu6ccl1+<Arr_id
q#:3k"1A0hkdLNkp&Fpers8Gtqs<n4Tf"\8.O?2d-mU2i6GN*aZMtm?qYU0iq#CBks7!6h:e=&K<Du[]
7:+aKs82`is1n[7nb`=gmH!g-rr32okNDd;p&=pi"0qmfki)Qms8VumrtYP-pZLhM8L#W'$ipbP(+(Fo
XRu/`bl?u.s8N&os8;iq'DqdP?:[dX1G_3^6UXCJaT);9qmcY+o)SC\rrr2mi8+%trr32Znb3"TipH^E
"0_almC*&pqt^7#p\3h#K-`)t'a"F9#R:ea.6F$ko_c,ss8N&os8;iq'Dgs\3`8[7.Od&/3^Q><\,ZL'
qt0p-s8V]hs8VloiW&QLrs$(3pAO=0hu3QWX8hSSh#H./s8Mio(%h.JN'AdF*t&2O!!<KP.QEF[o_e^0
s6p!fr;ZTmrVca0mA3lN=@b>'1c-sH6:b%Rs8Vlj\GuU#rVmGtn(?:hqZ$<im/Qk[pZCW9rr3)#s6oEb
s8W)prt>>"oYaT>6RE?E"U4r,!@''QL'.)?r;O/)s8;oms8Dor'A[CQ>>I7/0KV-D0L86-U&Y/fqX=I,
s8V]hrtk.mf[TTjs1Hk]s69+LmH=6?s8T(nn*em.i;WoAo`"jhrtbV6qs2U")&jP>&-iFG"pP\Y)_t^h
n\P7rru:V)nE0cLs5[ZH@Ui8"/1`;#2*k,=;1/EDn+jKn!Q!+ZrrV!.s8N$0f\-)`mdBoFo`+=Hs8UEk
qR?J,o^r.YrVmW3s4!#h+V5V9%Kut>#7(t`*%tFanc&QsruCn.q"44Ys6-.V4BH#g4Xqm0.Q9[o<).Z;
s7#jLs3L]Icd2XhrVmYfhuD:-s396kjm;=-q"FaWn,NF6chl2kjo5G[qtU*frtY5"Qp<>Y'-nS."9AW4
%iHQ5.o5O$]`7m/s8N&us7Q?j'rOi&9h&2U3[Gss/361";b1a)s7?&prsdQ5s8V``hr"Ijs8VKc%J8cM
lfmm5s7l9es4H,8ruM"1qu6WqpA"=0B.PMh*?Z.+!WW<3'HJDA-Ud(cq>\2/+9)*9s7PsXqZ#c&4%N7G
;aWJg+!iR)868eZ@K6B$puVP(ru9YHs8VEPhnB'4s8Viimc*Tskjn]Pq=jphdG3"Hk5Q=np$;"pGWIc7
0fLTo#Qk&3(*+VH-RLn,m^N3=s6f:Ss8Mrrs7`!U84,pJ8NS^O*%3a792nnX<qQFfpU:),kii'Hq>:2q
r;QrplJhF'eH"\-rrLsI[/V*Dp[\(Gm@?Eg74]iM2[BTj!"0hn-6aof1<o7Zs24jYo()hXq>UEo^gT3'
6U+dT1GL'p/3cg':fp+\l2USTi;_F/#j1(Fs82]CFo)%9#iae7nCd1.s82fq!RgS\s6Tb(oBl&%[n\Cu
2E3B^A-<)D#8JX?/Klf!0#R%arr_ocq<].$s8L_i8j?0?4(*Ce0-VJr8P`&Q=[u'=s82]#rrM*>rr3#R
o)AXsd-KNFrqjO]s8W)u!rr;Zjo<X+)Y`aj^3Lnb/L<\D8q[0K$jmh'1+jY(0.ag#d/W;/+7f(#nc/XJ
S3gIO5YOUTRjg!9+urCr:.SS]8(R_;qn2t)rtOPTs45Zdqt'jfdJqnWs8Ksis8W#rrrCf[rt"o'md#s"
.j@D=2+61U":GYT!$c#P0ISS.-(=/trODkLqt]dUs8T0*5r`(@6;d5D/2Jag7>>_T8l8/DZ2a_!q>\81
#OUjWs6T"Mao25Ik4Sb3g#2o$VW\!Nrr3#qdGY&Qru:7E@hCU^7N4OTkqW>D'*BqM?8O&`0.2tLrVb"@
m/J1)qt^$ejaSjU;d;%MT`.G3/1)-1Z?oG@;+NsPs8;f)rrDEjmJm4M`pB/nrs\/\s8Ro-g&LcPs8Vim
rrN&?Z2YI/g5\re2)R.7i5$*0!"]?"`bu,B/2T"0L$AF.\GlU*rVlg6je-$J5X@T#rm2l>,pF19l%r;/
:e3sBrpp*.ruC:jg=lT,o!AAqq=_B!s+8S>s7i#^s6'F^qXr1hs4RDmrr;W_g:puG,\=XNGT6tj'a[Ii
GW%*0/hV8/q=hu1nc&Xbqu-O4m*TQ,0QGhHLFY#,-Q?n%P#+\G7n8F6s8KP."mG:)gAh3PrtG(hs8;oZ
MU]rOqkF,jjo>AVq7a38)?0O2r:os:LLR.=ku^Ln'IF`.j,?)Q2_Qrh@H7+T\GmTIr;Z`prr;oLM/KX!
s'S\g4>n[Fs.WC]:e+0%q!J+&rrMHLr;RGu_#O30s7+mts8SPfs4R>Mn+4*@s5!\prqZ?Zmdf8Pi9B9"
6RO9>0Tb=m4t\cG2c/H,oY^_&ruM%8s8Vumq"=:<cKtT2>"_Xf76n9\]i7Ku78ILf[/U0olh^Vns8Vum
lg4$=s2Y0>g\h*=pSbM"s8;co)#XC*o]j+Y-n?o-6H%g$3A<HE3C2Hno)H9#"8hueo_ndjp\Fgg&CjK/
;cZ7^li5[67o2ZR=7YSTbPrO#`96=`s3oHsp](!Pm/R+Ls8U:<s5igEs8W#Hs5j:\rr;oprtkS1n+>Fq
76i.H/4ejWe1`R:/3>oIp%#isqu?]ps7$!e(&%D%s7N3_852l@<r`3a77U0D<D`4krsQ]\lK\ELcI;g6
s8N,[jo#,a_YO5noU5aZr4)e,r;6L/r;>X<j'jr(,r@o(qu6PeZb49/l1XrQ^An62rVm]0q>^Kns8IF8
69n=HJH,ZAQ`[^>h=:L)s3grIn,N"Xrr_3=s2t<?%BeCSo_4g%g=bfQnbDn*s6BXar;6L1qu$!Rj%hTg
+='.6rr2r\p%\4Tqt^-b\c2a2r;?Nns7uWn'E2`85<D)-VZ6\ohXC%4rr<#qq6p;2n*fl>s8W)umHjk^
rVlr"s7?Bbs5EqV"8;BYn[SW!rql]qr;Q0l[4Ns_0doi<rqlZo"o.liqu6Nes24m:r;HX/qYL6as8UJ<
5!MY*@bUk^pAFa^rVlosqr%M+s8V]jo`"jnp%nObSc/QkZ2aFbq>C6pp@e=Vb5^r1s8Moq(&[Ukm:[.L
/1`2Zj8S`?s7,aOp&"Wps8W#srtk_8qYL6bs8Ra*-p:!bG4tt3k5=Q5q>IW!s7?9_rr3,pqY/WprVm#>
s7>O?rr<#us7ZKikl9'1s8Moq(&RgllRWYK*"X<Bm/$b\s8;iiq"sp7s6'D"rVccrrr2ins8N&u8M:c6
,r^e[rVuKdq>1'i!W;i-s82ipq"t'uZ'XhWiq1Rsm.'uNrr_obrVX2*s8Moq$2FDafbtq4$OJ?cWpTT\
rs/Q&q"X^\rr'A,)?'O6s8N#qr;HZqnM`Q>+s'%\r;6Nkp&"XbrrMulq>\2/rV6<j%/lfojnda2r;Z'P
s8Dor"7u'[qW%V$rtY>&l'W/'!<jZ9hXUC@s7Q0^o^r"WbQ$r/s8Duss8Dusrr3J30/t("2HfAFq>^B\
qYL0js80;*rr<#sr;RDdXg[Tcc1(c5kO8HEs8W#pna`j_%f#PT=UGTP%OXa9nbW"[#64Stp\+L^[f76D
rVlfprVlfrq>5(X.PiY<>5nNuq#(!erVccrqt0p)s8W&qrsG?oW;l\Anc/XRk5>5\rpo[9s3pu_p@m_n
%MSmJ2MLhso`+sdq>'^Vr;=S7n,NFcs8Dor&,\=;1E\;>Q2gmSs82<brr)lsq6L&#q#:9sM8dZola?`l
$/Y(Lqu?]kq!mmWrtG,#dMiT-!!PN\p%A7_s8)Qep%A@_[/^1(s8Dor&*GVs0c_f>ZiC($s82Bdrr)ls
q="@%s8Vlnrrn%makH!lrr3;emJm.bs7lBZn^mfnrsS8eN=cF-!!lHPq>($i#5n8ko^r.^_>j0-&,Q/"
qu?]ns.L_d0-`A\iVriYqu$0bs8Vi's8Vros8VWgrrneAhpLM_rr3#ckPbG\nc/'\rtXto9b.RD!"rr4
q=jpbs8;Zeo^r.^rr9J-(&Ie(qu?]ns'[-$0e,G0qZ$Qpo_eF[s8ViYs3L`FqYgF$naZYZe<\eHf^?HP
rrMKErVuofs6nD9h>\5\jsLcH$NLj$o_eLap](0cp[n+Wrk/:,s8Vopqu6U*of+0E/20S\r;ZZonb`"V
s8Vf&s8Vfkrs@uUs8U*Dl0[!d"igT9o'5!.s8VHcmB6I(o#)Fa"U"fA](Gpss82iqp\4=Prr2`n]`8$-
s82fq%aupX-7(H@_YjH4s7Q9`qu?]ijo<j1s7ZEk&*iH[lFFFfk1B(ls7Z*Mhu3TTm/QIts5a1frr2JK
',grS$RY!-qu?]hs7H?j\,ZI-s7lWkrr37o,:Xr`6XK3ZrVuoqqu?]g\GuU#rVmAkkl8--a7&HUrVuof
n`g,=rVuo]s6[&j$i^.e@1=%U#95etkkkD[p&F[arq-6,rt"o"qtpEno5>Wt,UcW4rpfses8;cos7G7L
g&M*DrVm/ekl6OO`UEEirr3)jn`f?;s8V<_mE#=rrt"l$s7cQnp%@;\&-iOL/rZb/"9&9"oaCQis8VaA
/gVS]:T^Sq&,ZCukl:\4eGlo4eb8^"nFutBs3^iIp\Xph$1d`#'+=pP%n!V=s6'CmrVuorq"Xmhc6b"`
,:$gJXT/8!%f?:tnGiO9e,QZ+d/*X;VuHeoqu-O&n+;)B$31_L=4@3LWrE(urr3B%pAb/W-Rfu]+a*>>
s1nXErVlE[s8V-Cs0gV(mch")s472Nr:U'h$NB\i=Xb@!+;/JL^&REu%Jg&(q=XdfDE^041F7mTrsebp
oDejSkl&cmgAC9VVuI;,o`+shrp]DC4YnBE-C3oms/uA2p&G'fqu?\#=&MF]40@QC`;]o5o(2h[#4V!Z
p@mY*c2ZPu&,u2#s7ZK^e1<[5/3Pi%l+$c_rseW#s7?0gkseZH92\@0VZ-emoCN"^#QO5HlMgbZntl?r
pAb0\qra\!0cqi-7-<q1s0Ve:rq-6jo)JWs5u'X9;H`\khuCgu%/KPfqu?]_j7)X;db2\@hu=2[s8VK`
gjh:F,;DManaWscpAYU$o`+s]s7)@Q=[Q%fBr1h9q=O=Us8U77qt:*kfBK+2%JKhspu>+$/1W;6WoNpE
s1/.2qtp$brsAO5;,Bn[;8DDpgAfFt!U01Trs-mKr;Zeps80_6j8TS`s7c;o2^0n0-q;&Eq6'bprrW#n
pAY'ua\G<(;+OsDq#7/j!UB=Vrroq's8W&'rr8kq$iL%poOJ^G+t=X@h<FsRrrVffq>UC#HS%-L9L*al
rr(CIdf0[Dp@\4\aR&s,q4t\'kl2+js6]G-$3CSO*Im8Pri,o"s7H-`rr39i+Y5K25F)3Hr20K$nb2MJ
gUuP3o(^0!s/H#)ki`<[!WWHNW9r[G_uBf4p\Xsi#p:BE+tH4!s7uW?s4@8[o(M;2i8O+_j8[I*nFX<l
li.:UbQndd!!b'qmABmcp\+Rc$if90-oE%r:u;6GrMKT(o_.Onhrs^gj8\QImI^/Qir=N~>

%%EndBinary
grestore
np
grestore
gsave
217.207 163.145 mo
244.207 163.145 li
244.207 167.145 li
217.207 167.145 li
217.207 163.145 li
cp
clp
217.207 163.146 mo
217.207 167.146 li
244.207 167.146 li
244.207 163.146 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 323 ]ct
[27 0 0 4 217.207 155.854 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 81 
/H 12 
/M[81 0 0 -12 0 12 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 81 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
c2RhD'`J(5#5%op#OKR0K4$h[!VQNBs82fsrY5>3!=&2qrs.o4VLr8>)$0F2c2RhD'`J(5#5%op#OKR0
K4$h[!VQNes4I>Oci!hD48/[ZpXQU3Ce5lXr;b+B!71TD!'BoS#PZcTODIK6#lObJrrCCD!!#+Srs/;K
Z]Jup,RF>Kli6#F!0$jV!.XJ;"T@>pS9W<Y!0$jV!.XbCq>UTrikM".c2Rd&r;ZhIn,EOhikM".i;`6F
!(d%g!5Z,D!(d%g!5\%%bPqQ5r;Zi6^An'0!W!<*!!*N(\,QL*%fQG/%/Jl^fDbmJ%fQG/%/IC4!6"j:
!<>TtrrC"9!!#L=s5O%Y`;KZ97^i<sJc,QKMYR4drr@WK!!%o!s6]gdJc,QKMRNNb4oG?\bjGGQrr>4\
!!(6Xs7lTo4oG?\bd[TQo`tHr!>GFks472No`tHr!>GF@rrViu!!<3$'E,E?"liGm!!#mIs5Et]j&$Eh
!)^3)"liGm!!#mls1J@6rQL,)bQ$l-"9$H#ZaB`7rQL,)mf.n=L];l~>

%%EndBinary
grestore
np
grestore
.25 lw
208.422 270.266 mo
188.324 314.93 li
0 0 0 rgb
@
10.5161 128.59 mo
67.438 128.59 li
67.438 148.207 li
10.5161 148.207 li
.707031 138.398 li
10.5161 128.59 li
cp
.360784 .992157 1 rgb
f
gsave
0 323 mo
395 323 li
395 0 li
0 0 li
0 323 li
cp
clp
1 lw
10.5161 128.59 mo
67.438 128.59 li
67.438 148.207 li
10.5161 148.207 li
.707031 138.398 li
10.5161 128.59 li
cp
0 0 0 rgb
@
grestore
23.043 141.383 mo
23.6372 141.914 24.2031 142.18 24.7461 142.18 cv
25.8481 142.18 26.4019 141.332 26.4019 139.633 cv
26.4019 138.145 25.9102 137.398 24.9341 137.398 cv
24.2852 137.398 23.6558 137.75 23.043 138.445 cv
23.043 141.383 li
cp
21.8872 142.977 mo
21.8872 133.648 li
23.043 133.648 li
23.043 137.727 li
23.5122 136.844 24.2188 136.398 25.168 136.398 cv
25.9258 136.398 26.5269 136.68 26.9648 137.242 cv
27.4102 137.797 27.6372 138.555 27.6372 139.523 cv
27.6372 140.578 27.3872 141.426 26.8872 142.07 cv
26.3872 142.719 25.73 143.039 24.918 143.039 cv
24.168 143.039 23.543 142.754 23.043 142.18 cv
22.9019 142.977 li
21.8872 142.977 li
cp
0 0 0 rgb
f
32.5508 141.461 mo
32.5508 139.82 li
32.1602 139.805 li
31.5352 139.805 31.0229 139.926 30.6289 140.164 cv
30.2422 140.406 30.0508 140.723 30.0508 141.117 cv
30.0508 141.391 30.145 141.625 30.332 141.82 cv
30.5269 142.008 30.77 142.102 31.0508 142.102 cv
31.5269 142.102 32.0269 141.891 32.5508 141.461 cv
32.5508 141.461 li
cp
32.7231 142.086 mo
32.0352 142.723 31.3672 143.039 30.7231 143.039 cv
30.1909 143.039 29.7539 142.879 29.4102 142.555 cv
29.0659 142.223 28.895 141.805 28.895 141.305 cv
28.895 140.609 29.1841 140.07 29.77 139.695 cv
30.3521 139.32 31.1841 139.133 32.27 139.133 cv
32.5508 139.133 li
32.5508 138.367 li
32.5508 137.629 32.168 137.258 31.4102 137.258 cv
30.8052 137.258 30.1479 137.445 29.4409 137.82 cv
29.4409 136.867 li
30.2231 136.555 30.9492 136.398 31.6289 136.398 cv
32.3359 136.398 32.855 136.563 33.1909 136.883 cv
33.5352 137.195 33.707 137.691 33.707 138.367 cv
33.707 141.258 li
33.707 141.914 33.9102 142.242 34.3159 142.242 cv
34.3672 142.242 34.4409 142.234 34.5352 142.211 cv
34.6128 142.852 li
34.3521 142.977 34.0659 143.039 33.7539 143.039 cv
33.2109 143.039 32.8672 142.723 32.7231 142.086 cv
32.7231 142.086 li
cp
f
37.7539 143.039 mo
37.2231 143.039 36.582 142.918 35.832 142.68 cv
35.832 141.617 li
36.582 141.992 37.2378 142.18 37.8008 142.18 cv
38.1328 142.18 38.4102 142.094 38.6289 141.914 cv
38.8481 141.727 38.957 141.5 38.957 141.227 cv
38.957 140.844 38.6479 140.52 38.0352 140.258 cv
37.3628 139.961 li
36.3628 139.555 35.8628 138.961 35.8628 138.18 cv
35.8628 137.629 36.0591 137.195 36.457 136.883 cv
36.8521 136.563 37.3872 136.398 38.0659 136.398 cv
38.418 136.398 38.8628 136.445 39.395 136.539 cv
39.6289 136.586 li
39.6289 137.555 li
38.98 137.359 38.4731 137.258 38.0981 137.258 cv
37.3481 137.258 36.9731 137.531 36.9731 138.07 cv
36.9731 138.414 37.2539 138.707 37.8159 138.945 cv
38.3789 139.18 li
39.0039 139.453 39.4448 139.734 39.707 140.023 cv
39.9771 140.316 40.1128 140.688 40.1128 141.133 cv
40.1128 141.688 39.8872 142.145 39.4409 142.508 cv
39.0039 142.863 38.4409 143.039 37.7539 143.039 cv
37.7539 143.039 li
cp
f
42.9019 139.023 mo
45.7148 139.023 li
45.7148 137.848 45.27 137.258 44.3872 137.258 cv
43.5 137.258 43.0039 137.848 42.9019 139.023 cv
42.9019 139.023 li
cp
46.8398 142.695 mo
46.0659 142.922 45.4058 143.039 44.855 143.039 cv
43.918 143.039 43.1519 142.734 42.5591 142.117 cv
41.9731 141.492 41.6841 140.68 41.6841 139.68 cv
41.6841 138.723 41.9409 137.938 42.4648 137.32 cv
42.9839 136.695 43.6519 136.383 44.4648 136.383 cv
45.2339 136.383 45.8281 136.66 46.2461 137.211 cv
46.6602 137.754 46.8711 138.531 46.8711 139.539 cv
46.8711 139.898 li
42.855 139.898 li
43.02 141.41 43.7622 142.164 45.0742 142.164 cv
45.5508 142.164 46.1411 142.035 46.8398 141.773 cv
46.8398 142.695 li
cp
f
331.707 98.73 mo
383.883 98.73 li
393.723 108.57 li
383.883 118.41 li
331.707 118.41 li
331.707 98.73 li
cp
.360784 .992157 1 rgb
f
gsave
317.207 84.145 mo
394.223 84.145 li
394.223 133.145 li
317.207 133.145 li
317.207 84.145 li
cp
clp
1 lw
331.707 98.73 mo
383.883 98.73 li
393.723 108.57 li
383.883 118.41 li
331.707 118.41 li
331.707 98.73 li
cp
0 0 0 rgb
@
grestore
354.578 113.211 mo
353.992 113.211 353.535 113.047 353.203 112.711 cv
352.879 112.379 352.719 111.91 352.719 111.305 cv
352.719 107.57 li
351.922 107.57 li
351.922 106.711 li
352.719 106.711 li
352.719 105.555 li
353.875 105.445 li
353.875 106.711 li
355.531 106.711 li
355.531 107.57 li
353.875 107.57 li
353.875 111.102 li
353.875 111.938 354.234 112.352 354.953 112.352 cv
355.098 112.352 355.281 112.328 355.5 112.273 cv
355.5 113.07 li
355.145 113.164 354.836 113.211 354.578 113.211 cv
354.578 113.211 li
cp
0 0 0 rgb
f
359.66 112.352 mo
360.887 112.352 361.504 111.531 361.504 109.883 cv
361.504 108.25 360.898 107.43 359.691 107.43 cv
358.48 107.43 357.879 108.25 357.879 109.883 cv
357.879 111.531 358.473 112.352 359.66 112.352 cv
359.66 112.352 li
cp
359.645 113.211 mo
358.738 113.211 358.012 112.91 357.473 112.305 cv
356.93 111.703 356.66 110.895 356.66 109.883 cv
356.66 108.863 356.93 108.055 357.473 107.461 cv
358.012 106.867 358.754 106.57 359.691 106.57 cv
360.629 106.57 361.367 106.867 361.91 107.461 cv
362.449 108.055 362.723 108.863 362.723 109.883 cv
362.723 110.914 362.445 111.727 361.895 112.32 cv
361.352 112.914 360.602 113.211 359.645 113.211 cv
359.645 113.211 li
cp
f
367.031 112.352 mo
368.258 112.352 368.875 111.531 368.875 109.883 cv
368.875 108.25 368.27 107.43 367.063 107.43 cv
365.852 107.43 365.25 108.25 365.25 109.883 cv
365.25 111.531 365.844 112.352 367.031 112.352 cv
367.031 112.352 li
cp
367.016 113.211 mo
366.109 113.211 365.383 112.91 364.844 112.305 cv
364.301 111.703 364.031 110.895 364.031 109.883 cv
364.031 108.863 364.301 108.055 364.844 107.461 cv
365.383 106.867 366.125 106.57 367.063 106.57 cv
368 106.57 368.738 106.867 369.281 107.461 cv
369.82 108.055 370.094 108.863 370.094 109.883 cv
370.094 110.914 369.816 111.727 369.266 112.32 cv
368.723 112.914 367.973 113.211 367.016 113.211 cv
367.016 113.211 li
cp
f
371.902 103.82 mo
373.058 103.82 li
373.058 113.07 li
371.902 113.07 li
371.902 103.82 li
cp
f
.61 lw
197.027 268.828 mo
199.781 260.305 li
208.516 263.453 li
1 .129412 0 rgb
@
209.48 273.109 mo
209.48 272.801 209.422 272.488 209.301 272.203 cv
209.184 271.918 209.008 271.656 208.789 271.438 cv
208.57 271.219 208.305 271.043 208.02 270.922 cv
207.734 270.805 207.426 270.742 207.113 270.742 cv
206.805 270.742 206.496 270.805 206.211 270.922 cv
205.922 271.043 205.66 271.219 205.441 271.438 cv
205.223 271.656 205.047 271.918 204.93 272.203 cv
204.809 272.488 204.746 272.801 204.746 273.109 cv
204.746 273.418 204.809 273.73 204.93 274.016 cv
205.047 274.301 205.223 274.563 205.441 274.781 cv
205.66 275 205.922 275.176 206.211 275.297 cv
206.496 275.414 206.805 275.477 207.113 275.477 cv
207.426 275.477 207.734 275.414 208.02 275.297 cv
208.305 275.176 208.57 275 208.789 274.781 cv
209.008 274.563 209.184 274.301 209.301 274.016 cv
209.422 273.73 209.48 273.418 209.48 273.109 cv
209.48 273.109 li
cp
f
268.703 263.363 mo
268.813 262.895 269.234 261.254 270.484 261.254 cv
270.578 261.254 271 261.254 271.375 261.488 cv
270.875 261.582 270.516 262.02 270.516 262.457 cv
270.516 262.738 270.719 263.082 271.203 263.082 cv
271.594 263.082 272.172 262.754 272.172 262.035 cv
272.172 261.113 271.109 260.863 270.5 260.863 cv
269.469 260.863 268.828 261.801 268.625 262.223 cv
268.172 261.035 267.203 260.863 266.688 260.863 cv
264.813 260.863 263.797 263.176 263.797 263.613 cv
263.797 263.801 263.969 263.801 264.016 263.801 cv
264.156 263.801 264.203 263.77 264.25 263.598 cv
264.859 261.707 266.031 261.254 266.641 261.254 cv
266.984 261.254 267.609 261.41 267.609 262.457 cv
267.609 263.004 267.313 264.207 266.641 266.723 cv
266.359 267.832 265.734 268.582 264.938 268.582 cv
264.828 268.582 264.422 268.582 264.047 268.348 cv
264.5 268.27 264.891 267.895 264.891 267.379 cv
264.891 266.895 264.5 266.754 264.219 266.754 cv
263.688 266.754 263.234 267.223 263.234 267.801 cv
263.234 268.629 264.141 268.988 264.922 268.988 cv
266.109 268.988 266.75 267.723 266.813 267.613 cv
267.031 268.285 267.672 268.988 268.75 268.988 cv
270.594 268.988 271.609 266.676 271.609 266.223 cv
271.609 266.035 271.453 266.035 271.406 266.035 cv
271.234 266.035 271.203 266.113 271.172 266.238 cv
270.578 268.16 269.359 268.582 268.781 268.582 cv
268.078 268.582 267.797 268.02 267.797 267.41 cv
267.797 267.004 267.906 266.613 268.094 265.832 cv
268.703 263.363 li
cp
0 0 1 rgb
f
275.813 272.086 mo
275.609 272.961 274.938 273.68 274.203 273.68 cv
274.031 273.68 273.891 273.664 273.75 273.617 cv
274.078 273.461 274.172 273.164 274.172 272.977 cv
274.172 272.664 273.938 272.508 273.688 272.508 cv
273.297 272.508 272.969 272.852 272.969 273.242 cv
272.969 273.727 273.453 274.039 274.203 274.039 cv
274.969 274.039 276.438 273.586 276.828 272.055 cv
277.953 267.555 li
277.984 267.43 278.016 267.305 278.016 267.117 cv
278.016 266.43 277.422 265.945 276.672 265.945 cv
275.281 265.945 274.469 267.68 274.469 267.867 cv
274.469 268.023 274.656 268.023 274.688 268.023 cv
274.844 268.023 274.844 267.992 274.938 267.805 cv
275.25 267.07 275.906 266.289 276.625 266.289 cv
276.953 266.289 277.063 266.508 277.063 266.914 cv
277.063 267.055 277.031 267.227 277.016 267.289 cv
275.813 272.086 li
cp
278.484 263.633 mo
278.484 263.414 278.313 263.164 277.969 263.164 cv
277.609 263.164 277.266 263.508 277.266 263.852 cv
277.266 264.055 277.422 264.32 277.781 264.32 cv
278.109 264.32 278.484 263.992 278.484 263.633 cv
278.484 263.633 li
cp
f
270.445 220.266 mo
270.523 220.016 270.523 219.969 270.523 219.844 cv
270.523 219.531 270.258 219.359 269.992 219.359 cv
269.82 219.359 269.523 219.469 269.367 219.734 cv
269.336 219.828 269.195 220.391 269.117 220.703 cv
268.992 221.172 268.867 221.656 268.758 222.141 cv
267.945 225.375 li
267.883 225.641 267.102 226.891 265.93 226.891 cv
265.008 226.891 264.805 226.109 264.805 225.438 cv
264.805 224.625 265.117 223.5 265.727 221.922 cv
266.008 221.188 266.086 221 266.086 220.641 cv
266.086 219.828 265.508 219.172 264.617 219.172 cv
262.914 219.172 262.242 221.766 262.242 221.922 cv
262.242 222.109 262.43 222.109 262.461 222.109 cv
262.648 222.109 262.664 222.078 262.742 221.781 cv
263.227 220.094 263.945 219.563 264.555 219.563 cv
264.711 219.563 265.008 219.563 265.008 220.141 cv
265.008 220.578 264.836 221.047 264.711 221.391 cv
263.992 223.297 263.664 224.313 263.664 225.156 cv
263.664 226.75 264.789 227.297 265.852 227.297 cv
266.555 227.297 267.164 226.984 267.664 226.484 cv
267.43 227.422 267.211 228.297 266.492 229.25 cv
266.039 229.859 265.352 230.375 264.523 230.375 cv
264.273 230.375 263.461 230.328 263.164 229.625 cv
263.445 229.625 263.68 229.625 263.93 229.406 cv
264.117 229.25 264.289 229.016 264.289 228.672 cv
264.289 228.109 263.805 228.047 263.633 228.047 cv
263.211 228.047 262.617 228.328 262.617 229.203 cv
262.617 230.109 263.414 230.766 264.523 230.766 cv
266.367 230.766 268.227 229.141 268.727 227.109 cv
270.445 220.266 li
cp
f
273.359 230.391 mo
273.156 231.266 272.484 231.984 271.75 231.984 cv
271.578 231.984 271.438 231.969 271.297 231.922 cv
271.625 231.766 271.719 231.469 271.719 231.281 cv
271.719 230.969 271.484 230.813 271.234 230.813 cv
270.844 230.813 270.516 231.156 270.516 231.547 cv
270.516 232.031 271 232.344 271.75 232.344 cv
272.516 232.344 273.984 231.891 274.375 230.359 cv
275.5 225.859 li
275.531 225.734 275.563 225.609 275.563 225.422 cv
275.563 224.734 274.969 224.25 274.219 224.25 cv
272.828 224.25 272.016 225.984 272.016 226.172 cv
272.016 226.328 272.203 226.328 272.234 226.328 cv
272.391 226.328 272.391 226.297 272.484 226.109 cv
272.797 225.375 273.453 224.594 274.172 224.594 cv
274.5 224.594 274.609 224.813 274.609 225.219 cv
274.609 225.359 274.578 225.531 274.563 225.594 cv
273.359 230.391 li
cp
276.031 221.938 mo
276.031 221.719 275.859 221.469 275.516 221.469 cv
275.156 221.469 274.813 221.813 274.813 222.156 cv
274.813 222.359 274.969 222.625 275.328 222.625 cv
275.656 222.625 276.031 222.297 276.031 221.938 cv
276.031 221.938 li
cp
f
238.883 177.875 mo
239.852 176.828 240.367 176.375 241.008 175.828 cv
241.008 175.813 242.117 174.859 242.773 174.219 cv
244.477 172.547 244.867 171.688 244.867 171.609 cv
244.867 171.438 244.711 171.438 244.664 171.438 cv
244.539 171.438 244.492 171.469 244.398 171.625 cv
243.867 172.484 243.492 172.781 243.055 172.781 cv
242.633 172.781 242.414 172.5 242.148 172.203 cv
241.805 171.797 241.492 171.438 240.898 171.438 cv
239.555 171.438 238.727 173.094 238.727 173.469 cv
238.727 173.563 238.789 173.672 238.945 173.672 cv
239.117 173.672 239.148 173.578 239.18 173.469 cv
239.523 172.656 240.57 172.641 240.711 172.641 cv
241.086 172.641 241.43 172.766 241.836 172.906 cv
242.555 173.172 242.758 173.172 243.211 173.172 cv
242.57 173.938 241.07 175.234 240.727 175.516 cv
239.117 177.031 li
237.898 178.234 237.258 179.25 237.258 179.375 cv
237.258 179.563 237.445 179.563 237.477 179.563 cv
237.617 179.563 237.664 179.516 237.773 179.328 cv
238.18 178.703 238.711 178.219 239.289 178.219 cv
239.695 178.219 239.883 178.375 240.336 178.891 cv
240.633 179.266 240.961 179.563 241.477 179.563 cv
243.258 179.563 244.289 177.281 244.289 176.797 cv
244.289 176.703 244.227 176.609 244.086 176.609 cv
243.914 176.609 243.883 176.719 243.836 176.844 cv
243.414 178.016 242.273 178.359 241.68 178.359 cv
241.32 178.359 240.992 178.25 240.617 178.125 cv
240.008 177.891 239.742 177.813 239.367 177.813 cv
239.32 177.813 239.039 177.813 238.883 177.875 cv
238.883 177.875 li
cp
f
247.68 182.66 mo
247.477 183.535 246.805 184.254 246.07 184.254 cv
245.898 184.254 245.758 184.238 245.617 184.191 cv
245.945 184.035 246.039 183.738 246.039 183.551 cv
246.039 183.238 245.805 183.082 245.555 183.082 cv
245.164 183.082 244.836 183.426 244.836 183.816 cv
244.836 184.301 245.32 184.613 246.07 184.613 cv
246.836 184.613 248.305 184.16 248.695 182.629 cv
249.82 178.129 li
249.852 178.004 249.883 177.879 249.883 177.691 cv
249.883 177.004 249.289 176.52 248.539 176.52 cv
247.148 176.52 246.336 178.254 246.336 178.441 cv
246.336 178.598 246.523 178.598 246.555 178.598 cv
246.711 178.598 246.711 178.566 246.805 178.379 cv
247.117 177.645 247.773 176.863 248.492 176.863 cv
248.82 176.863 248.93 177.082 248.93 177.488 cv
248.93 177.629 248.898 177.801 248.883 177.863 cv
247.68 182.66 li
cp
250.352 174.207 mo
250.352 173.988 250.18 173.738 249.836 173.738 cv
249.477 173.738 249.133 174.082 249.133 174.426 cv
249.133 174.629 249.289 174.895 249.648 174.895 cv
249.977 174.895 250.352 174.566 250.352 174.207 cv
250.352 174.207 li
cp
f
79.8872 157.273 mo
80.855 156.227 81.3711 155.773 82.0122 155.227 cv
82.0122 155.211 83.1211 154.258 83.7769 153.617 cv
85.48 151.945 85.8711 151.086 85.8711 151.008 cv
85.8711 150.836 85.7148 150.836 85.668 150.836 cv
85.543 150.836 85.4961 150.867 85.4019 151.023 cv
84.8711 151.883 84.4961 152.18 84.0591 152.18 cv
83.6372 152.18 83.418 151.898 83.1519 151.602 cv
82.8091 151.195 82.4961 150.836 81.9019 150.836 cv
80.5591 150.836 79.73 152.492 79.73 152.867 cv
79.73 152.961 79.793 153.07 79.9492 153.07 cv
80.1211 153.07 80.1519 152.977 80.1841 152.867 cv
80.5269 152.055 81.5742 152.039 81.7148 152.039 cv
82.0898 152.039 82.4341 152.164 82.8398 152.305 cv
83.5591 152.57 83.7622 152.57 84.2148 152.57 cv
83.5742 153.336 82.0742 154.633 81.73 154.914 cv
80.1211 156.43 li
78.9019 157.633 78.2622 158.648 78.2622 158.773 cv
78.2622 158.961 78.4492 158.961 78.48 158.961 cv
78.6211 158.961 78.668 158.914 78.7769 158.727 cv
79.1841 158.102 79.7148 157.617 80.293 157.617 cv
80.6992 157.617 80.8872 157.773 81.3398 158.289 cv
81.6372 158.664 81.9648 158.961 82.48 158.961 cv
84.2622 158.961 85.293 156.68 85.293 156.195 cv
85.293 156.102 85.23 156.008 85.0898 156.008 cv
84.918 156.008 84.8872 156.117 84.8398 156.242 cv
84.418 157.414 83.2769 157.758 82.6841 157.758 cv
82.3242 157.758 81.9961 157.648 81.6211 157.523 cv
81.0122 157.289 80.7461 157.211 80.3711 157.211 cv
80.3242 157.211 80.043 157.211 79.8872 157.273 cv
79.8872 157.273 li
cp
.980392 0 .00784314 rgb
f
88.6841 162.059 mo
88.48 162.934 87.8091 163.652 87.0742 163.652 cv
86.9019 163.652 86.7622 163.637 86.6211 163.59 cv
86.9492 163.434 87.043 163.137 87.043 162.949 cv
87.043 162.637 86.8091 162.48 86.5591 162.48 cv
86.168 162.48 85.8398 162.824 85.8398 163.215 cv
85.8398 163.699 86.3242 164.012 87.0742 164.012 cv
87.8398 164.012 89.3091 163.559 89.6992 162.027 cv
90.8242 157.527 li
90.855 157.402 90.8872 157.277 90.8872 157.09 cv
90.8872 156.402 90.293 155.918 89.543 155.918 cv
88.1519 155.918 87.3398 157.652 87.3398 157.84 cv
87.3398 157.996 87.5269 157.996 87.5591 157.996 cv
87.7148 157.996 87.7148 157.965 87.8091 157.777 cv
88.1211 157.043 88.7769 156.262 89.4961 156.262 cv
89.8242 156.262 89.9341 156.48 89.9341 156.887 cv
89.9341 157.027 89.9019 157.199 89.8872 157.262 cv
88.6841 162.059 li
cp
91.355 153.605 mo
91.355 153.387 91.1841 153.137 90.8398 153.137 cv
90.48 153.137 90.1372 153.48 90.1372 153.824 cv
90.1372 154.027 90.293 154.293 90.6519 154.293 cv
90.98 154.293 91.355 153.965 91.355 153.605 cv
91.355 153.605 li
cp
f
101.824 158.621 mo
102.027 158.621 102.34 158.621 102.34 158.309 cv
102.34 157.996 102.043 157.996 101.824 157.996 cv
94.355 157.996 li
94.1519 157.996 93.855 157.996 93.855 158.293 cv
93.855 158.621 94.1372 158.621 94.355 158.621 cv
101.824 158.621 li
cp
f
107.91 153.465 mo
107.91 153.137 107.879 153.121 107.535 153.121 cv
106.738 153.902 105.582 153.918 105.082 153.918 cv
105.082 154.371 li
105.379 154.371 106.207 154.371 106.895 154.027 cv
106.895 160.418 li
106.895 160.84 106.895 160.996 105.645 160.996 cv
105.16 160.996 li
105.16 161.449 li
105.395 161.434 106.926 161.402 107.395 161.402 cv
107.785 161.402 109.363 161.434 109.645 161.449 cv
109.645 160.996 li
109.16 160.996 li
107.91 160.996 107.91 160.84 107.91 160.418 cv
107.91 153.465 li
cp
f
114.754 181.359 mo
114.832 181.109 114.832 181.063 114.832 180.938 cv
114.832 180.625 114.566 180.453 114.301 180.453 cv
114.129 180.453 113.832 180.563 113.676 180.828 cv
113.645 180.922 113.504 181.484 113.426 181.797 cv
113.301 182.266 113.176 182.75 113.066 183.234 cv
112.254 186.469 li
112.191 186.734 111.41 187.984 110.238 187.984 cv
109.316 187.984 109.113 187.203 109.113 186.531 cv
109.113 185.719 109.426 184.594 110.035 183.016 cv
110.316 182.281 110.395 182.094 110.395 181.734 cv
110.395 180.922 109.816 180.266 108.926 180.266 cv
107.223 180.266 106.551 182.859 106.551 183.016 cv
106.551 183.203 106.738 183.203 106.77 183.203 cv
106.957 183.203 106.973 183.172 107.051 182.875 cv
107.535 181.188 108.254 180.656 108.863 180.656 cv
109.02 180.656 109.316 180.656 109.316 181.234 cv
109.316 181.672 109.145 182.141 109.02 182.484 cv
108.301 184.391 107.973 185.406 107.973 186.25 cv
107.973 187.844 109.098 188.391 110.16 188.391 cv
110.863 188.391 111.473 188.078 111.973 187.578 cv
111.738 188.516 111.52 189.391 110.801 190.344 cv
110.348 190.953 109.66 191.469 108.832 191.469 cv
108.582 191.469 107.77 191.422 107.473 190.719 cv
107.754 190.719 107.988 190.719 108.238 190.5 cv
108.426 190.344 108.598 190.109 108.598 189.766 cv
108.598 189.203 108.113 189.141 107.941 189.141 cv
107.52 189.141 106.926 189.422 106.926 190.297 cv
106.926 191.203 107.723 191.859 108.832 191.859 cv
110.676 191.859 112.535 190.234 113.035 188.203 cv
114.754 181.359 li
cp
f
117.668 191.488 mo
117.465 192.363 116.793 193.082 116.059 193.082 cv
115.887 193.082 115.746 193.066 115.605 193.02 cv
115.934 192.863 116.027 192.566 116.027 192.379 cv
116.027 192.066 115.793 191.91 115.543 191.91 cv
115.152 191.91 114.824 192.254 114.824 192.645 cv
114.824 193.129 115.309 193.441 116.059 193.441 cv
116.824 193.441 118.293 192.988 118.684 191.457 cv
119.809 186.957 li
119.84 186.832 119.871 186.707 119.871 186.52 cv
119.871 185.832 119.277 185.348 118.527 185.348 cv
117.137 185.348 116.324 187.082 116.324 187.27 cv
116.324 187.426 116.512 187.426 116.543 187.426 cv
116.699 187.426 116.699 187.395 116.793 187.207 cv
117.105 186.473 117.762 185.691 118.48 185.691 cv
118.809 185.691 118.918 185.91 118.918 186.316 cv
118.918 186.457 118.887 186.629 118.871 186.691 cv
117.668 191.488 li
cp
120.34 183.035 mo
120.34 182.816 120.168 182.566 119.824 182.566 cv
119.465 182.566 119.121 182.91 119.121 183.254 cv
119.121 183.457 119.277 183.723 119.637 183.723 cv
119.965 183.723 120.34 183.395 120.34 183.035 cv
120.34 183.035 li
cp
f
130.813 188.051 mo
131.016 188.051 131.328 188.051 131.328 187.738 cv
131.328 187.426 131.031 187.426 130.813 187.426 cv
123.344 187.426 li
123.141 187.426 122.844 187.426 122.844 187.723 cv
122.844 188.051 123.125 188.051 123.344 188.051 cv
130.813 188.051 li
cp
f
136.898 182.895 mo
136.898 182.566 136.867 182.551 136.523 182.551 cv
135.727 183.332 134.57 183.348 134.07 183.348 cv
134.07 183.801 li
134.367 183.801 135.195 183.801 135.883 183.457 cv
135.883 189.848 li
135.883 190.27 135.883 190.426 134.633 190.426 cv
134.148 190.426 li
134.148 190.879 li
134.383 190.863 135.914 190.832 136.383 190.832 cv
136.773 190.832 138.352 190.863 138.633 190.879 cv
138.633 190.426 li
138.148 190.426 li
136.898 190.426 136.898 190.27 136.898 189.848 cv
136.898 182.895 li
cp
f
101.895 243.418 mo
102.004 242.949 102.426 241.309 103.676 241.309 cv
103.77 241.309 104.191 241.309 104.566 241.543 cv
104.066 241.637 103.707 242.074 103.707 242.512 cv
103.707 242.793 103.91 243.137 104.395 243.137 cv
104.785 243.137 105.363 242.809 105.363 242.09 cv
105.363 241.168 104.301 240.918 103.691 240.918 cv
102.66 240.918 102.02 241.854 101.816 242.277 cv
101.363 241.09 100.395 240.918 99.8789 240.918 cv
98.0039 240.918 96.9878 243.23 96.9878 243.668 cv
96.9878 243.855 97.1602 243.855 97.207 243.855 cv
97.3481 243.855 97.395 243.824 97.4409 243.652 cv
98.0508 241.762 99.2231 241.309 99.832 241.309 cv
100.176 241.309 100.801 241.465 100.801 242.512 cv
100.801 243.059 100.504 244.262 99.832 246.777 cv
99.5508 247.887 98.9258 248.637 98.1289 248.637 cv
98.02 248.637 97.6128 248.637 97.2378 248.402 cv
97.6909 248.324 98.082 247.949 98.082 247.434 cv
98.082 246.949 97.6909 246.809 97.4102 246.809 cv
96.8789 246.809 96.4258 247.277 96.4258 247.855 cv
96.4258 248.684 97.332 249.043 98.1128 249.043 cv
99.3008 249.043 99.9409 247.777 100.004 247.668 cv
100.223 248.34 100.863 249.043 101.941 249.043 cv
103.785 249.043 104.801 246.73 104.801 246.277 cv
104.801 246.09 104.645 246.09 104.598 246.09 cv
104.426 246.09 104.395 246.168 104.363 246.293 cv
103.77 248.215 102.551 248.637 101.973 248.637 cv
101.27 248.637 100.988 248.074 100.988 247.465 cv
100.988 247.059 101.098 246.668 101.285 245.887 cv
101.895 243.418 li
cp
f
109.004 252.141 mo
108.801 253.016 108.129 253.734 107.395 253.734 cv
107.223 253.734 107.082 253.719 106.941 253.672 cv
107.27 253.516 107.363 253.219 107.363 253.031 cv
107.363 252.719 107.129 252.563 106.879 252.563 cv
106.488 252.563 106.16 252.906 106.16 253.297 cv
106.16 253.781 106.645 254.094 107.395 254.094 cv
108.16 254.094 109.629 253.641 110.02 252.109 cv
111.145 247.609 li
111.176 247.484 111.207 247.359 111.207 247.172 cv
111.207 246.484 110.613 246 109.863 246 cv
108.473 246 107.66 247.734 107.66 247.922 cv
107.66 248.078 107.848 248.078 107.879 248.078 cv
108.035 248.078 108.035 248.047 108.129 247.859 cv
108.441 247.125 109.098 246.344 109.816 246.344 cv
110.145 246.344 110.254 246.563 110.254 246.969 cv
110.254 247.109 110.223 247.281 110.207 247.344 cv
109.004 252.141 li
cp
111.676 243.688 mo
111.676 243.469 111.504 243.219 111.16 243.219 cv
110.801 243.219 110.457 243.563 110.457 243.906 cv
110.457 244.109 110.613 244.375 110.973 244.375 cv
111.301 244.375 111.676 244.047 111.676 243.688 cv
111.676 243.688 li
cp
f
122.145 248.703 mo
122.348 248.703 122.66 248.703 122.66 248.391 cv
122.66 248.078 122.363 248.078 122.145 248.078 cv
114.676 248.078 li
114.473 248.078 114.176 248.078 114.176 248.375 cv
114.176 248.703 114.457 248.703 114.676 248.703 cv
122.145 248.703 li
cp
f
128.227 243.547 mo
128.227 243.219 128.195 243.203 127.852 243.203 cv
127.055 243.984 125.898 244 125.398 244 cv
125.398 244.453 li
125.695 244.453 126.523 244.453 127.211 244.109 cv
127.211 250.5 li
127.211 250.922 127.211 251.078 125.961 251.078 cv
125.477 251.078 li
125.477 251.531 li
125.711 251.516 127.242 251.484 127.711 251.484 cv
128.102 251.484 129.68 251.516 129.961 251.531 cv
129.961 251.078 li
129.477 251.078 li
128.227 251.078 128.227 250.922 128.227 250.5 cv
128.227 243.547 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig7_mod_denavit_hartenberg.eps)
%%CreationDate: 2/15/2022 6:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B6Q*kdieR;^<c>!+P8#.2`Vb>K8g<e)6aPs1r2R=0QYS3@=S/HlD/;Y&[$OppWOL^5c^r];Q5hZUq=82k-,oQf@0BS^JP))
%KFM7[h[goXL-Ql'o:NY,ik.bJZl3L7UVhsmn#Q(m7.#/cc#Q2?U5$lVK=0ZL0Ek5VL(:UrDZ2PiQ\3Ze]TXfKqYBrMb&?Lo?uI1$
%D?Bc/HMcsEHoZX=XG.E02$>-LqVBan:n'NH%R>c@dI3cXBa&sc;u8`A+@$:MgslaG]J&2EoUkfO7SW'X4[%HD2sW+9#FXFb<s*cR
%P7B5)-3t*0K3E,YK0=p%i$/<kJAE$._S<s#Xsk2(C?>j,h';t$_"uk!K('_2iK0Ob7"X>a(d8;4Y6Yi<rgHc87h%n%0W&NL:ap]t
%TDoE=2sL&M"S7t.<')W[]"+F$60GrF[g5@#Qd(n$Ji<fDq;hSg#lR7#J(YTs!Bm:Q@(&#;"!g[l&E^6JfdIC1U#;`0/<\/A=uS>k
%e6+P9#l4FL$=3g+#5hjerBZ&paIr$J6f8Kkj!BDo/9D.)!od$!SuRBFXjH\(Hl_>F)!Vq$q,j$LOOk%Urh+8@_q=u$mXM[W@.=%V
%[H@;rfIZWG0b*)jWC*btof09\_3rrlYA(d)CVWNbc'3W+HpQ'YLr5N!#5Y%n\cFJ.f+@GrIpSOUiI5op!"TJ0k--G>-_$V*=B"8)
%O>=2Ad=+H8\K)V=_]SBeB!<J62DjX6#f$Gtq)7ZWHu%12#f]G7#3I@Z(OZJe:>im5hTo(5YTa5NbceSM?ds,&`;oME%+\q+qgdPg
%!FB%AecXWV*q6DWo=r))!?dd1?2.,1=MQdu5U>t7C*Q$<dK"Wi$e8WL"#>g=O*<^.k,Y<Lb`@'8f)Jk^2p;#7`<4&.iBQYph4C@m
%Pr7#bqQQG,)OnuL+9^/DI3_KA]k?3tf-'#kb96irs1Q3(KB7,;V$Gc.HmAr(juJJniE]_o1dY0._^KuP,<LA7hh6bpU>0u'KV-,e
%<c(e8Ha"U:J9Vs["+!^VX@5+^PPH-\>XSHDhc%C>D,skSrYXq,_&!"Y>NW2V!o-$_-jX&Y\6PK&+i6?o)Lh_4Ooeh-o=WrX]gglf
%;:)W[+Hctbjo3G8n@T63Ped[[eE=UcU%h*1T`Y6".[Dou#On&upu;hf#VXPdmU.FU%/\BV_X$k]m7<=)5PnVG"^`C_Du[Uk:Z0\4
%q!E!-_&-Je+('\0HikDkYR&8dFG1=_Z((b14J8VA!u_pt"Z@cGl;S!]TT1I5(tG>ZIS5Y]7"P(35fu[#^$5n$T,)ajj#h1AaoJAR
%@ZH5f1c^aI8:l-.aF4E[s5SP5^ne^p@:21A=dIaW*cT&'ho#Bmq$);=O!&]PoKV[Qm?dAoYT4H"`sgQ!Y*NkM^]da\4Wba='MsKY
%e2TnGKE%]SY(Qso2jsd1K;R49/$Hcf!i4ft_a"$JTH$4XXnV-es/uI:Mh/iM#8l#jESJ54b6-W=51h;@>_A<d[UXZj'7]tqSlG%#
%RaOR"j^tlm`k'7020JmK"ur+t-^iI?8AI$sFa-?Md4nJ1q)+T"Eh\Z\7+"M^q-^_.FKGs71]@>8,FgA#U4;DD$aB$5KAkcK7u,oL
%ZhbJo^H]l8dG4fV>>U*,Ff:p2s%f^8d%PqnJ,\>/b.GdQrrW3!^HdtNQLiN(4(@".%D_J:_,I*599iB#W;1P4CC0Q+rtXN4L:Xe4
%p0W77r%Ap"%,>WXkT=(TqWD3@,$uUg3MO:Oj8D['W7[F9MNNI4Q/6?,`\lQ<JRq]U-@9>D5h?R.?i&@k&P+t62[=XsU&D?JLD9iS
%gV9I).r%9c"7tdbSV^V,)=s5TOm(dbX>Tj2@.D-O`=u#U;J:8?:8LTb>pp?U)o@7em#FIXbegQ$k3G1q[M<ZPM:e97Pb%9ObJ?Cr
%"+%cm+[tjTRfPZ15^0TGSrZ.G\Y3D[,d6()W>bXIh"p(X.7.C:QAnUu_9@"t]%P>:cd?5UVGPo.;uJA5;L)*mEF!4pCThbWca?'g
%j@CdIV_?,NDEA\r"e%0%<eK3pML;nhm%s(Rb;gq"6C^jkDs)$32a@2gBX=K<Sk,+TWPa0pW"!os$LZ_ATu(K7@DZhQ;RBkRfIuE'
%b-9XLRftI6nCFCd@l)#3]brE;)hodTl;h[^heh;S[:'@8UX4IaZus<k*Ge"XG4X6mM*e%"qmr^)b7TZ-$\Ysd#OC2h!7p2o+4.q$
%(dS'B8g5Zk_Z@fP,Ih+*EM(kO%4a=lGelZ?FfO,<8lNB%ctlDIOecA-i!Uql-1O04[`/-:fi[G?)>&W2HrDY0Ri/=-)XQ`5H=F3e
%V5YJ(s$[eD?u"&saC$u7cM.?0j99;Ba+;VZ[\5fc:ChF)\[pI'9]ZTm`/u=^2GN.jHloH[!W8*fDDlTPYb(;qJCW!S/>06)k;@p@
%A4RXT1m-`d0pSGubM7UAa+@=eQ.C=AB1?.`&,%!*_IUT##Y"[J'9G.2>>bDDLp6n)&8>[5LnFlZ[K6T.$]6J]6]lmo8jY&l6p_5!
%VR.CCs/f4pc$Fcs9DLT]dmA^)7:jK'hW'B5ksY,ncCSYi_XTI<6DVn@L-T9^R8f9]>Af.5rhAU.h!j!2]J3U8[m7[CnC<#>I$k'3
%cG)\R!Wde+7U"".(J6eE$jU1-,MkEVGbN.K_oa*4$@Nqa(ig69cbi7nC2^oTO9!,]C+'p+W83EaSOb,:kW%IU&A:t%m'f5+C:n('
%K5SQn_sFs'Wg#_!QX!m%@"ppfn<=FcKRt@)_,J,P]W-WWbA.R?[P_A'#_\=W=P40RJq3S#<#b!*,:^*m/h,'-O>2f"LD@E&ZaTol
%JK;>B=@N7!Jr?#&#^LkG[9jj^Q<GI7k/MD:<#u#`O%;a?1krp\[IjdA+hsJE_g+Y0Tho6X:Gghki=j^;bU;8?QW36(*$*nn5WBB'
%<SC't>,A'ec6CkGe5qWL9dVrZk8?^;L+4kZ]^@p94OdPD#*r?$X$rD?[ojO;TUo4np^P(>`6IQi-?KLYrS.CCNI_WY#)GbgH;'<0
%*#sUoFgDlKk@U\%A0C%XQ*T[q)\^k1"7TLDKXA8Pd)CQA:;JOjScu9P&B"uV5T*T'e\hecg:"l0(3N&)8CX^aGT\0GY%HBAMSR+T
%:E%Y**C`ZT<i!l;RolI0=08)[/_F6b>RX;soO8_S'271VJRV:tSKq\gWYcij_g3P0.#.O9)'I;nkJJD\X=V`P,6[?q5F\?n$[`ZH
%@8<X>4),!t&!fkJB"Q$03s5Xk#c*Z$7oNeT3sp.nen>D\\YW\t>*"XfkmO"#Gfm8#GHbp0ecg^@J(b<>?CLsn=XV0[^RL:Uj%-X`
%g-(3/amT+^Esi)4O?9DtR)Xeg.&>OdM;*%rb>K"hXCK0;+%)=u,*Z-++U#+e/\GRm,M384J1J)AmF%p5gYf)%"e;sUdCc2c-u>Wo
%=^u2*T<@]$NE;*6L2<5['dd\+REU^#.='4n%HmW=@&op1`=m;Tp*K*4J_)cJ!'_1%_&gVZe-6&FnoA@K9253&SSW@nlip'%eu+>a
%?Eu.15VUMBo`&lg5bZks%<&7%#!tFpX"u!TLs,N8$,pL<BF+4V1`QFj1"+lk],^dE,)M[VU\0bE05\'$4usa,<#?pKZK5JpK,e\p
%[/k*AX+d$H_c-bQki/Po%d%Nkj(6`3a`bK9Mk69N.bN)A_YS;""1#cT[N/9[W2Cqn9"sn)JD)4fd@77=)lQZt5[A'2UTnoE9tW0S
%3?6C-[4)iF!G&!Q#u#jIXnVV#Zl7uY86utGk,8JXdM!Y'Kq@LAN;#_XAPLa&pNWY\&Xc*mHEp\SMF6$6G8TnOe0d1Z4##I)-oF'm
%1`=T4iLi*n48524%^;KVKiZP5"LdkrK83i%TU44Jd$>r12\=b*H"P^>G;E>s8#]>n[\EKB+^9Tu$1s=5-YX?Zdg#j.]#Cp1+!HCU
%1o"c!TF(k@jI/i)ROU.)<@5.I,<*(u6Y>XUUFB#jl<'_r3tT"`$8"3kOda3S/TtmXO'7JQ-cIAXmqWaf^a.h%:aN'njKK])nI3m&
%obVnfdEj!!V87K&mn1b"7Aq*!S(*\r$FdCD9m>E1Gc-;3f*'sQf^NUW^K7G-2T&m.ohGNI>8jsfjc!$_#af"a.&&<FL^RmW<r],/
%?s(UsI\u@]0h/1u9$u'$,"G%V4;YDl'qQW=LE2Z9N7.3r&8T&gI+64Ige%paE8pin,E085'&!p/,dN&JC2#@@I#i[V>8MTlg5[=d
%/_Bjr[2nQ<cS2fsMQH.K*gGdgJ;r1kE"bokQ2FP8":IX4Ru*Y(D''\&/ArTVMJJ4Km!'Kt+DdrTkPqBE<JmAE,9cW7D2'`1XTCX&
%6e;NBkV=),W`pmq>@eWtJi/YZ/[ULboTg=1'+Hu?)=s:,CnC9hMclk@R8PIRaAS+(cr9sSjo3.0It+]@#&WOen%RdR-gAK_(7hUf
%:O/_aC<=[)mbM`a=j.&od:BSFGk"!fbFb)e,^gM`ni?/3pl>"Dblk;pra_p%i\h\?\a@MKF1Y*5T"Q1q-5e<QBs-"85!:L3Q'62P
%<R8l2&u2P_D4)I(.ZZXk@47V[Mh\fsIJ2hSmI.WVWR[lY99nf>R3N;#+7`S7m<e\BBmBqsZ4l53-k#E#'UaVXD]bUN7`O7^`eq6`
%IO4$4r)YYbF0?QdkM7;"/W;%W%AHr']3dR/-XZ>9oJ3sn7jmQS4u3Rh8J+D*n$=7Er0rX0>2C,^T[UMHDq`rr:\VWWd^Wg]]>?eA
%WOg9cAie<\N"5n_jN$O&j[Oe[CM)_ta5X'[hn:95lMPfN1R;W:6QPNMert@p)iY%0phB0;:!,6r2+`#s+aSV7*M)qr`p)U@UW#Y`
%4qFW5rVdTC^m9pBc$TLc0\6(mVUd!8b44s6o7U/:&+`W=Z^^_foVb/=(/^5"3QaPQ>(CW:$Pe!^&``(;iu*A=-=7gq/glojL8lb9
%%%Zrp1/j("hfI(6!7if89-6H@,*^dQ*:_VT,O-;<^C]2=q@3o_&[\%d[!W#6K5YNrW^M/A$bBFED2l^Aq.5#sH3Wp:][>-'+dsO$
%cpLW+'7bfSRS&&$`KA6^fh_/4gb[DCj32p-d(CB;$#jjQE$Q&VV`4K4I:*)h5K%'lT@Y-Q9tnXJ?6pWMd"#0]-b]sq65N2Y6OgJu
%r91V?0qI\VEbDB-UHdB?resa7m#NAQnN?j6"p<%c3]Lri7B1S!Au_"c=0n+er&=HK'np9GV#?iRT-7l,3:>r*Una4K[o8Q>p?0,]
%RK!CQZ,u9KRa4[o,bST*3u"]S2Zgj8rHIq)Wg)nsq5eH2bYX(i27!E.$gb@j2ofEDnB24h&I]25Z,YXbC-:koa+KQe(S_*l)/\*K
%JZ=>;<6;obaBWq:2t_X?+1"B71[.8S&H@dRZ[bR4:.KUDkt1&29O)sc\]J73kAdpl+?I?di1tZK(K12Z'(J]OZ&O1pXcmCAMMO4&
%?JB<McLaLuOl2oKU%6e3XXu=:eeU89fprrS's*&5"ppcFD@@C?$!,[C*Xp>1b=lQZ>pqUGel&3EpK]fje`*k\!cBLK>g?bGDH\4l
%l8\snU`(mr#7reM82acA/EHYcRUYXkS^7KjSt)/:(Aoi+m'EnXD:N2KT+,nUN^VhFQFdJk"61:oo!rQZPRb8S/L5\uA?k5a=L4Uf
%XZcWh+0X,9F_d1UbhBN+`j::&Yg#0eYMT2j/+et(9kG11g=La6kU=bZd:pd!/B&aqmq0Rq`*B?Kj<Qe%nGLi+jce/K2O*snfqEoh
%Snd,AG2d]>WES=l)?*dMi^gWeH3'`P)Jl"$G^<fScL^Q-BuNJg[q6`?A-'7F'AXog4QNRS^[Hd:OZ\=+D;BuETS$5BW'U45&M*5q
%5^nd<JM_XSI\c8d:Drk?,k[^e(GfsUjLYTV62<]=Fq=ONrQt$A:JkUMe%dW;,X%%A1K0#]<)4n@=NRX3U$$upGhRWmM.c-(#QB\2
%`%sDK0qY$u%h\<1SH-D6P5&tV1l^@BB^hl$p<@791rI$&"$YB^<TYV$FUeKULk3"ZK6E;5nED=D1gq>A=YtL2@4N</6F4g,@:7pS
%hfr=`ZYXiQ5/H)!.%h4Z%5Ulb&pDHaXu!htd*T96)Ygn.8pmP5=Nb]M3WL3WRZBu*or!3a%U(_3_4Qc&:/-E!g.QI>N5&dh?qB"Z
%]Q-hp.=nu?NHhnmkP*KJON`B.`bR,EoE&<0gOCJ.;Mcg=ZkL//9S:t&U-A!udV/8H$Q9-=M$(j`'n(eKJ`]FQ4]H[$CFnN+'):RU
%?K_DV,=aD!\;1tA7BfY,`j0\T%"aJ-V4g.2l+k,./4(D4\3&>XAHr'p&7L:^(p**-ZYkFF'2L2I4p[<c%u;C<AD!.R?\@YEB2sWN
%LRfC:i)F`41(Bt(Ri*3cC&I<*0/;d4RQ69DdBp+[Ar)2m1rO8><k(q=88o]q==p.SS'[aA[%>nFUkNO`5@EKiog^:8#24-%c@<TN
%U3WNi%Fl@_%AR@W!cZrsHR??q^71V@be2P'k!k9dHUbJQ2F_(]<H`S*>K$&lg`>U\M*2p0ea1dsHXps0C<?/u-p<\W7[TAkM`$Zc
%*GXEsoCHl=+&][GV/#=4-!B]a6YP7-P:KOi`dqBQkUWq)a'ITuNV'3jAGZ@eC29:X3?+Q3d-5[]XsKJW::$0J<tn=\A3`9u+p)U`
%lg-E4_7VkbZ2jkSFFYUZr+<g5D+=T[IdieAj*@VPVI7H;!<m<85kboS7>L&X%&aQ)(EK(TB+FKkl@OXu*,C[lgfk%*9R,g!MsNP_
%mhW"Xe:("7$WeI9!:'SE`rl.lSB"Y-bW_qW(4a4Z9YVl<m-2!kY<=Y+M5LCmOs(S.WZ^_*"J=N'dSFO!:_#N-OEg++Ut3L]CKYPN
%.a;VAp0a:D4=]tkald&&RKs,br&Q7%QbhnkndPR;_*'dG.TOS+(3^HpB5_c,rYU2^c@',:)Fbp2R/^.p\#eN*`%A'p.AZ7PU]\7n
%r?XtAa,2h/1e(Sk[UH'6]bZ'Vi./;K0P>!i`[L%j^X'1#QQ$@c%Ac=9n_sP/8p0.V(J5D<%DDDNqd:*Zn2sK7a/^KeVs6k78I*`?
%Gja&*6ODk$?ZpKS[m%Uhl+N"V_@1oSD`o3$d&?l,I]Ffr?<_(8b'*I)\P'WLem$KIk8q;9pfK:imYT<M0WYoKXa=4'<@D%&RTl?r
%m+4]9d.!Qn:X\m:l&WQk59^Lji\C-9*P`(<M.B3qnB*Xp9`#?7Joinp7aX>GoMUh(Z\s=[nGg)_.E5T83Kpi7WL10LS:2TlhLPdi
%*3Xq)Wo`i#RrJYQl:]-P]lioEc#Fhr3U1[Y%3n)nh(`&\'^@*XZ;7k+S)q"e^+na_9N-BdMkK<=`nk+g*iVOAZdDsu4s<\#^5T=g
%^h!qe`Q]Yahp$d%r8@DO7Rc`(,6=bg)M#YP1BM.5/Rol*a?2+QP:.;,^-X8VlW!VXk70Lak47L,FdsJU,#4.%XX;uO58)XCdEF!d
%f>a1s1B@S)g@kLWLf3.)'MGH8eWX=NCErm`?R&bXTODfR2T&n4Idc\,FFS%!rhb$C?A6XKmK54(G^B[O&Lg!d1sHImh7;1D61XmT
%\bN6502J8B'mbA_f#@KUBc;m+E`B2C)>8X#&qdK&@`s`N`+R52NP#9hp`=&6!uAYtS;]Zjn$Ak@r$*4q[G@f@HZbdW2&pnODXIj=
%U%EpVe$oFr.$t68[e*G*6OT]ERK-J2YKM&Qgpk,$kPOE=:3H\0Q<o;aS_5Bkc&,195meb+@X>K`S.RKp-F`Z9$s#ShX0l6Y@1Q+P
%I0\qNgJ@R,XkWfG7pQ>J4>d?;jZIVldt*8.-$j/X&uCXUS;"e[>SPe<q3apNF3E;GYk=NcI'ut\b7.4r0&Q_C@UGUc:UO4THg#Sd
%X%8\tW1IjWibm/qBl'A^DRq))P6!F=&*1J4X1d<jg\pWYk(oAJ4.oeaArM$,(i1!DYF3t:KL+8(&)-dZ9^:LRR-EZbAi?rf#WJFG
%4$80+m@VJDK,ZAkk@!d&s'(FpQfWa*+L;a71E3ZaqY)<m2r+Z<J,:aqFeZ7*@jEliOS:5od5LPNnW9_B2#!N!V73s;cLri-:"$2c
%!D;Qd.eGTIbt]J?Sm7W9hb-KYq4TAL?jlTfWQhMRLI;f^$u\S.YFe/U6+7n.(ono'Jj)1IM(DQ87Of+O+a^MeS\4?_P%LKogY\_c
%T1OH*o9n[H<kNi'9<!_[OcjXGZMu1SNRApkcgJ(+!4co(-)9qY1`>/uI2'hg6'LooltF*503)Y2a3*%a@OUc`nn$oRKF1/HDgo='
%%R4/]+>n4%(ug#I4S!QcCeYfQ%!WukFND%/@okG^qQmsgGOVLB2!*=,G3ali\%a@FgknY+J3FZAJS")6;8$n.glrnY8?m3V(43Z!
%eiCt;ijRUR-K)tjDgGDT"HJo4bllPLU5KGY(hj.?c[Q19\:u@mC!aX;,UP$X.@,-ahhA\TnMs11Hi*/?6b?q)2?NO7e-7jegA/tR
%d3gIicG+oG6O8Eb):L*cg]!TShS<Td/L9a4@!>"j9]UBHlL&o,Z+RJ$IYSEs-^5D6//@V>8)iG<HpiFQaCi!9_>u^k%ZI7$:T?aY
%ID?eO>U8?dXVkK1S94ruNBJ+%M4Lsl9Jl^Y<5A2)#"8_FK*J_M?1$ae%9Xugb*U_j;.'i0]A,:^H<F.>qF_mR6`6C,UaB+G1k>GK
%@3lak?rR`ek_m=`FDKpnW,'M4\=]<2V$4ZTm>3u.cAct(n36!l!,Hur\P\+lA<Y""0A"jeJVIKmiMJph\O>25SB9`7Gj7J$"9N?%
%/%l?;Dips6DMSMUc:#a&J>/eSF\UjP5?9mInPZ_+l/cs_/b/Ee:;^',0K19:(>QW:5mE_^WTAY^HQ$M+fgDQMS+8c/XSe)=");i6
%].MGi#gId8A.!bd:WH#hF5^;"C4Z9uCLuR%a!RkaHf3`["9fH1`[Z36niQ#('+WEg(`K[RS>0P5!#kQ9C@)We?p-^2!n;M)*,:"Y
%a8VZh0Cq*W5aOg<.ka/tQ@C]o\]?^-0TO)S)\E3!'V02B&(W[D#C8)-T"-j"B5LqW<PH6?"G+>s/sE"&1m\OcG'g`]m`Jb+>ceFf
%>jZ!"oR6s5?*iLg'>H&.?6T^S324?co8j:i[o5sf+S"37)\di8\05=F"%>idn]%0n?uPO]b_U=JPiJ*he:B>\cf^Kj_!L_]A$!qp
%60&n.8jG&g"n9mN(DnUkQW2e/"EQB,Y=3+9O6/n:;a2"?\P:FM$qclqkbg;'p+OGG@&s+R$ATZY`Q[[YCk=:,.2dX,os2oiE>-+U
%/:@u]C&,Sn/fFP$!fJo-jrh=^h[pFrh$$WmPAR>.%(qKdnt;Q/g"N=io90](^H&umPHJ.'5d_PGoFLG]'@8T-OIZT-VRZ6e3=dHc
%m5a)OfmiV`r.noV?<6T*MA&de9\Zg98+ka/O:7P_-lE'Xj=:nDO#M&lWc)g&/g2DW*KN^MW-;XQVO&p@;.t1.CG7^EZk37IR_8?K
%L]$nu@0SMI/BE*WXdoncRLFS\$$9o91F!QolQ+2ue!aGNV`S51M*UdI/#3ob]F>J.(9hS$#=-2P*>!4/#N7,TC%&#j1XluW(Ki#5
%b$a_>G>X_@;Yp82kc?A@9+g^G/J^lGoL`?INN@Qr)9&/;kB&3?/4"OTF#Y)FC3_m4M>H!1Z)1k<fN@B8Wq'DJql\BXUkDh!V`,:9
%(">`in@n^L0!6SrF-k3A2Y11W4_k,Pj6F^mrsgq;+$Zj2.H`o1J`gnIfHrNag&gLTRr'3MQei_'@@)_Rhgd<JP.(Fo^?t&fSa\K'
%J+pK-(7=iddo7R(ZNkuP#EKD2K=1jM.o(s6nkeZ`E8:qtMhgZN]OSt6N<b-lJ"VEp8hbX2R9=Rsb*J?]GDR2&Gi(^0H0]N4%-OMA
%F`&lGLa)%K?:N/4NuH(K)nCJA-:OlFd$Q5A;5BZhVK=%2r.7%F+#+POB;2rQpQ%,<IPb*shpsG6>SNg`-f]jk3lh?jpL9skYni;,
%RmSkJ.aQh/JDjV@nO1.m0spss!5g0*k7:&,?b3P/!g12ApYq!Ze`Un'[FEjj7Yr;he\'er7[glKgW9"-HIAI)72XKtpJR"(BFfIc
%^CiknTbl8^)CesY<OXbpd4&:)@@jE6(2nrX5]b!5BCfr-.kGDf0^YY^`&J%u@bCP80C%Z'gs<H&.OD''jD.;I.fItOUP"Seg<;I)
%([#;A-)T7SdW0Uuodh'9E'Xu:>ZCsOE!5guB2E`f>kSjQ8UE+,hqV'W+1-UN:!)M&EX3#VqKT6B)RI=r\/rk\3uouJ$\G[R^Xp]7
%[a0$oO;I_u",6K0E](O:\M=GE\'[&lWSrRb(^XrjRh87_n1L@&g=p%d9nYHuM%X.V<'NR\8p2QF_*;SZ<;bI,,Se(A&k1c[V\<&#
%eg^6EYF\#)Qd'h4RaIT>,th4P.T,0J.Wk4H_CJD&27-@1HQJcrLEH;a;"2N=eY)(UprY[p<Md^K_&Rc`#Ftu!o^<7&-u0Nu.DD2#
%/9ap<[<?_3)goIA.9dA&]i[K-iJX2u^'8?_F\Dd^*^^#kK'r!r+:1_d5SI%E\E&u02q*6r&XH$B"eb#a,_bodoCs[:6E6VKU'%1M
%;20C(e>QI_()p0_PT%r=iF'u:*iK"/Q['+l/sY!4T`*936d*#TYqu+uX%Zp+ge$r8,B,kSZNhIYmq@s"aLqMP].A_aR:/J02<K'O
%3:M!?J<>o__Y3S-/r`.mk**@4U*L3WH^2oAYNcjLr1X?&kFEO.F/a8L$&kYbnjs(&:0q_?2T^,HDc=S\Bi2jV1@G=!<YADK.uRb6
%Cf],cXVNdsBq9_sC>D]>`"oaTCK8Q74$?q(eD'iI!auK%FF`H`XjOCilheME%"&^/<]eYegF_:`CL[PoP6'OX\=ZV&[c5N8@rIhn
%r&ph+L>Cc@aQnJd!V\q=qD8V(n7TT#im)Re)h<,46%Zj\@/k$QL@#Vd"I'#mf,9)I;)@.-KD?FW_1NnO)?;PleMSJ@@D@@97[.>A
%%dY&MQ@j\F)7*^]5\;_XBQk<<@/!:Z/38VU!5i2KK?6?.hJFS@qYAEU=>/TtAo?GqDFDg[g1jBY"gGi)(^adX>NYS,3Nn+sl`\hi
%c6JT)>NgLPnVM!#V]`'08cs>1TIFB-A9`$WIsC>B@e[-!Xoa79B'oqWQ$;$$S,XU_i'5?8hDl4"muZS72=qG$a,A.238=>g-a,c6
%(A72.hY9n16-T)UfVc'>87>@Pf,b-8pFa9Hof=./_3r^5.m=eU*Xgc;2`_S0\C($(N>S4m3I(6\E>opRB\hm"BkNDXil+Q8*]d>T
%5@D^fhY]J(mKN58]C8$c^(\5&fG>$@K<$WIAO2G#i@.Xj;m9#NV@sKXP]Q`uP^JMX'&d<th4<GFrN.(<fd3r[I&E*V83Mo&HRcC7
%dJ.TT)][QO6K=hT^X:a"Q&MlM.r9<dgiYTZ0`3M8FS<`UUM[_I)K#BD*"L8K&'jXF_,"dlPKsp]80UsEr=ObeGLYQLG/c1.en[jE
%ZBA7+cRrJl5+7Bmn?oJG`qQ#T2j!TjVIR4RrOE>$'-;XoTrUF.nE+$2Q[H,C+e%paM25"@-BJ/KfTU2[3IGck$H@F$1([LdVH.%S
%@I;HLrE3EXPoi`1nF.In[;Q@SXM&#NWe@cn?4K,(H)u#Ga3NK*TO_ikiP%HW'%+qDP8mUnCugX-?k&RLXmTsiJeatFM#EksO\Z34
%Z<0isTCD7%(TY\e-1[6s;%`--fAF\)b>W#_rm$lZ'^1ST=S':%Dl,7BoBP3Qc)YCjA[,8f(5.r=_bR=pDL#h"/)\W[:->p+oN/J$
%Kii34%-@N[n(g^)4P"B>$0F@+&IV]nY=-U9KQT]W_IQjllYFd`rXBoT"KVT_J9Y_`VXmD^MiZ^Pfp0VC[ri[qAb/n;X!p8`Q\8!C
%j&>jQQ<(d>1uAJRJO]mFSN`1n1`?GH)cRj&,;.b8gm>!C;\j0-/_j5Dlb1L*B'2&G\]B[ENsY71mOUrm%O/>'%CatsED&3sQ!u>3
%?GBUD*LBb]ekj0LmL!&>Vr>P\VMXm//L6CbA3,CeSP`K)CLp'P'sRfscgK\m;gu7U%gPrbruU7+55TZfI/_MAMmZENQNXC/DT%@s
%0>YZ;'%SV],'jiHXC[a/1%*e+E`f$>C%WNjMSj:6WW#p)lO37NH;#hsbrOXE@60%F!]8?aG+FVa,1[i7URYB#qACQm#2]nNXH:n)
%YKckeHM?]h-$$3@mOMc&:lj2,'%RlY4'0]OXGG?$X0tTggAA@B**/MWFdZC66_@)YGT7<BcGs<5R.^[a.l'-E`[H9)AI++EH%`Tr
%@/]KSg.?hfJX1&BkbdBNYq@5D$.c`1LM;@E!]8bULFe9n7?,C%IM<o*f<JS.F`EitZ^4QLQhtbY=<FY*VgoLSB[8:bZ]#p+K_!qg
%1XBO@83%a.Y9+=Vk88"(cLfI4('2u6UBIXFS$'sH<\ub_2n*>-5F[G`K#.<9/=4?@*K^)0[R'bM."55Rpf$X1Ab8ID6ci7m8UD!B
%7c/HuQ%.V.",eN=TTl%rJ0SC_$;VP',8[QEQj-'L])+aWP<LXGH7\NsO$pPPkZ<)!,0Js/+F4CAa>CsL0?3ajdd&of1+Lh=T(\"e
%B!I[b`@RJh-W+fMN=)k=\;<]G`N&Pe5W"J8DY^2M,6?E@_&-W#*)!CXd:sRAR&ApY#G40lXf:V`l"QQ1^Q#%6U)c1;-/O9bN7.#l
%U2(6e.6[VQ^=ll)j=*R*cOfX>1N=nWrYZl*c'V;kBp.Zbq[nO[ICM^>]'[fEKa%W0)>X!?-p/N=an1!7YOo1s5/3MWP_h<POKT&\
%>iG@\NU6R*hoe4no[]"(I,@pLRWhgj>&7!Uf!5?Qa''1ZmTn!!/g_7U;lLK'm[(r's63&QWSdCUKh^>aI8anMjbUrX2=,%sAZr@6
%+cpSuX``E<Uc5ne7Zo&=[We,1QM[K+SEQ44Db)/%oHSXJo^"/tI,cs25n7S:Ru=npDaZdQG)nDH[--*C?E8"tf=p^>YWG#Q+bn_;
%ZS89Qdu*[NRbQqZ+@J@GiO&jaRI(+ILOc=o`-KDSm$U'HD."f]EkiQM<^iaP2L-kb<>Xg,<F3VP!(>%>%F"0_ET9M0X2!+a`bNYW
%4VFhmXmq4(HmATeJ/&pGQ2/Tg$1#&-eq,Cr[KX\FpLXFV]o+pp4BA'[CUiSHccRsPCLJZdYfVc4p"+*_)?DR@pa4gS=:rk.?j.T!
%n1-]aZ2-O(N#RHq((kiR<Q'c"$Uq/DY8@XLiFkW8.:oU>f=/1D<bS9W;Ac'XG"Q+U\8Ol9CQ:GYr9+g;mSWY#8D(.@A%Fr%5KioW
%fr@_--oW!(TH"ZdP=1<gIfSoLjWh[GJjCuJ$q!M0E5WLBIZee28LOQ$K:<h2csYm*>C9k-44Xs4%?'$gWqRIb6"oN7PIQR'pn%V3
%GN]R-dW^PW`aYn94j$+[165UY#bN0kcr?]A"^g`efKY"3<cA'b5s<Ti,>715Fp0d9_i>W#F<YqLrc,Yg(]lE5!@OCk0`XD]LhMU.
%54+b8ffR:%i*X9fO$lRQ>C7*<4um[Zjpt*_&dp!p/hTNdK+>bn5O8Z<lRk99W_jTVUHOYBaoA@!5*F,0!rMj`CC^4Hj@6E1B3ZcT
%]TchVI\tG^6PLPO"rVKP82"P7LcHcSKOBZUgWT29TsIb^07gZ9L0!Fi@R?ME3iK5WH=RB`l>(C?mM-E\j@IVANAeJg;TQO3P!U2P
%<eQ#G56)5AS1l0J3041GKC?0<$JFhZD^mBcNcVDV,ISsbe>#5Zq,""jL4$PXQ?7E3Ea4'=17jWPi#^#'ZAuaUF+]NL1cUh)I;mCP
%Wp7;oCi/^E4IHT-'f9eCoTLu3HY-OR4Q"<oe8FfZ4sVtRj!g12&CMGD-[bLO??j2N)"JkG"1+9c>_=q_A]5*K6g^?aQ@jF:AfMpr
%BZ$Ab1dt6NOqo]9EdP.nLYcAYUR#,4@ZLN]-k@P'-'\f(+"Y25Hu\`:8To"_1`k_k?\^JlVXh".H\GUVJ(X0FdI1QL!@&<%6P1_Z
%g5>aF3$)2Z*/].h-5lQ5_D!KYEn6X4_^s3Re)LBjR[-C0<`aV4;FmV7^pr)[,u#\$9o;Y:@>5.&&^)_$Z)5r4al<F_\@!#n(fcsF
%6-=&l6@)(Z>4d+X>1NM'*-T[\Dn6m5P4'0)jseu0i]`d\[&5U13g9pnl/Gaog+[;f"SafgfQnph+d-PlIe,VI#jR1[aamp`k%&.7
%"f'm.>]_#QRok-of-?`=_0=$U-W+[RH:3rf\!)Zg7`)[&bs(YJnSZ&)G#(sV8M+SkCh?,6\A-Le=S]#N](.no#^:KMl7rgX^1@`Z
%0VjEe>0F5XpL'RgEMmX\ZT3`U']3co\U5!?Zopc'QU@</ICJWhK?@jA-,^*geX,rDKV!.CLO*U?jFLo=ck]s"n%G)>M?3eNKOJPN
%rtt^"f3/!h:.>-'3KIihP]NTrGT<t#T03Cj-,dVcO+'\d*Xm)c0o3[g@a!nL[l0g%8X("5:J##R8=W#kDMe4s2sV1^P'!:j[9'r"
%-t!b*:J&;L:`nZQ@?DMf%6BU47)E_B%oU^GDZiKOB&6$nG#-i@5PZggE&[At<i<Y3WIjFG4JK^UY9HK@5tLtH;I/X0oKlAN*;Z%/
%-SBQS]u2GWc)ESJ@UD9T(V>8<V\tE`h*t*c?,76*TYp%d`>(KFjPlSha6Z8N&I#:eJT`.P.Hr6p\M0b`HLa5-)D?u#6c);K(?2rc
%r">>!6<G]+"OOM6(Cs*;Ab!jDH<a6&<DNk)JCbee''U?+S%ras&r"u`P9dT3_U)ojOG)91IZ.>%&i8;:fXs"4kg*m.W`n,so<<X,
%.E3\?)_l+k2G*SGU!u\8dYlFB065cF/L%449&;aip#;D*k-=_i]7euXL>G*e'r&u-2U:a<2ksIe@RCbtUM!,Ar\HtDc=tTp)Xn/4
%!!jgsI'?COU9]CA;_W89J]+!Q6SBT>S>@a2r%%iUfn+)+Jkm9RRrtPjC2EPlLEG7C1NteIE>>K(HoFZY##knI6"kY1<diffLsc?<
%lDmaRKSGD?]JPQXB?k+S5Z-/_e-9GJWB9Z4lj/^5.c\AtRu79WFEE:4J5OpP#b(Vl[E9/BZ\WJ,A%/f#\9N?%'/fiZ`%sJZrP4GM
%G)^V3'Im"%I.,UlPJosN,_!CrF9A[?^a>1]i4#Wpo?N:Q<]&$YG4T2-L?8[WS1!"aC=3QAP*'WuP/XDI:]T3@dS7Q.JcT`G`DQ^(
%leATd"ca6GPW;GOO</D9%Y`#[Np2ZOg>29IqYnQEh`)Z:?93ssa\8-jD,6#EJV8M8K&Io6E\Ju(>;FPSZ:f8Y^i+NG6WZ`Y#!=Cb
%DIi(?f\.oCiptgploebW9j?TaYtcmEgX;Qf+X_74.8]5EeX^RuAi?)<EPdsGYgETLB_X)EO_@N3d%sk[$l%Rc<o;!M"JduSM9ejm
%>`T0EGsQ=63T:'K$dcirLK$JJ9P#5.O,!,J3/-boCKUV/b'=PMWNKGi!beUb^RT=DMVLO3B3P?1]TT/-<Rfa<oPtt["oqr3NL8^`
%Q]%&k:j8-KH_P=<D*XnkIT0C/El*Pf\PCb;.`sJ\7G6Kpr>;r6k[Z(e)J26155'A/5U/-Z8F96<7o?=mbDN6TQD\h9.W+,F?fFa(
%=D!To5s'@_.s;=QEqSpSRcG1s/Z:k&ia#ehQO-?!999$#[ge6WKl,A-[rTK[;P,YO&B?i>f9r-Jk=rEI/r?$[,\-%q6S#`f*Ao^.
%VoD#j-BfGt,sf+*P=DcP>%HW[bp;?#E1Z]6@mNol[CJ;3qZfI:i8kW(.Gf0eFFT2(+\d's)7kG%F*aN//GnC$0%1V(K6)cZr[$in
%E\pq1aLJdC7#^Ws0n[O$jSQ5fc-?EkgIkLXKk5&Hc^Mn0>X!1tm,]1CC(Aeb!ArCWkB!TQo%d\B9,Elbi>Gh>[<sq.0a<u/o;U@4
%h$Bj8Q^./N=Cl7Cn3lArb5'P&q/5]M`CnALe8+lu#1Nh<I-S+e2gFTH-09O>[<spmd`(h$q:'3U=LE<t3M1UL+(FGLPk1m+o!+rM
%Xdi1W!3K.La2\_c/NbV;:Upu%=%AnT"Gf@QZuX,m2X6SiS!K/$mK/oLGl*U<)og`-!lS*^8bq[%4,"bZEBrdt;K;AH7qFm)WGEcV
%9W]@42<@VWVbdPc<gK)h#`gH9F;490*oTthlN4rteI,HH5%48$.c&M[FK+nH/$YdDXku3+m.B5PAet[l62)mVp&#HRn^*D-P.P7W
%:Ll_anQd-k!e^A,9*Qc9cD+NcGA;S`>[.8ph45O"4s!VQXj`9X._F0%?_T)4!Gu@F9[<3,&4>b8'[r9(Po+g+'!hX.Qu=eg1%iYl
%U%b2t9[R/?3\^5$g63[aoQhdVoBI'U-O&43f[?f9+;RCF'EW.2=<fYSS`5Gt!>6_,8K#(37S[+:iT5'jlI!Iq/K<`7R_mq?Uk0DJ
%RR3-&-<G[!1V0e-QZA'*V-&Bq27'\GmgElupQZX=Ok,o;)n)V?/+[(s9qcB$q@-bnImQl',jMAJ&PS@A1,Ost+2&\)4R&1&(Au:l
%e3:n1'PPX9+6O20U]0FEUA6Em-B8luLLl@+W0e2KNUe)qAo:Ha.[DMe&sg5FdQJ>UT`>);NKuebeiB]YX/ABHIo%c\<eioLJ(,l1
%&aX65!59h?@,.@a6NeO:,@o)>Ogqq!F=WJBX(5"7Q>klmGdO`Mii";lrQ23HM%n=4M!dN]@T6X6@.-YD.G-Fq8:J[BNjD^(%[^E+
%JMg(n.s8UMe%HaODm2heZ%]0mcp4"j']?4Sk+G2GSq[5C0$?:J:-.-)q^EtsI::Cl;F$FF]%=&hMA+!D5Gch<5q3Ucia!\B#=lM+
%:-R%-d1c3;L-O`u[Tb+JDcHRdOt<cR<GKpN)udc1IGHq9H6[R-`,Xgm]ek$;bG$VGhI)k^HFc(^j1C:SDrj)EOg*6t<BQfn]hsdt
%XI_&)hLNH<XXYbEqWm*^7W31oc@J=TE0j%4?nn/^$UUGSQh7'uHGcm)c!!Epk`)b1+PsDT"?NMI82]qS,;H!4\4SE6dTBe0oWr#P
%`Q]hHP0l4JM,a*eN\e7oO3NcH@TFMiSimHa\r%BD\cufrbG?VY-I8X:3g1_ob1L)WKK.P.Ar3.g`+=<lN=nH='s4JdQmosQM::]\
%42D2u'K241[*hR4U]U[LBp!;SK&;eQ!`'fbhRY\Y1/Ho3EQ*4TY09g?]=qH[SgL@@V_X<i%NZAJSIS3(1@Km,fLm^cE#T]GcF\72
%hQ^"X2_jm!aum(2/'\F66=o!_I\DtLHG!-e*h.F./^CtOAY-co>e;ae_cp'n(FldMf-pQP.Sh:=?$GQ[!(H1[3d%6)!bgG+8-)!I
%\rKK<=jm@H\85Kh`^!@\nrV2M/4P0.0",A9A7IM'd)AKT+=QSc`3gu$bB$R=[Gh5-ZC1Hu;QPG7T!1l>A*u.J:.$p`:rdnK>]eUM
%+7#G![*EpDT*fH2Q*)5M1/0J<g@D;V^fA?QccBZjSBPlQ.iibk!,8!XUW:>BJ50@1nnP:LQ1`d-</u4I7]54+TFF[X(t'Rafgo!f
%^^,u6QJc[/]A5FbE?/"QnU+r^1jm&QOmMsFMe(_K<$_A:H\EYHdc@u7OXpKSSK_2Bkjfp##j!O)ZET9_qk._=m\"#,)-A::8&=K5
%?P9:.5Zr*>*rGTK@5(a7@!-`2k6f<Gjb_KUSm3H/0_Kbdf\@l9pfAld_j2ZSQhO"-o$6tm:FaLc%c1R#.$%*.cm[MY\1$eMSIF7O
%f.B$H\D^1[7PVn7-5Z;S?\rhVZqnHOiGXd@R:PQua_)\%`tIc@FpmQq^bb?0?InO+a0Or#O&4EaRCH*FQ&"IC3qe*R:*,.Ah1Kh-
%ND_@2G1F!r:Qk=n`GC+'?)sm8$J'SCSO"HP&AM&u>.Y4]S[4qL]M0GJ(;l'^qaUI(N&3T%[<HlcH6$>)hD!Y&W?D+<KhX?mf5j/A
%GhS&eX.14h$bXqnHqJd?*`EZ*qjsOf];gY%.4m$"gKADQp_C-pZ9.CA[^K!`p@I$&e]R<+/k)l*-?99k5r5Oc\kt*Rl`$0*)$A#`
%iD&Aq<hIT!KusR<ET<D.[;p3-)MV74Kc[mtqaRjC0/0^[hsFXE;RDHfg"hmS@(d00;ts?l0(un]GZmH\X903="X5G)3i06DdjMIG
%<o^)<fMnTL;mk9(PV:icVA?==(W)4sECGG6Z*&6b1F:-c<bcBL4;`3kU_!D-IbHb$[:#^9nMG+qK@cYpM2kSo3G[gP*ZMT=qis!&
%?Q+\_X17AJ\^P>p(oNN-YUJDnQ'=Fi=ui?N\[Y3%MONT(1YM!MA_67)qfIoHpg<?54h9h+)n)eN9U?H+@KGJLXS-K]U>/&"]A9:7
%lKJT/ST(p,iWsJ0n&!PbBLU5QDraZG41ctCf,ZAf$*S@I`!PaaR$@QA\k%Oq8X45U':cq?(&#ap+/d+pF;4GjGmX%M]8I$njJr%j
%D<UR!qrFK-Ck2;LKmduAI;%GA\$/YgIJCL`lP9+BLV'`nfI*#WJk>0A(%u?R6=-Ro:Mudp@2J[$_ERM&10&`P)_:(ep*o@f?G!F;
%V./PTKme9nkdn"&&'O_1X8:nd="c&iP>b4M"R<"@I<'bQ\%]%FfI'bN-ctS`7U_qE*:iFXHA-cfTX`8+.i.j#<V=I6XB\l[G;diD
%/*t_/g6E$BjJr&O-(9k25.R]-)hgnf$OZdlCsj8:ebA0ZI<)Uu;ps8Im$$1?@=6D%(A<RcghXL2B,:3_c*d,^b1VJspagDH1MZdK
%becOIhc#X]B,:2LjPXn!)s)[WEsqm+L3/'=S>9]!_JWZC,;T&rdG7[qO>X(QGGl7VELlkR+Wh;?UX$'WdZb[`PN*Rjph?-9=1Z@(
%+`i@0XN@/s<18"2A$!fU+dF_(dk'&$`s7\0.'5RXmJ<\uVQ>7.'E$C`gs`j8=11oF.3l'$H5<rl5&jo-?=BTqWo+3#7aYf<h*r/$
%Z-2bbFd\7'S"qbp"lE7!s506`F$c6s1!`=e]rptt5E=4BVr6RXs-P3if):(ZC\k2R7/03;s'^)>b5Hhd9;N=Ts#W(DH044<nj,h2
%rI63G9-%C=GB7la\_R.5B4R)(21]%Ccdd7g-KV6AcX!`oA,CYE1We&"7,KW"-@/_=mgp*a2/E'L1)s*7mY2C)nL[&QMODIS#r%h"
%p*jX/kUqo`2tgr2d-42$K@C4l@q`jY`^K\O2X@V0%>t9VRSW"HS[;f.U\_RfbLBGL6!+$MZ1LsmXcQ%lSQ%+]2SnLF#&(.eb=YPR
%jqW&;&/:6U/&q]P!M,qePnV1\TX0sD&JX0dMV$+pQ1d0oj[0[R>[B(cpAL\d8(G=<PkK!ZrW9GK9%X$_13T9`&ikJSf-T''AYr#C
%qAN40a5#UuVV:/HYi:[A[Tgsq^?YTe\q5X(UO8:^$Y,W,^"fl<]uqFcOqNXnV*Jg;P&[\`7\RHX0!R,6.-g&lVZ=<F0a8&Zo5===
%q_o(J8iG+3BsD'>aHTM+Z<7TPZK(T`IZl4S3%&s#`k?l-R47p]IqPoS%+H$\qUW7P:T(1@l+MS:WNLL=hhe0o$MXOjlJeC\n"5PB
%'4:]^agd@?2Q'j3-\\FGn"1jjXBP"<f"HREO)H\!ra&i:#$Cq.I2XJOkca\+9sUoJcd8Riqi[i*m['7NVEgSK3pJmc$Sf3?Hbgpd
%(QbfXQUXF\!d%SQ07q&Scc`A;hc8"29-WbK9(i-[erHn;"@\W9[$Ku:CBp/f2:XRQC`#hucN]>7ANcVe8C^1V<Q]&N^6VBn>&L8Y
%m:/.N[t>3ac#i"l9"fS*jU%S3F=^3.KiDpMia9h%m*k6KrfQZKTVS;_[n=Z9VSsqm5CdXNel&&R0b0V2>:CK[o/2Q#K8">Ulm-iG
%0('U"[i)Yq.\@gtDBrlOX&Ps%EiR\FdB7X1k&;\ajXT[fl*Y=_mZ7oAHDC'5_002c7B)0V;<XUcX'LGdqP8G[M!hiY@2UEo05F^D
%lm.g>2!s,:g*jC;n0ue:V1oHS-Y[[]geY/m0SAX!h7dpjQCkm<$.7C$U)H%<8)DVp<lEAEX6E=7BLKQi05e@&XN[FMheqP%5_pcT
%SP!h[EsPjrakSqu=0$JoWXsYNM16a!7%Cp@'sZVZ:]6Cgf!/\D*'gh<^S^>LE5a\T47eD/Wlthe'>M",I]S^T4<%<3Gf/D[LCs?u
%X,*%^7u14MX?lGpD<:0,@0L?&E)k%&:&1>e)/I(ah,;1+Traq*(?gpI"M3-fQ7[trl!6)RPf!jT0SP>)03:Lt[8_gsO$9h4@EWc5
%.m<9GLXfQRC_W<Bc+gqs]:oTe0OqYS<Lg9]k;+D=8$O<Ilfol"P<[F:3fDU;3jLPELL"L^kp(P?CDX;')9YZ2]sP)-<,Ue2RDZ>^
%]'8UJhLs58]eY]o!0`aN5=7uF&Y,*hJT#'OVU6E.qT*F.!.uS&Wfu_4`%A+^34kmeG$90];C:Uej:#L'>]jKcQu^ah*2-sg]\W]T
%@$@Xp)uTqj)X2:DSYiSpb"))o\o)!"Bs_]#Nq75/%_0aAT$0W:fC1V;lK@O!NSJ]Iqb(C,@\VsJ>O!XqH8iZ]f@_M9\BJ$1Vrb($
%#UQQBjHf=qd_TPl8eUe$6.q@"@S*<6&Z#9g&bXbXBmDQreJp8knMG58$@09E2"^dIO'9#s)<A!b8Ip4r4d2S78q15p_;s0e3mWWf
%FTHff*;n+dF)IA^Ishor7<g>r=%=0m<%q3fQt(1olg0-nVk=-6'sqBgP2h/*8U!Ke>PK=<-T@AkH4;`l@M$ClN9F6DZVs&F6&2El
%18'Z%Uo2ci@WNsNQ'=F=5^.(Ek,gj<F/YH`Zj>-LV*_aRJj-ID/qTs&6@6W-[rr+cP8R_eBU[I>-P>`LkG&#jME@JD&P])Wm\l"G
%]NKVo8YTOt&[/r0UEi^L4I,4EDe+n.32%Tpg^3(g`#HgHdO1>+lE*S;'S3!>U]f_bM[&;:ekRVb<"OCHon[Vuq["R*g8[Ukqr+?6
%6j8_peK[ZpW)H>%Fh*:Um8`\<:9%RIW(0h\Uao18ELh5T+YErti+7VP)g,-7GeM9-[DEGU\u\_)"PWG,K$+Lt1@5TX<lg"pcb1/l
%mq%3#f^@'l<er^EG3dI\<etDFs1ukcjhhV5>EnK^UWBTM\taDJ'n4m\T*BN(KngYKb27AeC:9\mKnni]C3@OMLPg_r`i3"UKngK+
%5j?&Q:qZkujpJ"iTaMC7E2o1p$P2p\HX;*YTg0a2TSFLST69+$6M7cSbji40_S[#pb0I]i:s'R5gCB8W@*ZIT:jm:AWqUk3E8dMe
%D20UGcI4C.<$)`_WaF`%6d9/olWe\5IOQ*adk8E):jj5QVRj,;lI61PeMWuK:-8?i6W*^/d;=ZErlmG>*ieC7@;4>[?$N<CPiN`!
%*ie+@aQo<g00DAeT#,P%4;:/FhKF,`+?oD66fiDI(<ptS4B14!@:e0S(ETSWa"Y'hf;_kM^?lL+#VN^X:jnr@f`Kd8n5)9e>;:/F
%l@k!c`G#$I`.]KR!1JWZ&P3"_OpanL_S[%_^a0d<o'@]MgYl#Rk1g=TeY1bHhG\ZEaTZkBiFSi29goRuZJ2H6[9(D&L[$n,2uNIQ
%r-CKo_F+![7g-lm_@$nM_CsT"m2N]O8Uh&rnV)`ZAD/mn4B0)_n8_Hu^$tLujk+l34OiEN?K&ag%Z7p>IAGFh^$nkiMF&%dF2ioh
%C5!_$^T?mLq1XU09ZGt5GaV6Pf5(<BqjnU0Gc5NX@+c'W?$Ib/>copYeEERbKnlSXigt;OTe$ma'WY<:S8dHGq&*Hn(ET/PWdhoe
%87$]&TkHS1h0-l4\\a&U>ZI?mD252d]DTN5ocu$,\@ob5L[*_Z8$o<3?HM)JGXAK19Jl!fLZeQ+-XCtq,S-<t%^2.lQr1Wcn4%H*
%rn/)/Wo&!@RN.Z$Gc4rE/$Gbp\F<>n[R2W.9n/;.l>;<$&FuP'&'qLscFE@?EAl2KOEg(q%@Y:jLV!%;0>I!Q?!!\\W`38#qd\@i
%r2-PG=>b)_7`'q53Qm/E1nu++6l>j!,4F(RrP_3i9IU:f<Ei&9$VXAS,7":s5-8=S'*6W2n9%h8dlPC0'S)>l-hXGI9da]IUh:d!
%8s/*,]%<*!APj+CeQ$]JWWUt"pZ]1H_PiUEdOWV%mY@F!,F8+a39%2Ha3g8-2FK1liurG-XsfE^IS2sqOPe:*7,]`W,0Hb65#GW\
%VF4uec%u4S01%Kfo+oa/bpGi:fIr(^n)6OE]3870lYP:2YG%p^oQom2dBEB>`4)pe+hh<bD_t2O4S8&_';H*!\cpI-LORmeZ\7b?
%SP\(YC/^%+4t]lnYE;D^p!oTOmIthll>8Mh9]&k9Kr=h$im)(lG[@N7jlil.O5*fk5OE:Bc4qWD&'h<Woc$U5.Y.\8N2_3"EC\e^
%A+4P^,:cOA\NqOF],`GA/K8![NZYkUPJ(BZR[2;.&IT5Rn.t[!MB%)%ms*/Je#tBZ0\iG.qJC(>gh01kq=J`saA59$7%s1_g6m<(
%+Y9KJZ3V,Y3QFM^on2bpqo0SP6Lp,W[6f:`rup@#:eliZ-=009WslbF.j7NC%8P8>Jh=dfs5"]3nQ3KQjfu1#)0"/ORgj_':0TI[
%IsWq3hFt,W(AJV.GVm!0^9Q)]dOlI*^Lf1N_/G]PD<?:EY6,-Z>LK)d@fT5854FYQB`2JCCo#G]j`B:F0_eW)P0W;K!C!o?Oo%q!
%(+(tdh00f@m0UYpp7STc6<`&<5Em2$;7&%`-^J*EZYkX1p6V`."i%Y$Y@Tp+"3?+CDRB1u&=u.D8?Ff3?0_7ar<p]!I>%!#,%M?.
%TJ:Br*ZuBfg#+d[^cflNKEp@U\,"*..!^IN^a>PJ\-Eb3J'\:]G./_ZKa0^9%AJD<j4F_WVpHJT>q!5ac(0$NgHHVXOP/dpgAN#,
%K,TT\qAu+qn?n^lo)SX.G!mlXbr]>a4#"LM1_M?9/r"pn/VemrWdsoI<]i&[m6nN&Hu1(;G%Q=geIS;8V7uGMG8l)3k-u9mFT;j<
%(#eDA>r^6G3AfW$p4HXPeh`->8#L,q1EXs=Ik^]?8Cp3*%JOa#(RNUjjTm4u^Vbj2XoX\!Z)EShVsmn9>f\9E<$PTc58ZE<'+D!;
%EbsP#3jR&C6f(utQ+XP:homiYBAhs.5/<S&=E-VV3<<DQC[ear@C^m?-HKW+A4(Dor#cl8fJDl>'9SH%"$R0Ago%D!_-lGM;*uI3
%8>Cg@D%HO3ie-/Qo`Uj*!f^AY#g79Dp0l9n7UJC;[s^Ac^L)HYf[26N5pToel*)f\UO'@?AerTld`\jTN.lBeq83go@V/0tOfchD
%-=4b^p^#3[mH1[6=I.Y7#dQ]BXl.ZYj?AR:69CjHCLDhm+2=U5E&=o:^6Q1^'!Y9VAU;IJ^YD8>U@m@:G9PtFi!=l/q?f9(X`cGl
%ga:5`)P&`Bb#(`ZRQ-OcmV0+ZjUY1i[,H__3?TL&gIBq5f?+HJ6PSA!>QfZOZ!k#aQO0F&rUpO$CIIT("b+M0o?^nk+':WS.p@;$
%o*48'gLTd]-!l?2AG/B:=l&"OJ'Ti_d/qd6J"c(JYbDffjXM%:SW+Qi[s0Jritn/4BMpn=JO@4/NL)d!p>4$s^ZNh?!u]NPVWFE1
%,/V(7f'Do^$c$CLJ0mZ+M-@8#J<].VrTlrC)d8VJ1s[45,1J)S^)*cR8Apf#+u"D!6&]FhNeUnuA0Lmj";<VoJ7l'/IY9VVqOM%\
%+BY&hi6?2!3(6.JG]5n3V.lJJMlo/K!K[@nBFYe"CJa6.fd22f`kN(lD;ntS=McbU-=7Gq^*@F^E>j^`<F6rL@PA(/e\T#jFSbmb
%r/,r[hJ]^IXI4*pEpm_BQCKeQHgoNhcUZ316p>Wq)eZmVbf/4C$4MBmT5K4&DD,t+!Rrn(\s5AP^iKl2f?FHemoL^TGC,g<k'fOi
%^.bu-C1MX_\RK\V-@\sc<490&n+,-XR:]/!Is0,*GIprMO9NiN@BnYp2__RoO0P-t3QJco9/ToAFGu+(McBX_S:uEM[;p.=Ydec1
%Z"\rY)aG'#0FR>eo9Fk2L.?>&^&"+W;87IaDKl"AhqrpGak5(:VESB7%P<W"@WE_(pI:"7L_^[5o>,#4Zsq@VaS-]gnI"h;BTABo
%JDep>]s(\t"OmF2-Fj0Ba&q@#9[p?1gFUQKcP?iuMc:qeq`UA:?>mDBQ?5t%R[ggq\GaCR7I7JjU6DT@32#JGGqSiZs5f7!R.%;b
%:M/bbHTKic["":/,2LB8SOIV"16%V$&cB,kakNtQ(?Nj:A]YSF]6+l?cfgiPf>hl^PA%+chuF3UF8L''LO:1^G#WaO)uZ0lLVcOL
%kV$=&JEEZTb739oU5`;>&AU]bNq_*=`Mu>'`oF4M4F7nZb!;iTbJ;e[HqkCY7N+hGCd"?\(6akcGi[)r]kB(M/[#hAAZPb9RX>YH
%:"$B&cHm\&[_l\"?GcJr;g>tA09S<L9I@HWX?X&ZOCa1o!O@7$AUfQ,K1+00o>Pa1Z#$eeX>jV'DVJC&TMVR5dHoV/Ei>DarO$7+
%M3+fEiMC)0+glKePh32&+IYs"]FM>u!iH?nrH-PJ;g<^h7ZU`baHVg`27rO`:$tpaI*?Je^<nh-91BB.Ftu_W6;BVJiW,FR719O1
%%=[,JTu;?j3dD;s)W8`21\9$aV`4XuI'qYV?DHgB=,1*i)*3;oi.6f@!OOm$@foGq7T\6m'0CmND#DA!L:fHr3/nBR=dTlFf[IoJ
%ehBYT@erRHDSlU^bHB<ZC@WmI%0XCDNS':L>P\UhJJk_]P4?T*Rh$eE$BsD9h5t*G2U&Xe8-c:>Fc/l#Sf^R4*ZE&RGH`id1TsVq
%P/P@bkaKi:l5fQbak5dXT68c"l-/3s4k+9#5cbUAiaeek"]I$-.<S7,,R*i)F59<N%)J@6n$?`2GLRG/[?D"I"jM?2IM(,(EI/Fq
%66.qbnMo3]3*k0Cf3pVlHcn#0]NGEdTC57?`:HOW8@ri<Q;`VTa>rVDrB7mSd&r4]n1\J(_2g44#qn?G2(qoQ5d>F58Yg9jrk-Y3
%+$[SK#c%!8qp'$,38R=`W)5$6g\2u;L*QS*+*50^T@,[]M?4oI),pM15-7S.F"-D0i&eD=Y(&Ul!.PG!Tm)*sh)PG\lC1^P*FfIj
%NELD>5hNG]Zg*)\0)OUbJK$#sWtJFQES:SRr[g4BhjU6Y4Tn.ip#UqRD</kX<u5"?i^F&Si08A--E"2<OQVDDoV"a?bmE_&bXKOK
%_-L!DW6)D>9M-<-`]6c>3]hE4!6n+$m*)0`S>Kqil!.b<Dm/ga";-=N+IE%ahTVeOKK&Xsm_#Ee>9]IR]tNR7O,h"Sb.3@4ZJGHX
%.od",^Et=fD(J2,%4e\RZ5(ZRa+mpnd@Tsk)ip\Q&1iLsTK$8&8[)%=g&l#k*N5;\oUmR[jbSZZ@*4=q1SQ1W>00@k5OV/g$_-h?
%Xr5WK)`jS9o*:d*cH--$c4"&d(qDeVbM_%(4sQYB<[a#!%21Aom-NabY(ikE7jGL#/tP%o7U?X%Zeg/@@I1&s^K+/$A`T.=Vkg.>
%T!V>kbUiBTl!3Si%Q5=^0QZUZmft1NKLlTfZW-V#\At':1Y$1<oQ828oSLm7N91tt(9'DCC%XmUT??mE97&k1*;o#AUX1@gaH>?t
%+/p$F>/<X&:ZXTp2)@1?fJJ40!iIiE#!]ZbpSA_L[.'sIK=qa&Rn<#GPI&SP8H.T$7oR_=n,M&,UT"K3rp]9HYYB5]m%^QC1V3S<
%m%:R^GeraAWFpn/T:C<di@$th7qZ2$EN;.tN8ZE"ZlLN,i=_SN*G:4@'og&C_&3U1s)@Q;`aCBUC'K^`l`^II,hK(N.HsDtESh!Z
%GmkMcc'1efpq<\nka!CsJ5$"D[HG5ESs-s/A8WK1Jq<3p7QN_A%-TX6.IgNuSCifA+$Z9?;a,[Y!'kffVLV/<UYW)MGSkKP<`FWP
%&1du8PM)<"N4F?1Yn%IlAm$Kakdd*R7e@Xe_j28?"q@N7>p!\5II=W3_#@[*6(nn-MkBeANP5PPE5Y52(RRd4P$EA[j9FM7gO'&Y
%Hh,uV^ofr^=1?HNq!eO!l7[YmUmSn;CMn#"7No7ukhggDF3E%`L(DM`%_EsoCqem;eT%`pU8;_Q%drJNig8EldmWM[\b6Bmch#sq
%$D_;eC1W3_h:7p$$:BSES.:=8$;ZGcQjsUTC1m5Ng,J)K&1'%TA@geB7g-:oRV`k82<eM`7<DqKo9f?m<u#f=.3ntQQ+am;TOF]d
%Rh!0eaMPi&on=k'Q3c=LWIl)@d#^b*n[<GtaY@n1e"%##%bBTUm8JQRCfZLVGB)ZPKUXqr;h\XYLS50mc@o4NJ:Vcpd]rjde5h=K
%H"eX2ioPG$%(D7JTMaL;l;^t(SkB;TLd^EOX@8`!S'WB>K&O)-^<X[tlk0;W%=K.R.gR)l;ZVX0)0*7K!&-eSE<b81.1E\G)=]$1
%XB$+Pi3=I8696c2/LR4tJ9,_<@?<OKWOU@obJrf.?j+`k3np&0cP[<IO'QFC]Cs4DgbjI0YIL-f9,'?[D-WYg"H\ks4L0od!kWei
%\HFqZ]%=[Z>V<iPbsP_s&7km<S'sLV900n.R`D>>m#(dtQ]-QJ5pl^t;('!p!f5;aC;fU&0C=EcXJF11&[,CD>6$Kp1ZHqpo#M+l
%*WU2oP"&1aE4h>q_@q058rB84NQ5]k8,(fp<&+/ObRC@EYYH*_f`@cVLoI96DmeXm/al`[h%4=QEkQ.VXW4?;CUUUP]l88o`N^'k
%;P@8Ei,HnFCs9nY]G9=6e&2qkEM\<G'0OYEFP:Y#?\*?ggjlS*#?s`Q$Io2L(\@<88"j*2MsiPFs(3d_HH@V[LLs1hTCK'FM=ih-
%^lCY#g^X&a:AdDA*:j]rpk.hK"@kgecWmrU)>E'S.B4[%A^c20c%23\p"UekJI?t3NC"D*p"]%,*=#mWjPZ6@?l?8c.hdX\LV5bj
%pmZnM1>J$h`4id,BB5BKWPNLHR"-.[1D%\JJ\2,a#Y)c?qLsVbl@+h2*G$Vei2]bD1,?$b)!,J\E8t0fbPGMi)6rjt0qre@q!.Vq
%6&dno7rml*!9DN88/2ITM*Q@1]==URUP"E#s"tPf)I&W6L94Z=Ej__c6:p7I^ee@l@D(NQq2Y!"2d:Z;2iHQ2LA#5k-'D^1m&1P)
%5:r@2p=%uqa-9ZdCkFqKaZG4LPOAMV5eieAZD[#CGD^7MrFMB^mm;fCJ#KWf^MRhZ^UeZdm!!:D_a!Xs-(45j6YnU:n&>bXR]<3N
%m\r?L*DO]0kE<*!K3s'/MkI39PRmb<Y']M?&8oN3mCPHE-k>R0LKW@*hPQpE3kp`("P?N'_&TjmM"]q?S$l?HBoaa3``G@91lYD@
%`ht+AF=#h<G`"j3_Nj*J[m;?__8OCbrI?:Ml+(G\NKm^105L:+$>!iUBmHZ3;9:JkYsf94L+`j64MBn^N(foLI5ifI.oYP$m1rMm
%(%$BTkCb[;]NNjA"3Fc]8CW@=gAo!"h!fiT2UAK`p9^5QhBRO0=J/'$Q.>BZ0^S.D_NXIn@54UJ(gF+>Y%BJI#%@baGl3+R9fgH-
%-ifiECshG<_39;)D[=]Ln&B/,,E!jHQO2ah-I[M/Jh)XS"@.FHfb#!_%_)jQi/E=k$!kWa!;V?P/"m>^%p)*ob"rb//3t]TS&J3G
%\QE01r@_Q8KYl]@+WLcC%A)9^8^S9!5+SkdcC=jPDZ8ZfPt83k*cLU+75_%Dm^&D1@7@<mL8_qPWb4r#E$.f52Id*.!9a8A`/?hr
%b:%0>+FYet-p&"1@6-K,'Ga,Ym9u*I&=nJ2GL5J&5/>sig'r,PHQ;FX)4e,0%&O<A@<HT2DQ@?.0&jj.8ri".?c&Peh;G:PGCAX5
%Tm%S5`e>G>4TKTu__C3-^-3j8,J-@R(k6bm2dLn`7t5]=CcC6cj<%81,?4DaI'QC*U,68Zg)>u@;K-Jq%8:_o:[h-gSlJVk"2F<H
%'O9N9`Q%Yo0FBfH-S6HT"`n%4NZ6cV4rLnAH0DI61YqIDV=%eo9Ajjr^O!D$$qmeW:KF>N*iqlDYTDb47*F'$B-^/+DR=lKr0na6
%3.C]F>MD!DN;Q`C&.A%)_CDT@P:)KGBX"fmi$eZ]1OPa=^CIrQ:go>85R`,cMX2B'NZ'H-nKAYbG-L<9d\7*nRC1)V\O)"#ilo4[
%/5^),;6;p/DF,'TddSXl[TL1GEXAlX4<',[1=`\"3O$Bkcith.[77sN:4b]?ppJA^"m]dF*&Z``h7@HniD;kIl+kX%kZ$=WRa]PG
%OI!in#9S&&*]\I!^Z''k9`eOjc%fsZe\$rkB4dk#D5r_%^GDclUd+3/Pg"i?Ki*3BgI+5sahI::*gWAL+Vr9>%E"X(3PQd4RC+cA
%#,W/WVM1\?:uXjo=%(`dkQCqYM4NP_1r()5_,s3cVAi"/8MG3o$[TT1GMp?a4'<!)fKg8!rkB$TZ'bAJA_%;up&nT@J't#8X<&%^
%*1!I.NoNgDs6q-a!VAKcB0PE@T,c'&XQTJ[&,kWbG8rV7GCnXNELEBQmGPgUanTB#cQ#[\ljdE=(#H$n9esJq8+rQW?tSn\Y5gHM
%o7-PaGtpI$-dE+I8*9^VkO5i'J,Tt._@UY.#^-Um')3]KN*s]!dJPFl7^-A66iST67^-A^BAei<14gOa`OODnQ,5u6d1N0P)25]j
%&"Xk*,Z'`[.D58eB&C+h6J<U9D5?Fk@pOm`&>`1#>7=oZ<jDF8HRA]*f9Fr*2<-d!?13tf=-UeF.li&kp$EU3_(=8B/`%<6-0DC8
%OP,/++^hra00Cs/Z=)&\5IpUI4T',*DObioMN*m5*'1t%mN-#YT-"Y7Hd'\_A7*ttA+A3O`c"CkQu!@P02B)%$!5n.)j9F;FH1#^
%n&7RR8G="O6XrgF?4n:Ms719qiH.?^`%2q?3"\E"E$E)-F2UK)(`K<i+T<k;_=t2[_cUdV=J"s0GGk7u!2+t9/I"(E80/IhA_@2d
%CkGo_)%'ApTg"_Y8f7Vmqbgd.!WsJ?WXaR$J5_6Ng$2ZWC&kb2a=eE%T@O$.I<i[33\MEX3f]C=S`^JnVT`4i'-@QSUL"cEJuU-d
%<KAH[WU%4Nfpj<9i+S-YHu:SN2V#N@>4G#04X8K#/`-jS5Z\#;2/[[VeF'%fN^S#uQfE!D)Z9b@*6qf"2r+'UM<`*Z9anEe;Pgq"
%.t;1X!$I.PSWSS=SPPi03`plgr)Za;$>ucFK1jo2:6XfI%=^#E5TNJ>,m("/jjq^NRnJc&+XPi/Q;LBoaSI#L9uLbW#=>%5J-8X5
%*))^$rN=hT6V2WKT)oFrV)><3EY=-D#p?%>LX`LC0f1pG;\23!-Wkel7Z?;8G8XTnf6]eTT..^5^Np$E]TV-W?7RiS-W+X^Md0FM
%m!`&sh1e+9)&4rH.GI:"8$*5k]V&MXX?r0B3[%+K7P.5XSId*9)mq*UF[D;uNEVS;3[%+-ZU6$2H(>N.%<mc2;O$`5+\F@>TGXN<
%:5BOU;3+U]-U`64b1BXfPh-4=U9m4o.-5S<PaiFaN)Et07#:tNC/ITo+j.02X>HE/_+9K^'n<2)OJ=_rFPDB2$-eWcCXr98S%<Jc
%[B,bFioLT<DB'e$kf-$[k5hNr5fh4r@gl%R5IVXBAah?soQS`;aq3LIi*AjifqQ#eC-utfRQ>.P5@gs&RIlZ7fH*5cOe3efQ5Pn]
%&9tYBBbumpbVFKfn=><EF/:HL0cYlViNcfE5sT'96t$B?r*d't*>`lLJdDJ[!em%ZG-]K%LAA`)fqWTr;a9'@Is&)[^tU+NM$/tM
%#t=bcEad#MgTfnYh&ElM#nM'3]:&WQHAq<'JtMMI:N^E%fV0^DI[Z_NfB'h5'RfQpd_PcNJH+Qb:rGVF_Zk$%!58ToYN=`fJ#oTV
%J[?<;&8g<gUA*@:BKtCU#P:68./L(E;Jqf+L8]Z;h$:&l"tSmNd0Iq4,9,?)mDGOhDuN*@;XdKZDtpdGrtOB5VCUU!Ir>8G2*?Fc
%5N'#c%4#A,0mn?\L@G^t#ho1R@<X+:#oNT&O?;e<PD0fs"+9h>r1kK$L>@:k$mb1`P9D\j#^F&NJ1oh<GR;gc%='2V]s-8Wo0j)'
%9n5G4_ND(=*sPM4J(Ut.5D"+X@F-,^"Pa#58/`WGO<8iUJG+EnJG&^_DB^&#d)(Gt9LMDWmC6p3=riX+!rii"8-!ddA;KY#]b*Kn
%KnCG^k>+#t`o[HGs#l"Xj-/]W2hHPBm'sr!1(k"H=UFmqOpj&2kU*qcIfR_nR.*Q&e8]Qk-c%m<JAE$&SKu;g*%71Kd".icpi2/j
%(lGiF@$pbLI9G\[m+'5&J*[F8#`P!d]Ae;GLYT^rf>kNEEYCXbVskpk#)C1Ui4sp$,%-?2K#mt(mlfV%/?8X<-bVGO637H=Uplhk
%QNTYD9gC.njcA#FmZ!t#.[JUjASoU?Y2*(o"WJpn:b3`N!25_^;G#3Z/\/R-rLMi91@r_:ms?;TDtj<`fD.u.c1B.8F6:]71M=un
%,H9YT6"O>%61o,$^Y/ngKOgXmDrL]+0Gc3cW$&E.Xs<rdH38_,N?,q\JWf)&*9358Y_MUm'!W*<,kjj$ErDG'N_>8Z_M^^>(W@,M
%"Z;.:.^Z%"o\GVL;^.5LGm7UaCLZ1ZYo-sa^l+@6+a*l)Alg*@N>jqVU&p</Ee1QLYW=-,573gd;Gae`nH3S[ap:8:6%HJ:mpeF!
%kQ(A+%f?Su0+*dZ;;``++Su3!_(<t>^?6sAkf4sJj4L+;;A8\Y8.(,G=,!&*WZ6.nPlA='Ef+LN]+%fgQoXCn&04XM<!Qp:-LckA
%]Kh@K,cYB):QD:g,^hr"6B:NmgS&)"0<,?&#'#q#)&"ejm7(D.BKk(HLJ4!`*B36BgQLl1fV;9c;-Ek_$;en&,Xd4Hqi9_O@!`2@
%8`7hp,k4\J8QPHaE,.QS!s2j1,o0-fCHUZLO_dtX:@*[jkaMIsVh(1B&;EB#.&6lP<f#jMj?FLfoo7kp5M(>*b#7()!#e7!Z*5R3
%V6KN=^IBt7Hpb2R/13%AaJWo3;G5Mrjk=*+-C:;L,g+9;"fgi\le6(U^uLaS_iV#>1hEY(F&gR$Yl3iLaL@O.rfQmtKqsqG\6cbV
%Pe"LJYL&:D<+eO+<0Ofm/][cu'hH*\bEs6i'b1AFH?Q]I8[?GQ&A-p+P5jO_*<7q2e@.pD=B_\WK;e?&$&P_*mo0JTjgtHa%JUZJ
%7S6BYf%Ht)"BG(dc6gU!gJn^Z26eCf",!lEe!%5i7AR(-e%Yqs,Z7OP5uNo^4P'ie;'E0-B0I)'&YQ/p6I/"%f+]=Z4pgF9Q^A%4
%eD:0+m1#Ng8sK_(VXmH:R"H*)@cKEMJ.]l?5*48("42+_ku)([,d^h^&^grY%FB4b+jpj(l?KOmObdMf#pPN;JM:O!46l;(P,'._
%Kcc.r]nC=_f@+/iJfi]PCQ;*m)ci!,ifAO.@.Hf)E2-,;d9o$"67K`u4/iQUP#lLig(;r58QTk/"Cl*mQ!c"e*oY:+o=+X-;UH8_
%OM4UICrWC/=:JM;mE**@A#`Mo[n.BDDtmD5TKm^%)itaaTVBpJ'ZgL]T9G2#j:"$VYsEoY5SQK#co)FP5Ioth=/V+uEWo5YWX?<<
%#ZiXnk^&880nIjs^]<PiPSuLnTdP"/k>MPI.#u]J3<jLX"4RXXJgML:0VDH4KqSmu*J+J7?q2I,3W]$+Lr?TF,fK`"hf2-Y-$*pQ
%b4BkSbtj%-MA_"%m8?q<Q)8tF*;DnF(Tu8U>T=;8'-69tDCX`f7n$X5FVUQKC*Lut7d/I)K'DT9Th7Gu<Qr"AK!;e]&PGBs:BnT[
%a1+$M=hb>,WS=Gh3#2#kmP9l[Od]Va1I!'04j)G-OMO'X3l88,ej3dY3j[,uZa#knJlE"?2GQkGa[i\dk<.YShb*tY1Il==Un[+b
%H=nh1EF?No84%Z05e<5._Z@K)\`kHFZ]AUFK2e,&Ah=&TcoB&NH&R+MLc0KS]*.4j#;$(])`b7c"-U&ZYSkM_9?hC@KBn;/9OQ&3
%OcZjugHg=T*/j[rf64-'J_\/\-4KrNY5*Vn?^D-4=XdSebQ7'a@;1<s4?n!#nU]NS@f\,!Ej(5J^pcY"p5+>F`r[e6N`;J\:XUMm
%'5C#:cIGhU,+t;V[6,lJAbA7AKn-p*f)\8hJFEe.i2m@#QlnWiJKlZI>=Q](%g\Us*)MtfF8)LHPe`^umj0k`8jDg%-XB<_^k[%M
%<"N"O,_?KtJ^R0^YWWnM?tSa1+>c"ik\F._T)EItDiF2u2o]m<In5#'oMN/-r7J*[a^*gU2"E\**61HMVhWcP-Xn<,+Idt?Tb9",
%"5#XC'S<ImZue9*BWAhuV14a<'.WALnI&>>Id+F`UTYXrq?,bI?TN(H12GjC=]\n^="ID@Js=jsCa">G54bi1ZMLMu8;S.7ToUL+
%.W3WB)+HLe/\SW3pH27:,'%ld$T9E3!m=1BPkqu@Mr^O_"I;@i[fE(LH>(0W#hm/N+=%%)fKuG,QI=81[21a;&s,GJp(0-$SEEJh
%8`13&`AZJ#4AX6)(Y!"&-8AVf4GO=YH4SuF]QCu%5dDFK?fekMQ7;lEf_'ToSA7>P-B^f[1HdZ>"0G&^7@u,8`a^',`/UeXVh71j
%P=lO)r6o7<$(2a\VE6Jg]stA'E^G,W$V:Z`^qL*r;m_^<*SFaF7DZbGi^D8O$2TZVMXV2JHOR3>>Lt.`17B?7mn*3]i",USC6b"u
%\-Y]1/qj_f-.<A#!KA_GW9>??CE28s<kbkY0gWY>!u;n&W1l=TLHloV,9mebMWk*j"CG-gS3Efp+g"AAN;5oe=h7b)qfL:EPF=Ya
%]W;F5fj,7acO,l5HLbatV\;a`:;;'VX6-)^P+I@7:t:tL-sLr?@!eQdnS+M0K^2/@7#)4:H/Ee%h.#,/nHL,iRt)s0)D-_s"pij<
%Pi;oZ?`IUL.6nh"cR1Pc!>saVH0VSALgptM+FYh?,R'Yr#nd-'Pj[$N*_dJb['^"qb"\QJr?-r1J"9,.i+!?9a8dCLVhq5:e6o5d
%'9V2U"G[C9LNs7u3qFS.q>^qIgb9\5174OC>17$BE=p1C$>*#OW.@T?(bMLb5O;]]\LNc!e7C-=+Ft;*Z!7f&H;+=5M]D/:#nQ0I
%Cr]s1@L>O.V%+,leC4Uj'DO.GZQi:(`'-d'KU%jY"'(W%Q?n-Y1QU8oWd$eq+BPrn7?fKc!qRiiRp`E(8-%FtN0PYf;`agt0cA]X
%W'?kgQ;)G?5TF;/%1igTL^,d;Jd\<hh[V(slAN$0alO.O3nQ.,UW5^.fLmJfQ%oQngPuSdl6$2ppPC^t2/I!fq=L96p(F.K*(]s"
%bU9eZ08re^LOhA_l!kkT<M3qC58D=LUc(kkibL`QWq;/d.@Rb(:<\*_OjKI.%!la6#0s)8o7d`8"0D%.Mmeda0&*0&,SN=_7m0?)
%(Qp1/T,D'H15-UIlN9Vlb&p*91*oPS6mo2a0jqd).5Z\0*JBHBZEh`97<hS(Bbo-E1]_+jISF7pIN]ajJIKBjKgXf1+E_JuQGX5%
%DFel*IC6M1XG!h)A4/-W%CCT.-R1cT7EtPTmqFEJl,X<!O/O6+Jk$QL9L?1b8&@I]bnTu\SlAu&qX*#H*R[Yk((e2I"1YoDPkq@0
%R0sS>J]IEqC^siInDq/!5gO5f%O!n\8aGtV-eLIHn/HqbFW6/'-BbW]HmZ!f,*E"Jj,RUOa7?UE,TbXc4:kmS&8pLUZ+l''NmIae
%Xou3`!(Ocn0'n?iLQM+ZPQRnuUB,oW[dqE&1cBc@f6a8BT.GO.?]8:ET;<!T@?L\El,Lb%Z<fs1jmFL>&sEm2*s)bABa&ZL\!!Cl
%klPot9(n'"Id,4TLnj.0!SXniVH%mr8SIc[32"b:5&QS889D2s'NAu-da!CR`H*UW!GG\N[F&OU>aib`25SlYdiMjq7/%Z:_0TLr
%Ei6qgOdO4hLKQj==[?,c3QCukAh;al`I#2`RR>=PC.?d-d*/YLV5Ao;;*AnUg!e'>L8NiJXK=B8%?7XXX??]G&a2t^)Otfa3kq+s
%l4JqD,Y%)*P^9ep&EqQ:NM])tYIM\>TL123jm1G^0@B`PYtmoqY6J%?Y'X+_jDGS>;$mB&3NrhAm9O!p\'^$H$k9H0lfRtAX'6[Q
%<k(N5l'<#BZ[=HUYjiAl3r&EaG64+,ae`PG"pGQs1;4dVaY.naT_/Cm!'mmkJi4u9GD:en<#>Vg*$hq%nAt\9%U?'mKF?CDrZ8]f
%"al&tg'-Z^5tF$aIbU&i+]sBd/ARI^++S>?)M'@O+J>]!ASAW+.1EppkS#)NKA._lC8,jS+!GD!0@!Y&DRp%U/6Vj3jh7[nod\ld
%,ub+3EB$Z*ZGmB<(sYD)6j!t"@;3N0FL:MQ"pY:$>aJ:;-i9J;kD&2a(pfsX&#4iq96d4/7gC=]R&`A!OAO[gc9u(+P=,n1Sa?t:
%r*UodLQ&II>=_9rEjs8)#JB#YYMs-p,U-@,_//FgnI14BYC[K*I<[k6K+H);;,WZ[4tlP"VZo_,o:U?$d_[o04"`b\p]7OrEeN@n
%fYGC&lm/qnnu"`m`drcE+`I]L.nA6Q+pVsel@]ONbn+mJ!UfN-B3*QBW8h./-0q6D3M^EK7l9FmU##rY!gH(ABL%c4"RoOH"nmZ7
%;G3"-6J'1T<3u_J2,N_9nPD23bF+i]RfK$+]BjP<Fop;6i!D"EP7(]Ln9>AT"iD,Bb@"DfeofWV_W1_49Q#R^=[3'G-DFBBe&6C^
%8QI)2U.sdMoJ&opgm=j;3HF%E6LZ!CA0k3a#%k1X\OM2lAQgnej`oitTK3SnY7<alaQ#gsJhg=l70t0QVo3`uZ4NnnOWlo(r$$]#
%6Dp/a<FO)e)u[`0U:i=rW#?G+Ca@A%&)kk@G1*sWTr1:O8d@@JBToN3"^WrlM:'6M*BA^^;+bO4-RQ?QeDh24JP/%O$E5=HVbp22
%;k/qM`N3Nt;"9`aQ0('^E6Xb>pGDJV,%q24K[TJ-Uo0Y5Rd,2cl&k3hmqOB8SYI3-ZuT/`VB1Wc$heFHX+6_(<tjdW$A9/*N^2NC
%n9L`_9PA2GHqTq63F')bTYH?K[05.`,U-k'(di1]7.rLBT9IbIJB-16D=\p;[PV(s%N>a?Ch6.3_Y<hY%7&E`!<EE3BK5h%(kAMQ
%LVgh:R/$Ffme$S=hK_5"E`kf2,JWE)LBr5i5s'WFjIAW%"8j25;=a08CR)DLd0muAI=]?p=)W\^&g.Tl.u<IKDmZ1X6p7$`<@eL!
%m0t&+nFQ^>.jT:'DZjs38HNO[^cHY'b0V7VISqbRnan4Qa%kb"Rp=tX!:btie5LI>L6!NalRFlGO-[<QGk+JD/0Vm8K9=3p&Ldc>
%[33t_T0PE,MW0b%KM[FhAr8\`Z0<[HADI=\V'1&AFc'kP[LS;dkb8$5nX*P^4M1&U5[m8PEMaumSnd9oMKf35+T\M`oUh)MeRg4V
%V,Wqpe[AJa%!;ga"8#;A6j"*tHO6'O5^T_Pg8WU?H60YaR(<<7m--&LU=1LH/u,T]*"_'[a8N/64pG\O%?tp/jibfcVFm["@]Zk&
%:>kr)pTh0g,6P<m:nA/*#?IN*K)ln8oOt2^+TmuaUgl?=:*b\m*pa4&N5:^!)4\S6@@uR%4@cHhpa!o`4=X$Ib0&%Md#Ai^J-1$]
%ToeDl@>2T!#&n.H-Y^$ieA+GN3bg55%4&!al.[jgXd!mrS=ARXMTRffa!jh;UY#W50P1Ve0N%+d.iKG\H_bJOIEj!3>9FJK1au8B
%V&PFAnO+R3='!]-j+uMi^nh^R4C5rV\Ek]VDh)7'pK4YaUL4=:$ej/$`IN,Q!0WG,<9(efG]gin!LacA@@pad7SFm3&ittEX+GCX
%T3p)T"G;,U]+EMsJ@ChYire-o<qHuadR#k>nJRbc#ghXa'3:op5u]N=j/,8o5%(X_NfQZZ0]J!/N+k.@X+Je*4%d6mLB_Laf<'Yt
%#nItS_r1ll4L\>j?n#)R;3Sh-6YK(AQWZ,@.#;2@Zdsd7I0OQ>H>oY]g1Lg++i<H*:7kG>OOg4p`r)Ll/_r&(J%G$9:!G;*DUt'!
%*3Y0pkClK*4ae%#dqP_7VVaeC2(,+"9g,i:e3+L/1IO)+=:J!pWt!-GFj(OD'i/T1FC$7*1gqL>OH4uoh>hV!&>041#eEG*6:%:&
%fRa]>$K2e(&/^I^507%jdL7-obHPk2E9Qe/+##B^@Z1<32P5SP!'uBCCjD\,J5:7>e#Nq.Snb6@MQ];$/l]'J3q2#/J93/P(X5mN
%PT3,JOPf(=OfQ26e@=i\'XF>E/euUa"A8Ya>k/`4!'LsX*h<:-bQ''*FMb5[ic-rW9DdGi@u>%tKFiqQ(^Rjq4jm_D+&K3ddP"'*
%)urZ>QdeY*f_i*Difb;$"@OgR]:dYc+<V_%i)YrQZ>:.gUr]E_:G`kfZF9>Zn&Oo"-thTi/0tMs!lJH/144ZCJ[U\hXCS:)GiT3m
%B*HH(`V.EQ"JrTjqZCPQj#fEa3(Mk$FTX^gD$EA$a/=QojP,ho0!hZ\3VpG78$:CB4bt.LI=E-gnrWt,14ZM?a'KSeT[/;uf_94]
%T2X]4m=CHISXkC32me_[\OT)D#05]l=4"mioo;P$U0YU_WQ\GX2Te5i&<P+dcrmu;k`bZReF%LOo!L1`5%80#QJ.agqhT^Fk-.9W
%598'@KOX[`h,$j*.HlpgWp9cX&uZBk)rW'nZP,)8_m62pDo\jqo'7nf-.t"i@qg(=L=toPkh<#JM&h_]MBFP9[Q;l[q;AIYdCpS=
%Pk-D[)2-P8Sspr%ccT$P[[c,F*1g<[4*!Oc_[-,1435$I>ZGXj,X<;"qD=Xs,!$rGlJ[nX*^u(>o`=s@jso5N@La+U0]-R[EG26Z
%J+0E0Snbr+VmRt3-j3mVS<Q47\?.64PufZ9"N`;)WkrIX,35C##fo#RdH)cQLQ<nC%lDT&T:!t8CJW:bj_.#fc;?=(l!I:Td=7-5
%KaETLZIPdB9T?mV&CFrrI@rL-,b_cn,=UIAT\g>#-FA!tOsn'=R!gh.3c+a[hbg*QaULC$oN*toYH&?pVLrDD+k5,?`C%g58cVXW
%!$FfAo5rIgc:rC7E&B3\,u6X<58&LZTZe"p+R=`("ObLO0\<2:_^sb"3kfp&4HF=HHUqIr2CTu/36HA;X26L"$N\,NSR!$]&F9e>
%W'OT^TIQ:AYA9jP!:[(]bR$3Agl">hg60[2Vf^"<7%9R.2W.Z"?9#4[7DlgmM3LC_*of8u@pX`]lmPd5P2htJa$tlH>_nUY0V%$j
%LrH@s@hc;s0U2<lbM$uoQih,S,flNQ3IlHkBaS"M/#8InXLT5FYs:l)O+a'TYf4>B>e2f6^>L.V]n%`0F]EY+8`_e!(V"J(@gVOF
%;&57/.??AHKkgqC^=,H[MpX6ZY3%u)S2CeS]hfgolqJ>fN&M>#.T.rsI-r]K"j1];AVqpi)]'\gV2onl2$CS\4QY#[W=NaA3s2;6
%")1cHm<s:_>G]rKW2W+Grk^!+QY9nHO=R@^5b@gC/Vf!8c>*!E`(cK,,.Qp>=>(YETF3=o%e"g'U=UM$UnnF`a/rj/"Lr0K=S.hb
%[dd>@`\^M[W!P2j<rjCYpLaq)1f*Bd^fYN?;M=fB$+Zn,#h@0qf\IK7-k;MTPKu*131S-I=.u[>%_591g'f*OCs75l#0[7m^t@ef
%Q3[Ri<Y87@Et`S<7fCTlh'"kag?_]B3\;7B>[spO3k4Nc=Fm94<sYt3PqTGlH3KkUUUO$9OlER#>Y];)VWf'T%ADIt;]-V=;oMkD
%M5`[SAkJ[n$s*Te'Qt/N8-#8/JnmackWfZl6\+$VX*U:^n'ah>b'27`?F#\:gsjP@`KPjL[LNsj25)nKlVCdik\qXp3;L/ua[()I
%O&a)Voi$GZ,_M&-HjMlH,,*8]#$@$&Oucsj?q)NOKB].B8Z_!F7\Y""dSC?Q#dPpHWdb.)E3O.pXB\pgHIhWFA18Z`3_m!2'd2fk
%J4*p'B)`n\9_?uo6N[]-L)p>Nb:k-%63@fB]Rfj(?n4L4#["^BN+32\Q[K%e;ENQZX.St)lNf\1lP1UW?#hgGCCJjT(J,9-<BC@N
%;EZ#@C(mphJ(f!GR>(fQAjC/nYm==IVP>]8!UXdo77YVfJ;+LFFJ$Cn:&%-Z;2\T]M#.IZhr>$H&[ieeZiT<d17*%(-g4Edh!Gb"
%6_?)B'3<nqV2>g*a[Hk6WG]&:lc59/J[T:A`\5<j4uEAI'3FF`1GWV`Yd[G"MB^!a@_3Y(e'uU8!+m]i+nI-lZ`8h%aK5G>gV^&4
%p2(qG9eB3$**VH&.rgu0B'X#maW"Xc/,%k$?W2"T2Jg0f'aUD%)@5fZ.pd=#l)gud4_gAE/!996rr\+GnU/"V!K^lu:D+LhK9nr#
%MZnp3fJqt^G,g;)L+&g$TLVX"OnMT806[he<`LR@'kr\coKomI_m-U8R)WE?s+)R!UqVXu5pm9M9H@A'ENfL?R8o6O0gV;Bg].am
%[Zd/Q>S7lqBg2l2iiC[np(2@VZXG`m%h;!jL]kK@-ig%WFY5<KJ->(BmBUqZ"eqd29b8$YX:"ptQ/N)^%$O19VWKkX-i:R*A5rat
%hR$rG3U-O#A6Y_Nd7tVHiWMk\8ftBbI<Lt_.M0#8WW:F/Ka?,IiHQ<CS:YE!dK8o,#>_)!WOUeo_oVHdPFkDMOq+_tP*cbrAL?B7
%%R=\Hm\FhD&7<c.:lkEe<HhQuWBetAh#KJ#&aF#p:.1'r\eCq2)dGEe\)K-''lR[M0o"H1gSb$,KtZN!+H>3m[;.XN5&u5V!TCpr
%QR+qT32m0<60@lk)rko<+b#OfpGAZWR`@_-qD"7WcVpeM9LM<R)Bc*67TDq</,NFQXlH;JWCE/%_C(9j2&'p#=SP,g'gH\:&A1g&
%d'O-h#Z26\-;:Hq&H6.39d*9IhUrgK,>bECbgMW:^ss"PN"f6n9rg%26lj`+1Ilq0R.RILWdaRC(Gk&29hfR.o@_"`=h1[GLn);S
%Y9JR3Wl+@I8,t7I!2-chL3Yi<)&D]c6d'Ph:+GIXJl=_i3)KkKHPHCQ+&^MQ:ch?("0m!=@L@^X:TYQbaH@:=pGh`8jtu/p+9EI&
%)VRg+W5Ffs,*&Q4'G'+YL])3kX+16Af`a8Y+SYO05UTRj^gYKEc&[+^R9'T""*&H/IL:B@c;rPHe4m+1cOg&"-?caSM2V2p8ds<0
%-aoFq*=a+q2gj&n:#.DL[LB"k@F-"[HmFtN6n=0B831=X6FKR`;X]8T@r2?GO2Z!rRufK@>qQ-(MP+"?2!DO8PYXT+QDt:FAo?st
%Nu6).h0_b$Wh^!(Rh0q>U39,,6J<ciE[q01&$Bj=2une<kg1S/&M7HcOLRC74Cf04lIP*8.J>Hk(,9&*@[D,Cl$YbhQu*+C45Em/
%,j)0n'\P@,Yd#ea4\+8J%FFKHRm`(E,QhN&0Pj!Q.^Sd;eXTLf!PNF%/7NL82(+fQ&[tb/oS+dueOCOGhGYA5Ks7bGZ%J)M(-V_m
%`Wp4aeXiAsXQ?=KMBb"I[#/5mW39qY22Q(lAJMGp`'S2S!3QfF-\c^WpDFlcbXj:(N?aa2e!(-PRKBWY;O2E(^qA!hd7n#3VLY#e
%&Gf!@;g;<)9`8J-%t6,AdAjX\qPBVJ4>q+ccb\d/EEO=fS=:sIp$C(?0b[Xa<Z+],X>0$<J?,D)%#goG&sqthZ-(b^.;lW:#Gm_)
%a\:bF(CskI'9?Tk+S6F#dpA8n![N=hd1T;7R6%&Dm5_k9e%6kH0?G^&!H\g"F1dSi=K!8k0T=F"GdM&aLl#f<1<1[dLttZ'niq,D
%(mCC3dD8cQ2^#:l5[7m(;I4Lm"sT(#6tT5#/MWt*.5)KbMFp?>&Bod)9PnJ\Hd)>ZILL7RqdeHX!#Z4_AC+GoFI)usX&L.1fMq&7
%W?ip%8*b!`=H[Efkdh/hjCb2DP",ai_spG&aUA/h#TtL>%0UD#OF^i5*tlEM.ET[4fn@@9-!T]U4Jgh`&AZWhRYURGoUT,"!S7g`
%,%13L(0O?K$YPe>O!NdnNuX0OJMc<3'AP^U]Yp$E*I::o;$f`9".`VDFi4g/r:q('Z)n=.$",e35W[=#M^da7<5Uh5;r2@.6M;4=
%-sIHcSgP@GEu,c5.fpi#oqb2r'e1Y.p\r+sGG]!,fLS+i7,fQ9D'i![/g0MO:)HttSKt'p^:6eUki3\_'L(m2?;'/B)T4<:Y)Nr:
%.mXtM)7]$_!sfou]3GXdFC$':)1=*M86H$KTb4bn*2=]=Ho1pu5bq^r%'pori:93i0cH->J0#$G^aa;"a/D\`eQuYa;PGOC[34PC
%$uk!PE>qKj3=usWQ%dB"8j=(f^_\2^8B=1=h.HiNf(4/*\_DnN4g'Z(PaLM&5(hWb'6T0B84]#A8>)]!9TTPo-pKKtk/#7Nm-(+;
%HP-T4oI:q,G61i+GFODKGqhSl5"l%>$]ui,:n:Gh%h1TP,q6UmWhRX%G,YeUI:e"u3!lFS`Z;-"W/6)N.La/NBa/gjb.1t(g@*Vn
%nHgk)krahB"Q%nthl/c=eI2Mr))#eiGW-5,"2lZSR]a4OUX9esX0'h'$LulC&:Gj\Mr)T2"Y&CJcY<O1W$G'kiTW&$O;"mL;G/YI
%g=?TRb.WU263+MBPsa=__Q\-R&CC2$;2asHR.+Ua.T[aarh'9i@Ms.[eENhrX*7FS7oAa=k]H1#7p`Qe$,tpYEC;MG&=p`A"B:+0
%X=HWYj8;445mg\P>oeESTYn/t.KKhCecUdEG1k3`odC5F6BmiA<^H@><o8FH;"S#D#W0IodLU:R>H#EO&lRd",c&Y"pgTVF#LaLJ
%<1'C7I<l=]><)i52dT/l@F\kL0#4>d8>`a+T;hMsfR3$CUa:O3Ru?f0bW6FBQQiCPX9/$N2@cY=O*hG5!,\qA;;=QjGPX$i`TQc7
%*<m.!<0K0;k!DN7XSR+a`[-Xe7g^Zi!^Jt=;5G^Ndk6_da;mk%6ub0h,>*gYF7<m)]l`&2+rh#K+tdje*1s#&V@X`Z=G>i,6P7;_
%i0`F*:Q^`pNN[&X&)Em&%R*U3>(W4N&mP'*fjiHb`bZ+fKZ$='Ta1N&>$I!//CUXs^Rm(KD7]'@RYtqRC'NXM#!l#"mWro2"=fKM
%`./X[5p='+.edsVKX$PnnE.^.:`NqMYmTct"9Ze<&97P;b[eXHca4)LfX1k"OqUk#4jKLK+Ld<n"gQM*1'7Ou<j*q\f`ip]UE1-%
%\@(p;(&Z(@%djp'?*K6mnd-ED`@'Gq8B&1g4HEm.LWb37Yd0@2F]:JXU(\(Fm&rZrV[\_k+7_r(J@e3&9\ZAl7!YIu4HT%R'G)7C
%0VS;Q!a8CO?t:eIKQQd>Z-erY'm???5hj@V_%sA7a#k8.Rt<:l,W&uB9TU#7W#tg9Jng,aFDp/\oB>EA#]\!F\uMQHW*O.)D7-pi
%'?TE"1H8Z_<fi![F>X=0-Qo`M:IkgXcAI_XN$_)"9rJBMmt_&)n9_=-BRnjW1eSnt.=+/9/YIsaNKOL>;%>f[2<fkilX+M::7HjK
%)FaL\Q:-FSKDd\TZMAl$N!:G-g@_KD4WqiHD+Po=WNO0)pfi\b(HBO=#3uPjeAUU`0%mV3,J"I9W*5WjAK^n>7V]!OTn8G-Lt%KK
%Qj&fIr?3EE'g=6WI1mq'p(S1h4UuRSLP,eSi2N:n]QaMkdM'>MD?Lr""sAW=J`D=(_8=<-4k4jJn3nGd#KB]VY$EF;,f#eS)KUn]
%Cf64.$3@aDiGC?K5_@mGa*Ck\6k8ug!CJgq[lEO^63NX$TSh"?k`s'h6a68m.mfL9@K8)_`kii@6_3`^FsOodiTb;)B]#bb(C?&f
%oMU]uUMfWs24!IP2a3]J*01.aQuC'2S2\:.,.umqM[(qGX[A3oA=Noj4gF#]@Fh;;_=V5dS:2)<+s>+%X:!l;&)1fG0hgVEa:J?s
%8ed1mF(,Gp*5]s.SAol-[h!:fm>tcZi#uj6mAgBM0kLC:#WItV.JbdgikR^j*RJsOqFlGtZ>p[FmBG9[%TO9NQRiShQj."]&_DZl
%m*%s`IuVP6p2),;8Z6;IYd.Wh7fEK4[!N:1[6s)(Q99;gDZRi#@%(;;,R8)i4=[e%1'^.\ER,V=;ZJ/rV7Jugcg6j^]$:&NEGhcT
%C.e[4R\O.9I8'Ap,g-oFA/V_5Qr&Sq8,Ihrd(3t.>J^)pU-PfDCg`95qEAOMX.r\4<ck#`ICQ2,M2,+8jAoeYgW0\QNhp&k4r2[&
%%4D;3O4*I]Cc1,a83%_X@K]co>K'WO3Z29.R+M^J]D-_0aq-Fdp*N!rK.lGc#.S`,"&iG>O=W+$pCbjdaOPNM8gT^H8gDR.NgeYn
%R*P.0:AJQe"GA2=!DBiN#g_4%[/oM>M;T.+oRN.$#l-YL\f/iT;,_]("u1J>fK,dRbhbpQ<f^,g8"@EEB%LO/T)mq'OB`b#]Cc3H
%8I*%!jd2&(UU2i^YmNhX)msGF`CP\[g8]#N!G!-0kVX"Cc)ML$kO+?Z@1CLZ8r+LoF$0dA^-i,c7D;q`+$%ma85A$MXdTjm%OdGI
%\E?`+##75&81cDs[')8-,MNeQGk$BBkj6)3aR'LP5S4;^%lC^%9k]P/lS%7(.7mK>plIrJOdN2t#c`%F+qL3GkS(6pRRDOGY6`U=
%&XFj+\nF:I@BHuL'gUHm&e5B0(H"ap64a]0TLk?W_WVIR4@\P=Aipj,?Zc,Q[nCS:XYqWXN(T<JU5_[&WsL#k9#^j=T06E?[9&0T
%kZ`]j5fsD)cn6"WEN*d]HT3L.gZGLY9R7-842b50W!Te+Rg9KV^DNng>aep/.\l5CrN!'Kk6d@/T-!q7$o94]Q#MnqRP5(n@LVt"
%GV%_?mf<_"BS_4Z06JiN_V\f*qsC["Qi];0#+`o6n#E0&<>"&E']c-g25L;&O+>q66njI"Kg>Tm(iaG=N2cL6H4\S)nUSpI)X@0L
%]!mceNUdm*)AlH9W>i&X^f955*A6'&^9Rkq3cKg,i)Kc>3q9Wlc>=Z&$o&+J(\-!5IEG?$pUuI!lfkE(O$[XI9['?WrK6XnTF7OY
%qrGq/:11^g1o+:!4"=%&E,sG*OlThZ]BMYFJdsLO2Bq5BqWa`S1U3)l1NLaD"FQ(6c,6WC-DGRECXD%`1[;!"H:;S;.P,#jS2d<l
%ahH#f4p'*FA(p=e`IYNpe6ngR_>u4RJEcB"5qk.+"F>$?!5"s*dWmp%hm@hFDLuI*aSno.hH+RZ5fkq(]iI2fOT@LTk$NIlG92cc
%D:TYY^sgnTL)fHNYW<FrAp+1Ib>gk#^kp\O<*c'XF+U9H-[ebg>QL]DInpe=*QSak)p?i$^HPQ/?i&X%o>e\,J&WdVBG!l*PLG#(
%4FQ7[HD([fOA"deGiiC:WdI@ZkT^gIg@VMM!'Tlq!7ljVE"HdbU,(\;*Wu0fh)solH*9\Pi@Tft!>pkXBGmR[0E\gPgKXSZT\dOQ
%:k8$p!"g,$c;&*s!SJ7<M_nBCDO%Kc/t"2h@d<&Icr8i['2tQ!&A$Lal4*^*QKWpiIe+EckQCn[$2o]c>E/2)j3fQarF^6V#]W=2
%T70eXpuT)%2'1gOL,AQPXVFYpV@;:pbF<-u!J&Ir5Y&Cf(F'u2U9$+A!JlK=^^Clg3MC/;/poXq)MuRbKeI0pTa\5@<BbaQUgNb2
%FgG]6/t_Tnop%lR+=O"iH\tl+bs4#:.ZDFCj<h"O@m:k&KA]N/kHSa-<:[i3kp^*60Ei],!Dle#(u[2KN!PP%</jRr$3g>7Zl2>a
%*gV\GX6hj3Fm2=3^2e_?07\U^23@pQSi$f2`7t^HWW8&!%E'5?%47UshrT3SO]l.71'hf6#:^Q44HVB?$cqmI<2C2uM]1(S$OmmD
%pqD@&51Wd#\=mA3V2@8l?uCV^Ws-RZ'/UsD#dqUO$CS2t?[Y%,djbf@OFl`@fAEP/)7#oBI0]RC7=R[&bU`Rk5dPNZ+'j!tFO*Kd
%k]@6ZTaAPjKV*G,%/&6t^1)inm#[Jrk1es*LS$t(nQD'1&#-0C?Z[^6%<<<\D#rXqa%1Mj`(P3\5Q`hI$sirJb5bqEYH=r-@;)kM
%8moJpl5gm,i9r;q?NI)Q$$o&@K!ladB]XoN.(TV!.0VJipdcKbaJaaKK+*P"J3`6shdK*P6'Eu!Nk=;;.f<]FMpE.\F7o$N?9D@_
%q/di"<e1U3c`ZqkY_CR#q%>o^Li=@f0K=<'^jP<21D%7\BFr7Xa+n`#%fiIHS%`/;1ZjnI\!I2Q9N;B;DtBZIFj+Z^I^pAQmd)4"
%.R:@D!S-j`9Tm`b'KQtlcNfSH#NfM>"_Aj/pGMi\;?IOnV!==Lb4D<)GC2HaJa1YXS.9W_AuMiK+O!nepniYF'"UB;6=!;O6X:-\
%gL$t`ig"@uA>l5A6@hdnWNj=RP7DKmN5mWL.TKURp6@O8<]H?GRm=!Z_Prc`"GY'f,)47?6%^lnG/^M>RD_le0E$W$A'=-cF:qhG
%9UupdmY!sVoHDHHQYNW#kZh>OpcN/&%u`@q"k*W(m8c*gQrX*"4NNitp2Jsn1<-TZpp&?a?pOFj3W_%>-@k<Z",@:+o/9d1!28)F
%&2;\N3LQ(14;OuGOYRtEL.AK3is.r#0.'sWd(pk`]3CttLFu"BU2F:55tNkg'>VU88lr$EWL#-O+T2Kc566Icl6I8qq![!,49<lk
%KQNS%-s+<8<3E>mHF;/PmH<5Y=''oo8P*KkWaU?kdHjrp6,$kbLZ9oL7<aCD]cS;$,G[#[cKt[ocNN4qG^ojO4og2!?=Ae--rC]l
%F+FVuf2M1F:(^V,Q'F-/*EmW/9g242oR"C4^:om[U5;:Ibc$aiJ=r#+\u(n6=.J<TX-W8m0%so3+^7U`Y=3[WCG^lH8JnS\LtOcl
%JkmTE5HuQ-pH*V4Lr20Y+uNl\c;76.8A3)c.ijm=6W[K'3/p'1rYph%LRG=mHA$0t@dmeg"+g0nD&F7kka2Q7UGg]a+_=r&3(X@j
%9b6GA?"Y.HO)a;-UFM7j?W:Fe0[F,oC4+nkelM+GBf3%_P`#9ffA1-9Yr[RI1#oPt=qrh^:S6A+oG&ELTcjdXPg9-t)q?W0'(i/?
%^i,URKN)_n'Nb!,K4_=N*gishMt72t?YrYF^+%eG'YC;XVh3\RAg^p'Cf`_7.@Z$3nqPL7T7m<W5d;suSm!=>U#-T^NT%oKC8H_R
%B/]Z3J`\Xp!gpbD!;&9u5[P'UQ3+k\O!Gc,mc.#&80<mu^"kB5)<='C;@mEtF!N#-9T`>Igpqe\@QXfsD!5AR)3l6ON]aI%#,n7P
%I0Z:qU`(JFN8cQHc/f#>\*_6J9UJ81D)LClC+J+!6FL;ME\Ck;"-,k_DW%5BWT)Q(7'A?ao\J"4%Ak4#*WShn21;qPAkX@AErl+;
%,_-4MUtl$1[lq.dY(dgr8RJV)H@4OW?P)t.(d)1uBXeC)A85j&L[g[J>ksaFjmtW`*pLar6p(ep17/.Y?<4VXAJ$+-"4tm*qXQph
%(#E>aWkpM+*#4Y.AqbDsJqeFU9a'ngXe!<H"n/lklh!.A98.EO;37aH</f4CWG2bJ$LL_heJ&DrZ"n$M*XA@8R]2-WbuB<B7jR0]
%=r"(\]EXX5l>[r.;EJUR%)!?g!"KJ7!RC,3p!S<]XfY'72-.<]``eUYl,o35W>]ADV7nf.j@d]4/u7Pq9uf1&pVA!^L=&eXIPh><
%U6*'ooZL6#^Z+/g)%\]F[-9<r^(cO);c$,[%V_qNi9n^u7Ja;^'it\GHCYJoU]lC(p6d[JEr$ZfUhp+Yi1YVU@=hSHVRhZEOH.=8
%E#Y>@iR1l$cKoY5+h2\2/d1])V_W.N+cmYUU``XXL\ue;pj*Jt6Dd>sE=f`udfp_!&8CK.*!s7^*oZTh9S\F#27QpXiZYt+((M-8
%PoBFqW<TrXno0:F3d(9bbiqq`]Z\@9,>QWtG-%!-L8')1/;W@lj)T#lhrSW60Pq`baD4-e5an(-Z4+CYjZHJ.QmCbP%JT<hW$iM9
%cs8'ifj`rlRjf1Oi'psl7Kt%c"J]5Lbm-@.';%Ghn#?0jI7L,tL9)]Z!t&ZMj<.QYR!l/$L83*DZ6_/OCtuf.mCq(i-E"^Eis\+E
%379Di1aLZO7g"`PT_02fLkcm0M*k!GSH!9$3Bcpt)X?f6%s?eNdSQu1H\k*!:VW.!NaC^I_j)qfB.'>KfW;R(k0A:.4mQD6ct+/$
%L\\A)(hL'-6_a6!]o1n@QgShof;-W:)qBt_)mI)#.HqCC+)hd7!.jb*1`@iT"a6#Io'*,X)rZlc7=)`qcfhDM5b;j3#Bjhe"HPeK
%5o2%r&M6acV6amtL$CBQ&nfSt*9DDb7?j5PRY_d1dNs1K^;,1%DOUt]`u4fG+oqI_%_46gA7kqi'rD6ulhbZi`ZW@CJduea@?^JV
%_OKA%r@m5Y/.f)erhMa56]6uE+hLGDE*4<>/EDP9:/ZVQl1u:AQ,*`\M0X*(^5/D9(DFNHaHt\7qDqpa%NYg<,RqQ,TPDD-W6FHm
%O`\6eg&haB9U%m]DD2OIBSV!T80Piu7Q]PeL5hCl0'X9m]YQ((ID@)BhgecGENfUJN]CE=o+K%_<ks2Ak&Jp+O8=ksUtW!lEu%c(
%`n^I3@nn;OPT=^B-i_!b*C7,7DKC*+-_t5K._6#VO*"@ID8#VQ*'K`!)$D\I\6X1NJjXbr;Y#@^$\D44hg'Ks!TTU)6ZOhu3Wc:q
%6LWQ,8A.h'3gfY<?^;3HWD^]["d]S]%68>XVk9\hXQ1gN=,1TjkV<LSd\3QcCdqf$8fYS%aQ'L'LsDa]kAD2F6hcnF'Wi4.V:3W"
%WNSBrU]WPQ$5XhFF<,L(V5#8V#JAh,Z`[dl5?rC<NF#=NlmXh<Um.!aFKl2Kon,%X]*%bVRoIb7[3"[X=!,bg%^e;2\GQl+o8s'B
%_es1MROAGh(gV:Y/#54'(T^IbADg9r-VSRqE!C+%1.G=Lg)Qdki<(R'8#R's_bgftBhesH*GPnX=eb4rdWYc&H&qP#ipDLeU/FL$
%69:'eZM@rHhSKbMFfumMmr6,n/UHg=I)U@tHRdfCKX;E/lqr'Ze`UMO^$&hd6&&E4kSWd**Om]:<.3N<q4nMOQB,!`bN0IVPlEu9
%I"T38Ej,2Yc$2*Q&JiA8#(]2[jb$=\Gb5*A9IPC+QbC3i-4g7h,+%t2n>Q(@cl<^+5s1aZ/AVN+_!lCf;Xg+d#eu:cK./1G*H9q-
%R$uebg(#?2^fMVE)-b(5_YoTL\!,Uf'iI^!Zse>uqGa!96l0$W,J9$)EJSTdh+bjd_4t0gG`k6-ciQ^=)<%Eiknt+>6%mPXllLbP
%QkVFDd)o"d?gMHEX-Q*I)$Vre4I<klS>(G[_<F%7[5<Q%TQ)rAF\kItPU\J'Zq.u6\:@LB&`)VN6dQeccD,$?R$pnm+MaD'0k>mg
%J?N_=#eh-Q5E3]M$6"G`!Zk.CD,ks;<:B'`L"n68nrUtj3`oUgf6-pf7q1R6:8sp+#<<GOe"i"YK553NU`rRe>t'"7jG5eZ)i+^"
%%mrn1O;UrI#e/)VOVdX,[$M>(PJ`a<<.#7!88<in(Ei@EC:afncs<`Tf'e7<K4Q+\^ra]>cu3h[0m<e%B4.E-Cfk>_>7ECF*RMk&
%V+WbY:b/5$=k2m?PZ/I)EeM0PdXjDj@>K<pX$l6(\dR%9(Eg3gOHMfE]rgQH)AC%pCE6^S7>YmXJ,rral5LOng&+^Y]#mlQ3CD]6
%E\ZJhFoYOsnDF=,T:2VWYN!PVKi,o9<0#W:i==Uumk1AW$$)o>f*M5C#:W49"U4s)`W?nF#hL4t(k&?'d<d?)6)[^fj(2,1ICJ_`
%*HVI4Rn<jI?;5'_gjG.f1Jh/&3Lm<H"^U\GFCB!YDH=_,hCq;_V!aU,&4]qb$rGjD8;TeZp(MB3")3`/<!^5%OsSh0MR+g$PX_VR
%EAVAd(oh?O<$F'DF,:u\Do2-!1P]fn`a_;<^K3GH5sfFeXYq2ail\f]E&$K+[@$;!ZdL65do4_Si)BX_,e\k2K-A:_6<3<^H#B3G
%/>Nhp*qdBtN3^W]Hk3$(Ue/-I5b;,i.c'm6IB9R%nVYl%$<>MnQ$K9u(L2%Tqs*%OK)^5p]ANM"%pX;F7rESGLW>C?i_#(NW=LUG
%oA0H;^=md<G0]?YY.@_Q$"q)6@dmkH2#d`77LDBk-EE@DZedDEL0a?W=IlTVU_co-n]U44Eo*Kh":5CH;Yc8fp,m0_RFg;7m0^)m
%-/lA]=.M9R]ZP]V"%)':F3!lh4e#Z6ir#jk4*js)Pf<Hlnbq%e59(@*3;7iq5s3OD?4\,DFM?2JI22\NX['.sBZQ+FP%#eGn=N3&
%b`4`Xc*HfC]Y@37G/!FgP"mYa`S+\`k.Va_3Do&k(.;(r2!elfZ^6/iWma+Uk"]^c6fX@HB:\n_p\lAJ`?&/MYE46[j!P2.pHXe8
%=KgBOSY(d2-iEl&RZ<MOlE0(gS:5';c,CXjgC=q`'"^SnJF^]Uo]CL)g.DT*UAL[oG>19kc_D7nOi<coII?@Zbo^3"YuA_nlB2f9
%f.K[60UY0MoX:)j,Zto%:XA\T)fjpB=[pWi0.HV*+(htR#YD0?.EjQLDbs.,MT*7q1eI6;>^aY[j7aV,XD?IO-`hS(:Ku>VBSEsG
%6Z-gCA.!AFMF)<@&A)95p:_Go9sV,4n^G68A;tkXlj<R/]'G,(IXGa%G((][pBjKsI/+5/RD7QEm+IpAVnDhpf(?,-o>R)9]s[@'
%`PIT#4sK&;RZm;K&i;9A\#Cpe^!a$22>m0hZCt,`(Z&sKT9U*0Aj8:tq%LqQm/=fQV*\%F'J&kY`JS+t6#;"H>Pi11!QFJ3,A%11
%Z0(5N77D"[j.h6DX3SKGT!e,r%m\5B=`U7N9C.&&>PlSCarm/HI//P,lJan--"Wb%bdEX0g2kZlJ)@n7!4dsr5d=(W=JsgA9"4QF
%n7sG/qY,G4*4);\kc1/\U;r_;Fo'dFli6W>/Q1@?pPA7>T^B3]Z=UZ);#9/&d+5VhdVHh]'k6`&@aYEh_FYd>/ee9VbI(&IWNGQ!
%MKK$?H@ai-ppFp`ES\cY7=:C\qC6L/>K,q:`Ic:OZ[3ascgDL$4[T._>Ut/0,Q>\08cFUAl&j$S?4r/r(Pp17Pbu,g/A,63\QJ.m
%/\AU&!lYLn8khRU"8UB-8[1#d+_Oc_/@r(dd+JWQO\.sC$[1FskA71IFR1W<\h@r*roT@pa.=T;4'S6Gf#Oum<(f5)A:aP)9=Z<@
%]@bRB$gSE!)h;Dn$r]j\n.2gh\n'K['j#nWd3W_RGuqgmS8jRF044UAT8M54`V>e?!Z`nOOt?0Rn:*j/&sZd+IfHcWEQ-W8kEMN1
%KmT(EnQZ[?l*kG7']gMQ,Wn<K+^/E%V>KrVrMi[fDKq%AUmTq?pD-3&7oJ]K[tr]bh_FHHb],-pk?T2G>U3(TqCfI=Y9SqpUguC+
%)l;'=bM#osGAhCH7o.hTmiB18_<HD_nBC_XmV`%[na7@bCQu/ekY/2>/FF,G*r*p@p,`Q!3]l"ghqaKia#Z8na"7)!UtC@>?.RLG
%,N_/(i[Srkm7jc7MA8RZ#b=DqnUILl?/7[@bHMssgG9tujAKsk^!Bh/DB?:"Ie`I#A*3D'ZfoeXY0K2;5mho5h>pbIW<<ARQGZ/O
%aSR!2@[V$G;67/1CcK$FbFcN5H_ZqqR2d3NVDTA9MRh[RkIrggZVA*8-rpo4!g!RW79W*i!!S%!91F$?8Ou<-FG]^S=<)b)R^[Ks
%h.BC75&ikYYk"K;s.YSVXt'lAF=]t*=p<E/5JhjO;60o/<k5^-Q)-&c3_NphVm&t2_-4?U;JaFZH]M@['sCg8_qT]NRH!Og@Th)%
%$^&SrgVq$Y8[086(ki';d9[SQr0<Z8Ia`=\>2J\P-Z5BeI,>*?s5ho]GgRpt*O=$cA;ZZC:l`'C5SOm+=]8"W99uX9qq0u_T*L6*
%h`bbjM_i&dCYnneB8\0LMm"XgAV?:G#FJ&XIhLSQp<_2iP_qXuc@&u-q'kXLcFD[;+18b:V^u%2s-,*Brm^YI'`+4=8_:9#.gmB_
%(/%Ilq#HX(mWVKb[<InY7'T7R(CQu7V_.hKjZd4b%o$@/Qui8@H[[Do@`>u*g?XT)%C/r0N7EMt;3ku?Cn-sbioV>)+2@0AkmJT@
%<o,(EZ,-C:^9,+XPN\06m<l,$QF""cQ>UfP.$gRRM81Xs]pI]%0T(^)q)?DY]/mmbldeauot\KZm^GsfZZXFJB#\W3HPbmSP%_$X
%MX_+L1E_of1b5oO64p<lm7j<h:Kbn)j_L&mM6YN`2'Y%lR@(VO.poj#1KUU&(AGpV3Y\B5!GuORd3_LPF;1Cb,OIE$`JEh@6q<_[
%>IR,HN5$Ve2IV?ENm!Hb&^/Mtf'RrgDoqD,l\T(ar0..t_pS^BGtdXt`;XfO!Km9Mm:*rlS&QEq7S+X_^A00YSFuRt5JC>U`B)aA
%+\QmE.$bN`Z4o`/&LookIKNG@mODf*)o*\kpl:E=T<eC<PNRaYZc'(nS^V%fc+j0n2on%Q=L"^eogQ,@'U&'(FN+WT/IC9<$?>V5
%2_I,R%uX0p-cTV1Y^bMt]f1@XI1s7F[G1lGp3':]&B/\&D?.Yui3@;*C9Re;9PtT%@N/O0B3kC6FSYn'\RP*.@dY*sp*J_$LWYTf
%;(Cue(@"=@pU[(9n!D.&6,sq#F;McB]fR`nIU?;ukmPd*cRh.QbW/B#Dq]3bgRED/LaGqg%cfCWJL]J9Q@:#2$W68Umb#_V)h;Cn
%RdKGV?bQCAmue-c/A"0k5>rhGhK-t(4'Ded/DId0&usI8ofAfa8aDO1$dMIgcOp$^ij?2MiEb0CptWPU0,*q0&CJJkh"#M_<T+@Z
%fMLc8*\0hiOn8aP\%;X?7@U=EaSSu8=@XD\p@o,;f%"uI]Xl.oUj:?6E7T4'S+!ufDa4o-=LkDqh2D!\dd)a!WO,`M*mc_RA:Z*-
%nQk+FFmm`dapZP;cTGRY\k$**hVYEh`cDp&Md/EdqHh`N186@Qj8t2ZWFkGs-mm'dRMVl.rqOu3[uOh(F,F$`IV&DH2i6)b[Vg"!
%aOO-9!Q>E0/XC`h;(UN@Yl]fs_4<nT[kiO#id3&tre#@1hVn'q/bd6E0.hY=BBrdLf%j>>#@gMH5M11#]\D]`#@q8#.7QGZIKNL7
%a*0[)FoJ"G4)7>=C`0prc#U8;]"EFJdflIJ#0]@<7.4IAZ.BZ.E.:83#Urdios1rk`VVn!hac!s1G;ip@R9ImA]57^Fue02]j9h=
%Q>7nls-=1[3d8H!EXuK2dNb3,5jse=Uc.du4VE7p.FqB.B3r#miiN$S07(Pt[W1s!guS'2cM:NaQfOjkc<WiCI+sQ)q-QW+P<I1P
%_:'jj?>,)-B>k5rnb`b"`:W0cN**B2bjlRPA""bs(JCt.p+?"S?g6^e$@Ymj#EO]o;=&r9dU)aa%?bBhr.CBDi3(HbgEq0WX;UC=
%CIIsC>OU5>9"4Lon,ilID,D+6$lF=p`NC90nE,5GNLKO0;9QC?MN+.\GZ7Dh`?5''ZU^l<5I=cM"!.G/WX>RtU0+>G-Rgrd`O^&1
%IlCoSo9*cs(Ub=DAZu!r\ee`<f"N&OF?WpO1lG6:8cElV2Rdj(>&sYjbL]q<5;d]b$V)jsIaMkh?iSCEqH(89YDQZfG(9>U#%0)Q
%Yoir'c]VbXa%omfedYijH+L>-`F\jl2Ma:?#!\nc[_#CmmU!7c8H&4EGC=\r_FLLO>HFfb:A3u9XSBsbn#>3:&ZnQtkK+nI^`-/3
%H6f&m4+"bKU7iim?2h"C-a&jUDR?9*EPa/q$Wc)-p%@^8pKESN>Jq]aZ6Ia%<`CNg1?\i0fB:(Gs+dA8D'#rmj03f5A3'$/^\[IB
%7D8mcl5Mranp:PmSMSO]^MS\[c*rQ"o=etaIWE['Xk'aQ:CWf>])&Q7SnG2)NM"pQpNH3d28a]Wc^!+?Z1Is4c.Ol6Ub6HZq?:Mi
%[t!=kH[E.Pk]Qo('^O#PFGd.NVnKKbdHTDG>1%?Lq-r.-qF0S)J,S+"9h;F-c]NH1FJuq_#lh3oc'LIq77WPTnLkM*h^mnr.V<$=
%k+,A4jgXufDig"p\j^9'/)Au^_(T"YZ2:slYk0IY?Rcgs+c\]U/ADJ5ets'Y/:ReoE?Fa):RR,k@XCP]Q[X5Oi\Q9>F"S-HS1U%s
%.k[f"l"#)Z7K*RORQ9FN7O(K^(!9go7=F":f=MiVq59,'D\=kf+3kE>p^0qN]DMC_-jDoH'All`!S@:9L\?YqWpM=o-]UBcFn&&?
%5$dq"]`51]Fca-gPOBnATk<LUqalZVZ<a2%;XDElMtuO"2<WEI#o@.h,\#FUiduCRgZ,p!5[+r976#O<h>cPJ10\G5[.fC)Jd\/7
%3a"8oI<"Cph'WD9n]BdCT>,M%qDdRkC,M3',6aRlGdg5$[>V,^f]\cN-@#8gF.O<7n!L[Wb_sG!Idq@bOt-Vq>ILH=op'F_X5MU$
%Oi"k#Lqc*XDnNDg9[3NgQ99(;I.!qe4-uL8psZg#a]1>])^2jLS')h'?CHZI_im\aLt/-sf&Uf+n3qht\74pRRSCgRgNWKoiq[mS
%QPB[&lps9i4L?2JJ+iPmRSuC7aa7phr.cW;4%D?$Q^mS:m3a'eVA8ffV0kHW$@$O\])P':L8*>R+c]iK]qj;:7I,[Zh&o@2l16jj
%!f'F.E9:7P'QVmpk1;$#b2mXrGM$.c-p$q>^DGpjs4XP1gT=USN:XN;&%74ZrQdjC7&DLF^r?Yn=j"FPn/Bq*AMT[FSt7S4aZj=B
%fmGtj-km.qrC%j_LHjBHl,7M!Y1YRHdIT^@5BHHg]?buQ>u*9W`EI86oGXG@rJJRg,Zeo&Dn17_NI$g+3&k^JPdq<,-TjWMD6W.b
%3qo/1%t=2[bu,3*MB8.@D5,M]BdE;RJ[MecX\JAOri7;MH[C*LA)lOJ?]o2K]9p%rTrIY8$sU)+;Jb"&Vj:Z;o;t5@^'A[%MEJ+a
%S&dJ$<[_"eT:CWrr#PM-V1SQ%qmMML@Jf9K[S085f%dqPSP@t1$hs(6W_oe!'J_;06tWnV8rC=U&lm,3fnmJ]<M?5@]5IPt`7[4B
%9\VNec<A8*4a,rTdqcq"]]A+#0ujtYp$@(.:i++.(%6J#]5G=Ter:V-b#RB(f>"L?(8(-BE@8+fR,)2qPsT<er,W@\o5g(ql=J(Z
%U5E/m&Dc)l@]osW0<+U1Zd4*lS):mPg2#U<VDiq]"!@<kc[N<OrVFE3^SKM8L$)!a*H)=$o#:uB`kJhSZaU"T)TBGY2FXmB*Np38
%a_<0R$2Uumq<QV6qo1S/n\G`bn@\A<X/i;5mC(cXDV_</cr-j=nl^O);\.sNbOOF99k=I88ho1+hOG=-hY(epXh9#-P24%CrI\]E
%\`!+_RWH6STbTIUm5d4l*R-=U<%9e]<6W9=0;Xm?LK;QlDs@"[>h@I.EE!l8Cq0<'S$0KqapTl8;"EK1\)72GP>@V]PN9kO&-l*l
%!l2G4Q3!X\O4Ym1G/e08<r>$pd8!9<1%R?L>']&#p\nTJp9dUL\Q4jtCFZK6p[7G:k1iZO*?AqHXL[GY>HYa?qTDrGoVqTabFQEI
%:#l5-N$ucq>q58Z3KRr*P)CuV!%?2=3b7d<>9:-9q$D4VZ<rt>m@3A-qWp.!2jQG/MiT:^5NlV4^P.HNQu;IJV%ib@qT4"1l))R6
%r`MH.km?sj95K"Fg&LjF9p`QXd^(PfmmI-OdGOukY<*[BFQaqsUd0h)bNuNMo-_96^q@"mS25kC?KQoKcS+`#YA&lZn^iOUOtoqL
%8^1:6WR&<pR_#oAm`q-p?iT6^TD7cf?MTVj?#ehm5CD;[^\QbK[lgp<Iq*C/*.PrI`i^VSMjc/LH_GC2&>rdg(8'(Fb]Y[Cj@#=c
%'hPi13MT]Y6Rg\U.N-W^8>UeF`&[BY)D(j_@/ER6_`8r6)49\Sq2YDj&,gXqXoJ@[J%=uWDn5FE2gsX(httqGDu@a:O$,Wjk5qpL
%/0J,:DWBLO)3TQ`VC=DGAVd)g"koHD:qd&9IjFV7?^@KmW<[h9Ec(W-+)cVdiVNTLT-o]ohgJ1]T<S_i:#h.#FQV:1I1$+A0e;LH
%:e9j6S0=8jZ6Tp^PRjngT4J6\'esB(j9Akp(8q[%+6=TEDT9d$"=e;-:6o?d4pel6;Cp_Y:7pdr5u@/_42or<o]+t-'f/Vt92?A)
%hCSTR*k:UH5d'P,1;sb!=3O#t.EZ*@rKtBc3o?7hbY+nH!9L,.(MCJB:J3>UM_>\AKtXOi&2bhbkJ[Poh`Gj$jIUuj'Z65U>XQ'^
%cjIg^pFF30.&CP"<+Go+gS'm!8)J@^-s#PH..tGle<LgZD;sntr]JI$b&O>&*.(<TdPG*']h5r4mZDqR5dAV?eG#OHi`RE`QB:+J
%TNJp^9;*(mZ)sabg7alJ.l:9[\c!`0!(HliP7C2XoeI)t0M?7O3RhCR9RjEM/,]V4=nt=^HT1W2^/OB5&X/O[HGkY)Z'IRf/UVY,
%c,33"hu2)0>P:]"'Wmq&"%lpS.WQg`h%2oOij2s;aW+dS*ME%(0BLKnj`"(ud('fZYQSu@;XAr^`Jj#P1%TlQIc\#SbF]ZYpq[,H
%Dnl<4d9,=,Z;BBY"V],PjIil<Am&55lbQn<;Tb6G1tgFJ?O*;jVbt$anp_aD6iOoWX7=h[\P^HA(8SCdS.kA%iJB#O1Y-Pq[f#;>
%ql+!3mpCC_rYM$A[W^&e`N:L;LkQluSHUDeAU;9^LKL-1Us^HYW*27$ZW0YRGbInnC_RP0jXb1_Oc0Y^S*,32r6iX*/U>i,iEj]U
%k*Qn0?#_+-dE=iY-)Hrm@G+D<kn's7dF'OAkiB@o)Ch<;6*kZk[CYR7A/U1Y*TGIiYtgTCnVA`uiaF=m@f7I8(@bY%Ep+3i]aV*o
%m-@<n?r&eh-&4K)f<,o;eD*0(l*b*=H>E=tdk9liG'W6U^*0qoM[f>u8D_cHMA[hqFsrO>AD&UY!b-X\7?J72?O%:)a?T-1QX_7`
%[t;!Bf2fS$Wu#"76.rPFCu-Bpm1pXb6+Q`plK,ML<A-T4;r;WJ-s#%.P.W>(5/6482lp?tIWP#FB4\=`4>unlqN3X2H<4`\J#<&,
%J)9tJ:]5\6%KCc\m13a,IG;>W^@dU=YPmJrs52WKJ+2L(S:0(fZS('Yk*o[:rSe9a?MN<Uo:J&-go"2Eo;!ofc@-s$o<IfWFoJ?N
%];sLD-a0dNH>q082-%g$kE5T6_m7Kjrm9Gh[1YK>l%?=/4>=g)U1u\sl+3m+VXmcZ_GcA81R_[8q5OH'r>C;9l4r.5Hmq!OgBqn$
%d9\4\c,s0Kb\\'R%o7=M$U6jrjgVA&>HHr`XQB<aS_Q$hbf8ThmiEKdR;gT78UgR#AW7@iM=F6WLh1&&/Z][5/';(oCp?ai2J>OS
%/Cqr?Tq&\1b%XsQh%+(.X";0**a(sX"^.q:o?`A]WF#L=eM>53lr+B1`M>JVS'2m5EPm;)G"DE$.HgU3.(5l+>.2`a>DKB:3@K>r
%9YC%s;g(rn]#N5VNLV@cbSA\k/2\H6dk/[QS\&OeWYS_AS^o?MF_1`?Z`ot4(J<I6b@%MPQJm!f(2IJWos1=(C)J!-Wtm50="V=a
%hEIda(d^_S\7m\)EHBmM(69GAou,E8TPXo(Pa7oo,.s+h20j*:ED*XhfE9$'$Z!#OQ4(kg>K][W]Y`l7N"*_0Rc;h!9Nr[#Mo7?A
%R(QZtZ,JOq*#FK0F.`r6$YAgT.+TRj,@)^-D(%p)5af1tb1L:UbD:l&bNMCFbD>uEbG_t"bMf0t%W3XBm;*DVQMo-,F5!M8l`at8
%#9R<]C;_6%N/5DK?OXBLZA`hC(gd\U+@[ppitmWY$fV+5/.lA.L`sfs8P>_8?OC@d%@#f]P[Vb/N*6ES4tOn<78S^lW*[IpX^9!V
%:rY/h?B2Jk(3P4Id)Ru>of'.lJl^2PngOOE@Z)en@Rlp?dOrIqo0,;0K`=#Deed\<[iN6Il]rNfj^NT?<3hek[gZ'NeFOpd2iN\S
%*?EpZPl''dp>=[@O!`.nb877L[J4'2AhLW$QK_$aQ=Xe?(?^-LNq%QKbH_%BA=4$W=-gBIr_U!rX8.%k1=Q8qWb(V@T2[E!ftZfN
%%O8r]`:K.$p*nTr<ioq=1Of28%iPC%CT\Mc=@g.EmG[]%"+$t,nL`am^FqeMF7H)6Len%9I.;"3QLB\QHrGFUCZ<o,T`":\:ql[>
%.,V`Pb3epjq<<N.I^'+"*G_AHnVQPmg&9IEQB(6A:VM.Sch/kiBN7apr_W2DMkpLaX/uF1:>>o\!9@i=dNNpJH+)tHA*7"G0J$7H
%o]Q[\784G^miJo>N*\,LV&6RE$pR0S^/04:pYo9Oi7bW1T]c(A^_RE'`&UBEg`j32ZI%Hg[S7bWV$fqK/3T`>C?Z;s<D,e<*F`aH
%;[sV_%YtTdZ!TZdT@S7&n/,rj;1g.5c:gF4jS[HUTY[(`QUI#OP@Df-H`SW2g#'L@5C4Gd@>]3L[2:?Y'aM%+VRT,3U(qMM#GP=u
%kbqYhU?"S(klKdF.D92?T2Ldn`eZgB,V#%*3XV$)%nL=!(;%/ref7q)pKLd@]mEqP2\he#4[0ahLPpGQ75.YF'Sq#j^,pMZB.$ED
%2K[$-TnBHhs6j%MT'`.6oC/-9]>iO=)sd6Y=PdK:PQi]mO,fg<(9T[\h7rs4-FP<:EpM,s\-^>2/@a:_k;k[7d)aT?RUY:gcee5J
%BWiseYp^)IZ(>bN&.NYTb@sl3"4r`Sc\e9amGAZ<f@1U.Z28tpm%_PD_.*6`.$jN<bIZQ97`]W"6u0i$la@L8U\jTMMeO^1[>s'$
%H"C^TR?H#ka.9hT9Y>hoMLRkb4hnQ)JHsOIn7"R3GAWfV@RIlB[3W3D$MD*c4fYE`)N%O*k:U1(&%U*UC<b8k7;!B6,\Pj>!4CdN
%eO")&;A>\(E491'/,%J*H?8)SgXgr?ds%=hr8-H]rFi;*n3lTI7?dHCr+g,2=PkSls.^%$?*e[RJ(L>2qdr6*lteDo&Q@kL_36p4
%di6#LS(Q=&F!Cci[X*9-)3bj2hFpF2DV+!1K#j2>5c:t/l3ZpQQ@Z,&r?s"Le5^=&ltPl9Fcj't?/Nm@"8+/P=rH][F*[8Gqq^Z!
%b4@Pd+1-L&p#K*<RAEjIms+>iI777FG88(;O,?qUhdh`(Ggs%U&MqAt)R1\+a35?0VuM0B\F#4S/[k"Ub6AtXF0gb;frgWB&]I_*
%$dM8JjN./L-F)uJ\L.We$17+ho4G7U.qJ\)M!f.0=0j3C^:S];2g"2"OeoN<jkIK%N;1<Z1FFPjHJWF?*Q*WmcTLU02SUBG99<8$
%DapgR+nJJOg+q.VmVH*$R["aP=3M(<9soup@onMN4s1nl&N6P-D/%(LL+[L)C;N<#%JOb)_30"ch1nsc+'s8m6F$V?erbU^AL+er
%[#6%(T_+7gh##B4G2E...D4`adbWT?7h>N'AWYHObE<Zc'?+Lmm=3)0PIFXppUDs;\7tF2lTIM<SW0AK#c(SoJuJQ?_stpgQt&4Z
%UW'#tiogO=51[#?CN8t#5Q%!4*[oEfgs%1l<uK!PF>XF0gI;m@KZ]Qfec4=i@\pb^Y][u_CWl>^D4gfdBPeR=*#+bpm;af'QM*]>
%dG0;E?&`FKa63/S7B>jbXCfZ0[:I.CDgasZmM"\'3APqlOm9d6p;V<+VZ!;@*Z8"B+1a"9SLU^>KQZ,ZechP_c[Fl5X,GlG6bLbo
%V#6IR[ffm!3iYI,_UuI@W`MHGg\t)DJ*32M.+XjmMXB1OY5c;De&O[4DX\a/Z5Q29gQ.d%^Df+!>mFQ_1tMqN\Pur@cL"osZn%^f
%I[mX^jC\t6qkj+ESc_6_[aO=3neTZQG36bV^F(AH@efMG-!/D@B<?L8\o@9=PBKWe\'@)4mpH$uf\ZuL;uT"b)N'AaTb,8,15[pT
%`8#_\:#\=fm'2(Aq.$9ml-qW0$G%0A^FYU;F17D4Ef*3\^OOF$X)"ndqMBQ'S$t8aMgqaT^`(WZGZ<"RiV.g!r@fp.]UfuT0?dQh
%4TG<U`C4_D`UGm;42ubjE[V.:'uLiE.?PHcGE&`h\Fp;+4kU"Ifki%&f<Q(uYS/GJ1T5F`WUqY@8G*Zl9oE+'E^V"(?Zh8!G!ZR?
%pP]'a8PC3V#$G4VLWTQLSK?Y7Ytq`N!l\[dZFmu1`NuF8)aF,9'.-I9HMAB@rq,ObIUN]SPb]@V@_MSL8[4SoGk;/Zc)8Kjqb_.+
%R$rgCMoEa`@Y3&\M)P,+>Meqm#QM/FLEp%n*nH@!%YuG\f%\kYmd5IW-q<kH5&[*eb463K]#C9<T=sjUX6pr^l+/%UmQ133#B0S7
%j-^\1Kk^Bs7`tH`DqmG&Z6kX<L0@ChfA(C@mDEE]$Ys_%;8XLRQhO,sQ$PaEiMT40&3Gd2c.%r"p#>pWI!3NO>K/=G@baOgiWrj-
%\oO:JE1=7[qZYT.n)"5;-A?nE8a8Im:\%Z9Z.;%k+34]PE;uq:X<_]N']7&hH<L7@Yk[50)uoNE`%UNic+>s9+^DF/CQEl3)diW-
%UtG;G_hJ]1`f.,cHK2HWY5#>72-E:-%mi"Mj>V8"Y'[Y=nhtL*2oUVdm'N(07;-YGAaC:]-a%,'iTrY[I=1agNOM.A_NnMQ:D+,f
%d8u?;XBa[h-Yt.u&kYlsXc9Y2GDiWdEYD#\IBu1c:R:r>9B)ZRXr(_Q,;&&_TD_Zh3pi9"PoVk[9H:>2L4=q_Rm",2B8C$Y;Z7g_
%Sh>rXY28;Q3)D)ABG]S+duF_NrFO&a^Tj)\&\](sj3HIu*:1/Y4`fM?h\CKbJQee\0%5/3/2KOT=qRtjrTp.5?-+R-C]RlYMA;&R
%0G)3l8r]sI75f9Y=*Lp).Funi5/Z3IV;l2>QooCC;/Gm/5qd$i=1rJ<[$bs2a:1Nl+W`"gab%5@,rtF;Q,K"1&]r)e>'#C?U)7En
%d<gt!@+#q3OUE8%ERKc;]_Ut3jQ%"N$h9HpmWq;MQJp<fXt1R\2dhd='qEr<Miq<S=g3--j$chTJ&,ia!P+YQB?K%+5IkLLTWo`(
%a+dgLBe*7+BGFU`mBI75-,k%f+*I%-=3Kur>Z!RrDafgrLb5@*+lCZi+9fRk=aD3aH?QJ'Is=^np9@o0cb=25E\Z!34(O<f^IhUL
%)^]mGIJ[YLO),AJacM[Z$NrKS[qHGTEij"iZQe/Rb=AfWhB,*!4&F__#$W(W!Kb=(,M,O%gYKI8=21!BlDX5?J790^O8cUaI^5_A
%>]A*J/1Wr$Zl"m6V&+YqV/DE2mk-e2&DM09OPQFX"00Dq`'8[QA_8a]M)KOR!9%O69;5/OIlDJcm?_,MlbBUOVkpQs`No!<N[t[F
%/?Kf"or4iZFEYO7.C)LHD!M:Fmlf[07n!nhM=+8?!FElkM6?HrIENaKm'o?6,fN4^)7JtL[?>!;s/3p!^2iEca_&<efF;jeCoPbL
%i#=LdiYO\LYjVg"%EU'!9,@=o@n5.#r(nq+lPJ.-c=8/Q/J(9T0fI%:FT.TZ(PnRK#,=G)?4pO\On3.o>I7?2J\q0FdEW#6TnhqT
%"Su//ci/[eH7A<PZH^^605]Dhm^uKRI.R?KpZt"ZjkV:*GOl-i^-(_k)o)*37P`NB>t$oNV`!@Xr/='3#>Z1pZZ=bs;g*!6.OfOX
%m5('Y3bZ#?46eKNY6KllMajQ\3O')[Z$a`$dG%!X\@FtSk:Y`+79D@8a%NN::Z<^n+ssF.ZPL6akiuM^pRMCsUi"B=]9W%_jR\e"
%NgGf94f(kaYtHQuZ=J:#07Mc)lDhUZ*W:]66^l"s]-ghBfHK6&$]8MDqTloH#J46/.+VF4HXbG;Q8Nj<O@`rD@V;<ZC8%Q'X]&L%
%0$.TtK19IMNaMhcGKL4@)7E15kT7hM]nU&EKrdUAY8-/SeNGIVMr+/8n)YY&IFp)*i^>NL&X-6$CLsi[G`/u2IE6-^'Aq[@\';.b
%K@0je.?/p1F0tCO.>)=K9N_==MUC7T7'Y#IESnIh'-H\Rp6oi"T-kBo;]]]h-<W[`D8oC,Ac1/l>Id%_>T(naZ8^T[PGHim5ncf[
%J*kEdQBS&<>?l1@rRS4@Tk!YWa#kRq-HS[jlfcU";/7;38TGuno(uYFo9(V3/U2BP3:e%C,8/RD0kdg/G'^'/dK+;L==$G]^Z!mr
%I:D"jTSonN-2XuHN3q1(2UU1ZbB$,egVq(9e/-&GTDmrJ+d07oAuBd1<F"P?glD7l]VN-FX4StG#3R7]f\jl;2-uG=ZIu,J:Q'U=
%8$BGldQ<5ECEGCEAYR`Gri:>AePRa'k<W9]'Ip)13%I^GPGF@d!_O>8lO%kgW9jGAs7P]7bO1m:s))!a7PBnI6#Pc*@WKsVB\nXt
%YH7d"=s7IX/BsaH5u.8$d1)Cm_kgZ2G"M57RoYh+"FB-QMEeP,[EV$CF2P+M%2G%>a,L]&NY\8`gic8o!\ADeZd=pOmJAu7XC9\E
%8LG.ik"VI#[sVJ`9p/u;^1XRDQo0!#UtFe,Mrmp:'*X7#Bc<@J=]1J+7\WJfYcFNna;q)Cp9%`l`S6)pdF6Z'0mJ]q^/>B"`,V\c
%7P*4KB#,SL2t-RYDi/RnU9\CD>SJD5FK$.jCNC@!Aih.#gI5%N6(E)Z*E$gB9:f_^).p;6o>4uH,#8GbXhFVn55/-.qQ87MLC]e&
%eI!c$00B&I;9ic7%nMS+mmm0siu5$3HfUuo1KN;EG&oanVP@+b]8VYe7:QGU;c"/[76H/N^]FO?I9Qpr=G"l2r;XX?69N#lr[GD`
%i<OS.o.G92ri3B4!\nto>SP-OQ"$b`YVYu+3UNCkrCH9l!>C$QjQ*:oMf8^>iM'Fd+#jNuMWNb%F17st1V:V_rYL>nV/aDkE3!KU
%e^H'A43O2aBfS\0jK.bJ`(cl?PMD!^#>LUHC!r!A=-K1L;XEWW@edkDP%YM;af,6pf714>UN7?#H8#o*B-<*!bFf'3LVcQ[Hlgnh
%ftC*D+c1C:PN)5Dm^.ui7kG9^'<0ZB;2]d]4%UF\h_BQT:I"R+TC$HB)(ER<=;="InAhFK'go+dU_Z"/KGZrAX66,L3$gk/C"nQj
%kh]OYq$UR+PiL"1+h*\g-/G["n%W4V\$e/O21KD/EV*t?Xdg)X7ubiDlJpkW42nNDYX7\XRWD:!mW,9e0:1*V4e'XtM-dT4LMrNU
%r62BJE8M/qq+og$Drua@Qe%5)S&Tb`7#`$'TXNuF1Zodt5OK*/'u[hLfF$bLae.lfEA*QCNFMp9ZPYQ1j%ud=@LuB&`fK<5)MD6P
%]D%ZFn%!f2MpM@tYBPEW1S<pslI(F4]]?#7nVs%</<uF`K-d"(*]BtmjOu87qqbVjjP&45?s>u]g@0)`fIKrU[*KHkU_oK<OCCY$
%MR75Qpr0A]N,kAhKtHI%Pl&f>/&[NG=T8.G(UqUPJ()YlK`5@[KafWi%u?en%hlqOS;Sg#CGGeXgsa5q;(kO^%C-<S-[bS_IhZXW
%PD`^1-Rked<>M!gf(t[J8E_Ei2!p"/1#+V?.IOoS]]1#12g`I]o^nf5O'@892KMo?Eg$49LDr09/bH+nK$pp);sp.MfD#%XY&m(T
%P*E>M/=VT=?"3K9`E=:!(i>2I$SrGk'dMfcFZ*CMG&-pViAKWd5AYeK!Fdg19._>d3\7`D%7IH=;k&dc]2S9fUtF1l^U\,-YAmhZ
%g<Dfn*M#n0>4uMN"VsU]2=Bq1=LbeOjohZo55M4fp_#<1_Md!d2:h7%L5q@ZrQfPFqtfdMOLpp@@^37q+tEnViV%gN"sO=%-6MYi
%(V+GRs4[>_0Y=>7h&?tt#UDZ#&Kt$tW=5&lRrck=@m]=G+X:E/*!eu$lj>iUVm_"sX5/Y/D*PXLkC*oCfXA3i12)RJ1+7b\"sF9r
%o2)D0WRP1^WqP1_fYa]"8O*"0#8T=+[EbC-Y.`E?CTTaih@?42VLJ=o^OXY&SNOUK2!#PKSV;#u6#8Q*hLRK2*>L@pn_l.hBe)'V
%QS+?JpQ[3Y(Z0VXU@l"!+#EcYARe22c<hX+6Qp6rhfemO>K;\/0kPN.0m-[=eQ7_J/c;C]GY*UF759drW+)O=,!V.=3LHFA9]n!_
%3I0L>B!eT&jtWW43u,McgU6+>\d^IkmfaYJ]]j%a8sR]*\9dD,d5)PTGi)6')qHQG:iWmXqR%&E;;bC3_12*8WB#[`LoB<M'ttJa
%,cOCXot+O2559?IbQ!o05V?FBa/]KrIoHd*k"9GD&:.qW&4T6ike2B9E>ZJmpGkk@[KA'$=i*<@E"'8Kk6d"E"[C%fI)EEad8u!4
%96jqF&H4BEbC>Ph9>/$P1tB"A5u=mel8uh)".u>%AB0]Nk3nj&GB^FgFI]kf4SQ>j+RH;D]CS,Aq=aF+5M&@ThKH`o`+,D0V#0r-
%5<<U_62bP5VI+iOF\b,nbk:otV8(+;%f^@+j3'H`VmkK*gP?Fd$M^,J]^X9d*c-P6XdgN)qiiJaH0:`rLc0SOW3Ki.0+9?npSU7J
%o9n;G%mRaHi#(7jp("fZ]"+e_o*[4B1%lUB[XZ`0@DfF>@9`UPp`rbhM6AnkV[m685W\PTiG!5rq;sWM4)3gn7CqHqJU094E`8qR
%JjDQ5-gWngl0.AK_<]27>nu19c-#>[KenK!c8oOT)25r,%m4eQ$M*`@JM^mY#aW#slY)RHS2Em#maP1\4/m2Ql(d._g=jscG=A&F
%h12EQg""f;Tj`g.55S;HTqLP(o?K@k7M.>AYs@!dSK4O?G28gheD&TO>Z;nQ?]Y-O*Hs!ESNa?"_Y@8kF<>br-Pbn">.[OkDSX_Z
%@D_G-Fr.aEjm;'^Oi&ZhT0(5g^9UR[_rHeqLG0ohEn$u0M+</AJ&EX=H]("_0PTmPlDYG_b_iP@2.A\pPQ"SU+e=DV6b8e!MtXj#
%H>5ZnWL3GL3B(9ddVkq/S<cpA4X>OT<+hoo2eT!P3N;"lZ.42qeXslNWolupMsT\j4XWe`OKSU\.=ZQ?[A+NK"E44f:C?,GHZIA\
%N3(fXer9RnhK/E4=>tL(F[<U/7qL;u34>%Z0bJhBcUUnAS@)1C9j7&$a%!g'C"hC<VsHRIf_G2JgUX@\-/&ErCMQ!t3rN1/dA:$]
%ga5gbFPXKK*ZHj4-]3"Y<$2&7"+;hFCXO4e/H6.QQ+qJ`pRl;^>^CH2rb,(6gdM9kjEfdl_[AQf]0<Lc/FWUtRdp0Ph@lZ^*#^oP
%okX<D(L`*qMsApGdNXb0G8FS<cc[UT,sC$8IrK=%\G!\sF[$o\5(2CQSS*:TDi4BTrbi$b_1fR,'^7kjLG\8LAP]qPfpVQ5jR9pY
%rLH21g*bM',nIK,T04N>q:e9#Q97"e\ej80UqLN&S2=;B>9n.^aHO5EMq,6g\K-\gp'g'%M,usR(O*r]rf`k#ab(6BrMmBmaiQ(0
%-=5Ed?RFg`En+M]TLdZ@8(k?Rh7ABI8PD30H0_#B%8LhSX6f<>khaqFZ(#p&2mgKec2I&#$f@7kei$$bm#BlQ>.h.\dcIds8m/Q$
%:0AhqIHUQdFNnhVluG=>S*XINcd>9R7s961fpYQAA9>9]438TB9\0/:gPeSUCDL`e=k?KXk.l\ojFg0oFN\U4G=P4GQJ5^VUn_/G
%fcmko<?t\cIJ'tnS+gamb.VZ_RbQr:CQDFIlC>MsCYHB!lDnLX.QQI.3Gl$k\k"Harn_:V'^9eMb6'm*%,L(`V!II&6_nM9D2UId
%bA[Bi2-RCprMl1X.dC#=eukr1Ffh1@''Q3k\)?XtrGnr2]_D(a3o4"7V?e8-l[kbad1:7&GBWF._*7MgSrh.QrmJ_r/Q4=k\6u!m
%?*k%S]2#!IoYuS_r?a1\;jYS9fDat=^P,T(l3G@YL9bZ:%+;sl"[oqM4n?.0q6;Tpb*bJp=]84oHc*gN_lF[_dp=GIgIF\QbY7,\
%a_=E0XK2?lX7nF7HFnnkl1f-"]o*SRI>?a9qi'9;>A;E\-McopFO%Ql<\8!TEOEGu=k@A-s+hP`KlE[\%1dbT,s]&AAMRQgrQfkP
%D`q-slQ=P-lnM&_0/jo')l@p&hBl==qrd">2D)RB:0oBqbj#R97o&ch:79X3M"VX"3equD'B]J^Ou<:0O5K;MSWI`]r,isKECI'h
%/f-N!qtI(V(JB001e@Ft4`X]-4>2r^?iRtH[@8PFmQP^[rfPaUl8NI(pF4QP:PmfFc'N?TdrbTCk$YTEgY]$qphBDbLO,!(IaH^5
%UZb1ClW-J[4.S0^?bbAGjn;CRjCc4&VjZl372O-'YBig'Y$tu*f\(UIY%eq2X[1?OA6%6[UuUeFEr<Md(L1rn`X7"aq_dX%qMh3G
%d$`E:q57Q07:4OIZtkF!_qVqJVjt6e-#\L-EOe2Y8^jK9qSt7-)`r-0Ls"jg',j>6Xrgqtk_tp8k:Mi1Y3``=D>Ws:Eb1e^gKlk@
%h#GscZO?Rdq^B$u5_Nuq^ZoVsGS_B+%:)+kMJdo+nDK;pPLZu\=%Y#K,KI"QXB=4um_\,8P$KG0Cb/h9@!Lda0f+i[1Uh<#1-+m)
%mYfY=.YhK\HF[*@"/P6"lJE(h`dg,+@+u3)I2ZX?P:US9PTT\cO(M]JP@_%GU%HkLYYIr#hKe7bK;6Afi>8m;/nc:dosm".Hc@_)
%'/,W7YE2]6aiOqObU_5^]WIUq^*!BYk.R'%4MTMrpN;dF*9i2r[48behq*@cC!QSL:.]dJ?O<Nt3`jV@(9".pG)F%E`.YS9>7R9+
%^%j7$)^eo<-a/UF<gB\f#+m)A+ePca[e]\=)gLa6F=+G#[PfS/.;*GBep_oE(:iF:=`qj;8TTs2X(Ak=HF)]'li(k@LDiY3Ccc4J
%p<aQM7p];D6i?8Lb;[[J.;LQ&(L>JX>pHD:b2RI;Rhp9,b1FH:2K)iP)nHQtL%]kBYu?,@CO_eWi/\\h[Adb@WH)>2r6+0F`U]2b
%c[>YkZ7p.%,2MLIUnZ_8ZA33rC_#%;iX06EpBK6l)4(?r*rOJf\=I-NP>4\^G=,F>>b'7o)]N>dkC+Q:^%HTukK=12>^WX^09OY6
%I>_.8D`oYhje!Gg^%jLij4l+e(jBNMipYanO8IPa,/)0(Vd:Q[XHq^`=ZNDC.sF.O%)Ukall4C@5:X)g\t7rT4Rh+=O4JcUnZ81_
%`0\U!CZU_gb4GT.3L:f`kASH<IMj^8jRDCe.-d?d=UopkLUZE;ceU21rZN/^mNg6*==0rili$#85MdOQ"&hRVFRWGp-FhD*DPMs`
%0gGPp,:hC''@3#m]`)SnG;,rTK4"Q@Ndgfi5KImmIWThbdtPrbc^Z+RGuN>-g+PZo05nBgVJGm,.g'CK,$e!p_Y/KSb1$%^qKePQ
%r,`s@V1sG<p:&D-Z)(=sneq7`GK]9II?Je^_gCIj\+D/rliWm4GJWoINLI-:UhRSn_\@C]q5*1qhqFdncc^R`?6WZpBt*rpI`F,8
%pS)L[PZN#"%8*q"e9?GO8LRV:f%oqejX9J0^Ad8%IJ7Wi6[%!QH1c<#q<F8ekIu2d`LA6qo$(1?p6/k:/`inF,qiT2\[]"*;-^U&
%OLVZ?rVM&T]8NkT*Qenr+>gnNHqJ@f]qn@[\'$"5Er/W-d-p(V7Q<iL>F*k<<R8NT)lB]QS@Y^L=tI@4noOOhVFYpoK6#6P>D[GZ
%MjolpSZ=YrD[0Sph"GK,ma(b!\U?LF/g$5H@6>%7^UFko.&/F%*L--2k;jDd/uO#de(<.eYAB.5ap"j,_[Qj8^co%mAh0JBQ?HoA
%AG),!g"I\BYPQ7s8'%_Mb4>c'@d6)b5:I\k*up7mFhm1#%a!TYdVWcdTD?cBMKJHUai_eN:Kb6;HDXqj-/=CNU6M/4V764C6b6Fd
%g1IMao%',#:V,ChM'(oWm:!M4N=HZEnXdH8qrFp9rUTdq5FsEli<!.B:PLC]r,r$>pNN*"E&U^"?X)\P^A*t?Ie_.5n([ES':YWO
%ekk80Vk_!qRX6!.k]8T/Q10.>/T<44UE\O:GMfSpkKfD.ZXAj4S2L?Bq<u1d@CVAs=71QPBDWj^Wh@$.QPl#1(t2M8[<?c/r6Ib0
%jZJDcrVA-_G%bU_?cp9'm>#86qVD%-XBGPqRQ7Z5=8J9)WUo5olgK.9Mo<fl%g/AEE1ZhuO\YlOqmq,I6TK7/%+;Q!=f.c;g%he3
%^Mrn*O.A@4<mR)^Mh,uXmsAS(I''BU^&-`]IJ'g]X?j9P_p)r`I8%3qn&3X2Tten*A\LN._TOsiKV;YNlK*5LS+4J73K4g\H"Q0@
%#t`m,5Q,\68bTqi5[4(giSnPIE,$bA>oS1/]XJD(8/o.dd7DjmbQBqs2Ri=l3VgE+?Ms8G0mc]ccu\JV[T:`Cs8Gf@RoGj)5u<>U
%+'p&V=4,o1B^J\R85H4gHUofHd:P(9''nk9++5(5pVeUlprbmJC#"XhStFjuXJ57G8V\\3:G'<Cn4O3E\TW,aLWQAo[PrEW>u>@^
%BS/BH>%"DM&=;!YOm[1tgfornh"#BYVgN,Neb@?$EbnJEPZc<bq5]es]JHjk<8ZB:O1q#Zl@WFkIh_2S>V7hn8Onj59dUKZqQ@!l
%i\-2X(gHUQ3T>l^`O:oJL3UhRs6p1u3brMV#o5Ekn?!P((q\brE*#-Vrmmfm6U/@]cV[7-m!a5opT`2Fs(7f$]>F=p-WepG^AR0O
%^5#;3gV&Y=f5mbVF\+X$7<7/#?p@q<#qV@fHrHV:q5$qeSj.;9p;4a\7`B^T^[9>0FrIA;b0k`-oA0tK+PL@!)i-7sa5WA5S,"`$
%3>Uj3?bbiaM>oV_g?*DSc9g%hj5r5VGh[kq4XLrrf\O!rF\FhYksT@+UcV-A:@;na;pn1V9tY9&eG@XoRgS#LZ^3TJdha*C;m_].
%>pYcs?t[Y`0^@A[:2R;A9lJ[5*LnB=.d8#Rj2!ZMs64f/&"Gb-s+ngG"nDN$QQH"V6S1\e]^5K&WI6k<]:H-$d\.&GSPPo24O=UG
%(6kHigAPY[r7.:;*ZI<-cq+n?:Kt>Eo%X'82U`,5[(lAYR!q$6kjLSSBS5YB]!e:RlT>O=p9r-:[sVr7pn,66l6D1.,H%tVE(0*:
%>N$@m!tYqcda\Hm?E^0jm%_HhXe"haLk+l5PPXZ]QfhEJjNQUV,:fB*I:7p-'j#k`dm#tmC:EppoGH#mV`0]Z8)uICnrNhLH[5>G
%+.llIjeRbuN1JUB`h_&")t(B)fiPerYGJ.p^COl)"?AQ.<O#a7h+.H5Ngk']1.qu;5B6DXk-5`Q?hN9fr]$,eQS855MQ4A%bE/mA
%Sb:Mj2tp%9o@3Pn)c*Ng;B\Zm.\$G6N^n9+g9#ct4`GUnHRJ78C$k9lfDRDi-C48,4ZrVA7^5E`0'^MYFAAF8k?i_K^&HQ"m;(tf
%=bS@MJa5@#nZ45lE]$oOffEp)_4&RDX"Wk0]quJr5P!^XaqLSo4oM[]Xd_ZCbsu0af\\3oFarGIq7HS?LG,0EAD6V2fk[0bFNnFZ
%>VluQ1R]usECe^2!r$iPfHU@`$]i>DgFp:<1iZrZ^KN8"lM2rJWom0?STrA2AoL8p!=>A-!:s`FO'JsKl'g.NeZ4"o?OAkQB<Ao>
%qnJ<+%mWtZ`+'m2?+W.^9@ZLi13`an-7^.)YiNla[8O9be7F&$hKnq"T83)o';Wf7Ge0TX>>5SJ/T@ejl\5ql2qIp#oXJnXA[:SV
%q3H<^ms+<9DenIXgeU'+_*-G!4\C]V1dSLNCYHG'UG)K>8_(FJM]0mcNf9UbooUmi]H>`YqM4Xqi6-WF,D""?lSp!tW8FQh4%<Sa
%o;!8KKaBh2:>\3KRJbnpT8'*UMDP-aZp4S2T2,5D.X[qu?Ih?OkK-R;DEhq%JPf9Ki@Wdul)Ih,a'NN#Y@09$\tj[!hd&c/kIV*f
%*ij?9pKJ&;^9KAj]]8_AKr)8]s5:.H]F[J1FXH_c'N2]_&,rKq/e$#0s%Z_mJ+7jnhD)aUO<sEIroQQI3JBfY']>=thgP6/f?HKt
%=M[2)UqilOj"(H!I.!TPeLdCMlBN.[Bup(3_0Fk??[hAEYGAsF:uJNa8^?m&cWF3(l,RdlmpTnfP2fW8r-Kj];oc/YfhgUja03/L
%OfH(#O/&8NHhFm8@J0.@:Ha,%hJpk]/b#.RbL*%E*ATm<An%t[FZ$5F>7SjULTf<S'l2`WPa2_-/l=Y]Laq7G7egsX%/d1N8E4/'
%_@W.LA8tHL@8NZs>P&P(5acE.N37I['X1L6:GE8F5=X2eHQjUR)1+rT'OEN;!^B:B,HlmpQ`.[U5K<HH@cYRY72Vi>d.[U?aA8O>
%-rPuR3LH-KP74M#Go[=m<8A&7^VsO;kL2HQ]sA]]l<^4]ZOZ.6lBXf-=0Jm<*Mp#VWNdMObtBPgJ`@HDOb#a_kg)d3SLS^\j90$s
%_@C7uN@K(D\112Se]b8]"[RmV2IIYbMC5Cj_Cp5/.$+1,0h>8U`ZdWtb_f8l=B,&^EODF9L`e-o+c:a8!4@na'XJq)V$`,X&8-e)
%5>)U1i\8=YP:0!O@mi/k<d4[$7`AJ;Vc)I,e4#O0QmBDka<1in+G-O('r+/g"4V#JP6k4sAdigfYSa1M^^_YU#M"U^bHT0XT3;59
%"k77U85T_nVb.8*^VZ.4<=8]D>Y;LgeM]3KFlc)PRD*-m4".+UIR8F`0^`[To[8P!Lr;'6!Ko](o$o6"';i<N@54P^WUf'hO=5gE
%(_SQjJr2l%AU9ScGSQ3+kZ`^s'VnSYR;.$^d?k0$6R3s6;8fjOkVA:<3uU+]%tH)'TiXnhVF0LHk%l<i'+kao&d,["lC0SUWQs^f
%EE_uj06<='MGj\<T-*hl,0[56E@5?lMI%9"Z@ltOMeNr8]DW.`fE-&iZY<*Imu.YK;^?*Or/(qSBQ-(.Y*;<k^c9;$REh*4;s5Tj
%+@tjG/Q!gO][VOU3Des#&YoLo7CE?QV%@*b-+IAK2&`G_KH$5';;`d"":^P'&KG[6?g&*]Vck9%#YIUr6KJYqKE=rMJ[Ceu=lAQ^
%`F_E)j],.`eplb2J,gBq8S[ZlI)=nPp%b%?8tH3q*kMFYblN\1?KO<L'8s1/(/^^ined4a!]&"WW;1fu:CCNNN7N[_`lWaA9J2%;
%TOefMC$&1=bh!_B5=gW*J`(ZU)Y"-7)*jQ`21ItdM8(&c:gi5E_uL(A)b(Gt8FUB;8Y`?=/6=:fXOpg:WaSM1#Ne68p.4#7n/sf'
%]&/@1W/S:kLe$_oATgo0P6)+G<sC?4!(NA!54YZ#=R-3E6qT?.aLYdGV&?Tqafn;[Hl%CaZK:24V`g\=`^52"XAj/)O>>g9)6)`c
%l"lRmZkssdFKBp&"`);De^^8QBV&.pd=C35877NXNIIh'ns&=<'Egct.tZW3Sn\Z<PH\(53hMQ;&(t)#/X"VONtdb'SqCER0rY1$
%=_tK`k(-[0&0>U&1=!u4>sp"K+B_+,)!0Teph.l>=Ngs[PY=\B<D%E*F:qe`VqN`^J/HmJZ9s*N81G"G6:a_jE_,I.O$KI['rdtP
%GI<R%DkNX]SYbP&,&T6,2M%stMco1`.MBgjk#5+Z!fn(=W+MQYFf&"EM,h#.bI7XT9<lrg9N::P*;WW`QjDT;)PCA=l6)Oq@@Bid
%``m'aj"tn@eCo!s(m2s@*'gU-j?F<rBr#`7Y'DX"X\epd3Wqs*HfTI(^aMTfa5[Is5\`8e'sBZu/Q.;]hZ1YM+8_a0(o3Ku4au;j
%OY\dT+Jh]3JV`GiR+Q*qbVZRu1R6B)$.5!$)9EmIi3h[BT%.pCD;]/e8@:ot,aN,'Ca@Ap5"`gpV^%moa2g-'Q",dEYM4lSceI(P
%W;fa]7,nPt0k9NLCZR8!,HW5[PY+Ep-6d(_,]ON_!E2.:WM6aOil(q!(hs:%ed>]6=Xr'b5tR$NVY+)f5SToEPYiZm;(-!'EljQ5
%#:YM1!(m=c!j^N94.@`SNjVN5Xp%WCe,m3L-j:AXXF.UPYJ&MCNLq2fXD7Hm;J_(C"6+hK%OOqa.aG!ti>tF"k+ZBoDtlHT!sKYk
%JS?Aa4j%i+CD]IZ7q2;I86$s"9,rP+3A;[a5oM,2\kiLF^7D$!<:;"iNN_H`PVTHH[H3k=:9<R2m"ig-#e,J%k!r,Y!F%lN@HJ68
%1PERG2*_37<9]9:OI]q2J^'=?nhS1L_b>@E/6D;Fi[_3).rQri8gghUEZcr-8AAP_7<tQY"NK_3/.`^U=j'&gkPn$X-B+3Q%VdXr
%F#ZcGcmJJ.p+mg6AA0N=MZb3a_M8\W+OO8RX<\YF,6c*FDZZ)0pa$&)#@tnEZn(BkR3d9W'HBM1b(GS,Z/.N#H[3ss1HRET<OOPg
%BIMpq2m^pI_A>]Ch$3-!A[.&mi;jd/CS6%TnP>qq)Jfa(g1mFLlLZhc^hkhmE?@R]T9'=c'@p8(&S,?igQe0m+=]USNrH8X4HLFq
%bAddq?ocMPF@[6!_b+!D3=CGQWGq0&L6OG!Z2)TdOYX?Hm]g13V4`Gl61P0sp_C'*B#*3q+r<e/M<TO>=W't+i/`Z($8^_0fQK^M
%e777\^4:JEaGO8&NhSrrU\<\`1*+*67:kg^]/:q.G-etu=Q3J;7#e[3dmjecj@`<HOW\CiVZ8TO=\)elD$+TVV"?ds*dIhH`JBoO
%)*!S_ji5l>&Fgj!jNOkJM(5L1(gT%#?,q4a[8FU?0&dA6!L4`F@1*g:KLEBgq*g?r7X4^Fe;N*mOk*63OEl%c1SAG]lu41,Hslth
%bB;O,DTbqr'pV1d"Qd;X73tg>M3iqA:aCX?;_'>jlZ"r#'bplZoLY%@.)[@D`M-fBQ]2De\BU7K37:di19PM]iGWCV&31qrT[Jbh
%P*3b$$EY1^+c4ckDI(Do;"K_%,ioPJ,'BAl&@Zif1dV7-;]Ihb!]@tpS/2fO=:f-LKc)+H1a-<tB&E[?Q5`h*8DkSD<oR:R<)it;
%bq-%I6r+`>NWsI7VD2Or-md/Dei2*&,pWN?!Cbfi'?.a9L>UdD(c%'_%f9+M#Bm/V>[Ldi-q=Q/%J?UBe,X_[:kT13PUcPh6Il_q
%k%6o'atq_oJkl#`)LG=a[h0N>5&I8qCn-3d9k1nDa,FGP;7Q]Ah[39#Fta<AZDshXC1(1Hcr<@TB\,g\N.;G')c-IC?/.hS?u,*G
%<BJBmY_NAs>EC>oB3pPi>#5Ns1>ODkTk2eOeZS$hJMDCOT2S8^C8$qKqPd;.9-]CT!J%F-!!J641`s7EO9i@pQMUgNZiFQr!>/Y*
%+9DQm!0iBRiBf2DesJ+b7:-%C+:oY=XLnRcbR]Nu$XjXkW*D#+hB[_U6L;<QKbX=,f-n^H[-\L%N1HgrO'fG@"*uB:l?3H,/?pnS
%**NMV8`V>#1o-JX0&_(ib8D:Pn/-18"%HNXQR#+pSI3mhW?NQGPa`C9T#9P^dfTlV7;`W]23]mP+Xdkb8XZQ^'^nj3Q32fDLOk<M
%;kV8N(kocZY;:WdnA+WL43<j)9MpOSg_pW/R>)U9$XE+AHY/Yt&A[eG+d*EBQ^1*U%*9N0Mc`78nlM<E56`,;=&red\.n3.AK?Ue
%Ng/0Db*\$":D`Ea!q@'\$NWgaM8[Q*7'R!9&+cl#'JQ_kk/%O]7*Qq8-DBS80Qdt@Y6**pGEQOJ(L/'_!*P\qUl7V+'oO3:VX/$\
%?4MO_AR1G<Jf(:L+m>1W7kuWO(X=mgfeQas0Sr\gPUr,QD0-?uh*=.37V$C'8SCPD7eT8E%>a@$es9-3b"37FU^P<gO\Hs):R"V;
%KKC")g9:m@BY#jo,d8PWJJAB8ge9Jq1^J2j\D0M@W\Z[Y[nF9s0p@f`JBSLUE/h@gO@s3,*XEb#TSRH:ph(^C6_fU-#GTSl*Ls5P
%?@chFM[/`Q82B9PK1.1@#t$$Liin?We@9.]:CsK,gt^o=#A_8(,XUV65e](mQ!TRYX^"b9='4pHEF;'+%S,2D`8Y\9eud(JMC_W'
%S4&PMV&JYH+`n9SK':?4DRW1Q;)a:tXM>7]"4$7CP5-ZfWc7%;*+B0.J13(l+:B=N'S;o.dR8<21NLcYLQ`-IF0Y@fl3j#,'k01e
%brDMWca&)K$)aH+a<TV'>(m+8-H\.QGdJhLLKN5N5aK*b(e2Tn0&e&'HWERc\fhOI,\'F8*2PrQ%I2S[C;SbXd9t<?b]T@[@Q+6k
%-=^8u-Ako['u5^U+;r9*'@_P%'JeJbOg:GH858s%p9j!/$?msL2iA*7MH%uL`XiinfJil,ffG,#A9'q,J;'hBOUer)BLLQ"6SAg)
%%>5U?LuOt%B4OiD.0MF,+n8N&S7DpMCi;+-92/u_Dj!,?8&J_R+)B&BS4G#8hBmud]6"%KI\e2>NJc5a(mQ+h<'Z8G1kN+<>#J$L
%?gA(c><`,8"nBGAAg9JPj:)2X>acSR)?dKBYiXtuVK?]hW!>SgRFEk9!>l@QRUdHM0NbV7:(AJl5*-a$,[fr;U.@1n7^1\.O<uZ>
%C.LY5BTe'[^d1i-A.&Ynm?#tPGpT6V1CAN[0po7Q7"Z'UR&3>Lbiggl88:\t5p^37d;U0%R:1]l+RQ%g>2kBhf[1rPfX(WaWHl?'
%^9E75T[F-<*+Q8k-gVh9ZMm7F1SP,G9?'N"H/7t$7ZNXL.RE8q^q3GrM9htFMh_>W'f)=s.Ln$1@YEDWH=qj6TgC?T/-[eh+d5<;
%/8U:JA^=@hjTKXd3WfI$CD:s00e.8:6:=L@iZJOb/;Kng<1D(P7O'&:OG\]B':9STq8=ClA7FIHQcp-Y;2r5D&J3H?S<:`*RK4rE
%#W]PtnYh'OnM+NI1<VHS2^9N/6*lm"f01c]ak6BM/3TSNBT-?n@mHNt'Acjp(f#C-p^enj_BXI:7MdeC7^+SKEc&+44@VS4ml?2B
%*H2Ajk`%i!gdtW'5SGdNN`Vc+hEKSi<*MblJI'P&,0mku06EdB:LHJ(o7/OV!a5[b#\N^bl^VK,D:X=(dE9NR[Zq%*2$K6:&F!F&
%<M2f@@uP`c9bte%L6.?S5SDNMm1Ft28ApBWcI$X)5u-'&#(%&LQ:?*58C23/1SBA_fO5s/%&m[Jh?49T/`IJi7KPN6fiF3>JjqHe
%O]A',pn[;aX\9k/28IW`1a%BD(W7ImKCJA/[r!n>ft&<U88-1]"T;I=',n2",KgYS5O;1-lD!q#)8K!P_eqG`/''),+D;W^"QX+Q
%8>'R&J-U\g;No17"p'8,f&q4WP0NdtXSiu'.\T`#!$nrZ5[.LjMobA:DQH"_7^KfcLiP2.6oZ=\VpA8B&0>qcG+T[@o;AH*-f\J[
%J8k5kP1X`C"_1a]=UGLE)0ErVLisYGcH++:Q4[,G8h)H*'a%[sN=6;e:N?Y_RE9'FJ^$qHl3%sIN<;F&,&h_CAr)9+#;H+<+#Unk
%,gK.[1(Gr;ihO.g,dd.%Ji"]dq[3tr%5^p\hZ-ng9_IX<VWAtBrLaYOQKtreY4[G\n8,Oq5jD=a;*lrdd5VAaKec$HeF,G9KTbOG
%+sdslH<SX.MF>BrjG\aA0R>gU0GP^mc=`6WkZ%`)[Wl\&bf&*SVa5Da%;0(<N'h/Q55g\'KLSiJ)"M&\)8=IjBVOuXS)Yh#,m"<:
%durkSPil-c")Y<=36`o^Md!-@&K4!.lk;dKE*sHSppiqka_S^XB/H\*'U_=.ZJp(G2pJ?`M:T[cVum"'LhC@3(F6tn&G.jN#S)\\
%3$WR^9kFt!Cs@[fG2\CYO0lT2g`:&g7NdX'Ae5`n.%c6q3B4(7`Kh+.r*7NY5U3_Uotk@2'G*D5[^q$AQ8>A\8Dt]1"l!k@#_W0a
%lRgcUM3F9d]o"LTc)M=k6te[pT9;HTEZk'6igmnV/F6L"C"FK3rJ/XTjQV=kA_<VH'lpN4O6C"m6)%*g=>.Z:1srp.5uF:<DC:il
%G"<fbk?aI;(S`j!jQd.?Q9a)Z7/9/]pW.>&NO>Y[9iIi^k#qGF8O`WfZgnfB4Op;KKa,IRPD4[5:ZVAML6*r/RnQV*g+CMlB'OA%
%d]t#La4Qd^[Si=,-`il3(R:P%M=-L6EtOLe>uOt&p6d%jJP%[k[?&Tf?pKYUCQ*XK2[WcWA/UkT5\*gu5X</"4DbD`0&D\Y60\`c
%&q)*bB^8)33[6LUd!UUc83#OkTGE3X&cmF/.llV);Dj7dW*\7NQBIl_GpE#E'/ItjG;HN7`WHp[JW`AsSeB*1&,EkA/f@4b+K,?M
%^GSV2<+s32k"u5i(mQ;L";1rCNeU8qYa).!mPT]/ggmL'd\:>[nq7`cr6(041EdWL(fLncfsYO)\d3qSVbNth=#6lr6r+u-%P3EA
%"GDM,:DaFIG4Q[WjKlU7PO[d5/.+HJLu=4=kR_Hl2G&2RL0]X(qiiH/fH77&Dl3##8"FJ%PeF+C-*Bi45h#QNPE]%Q?9Ek6+J08X
%<7[`Q<G7'+OK3GcOgAP[!HUeKR<ccBR**W5KBB!YAHs]]7A>c%9^p1kPZic-CQVJgM9Q;=443YXPKYCs9F#?S!1q^%Hj6A]QUp^.
%9PCrs'.*"[CP4L4clFKTq@d>r@UK^^bOh7jkpXu=&CN30N<HNi#hnPs,$q`K2]5\_i$\`.-]ML[6L,YUN$H#l&:K5o+l9K>)+j;7
%.[.#tH,1'C6#c-7Aop::4u\a.K5i-N")r\Lr0g#7g]5_A(o/.'])f9=5bQsO&F$\eCk'?F(7-dg`@D:47S^s-'e%K2.n!79Q!-^@
%_;h)$Tu?O4FU[8;Jr&H-:R&AJmgh[:TsFiiN(-%j`WKlY)_d6#&keT/4sp`?IPiZbO=8O73ZtR>"%'>7%\XJ,m:rp.btMN.=bIXJ
%Y[qS$:8+Y57MHG,Ln8rY9aW5]=em_Zm8;*'G*>e1"3BT%H,+6>E']fO=N^^uZ6Ebta&G#ppfpg":,3&k"KCnT66B;K'Nos9Ji4)B
%D?Ng/PR^cO/>MUhE82_8F7,abdD8(4j`ZEN:WHRbLrSK"#]RpP+!/XW^b\0U,iZgl0AuFKR87J46dMo)q64rG[noJ7((K-bk`.uK
%Nlr[Dba/KCP#aj39T4nFaaO>25.mu49n`D*&-8nk#Td]2qXbqu/?k+!%K_;>lEclcTqdL:F+c?u<u0G!5+O]eP46\(V@S'"i+"$e
%TW+8TKll_pf0s/XbHM+9/TlB,VL2Li-;3i/#Lrf8-YD9/ZB57:iCnLB"HF0:^K1CU3S+O<`C"I)V7J2RW&5]Bg+6<r4r`jB[.i.l
%Q*l^p7*"5)m0:Te["ma^,q*h"Ul++$kpR<D:2h+m_a*@"We@`R(qC6>H<C@p#@+%\>)X>u@=l^(C]bi.8faBNnD,)"[A<>+:FmL?
%8n/bmO>tMl4)@47A:0_0%Pc#D>`]1=VKjeTV"U@cU#sNE!g,_J:PZgC3?XMfSJL@PDdNL+c<p`=i*Hh*3J];0&GP^.J3-I=T:=!e
%(t'Iu:N/eH;R87d+:8F<!='3=4*LLR"$N<,0OT13^_S3V>CG%Z"/PeM#T(D8iPm0kVh=9=\5-Al3?!\A6F!Kk5+DuA?uNA:F.R%5
%1&sJr'BSFCY2ZC18=n5g%<O0KH8EF>::jP#1:)H4a@ja?klK)rI5%m1lNaNCI?.p#B&S[Z=8HM^:Z`Y+"Am]`P/3t>%PVkIW%Brj
%\-E/[bq]C!.N^_ddDV-?AaVl>li@9?'a^BB7jQXGAd$5AdX:%"U:pI35qVB7qam%;9FM,IW"os(OT:Hu_)iZ[AUni1m5g)@0clN#
%fW3`B*T__I=ffXce=drs!EbrP=E,=\dNY+ki3k2u%4-h'+u0GT&8E4qP(f^q&0[KqRV`2`-D3/X7Y)+$f1;ZTBW6QE/oJI@(,LYc
%4!@Y$3XH)W?A!3>\A-=d&o?jM^VIWE#TS2q_J;ElFpfTNgVWsE<4ITiKH&&O9sTGT1I3brf`>Lb(=L#-*p-F["eOPR@h?jSOD6bg
%O+?>50`]<(PuF_?9Le"uTC.rb'"1X#]p;cOB2tKLdRl?kHNJ3nhAO192B\U`"U$404@4\<#\Q!ZhB]E5EOXoIN3::L/_(17p;d?O
%2P3L;EhInu`\<#?&u'@u)-s9GKF7;=\1*rS+c+[2ga73%9o2#<"_?m;-ulE4.OU5Y<EA$hRO_:I3<=#ioD,C!!s2r/]>7%.d0/Z`
%9Q2P?<A+B]69A!EQlsV-Lt*)lgu;l;%C6NE;Q\/JLtW0SQoS:o_G*p4NXQC@bL1&8+oR3m0S4llFI>H*7,7qNSYlRC#T</(@Z;KR
%Q*S;c<BpqEHj)]N[mr^^5J2?g4(co;5R/q-#bqb^1^HP1Z"Orh>H@Cl_=[mW'G!L3Fa46=dfjuteJoAd!4N85)mCq"7W\Z^DCH>;
%Okti`nHq<Fi5@:1as>)BU&YUeWfnp+>?dV\&oJOfL\[*\A*XCNdo[YYVk4I9Ui;DdO2aG>E*91\[gZ`F+JA>6\D&4'EtSJi]f`h)
%#kpkN!:=MW5]##?>th/Q@LQDXF9Ds_S;.NifmM]i-^el[U4%guCnHM3T3f]-&;Y,qqC2IUX[4Q&r.@?*r/3QZ_"kJP+`CEmI%!J)
%$)fm<k)`T[42QTbUUsrBo)l.Se.IM'K&Pi9gc+Qj-"eFIG[hb!*<K\^&EXD6b0*ABd"O*&clQ_Mi3&m*YS;^RDgTF_1D+Q$a5)Dn
%D\0-'7-/ZE"$iju\rBqN!Qf#]<i5I#&=JMs(=Q7&95f&SM0s959u*Nf#[JHX#j!<>8MG+i477s7LtbZ0A3-rdas2akkA5CibY<_Y
%#594uhGq)XaY\Nn<\$XMFkkLQpNt:Ia0aJ&#i9W5&0;'0E"hI:/V?HWMd0']9M[mK;4pi0]&_4SH4'.$Q:F;9qk$0_'AhA/Hhf8Q
%nQNY\if"DB5hVgp"Wf\EJl5W>)W<u[*nt4AcN-AQ(];JmNbaE;1#nsbo`6JN`",I9Cjfu4Lc@;^-'658Cf\bM5C>Z-/Ri&P`DI0V
%^i[EQ@5^u9MuiAR%llR1->Cl]*(O+`8>n@:>pRufX/aNhOdPBfA*k/CRae-%'!paM#;U)7>1=3Kjq6E!A.["TJX]3V<=7^Q)'h+E
%lPr_CAq1Ad/B3g<4A/A?Q`XX,8BI<"E3C&b#8A8d67'khVcNEo9d/pM<,R.&4:.j#dX`Tm:r^Kp)"KDu+Q[Z6+iUR9+OTA\(r>>[
%]\)3j,>1,W,Q&#qbc4;G"LeF4ME\i0$(QPIKRtiqiI$$M`?]O$'>rhXi#^I8lS]>-#j@^WA7Gn*D^:9f"a=`Ii&_323h$l5dL3]t
%86#aoK4'>g,i\eI5fCJc'#:O^J<@#HLD4=?_U2PJ%8e-6Y8QCd;`qHCd\J8M)M%,u1Yei7G[sf?F?nGHE&g7S*!C;@)i>h0'eX!I
%`KM9IoPt:h-6jmr.7g@oa-B9taL-S-#gH20,F=M8;9'N5,$fGN!$2(0YfIdq)B'RA2qaSQHogs*/KbR',IPGqjD3CYg8U,h_[-O_
%j)Wpb"(IK1&A5G3O5SZ$Aq^sRo(1[:#%?rNXI/6p;J[[$ZN?I-AKp-\9&e;\)K[W+m5sHf21;#`FC<YNS=orh":C>e@jJQ=Zb6DC
%YsiJa^t(D/c>n5HYRD">>B"d<C`eK/N`hHB\>[l;I1$*C]5>\5R99R:JOF-!$F`#u6s&T2&*s>84ZOF^,7q%\F0^,)^Tf>!FI<;,
%@sp2"Ee)4WW@^IEQ]u(&1l.A>hdB&(+mE=9*(W[,&D@*r;G80o#Sp2E!j.$c59PE4qA3ZM0#3IS6:RZbCMd>[o/Rqr2qAS^Rk>P2
%ipeq[*5]m^_WV>Z`Ggtd+D"utQp``cd(mH9]Y[+IBm<4Q!UBr?3-FKZl2jP&_bD,\P6DLC8*D4l,E.03$DgH2;rl^_-ajKU[E<\Z
%gT\1mC\;Z#SiR-U_]VX[g2bErE`Y9H.3!i\kXl%5(j5`_]g\P<["+6lLY$C\`=9QT4#MV5P)hMu9bafBkT]*_K)$:(#_B0V##%jX
%L+[ihg0SiOO<_"_"p#H`V]^M.Jis,pBYFrB"%MefRn@Y4!q-#_7QQ>8\N4,O"sT@njuQ`\JKZ2/,&nOZL`@;u-BX'9%,=Dd_YaDp
%p\EYQ][hkU@AYYn5iAoNWJg9Z$<F][H*JDKSLA%'h$7R50!]F.\7unf3>gVo(;Q)Rb`jpiIUYYHR#`nec)&k\`h3>4G_%>Fa%Hfm
%9_:3Y%u*V)FG:cE_^<_n&`fA'90!\p;e_"Y];cA#0T$#;"_%M+E!UE8D?<i%d8_K[04B'/%0p/]ib<TXL*L;`+uC4c4Ug+6&R?cU
%6cb%7QKV-`,X_S$f\O>p^kq[XMJF$Dd$h*hV5A;X?&nA.6[S`.#_VWV1CKU]+\TA4&MN8X47EH-\4KBU"#n&=6P*rsW_eHW?ttk7
%Qp_6BG$`2?_g!Ud0^uj>:;4.XM%[-CO9]Y1b&fqX2Gal3juO)\?@tr0d7l)N`(6I-P2n%p@qdP\:9-iD+"Kl0)$tq.eHO(%B;4Lh
%0B(q>cra*Sb]/A7F=8<Q?XT//M,KXIp]L2c7JN<q-D^`G%Pj&ii5.d15X=&N2p3EJB8D,4q>B;.3&$uhM*fR$pl,A@%SpV=,R#9`
%pG8k(&egpWA=8XX30E-a65U;W!53+#@f"L\nE?!%@<_ms7>,9'6T2%)FX#:N^);!2mqU$gR@RDDdJV5iXc4"sTcSJ!l,+>DknKg9
%VlWuXOGb<oWCT&5;r99WO^QhDm[,XnLnddoo/\"N%f$qe1Vm&nL,Lg*c.$CcIB?@'_D.C=\B[Z8"7,KcFpAVi@#Y3O+qd*c;1t2I
%MTT\F0YfChc=TuENTs&hLa-bA^HOH+gkKBQZk^04Z%TM,7Et@t3XGk0l&,Y>L;JoFT$Co7NJ#/(^ZaSn0cgM[aBS^2e:VKII6,RQ
%9uo&`S,2_I_D>,&JrkBS^6?c0LntRXAPNAeY<p9iiZKRKFi6=kb*J!Q$X`b34ZQNb0kB1JnnJ_3=?.bUbH/W;^LoGqD[+,/2c.G5
%X$1+UDm8Ei0dH15JW5<h9jP>^6?mYV"sYHum".WD-n5_T4JF>_itMWt5r;\6@&W5iapRH%\R[_==aVtA[1u;kOus<=P15ek7*]cm
%9VoRiN+oU6Wb,Y@N<;FD2^2k#dF[[tE)n%9/)OLK&A5Caof@sFI#SHg)_=G)VFSlrp,t*r*!-sU<=B'uqoBQ#B;Y?,_3G\t6-QrY
%!(*_N(5_\)nm2.tiJ-;4.g+?3!(/qZ"(7i2,[CjZi3<M_0B7o1VD2j15Z-/Hl6PCc)`^>5[V]U[blqt=P&_#__e;,I&47!6M0-Z+
%*0Fa11@2k?FkHin8\rU$IrN<-2)Xktd8fLNgi167lYieU:CQ*)g\UY]W*"Q@c*uKBrq6g$9Dqf.NONf8mIjb%h,&+G]5DmY+HX]U
%W2s7:;O.:^!9N=0Jc~>
%AI9_PrivateDataEnd
