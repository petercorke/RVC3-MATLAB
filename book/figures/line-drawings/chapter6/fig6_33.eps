%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig6_pose_graph_optedge copy.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 2/11/2022
%%BoundingBox: 0 0 281 122
%%HiResBoundingBox: 0 0 281 122
%%CropBox: 0 0 281 122
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-02-11T13:37:31-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>112</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FVK6urWztZru7mS3tbdGluLiVgkccaAs7u7EKqqoqSemKqoIYAg1B3BHQjFXYq7FXYq7FXYqo3Ty&#xA;iGRbdkF2yObdZPslwNqgEErWlaYqwCX8xNQ1LTpLe2sJbSa4tTcR3bBwv1eKJvrsi8SGjaGVfSTe&#xA;vJlO4xVQH5i69HpMImgS2uZzZC0dke4mMVzFNIDJEGSssotSEUNSrgHocVTDyb5s13U9WgXUprNI&#xA;9QsLS6t7VGZJKukrSmKMhy1GSj1f4aDucVQF/wCbPMNszwySx3Wo2+t+hb2FtIVmMcpcQxzJQUhd&#xA;dwxr49sVR2lee9bvvMGlac6WUEDpINTkMh5PN6s8McdqjMHO9tyJ4nataU3VWX/5kahpHmDVNP1K&#xA;3tZIbQO1tHbSP9Y4rbNcozq60KsE4MwpxYjqN8VUX/My9gltIr6awgjM7R3d5EJLlJEHpgfV41dJ&#xA;CC7yR+oOS80O2+Kpx5X84XmpLrl3frBHa2LNJaW0DCS4W3TmOUwVmozmI8V2Pt0xVJYPzM1hYri4&#xA;lt7e6g+rpc231RJOJYXMMM9uszuUneNblfjUKvLbsaKr9Q88+a4PMsOjrFZx3Re3iltyk0kQa4Dv&#xA;V7kFOA/u0U8DyblQbYqgR+Y+s3tnbL6UUur29/bp6OnyuIpWm9eIQThwTHvHVgaihDdtlWQX/mJL&#xA;jyTa6nrEEHB72CG+TlJ6CiO+EMj9VZgAhYK3U7EHpiqCuPzK1RL91g0l7myFy9lA6rIks1w8Jmt4&#xA;0RgOOyj1C1ONemxxVSP5oXQ1DTDws5NOvoYiYlaZbkzM8UcqRc1CO0byt8A6hT8QO2KqGneddLiG&#xA;jzXj/W7q3tdRlkdzPLMk6PERCnHknP05SHJB4KNyorVVqw/M7VFGnDVrjTLZp5j9d9BjctEjuvpQ&#xA;8Ipa8yrH94OSg7EA4q9NxV2KuxV2KuxV2KuxV2Ksb/MK11678tPa6Gsxvp7qzR3t5RDJHbm6j+su&#xA;rFkBpBz2rvirz3zl5yhg8+alMnmHV7e98rRQ3R0OysZ5bH6kVLXMl6imk/qLUrJVRGAvGrV5KvXN&#xA;J1Sw1bS7PVdPlE9hfwx3NrMAQHilUOjUIBFVPQ4qisVdirsVSvUNZdbg6fpsQu9ToC6E0igVujzu&#xA;K8f8lR8TdhSpCq/TNGS0le7uZTeanMOM144oQta+nElSI4weij5sWO+KpiVU9QDtTfwOKtemleXE&#xA;V23pvtWn68VbAAFBsB0GKuIBpUVpuMVUha2olWYQp6yAqsnEcgGNSAaV3PXFUNa6TDDd6lcMfVGp&#xA;OjyRsBxASFYePvXhX6cVRYt4BwpGg9MUjoo+Ef5PhirUNvbwlzDEkZlYvJwULyc7Fmp1O3XFUs0r&#xA;y1BYTetJeXOoSLH6EBvGjf0ouQbgvBI61KrVnq2w3xVNiqk1IBO2/wAumKoTSNMj03TYLFXMqwA0&#xA;kYAElmLE0HTdsVRYRAOIUBa1oBtWta/fireKoE6VGdcGrFz6q2xtFj7cWkEhb/hRiqNKqTUgE0Ir&#xA;7HriqlFZ2cSosUEcax19NVRVC1NTxoNsVVsVdirsVdirsVdirsVdirsVeDeXbHzJ5ysPPt3pFm1s&#xA;PO2qz2C+ZZXhMEej2SiwBjiWT12l4xzcBwC1avLbFXonm14PJv5c2+maVBJLFEtlodhDDcm0uP8A&#xA;SZI7KExTLHLSRTIGrx7E4qzUCgArWnc9cVcSAKnYDqcVSM6heayTFpEhg06tJdWABL+K2gYFW/4y&#xA;kFfDl2VTPT9Os9PthbWkfpxglmNSzO7fad3arOzd2Y1OKonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK7tYLu1mtLhedvcRtFMlSOSOCrCoIIqD2xVI9CtvI3l&#xA;TTJNM0mWz0zTrUPcyWwnURwoSA70dzwTl16Cp8TirH9b1HRvMOtadenzDozeVPL1zDqd08V2jTfW&#xA;lWWGBJiGMSRerKjqxYEsvGnfFWUL508nNZPfLrunNZRuIpLoXcBiWRgSqF+fEMQCQK4ql8d5Y+YV&#xA;+sXt9bLonMpFYx3EUgnK0NbmSNmUijA+kppQ/HWvEKsoThwXhThQcePSnalMVbxV2KuxV2KuxV2K&#xA;se85ecrPypbWd7fwvJYXE4tppot2iZlZlbh+0vwGu9fnmfoOz5aoyjA+oC/e4uq1QwgGQ9JNJtpW&#xA;r6Zq1lHfabcx3dpJ9mWM1Fe4PcEdwdxmLmwTxS4ZgxkG/HkjMXE2GLfmN+ZemeUbMxLxudZmUm1s&#xA;wdl8JJqGqp+Ldu5Gz7K7InqpXyxjmf0Dz+5w9dr44BXOfd+tkXlq8u73y5pV5eGt3c2dvNcEAL+8&#xA;kiVn2Gw+I5r9ZjjDNOMfpEiB7rcrBIyxxJ5kBMsx212KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjfnL&#xA;8yPI/ky2E/mXWLfTyw5RW7NzuJB4xwIGlYe4WmKvN/NX/OQutW/nOLyx5S8n3mv0+qXE+oxcnjaz&#xA;uo0mEsKRK9QY5Nmd1APUYqiLLSP+ckrv8zPrl7qljZ+R7LUZDHZD0lkubASME2jjlk5mOho8i74q&#xA;hPKf/OOOs6drs2q+YPPWo6+k9veWclpOJCDFeQvAeUks8xJUScq8RviqN8pf84s/l15bh1SOK51K&#xA;9Gs2D6ZfC5mh4+jK8cjemIooyrc4VINTTFUfpf8AzjZ+WGmaDrWhWsF2LDX1t01FWuGLEWkwni4N&#xA;T4fjG+Kuh/5xr/LGHytc+WI4bsaVd3cV/Mv1hi5mhRo0o9Nhxc7Yqgb7/nFr8ubryla+VlutTt9N&#xA;tL2bUUaKaD1WmnjSJubPA4KhYxTb6cVQOs/84uaXc+XNB0PSvM2oaXFoAuvq9wqq8kjXc/rO0nAw&#xA;iq/ZXjTFVvmb8j/zSki0SPyx+Yt3pyaRpsOnyRs9zGtzLE8jtcSBJnXk3qBd1NABvtiq/wA2eXP+&#xA;cn4Ndik8q+YrF9FW3tIGhnEMkrSxwIlxM4mthu83N/hk32+QVReo+b/+ciLT8x/0dB5Us7jyXcaj&#xA;FbwamaPMlm8gRp2MNyePFeTfFHX2xVboP59+Zrrz8vlXV/It/pdpNdXENvrMxmSMwQK7iYxyQJsU&#xA;Tls/fFVXyV/zlH+XHmu5ntoYdQ0+a0tbi+uWu4Y/TSC1iMsz84pJdlVT2riqfRfnf5A1jy3r2peV&#xA;tXh1O70bTbnUmtuEsbhbeMsCySrE3HlQYq8Uk/5yb8uee/I15onma2XRfMSiOa1nj5NZTSRupIUk&#xA;l4WZCwAckf5XbNr2JqRh1UZSNROx+P7XB7RwnJhIHPmlXlrzbrvl66+uaLeNAZAOaijxSL25Iaq3&#xA;sfuz0TVaPDqY1McQ6fsLyuHUZMMriaQF/f3moXk17ezNcXdwxeaZzVmY5kYsUccRGIqIapzMiSTZ&#xA;L648nXdnceWdMFrcxXIhtYIpGhdZFDpGoIJUncEZ5Vr4SjmnxAi5Hnt1e20sgccaN7BOcw29JNG8&#xA;7eU9b1jU9G0rVILzVNGcR6laxkl4mqVoaihowKtxrQ7HfFU7xV2KuxV2KuxV2KuxV2KuxVKvNPmn&#xA;Q/K2h3Wua3cfVdNs1Dzy8WcgFggoiBmNWYDp3xV4rc/ml+YX5t+Wrtfymhk0OS11BbS7vb8Khezl&#xA;iLCeOajpG6OpEkac3AKsDirJNF/5x48vXenaHL+YMx82eYNHhkh+vStKqSpJM0yJMC5eb0mdgpc7&#xA;g7jFXqtnZ2ljaQ2dnBHbWluixW9vEoSOONBRURVoFUDYAYqrYq7FXYq7FXYq7FXYq7FXYq7FXYql&#xA;t35Z8uXZuDdaXaTNdQyW9y7wRs0kMwpJG7EVKv8AtDvirx385PIHlLyl+XXmNvJfl02mua9bpYs1&#xA;hFMY/QaeNphJQ+jEvAN4VzI0+lnmsQq+6wCfc1Zc0YfU+R7X8uvMc1fVWK2p/vyQGv8AyL55uMXs&#xA;zqpc+GPvP6rcCfbGEcrPw/XTKvLeh3mjXMdrJrKycwWOnca7fzLVuS/MDOi7M0GTSzEDmBv+Cvu3&#xA;sfJ1Os1Uc0TIY6/pMqzonVJ35T0vzbf6kq+Wkufri05T2zNFwB7vKCoQfM5h67NghD99w8Pcd/s6&#xA;uRpseWUv3d35PpPyponnGz0OeDzHrS3t1LEViKoVEFVIqZkMMsnzqp8D3zzjtHPp8k/3MOAe/n8O&#xA;j1mkx5Yx/eS4j+OvV4Ro/mrzRp35XR/mbp/l/wAvadY+WppYNJKJexzXllLcrbSDmtwD8cjs1ZzJ&#xA;zk+LgGUM2uct9M6ddm90+1vDG0JuYY5jE32k9RQ3E+4rTFURirsVdirsVdiqX695g0jQdOfUdVuF&#xA;trVNuRqSzHoqKN2Y+AzI02lyZ58GMXJqzZo448UjQeY3P/ORuipcFbbSLiW3BoJXkSNiPHgA/wDx&#xA;LOkh7J5CPVOIPuv9TqJdtwvaJpT1n/nJXy5avo9vp+j6lf3Wq3K200cMXJrZWIBcKnqGZ96pGo+K&#xA;h3HfTdodkZtLvMXHvHL9jsNLrseb6efcg/If5H+cj5t1bzN+ZHmNtce+iuNOGlR72s9jKSOMyMAq&#xA;IdnWKMDi1Dy6jNY5j2ew0+w06zhsbC2itLK3UJBbQIscaKP2VRQFA+WKq+KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVKfNmuXOg+XL/AFi20241iayiMq6dacfWlp1C8iOg3NKmnQE0GKvhH8zvz513&#xA;zreO1tpdloFtyJH1SMG7cdvWuiFZiP8AJVczcXaOoxx4YzkB7/xXwceekxSNmIJWfl5ozwWUmq3F&#xA;Tc3uyFt2EQPWp3+Nt/uzsfZvRGGM5pfVP7v2/qdB2vqBKQxx+mP3/sZrd2V5ZzejeQSW01A3pTI0&#xA;bcWFVPFgDQjpnRwyRmLiQR5OplAxNEU+lfyQvILn8vrNY0VJLaWaCcoAvJw/IE06ng675517RYzH&#xA;VyvkQCPx77er7JkDgHlat+dfmY+W/wArfMWpI3G5No1rZ0+0Z7qkEfEdSQ0nL6M0bsmN6P8AlNru&#xA;o+VPKvlTzOtnaeWfL0dtJd6dZTS3Emo3NutV+sNJFbrFF6n7x4158j+0KYqyj83dak0vyTcCOyh1&#xA;J9Tnt9JGnXDyRrP+kZVtSgaL4q0l5bEbA74qzGONI41jQURAFUdaACg64quxV2KuxV2Kvmr88PMV&#xA;zqfnWew5n6npQWCGPtzZQ8r08Sx4/IDPRfZzSRx6YT/inuf0PJ9rZzPMY9IvPM37rEVpWp3ulajb&#xA;6jYyGK7tZBJC48V7HxB6EdxlWbDHLAwkLjJnjyGEhIcw+xdMvkv9NtL5BxS7hjnVetBIgcD8c8kz&#xA;YzCZif4SR8nucc+KIl3hE5WzdirsVdirsVdirsVdirsVdirsVdirsVdiqC1nW9I0TTZ9T1e8isNP&#xA;tl5TXM7hEUfM9z0AG57Yq+bvM35ufmD+cGsTeT/ynt5bDQlPDVPMkvKEmNjSpenKGNhWij9647Dc&#xA;Yqlnmj/nDRrEaHLoepSX0CEL5lMvGN+C1d5rVAD1UcBGSTXjud6Txx4pAd5YyNAl6f8AlN+S8OmR&#xA;2+seYIF+sxqpsdLYfDAF+y8g7vtsv7Pffp1Ha/bgI8HBtAbWOvkPL7/dz02g7No+Jl3l3fpPm9I8&#xA;0eT/AC/5msvqurWwl4g+jcL8M0RPdH6j5dD3GaDR6/LppcWM15dD7w7PUaaGUVIJL+XHke+8n/pS&#xA;wa5W60y4lSexkpxkDFSsiyL0qAqbg7+2Zna3aMdXwTrhmAQe7yr7WjQ6Q4OKN3E8k/8AMPlPy15j&#xA;ght9e0y31OC3f1YI7qNZFSSlOShuhoeuadz0yhhjhhjhiXjFEoRF8FUUA3xVhPmXRvMPmPzloNtc&#xA;ad9W8uaBf/pZ9QaaJxdSw25S2jSJT6ilZp3ZuS0+AEGpoFWc4q7FXYq7FXYq+bPzx8t3Wm+cptT9&#xA;M/UdVCyxSgfCJFULIhPjUcvpz0T2c1ccmnEP4obfDo8p2tgMMpl0k86zoHVrkhuZeS21vLdTBWcQ&#xA;QI0srBFLHiiAsdh2yrPnjigZyNRizxYzOQiOZe3/AJUf85Iflvr1hZaHeTny9rFrFHbfU9RYJG7R&#xA;KEpHcfChO3R+LV6DPJM2TjmZH+Ik/N7nHDhiB3B7OCGAINQdwR0Iytm7FXYq7FXYqpwXFvcRCW3l&#xA;SaJiQJI2DKSpKncVGxFMVVMVWxyRyLyjYOtSOSkEVU0I28CKYquxV2KuxV2KuxV5B+Zv/OTHkfyg&#xA;z6ZpLf4k8yFhHHp9k3KJJCaATTqGWtduCcmrsQOuKsC0n8oPzV/N3U4PMH5r30uj6AjCSy8twVik&#xA;4nt6R5ehXu0nKQ9NtsVfRPlvyzoPlrSINH0Kxi0/TrcUjghFBXuzH7Tu3dmJJ74qmeKuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxVi/wCYmreQdP0JV873NvbaVeSrbxtckiszVK8CvxKQATyHQdTTL9PqcmGY&#xA;nA1INeXDHJHhkLDDrj/nHfyxNN6trqd1FbvRlQ+nJsd9nou3hnRQ9q8wG8Yk/F1MuxMd7SLM/J/5&#xA;d+WfKaM2mws93IOMl7OQ8xX+UEBQq+yge+ajX9q5tV9Z9PcOTn6bRY8P0jfvSb8w/wAi/wAuPPge&#xA;bV9NEGqMKDVrMiC5r4swBWSn/Fitmtct5KPyt/5yG/K4mT8v9dXzNoEe40W7pyC1+ysErcQAO8Mq&#xA;sfDFU28v/wDOXGm2t5+ifzE8vXvljVE2lkEckkQP8zQuqToPAAP88VeyeV/P/knzVEJPL2t2mpEr&#xA;yMMMq+so/wAuE0kT/ZKMVT/FXl9fPrvqBK6ncyXV+A8C0tYoYUWcRRwSlw3Av6RllQU49KmuKoe5&#xA;g86WWgx6cHuLKexsZ7iS6SWOGL1/Xmae4mYFpGQKqmNAtG5/FSmyrJPKs3mW581313qjXi20lui2&#xA;9oY+FlGtEYOHLfHK5LfZXYVDfs4qlGg2fnDS/MNuL9bw6bLd3L26W1ZYvTlnkVYpkHGOJV5+uZGq&#xA;SPhU12xV6XirsVQmq6xpOkWb3uq3sGn2cf27m6lSGMfN3KjFXjfnL/nLP8vNIkNj5cjuPNOrMeEM&#xA;VmpS3L9lMzirV/4rRsVYjJ5c/wCckvzgoNfuB5H8oz/asUV45pIz2aEMJ5DQ7iV0XuBir1v8tPyJ&#xA;/L78v0SbS7L63rAFH1i84y3FSKH09gsQ3/YA26k4q9CxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KvJPzR1r6j5/023h8nN5uvpdIujbwBll4o0gilj9ORhFaLJ6i+pcMj81Hpgdwqz/AMkadcad5S0u&#xA;yuLEaZNDAofTVuGvFtq1PoLO4BdY68V7ACgJAriqeYq7FXYqluveWfLvmGz+pa7pltqdrvSK6iSU&#xA;KT3XmDxPuN8VePeZv+cQPyz1KU3OhzXvl28B5R/VpTNCGrWvpzcn+XGRcVSL/lU3/OTvlL/lFPPi&#xA;a3Zx7Jb6gzcyOwWO6W6jUfKUYqv/AOVnf85W6B8Ot+QbfVok6yWKNJIwA8bWa4Xf/jHiqC1D/nJK&#xA;+eWKTzZ+Ut6k9qaCWYOxQchzos9qlKFRsT1xVMP+hyNK/wCpN1X/AIJP+acVaP8AzmHFL8Fj5F1S&#xA;5m6mMuF28fhjkP4YqtP/ADkF+emr7eXvyrurfl9iW9S6ljrQdX9OzXx/axVYdO/5zI81njcXmn+U&#xA;bST7SI0KtTxDRC8nB9uYxVE6Z/ziJb6jdpqHn/zdqPmO8G7IrMg91M07TyMp9uOKvWPLv5UeRvK9&#xA;i1v5X0yHR7kgcdRhUSXYINRymm9SR18VY8SNsVTqw1eZboabqqLb6g1fq8iV9G5VRUtCTuGA3aM/&#xA;EP8AKX4sVTXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXkdv5a1n8yLiTzrY+YLzytp9/Atjp&#xA;Y0vgLm5sLed3jnuZZA/EyM7tEqAcFbcsSQFXomnR3ukJpOilbzVohA6XGt3Dws6tAF4G53jZmm5G&#xA;hRDuN6dcVTjFXYq7FXYq7FXYq7FXYq7FWOea/wAxfI/lKW0h8yazbaZNemltHMx5MAaFiFBKoD+0&#xA;1F98VRujebfLOuXd1a6NqVvqMtkkUl0bVxNGguAWirIlY6sqk05Vpv0IxVNsVdirsVQ9/p9nqFs1&#xA;tdxiSJiCNyrKw3VkZaMrKdwymoxVK4tQvNIkW11eQzWTFUtdXNBuxosd0BQI5OwcfC3T4TQFVPMV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdir5b85eWtZ/K+CXSvLX5sXVrcxKZ/Lnkp7T61PJ60hEVu&#xA;hDyV5vVVrFSvbqcVeneSbbU7v84NV1XWtNkttTtPL+m2DXSQFYJJpQLm8Yz8VRm9QxxqFJ2Q9KYq&#xA;9WxV2KuxV2KuxV2KuxV2KuxV4P8AnL588gLrstrPY2omtFWx1nznc6U2pLYgEyCxtmEMsZuf3pej&#xA;sEStSHb4cVV/L3nnyVo/5S6vdeSdBvW8s280dlbXnM2VzqNzfsIJJoJCvqmRZZVXnQU/Z2SmKvbb&#xA;WH0LaKHkzekipydzI54ilWdviY+JPXFWJ+Udb/S/nHzZ+5ni/REtrpkj/WmntJJEja4LQwlUEThb&#xA;lRJ4mg/ZqVWYYq7FVskccsbRSqHjcFXRgCrKRQgg9QcVSmzsdR0u6jt7Wt1o8hIETt+9te44Mx/e&#xA;Q9uJPJe1V2VVCXPn7QLS8ns7t2t7m3a4WRH47C2iWctsdg8Tck8cVSzTPzKs2luYNRglilt2uJJS&#xA;qALBHFE04imJc/vRGjVC+HaoxVqz/MqW7u7e2h0ed5DdSWl2kTxSlHS29firckHMEhWBpSjb1GKp&#xA;hrnmu/stTvdPgsZCsGnG9W9IVo43JcAyDmvwD096b4qlx/NbS10gXi2V1c3JeCGC3hj3uZJ1dqwb&#xA;lin7mTcjem1ag4qyHVvM9npl7ZWMsFxNeagkr2kEKB2cwmMOn2hQgS8qn4aAknFWNal+ZIdtObS7&#xA;S5Zpr2OEW0qxp9ahuYbpbd43q/CN57evI0IUVpQ7qr9R/NK0h0k3Vrp9zNctbJIg4r6K3MkBuRbM&#xA;5ZW5LEhdiq0496kDFWQal5nh07RF1W6tJ4Q7rEttKYY3DO/BebPIIkU9as/47Yql0/5hafBqT2T2&#xA;dwwt7IX1/PGEeO3DKHWNnVijMQf2WI6UriqrL+YPl9dKvNSiZ5YrS4FqF+GMyu3Di0bSsiemfUB9&#xA;RiFpU1piqjP+YdjBfQ2jWNzIxsZNRvJIQkyW8UaO6hnjZkYv6ZVeLdaYqnmh6umracl8kXpJITxX&#xA;1YZth0POB5Y/ubFV8ui6PNqMWpzWFvJqUC8Ib14kadF3+FZSOYHxHYHFUZirsVdirsVdirsVdirs&#xA;VdirsVUjaWphkgMMZhm5GWIqOLl935LSh5V3r1xVjvnbyNB5n0vTdOS9k0qPTb+11CJrZIzU2jFk&#xA;jCuCgFaMNjQgbHpiqncXmtaR5g1jUZRqGpaItvYRwWMEKStHM0jpM8CgJLIFRkklNWPZaleOKqP5&#xA;U6Bqek+WJbjV4jBrOuX13rOpQEgmOW9lLpE1CRWKHghoe2KsxxV2KuxV2KpZdeWdBuria4uLKOSa&#xA;4kt5ppCDVpLQ1gY7/sfq2O2Kqc3lHy5OkyS2Ssk809xOOTjnLcxGGZmo2/KNiPbtuBiqxPJfliOA&#xA;QRWCRwiVZwiM6gSJF6AYcWHWIcW/mHWuKonU/L2j6nKst7b+rIsbwhgzoTHKKMrcCvIfPp1GKoS6&#xA;8leXbhUBt3h9NIoozbzTQkRwI8aIPTdduErKfEHfoMVTI6XYG6tboxD17GN4rVwWHBJQodaA0NfT&#xA;Xr4YqlMfkPyslgLFbRvRV45Ef15/WQwqY4uE/P1VEaEqoDUAqO5xVVi8leWIpZZEsVpLEYGhLO0I&#xA;QwrbtwiLGNC0MaoxVQSopiqIuPLWjz6ZHpkkcn1OIsyKk86PVgwasqOsh5B2rVt64qgE/L7ykgKL&#xA;YkQGIwm1Esvo8SnplvT58eZT4S9OVO+Koq78oeW7qb15LFEnESwLNCzwSLEgoqK8TIygDbY9MVQs&#xA;X5f+VYino2rwxxrxWGOedIyaseZVXALj1Go533+WKpno+haVo0EsOnQeik0hmmLO8jvIwALO8jO7&#xA;GgHU4q//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-02-11T13:37:31-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-02-11T13:37:31-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2.000000</stDim:w>
            <stDim:h>4.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:77A75751678BEC11832FC73D79298F35</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:77A75751678BEC11832FC73D79298F35</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:77A75751678BEC11832FC73D79298F35</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:77A75751678BEC11832FC73D79298F35</stEvt:instanceID>
                  <stEvt:when>2022-02-11T13:37:31-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -122 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 122 li
281 122 li
281 0 li
cp
clp
206.406 67.4531 mo
194.465 59.9531 li
184.035 69.4375 li
184.559 55.3481 li
171.129 51.0591 li
183.594 44.4688 li
180.594 30.688 li
192.535 38.188 li
202.965 28.7031 li
202.441 42.793 li
215.871 47.0859 li
203.41 53.6758 li
206.406 67.4531 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0588235 .4 .972549 rgb
f
73.73 81.4023 mo
73.73 81.3828 73.7148 81.3359 73.6841 81.2617 cv
73.6372 81.2461 li
73.605 81.2617 li
73.5938 81.2617 73.5781 81.2617 73.5591 81.2617 cv
73.5352 81.2617 73.52 81.2617 73.5122 81.2617 cv
73.5 81.2617 73.4878 81.2617 73.48 81.2617 cv
73.457 81.2617 73.4409 81.2617 73.4341 81.2617 cv
73.3242 81.3398 li
73.2148 81.3555 li
73.1519 81.3711 li
72.9492 81.6367 li
72.8091 81.7305 li
72.6211 82.0742 li
72.5122 82.1367 li
72.4878 82.2852 72.4341 82.4023 72.3398 82.4961 cv
72.293 82.5742 li
72.3872 82.5234 72.4839 82.4961 72.5898 82.4961 cv
72.6841 82.4492 li
72.7148 82.3555 li
72.8872 82.3555 li
72.98 82.2148 li
73.0591 82.2148 li
73.1841 82.2617 li
73.2461 82.0898 li
73.3242 82.0898 li
73.3242 81.9492 li
73.48 81.918 li
73.5269 81.8867 li
73.543 81.7773 li
73.6992 81.543 li
73.7188 81.5039 73.73 81.457 73.73 81.4023 cv
73.73 81.4023 li
cp
74.918 84.8555 mo
74.918 84.9492 74.8438 85.0703 74.6992 85.2148 cv
74.6558 85.3398 74.5938 85.4453 74.5122 85.5273 cv
74.4492 85.543 li
74.3091 85.7617 li
74.0898 85.8086 li
73.8711 85.9492 li
73.7461 86.168 li
73.6211 86.1367 li
73.5269 86.1758 73.4531 86.2031 73.4019 86.2148 cv
73.3242 86.3242 li
73.3008 86.3125 73.2661 86.3086 73.2148 86.3086 cv
73.1089 86.3086 73.0122 86.3789 72.918 86.5273 cv
72.7461 86.3867 li
72.7148 86.3867 72.668 86.3867 72.605 86.3867 cv
72.5 86.3867 72.4102 86.3711 72.3398 86.3398 cv
72.1372 86.3398 li
72.043 86.2773 li
71.7378 86.2344 71.5469 86.1211 71.4648 85.9336 cv
71.4648 85.9023 li
71.3242 85.8242 li
71.2461 85.6211 li
71.105 85.5273 li
71.105 85.3555 li
70.9648 84.8242 li
70.9961 84.3867 li
71.043 84.1992 li
71.043 83.9492 li
71.0898 83.7461 li
71.0898 83.668 li
71.168 83.5273 li
71.1519 83.543 li
71.1519 83.4727 71.168 83.3984 71.1992 83.3242 cv
71.1992 83.2617 li
71.168 82.9648 li
71.168 82.832 71.23 82.7109 71.355 82.6055 cv
71.355 82.5977 71.355 82.5742 71.355 82.543 cv
71.355 82.5117 71.3398 82.4492 71.3091 82.3555 cv
71.2852 82.2539 71.2769 82.1797 71.2769 82.1367 cv
71.2769 82.0352 71.3008 81.9297 71.355 81.8242 cv
71.418 81.9297 71.5039 81.9805 71.6211 81.9805 cv
71.668 81.9805 li
71.6758 81.9492 71.707 81.9141 71.7622 81.8711 cv
71.832 81.6758 71.9219 81.5078 72.0269 81.3711 cv
72.0742 81.3086 li
72.0742 81.2773 72.0981 81.1914 72.1519 81.043 cv
72.2461 81.043 li
72.2769 80.9805 li
72.3711 80.9492 li
72.4102 80.8867 72.438 80.8516 72.4492 80.8398 cv
72.457 80.832 72.543 80.7852 72.6992 80.6992 cv
72.73 80.6367 72.7808 80.5859 72.855 80.543 cv
72.8872 80.5234 72.9219 80.5039 72.9648 80.4805 cv
73.0122 80.418 li
73.23 80.3477 73.3628 80.3086 73.418 80.3086 cv
73.4878 80.3086 73.5508 80.3242 73.605 80.3555 cv
73.668 80.3398 li
73.7461 80.3867 li
73.8398 80.4609 73.938 80.5234 74.043 80.5742 cv
74.2461 80.7305 li
74.2461 80.7773 li
74.4219 80.9258 74.5122 81.1289 74.5122 81.3867 cv
74.48 81.5117 li
74.5122 81.9023 li
74.4019 81.9805 li
74.293 82.293 li
74.0591 82.543 li
74.043 82.7305 li
73.793 82.918 73.5591 83.0703 73.3398 83.1836 cv
73.2661 83.2891 73.1558 83.3398 73.0122 83.3398 cv
72.9648 83.3398 li
72.7461 83.4805 li
72.543 83.4805 li
72.2622 83.6055 li
72.043 83.4961 li
72.0269 83.4961 li
72.0039 83.5586 71.9878 83.6602 71.98 83.793 cv
71.8711 83.8555 li
71.8711 83.9961 li
71.793 84.2148 li
71.813 84.4023 71.8242 84.5234 71.8242 84.5742 cv
71.7769 84.6211 li
71.7769 84.7266 71.77 84.8008 71.7622 84.8398 cv
71.7622 84.8516 71.7622 84.8672 71.7622 84.8867 cv
71.7622 84.8984 71.7622 84.9102 71.7622 84.918 cv
71.7622 84.9805 71.793 85.0352 71.855 85.0742 cv
71.875 85.168 71.918 85.2266 71.98 85.2461 cv
72.0591 85.3242 li
72.3242 85.4023 li
72.3242 85.4336 li
72.418 85.4492 li
72.8242 85.4805 li
73.0591 85.4492 li
73.1841 85.3555 li
73.2622 85.3398 li
73.3711 85.1523 li
73.4341 85.1367 li
73.73 85.043 li
73.77 84.9922 73.8242 84.9453 73.8872 84.9023 cv
73.9341 84.8398 li
74.0898 84.8086 74.1758 84.7266 74.1992 84.5898 cv
74.313 84.4766 74.457 84.418 74.6372 84.418 cv
74.6841 84.418 li
74.8398 84.5977 74.918 84.7422 74.918 84.8555 cv
74.918 84.8555 li
cp
.360784 .360784 .360784 rgb
f
79.4731 82.043 mo
79.4258 82.0273 li
79.3711 81.9961 79.3198 81.9453 79.27 81.8711 cv
79.2271 81.8008 79.1841 81.7266 79.145 81.6523 cv
79.0698 81.6328 79.0039 81.582 78.9409 81.4961 cv
78.8789 81.4961 li
78.6602 81.3711 li
78.3789 81.3086 li
78.1128 81.3398 li
77.8481 81.418 li
77.7539 81.3398 li
77.6602 81.3711 li
77.6602 81.418 li
77.5508 81.4492 li
77.4771 81.5742 77.3672 81.6836 77.2231 81.7773 cv
77.1128 81.9805 li
77.02 82.0586 li
76.9409 82.2461 li
76.9102 82.6523 li
76.8008 82.7461 li
76.8008 82.9648 li
76.6758 83.043 li
76.707 83.3242 li
76.5039 83.7305 li
76.457 83.918 li
76.4409 84.2305 li
76.5039 84.3711 li
76.4258 84.4961 li
76.5039 84.5742 li
76.3789 84.793 li
76.4409 84.9023 li
76.4878 85.043 li
76.5508 85.0898 li
76.645 85.0898 li
76.7539 84.9961 li
76.8481 85.0117 li
77.0508 84.9336 li
77.0659 84.8555 li
77.3008 84.7773 li
77.332 84.6992 li
77.4731 84.6211 li
77.4731 84.5898 li
77.77 84.2773 li
77.9102 84.2148 li
77.9878 84.0586 li
78.145 84.043 li
78.332 83.8242 li
78.3008 83.793 li
78.3789 83.7148 li
78.5039 83.4648 li
78.6128 83.3555 li
78.6758 83.0898 li
78.8628 83.0273 li
78.9878 82.8398 li
79.0352 82.8086 li
79.0352 82.5898 li
79.2231 82.4961 li
79.4731 82.043 li
cp
81.2539 84.9805 mo
81.1128 85.4805 li
81.02 85.6211 li
80.895 85.8203 80.77 85.918 80.645 85.918 cv
80.5508 85.918 80.4258 85.8477 80.27 85.7148 cv
80.02 85.3555 li
79.9102 85.1367 li
79.8628 84.9336 li
79.7539 84.5742 li
79.7539 84.043 li
79.7231 83.5898 li
79.7539 83.3242 li
79.7378 83.2617 li
79.4409 83.6836 li
79.395 83.6836 li
79.395 83.7148 li
79.1909 84.043 li
78.8481 84.4023 li
78.5981 84.7461 li
78.332 84.9961 li
78.2578 85.1328 78.1758 85.2461 78.082 85.3398 cv
77.8481 85.4961 li
77.6909 85.6992 li
77.4258 85.7773 li
77.332 85.918 li
77.0659 85.9648 li
76.8481 86.0898 li
76.8159 86.0742 li
76.7852 86.1367 li
76.4102 86.0898 li
75.9731 85.7773 li
75.8481 85.6445 75.77 85.4961 75.7378 85.3398 cv
75.7578 85.332 75.7729 85.3164 75.7852 85.293 cv
75.8052 85.2734 75.8198 85.2578 75.832 85.2461 cv
75.8198 85.2461 75.7729 85.2305 75.6909 85.1992 cv
75.582 84.9492 li
75.645 84.8711 li
75.582 84.7305 li
75.645 84.5586 li
75.6128 84.3398 li
75.707 83.9961 li
75.707 83.6211 li
75.7852 83.5117 li
75.7852 83.2617 li
75.8789 83.1055 li
75.895 82.918 li
75.9258 82.9023 li
75.9258 82.7461 li
76.0352 82.5586 li
76.0659 82.3867 li
76.145 82.2617 li
76.1758 82.1992 li
76.2231 81.9023 li
76.3008 81.6523 li
76.3628 81.5898 li
76.395 81.4336 li
76.5508 81.2617 li
76.5591 81.2305 76.5981 81.1484 76.6602 81.0117 cv
76.957 80.8867 li
77.145 80.6836 li
77.6909 80.5273 li
77.7852 80.5273 77.8521 80.5234 77.895 80.5117 cv
77.9878 80.5586 li
78.0039 80.4648 li
78.2852 80.4336 li
78.3789 80.4805 li
78.4731 80.4648 li
78.5352 80.5273 li
78.77 80.543 li
78.8159 80.4961 li
78.8789 80.543 li
78.9878 80.5586 li
78.9878 80.6367 li
79.0352 80.6836 li
79.2852 80.7305 li
79.457 80.9336 li
79.707 81.1055 li
79.7539 81.2305 li
79.77 81.2461 li
79.8159 81.0742 li
79.895 80.918 li
79.8628 80.6367 li
79.9102 80.1367 li
79.8481 79.9492 li
79.9409 79.8086 li
79.895 79.668 li
79.9258 79.3398 li
79.895 79.043 li
79.7852 78.9648 li
79.957 78.7773 li
79.957 78.6367 li
79.957 78.5039 79.9019 78.3555 79.8008 78.1992 cv
79.8628 78.1992 li
80.0039 77.9961 li
80.1172 77.9766 80.2271 77.9648 80.332 77.9648 cv
80.4341 77.9648 80.5229 77.9922 80.5981 78.043 cv
80.7231 78.0859 80.7852 78.2773 80.7852 78.6211 cv
80.7378 78.6211 li
80.7231 78.668 li
80.832 78.7617 li
80.7539 78.9492 li
80.8628 79.1836 li
80.8008 79.2461 li
80.832 79.3086 80.8481 79.3672 80.8481 79.418 cv
80.8481 79.4727 80.832 79.5352 80.8008 79.6055 cv
80.8628 79.668 li
80.8828 79.6992 80.895 79.7539 80.895 79.8242 cv
80.895 79.918 80.8711 80.0039 80.832 80.0742 cv
80.7891 80.5742 80.7539 80.8828 80.7231 80.9961 cv
80.73 81.0273 80.7378 81.0664 80.7378 81.1055 cv
80.7378 81.1797 80.7231 81.2461 80.6909 81.3086 cv
80.6909 81.3867 li
80.6909 81.4805 80.6758 81.5898 80.645 81.7148 cv
80.6128 82.0742 li
80.5508 82.168 li
80.582 82.2773 li
80.5352 82.4492 li
80.582 82.6055 li
80.4878 82.9805 li
80.5508 83.2617 li
80.52 83.418 li
80.5352 83.6523 li
80.5659 83.7148 80.582 83.7695 80.582 83.8086 cv
80.582 83.8516 80.5742 83.8828 80.5659 83.9023 cv
80.645 83.9805 li
80.5352 84.2148 li
80.645 84.4648 li
80.5981 84.543 li
80.645 84.6211 li
80.5981 84.6836 li
80.7378 84.8242 li
80.9409 84.8398 li
81.2539 84.9805 li
cp
f
88.2461 84.3555 mo
88.1519 84.793 li
88.168 84.9336 li
88.1519 84.9805 li
88.1841 85.0547 88.1992 85.1289 88.1992 85.1992 cv
88.1992 85.2422 88.188 85.2891 88.168 85.3398 cv
88.168 85.3555 li
88.168 85.4492 88.1289 85.8438 88.0591 86.543 cv
88.0269 86.7617 li
88.0269 86.8086 li
87.9961 86.9023 li
88.0122 86.9805 li
87.9648 87.0117 li
87.9341 87.0898 li
87.8872 87.0898 li
87.9019 87.1523 li
87.8711 87.2148 li
87.8711 87.2773 87.8481 87.332 87.8091 87.3867 cv
87.7461 87.5742 li
87.7231 87.668 87.688 87.75 87.6372 87.8242 cv
87.5742 87.9258 87.4731 88.0664 87.3398 88.2461 cv
87.1372 88.4023 li
86.9019 88.5898 li
86.7148 88.668 li
86.5742 88.7773 li
86.48 88.8086 li
86.3242 88.8906 86.145 88.9414 85.9492 88.9648 cv
85.8711 88.9492 li
85.7622 88.9961 li
85.7622 89.0273 li
85.625 89.0586 85.5122 89.0742 85.418 89.0742 cv
84.9492 89.0742 li
84.6519 89.0117 li
84.4019 89.0586 li
84.293 88.9492 li
83.918 88.918 li
83.6841 88.6992 li
83.5122 88.6055 li
83.188 88.4805 83 88.2656 82.9492 87.9648 cv
82.98 87.918 li
82.9492 87.7305 li
83.043 87.5742 83.125 87.4883 83.1992 87.4805 cv
83.27 87.4375 83.3398 87.418 83.4019 87.418 cv
83.4019 87.418 83.4731 87.4258 83.6211 87.4492 cv
83.7661 87.4805 83.918 87.5 84.0742 87.5117 cv
84.0591 87.6836 li
84.1992 87.7773 li
84.1992 87.9336 li
84.105 88.043 li
84.6519 88.2148 li
84.9341 88.1523 li
84.9341 88.2461 li
85.0122 88.2148 li
85.043 88.2148 li
85.0508 88.2148 85.105 88.2227 85.1992 88.2461 cv
85.2148 88.293 li
85.3242 88.2305 li
85.4258 88.1758 85.6211 88.1523 85.9019 88.1523 cv
85.9531 88.1211 85.9961 88.0898 86.0269 88.0586 cv
86.0352 88.0586 86.0591 88.0635 86.0898 88.0742 cv
86.1211 88.0742 86.1411 88.0742 86.1519 88.0742 cv
86.2031 88.0742 86.2539 88.0273 86.3091 87.9336 cv
86.3091 87.9531 86.3242 87.9648 86.355 87.9648 cv
86.3628 87.9648 86.3789 87.9531 86.4019 87.9336 cv
86.4341 87.9219 86.4531 87.918 86.4648 87.918 cv
86.48 87.918 li
86.8711 87.5742 li
87.043 87.3086 li
87.0591 87.1523 li
87.1841 86.9805 li
87.1992 86.8242 li
87.2769 86.6836 li
87.3398 86.3555 li
87.4341 86.0586 li
87.4219 86.0039 87.418 85.9336 87.418 85.8398 cv
87.418 85.6641 87.4409 85.4883 87.4961 85.3086 cv
87.4492 85.1211 li
87.4492 84.5273 li
87.3398 84.3242 li
87.3398 83.9961 li
87.2461 83.7461 li
87.2622 83.3555 li
87.2461 83.293 li
87.168 83.3242 li
87.0898 83.4961 li
86.918 83.6523 li
86.6992 83.9961 li
86.3872 84.2148 li
86.043 84.5742 li
85.855 84.7734 85.6289 84.9453 85.3711 85.0898 cv
85.2622 85.2461 li
85.0742 85.3555 li
84.9019 85.4336 li
84.7461 85.5898 li
84.5591 85.6836 li
84.4961 85.7461 84.4058 85.7891 84.293 85.8086 cv
84.1128 85.9336 83.9102 85.9961 83.6841 85.9961 cv
83.5591 85.9961 li
83.5161 86.0039 83.457 86.0117 83.3872 86.0117 cv
83.3242 86.0117 83.2769 86.0039 83.2461 85.9961 cv
83.0269 85.9805 li
82.7148 85.6836 li
82.48 85.3867 li
82.3872 85.1367 li
82.3091 84.6523 li
82.355 84.3086 li
82.48 83.9023 li
82.4492 83.7617 li
82.5591 83.3867 li
82.668 83.1836 li
82.6992 83.082 82.7148 82.957 82.7148 82.8086 cv
82.98 82.3086 li
83 82.2461 83.0591 82.1797 83.1519 82.1055 cv
83.2769 81.9023 li
83.418 81.7461 li
83.4492 81.6445 83.5161 81.5508 83.6211 81.4648 cv
83.6841 81.4336 83.7231 81.3789 83.7461 81.293 cv
83.7769 81.1992 83.9258 81.1211 84.1992 81.0586 cv
84.1372 81.0586 li
84.1992 81.043 li
84.2188 81.0039 84.2769 80.918 84.3711 80.793 cv
84.5122 80.8242 li
84.6211 80.7461 li
84.7461 80.6445 84.8789 80.5898 85.0269 80.5898 cv
85.1211 80.5898 li
85.418 80.4648 li
85.605 80.5273 li
85.8242 80.5273 li
85.9492 80.5898 li
86.0308 80.6016 86.0981 80.6367 86.1519 80.6992 cv
86.3091 80.8711 li
86.355 80.9023 li
86.3872 80.9492 li
86.4961 81.1055 li
86.5122 81.168 li
86.4648 81.3711 li
86.4961 81.4961 li
86.3398 81.7305 li
85.9961 81.7773 li
85.8091 81.4961 li
85.6372 81.4336 li
85.5591 81.3555 li
85.4341 81.3555 li
85.3911 81.3672 85.3091 81.4023 85.1841 81.4648 cv
85.168 81.5742 li
84.8711 81.5742 li
84.7852 81.6914 84.6992 81.7539 84.605 81.7617 cv
84.563 81.793 84.5161 81.8203 84.4648 81.8398 cv
84.3711 82.0742 li
84.293 82.0898 li
84.2769 82.1992 li
84.105 82.1992 li
83.9492 82.4492 li
83.8242 82.5273 li
83.7769 82.6992 li
83.5898 82.9492 li
83.5591 83.1836 li
83.418 83.3242 li
83.293 83.8555 li
83.1992 83.9492 li
83.1992 84.0742 li
83.0591 84.5273 li
83.0898 84.6836 li
83.0898 84.8242 li
83.1411 84.8984 83.168 84.9805 83.168 85.0742 cv
83.2461 85.0898 li
83.293 85.168 li
83.4258 85.168 83.5161 85.1836 83.5591 85.2148 cv
83.6289 85.1641 83.8242 85.1055 84.1372 85.043 cv
84.188 84.9297 84.2539 84.8477 84.3398 84.793 cv
84.4341 84.7422 84.6128 84.6445 84.8872 84.4961 cv
84.918 84.5117 li
84.918 84.4492 84.9409 84.3867 84.9961 84.3242 cv
85.1089 84.2852 85.1841 84.2539 85.2148 84.2305 cv
85.2769 84.1914 85.313 84.1367 85.3242 84.0742 cv
85.5122 84.0273 li
85.6372 83.918 li
85.9341 83.5117 li
86.0122 83.5586 li
86.02 83.5391 86.1089 83.4297 86.2769 83.2305 cv
86.5591 82.9023 li
86.5898 82.7461 li
86.6841 82.6523 86.793 82.3984 86.918 81.9805 cv
86.8711 81.7305 li
86.7769 81.5586 li
86.8398 81.3711 li
86.7461 81.2461 li
86.7148 81.0742 li
86.6841 80.9492 li
86.8091 80.7461 li
86.9341 80.6758 87.02 80.6367 87.0742 80.6367 cv
87.145 80.6367 87.2461 80.6758 87.3711 80.7461 cv
87.4492 80.9023 li
87.605 81.0273 li
87.6372 81.293 li
87.6558 81.3672 87.6841 81.4766 87.7148 81.6211 cv
87.7539 81.6953 87.7769 81.7773 87.7769 81.8711 cv
87.7769 81.9492 li
87.8091 82.0273 li
87.9341 82.2148 li
87.9019 82.4336 li
87.9648 82.5273 li
87.9961 82.582 88.0122 82.6445 88.0122 82.7148 cv
88.0122 82.7695 88.0039 82.8086 87.9961 82.8398 cv
88.105 82.8711 li
88.0122 83.1836 li
88.0591 83.4023 li
88.0981 83.4883 88.1211 83.5586 88.1211 83.6211 cv
88.1211 83.6836 88.0981 83.7617 88.0591 83.8555 cv
88.1372 83.918 li
88.2461 84.3555 li
cp
f
92.2578 81.4023 mo
92.2578 81.3828 92.2422 81.3359 92.2109 81.2617 cv
92.1641 81.2461 li
92.1328 81.2617 li
92.1211 81.2617 92.105 81.2617 92.0859 81.2617 cv
92.063 81.2617 92.0469 81.2617 92.0391 81.2617 cv
92.0269 81.2617 92.0161 81.2617 92.0078 81.2617 cv
91.9839 81.2617 91.9688 81.2617 91.9609 81.2617 cv
91.8521 81.3398 li
91.7422 81.3555 li
91.6802 81.3711 li
91.4771 81.6367 li
91.3359 81.7305 li
91.1479 82.0742 li
91.0391 82.1367 li
91.0161 82.2852 90.9609 82.4023 90.8672 82.4961 cv
90.8198 82.5742 li
90.9141 82.5234 91.0122 82.4961 91.1172 82.4961 cv
91.2109 82.4492 li
91.2422 82.3555 li
91.4141 82.3555 li
91.5078 82.2148 li
91.5859 82.2148 li
91.7109 82.2617 li
91.7729 82.0898 li
91.8521 82.0898 li
91.8521 81.9492 li
92.0078 81.918 li
92.0552 81.8867 li
92.0698 81.7773 li
92.2271 81.543 li
92.2461 81.5039 92.2578 81.457 92.2578 81.4023 cv
92.2578 81.4023 li
cp
93.4448 84.8555 mo
93.4448 84.9492 93.3711 85.0703 93.2271 85.2148 cv
93.1841 85.3398 93.1211 85.4453 93.0391 85.5273 cv
92.9771 85.543 li
92.8359 85.7617 li
92.6172 85.8086 li
92.3979 85.9492 li
92.2729 86.168 li
92.1479 86.1367 li
92.0552 86.1758 91.98 86.2031 91.9302 86.2148 cv
91.8521 86.3242 li
91.8281 86.3125 91.793 86.3086 91.7422 86.3086 cv
91.6367 86.3086 91.5391 86.3789 91.4448 86.5273 cv
91.2729 86.3867 li
91.2422 86.3867 91.1948 86.3867 91.1328 86.3867 cv
91.0269 86.3867 90.938 86.3711 90.8672 86.3398 cv
90.6641 86.3398 li
90.5698 86.2773 li
90.2661 86.2344 90.0742 86.1211 89.9922 85.9336 cv
89.9922 85.9023 li
89.8521 85.8242 li
89.7729 85.6211 li
89.6328 85.5273 li
89.6328 85.3555 li
89.4922 84.8242 li
89.5229 84.3867 li
89.5698 84.1992 li
89.5698 83.9492 li
89.6172 83.7461 li
89.6172 83.668 li
89.6948 83.5273 li
89.6802 83.543 li
89.6802 83.4727 89.6948 83.3984 89.7271 83.3242 cv
89.7271 83.2617 li
89.6948 82.9648 li
89.6948 82.832 89.7578 82.7109 89.8828 82.6055 cv
89.8828 82.5977 89.8828 82.5742 89.8828 82.543 cv
89.8828 82.5117 89.8672 82.4492 89.8359 82.3555 cv
89.813 82.2539 89.8052 82.1797 89.8052 82.1367 cv
89.8052 82.0352 89.8281 81.9297 89.8828 81.8242 cv
89.9448 81.9297 90.0308 81.9805 90.1479 81.9805 cv
90.1948 81.9805 li
90.2031 81.9492 90.2339 81.9141 90.2891 81.8711 cv
90.3589 81.6758 90.4492 81.5078 90.5552 81.3711 cv
90.6021 81.3086 li
90.6021 81.2773 90.625 81.1914 90.6802 81.043 cv
90.7729 81.043 li
90.8052 80.9805 li
90.8979 80.9492 li
90.938 80.8867 90.9648 80.8516 90.9771 80.8398 cv
90.9839 80.832 91.0698 80.7852 91.2271 80.6992 cv
91.2578 80.6367 91.3091 80.5859 91.3828 80.543 cv
91.4141 80.5234 91.4492 80.5039 91.4922 80.4805 cv
91.5391 80.418 li
91.7578 80.3477 91.8911 80.3086 91.9448 80.3086 cv
92.0161 80.3086 92.0781 80.3242 92.1328 80.3555 cv
92.1948 80.3398 li
92.2729 80.3867 li
92.3672 80.4609 92.4648 80.5234 92.5698 80.5742 cv
92.7729 80.7305 li
92.7729 80.7773 li
92.9492 80.9258 93.0391 81.1289 93.0391 81.3867 cv
93.0078 81.5117 li
93.0391 81.9023 li
92.9302 81.9805 li
92.8198 82.293 li
92.5859 82.543 li
92.5698 82.7305 li
92.3198 82.918 92.0859 83.0703 91.8672 83.1836 cv
91.793 83.2891 91.6841 83.3398 91.5391 83.3398 cv
91.4922 83.3398 li
91.2729 83.4805 li
91.0698 83.4805 li
90.7891 83.6055 li
90.5698 83.4961 li
90.5552 83.4961 li
90.5308 83.5586 90.5161 83.6602 90.5078 83.793 cv
90.3979 83.8555 li
90.3979 83.9961 li
90.3198 84.2148 li
90.3398 84.4023 90.3521 84.5234 90.3521 84.5742 cv
90.3052 84.6211 li
90.3052 84.7266 90.2969 84.8008 90.2891 84.8398 cv
90.2891 84.8516 90.2891 84.8672 90.2891 84.8867 cv
90.2891 84.8984 90.2891 84.9102 90.2891 84.918 cv
90.2891 84.9805 90.3198 85.0352 90.3828 85.0742 cv
90.4019 85.168 90.4448 85.2266 90.5078 85.2461 cv
90.5859 85.3242 li
90.8521 85.4023 li
90.8521 85.4336 li
90.9448 85.4492 li
91.3521 85.4805 li
91.5859 85.4492 li
91.7109 85.3555 li
91.7891 85.3398 li
91.8979 85.1523 li
91.9609 85.1367 li
92.2578 85.043 li
92.2969 84.9922 92.3521 84.9453 92.4141 84.9023 cv
92.4609 84.8398 li
92.6172 84.8086 92.7031 84.7266 92.7271 84.5898 cv
92.8398 84.4766 92.9839 84.418 93.1641 84.418 cv
93.2109 84.418 li
93.3672 84.5977 93.4448 84.7422 93.4448 84.8555 cv
93.4448 84.8555 li
cp
f
104.297 84.9492 mo
104.234 85.0898 li
104.234 85.3203 104.148 85.4961 103.984 85.6211 cv
103.984 85.707 103.957 85.7695 103.906 85.8086 cv
103.844 85.9492 li
103.688 86.0586 li
103.625 86.1836 li
103.141 86.4336 li
102.906 86.4961 li
102.563 86.5273 li
102.375 86.4336 li
102.219 86.4492 li
102.063 86.3398 li
101.938 86.3242 li
101.453 86.0742 li
101.031 85.7148 li
100.895 85.6133 100.703 85.457 100.453 85.2461 cv
100.188 84.8867 li
99.9688 84.6992 li
99.938 84.6211 li
99.8281 84.4805 li
99.7231 84.3555 99.5981 84.2227 99.4531 84.0742 cv
99.25 83.9961 li
99.0161 83.543 li
99.063 83.3711 li
99.1021 83.1133 99.2271 82.9648 99.438 82.9336 cv
99.6719 83.0117 li
99.8589 83.1992 li
100.063 83.3242 li
100.266 83.3242 li
100.313 83.3711 li
100.375 83.3711 100.426 83.3789 100.469 83.3867 cv
100.539 83.3477 100.676 83.3008 100.875 83.2461 cv
100.984 83.2305 li
101.063 83.0742 li
101.344 83.0742 li
101.438 83.0039 101.531 82.9609 101.625 82.9492 cv
101.656 82.9492 li
101.676 82.8984 101.707 82.832 101.75 82.7461 cv
101.969 82.6367 li
102.078 82.543 li
102.25 82.2461 li
102.328 82.2461 li
102.359 82.1641 102.395 82.0508 102.438 81.9023 cv
102.531 81.8242 li
102.453 81.7773 li
102.5 81.5742 li
102.488 81.543 102.445 81.5195 102.375 81.4961 cv
102.234 81.543 li
102.172 81.4492 li
102.063 81.4023 li
102.016 81.3555 li
101.898 81.3359 101.727 81.3203 101.5 81.3086 cv
101.5 81.2617 li
101.438 81.3086 li
101.375 81.2891 101.328 81.2773 101.297 81.2773 cv
101.191 81.2773 101.035 81.3359 100.828 81.4492 cv
100.672 81.4492 li
100.359 81.5547 100.188 81.6328 100.156 81.6836 cv
99.8911 81.7617 li
99.5161 82.0586 li
99.1719 82.4023 li
99.1719 82.4492 li
98.938 82.8555 li
98.8589 83.0742 li
98.813 83.1055 li
98.813 83.1523 li
98.7891 83.207 98.7729 83.2461 98.7661 83.2773 cv
98.688 83.3242 li
98.7031 83.3555 li
98.6719 83.418 li
98.6602 83.4297 98.6563 83.4492 98.6563 83.4805 cv
98.6563 83.5234 98.6719 83.5586 98.7031 83.5898 cv
98.7031 83.7578 98.6641 83.8633 98.5938 83.9023 cv
98.5698 83.9336 98.563 83.9648 98.563 83.9961 cv
98.563 84.0273 98.5659 84.0508 98.5781 84.0586 cv
98.5781 84.1953 98.5508 84.3086 98.5 84.4023 cv
98.457 84.4453 98.4302 84.4727 98.4219 84.4805 cv
98.4531 84.668 li
98.4219 84.9023 li
98.438 85.0898 li
98.375 85.2383 98.3438 85.3555 98.3438 85.4492 cv
98.3521 85.5234 98.3589 85.5664 98.3589 85.5742 cv
98.3589 85.668 98.3052 85.7617 98.2031 85.8555 cv
98.1089 85.9492 98.02 85.9961 97.938 85.9961 cv
97.8198 85.9961 97.7031 85.9258 97.5781 85.793 cv
97.4531 85.418 li
97.4839 85.1992 li
97.4531 84.7305 li
97.4839 84.6211 li
97.4839 84.2305 li
97.5161 84.0742 li
97.5161 83.9492 li
97.5161 83.7852 97.52 83.6211 97.5313 83.4648 cv
97.5508 83.3008 97.563 83.2109 97.563 83.1992 cv
97.563 82.9961 li
97.5781 82.8867 li
97.5781 82.5586 li
97.6089 82.4492 li
97.5781 82.3086 li
97.625 81.918 li
97.625 81.4961 li
97.5781 81.2617 li
97.625 81.1523 li
97.625 81.1055 li
97.5781 80.4648 li
97.4839 80.0742 li
97.4839 79.9648 li
97.563 79.5586 li
97.5161 79.4023 li
97.4839 79.1055 li
97.4731 78.918 97.4688 78.8359 97.4688 78.8555 cv
97.4688 78.5742 97.688 78.4297 98.125 78.418 cv
98.3911 78.2617 li
98.3438 78.8555 li
98.3911 79.1992 li
98.2969 79.543 li
98.3281 79.918 li
98.3911 80.1367 li
98.3438 80.3398 li
98.375 80.6367 li
98.3438 80.8711 li
98.4058 81.1211 li
98.375 81.1836 li
98.4219 81.3086 li
98.3589 81.6367 li
98.3589 81.7148 li
98.4219 81.9336 li
98.3789 81.957 98.3589 82.0195 98.3589 82.1211 cv
98.3281 82.4023 li
98.3438 82.5117 li
98.5 82.2617 li
98.563 81.9805 li
98.563 81.9805 98.6172 81.8945 98.7339 81.7148 cv
98.7339 81.6328 98.7578 81.5586 98.813 81.4961 cv
98.9531 81.4961 li
99.0469 81.293 li
99.3281 81.1523 li
99.4302 81.0508 99.5552 80.9727 99.7031 80.918 cv
99.7813 80.8555 li
99.9688 80.7617 li
100.125 80.7305 li
100.289 80.5859 100.656 80.4883 101.219 80.4336 cv
102.156 80.5117 li
102.344 80.6211 li
102.438 80.6367 li
102.641 80.8555 li
102.656 80.7773 li
102.758 80.832 102.836 80.9023 102.891 80.9961 cv
102.93 80.9961 102.945 80.9961 102.938 80.9961 cv
102.969 80.9961 103 81.0078 103.031 81.0273 cv
103.281 81.543 li
103.266 81.6055 li
103.305 81.6914 103.328 81.7617 103.328 81.8242 cv
103.328 81.9297 103.285 82.0391 103.203 82.1523 cv
103.203 82.2305 li
103.031 82.668 li
102.781 83.0273 li
102.703 83.0273 li
102.703 83.0273 102.656 83.0977 102.563 83.2305 cv
102.477 83.2305 102.41 83.207 102.359 83.1523 cv
102.359 83.3398 li
102.266 83.4023 li
102.188 83.543 li
101.969 83.5898 li
101.938 83.6016 101.898 83.6367 101.859 83.6992 cv
101.305 83.918 101 84.0273 100.938 84.0273 cv
100.914 84.0273 100.867 84.0234 100.797 84.0117 cv
100.734 84.0039 100.676 83.9961 100.625 83.9961 cv
100.594 83.9961 100.57 83.9961 100.563 83.9961 cv
100.57 84.0273 100.613 84.1172 100.688 84.2617 cv
100.844 84.3711 li
101.063 84.7461 li
101.391 84.9336 li
101.406 84.9805 li
101.516 85.043 li
101.672 85.2305 li
101.969 85.4492 li
102.344 85.6055 li
102.563 85.668 li
102.719 85.6523 li
102.797 85.6211 li
102.961 85.6016 103.117 85.5391 103.266 85.4336 cv
103.469 85.0586 li
103.578 84.918 li
103.656 84.6992 li
103.77 84.6602 103.863 84.6367 103.938 84.6367 cv
104.125 84.6367 104.242 84.7422 104.297 84.9492 cv
104.297 84.9492 li
cp
f
.7 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
138.535 89.6953 mo
164.707 111.445 li
@
176.465 111.094 mo
176.402 111.313 li
176.418 111.438 li
176.277 111.906 li
176.262 112.078 li
176.09 112.25 li
176.027 112.484 li
175.902 112.672 li
175.699 113.094 li
175.48 113.484 li
175.121 114 li
175.074 114.156 li
174.887 114.469 li
174.684 114.891 li
174.324 115.547 li
174.246 115.828 li
174.059 116.109 li
173.699 115.984 li
173.496 115.859 li
173.309 115.297 li
173.059 114.891 li
173.059 114.781 li
172.918 114.438 li
172.855 114.359 li
172.355 113.313 li
172.199 113.063 li
172.074 113.266 li
171.871 113.422 li
171.605 113.797 li
171.402 114 li
171.293 114.313 li
171.043 114.641 li
171.012 114.75 li
170.84 115.125 li
170.84 115.297 li
170.715 115.469 li
170.699 115.641 li
170.574 115.672 li
170.309 115.953 li
170.371 115.922 li
170.285 115.973 170.176 116.004 170.043 116.016 cv
169.949 115.922 li
169.777 115.859 li
169.777 115.719 li
169.699 115.625 li
169.637 115.297 li
169.543 115.078 li
169.543 114.922 li
169.527 114.875 li
169.34 114.359 li
169.293 114.047 li
169.184 113.906 li
169.199 113.75 li
169.074 113.469 li
169.074 113.359 li
168.98 113.094 li
168.809 112.859 li
168.84 112.594 li
168.824 112.516 li
168.699 112.203 li
168.668 112.016 li
168.605 111.891 li
168.551 111.82 168.516 111.742 168.496 111.656 cv
168.293 111.141 li
168.449 110.922 li
168.5 110.84 168.605 110.781 168.762 110.75 cv
169.012 110.719 li
169.09 110.844 li
169.246 110.906 li
169.355 111.125 li
169.449 111.203 li
169.418 111.406 li
169.465 111.516 li
169.434 111.625 li
169.543 111.828 li
169.527 112 li
169.684 112.547 li
169.652 112.672 li
169.73 113 li
169.902 113.375 li
169.965 113.844 li
170.09 113.984 li
170.09 114.266 li
170.168 114.516 li
170.184 114.625 li
170.355 114.516 li
170.621 114.063 li
170.715 113.859 li
170.809 113.688 li
170.809 113.617 170.824 113.559 170.855 113.516 cv
170.934 113.516 li
170.965 113.297 li
171.09 113.281 li
171.109 113.211 171.145 113.156 171.199 113.125 cv
171.199 113.109 li
171.199 113.059 171.223 113.012 171.277 112.969 cv
171.246 112.875 li
171.309 112.859 li
171.293 112.781 li
171.363 112.656 171.449 112.563 171.543 112.5 cv
171.543 112.25 li
171.715 112.156 li
171.762 112.125 li
171.777 112.094 li
171.734 112.023 171.715 111.934 171.715 111.828 cv
171.715 111.695 171.781 111.555 171.918 111.406 cv
171.988 111.375 172.078 111.359 172.184 111.359 cv
172.246 111.359 172.293 111.367 172.324 111.375 cv
172.543 111.578 li
172.668 111.766 li
172.746 112.047 li
172.855 112.234 li
172.824 112.375 li
172.902 112.641 li
172.902 112.75 li
173.105 113.109 li
173.105 113.141 li
173.168 113.172 li
173.402 113.75 li
173.418 113.906 li
173.527 114.047 li
173.809 114.672 li
173.871 114.563 li
174.09 114.109 li
174.215 114 li
174.309 113.75 li
174.434 113.688 li
174.434 113.516 li
174.484 113.477 174.547 113.434 174.621 113.391 cv
174.672 113.371 174.699 113.352 174.699 113.328 cv
174.684 113.078 li
174.824 112.938 li
174.887 112.906 li
175.074 112.594 li
175.074 112.563 li
175.082 112.48 175.137 112.383 175.23 112.266 cv
175.199 112.141 li
175.418 111.875 li
175.527 111.609 li
175.434 111.371 175.387 111.168 175.387 111 cv
175.387 110.75 175.516 110.609 175.777 110.578 cv
176.105 110.672 li
176.152 110.594 li
176.23 110.703 li
176.355 110.797 li
176.309 110.922 li
176.465 111.094 li
cp
f
182.066 115.813 mo
182.066 116.133 181.895 116.297 181.551 116.297 cv
181.383 116.297 181.262 116.227 181.191 116.094 cv
181.105 115.977 181.039 115.766 180.988 115.453 cv
180.988 115.297 li
181.008 115.258 181.02 115.215 181.02 115.172 cv
181.02 115.152 181.012 115.133 181.004 115.109 cv
180.832 114.859 li
180.957 114.625 li
180.91 114.375 li
180.957 114.234 li
180.957 114.078 li
180.988 113.938 li
180.926 113.719 li
180.988 113.609 li
180.988 112.703 li
180.91 112.297 li
180.957 112.156 li
180.879 111.859 li
180.77 111.938 li
180.52 112.047 li
180.16 112.5 li
180.004 112.5 li
179.801 112.844 li
179.754 112.984 li
179.629 113.047 li
179.488 113.25 li
179.426 113.375 li
179.301 113.797 li
179.082 114.063 li
179.035 114.234 li
178.91 114.328 li
178.863 114.625 li
178.629 114.828 li
178.598 115.281 li
178.488 115.281 li
178.441 115.344 li
178.238 115.719 li
178.035 115.938 li
177.848 116.172 li
177.66 116.125 li
177.504 116.125 li
177.363 115.922 li
177.223 115.5 li
177.207 114.859 li
177.16 114.656 li
177.207 114.406 li
177.176 113.844 li
177.27 113.828 li
177.332 113 li
177.379 112.844 li
177.348 112.594 li
177.41 112.547 li
177.457 112.172 li
177.504 112.031 li
177.457 111.875 li
177.488 111.813 li
177.473 111.781 li
177.504 111.438 li
177.41 111.359 li
177.488 111.188 li
177.473 110.844 li
177.348 110.484 li
177.441 110.375 li
177.363 110.063 li
177.363 109.859 li
177.316 109.781 li
177.254 109.391 li
177.207 109.219 li
177.02 108.875 li
177.16 108.703 li
177.27 108.5 li
177.379 108.5 li
177.555 108.5 177.684 108.563 177.77 108.688 cv
177.941 108.828 li
178.02 109.031 li
178.191 109.188 li
178.16 109.359 li
178.238 109.609 li
178.238 109.641 li
178.254 109.656 li
178.238 110.063 li
178.254 110.578 li
178.348 110.922 li
178.285 111.063 li
178.301 111.266 li
178.238 111.438 li
178.285 111.719 li
178.223 111.969 li
178.238 112.016 li
178.223 112.75 li
178.254 112.906 li
178.191 113 li
178.145 113.391 li
178.098 113.578 li
178.145 113.891 li
178.098 114 li
178.082 114.234 li
178.176 114.215 178.223 114.168 178.223 114.094 cv
178.316 114 li
178.395 113.844 li
178.426 113.609 li
178.551 113.422 li
178.629 113.172 li
178.816 112.984 li
178.863 112.75 li
178.973 112.75 li
178.973 112.641 li
178.988 112.5 li
179.129 112.406 li
179.129 112.313 li
179.254 112.297 li
179.27 112.094 li
179.27 112 li
179.488 111.906 li
179.535 111.859 li
179.52 111.734 li
179.629 111.703 li
179.707 111.5 li
179.848 111.5 li
179.988 111.406 li
179.988 111.355 179.992 111.32 180.004 111.297 cv
180.129 111.234 li
180.273 111.109 180.41 111.039 180.535 111.016 cv
180.535 111 li
180.742 110.898 180.887 110.844 180.973 110.844 cv
181.086 110.844 181.195 110.898 181.301 111 cv
181.383 111.031 181.434 111.094 181.457 111.188 cv
181.566 111.25 li
181.598 111.422 li
181.785 111.703 li
181.785 112.656 li
181.77 113.078 li
181.816 113.188 li
181.816 114.078 li
181.785 114.234 li
181.785 114.469 li
181.816 114.734 li
181.77 114.969 li
181.801 115.086 181.82 115.184 181.832 115.266 cv
181.973 115.391 li
181.973 115.5 li
182.02 115.531 li
182.051 115.668 182.066 115.762 182.066 115.813 cv
182.066 115.813 li
cp
f
187.008 111.703 mo
186.961 111.625 li
186.867 111.594 li
186.492 111.297 li
186.258 111.25 li
186.07 111.25 li
186.039 111.234 li
185.945 111.266 li
185.836 111.203 li
185.523 111.203 li
185.57 111.25 li
185.289 111.359 li
185.242 111.406 li
185.211 111.422 li
185.063 111.547 184.961 111.648 184.898 111.719 cv
184.82 112.016 li
184.773 112.125 li
184.898 112.297 li
184.695 112.453 li
184.711 112.5 li
184.625 112.648 184.586 112.793 184.586 112.938 cv
184.477 113.063 li
184.477 113.281 li
184.383 113.375 li
184.367 113.484 li
184.32 113.516 li
184.32 113.688 li
184.289 113.734 li
184.289 113.84 184.281 113.918 184.273 113.969 cv
184.289 114.031 li
184.18 114.25 li
184.227 114.328 li
184.148 114.453 li
184.227 114.672 li
184.102 114.844 li
184.117 115.078 li
184.117 115.109 li
184.164 115.141 li
184.227 115.125 li
184.266 115.086 184.309 115.047 184.352 115.016 cv
184.32 114.922 li
184.492 114.891 li
184.539 114.813 li
185.242 114.234 li
185.305 114.203 li
185.398 114 li
185.438 113.992 185.508 113.961 185.602 113.906 cv
185.664 113.719 li
185.773 113.719 li
185.727 113.516 li
185.898 113.484 li
185.918 113.453 185.945 113.418 185.977 113.375 cv
186.016 113.324 186.055 113.277 186.086 113.234 cv
186.711 112.422 li
186.805 112.234 li
186.789 112.188 li
186.867 112.063 li
186.898 111.922 li
187.008 111.828 li
187.008 111.703 li
cp
188.148 111.078 mo
188.039 111.234 li
188.133 111.516 li
187.977 111.703 li
187.914 111.953 li
187.883 112.016 li
187.898 112.078 li
187.898 112.184 187.871 112.266 187.82 112.328 cv
187.789 112.359 li
187.789 112.406 li
187.82 112.469 187.836 112.523 187.836 112.563 cv
187.836 112.605 187.828 112.637 187.82 112.656 cv
187.836 112.703 li
187.789 112.828 li
187.82 112.969 li
187.727 113.063 li
187.758 113.234 li
187.836 113.328 li
187.727 113.422 li
187.727 113.609 li
187.633 113.797 li
187.695 114 li
187.633 114.094 li
187.742 114.172 li
187.586 114.453 li
187.57 114.484 li
187.695 114.516 li
187.602 114.781 li
187.602 114.828 li
187.602 114.891 187.594 114.938 187.586 114.969 cv
187.602 115 li
187.789 115.031 li
187.945 115.266 li
187.867 115.453 li
187.992 115.438 li
188.043 115.531 188.074 115.617 188.086 115.688 cv
187.898 115.859 li
187.844 115.922 187.766 115.977 187.664 116.031 cv
187.461 116.141 li
187.398 116.078 li
187.273 116.156 li
186.914 115.719 li
186.914 115.516 li
186.859 115.359 186.836 115.215 186.836 115.078 cv
186.836 115 li
186.758 114.297 li
186.867 113.797 li
186.789 113.5 li
186.586 113.844 li
186.477 114.156 li
186.383 114.203 li
186.211 114.469 li
185.914 114.734 li
185.82 114.875 li
185.57 115.109 li
185.508 115.266 li
185.117 115.5 li
184.711 115.969 li
184.477 116.016 li
184.32 116.125 li
184.121 116.125 183.969 116.051 183.867 115.906 cv
183.512 115.73 183.324 115.477 183.305 115.141 cv
183.367 115.109 li
183.352 115.031 li
183.336 114.891 li
183.273 114.734 li
183.336 114.563 li
183.367 114.313 li
183.445 113.922 li
183.445 113.914 183.445 113.898 183.445 113.875 cv
183.445 113.855 183.445 113.84 183.445 113.828 cv
183.445 113.797 183.449 113.758 183.461 113.703 cv
183.449 113.695 183.445 113.664 183.445 113.609 cv
183.445 113.559 183.469 113.465 183.523 113.328 cv
183.602 113.297 li
183.559 113.258 183.539 113.215 183.539 113.172 cv
183.539 113.141 183.543 113.117 183.555 113.094 cv
183.543 113.074 183.539 113.047 183.539 113.016 cv
183.539 112.914 183.586 112.84 183.68 112.797 cv
183.699 112.715 183.742 112.633 183.805 112.547 cv
183.758 112.453 li
183.898 112.281 li
183.898 112.234 li
183.898 112.078 183.949 111.938 184.055 111.813 cv
184.039 111.594 li
184.086 111.547 li
184.086 111.539 184.086 111.527 184.086 111.516 cv
184.074 111.496 184.07 111.48 184.07 111.469 cv
184.07 111.43 184.086 111.391 184.117 111.359 cv
184.117 111.281 li
184.148 111.199 184.23 111.078 184.367 110.922 cv
184.512 110.766 184.617 110.625 184.68 110.5 cv
184.742 110.563 li
184.867 110.5 li
184.93 110.484 li
185.32 110.297 li
186.242 110.344 li
186.242 110.422 li
186.539 110.484 li
186.715 110.484 186.836 110.547 186.898 110.672 cv
186.898 110.652 186.902 110.621 186.914 110.578 cv
186.914 110.559 186.914 110.543 186.914 110.531 cv
187.164 110.766 li
187.383 110.813 li
187.82 110.703 li
187.977 111 li
188.148 111.078 li
cp
f
193.27 111.625 mo
193.27 111.699 193.195 111.766 193.051 111.828 cv
193.02 111.871 192.961 111.906 192.879 111.938 cv
192.762 111.992 192.68 112.031 192.629 112.063 cv
192.379 111.984 li
192.254 112.078 192.09 112.125 191.895 112.125 cv
191.754 112.078 li
191.645 112.188 li
191.316 112.188 li
191.113 112.313 li
191.02 112.281 190.934 112.266 190.863 112.266 cv
190.832 112.289 190.773 112.305 190.691 112.313 cv
190.648 112.313 190.605 112.305 190.566 112.281 cv
190.52 112.734 li
190.535 113.063 li
190.504 113.484 li
190.52 113.953 li
190.566 114.156 li
190.566 114.328 li
190.723 114.688 li
190.699 114.711 190.691 114.742 190.691 114.781 cv
190.691 114.836 190.777 114.875 190.957 114.906 cv
190.973 115.047 li
191.066 115.078 li
191.207 115.188 li
191.301 115.25 li
191.383 115.242 191.441 115.234 191.473 115.234 cv
191.543 115.234 191.617 115.246 191.691 115.266 cv
191.723 115.246 191.789 115.188 191.895 115.094 cv
191.965 115.031 192.035 115 192.098 115 cv
192.105 115 192.117 115 192.129 115 cv
192.148 115.012 192.16 115.016 192.16 115.016 cv
192.23 114.859 192.363 114.762 192.551 114.719 cv
192.715 114.719 192.855 114.773 192.973 114.875 cv
192.973 114.953 li
192.973 115.227 192.871 115.398 192.676 115.469 cv
192.613 115.637 192.461 115.746 192.223 115.797 cv
192.082 115.922 li
191.926 115.922 li
191.645 116 li
191.582 116.008 191.492 116.016 191.379 116.016 cv
191.316 116.016 191.246 116 191.176 115.969 cv
191.02 115.969 li
190.598 115.75 li
190.488 115.703 li
190.238 115.375 li
190.098 115.219 li
189.832 114.625 li
189.738 114.047 li
189.754 113.906 li
189.66 113.781 li
189.723 113.609 li
189.66 113.344 li
189.738 113.266 li
189.77 113.109 li
189.738 112.969 li
189.754 112.75 li
189.707 112.547 li
189.77 112.5 li
189.77 112.297 li
189.676 112.266 li
189.457 112.313 li
189.238 112.156 li
189.207 112.156 li
188.969 112.156 188.848 112.031 188.848 111.781 cv
188.848 111.734 li
188.691 111.516 li
188.926 111.297 li
189.223 111.344 li
189.379 111.313 li
189.613 111.375 li
189.863 111.375 li
189.863 111.141 li
189.707 110.797 li
189.863 110.719 li
189.801 110.531 li
189.816 110.172 li
189.723 110.016 li
189.66 109.922 189.629 109.84 189.629 109.766 cv
189.629 109.684 189.648 109.609 189.691 109.547 cv
189.738 109.391 li
189.832 109.297 li
190.039 109.258 190.18 109.234 190.254 109.234 cv
190.512 109.234 190.652 109.352 190.676 109.578 cv
190.645 109.641 li
190.695 109.715 190.723 109.781 190.723 109.844 cv
190.723 109.855 190.715 109.875 190.707 109.906 cv
190.676 109.969 li
190.66 110.063 li
190.723 110.219 li
190.707 110.281 li
190.723 110.438 li
190.613 110.578 li
190.676 110.828 li
190.629 111.109 li
190.723 111.219 li
190.629 111.438 li
191.004 111.391 li
191.66 111.453 li
192.191 111.359 li
192.379 111.375 li
192.426 111.359 li
192.895 111.359 li
193.145 111.359 193.27 111.449 193.27 111.625 cv
193.27 111.625 li
cp
f
200.555 111.625 mo
200.555 111.699 200.48 111.766 200.336 111.828 cv
200.305 111.871 200.246 111.906 200.164 111.938 cv
200.047 111.992 199.965 112.031 199.914 112.063 cv
199.664 111.984 li
199.539 112.078 199.375 112.125 199.18 112.125 cv
199.039 112.078 li
198.93 112.188 li
198.602 112.188 li
198.398 112.313 li
198.305 112.281 198.219 112.266 198.148 112.266 cv
198.117 112.289 198.059 112.305 197.977 112.313 cv
197.934 112.313 197.891 112.305 197.852 112.281 cv
197.805 112.734 li
197.82 113.063 li
197.789 113.484 li
197.805 113.953 li
197.852 114.156 li
197.852 114.328 li
198.008 114.688 li
197.984 114.711 197.977 114.742 197.977 114.781 cv
197.977 114.836 198.063 114.875 198.242 114.906 cv
198.258 115.047 li
198.352 115.078 li
198.492 115.188 li
198.586 115.25 li
198.668 115.242 198.727 115.234 198.758 115.234 cv
198.828 115.234 198.902 115.246 198.977 115.266 cv
199.008 115.246 199.074 115.188 199.18 115.094 cv
199.25 115.031 199.32 115 199.383 115 cv
199.391 115 199.402 115 199.414 115 cv
199.434 115.012 199.445 115.016 199.445 115.016 cv
199.516 114.859 199.648 114.762 199.836 114.719 cv
200 114.719 200.141 114.773 200.258 114.875 cv
200.258 114.953 li
200.258 115.227 200.156 115.398 199.961 115.469 cv
199.898 115.637 199.746 115.746 199.508 115.797 cv
199.367 115.922 li
199.211 115.922 li
198.93 116 li
198.867 116.008 198.777 116.016 198.664 116.016 cv
198.602 116.016 198.531 116 198.461 115.969 cv
198.305 115.969 li
197.883 115.75 li
197.773 115.703 li
197.523 115.375 li
197.383 115.219 li
197.117 114.625 li
197.023 114.047 li
197.039 113.906 li
196.945 113.781 li
197.008 113.609 li
196.945 113.344 li
197.023 113.266 li
197.055 113.109 li
197.023 112.969 li
197.039 112.75 li
196.992 112.547 li
197.055 112.5 li
197.055 112.297 li
196.961 112.266 li
196.742 112.313 li
196.523 112.156 li
196.492 112.156 li
196.254 112.156 196.133 112.031 196.133 111.781 cv
196.133 111.734 li
195.977 111.516 li
196.211 111.297 li
196.508 111.344 li
196.664 111.313 li
196.898 111.375 li
197.148 111.375 li
197.148 111.141 li
196.992 110.797 li
197.148 110.719 li
197.086 110.531 li
197.102 110.172 li
197.008 110.016 li
196.945 109.922 196.914 109.84 196.914 109.766 cv
196.914 109.684 196.934 109.609 196.977 109.547 cv
197.023 109.391 li
197.117 109.297 li
197.324 109.258 197.465 109.234 197.539 109.234 cv
197.797 109.234 197.938 109.352 197.961 109.578 cv
197.93 109.641 li
197.98 109.715 198.008 109.781 198.008 109.844 cv
198.008 109.855 198 109.875 197.992 109.906 cv
197.961 109.969 li
197.945 110.063 li
198.008 110.219 li
197.992 110.281 li
198.008 110.438 li
197.898 110.578 li
197.961 110.828 li
197.914 111.109 li
198.008 111.219 li
197.914 111.438 li
198.289 111.391 li
198.945 111.453 li
199.477 111.359 li
199.664 111.375 li
199.711 111.359 li
200.18 111.359 li
200.43 111.359 200.555 111.449 200.555 111.625 cv
200.555 111.625 li
cp
f
206.148 115.813 mo
206.148 116.133 205.977 116.297 205.633 116.297 cv
205.465 116.297 205.344 116.227 205.273 116.094 cv
205.188 115.977 205.121 115.766 205.07 115.453 cv
205.07 115.297 li
205.09 115.258 205.102 115.215 205.102 115.172 cv
205.102 115.152 205.094 115.133 205.086 115.109 cv
204.914 114.859 li
205.039 114.625 li
204.992 114.375 li
205.039 114.234 li
205.039 114.078 li
205.07 113.938 li
205.008 113.719 li
205.07 113.609 li
205.07 112.703 li
204.992 112.297 li
205.039 112.156 li
204.961 111.859 li
204.852 111.938 li
204.602 112.047 li
204.242 112.5 li
204.086 112.5 li
203.883 112.844 li
203.836 112.984 li
203.711 113.047 li
203.57 113.25 li
203.508 113.375 li
203.383 113.797 li
203.164 114.063 li
203.117 114.234 li
202.992 114.328 li
202.945 114.625 li
202.711 114.828 li
202.68 115.281 li
202.57 115.281 li
202.523 115.344 li
202.32 115.719 li
202.117 115.938 li
201.93 116.172 li
201.742 116.125 li
201.586 116.125 li
201.445 115.922 li
201.305 115.5 li
201.289 114.859 li
201.242 114.656 li
201.289 114.406 li
201.258 113.844 li
201.352 113.828 li
201.414 113 li
201.461 112.844 li
201.43 112.594 li
201.492 112.547 li
201.539 112.172 li
201.586 112.031 li
201.539 111.875 li
201.57 111.813 li
201.555 111.781 li
201.586 111.438 li
201.492 111.359 li
201.57 111.188 li
201.555 110.844 li
201.43 110.484 li
201.523 110.375 li
201.445 110.063 li
201.445 109.859 li
201.398 109.781 li
201.336 109.391 li
201.289 109.219 li
201.102 108.875 li
201.242 108.703 li
201.352 108.5 li
201.461 108.5 li
201.637 108.5 201.766 108.563 201.852 108.688 cv
202.023 108.828 li
202.102 109.031 li
202.273 109.188 li
202.242 109.359 li
202.32 109.609 li
202.32 109.641 li
202.336 109.656 li
202.32 110.063 li
202.336 110.578 li
202.43 110.922 li
202.367 111.063 li
202.383 111.266 li
202.32 111.438 li
202.367 111.719 li
202.305 111.969 li
202.32 112.016 li
202.305 112.75 li
202.336 112.906 li
202.273 113 li
202.227 113.391 li
202.18 113.578 li
202.227 113.891 li
202.18 114 li
202.164 114.234 li
202.258 114.215 202.305 114.168 202.305 114.094 cv
202.398 114 li
202.477 113.844 li
202.508 113.609 li
202.633 113.422 li
202.711 113.172 li
202.898 112.984 li
202.945 112.75 li
203.055 112.75 li
203.055 112.641 li
203.07 112.5 li
203.211 112.406 li
203.211 112.313 li
203.336 112.297 li
203.352 112.094 li
203.352 112 li
203.57 111.906 li
203.617 111.859 li
203.602 111.734 li
203.711 111.703 li
203.789 111.5 li
203.93 111.5 li
204.07 111.406 li
204.07 111.355 204.074 111.32 204.086 111.297 cv
204.211 111.234 li
204.355 111.109 204.492 111.039 204.617 111.016 cv
204.617 111 li
204.824 110.898 204.969 110.844 205.055 110.844 cv
205.168 110.844 205.277 110.898 205.383 111 cv
205.465 111.031 205.516 111.094 205.539 111.188 cv
205.648 111.25 li
205.68 111.422 li
205.867 111.703 li
205.867 112.656 li
205.852 113.078 li
205.898 113.188 li
205.898 114.078 li
205.867 114.234 li
205.867 114.469 li
205.898 114.734 li
205.852 114.969 li
205.883 115.086 205.902 115.184 205.914 115.266 cv
206.055 115.391 li
206.055 115.5 li
206.102 115.531 li
206.133 115.668 206.148 115.762 206.148 115.813 cv
206.148 115.813 li
cp
f
210.059 111.5 mo
210.059 111.48 210.043 111.434 210.012 111.359 cv
209.965 111.344 li
209.934 111.359 li
209.922 111.359 209.906 111.359 209.887 111.359 cv
209.863 111.359 209.848 111.359 209.84 111.359 cv
209.828 111.359 209.816 111.359 209.809 111.359 cv
209.785 111.359 209.77 111.359 209.762 111.359 cv
209.652 111.438 li
209.543 111.453 li
209.48 111.469 li
209.277 111.734 li
209.137 111.828 li
208.949 112.172 li
208.84 112.234 li
208.816 112.383 208.762 112.5 208.668 112.594 cv
208.621 112.672 li
208.715 112.621 208.813 112.594 208.918 112.594 cv
209.012 112.547 li
209.043 112.453 li
209.215 112.453 li
209.309 112.313 li
209.387 112.313 li
209.512 112.359 li
209.574 112.188 li
209.652 112.188 li
209.652 112.047 li
209.809 112.016 li
209.855 111.984 li
209.871 111.875 li
210.027 111.641 li
210.047 111.602 210.059 111.555 210.059 111.5 cv
210.059 111.5 li
cp
211.246 114.953 mo
211.246 115.047 211.172 115.168 211.027 115.313 cv
210.984 115.438 210.922 115.543 210.84 115.625 cv
210.777 115.641 li
210.637 115.859 li
210.418 115.906 li
210.199 116.047 li
210.074 116.266 li
209.949 116.234 li
209.855 116.273 209.781 116.301 209.73 116.313 cv
209.652 116.422 li
209.629 116.41 209.594 116.406 209.543 116.406 cv
209.438 116.406 209.34 116.477 209.246 116.625 cv
209.074 116.484 li
209.043 116.484 208.996 116.484 208.934 116.484 cv
208.828 116.484 208.738 116.469 208.668 116.438 cv
208.465 116.438 li
208.371 116.375 li
208.066 116.332 207.875 116.219 207.793 116.031 cv
207.793 116 li
207.652 115.922 li
207.574 115.719 li
207.434 115.625 li
207.434 115.453 li
207.293 114.922 li
207.324 114.484 li
207.371 114.297 li
207.371 114.047 li
207.418 113.844 li
207.418 113.766 li
207.496 113.625 li
207.48 113.641 li
207.48 113.57 207.496 113.496 207.527 113.422 cv
207.527 113.359 li
207.496 113.063 li
207.496 112.93 207.559 112.809 207.684 112.703 cv
207.684 112.695 207.684 112.672 207.684 112.641 cv
207.684 112.609 207.668 112.547 207.637 112.453 cv
207.613 112.352 207.605 112.277 207.605 112.234 cv
207.605 112.133 207.629 112.027 207.684 111.922 cv
207.746 112.027 207.832 112.078 207.949 112.078 cv
207.996 112.078 li
208.004 112.047 208.035 112.012 208.09 111.969 cv
208.16 111.773 208.25 111.605 208.355 111.469 cv
208.402 111.406 li
208.402 111.375 208.426 111.289 208.48 111.141 cv
208.574 111.141 li
208.605 111.078 li
208.699 111.047 li
208.738 110.984 208.766 110.949 208.777 110.938 cv
208.785 110.93 208.871 110.883 209.027 110.797 cv
209.059 110.734 209.109 110.684 209.184 110.641 cv
209.215 110.621 209.25 110.602 209.293 110.578 cv
209.34 110.516 li
209.559 110.445 209.691 110.406 209.746 110.406 cv
209.816 110.406 209.879 110.422 209.934 110.453 cv
209.996 110.438 li
210.074 110.484 li
210.168 110.559 210.266 110.621 210.371 110.672 cv
210.574 110.828 li
210.574 110.875 li
210.75 111.023 210.84 111.227 210.84 111.484 cv
210.809 111.609 li
210.84 112 li
210.73 112.078 li
210.621 112.391 li
210.387 112.641 li
210.371 112.828 li
210.121 113.016 209.887 113.168 209.668 113.281 cv
209.594 113.387 209.484 113.438 209.34 113.438 cv
209.293 113.438 li
209.074 113.578 li
208.871 113.578 li
208.59 113.703 li
208.371 113.594 li
208.355 113.594 li
208.332 113.656 208.316 113.758 208.309 113.891 cv
208.199 113.953 li
208.199 114.094 li
208.121 114.313 li
208.141 114.5 208.152 114.621 208.152 114.672 cv
208.105 114.719 li
208.105 114.824 208.098 114.898 208.09 114.938 cv
208.09 114.949 208.09 114.965 208.09 114.984 cv
208.09 114.996 208.09 115.008 208.09 115.016 cv
208.09 115.078 208.121 115.133 208.184 115.172 cv
208.203 115.266 208.246 115.324 208.309 115.344 cv
208.387 115.422 li
208.652 115.5 li
208.652 115.531 li
208.746 115.547 li
209.152 115.578 li
209.387 115.547 li
209.512 115.453 li
209.59 115.438 li
209.699 115.25 li
209.762 115.234 li
210.059 115.141 li
210.098 115.09 210.152 115.043 210.215 115 cv
210.262 114.938 li
210.418 114.906 210.504 114.824 210.527 114.688 cv
210.641 114.574 210.785 114.516 210.965 114.516 cv
211.012 114.516 li
211.168 114.695 211.246 114.84 211.246 114.953 cv
211.246 114.953 li
cp
f
219.613 111.469 mo
219.504 111.875 li
219.066 111.922 li
218.832 112.078 li
218.676 112.016 li
218.504 112.109 li
218.316 112.188 li
218.207 112.266 li
218.207 112.313 li
217.957 112.438 li
217.785 112.656 li
217.707 112.656 li
217.57 112.793 217.477 112.875 217.426 112.906 cv
217.254 113.172 li
217.191 113.203 li
217.168 113.266 217.145 113.359 217.113 113.484 cv
216.941 113.547 li
216.879 113.688 li
216.77 113.813 li
216.754 114 li
216.66 114.031 li
216.66 114.203 li
216.613 114.25 li
216.645 114.293 216.676 114.336 216.707 114.375 cv
216.52 114.453 li
216.504 114.609 li
216.379 114.813 li
216.457 114.969 li
216.301 115.188 li
216.309 115.262 216.316 115.313 216.316 115.344 cv
216.316 115.355 216.316 115.371 216.316 115.391 cv
216.305 115.422 216.301 115.445 216.301 115.453 cv
216.332 115.563 li
216.535 115.781 li
216.379 116.063 li
216.238 116.172 li
215.895 116.328 li
215.457 116.156 li
215.457 115.875 li
215.41 115.766 li
215.441 115.594 li
215.43 115.461 215.426 115.359 215.426 115.297 cv
215.426 115.277 215.426 115.246 215.426 115.203 cv
215.426 115.164 215.426 115.137 215.426 115.125 cv
215.426 115 li
215.363 114.949 215.332 114.887 215.332 114.813 cv
215.332 114.75 215.363 114.68 215.426 114.594 cv
215.426 114.555 215.414 114.434 215.395 114.234 cv
215.426 114.203 li
215.395 114.047 li
215.426 113.891 li
215.395 113.813 li
215.426 113.531 li
215.363 113.422 li
215.41 113.281 li
215.363 113.125 li
215.371 113.086 215.379 113.023 215.379 112.938 cv
215.379 112.813 215.355 112.734 215.316 112.703 cv
215.379 112.625 li
215.316 112.406 li
215.223 112.25 li
215.27 112.063 li
215.223 111.984 li
215.176 111.703 li
215.176 111.609 li
215.133 111.559 215.113 111.496 215.113 111.422 cv
215.113 111.266 215.289 111.133 215.645 111.016 cv
215.941 111.078 li
216.004 111.313 li
216.129 111.469 li
216.098 111.781 li
216.117 111.949 216.145 112.125 216.176 112.313 cv
216.207 112.5 li
216.215 112.523 216.227 112.57 216.238 112.641 cv
216.238 112.684 216.215 112.734 216.176 112.797 cv
216.207 113.031 li
216.191 113.297 li
216.145 113.422 li
216.176 113.469 li
216.207 113.578 li
216.246 113.527 216.273 113.469 216.285 113.406 cv
216.332 113.219 li
216.352 113.18 216.387 113.148 216.441 113.125 cv
216.488 112.938 li
216.66 112.844 li
216.676 112.703 li
216.816 112.547 li
216.91 112.375 li
217.012 112.262 217.113 112.188 217.207 112.156 cv
217.238 112.125 li
217.332 111.953 li
217.457 111.922 li
217.551 111.828 li
217.676 111.75 li
217.754 111.672 li
217.816 111.672 li
217.91 111.625 li
217.957 111.563 li
218.113 111.484 li
218.316 111.359 li
218.598 111.25 li
218.711 111.242 218.773 111.234 218.785 111.234 cv
218.785 111.246 218.785 111.25 218.785 111.25 cv
218.773 111.25 218.77 111.25 218.77 111.25 cv
218.785 111.25 li
218.816 111.25 218.863 111.234 218.926 111.203 cv
218.965 111.172 219.023 111.156 219.098 111.156 cv
219.129 111.156 219.18 111.168 219.254 111.188 cv
219.461 111.199 219.582 111.293 219.613 111.469 cv
219.613 111.469 li
cp
f
223.164 113.422 mo
223.164 113.359 li
223.102 113.309 223.07 113.246 223.07 113.172 cv
223.102 113.125 li
222.992 112.891 li
223.008 112.656 li
222.961 112.594 li
222.855 112.523 222.805 112.461 222.805 112.406 cv
222.73 112.375 222.695 112.297 222.695 112.172 cv
222.617 112.156 li
222.477 111.922 li
222.367 111.828 li
222.117 111.734 li
222.023 111.719 li
221.969 111.719 221.938 111.703 221.93 111.672 cv
221.68 111.922 li
221.523 112.266 li
221.273 112.391 li
221.242 112.531 li
221.117 112.594 li
221.07 112.906 li
220.93 112.969 li
220.898 113.086 220.883 113.188 220.883 113.281 cv
220.68 113.469 li
220.742 113.5 li
220.742 113.594 220.703 113.68 220.633 113.75 cv
220.609 113.824 220.578 113.906 220.539 114 cv
220.539 114.094 li
220.508 114.141 li
220.523 114.281 li
220.383 114.609 li
220.414 114.672 li
220.414 115 li
220.367 115.172 li
220.367 115.344 li
220.477 115.5 li
220.648 115.547 li
220.711 115.578 li
220.805 115.531 li
221.117 115.547 li
221.164 115.438 li
221.211 115.438 li
221.262 115.438 221.293 115.449 221.305 115.469 cv
221.414 115.438 li
221.508 115.469 li
221.664 115.359 li
221.68 115.328 li
221.789 115.297 li
221.84 115.215 221.969 115.125 222.18 115.031 cv
222.211 114.984 li
222.445 114.813 li
222.586 114.625 li
222.773 114.516 li
222.789 114.469 li
222.852 114.328 li
222.852 114.172 li
222.992 114.047 li
223.039 113.969 li
223.102 113.891 li
223.07 113.797 223.055 113.73 223.055 113.688 cv
223.055 113.617 223.074 113.543 223.117 113.469 cv
223.164 113.422 li
cp
223.961 113.125 mo
223.898 113.344 li
223.898 113.555 223.883 113.719 223.852 113.844 cv
223.789 113.953 li
223.789 114.094 li
223.727 114.172 li
223.68 114.344 li
223.555 114.469 li
223.477 114.781 li
223.367 114.813 li
223.32 114.938 li
223.18 115.031 li
223.086 115.234 li
222.945 115.297 li
222.93 115.453 li
222.695 115.531 li
222.602 115.68 222.477 115.773 222.32 115.813 cv
222.273 115.813 li
222.156 115.977 222.008 116.063 221.82 116.063 cv
221.746 116.113 221.656 116.141 221.555 116.141 cv
221.43 116.219 li
221.305 116.266 li
221.148 116.375 li
220.992 116.375 li
220.836 116.422 li
220.633 116.328 li
220.117 116.297 li
219.93 116.016 li
219.664 115.75 li
219.727 115.547 li
219.555 115.141 li
219.633 114.984 li
219.57 114.703 li
219.633 114.516 li
219.609 114.414 219.602 114.336 219.602 114.281 cv
219.602 114.125 219.641 114.016 219.727 113.953 cv
219.734 113.871 219.789 113.734 219.883 113.547 cv
219.945 113.547 li
219.914 113.469 li
219.961 113.297 li
219.961 113.125 li
220.023 113.055 220.059 113 220.07 112.969 cv
220.023 112.813 li
220.023 112.75 li
220.086 112.648 220.117 112.531 220.117 112.406 cv
220.367 112.063 li
220.367 112.063 220.375 112.059 220.398 112.047 cv
220.418 112.027 220.434 112.008 220.445 111.984 cv
220.43 111.938 li
220.477 111.938 li
220.664 111.734 li
220.68 111.469 li
220.977 111.359 li
221.09 111.289 221.164 111.168 221.195 111 cv
221.352 111 li
221.434 110.949 221.512 110.922 221.586 110.922 cv
221.656 110.922 221.727 110.938 221.789 110.969 cv
221.93 110.984 li
222.242 110.859 li
222.398 111.016 li
222.539 111.094 li
222.633 111.094 li
222.805 111.203 li
222.914 111.203 li
223.016 111.297 223.137 111.43 223.273 111.594 cv
223.289 111.656 li
223.367 111.703 li
223.633 112.031 li
223.852 112.594 li
223.852 112.703 li
223.961 113.125 li
cp
f
228.758 113.172 mo
228.727 112.953 li
228.727 112.75 li
228.648 112.188 li
228.539 111.797 li
228.383 111.453 li
228.117 111.031 li
228.055 111.047 li
228.008 111.109 li
227.945 111.109 li
227.914 111.258 227.824 111.336 227.68 111.344 cv
227.617 111.43 227.531 111.547 227.43 111.703 cv
227.289 111.828 li
227.242 112.016 li
227.117 112.156 li
226.992 112.453 li
226.992 112.59 226.945 112.742 226.852 112.906 cv
226.773 113.016 li
226.789 113.203 li
226.586 113.469 li
226.492 113.891 li
226.414 113.938 li
226.414 113.949 226.418 113.965 226.43 113.984 cv
226.43 114.008 226.43 114.027 226.43 114.047 cv
226.43 114.184 226.391 114.324 226.32 114.469 cv
226.383 114.688 li
226.242 114.75 li
226.227 114.797 li
226.117 114.891 li
226.383 114.953 li
226.539 115.031 li
226.789 115 li
226.992 115.094 li
226.992 115.266 li
227.055 115.313 li
227.336 115.313 li
227.523 115.281 li
227.574 115.211 227.648 115.172 227.742 115.172 cv
227.773 115.172 li
227.883 115.141 li
227.82 114.984 li
228.164 114.984 li
228.234 114.777 228.367 114.594 228.555 114.438 cv
228.555 114.313 li
228.711 114.047 li
228.711 113.781 li
228.742 113.469 li
228.711 113.281 li
228.758 113.172 li
cp
229.555 114.063 mo
229.445 114.172 li
229.477 114.469 li
229.211 114.797 li
229.211 114.938 li
229.117 115.031 li
229.18 115.141 li
228.945 115.375 li
228.789 115.641 li
228.539 115.781 li
228.445 115.875 228.34 115.93 228.227 115.938 cv
228.133 116.156 li
228.008 116.047 li
227.883 116.203 li
227.883 116.16 227.852 116.109 227.789 116.047 cv
227.711 116 li
227.617 116.109 li
227.57 116.109 li
227.477 116.219 li
227.32 116.125 li
227.07 116.234 li
226.914 116.094 li
226.891 116.102 226.855 116.109 226.805 116.109 cv
226.68 116.109 226.516 116.07 226.32 116 cv
226.164 115.906 li
226.102 115.859 li
225.914 115.781 li
225.82 115.531 li
225.684 115.523 225.543 115.492 225.398 115.438 cv
225.148 114.891 li
225.195 114.813 li
225.133 114.719 li
225.133 114.5 li
225.055 114.375 li
225.102 114.234 li
225.078 114.141 225.07 114.063 225.07 114 cv
225.07 113.992 225.074 113.977 225.086 113.953 cv
225.086 113.934 225.086 113.918 225.086 113.906 cv
225.086 113.531 li
225.133 113.422 li
225.133 112.703 li
225.18 112.547 li
225.117 112.469 li
225.227 112.141 li
225.195 112.031 li
225.195 111.766 li
225.242 111.688 li
225.242 111.516 li
225.195 111.406 li
225.289 111.016 li
225.211 110.531 li
225.242 110.5 li
225.242 110.344 li
225.25 110.305 225.258 110.242 225.258 110.156 cv
225.258 110.043 225.25 109.953 225.242 109.891 cv
225.258 109.813 li
225.164 109.453 li
225.184 109.402 225.211 109.367 225.242 109.344 cv
225.23 109.313 225.215 109.281 225.195 109.25 cv
225.215 109.211 225.227 109.164 225.227 109.109 cv
225.227 109.047 225.195 108.977 225.133 108.891 cv
225.133 108.82 225.148 108.758 225.18 108.703 cv
225.133 108.578 li
225.195 108.453 li
224.992 108.047 li
225.195 108 li
225.195 107.984 li
225.602 107.766 li
225.82 108.016 li
225.852 108.141 li
226.023 108.266 li
226.023 108.453 li
226.023 108.516 226.012 108.605 225.992 108.719 cv
226.043 108.773 226.07 108.824 226.07 108.875 cv
226.07 108.898 226.063 108.922 226.055 108.953 cv
226.102 109 li
226.055 109.188 li
226.133 109.406 li
226.117 109.5 li
226.273 109.563 li
226.195 109.719 li
226.117 110.031 li
226.117 110.086 226.102 110.156 226.07 110.25 cv
226.102 110.305 226.117 110.414 226.117 110.578 cv
226.086 110.672 li
226.117 110.766 li
226.07 110.953 li
226.07 111.027 226.055 111.102 226.023 111.172 cv
226.023 111.203 li
226.055 111.246 226.094 111.297 226.148 111.359 cv
226.023 111.625 li
226.055 111.766 li
226.023 111.828 li
226.023 111.891 226.012 111.969 225.992 112.063 cv
226.008 112.109 li
225.992 112.234 li
225.977 112.422 li
225.945 112.813 li
226.102 112.844 li
226.117 112.469 li
226.211 112.219 li
226.258 112.234 li
226.32 112.063 li
226.359 111.918 226.43 111.781 226.523 111.656 cv
226.531 111.625 226.555 111.594 226.586 111.563 cv
226.633 111.516 li
226.633 111.547 li
226.68 111.406 li
226.82 111.25 li
226.898 111.156 li
226.914 111.109 li
226.992 111.016 li
226.992 110.914 227.027 110.84 227.102 110.797 cv
227.117 110.688 li
227.273 110.641 li
227.336 110.609 li
227.367 110.531 li
227.352 110.375 li
227.523 110.328 li
227.617 110.297 li
227.539 110.219 li
227.727 110.172 li
227.93 110.016 li
228.305 110.016 li
228.539 110.141 li
228.602 110.156 li
228.805 110.438 li
228.82 110.563 li
228.914 110.578 li
228.961 110.828 li
229.07 110.922 li
229.07 111.094 li
229.148 111.188 li
229.227 111.234 li
229.273 111.625 li
229.273 111.656 li
229.273 111.699 229.297 111.758 229.352 111.828 cv
229.402 111.891 229.43 111.945 229.43 111.984 cv
229.43 112.039 229.414 112.09 229.383 112.141 cv
229.539 112.188 li
229.516 112.305 229.484 112.391 229.445 112.453 cv
229.477 112.719 li
229.516 112.805 229.539 112.867 229.539 112.906 cv
229.539 112.93 229.527 112.969 229.508 113.031 cv
229.492 113.547 li
229.539 113.656 li
229.492 113.844 li
229.555 114.063 li
cp
f
234.109 113.422 mo
234.109 113.359 li
234.047 113.309 234.016 113.246 234.016 113.172 cv
234.047 113.125 li
233.938 112.891 li
233.953 112.656 li
233.906 112.594 li
233.801 112.523 233.75 112.461 233.75 112.406 cv
233.676 112.375 233.641 112.297 233.641 112.172 cv
233.563 112.156 li
233.422 111.922 li
233.313 111.828 li
233.063 111.734 li
232.969 111.719 li
232.914 111.719 232.883 111.703 232.875 111.672 cv
232.625 111.922 li
232.469 112.266 li
232.219 112.391 li
232.188 112.531 li
232.063 112.594 li
232.016 112.906 li
231.875 112.969 li
231.844 113.086 231.828 113.188 231.828 113.281 cv
231.625 113.469 li
231.688 113.5 li
231.688 113.594 231.648 113.68 231.578 113.75 cv
231.555 113.824 231.523 113.906 231.484 114 cv
231.484 114.094 li
231.453 114.141 li
231.469 114.281 li
231.328 114.609 li
231.359 114.672 li
231.359 115 li
231.313 115.172 li
231.313 115.344 li
231.422 115.5 li
231.594 115.547 li
231.656 115.578 li
231.75 115.531 li
232.063 115.547 li
232.109 115.438 li
232.156 115.438 li
232.207 115.438 232.238 115.449 232.25 115.469 cv
232.359 115.438 li
232.453 115.469 li
232.609 115.359 li
232.625 115.328 li
232.734 115.297 li
232.785 115.215 232.914 115.125 233.125 115.031 cv
233.156 114.984 li
233.391 114.813 li
233.531 114.625 li
233.719 114.516 li
233.734 114.469 li
233.797 114.328 li
233.797 114.172 li
233.938 114.047 li
233.984 113.969 li
234.047 113.891 li
234.016 113.797 234 113.73 234 113.688 cv
234 113.617 234.02 113.543 234.063 113.469 cv
234.109 113.422 li
cp
234.906 113.125 mo
234.844 113.344 li
234.844 113.555 234.828 113.719 234.797 113.844 cv
234.734 113.953 li
234.734 114.094 li
234.672 114.172 li
234.625 114.344 li
234.5 114.469 li
234.422 114.781 li
234.313 114.813 li
234.266 114.938 li
234.125 115.031 li
234.031 115.234 li
233.891 115.297 li
233.875 115.453 li
233.641 115.531 li
233.547 115.68 233.422 115.773 233.266 115.813 cv
233.219 115.813 li
233.102 115.977 232.953 116.063 232.766 116.063 cv
232.691 116.113 232.602 116.141 232.5 116.141 cv
232.375 116.219 li
232.25 116.266 li
232.094 116.375 li
231.938 116.375 li
231.781 116.422 li
231.578 116.328 li
231.063 116.297 li
230.875 116.016 li
230.609 115.75 li
230.672 115.547 li
230.5 115.141 li
230.578 114.984 li
230.516 114.703 li
230.578 114.516 li
230.555 114.414 230.547 114.336 230.547 114.281 cv
230.547 114.125 230.586 114.016 230.672 113.953 cv
230.68 113.871 230.734 113.734 230.828 113.547 cv
230.891 113.547 li
230.859 113.469 li
230.906 113.297 li
230.906 113.125 li
230.969 113.055 231.004 113 231.016 112.969 cv
230.969 112.813 li
230.969 112.75 li
231.031 112.648 231.063 112.531 231.063 112.406 cv
231.313 112.063 li
231.313 112.063 231.32 112.059 231.344 112.047 cv
231.363 112.027 231.379 112.008 231.391 111.984 cv
231.375 111.938 li
231.422 111.938 li
231.609 111.734 li
231.625 111.469 li
231.922 111.359 li
232.035 111.289 232.109 111.168 232.141 111 cv
232.297 111 li
232.379 110.949 232.457 110.922 232.531 110.922 cv
232.602 110.922 232.672 110.938 232.734 110.969 cv
232.875 110.984 li
233.188 110.859 li
233.344 111.016 li
233.484 111.094 li
233.578 111.094 li
233.75 111.203 li
233.859 111.203 li
233.961 111.297 234.082 111.43 234.219 111.594 cv
234.234 111.656 li
234.313 111.703 li
234.578 112.031 li
234.797 112.594 li
234.797 112.703 li
234.906 113.125 li
cp
f
239.516 111.625 mo
239.516 111.699 239.441 111.766 239.297 111.828 cv
239.266 111.871 239.207 111.906 239.125 111.938 cv
239.008 111.992 238.926 112.031 238.875 112.063 cv
238.625 111.984 li
238.5 112.078 238.336 112.125 238.141 112.125 cv
238 112.078 li
237.891 112.188 li
237.563 112.188 li
237.359 112.313 li
237.266 112.281 237.18 112.266 237.109 112.266 cv
237.078 112.289 237.02 112.305 236.938 112.313 cv
236.895 112.313 236.852 112.305 236.813 112.281 cv
236.766 112.734 li
236.781 113.063 li
236.75 113.484 li
236.766 113.953 li
236.813 114.156 li
236.813 114.328 li
236.969 114.688 li
236.945 114.711 236.938 114.742 236.938 114.781 cv
236.938 114.836 237.023 114.875 237.203 114.906 cv
237.219 115.047 li
237.313 115.078 li
237.453 115.188 li
237.547 115.25 li
237.629 115.242 237.688 115.234 237.719 115.234 cv
237.789 115.234 237.863 115.246 237.938 115.266 cv
237.969 115.246 238.035 115.188 238.141 115.094 cv
238.211 115.031 238.281 115 238.344 115 cv
238.352 115 238.363 115 238.375 115 cv
238.395 115.012 238.406 115.016 238.406 115.016 cv
238.477 114.859 238.609 114.762 238.797 114.719 cv
238.961 114.719 239.102 114.773 239.219 114.875 cv
239.219 114.953 li
239.219 115.227 239.117 115.398 238.922 115.469 cv
238.859 115.637 238.707 115.746 238.469 115.797 cv
238.328 115.922 li
238.172 115.922 li
237.891 116 li
237.828 116.008 237.738 116.016 237.625 116.016 cv
237.563 116.016 237.492 116 237.422 115.969 cv
237.266 115.969 li
236.844 115.75 li
236.734 115.703 li
236.484 115.375 li
236.344 115.219 li
236.078 114.625 li
235.984 114.047 li
236 113.906 li
235.906 113.781 li
235.969 113.609 li
235.906 113.344 li
235.984 113.266 li
236.016 113.109 li
235.984 112.969 li
236 112.75 li
235.953 112.547 li
236.016 112.5 li
236.016 112.297 li
235.922 112.266 li
235.703 112.313 li
235.484 112.156 li
235.453 112.156 li
235.215 112.156 235.094 112.031 235.094 111.781 cv
235.094 111.734 li
234.938 111.516 li
235.172 111.297 li
235.469 111.344 li
235.625 111.313 li
235.859 111.375 li
236.109 111.375 li
236.109 111.141 li
235.953 110.797 li
236.109 110.719 li
236.047 110.531 li
236.063 110.172 li
235.969 110.016 li
235.906 109.922 235.875 109.84 235.875 109.766 cv
235.875 109.684 235.895 109.609 235.938 109.547 cv
235.984 109.391 li
236.078 109.297 li
236.285 109.258 236.426 109.234 236.5 109.234 cv
236.758 109.234 236.898 109.352 236.922 109.578 cv
236.891 109.641 li
236.941 109.715 236.969 109.781 236.969 109.844 cv
236.969 109.855 236.961 109.875 236.953 109.906 cv
236.922 109.969 li
236.906 110.063 li
236.969 110.219 li
236.953 110.281 li
236.969 110.438 li
236.859 110.578 li
236.922 110.828 li
236.875 111.109 li
236.969 111.219 li
236.875 111.438 li
237.25 111.391 li
237.906 111.453 li
238.438 111.359 li
238.625 111.375 li
238.672 111.359 li
239.141 111.359 li
239.391 111.359 239.516 111.449 239.516 111.625 cv
239.516 111.625 li
cp
f
247.578 114.953 mo
247.438 115.125 li
247.297 115.438 li
247.203 115.5 li
247.125 115.672 li
246.875 115.703 li
246.719 115.859 li
246.484 115.859 li
246.344 115.969 li
246.203 115.938 li
246.047 115.969 li
246.047 116.063 li
245.609 116.031 li
245.422 116.047 li
245.281 116.125 li
245.156 116.047 li
245.238 116.035 245.301 116.031 245.344 116.031 cv
245.281 116.039 245.086 116.055 244.766 116.078 cv
244.734 116.063 li
244.641 116.063 li
244.484 116.141 li
244.43 116.109 244.344 116.07 244.219 116.031 cv
244.039 116.02 243.926 116.016 243.875 116.016 cv
243.781 116.016 li
243.719 116.004 243.656 116 243.594 116 cv
243.531 116 243.469 116.016 243.406 116.047 cv
243.234 115.938 li
243.141 115.906 li
243.117 115.906 243.07 115.898 243 115.875 cv
242.707 115.844 242.563 115.602 242.563 115.141 cv
242.563 115.031 li
242.797 114.859 li
243.078 114.75 li
243.297 114.859 li
243.469 114.859 li
243.469 114.891 li
243.539 114.922 243.602 114.984 243.656 115.078 cv
243.75 115.094 li
243.75 115.25 li
243.906 115.297 li
243.938 115.313 li
245.484 115.219 li
245.844 115.156 li
245.891 115.156 li
245.906 115.094 li
246.078 115.078 li
246.109 115.031 li
246.273 115.012 246.43 114.965 246.578 114.891 cv
246.578 114.828 li
246.578 114.828 246.563 114.805 246.531 114.75 cv
246.469 114.766 li
246.313 114.641 li
246.203 114.641 li
246.156 114.563 li
246.188 114.516 li
246.047 114.531 li
245.953 114.422 li
245.93 114.434 245.895 114.438 245.844 114.438 cv
245.738 114.438 245.633 114.418 245.531 114.375 cv
245.422 114.375 li
245.328 114.344 li
245.172 114.406 li
245.078 114.297 li
245.031 114.297 li
244.859 114.156 li
244.5 114.016 li
244.375 113.922 li
243.922 113.844 li
243.875 113.75 li
243.531 113.531 li
243.359 113.141 li
243.203 112.938 li
243.156 112.313 li
243.203 112.234 li
243.223 112.059 243.289 111.902 243.406 111.766 cv
243.52 111.703 243.578 111.609 243.578 111.484 cv
243.766 111.453 li
243.797 111.391 243.859 111.328 243.953 111.266 cv
244.141 111.125 li
245.016 110.797 li
245.266 110.781 li
245.656 110.672 li
246.422 110.719 li
246.438 110.781 li
246.508 110.805 246.586 110.867 246.672 110.969 cv
246.672 111.031 li
246.875 111.156 li
246.781 111.438 li
246.766 111.547 li
246.711 111.746 246.598 111.844 246.422 111.844 cv
246.273 111.844 246.172 111.777 246.109 111.641 cv
246.109 111.609 li
245.953 111.594 li
245.797 111.641 li
245.641 111.531 li
245.547 111.594 li
245.441 111.594 245.348 111.625 245.266 111.688 cv
245.141 111.688 245.023 111.734 244.922 111.828 cv
244.766 111.828 li
244.656 111.922 li
244.484 111.953 li
244.453 111.984 li
244.391 112.016 li
244.281 112.125 li
244.25 112.141 li
244.141 112.297 li
244 112.375 li
243.969 112.48 243.945 112.57 243.938 112.641 cv
243.945 112.758 243.961 112.828 243.984 112.859 cv
244.004 112.891 244.055 112.93 244.141 112.969 cv
244.141 113.031 li
244.297 113.125 li
244.43 113.168 244.531 113.219 244.594 113.281 cv
244.828 113.281 li
244.984 113.406 li
245.266 113.438 li
245.375 113.516 li
245.844 113.641 li
245.906 113.781 li
245.953 113.688 li
246.055 113.688 246.191 113.742 246.359 113.844 cv
246.578 113.875 li
246.609 113.953 li
246.797 113.953 li
247.141 114.156 li
247.172 114.262 247.258 114.355 247.406 114.438 cv
247.531 114.516 li
247.5 114.672 li
247.551 114.746 247.578 114.828 247.578 114.922 cv
247.578 114.953 li
cp
f
251.137 111.5 mo
251.137 111.48 251.121 111.434 251.09 111.359 cv
251.043 111.344 li
251.012 111.359 li
251 111.359 250.984 111.359 250.965 111.359 cv
250.941 111.359 250.926 111.359 250.918 111.359 cv
250.906 111.359 250.895 111.359 250.887 111.359 cv
250.863 111.359 250.848 111.359 250.84 111.359 cv
250.73 111.438 li
250.621 111.453 li
250.559 111.469 li
250.355 111.734 li
250.215 111.828 li
250.027 112.172 li
249.918 112.234 li
249.895 112.383 249.84 112.5 249.746 112.594 cv
249.699 112.672 li
249.793 112.621 249.891 112.594 249.996 112.594 cv
250.09 112.547 li
250.121 112.453 li
250.293 112.453 li
250.387 112.313 li
250.465 112.313 li
250.59 112.359 li
250.652 112.188 li
250.73 112.188 li
250.73 112.047 li
250.887 112.016 li
250.934 111.984 li
250.949 111.875 li
251.105 111.641 li
251.125 111.602 251.137 111.555 251.137 111.5 cv
251.137 111.5 li
cp
252.324 114.953 mo
252.324 115.047 252.25 115.168 252.105 115.313 cv
252.063 115.438 252 115.543 251.918 115.625 cv
251.855 115.641 li
251.715 115.859 li
251.496 115.906 li
251.277 116.047 li
251.152 116.266 li
251.027 116.234 li
250.934 116.273 250.859 116.301 250.809 116.313 cv
250.73 116.422 li
250.707 116.41 250.672 116.406 250.621 116.406 cv
250.516 116.406 250.418 116.477 250.324 116.625 cv
250.152 116.484 li
250.121 116.484 250.074 116.484 250.012 116.484 cv
249.906 116.484 249.816 116.469 249.746 116.438 cv
249.543 116.438 li
249.449 116.375 li
249.145 116.332 248.953 116.219 248.871 116.031 cv
248.871 116 li
248.73 115.922 li
248.652 115.719 li
248.512 115.625 li
248.512 115.453 li
248.371 114.922 li
248.402 114.484 li
248.449 114.297 li
248.449 114.047 li
248.496 113.844 li
248.496 113.766 li
248.574 113.625 li
248.559 113.641 li
248.559 113.57 248.574 113.496 248.605 113.422 cv
248.605 113.359 li
248.574 113.063 li
248.574 112.93 248.637 112.809 248.762 112.703 cv
248.762 112.695 248.762 112.672 248.762 112.641 cv
248.762 112.609 248.746 112.547 248.715 112.453 cv
248.691 112.352 248.684 112.277 248.684 112.234 cv
248.684 112.133 248.707 112.027 248.762 111.922 cv
248.824 112.027 248.91 112.078 249.027 112.078 cv
249.074 112.078 li
249.082 112.047 249.113 112.012 249.168 111.969 cv
249.238 111.773 249.328 111.605 249.434 111.469 cv
249.48 111.406 li
249.48 111.375 249.504 111.289 249.559 111.141 cv
249.652 111.141 li
249.684 111.078 li
249.777 111.047 li
249.816 110.984 249.844 110.949 249.855 110.938 cv
249.863 110.93 249.949 110.883 250.105 110.797 cv
250.137 110.734 250.188 110.684 250.262 110.641 cv
250.293 110.621 250.328 110.602 250.371 110.578 cv
250.418 110.516 li
250.637 110.445 250.77 110.406 250.824 110.406 cv
250.895 110.406 250.957 110.422 251.012 110.453 cv
251.074 110.438 li
251.152 110.484 li
251.246 110.559 251.344 110.621 251.449 110.672 cv
251.652 110.828 li
251.652 110.875 li
251.828 111.023 251.918 111.227 251.918 111.484 cv
251.887 111.609 li
251.918 112 li
251.809 112.078 li
251.699 112.391 li
251.465 112.641 li
251.449 112.828 li
251.199 113.016 250.965 113.168 250.746 113.281 cv
250.672 113.387 250.563 113.438 250.418 113.438 cv
250.371 113.438 li
250.152 113.578 li
249.949 113.578 li
249.668 113.703 li
249.449 113.594 li
249.434 113.594 li
249.41 113.656 249.395 113.758 249.387 113.891 cv
249.277 113.953 li
249.277 114.094 li
249.199 114.313 li
249.219 114.5 249.23 114.621 249.23 114.672 cv
249.184 114.719 li
249.184 114.824 249.176 114.898 249.168 114.938 cv
249.168 114.949 249.168 114.965 249.168 114.984 cv
249.168 114.996 249.168 115.008 249.168 115.016 cv
249.168 115.078 249.199 115.133 249.262 115.172 cv
249.281 115.266 249.324 115.324 249.387 115.344 cv
249.465 115.422 li
249.73 115.5 li
249.73 115.531 li
249.824 115.547 li
250.23 115.578 li
250.465 115.547 li
250.59 115.453 li
250.668 115.438 li
250.777 115.25 li
250.84 115.234 li
251.137 115.141 li
251.176 115.09 251.23 115.043 251.293 115 cv
251.34 114.938 li
251.496 114.906 251.582 114.824 251.605 114.688 cv
251.719 114.574 251.863 114.516 252.043 114.516 cv
252.09 114.516 li
252.246 114.695 252.324 114.84 252.324 114.953 cv
252.324 114.953 li
cp
f
260.723 114 mo
260.723 114.063 260.668 114.148 260.566 114.25 cv
260.426 114.453 li
260.379 114.688 li
260.27 114.719 li
260.254 114.797 li
260.129 114.84 260.035 114.938 259.973 115.094 cv
259.887 115.211 259.793 115.293 259.691 115.344 cv
259.648 115.375 259.613 115.402 259.582 115.422 cv
259.52 115.531 li
259.41 115.547 li
259.098 115.719 li
258.691 115.766 li
258.582 115.75 li
258.41 115.781 li
258.332 115.703 li
258.215 115.641 258.137 115.586 258.098 115.531 cv
257.992 115.512 257.918 115.434 257.879 115.297 cv
257.742 115.141 257.676 115.016 257.676 114.922 cv
257.676 114.875 li
257.582 114.734 li
257.566 114.719 li
257.488 114.5 li
257.379 114.266 li
257.41 114 li
257.285 113.844 li
257.113 112.813 li
257.082 112.668 257.066 112.547 257.066 112.453 cv
257.051 112.391 li
256.988 112.313 li
256.879 112.453 li
256.441 112.906 li
256.285 113.172 li
256.207 113.328 li
256.082 113.531 li
255.973 113.625 li
255.988 113.688 li
255.816 114.047 li
255.723 114.172 li
255.613 114.203 li
255.504 114.313 li
255.504 114.469 255.426 114.574 255.27 114.625 cv
255.254 114.641 li
255.18 114.82 255.098 114.93 255.004 114.969 cv
254.895 115.141 li
254.715 115.297 254.602 115.398 254.551 115.438 cv
254.527 115.512 254.488 115.578 254.426 115.641 cv
254.402 115.664 254.371 115.695 254.332 115.734 cv
254.309 115.871 254.199 115.961 254.004 116.016 cv
253.863 116.063 li
253.707 116.051 253.574 115.957 253.473 115.781 cv
253.285 115.484 li
253.348 115.188 li
253.332 115.031 li
253.348 115.016 li
253.363 114.859 li
253.238 114.563 li
253.332 114.422 li
253.285 114.266 li
253.363 114.094 li
253.395 113.828 li
253.332 113.781 li
253.441 113.609 li
253.395 113.531 li
253.395 113.328 li
253.441 112.969 li
253.418 112.898 253.41 112.844 253.41 112.813 cv
253.41 112.805 253.414 112.789 253.426 112.766 cv
253.426 112.746 253.426 112.73 253.426 112.719 cv
253.363 112.625 li
253.395 112.234 li
253.395 112.109 li
253.426 111.922 li
253.379 111.594 li
253.598 111.234 li
253.836 111.277 254.004 111.336 254.098 111.406 cv
254.199 111.469 254.254 111.59 254.254 111.766 cv
254.254 111.875 li
254.332 112.016 li
254.301 112.266 li
254.348 112.75 li
254.27 112.969 li
254.301 113.219 li
254.301 113.422 li
254.207 113.563 li
254.27 113.781 li
254.207 113.906 li
254.191 114.047 li
254.27 114.172 li
254.16 114.422 li
254.129 114.531 li
254.129 114.641 li
254.191 114.766 li
254.395 114.563 li
254.395 114.438 254.434 114.355 254.52 114.313 cv
254.52 114.242 254.551 114.184 254.613 114.141 cv
254.582 114.094 li
254.738 113.953 li
254.77 113.906 li
254.77 113.797 li
254.957 113.656 li
255.004 113.531 li
255.113 113.469 li
255.582 112.938 li
255.539 112.992 255.41 113.137 255.191 113.375 cv
255.191 113.406 li
255.207 113.328 li
255.363 113.141 li
255.473 112.938 li
255.473 112.813 li
255.66 112.75 li
255.676 112.594 li
255.723 112.547 li
255.738 112.5 li
255.738 112.406 li
255.91 112.234 li
255.91 112.227 255.91 112.211 255.91 112.188 cv
255.898 112.156 255.895 112.141 255.895 112.141 cv
255.895 111.996 255.973 111.914 256.129 111.891 cv
256.199 111.746 256.309 111.664 256.457 111.641 cv
256.535 111.531 li
256.551 111.516 li
256.621 111.414 256.73 111.34 256.879 111.297 cv
256.988 111.156 li
257.27 111.156 li
257.426 111.328 li
257.551 111.406 li
257.566 111.438 li
257.645 111.469 li
257.676 111.719 li
257.879 111.828 li
257.785 112.094 li
257.926 112.391 li
257.926 112.719 li
258.02 113.172 li
258.051 113.609 li
258.145 113.859 li
258.223 114.172 li
258.273 114.227 258.309 114.293 258.332 114.375 cv
258.551 114.438 li
258.551 114.672 li
258.66 114.813 li
258.66 114.844 li
258.723 114.859 li
258.77 114.922 li
258.816 114.875 li
258.793 114.875 258.816 114.875 258.879 114.875 cv
258.961 114.875 259.051 114.797 259.145 114.641 cv
259.285 114.609 li
259.332 114.547 li
259.352 114.484 259.398 114.438 259.473 114.406 cv
259.551 114.406 li
259.598 114.359 li
259.613 114.313 li
259.645 114.25 li
259.727 114.199 259.777 114.117 259.801 114 cv
259.941 113.859 li
259.957 113.75 li
260.051 113.563 li
260.27 113.484 li
260.598 113.578 li
260.707 113.938 li
260.707 113.949 260.711 113.953 260.723 113.953 cv
260.723 113.977 260.723 113.992 260.723 114 cv
260.723 114 li
cp
f
265.59 114.953 mo
265.449 115.125 li
265.309 115.438 li
265.215 115.5 li
265.137 115.672 li
264.887 115.703 li
264.73 115.859 li
264.496 115.859 li
264.355 115.969 li
264.215 115.938 li
264.059 115.969 li
264.059 116.063 li
263.621 116.031 li
263.434 116.047 li
263.293 116.125 li
263.168 116.047 li
263.25 116.035 263.313 116.031 263.355 116.031 cv
263.293 116.039 263.098 116.055 262.777 116.078 cv
262.746 116.063 li
262.652 116.063 li
262.496 116.141 li
262.441 116.109 262.355 116.07 262.23 116.031 cv
262.051 116.02 261.938 116.016 261.887 116.016 cv
261.793 116.016 li
261.73 116.004 261.668 116 261.605 116 cv
261.543 116 261.48 116.016 261.418 116.047 cv
261.246 115.938 li
261.152 115.906 li
261.129 115.906 261.082 115.898 261.012 115.875 cv
260.719 115.844 260.574 115.602 260.574 115.141 cv
260.574 115.031 li
260.809 114.859 li
261.09 114.75 li
261.309 114.859 li
261.48 114.859 li
261.48 114.891 li
261.551 114.922 261.613 114.984 261.668 115.078 cv
261.762 115.094 li
261.762 115.25 li
261.918 115.297 li
261.949 115.313 li
263.496 115.219 li
263.855 115.156 li
263.902 115.156 li
263.918 115.094 li
264.09 115.078 li
264.121 115.031 li
264.285 115.012 264.441 114.965 264.59 114.891 cv
264.59 114.828 li
264.59 114.828 264.574 114.805 264.543 114.75 cv
264.48 114.766 li
264.324 114.641 li
264.215 114.641 li
264.168 114.563 li
264.199 114.516 li
264.059 114.531 li
263.965 114.422 li
263.941 114.434 263.906 114.438 263.855 114.438 cv
263.75 114.438 263.645 114.418 263.543 114.375 cv
263.434 114.375 li
263.34 114.344 li
263.184 114.406 li
263.09 114.297 li
263.043 114.297 li
262.871 114.156 li
262.512 114.016 li
262.387 113.922 li
261.934 113.844 li
261.887 113.75 li
261.543 113.531 li
261.371 113.141 li
261.215 112.938 li
261.168 112.313 li
261.215 112.234 li
261.234 112.059 261.301 111.902 261.418 111.766 cv
261.531 111.703 261.59 111.609 261.59 111.484 cv
261.777 111.453 li
261.809 111.391 261.871 111.328 261.965 111.266 cv
262.152 111.125 li
263.027 110.797 li
263.277 110.781 li
263.668 110.672 li
264.434 110.719 li
264.449 110.781 li
264.52 110.805 264.598 110.867 264.684 110.969 cv
264.684 111.031 li
264.887 111.156 li
264.793 111.438 li
264.777 111.547 li
264.723 111.746 264.609 111.844 264.434 111.844 cv
264.285 111.844 264.184 111.777 264.121 111.641 cv
264.121 111.609 li
263.965 111.594 li
263.809 111.641 li
263.652 111.531 li
263.559 111.594 li
263.453 111.594 263.359 111.625 263.277 111.688 cv
263.152 111.688 263.035 111.734 262.934 111.828 cv
262.777 111.828 li
262.668 111.922 li
262.496 111.953 li
262.465 111.984 li
262.402 112.016 li
262.293 112.125 li
262.262 112.141 li
262.152 112.297 li
262.012 112.375 li
261.98 112.48 261.957 112.57 261.949 112.641 cv
261.957 112.758 261.973 112.828 261.996 112.859 cv
262.016 112.891 262.066 112.93 262.152 112.969 cv
262.152 113.031 li
262.309 113.125 li
262.441 113.168 262.543 113.219 262.605 113.281 cv
262.84 113.281 li
262.996 113.406 li
263.277 113.438 li
263.387 113.516 li
263.855 113.641 li
263.918 113.781 li
263.965 113.688 li
264.066 113.688 264.203 113.742 264.371 113.844 cv
264.59 113.875 li
264.621 113.953 li
264.809 113.953 li
265.152 114.156 li
265.184 114.262 265.27 114.355 265.418 114.438 cv
265.543 114.516 li
265.512 114.672 li
265.563 114.746 265.59 114.828 265.59 114.922 cv
265.59 114.953 li
cp
f
269.148 111.5 mo
269.148 111.48 269.133 111.434 269.102 111.359 cv
269.055 111.344 li
269.023 111.359 li
269.012 111.359 268.996 111.359 268.977 111.359 cv
268.953 111.359 268.938 111.359 268.93 111.359 cv
268.918 111.359 268.906 111.359 268.898 111.359 cv
268.875 111.359 268.859 111.359 268.852 111.359 cv
268.742 111.438 li
268.633 111.453 li
268.57 111.469 li
268.367 111.734 li
268.227 111.828 li
268.039 112.172 li
267.93 112.234 li
267.906 112.383 267.852 112.5 267.758 112.594 cv
267.711 112.672 li
267.805 112.621 267.902 112.594 268.008 112.594 cv
268.102 112.547 li
268.133 112.453 li
268.305 112.453 li
268.398 112.313 li
268.477 112.313 li
268.602 112.359 li
268.664 112.188 li
268.742 112.188 li
268.742 112.047 li
268.898 112.016 li
268.945 111.984 li
268.961 111.875 li
269.117 111.641 li
269.137 111.602 269.148 111.555 269.148 111.5 cv
269.148 111.5 li
cp
270.336 114.953 mo
270.336 115.047 270.262 115.168 270.117 115.313 cv
270.074 115.438 270.012 115.543 269.93 115.625 cv
269.867 115.641 li
269.727 115.859 li
269.508 115.906 li
269.289 116.047 li
269.164 116.266 li
269.039 116.234 li
268.945 116.273 268.871 116.301 268.82 116.313 cv
268.742 116.422 li
268.719 116.41 268.684 116.406 268.633 116.406 cv
268.527 116.406 268.43 116.477 268.336 116.625 cv
268.164 116.484 li
268.133 116.484 268.086 116.484 268.023 116.484 cv
267.918 116.484 267.828 116.469 267.758 116.438 cv
267.555 116.438 li
267.461 116.375 li
267.156 116.332 266.965 116.219 266.883 116.031 cv
266.883 116 li
266.742 115.922 li
266.664 115.719 li
266.523 115.625 li
266.523 115.453 li
266.383 114.922 li
266.414 114.484 li
266.461 114.297 li
266.461 114.047 li
266.508 113.844 li
266.508 113.766 li
266.586 113.625 li
266.57 113.641 li
266.57 113.57 266.586 113.496 266.617 113.422 cv
266.617 113.359 li
266.586 113.063 li
266.586 112.93 266.648 112.809 266.773 112.703 cv
266.773 112.695 266.773 112.672 266.773 112.641 cv
266.773 112.609 266.758 112.547 266.727 112.453 cv
266.703 112.352 266.695 112.277 266.695 112.234 cv
266.695 112.133 266.719 112.027 266.773 111.922 cv
266.836 112.027 266.922 112.078 267.039 112.078 cv
267.086 112.078 li
267.094 112.047 267.125 112.012 267.18 111.969 cv
267.25 111.773 267.34 111.605 267.445 111.469 cv
267.492 111.406 li
267.492 111.375 267.516 111.289 267.57 111.141 cv
267.664 111.141 li
267.695 111.078 li
267.789 111.047 li
267.828 110.984 267.855 110.949 267.867 110.938 cv
267.875 110.93 267.961 110.883 268.117 110.797 cv
268.148 110.734 268.199 110.684 268.273 110.641 cv
268.305 110.621 268.34 110.602 268.383 110.578 cv
268.43 110.516 li
268.648 110.445 268.781 110.406 268.836 110.406 cv
268.906 110.406 268.969 110.422 269.023 110.453 cv
269.086 110.438 li
269.164 110.484 li
269.258 110.559 269.355 110.621 269.461 110.672 cv
269.664 110.828 li
269.664 110.875 li
269.84 111.023 269.93 111.227 269.93 111.484 cv
269.898 111.609 li
269.93 112 li
269.82 112.078 li
269.711 112.391 li
269.477 112.641 li
269.461 112.828 li
269.211 113.016 268.977 113.168 268.758 113.281 cv
268.684 113.387 268.574 113.438 268.43 113.438 cv
268.383 113.438 li
268.164 113.578 li
267.961 113.578 li
267.68 113.703 li
267.461 113.594 li
267.445 113.594 li
267.422 113.656 267.406 113.758 267.398 113.891 cv
267.289 113.953 li
267.289 114.094 li
267.211 114.313 li
267.23 114.5 267.242 114.621 267.242 114.672 cv
267.195 114.719 li
267.195 114.824 267.188 114.898 267.18 114.938 cv
267.18 114.949 267.18 114.965 267.18 114.984 cv
267.18 114.996 267.18 115.008 267.18 115.016 cv
267.18 115.078 267.211 115.133 267.273 115.172 cv
267.293 115.266 267.336 115.324 267.398 115.344 cv
267.477 115.422 li
267.742 115.5 li
267.742 115.531 li
267.836 115.547 li
268.242 115.578 li
268.477 115.547 li
268.602 115.453 li
268.68 115.438 li
268.789 115.25 li
268.852 115.234 li
269.148 115.141 li
269.188 115.09 269.242 115.043 269.305 115 cv
269.352 114.938 li
269.508 114.906 269.594 114.824 269.617 114.688 cv
269.73 114.574 269.875 114.516 270.055 114.516 cv
270.102 114.516 li
270.258 114.695 270.336 114.84 270.336 114.953 cv
270.336 114.953 li
cp
f
275.563 114.953 mo
275.422 115.125 li
275.281 115.438 li
275.188 115.5 li
275.109 115.672 li
274.859 115.703 li
274.703 115.859 li
274.469 115.859 li
274.328 115.969 li
274.188 115.938 li
274.031 115.969 li
274.031 116.063 li
273.594 116.031 li
273.406 116.047 li
273.266 116.125 li
273.141 116.047 li
273.223 116.035 273.285 116.031 273.328 116.031 cv
273.266 116.039 273.07 116.055 272.75 116.078 cv
272.719 116.063 li
272.625 116.063 li
272.469 116.141 li
272.414 116.109 272.328 116.07 272.203 116.031 cv
272.023 116.02 271.91 116.016 271.859 116.016 cv
271.766 116.016 li
271.703 116.004 271.641 116 271.578 116 cv
271.516 116 271.453 116.016 271.391 116.047 cv
271.219 115.938 li
271.125 115.906 li
271.102 115.906 271.055 115.898 270.984 115.875 cv
270.691 115.844 270.547 115.602 270.547 115.141 cv
270.547 115.031 li
270.781 114.859 li
271.063 114.75 li
271.281 114.859 li
271.453 114.859 li
271.453 114.891 li
271.523 114.922 271.586 114.984 271.641 115.078 cv
271.734 115.094 li
271.734 115.25 li
271.891 115.297 li
271.922 115.313 li
273.469 115.219 li
273.828 115.156 li
273.875 115.156 li
273.891 115.094 li
274.063 115.078 li
274.094 115.031 li
274.258 115.012 274.414 114.965 274.563 114.891 cv
274.563 114.828 li
274.563 114.828 274.547 114.805 274.516 114.75 cv
274.453 114.766 li
274.297 114.641 li
274.188 114.641 li
274.141 114.563 li
274.172 114.516 li
274.031 114.531 li
273.938 114.422 li
273.914 114.434 273.879 114.438 273.828 114.438 cv
273.723 114.438 273.617 114.418 273.516 114.375 cv
273.406 114.375 li
273.313 114.344 li
273.156 114.406 li
273.063 114.297 li
273.016 114.297 li
272.844 114.156 li
272.484 114.016 li
272.359 113.922 li
271.906 113.844 li
271.859 113.75 li
271.516 113.531 li
271.344 113.141 li
271.188 112.938 li
271.141 112.313 li
271.188 112.234 li
271.207 112.059 271.273 111.902 271.391 111.766 cv
271.504 111.703 271.563 111.609 271.563 111.484 cv
271.75 111.453 li
271.781 111.391 271.844 111.328 271.938 111.266 cv
272.125 111.125 li
273 110.797 li
273.25 110.781 li
273.641 110.672 li
274.406 110.719 li
274.422 110.781 li
274.492 110.805 274.57 110.867 274.656 110.969 cv
274.656 111.031 li
274.859 111.156 li
274.766 111.438 li
274.75 111.547 li
274.695 111.746 274.582 111.844 274.406 111.844 cv
274.258 111.844 274.156 111.777 274.094 111.641 cv
274.094 111.609 li
273.938 111.594 li
273.781 111.641 li
273.625 111.531 li
273.531 111.594 li
273.426 111.594 273.332 111.625 273.25 111.688 cv
273.125 111.688 273.008 111.734 272.906 111.828 cv
272.75 111.828 li
272.641 111.922 li
272.469 111.953 li
272.438 111.984 li
272.375 112.016 li
272.266 112.125 li
272.234 112.141 li
272.125 112.297 li
271.984 112.375 li
271.953 112.48 271.93 112.57 271.922 112.641 cv
271.93 112.758 271.945 112.828 271.969 112.859 cv
271.988 112.891 272.039 112.93 272.125 112.969 cv
272.125 113.031 li
272.281 113.125 li
272.414 113.168 272.516 113.219 272.578 113.281 cv
272.813 113.281 li
272.969 113.406 li
273.25 113.438 li
273.359 113.516 li
273.828 113.641 li
273.891 113.781 li
273.938 113.688 li
274.039 113.688 274.176 113.742 274.344 113.844 cv
274.563 113.875 li
274.594 113.953 li
274.781 113.953 li
275.125 114.156 li
275.156 114.262 275.242 114.355 275.391 114.438 cv
275.516 114.516 li
275.484 114.672 li
275.535 114.746 275.563 114.828 275.563 114.922 cv
275.563 114.953 li
cp
f
gsave
0 122 mo
281 122 li
281 0 li
0 0 li
0 122 li
cp
clp
3.66113 lw
14.5078 70.1445 mo
53.8628 92.2852 111.719 115.164 177.535 62.5234 cv
0 0 0 rgb
@
grestore
189.957 51.7578 mo
182.031 67.3516 li
173.859 58.605 li
189.957 51.7578 li
cp
0 0 0 rgb
f
.915283 lw
189.957 51.7578 mo
182.031 67.3516 li
173.859 58.605 li
189.957 51.7578 li
cp
@
102.73 106.172 mo
103.059 106.156 103.371 106.172 103.699 106.156 cv
104.668 106.109 105.84 106.031 106.793 106.016 cv
106.121 106.656 105.746 107.031 103.324 108.859 cv
98.4961 112.531 97.9648 114.094 97.9648 114.188 cv
97.9648 114.516 98.3091 114.516 98.5122 114.516 cv
98.9019 114.516 98.918 114.5 99.0898 114.25 cv
99.9492 113.063 100.84 112.891 101.215 112.891 cv
101.871 112.891 102.418 113.297 102.777 113.563 cv
103.512 114.094 104.105 114.516 105.027 114.516 cv
107.699 114.516 109.449 111.609 109.449 110.688 cv
109.449 110.359 109.043 110.359 108.871 110.359 cv
108.699 110.359 108.434 110.359 108.371 110.578 cv
108.152 111.031 107.918 111.625 106.309 111.813 cv
106.168 111.844 101.512 112.031 100.98 112.063 cv
101.652 111.406 102.027 111.031 104.465 109.188 cv
109.293 105.5 109.824 103.953 109.824 103.859 cv
109.824 103.516 109.496 103.516 109.277 103.516 cv
108.918 103.516 108.871 103.516 108.73 103.766 cv
108.152 104.594 107.699 105.141 107.121 105.141 cv
106.496 105.141 105.98 104.766 105.434 104.391 cv
104.855 103.953 104.262 103.516 103.371 103.516 cv
101.262 103.516 99.9019 105.656 99.9019 106.391 cv
99.9019 106.719 100.293 106.719 100.48 106.719 cv
100.699 106.719 100.965 106.719 101.027 106.422 cv
101.371 106.25 101.527 106.219 102.246 106.172 cv
102.73 106.172 li
cp
f
114.016 106.355 mo
113.547 106.355 113.188 106.762 113.188 107.293 cv
113.188 107.855 113.531 108.23 114.031 108.23 cv
114.5 108.23 114.906 107.824 114.906 107.324 cv
114.906 106.809 114.5 106.355 114.016 106.355 cv
114.016 106.355 li
cp
114.156 115.902 mo
113.734 116.465 113.609 116.605 113.438 116.809 cv
113.141 117.105 112.875 117.277 112.703 117.277 cv
112.563 117.277 112.422 117.137 112.422 117.012 cv
112.422 116.84 112.484 116.574 112.609 116.23 cv
112.609 116.184 112.656 116.059 112.688 115.918 cv
112.688 115.887 li
112.703 115.855 li
114.266 110.152 li
114.219 110.121 li
112.422 110.449 112.078 110.512 111.391 110.559 cv
111.391 110.84 li
112.328 110.855 112.5 110.918 112.5 111.262 cv
112.5 111.402 112.453 111.699 112.344 112.043 cv
111.484 115.184 li
111.203 116.199 111.094 116.746 111.094 117.105 cv
111.094 117.762 111.391 118.105 111.922 118.105 cv
112.734 118.105 113.375 117.574 114.391 116.09 cv
114.156 115.902 li
cp
f
118.75 117.902 mo
118.75 116.73 118.297 116.043 117.609 116.043 cv
117.031 116.043 116.672 116.48 116.672 116.98 cv
116.672 117.465 117.031 117.918 117.609 117.918 cv
117.828 117.918 118.063 117.84 118.234 117.684 cv
118.281 117.652 118.297 117.637 118.328 117.637 cv
118.344 117.637 118.359 117.652 118.359 117.902 cv
118.359 119.215 117.734 120.277 117.156 120.855 cv
116.953 121.043 116.953 121.09 116.953 121.137 cv
116.953 121.262 117.047 121.324 117.141 121.324 cv
117.328 121.324 118.75 119.965 118.75 117.902 cv
118.75 117.902 li
cp
f
126.711 106.355 mo
126.227 106.355 125.883 106.746 125.883 107.293 cv
125.883 107.855 126.211 108.23 126.727 108.23 cv
127.18 108.23 127.586 107.824 127.586 107.324 cv
127.586 106.809 127.18 106.355 126.711 106.355 cv
126.711 106.355 li
cp
127.055 110.152 mo
127.008 110.121 li
125.43 110.402 124.555 110.543 124.008 110.559 cv
124.008 110.84 li
124.477 110.84 li
124.602 110.824 li
124.742 110.809 125.102 110.918 125.18 110.98 cv
125.258 111.059 125.305 111.215 125.305 111.387 cv
125.305 111.574 125.227 112.043 125.023 112.809 cv
123.758 117.965 li
123.148 120.387 122.742 121.168 122.039 121.168 cv
121.82 121.168 121.727 121.105 121.727 120.98 cv
121.727 120.902 121.742 120.871 121.805 120.777 cv
121.914 120.637 121.945 120.559 121.945 120.418 cv
121.945 120.043 121.633 119.762 121.227 119.762 cv
120.82 119.762 120.523 120.074 120.523 120.496 cv
120.523 121.121 121.102 121.574 121.914 121.574 cv
123.461 121.574 124.508 120.23 125.227 117.418 cv
127.055 110.152 li
cp
f
gsave
0 0 mo
224.813 0 li
224.813 116.066 li
0 116.066 li
0 0 li
cp
clp
3.50732 lw
[2.66729 5.33271 ] 0 dsh
15.4102 65.7578 mo
59.1289 31.8521 84.563 30.0552 174.641 44.6841 cv
@
grestore
190.859 47.3711 mo
173.656 50.543 li
175.641 38.7422 li
190.859 47.3711 li
cp
f
.876831 lw
190.859 47.3711 mo
173.656 50.543 li
175.641 38.7422 li
190.859 47.3711 li
cp
@
27.1719 70.1445 mo
27.1758 68.4844 26.8438 66.8281 26.2109 65.2969 cv
25.5742 63.7656 24.6372 62.3594 23.4648 61.1875 cv
22.293 60.0161 20.8872 59.0742 19.355 58.4409 cv
17.8242 57.8052 16.1641 57.4771 14.5078 57.4771 cv
12.8481 57.4771 11.1909 57.8052 9.66016 58.4409 cv
8.12891 59.0742 6.72314 60.0161 5.55078 61.1875 cv
4.37891 62.3594 3.44092 63.7656 2.80518 65.2969 cv
2.17188 66.8281 1.83984 68.4844 1.84375 70.1445 cv
1.83984 71.8008 2.17188 73.457 2.80518 74.9883 cv
3.44092 76.5234 4.37891 77.9258 5.55078 79.0977 cv
6.72314 80.2734 8.12891 81.2109 9.66016 81.8438 cv
11.1909 82.4805 12.8481 82.8086 14.5078 82.8086 cv
16.1641 82.8086 17.8242 82.4805 19.355 81.8438 cv
20.8872 81.2109 22.293 80.2734 23.4648 79.0977 cv
24.6372 77.9258 25.5742 76.5234 26.2109 74.9883 cv
26.8438 73.457 27.1758 71.8008 27.1719 70.1445 cv
27.1719 70.1445 li
cp
.0588235 .4 .972549 rgb
f
10.8359 90.0313 mo
7.83594 86.0469 li
6.36719 86.0469 li
3.39795 90.0313 li
4.21094 90.0313 li
7.10205 87.5781 li
10.0229 90.0313 li
10.8359 90.0313 li
cp
0 0 0 rgb
f
gsave
0 122 mo
281 122 li
281 0 li
0 0 li
0 122 li
cp
clp
6.30078 91.3281 mo
6.08203 91.3125 5.89502 91.2813 5.77002 91.2813 cv
4.69092 91.2813 3.59814 92.1406 3.41016 93.125 cv
3.20703 94 3.61279 94.5313 4.69092 94.875 cv
4.00391 95.4375 3.55078 96.1563 3.41016 96.9531 cv
3.20703 97.8594 3.45703 98.625 4.19092 99.4844 cv
3.23779 100.109 2.75391 100.469 2.25391 100.938 cv
1.20703 101.938 .39502 103.406 .112793 104.781 cv
-.276855 106.672 .362793 108.422 1.66016 109.141 cv
2.34814 109.516 3.23779 109.672 4.69092 109.672 cv
5.12891 109.672 5.64502 109.641 6.80078 109.594 cv
7.73779 109.547 8.34814 110.234 8.16016 111.172 cv
7.97314 112.078 7.20703 112.75 6.31592 112.75 cv
6.20703 112.75 5.75391 112.703 5.30078 112.609 cv
4.73779 112.531 4.55078 112.516 4.33203 112.516 cv
3.73779 112.516 3.23779 112.922 3.11279 113.516 cv
2.95703 114.328 3.66016 114.906 4.83203 114.906 cv
5.95703 114.906 6.92578 114.422 7.89502 113.391 cv
8.75391 112.484 9.36279 111.391 9.56592 110.281 cv
9.78516 109.219 9.55078 108.375 8.91016 107.797 cv
8.44092 107.375 7.94092 107.25 6.86279 107.25 cv
4.78516 107.25 li
3.77002 107.25 2.95703 107.156 2.56592 106.969 cv
1.62891 106.516 1.16016 105.391 1.42578 104.141 cv
1.75391 102.453 3.06592 101.016 5.30078 99.8594 cv
5.91016 100.109 6.39502 100.172 7.12891 100.172 cv
9.02002 100.172 10.27 99.6719 10.4258 98.8438 cv
10.5508 98.2813 9.97314 97.9688 8.92578 97.9688 cv
7.98779 97.9688 7.08203 98.2344 5.27002 98.9844 cv
4.37891 98.2344 4.14502 97.7656 4.28516 97 cv
4.45703 96.25 5.05078 95.5313 6.05078 94.875 cv
7.28516 94.8135 8.11279 94.6719 8.83203 94.3438 cv
9.72314 93.9375 10.3628 93.3438 10.4878 92.7813 cv
10.5508 92.3281 10.2378 92.0781 9.56592 92.0781 cv
8.69092 92.0781 7.56592 92.625 5.80078 93.9844 cv
5.03516 93.9531 4.62891 93.5 4.73779 92.8906 cv
4.83203 92.3594 5.31592 92 6.20703 91.7656 cv
6.30078 91.3281 li
cp
f
grestore
14.0742 101.617 mo
13.605 101.617 13.2461 102.023 13.2461 102.555 cv
13.2461 103.117 13.5898 103.492 14.0898 103.492 cv
14.5591 103.492 14.9648 103.086 14.9648 102.586 cv
14.9648 102.07 14.5591 101.617 14.0742 101.617 cv
14.0742 101.617 li
cp
14.2148 111.164 mo
13.793 111.727 13.668 111.867 13.4961 112.07 cv
13.1992 112.367 12.9341 112.539 12.7622 112.539 cv
12.6211 112.539 12.48 112.398 12.48 112.273 cv
12.48 112.102 12.543 111.836 12.668 111.492 cv
12.668 111.445 12.7148 111.32 12.7461 111.18 cv
12.7461 111.148 li
12.7622 111.117 li
14.3242 105.414 li
14.2769 105.383 li
12.48 105.711 12.1372 105.773 11.4492 105.82 cv
11.4492 106.102 li
12.3872 106.117 12.5591 106.18 12.5591 106.523 cv
12.5591 106.664 12.5122 106.961 12.4019 107.305 cv
11.543 110.445 li
11.2622 111.461 11.1519 112.008 11.1519 112.367 cv
11.1519 113.023 11.4492 113.367 11.98 113.367 cv
12.793 113.367 13.4341 112.836 14.4492 111.352 cv
14.2148 111.164 li
cp
f
226.297 46.0698 mo
223.297 42.0859 li
221.828 42.0859 li
218.859 46.0698 li
219.672 46.0698 li
222.563 43.6172 li
225.484 46.0698 li
226.297 46.0698 li
cp
f
225.07 48.3091 mo
226.102 48.355 226.555 48.98 226.555 50.3711 cv
226.555 51.9492 225.852 53.9961 224.836 55.48 cv
223.82 56.8872 222.68 57.6372 221.43 57.6372 cv
220.773 57.6372 220.289 57.2769 220.289 56.7461 cv
220.289 55.9341 221.148 52.8091 221.836 51.0269 cv
222.492 49.4019 223.883 48.23 225.07 48.3091 cv
225.07 48.3091 li
cp
218.836 48.168 mo
219.383 48.168 li
219.383 48.168 219.43 48.168 219.445 48.1372 cv
219.758 47.9961 220.383 48.4492 220.383 48.8091 cv
220.383 49.0269 219.523 52.418 218.68 55.5742 cv
218.039 57.9648 217.461 60.2461 217.305 60.9341 cv
217.039 62.0273 216.727 62.3242 215.695 62.3398 cv
215.695 62.7305 li
220.602 62.7305 li
220.602 62.3711 li
219.477 62.3711 219.07 62.1523 219.07 61.6523 cv
219.07 61.3086 219.477 59.4492 219.961 57.6841 cv
220.555 57.9961 220.977 58.0898 221.539 58.0898 cv
225.023 58.0898 228.711 54.0742 228.711 50.2769 cv
228.711 48.4019 227.648 47.2769 225.961 47.2769 cv
224.398 47.2769 223.258 48.043 221.867 49.98 cv
222.555 47.5898 li
222.633 47.3711 li
222.633 47.3711 222.602 47.355 222.586 47.3091 cv
222.539 47.2769 li
222.539 47.2622 222.508 47.2622 222.508 47.2622 cv
222.461 47.2769 li
218.789 47.8091 li
218.836 48.168 li
cp
f
236.637 52.8198 mo
236.152 52.8198 235.809 53.2109 235.809 53.7578 cv
235.809 54.3198 236.137 54.6948 236.652 54.6948 cv
237.105 54.6948 237.512 54.2891 237.512 53.7891 cv
237.512 53.2729 237.105 52.8198 236.637 52.8198 cv
236.637 52.8198 li
cp
236.98 56.6172 mo
236.934 56.5859 li
235.355 56.8672 234.48 57.0078 233.934 57.0229 cv
233.934 57.3052 li
234.402 57.3052 li
234.527 57.2891 li
234.668 57.2729 235.027 57.3828 235.105 57.4448 cv
235.184 57.5229 235.23 57.6802 235.23 57.8521 cv
235.23 58.0391 235.152 58.5078 234.949 59.2729 cv
233.684 64.4297 li
233.074 66.8516 232.668 67.6328 231.965 67.6328 cv
231.746 67.6328 231.652 67.5703 231.652 67.4453 cv
231.652 67.3672 231.668 67.3359 231.73 67.2422 cv
231.84 67.1016 231.871 67.0234 231.871 66.8828 cv
231.871 66.5078 231.559 66.2266 231.152 66.2266 cv
230.746 66.2266 230.449 66.5391 230.449 66.9609 cv
230.449 67.5859 231.027 68.0391 231.84 68.0391 cv
233.387 68.0391 234.434 66.6953 235.152 63.8828 cv
236.98 56.6172 li
cp
f
78.5508 7.69482 mo
78.2231 7.69482 77.9878 7.96094 77.9878 8.31982 cv
77.9878 8.71094 78.207 8.96094 78.5508 8.96094 cv
78.8628 8.96094 79.145 8.68018 79.145 8.35205 cv
79.145 8.00781 78.8628 7.69482 78.5508 7.69482 cv
78.5508 7.69482 li
cp
78.645 14.1479 mo
78.3481 14.5229 78.27 14.6172 78.145 14.7578 cv
77.9409 14.9609 77.77 15.0698 77.6602 15.0698 cv
77.5659 15.0698 77.4731 14.9771 77.4731 14.8979 cv
77.4731 14.7729 77.5039 14.6021 77.5981 14.3672 cv
77.5981 14.3359 77.6289 14.2578 77.645 14.1641 cv
77.645 14.1328 li
77.6602 14.1021 li
78.707 10.2578 li
78.6758 10.2422 li
77.4731 10.4609 77.2378 10.4922 76.77 10.5391 cv
76.77 10.7271 li
77.395 10.7422 77.52 10.7729 77.52 11.0078 cv
77.52 11.1021 77.4878 11.3052 77.4102 11.5391 cv
76.832 13.6479 li
76.645 14.3521 76.5659 14.7271 76.5659 14.9609 cv
76.5659 15.3979 76.77 15.6328 77.1289 15.6328 cv
77.6758 15.6328 78.1128 15.2729 78.8008 14.2729 cv
78.645 14.1479 li
cp
f
87.3711 13.2891 mo
84.8711 9.96094 li
83.6372 9.96094 li
81.168 13.2891 li
81.8398 13.2891 li
84.2622 11.2271 li
86.6841 13.2891 li
87.3711 13.2891 li
cp
f
85.9019 15.813 mo
86.7622 15.8438 87.1372 16.3589 87.1372 17.5161 cv
87.1372 18.8281 86.5591 20.5469 85.6992 21.7813 cv
84.8711 22.9531 83.918 23.5781 82.8711 23.5781 cv
82.3242 23.5781 81.918 23.2813 81.918 22.8438 cv
81.918 22.1563 82.6372 19.5469 83.2148 18.0781 cv
83.7461 16.7188 84.9019 15.75 85.9019 15.813 cv
85.9019 15.813 li
cp
80.6992 15.688 mo
81.168 15.688 li
81.168 15.688 81.1992 15.688 81.23 15.6719 cv
81.48 15.5469 81.9961 15.9219 81.9961 16.2188 cv
81.9961 16.4058 81.2769 19.2339 80.5898 21.8589 cv
80.043 23.8589 79.5742 25.75 79.4341 26.3281 cv
79.2148 27.2339 78.9492 27.4839 78.0898 27.5 cv
78.0898 27.813 li
82.1841 27.813 li
82.1841 27.5161 li
81.2461 27.5161 80.9019 27.3438 80.9019 26.9219 cv
80.9019 26.6411 81.2461 25.0938 81.6372 23.6089 cv
82.1372 23.875 82.4961 23.9531 82.9492 23.9531 cv
85.8711 23.9531 88.9341 20.6089 88.9341 17.438 cv
88.9341 15.8911 88.0591 14.9531 86.6372 14.9531 cv
85.3398 14.9531 84.3872 15.5938 83.23 17.2031 cv
83.8091 15.2031 li
83.8711 15.0313 li
83.8711 15.0313 83.855 15.0161 83.8398 14.9688 cv
83.793 14.9531 li
83.793 14.9219 83.7769 14.9219 83.7769 14.9219 cv
83.73 14.9531 li
80.668 15.3911 li
80.6992 15.688 li
cp
f
95.9771 18.8979 mo
95.5859 18.8979 95.2891 19.2109 95.2891 19.6802 cv
95.2891 20.1479 95.5698 20.4609 95.9922 20.4609 cv
96.3828 20.4609 96.7271 20.1172 96.7271 19.7109 cv
96.7271 19.2729 96.3828 18.8979 95.9771 18.8979 cv
95.9771 18.8979 li
cp
96.2729 22.0698 mo
96.2271 22.0391 li
94.9141 22.2729 94.1802 22.3828 93.7271 22.3979 cv
93.7271 22.6328 li
94.1172 22.6328 li
94.2271 22.6172 li
94.3521 22.6172 94.6328 22.6948 94.7109 22.7578 cv
94.7729 22.8198 94.8198 22.9448 94.8198 23.1021 cv
94.8198 23.2422 94.7422 23.6479 94.5859 24.2729 cv
93.5229 28.5859 li
93.0229 30.6021 92.6802 31.2578 92.0859 31.2578 cv
91.9141 31.2578 91.8198 31.1948 91.8198 31.0859 cv
91.8198 31.0391 91.8359 31.0078 91.8979 30.9302 cv
91.9922 30.8052 92.0078 30.7422 92.0078 30.6172 cv
92.0078 30.3052 91.7422 30.0698 91.4141 30.0698 cv
91.0698 30.0698 90.8198 30.3359 90.8198 30.6948 cv
90.8198 31.2109 91.3052 31.5859 91.9922 31.5859 cv
93.2729 31.5859 94.1479 30.4771 94.7422 28.1328 cv
96.2729 22.0698 li
cp
f
147.93 3.85889 mo
147.867 4.07813 li
147.883 4.20313 li
147.742 4.67188 li
147.727 4.84375 li
147.555 5.01611 li
147.492 5.25 li
147.367 5.43799 li
147.164 5.85889 li
146.945 6.25 li
146.586 6.76611 li
146.539 6.92188 li
146.352 7.23389 li
146.148 7.65625 li
145.789 8.31299 li
145.711 8.59375 li
145.523 8.875 li
145.164 8.75 li
144.961 8.625 li
144.773 8.06299 li
144.523 7.65625 li
144.523 7.54688 li
144.383 7.20313 li
144.32 7.125 li
143.82 6.07813 li
143.664 5.82813 li
143.539 6.03125 li
143.336 6.18799 li
143.07 6.56299 li
142.867 6.76611 li
142.758 7.07813 li
142.508 7.40576 li
142.477 7.51611 li
142.305 7.89111 li
142.305 8.06299 li
142.18 8.23389 li
142.164 8.40625 li
142.039 8.43799 li
141.773 8.71924 li
141.836 8.68799 li
141.75 8.73779 141.641 8.77002 141.508 8.78125 cv
141.414 8.68799 li
141.242 8.625 li
141.242 8.48389 li
141.164 8.39111 li
141.102 8.06299 li
141.008 7.84375 li
141.008 7.68799 li
140.992 7.64111 li
140.805 7.125 li
140.758 6.81299 li
140.648 6.67188 li
140.664 6.51611 li
140.539 6.23389 li
140.539 6.125 li
140.445 5.85889 li
140.273 5.625 li
140.305 5.35889 li
140.289 5.28125 li
140.164 4.96924 li
140.133 4.78076 li
140.07 4.65625 li
140.016 4.58594 139.98 4.50781 139.961 4.42188 cv
139.758 3.90625 li
139.914 3.68799 li
139.965 3.60498 140.07 3.54688 140.227 3.51611 cv
140.477 3.48389 li
140.555 3.60889 li
140.711 3.67188 li
140.82 3.89111 li
140.914 3.96875 li
140.883 4.17188 li
140.93 4.28125 li
140.898 4.39111 li
141.008 4.59424 li
140.992 4.76611 li
141.148 5.31299 li
141.117 5.43799 li
141.195 5.76611 li
141.367 6.14111 li
141.43 6.60889 li
141.555 6.75 li
141.555 7.03076 li
141.633 7.28125 li
141.648 7.39111 li
141.82 7.28125 li
142.086 6.82813 li
142.18 6.625 li
142.273 6.45313 li
142.273 6.38281 142.289 6.32422 142.32 6.28076 cv
142.398 6.28076 li
142.43 6.06299 li
142.555 6.04688 li
142.574 5.97705 142.609 5.92188 142.664 5.89111 cv
142.664 5.875 li
142.664 5.82422 142.688 5.77686 142.742 5.73389 cv
142.711 5.64111 li
142.773 5.625 li
142.758 5.54688 li
142.828 5.42188 142.914 5.32813 143.008 5.26611 cv
143.008 5.01611 li
143.18 4.92188 li
143.227 4.89111 li
143.242 4.85889 li
143.199 4.78906 143.18 4.69922 143.18 4.59424 cv
143.18 4.46094 143.246 4.31982 143.383 4.17188 cv
143.453 4.14111 143.543 4.125 143.648 4.125 cv
143.711 4.125 143.758 4.13281 143.789 4.14111 cv
144.008 4.34375 li
144.133 4.53125 li
144.211 4.81299 li
144.32 5 li
144.289 5.14111 li
144.367 5.40625 li
144.367 5.51611 li
144.57 5.875 li
144.57 5.90576 li
144.633 5.93799 li
144.867 6.51611 li
144.883 6.67188 li
144.992 6.81299 li
145.273 7.43799 li
145.336 7.32813 li
145.555 6.875 li
145.68 6.76611 li
145.773 6.51611 li
145.898 6.45313 li
145.898 6.28076 li
145.949 6.24219 146.012 6.19922 146.086 6.15625 cv
146.137 6.13721 146.164 6.11719 146.164 6.09424 cv
146.148 5.84375 li
146.289 5.70313 li
146.352 5.67188 li
146.539 5.35889 li
146.539 5.32813 li
146.547 5.24609 146.602 5.14795 146.695 5.03125 cv
146.664 4.90625 li
146.883 4.64111 li
146.992 4.375 li
146.898 4.13721 146.852 3.93408 146.852 3.76611 cv
146.852 3.51611 146.98 3.375 147.242 3.34375 cv
147.57 3.43799 li
147.617 3.35889 li
147.695 3.46924 li
147.82 3.56299 li
147.773 3.68799 li
147.93 3.85889 li
cp
.360784 .360784 .360784 rgb
f
153.531 8.57813 mo
153.531 8.89795 153.359 9.06299 153.016 9.06299 cv
152.848 9.06299 152.727 8.99219 152.656 8.85889 cv
152.57 8.74219 152.504 8.53076 152.453 8.21875 cv
152.453 8.06299 li
152.473 8.02295 152.484 7.97998 152.484 7.93799 cv
152.484 7.91797 152.477 7.89795 152.469 7.875 cv
152.297 7.625 li
152.422 7.39111 li
152.375 7.14111 li
152.422 7 li
152.422 6.84424 li
152.453 6.70313 li
152.391 6.48389 li
152.453 6.375 li
152.453 5.46875 li
152.375 5.06299 li
152.422 4.92188 li
152.344 4.625 li
152.234 4.70313 li
151.984 4.81299 li
151.625 5.26611 li
151.469 5.26611 li
151.266 5.60889 li
151.219 5.75 li
151.094 5.81299 li
150.953 6.01611 li
150.891 6.14111 li
150.766 6.56299 li
150.547 6.82813 li
150.5 7 li
150.375 7.09375 li
150.328 7.39111 li
150.094 7.59424 li
150.063 8.04688 li
149.953 8.04688 li
149.906 8.10889 li
149.703 8.48389 li
149.5 8.70313 li
149.313 8.93799 li
149.125 8.89111 li
148.969 8.89111 li
148.828 8.68799 li
148.688 8.26611 li
148.672 7.625 li
148.625 7.42188 li
148.672 7.17188 li
148.641 6.60889 li
148.734 6.59375 li
148.797 5.76611 li
148.844 5.60889 li
148.813 5.35889 li
148.875 5.31299 li
148.922 4.93799 li
148.969 4.79688 li
148.922 4.64111 li
148.953 4.57813 li
148.938 4.54688 li
148.969 4.20313 li
148.875 4.125 li
148.953 3.95313 li
148.938 3.60889 li
148.813 3.25 li
148.906 3.14111 li
148.828 2.82813 li
148.828 2.625 li
148.781 2.54688 li
148.719 2.15576 li
148.672 1.98389 li
148.484 1.64111 li
148.625 1.46875 li
148.734 1.26611 li
148.844 1.26611 li
149.02 1.26611 149.148 1.32813 149.234 1.45313 cv
149.406 1.59424 li
149.484 1.79688 li
149.656 1.95313 li
149.625 2.125 li
149.703 2.375 li
149.703 2.40625 li
149.719 2.42188 li
149.703 2.82813 li
149.719 3.34375 li
149.813 3.68799 li
149.75 3.82813 li
149.766 4.03076 li
149.703 4.20313 li
149.75 4.48389 li
149.688 4.73389 li
149.703 4.78076 li
149.688 5.51611 li
149.719 5.67188 li
149.656 5.76611 li
149.609 6.15625 li
149.563 6.34375 li
149.609 6.65576 li
149.563 6.76611 li
149.547 7 li
149.641 6.97998 149.688 6.93408 149.688 6.85889 cv
149.781 6.76611 li
149.859 6.60889 li
149.891 6.375 li
150.016 6.18799 li
150.094 5.93799 li
150.281 5.75 li
150.328 5.51611 li
150.438 5.51611 li
150.438 5.40625 li
150.453 5.26611 li
150.594 5.17188 li
150.594 5.07813 li
150.719 5.06299 li
150.734 4.85889 li
150.734 4.76611 li
150.953 4.67188 li
151 4.625 li
150.984 4.5 li
151.094 4.46875 li
151.172 4.26611 li
151.313 4.26611 li
151.453 4.17188 li
151.453 4.12109 151.457 4.08594 151.469 4.06299 cv
151.594 4 li
151.738 3.875 151.875 3.80518 152 3.78125 cv
152 3.76611 li
152.207 3.66406 152.352 3.60889 152.438 3.60889 cv
152.551 3.60889 152.66 3.66406 152.766 3.76611 cv
152.848 3.79688 152.898 3.85889 152.922 3.95313 cv
153.031 4.01611 li
153.063 4.18799 li
153.25 4.46875 li
153.25 5.42188 li
153.234 5.84375 li
153.281 5.95313 li
153.281 6.84424 li
153.25 7 li
153.25 7.23389 li
153.281 7.5 li
153.234 7.73389 li
153.266 7.85205 153.285 7.94922 153.297 8.03125 cv
153.438 8.15576 li
153.438 8.26611 li
153.484 8.29688 li
153.516 8.43408 153.531 8.52686 153.531 8.57813 cv
153.531 8.57813 li
cp
f
158.473 4.46875 mo
158.426 4.39111 li
158.332 4.35889 li
157.957 4.06299 li
157.723 4.01611 li
157.535 4.01611 li
157.504 4 li
157.41 4.03076 li
157.301 3.96875 li
156.988 3.96875 li
157.035 4.01611 li
156.754 4.125 li
156.707 4.17188 li
156.676 4.18799 li
156.527 4.31299 156.426 4.41406 156.363 4.48389 cv
156.285 4.78076 li
156.238 4.89111 li
156.363 5.06299 li
156.16 5.21875 li
156.176 5.26611 li
156.09 5.41406 156.051 5.55908 156.051 5.70313 cv
155.941 5.82813 li
155.941 6.04688 li
155.848 6.14111 li
155.832 6.25 li
155.785 6.28076 li
155.785 6.45313 li
155.754 6.5 li
155.754 6.60498 155.746 6.68408 155.738 6.73389 cv
155.754 6.79688 li
155.645 7.01611 li
155.691 7.09375 li
155.613 7.21924 li
155.691 7.43799 li
155.566 7.60889 li
155.582 7.84375 li
155.582 7.875 li
155.629 7.90625 li
155.691 7.89111 li
155.73 7.85205 155.773 7.81299 155.816 7.78076 cv
155.785 7.68799 li
155.957 7.65625 li
156.004 7.57813 li
156.707 7 li
156.77 6.96875 li
156.863 6.76611 li
156.902 6.75781 156.973 6.72705 157.066 6.67188 cv
157.129 6.48389 li
157.238 6.48389 li
157.191 6.28076 li
157.363 6.25 li
157.383 6.21875 157.41 6.18408 157.441 6.14111 cv
157.48 6.08984 157.52 6.04297 157.551 6 cv
158.176 5.18799 li
158.27 5 li
158.254 4.95313 li
158.332 4.82813 li
158.363 4.68799 li
158.473 4.59424 li
158.473 4.46875 li
cp
159.613 3.84424 mo
159.504 4 li
159.598 4.28125 li
159.441 4.46875 li
159.379 4.71875 li
159.348 4.78076 li
159.363 4.84375 li
159.363 4.94922 159.336 5.03125 159.285 5.09375 cv
159.254 5.125 li
159.254 5.17188 li
159.285 5.23389 159.301 5.28906 159.301 5.32813 cv
159.301 5.37109 159.293 5.40186 159.285 5.42188 cv
159.301 5.46875 li
159.254 5.59375 li
159.285 5.73389 li
159.191 5.82813 li
159.223 6 li
159.301 6.09424 li
159.191 6.18799 li
159.191 6.375 li
159.098 6.56299 li
159.16 6.76611 li
159.098 6.85889 li
159.207 6.93799 li
159.051 7.21924 li
159.035 7.25 li
159.16 7.28125 li
159.066 7.54688 li
159.066 7.59424 li
159.066 7.65625 159.059 7.70313 159.051 7.73389 cv
159.066 7.76611 li
159.254 7.79688 li
159.41 8.03125 li
159.332 8.21875 li
159.457 8.20313 li
159.508 8.29688 159.539 8.38281 159.551 8.45313 cv
159.363 8.625 li
159.309 8.68799 159.23 8.74219 159.129 8.79688 cv
158.926 8.90576 li
158.863 8.84375 li
158.738 8.92188 li
158.379 8.48389 li
158.379 8.28125 li
158.324 8.125 158.301 7.97998 158.301 7.84375 cv
158.301 7.76611 li
158.223 7.06299 li
158.332 6.56299 li
158.254 6.26611 li
158.051 6.60889 li
157.941 6.92188 li
157.848 6.96875 li
157.676 7.23389 li
157.379 7.5 li
157.285 7.64111 li
157.035 7.875 li
156.973 8.03125 li
156.582 8.26611 li
156.176 8.73389 li
155.941 8.78125 li
155.785 8.89111 li
155.586 8.89111 155.434 8.81592 155.332 8.67188 cv
154.977 8.49609 154.789 8.24219 154.77 7.90625 cv
154.832 7.875 li
154.816 7.79688 li
154.801 7.65625 li
154.738 7.5 li
154.801 7.32813 li
154.832 7.07813 li
154.91 6.68799 li
154.91 6.68018 154.91 6.66406 154.91 6.64111 cv
154.91 6.62109 154.91 6.60498 154.91 6.59375 cv
154.91 6.56299 154.914 6.52295 154.926 6.46924 cv
154.914 6.46094 154.91 6.43018 154.91 6.375 cv
154.91 6.32422 154.934 6.22998 154.988 6.09424 cv
155.066 6.06299 li
155.023 6.02295 155.004 5.97998 155.004 5.93799 cv
155.004 5.90576 155.008 5.88281 155.02 5.85889 cv
155.008 5.83984 155.004 5.81299 155.004 5.78125 cv
155.004 5.68018 155.051 5.60498 155.145 5.56299 cv
155.164 5.47998 155.207 5.39795 155.27 5.31299 cv
155.223 5.21875 li
155.363 5.04688 li
155.363 5 li
155.363 4.84375 155.414 4.70313 155.52 4.57813 cv
155.504 4.35889 li
155.551 4.31299 li
155.551 4.30518 155.551 4.29297 155.551 4.28125 cv
155.539 4.26221 155.535 4.24609 155.535 4.23389 cv
155.535 4.19482 155.551 4.15625 155.582 4.125 cv
155.582 4.04688 li
155.613 3.96484 155.695 3.84424 155.832 3.68799 cv
155.977 3.53125 156.082 3.39111 156.145 3.26611 cv
156.207 3.32813 li
156.332 3.26611 li
156.395 3.25 li
156.785 3.06299 li
157.707 3.10889 li
157.707 3.18799 li
158.004 3.25 li
158.18 3.25 158.301 3.31299 158.363 3.43799 cv
158.363 3.41797 158.367 3.38721 158.379 3.34375 cv
158.379 3.32422 158.379 3.30908 158.379 3.29688 cv
158.629 3.53125 li
158.848 3.57813 li
159.285 3.46924 li
159.441 3.76611 li
159.613 3.84424 li
cp
f
164.734 4.39111 mo
164.734 4.46484 164.66 4.53125 164.516 4.59424 cv
164.484 4.63721 164.426 4.67188 164.344 4.70313 cv
164.227 4.75781 164.145 4.79688 164.094 4.82813 cv
163.844 4.75 li
163.719 4.84375 163.555 4.89111 163.359 4.89111 cv
163.219 4.84375 li
163.109 4.95313 li
162.781 4.95313 li
162.578 5.07813 li
162.484 5.04688 162.398 5.03125 162.328 5.03125 cv
162.297 5.05518 162.238 5.06982 162.156 5.07813 cv
162.113 5.07813 162.07 5.06982 162.031 5.04688 cv
161.984 5.5 li
162 5.82813 li
161.969 6.25 li
161.984 6.71875 li
162.031 6.92188 li
162.031 7.09375 li
162.188 7.45313 li
162.164 7.47705 162.156 7.50781 162.156 7.54688 cv
162.156 7.60205 162.242 7.64111 162.422 7.67188 cv
162.438 7.81299 li
162.531 7.84375 li
162.672 7.95313 li
162.766 8.01611 li
162.848 8.00781 162.906 8 162.938 8 cv
163.008 8 163.082 8.01221 163.156 8.03125 cv
163.188 8.01221 163.254 7.95313 163.359 7.85889 cv
163.43 7.79688 163.5 7.76611 163.563 7.76611 cv
163.57 7.76611 163.582 7.76611 163.594 7.76611 cv
163.613 7.77686 163.625 7.78076 163.625 7.78076 cv
163.695 7.625 163.828 7.52686 164.016 7.48389 cv
164.18 7.48389 164.32 7.53906 164.438 7.64111 cv
164.438 7.71875 li
164.438 7.99219 164.336 8.16406 164.141 8.23389 cv
164.078 8.40186 163.926 8.51221 163.688 8.56299 cv
163.547 8.68799 li
163.391 8.68799 li
163.109 8.76611 li
163.047 8.77295 162.957 8.78125 162.844 8.78125 cv
162.781 8.78125 162.711 8.76611 162.641 8.73389 cv
162.484 8.73389 li
162.063 8.51611 li
161.953 8.46875 li
161.703 8.14111 li
161.563 7.98389 li
161.297 7.39111 li
161.203 6.81299 li
161.219 6.67188 li
161.125 6.54688 li
161.188 6.375 li
161.125 6.10889 li
161.203 6.03125 li
161.234 5.875 li
161.203 5.73389 li
161.219 5.51611 li
161.172 5.31299 li
161.234 5.26611 li
161.234 5.06299 li
161.141 5.03125 li
160.922 5.07813 li
160.703 4.92188 li
160.672 4.92188 li
160.434 4.92188 160.313 4.79688 160.313 4.54688 cv
160.313 4.5 li
160.156 4.28125 li
160.391 4.06299 li
160.688 4.10889 li
160.844 4.07813 li
161.078 4.14111 li
161.328 4.14111 li
161.328 3.90625 li
161.172 3.56299 li
161.328 3.48389 li
161.266 3.29688 li
161.281 2.93799 li
161.188 2.78125 li
161.125 2.68799 161.094 2.60498 161.094 2.53076 cv
161.094 2.44922 161.113 2.375 161.156 2.31299 cv
161.203 2.15576 li
161.297 2.06299 li
161.504 2.02295 161.645 2 161.719 2 cv
161.977 2 162.117 2.11719 162.141 2.34424 cv
162.109 2.40625 li
162.16 2.47998 162.188 2.54688 162.188 2.60889 cv
162.188 2.62109 162.18 2.64111 162.172 2.67188 cv
162.141 2.73389 li
162.125 2.82813 li
162.188 2.98389 li
162.172 3.04688 li
162.188 3.20313 li
162.078 3.34375 li
162.141 3.59375 li
162.094 3.875 li
162.188 3.98389 li
162.094 4.20313 li
162.469 4.15625 li
163.125 4.21924 li
163.656 4.125 li
163.844 4.14111 li
163.891 4.125 li
164.359 4.125 li
164.609 4.125 164.734 4.21484 164.734 4.39111 cv
164.734 4.39111 li
cp
f
172.02 4.39111 mo
172.02 4.46484 171.945 4.53125 171.801 4.59424 cv
171.77 4.63721 171.711 4.67188 171.629 4.70313 cv
171.512 4.75781 171.43 4.79688 171.379 4.82813 cv
171.129 4.75 li
171.004 4.84375 170.84 4.89111 170.645 4.89111 cv
170.504 4.84375 li
170.395 4.95313 li
170.066 4.95313 li
169.863 5.07813 li
169.77 5.04688 169.684 5.03125 169.613 5.03125 cv
169.582 5.05518 169.523 5.06982 169.441 5.07813 cv
169.398 5.07813 169.355 5.06982 169.316 5.04688 cv
169.27 5.5 li
169.285 5.82813 li
169.254 6.25 li
169.27 6.71875 li
169.316 6.92188 li
169.316 7.09375 li
169.473 7.45313 li
169.449 7.47705 169.441 7.50781 169.441 7.54688 cv
169.441 7.60205 169.527 7.64111 169.707 7.67188 cv
169.723 7.81299 li
169.816 7.84375 li
169.957 7.95313 li
170.051 8.01611 li
170.133 8.00781 170.191 8 170.223 8 cv
170.293 8 170.367 8.01221 170.441 8.03125 cv
170.473 8.01221 170.539 7.95313 170.645 7.85889 cv
170.715 7.79688 170.785 7.76611 170.848 7.76611 cv
170.855 7.76611 170.867 7.76611 170.879 7.76611 cv
170.898 7.77686 170.91 7.78076 170.91 7.78076 cv
170.98 7.625 171.113 7.52686 171.301 7.48389 cv
171.465 7.48389 171.605 7.53906 171.723 7.64111 cv
171.723 7.71875 li
171.723 7.99219 171.621 8.16406 171.426 8.23389 cv
171.363 8.40186 171.211 8.51221 170.973 8.56299 cv
170.832 8.68799 li
170.676 8.68799 li
170.395 8.76611 li
170.332 8.77295 170.242 8.78125 170.129 8.78125 cv
170.066 8.78125 169.996 8.76611 169.926 8.73389 cv
169.77 8.73389 li
169.348 8.51611 li
169.238 8.46875 li
168.988 8.14111 li
168.848 7.98389 li
168.582 7.39111 li
168.488 6.81299 li
168.504 6.67188 li
168.41 6.54688 li
168.473 6.375 li
168.41 6.10889 li
168.488 6.03125 li
168.52 5.875 li
168.488 5.73389 li
168.504 5.51611 li
168.457 5.31299 li
168.52 5.26611 li
168.52 5.06299 li
168.426 5.03125 li
168.207 5.07813 li
167.988 4.92188 li
167.957 4.92188 li
167.719 4.92188 167.598 4.79688 167.598 4.54688 cv
167.598 4.5 li
167.441 4.28125 li
167.676 4.06299 li
167.973 4.10889 li
168.129 4.07813 li
168.363 4.14111 li
168.613 4.14111 li
168.613 3.90625 li
168.457 3.56299 li
168.613 3.48389 li
168.551 3.29688 li
168.566 2.93799 li
168.473 2.78125 li
168.41 2.68799 168.379 2.60498 168.379 2.53076 cv
168.379 2.44922 168.398 2.375 168.441 2.31299 cv
168.488 2.15576 li
168.582 2.06299 li
168.789 2.02295 168.93 2 169.004 2 cv
169.262 2 169.402 2.11719 169.426 2.34424 cv
169.395 2.40625 li
169.445 2.47998 169.473 2.54688 169.473 2.60889 cv
169.473 2.62109 169.465 2.64111 169.457 2.67188 cv
169.426 2.73389 li
169.41 2.82813 li
169.473 2.98389 li
169.457 3.04688 li
169.473 3.20313 li
169.363 3.34375 li
169.426 3.59375 li
169.379 3.875 li
169.473 3.98389 li
169.379 4.20313 li
169.754 4.15625 li
170.41 4.21924 li
170.941 4.125 li
171.129 4.14111 li
171.176 4.125 li
171.645 4.125 li
171.895 4.125 172.02 4.21484 172.02 4.39111 cv
172.02 4.39111 li
cp
f
177.613 8.57813 mo
177.613 8.89795 177.441 9.06299 177.098 9.06299 cv
176.93 9.06299 176.809 8.99219 176.738 8.85889 cv
176.652 8.74219 176.586 8.53076 176.535 8.21875 cv
176.535 8.06299 li
176.555 8.02295 176.566 7.97998 176.566 7.93799 cv
176.566 7.91797 176.559 7.89795 176.551 7.875 cv
176.379 7.625 li
176.504 7.39111 li
176.457 7.14111 li
176.504 7 li
176.504 6.84424 li
176.535 6.70313 li
176.473 6.48389 li
176.535 6.375 li
176.535 5.46875 li
176.457 5.06299 li
176.504 4.92188 li
176.426 4.625 li
176.316 4.70313 li
176.066 4.81299 li
175.707 5.26611 li
175.551 5.26611 li
175.348 5.60889 li
175.301 5.75 li
175.176 5.81299 li
175.035 6.01611 li
174.973 6.14111 li
174.848 6.56299 li
174.629 6.82813 li
174.582 7 li
174.457 7.09375 li
174.41 7.39111 li
174.176 7.59424 li
174.145 8.04688 li
174.035 8.04688 li
173.988 8.10889 li
173.785 8.48389 li
173.582 8.70313 li
173.395 8.93799 li
173.207 8.89111 li
173.051 8.89111 li
172.91 8.68799 li
172.77 8.26611 li
172.754 7.625 li
172.707 7.42188 li
172.754 7.17188 li
172.723 6.60889 li
172.816 6.59375 li
172.879 5.76611 li
172.926 5.60889 li
172.895 5.35889 li
172.957 5.31299 li
173.004 4.93799 li
173.051 4.79688 li
173.004 4.64111 li
173.035 4.57813 li
173.02 4.54688 li
173.051 4.20313 li
172.957 4.125 li
173.035 3.95313 li
173.02 3.60889 li
172.895 3.25 li
172.988 3.14111 li
172.91 2.82813 li
172.91 2.625 li
172.863 2.54688 li
172.801 2.15576 li
172.754 1.98389 li
172.566 1.64111 li
172.707 1.46875 li
172.816 1.26611 li
172.926 1.26611 li
173.102 1.26611 173.23 1.32813 173.316 1.45313 cv
173.488 1.59424 li
173.566 1.79688 li
173.738 1.95313 li
173.707 2.125 li
173.785 2.375 li
173.785 2.40625 li
173.801 2.42188 li
173.785 2.82813 li
173.801 3.34375 li
173.895 3.68799 li
173.832 3.82813 li
173.848 4.03076 li
173.785 4.20313 li
173.832 4.48389 li
173.77 4.73389 li
173.785 4.78076 li
173.77 5.51611 li
173.801 5.67188 li
173.738 5.76611 li
173.691 6.15625 li
173.645 6.34375 li
173.691 6.65576 li
173.645 6.76611 li
173.629 7 li
173.723 6.97998 173.77 6.93408 173.77 6.85889 cv
173.863 6.76611 li
173.941 6.60889 li
173.973 6.375 li
174.098 6.18799 li
174.176 5.93799 li
174.363 5.75 li
174.41 5.51611 li
174.52 5.51611 li
174.52 5.40625 li
174.535 5.26611 li
174.676 5.17188 li
174.676 5.07813 li
174.801 5.06299 li
174.816 4.85889 li
174.816 4.76611 li
175.035 4.67188 li
175.082 4.625 li
175.066 4.5 li
175.176 4.46875 li
175.254 4.26611 li
175.395 4.26611 li
175.535 4.17188 li
175.535 4.12109 175.539 4.08594 175.551 4.06299 cv
175.676 4 li
175.82 3.875 175.957 3.80518 176.082 3.78125 cv
176.082 3.76611 li
176.289 3.66406 176.434 3.60889 176.52 3.60889 cv
176.633 3.60889 176.742 3.66406 176.848 3.76611 cv
176.93 3.79688 176.98 3.85889 177.004 3.95313 cv
177.113 4.01611 li
177.145 4.18799 li
177.332 4.46875 li
177.332 5.42188 li
177.316 5.84375 li
177.363 5.95313 li
177.363 6.84424 li
177.332 7 li
177.332 7.23389 li
177.363 7.5 li
177.316 7.73389 li
177.348 7.85205 177.367 7.94922 177.379 8.03125 cv
177.52 8.15576 li
177.52 8.26611 li
177.566 8.29688 li
177.598 8.43408 177.613 8.52686 177.613 8.57813 cv
177.613 8.57813 li
cp
f
181.527 4.26611 mo
181.527 4.24609 181.512 4.19922 181.48 4.125 cv
181.434 4.10889 li
181.402 4.125 li
181.391 4.125 181.375 4.125 181.355 4.125 cv
181.332 4.125 181.316 4.125 181.309 4.125 cv
181.297 4.125 181.285 4.125 181.277 4.125 cv
181.254 4.125 181.238 4.125 181.23 4.125 cv
181.121 4.20313 li
181.012 4.21924 li
180.949 4.23389 li
180.746 4.5 li
180.605 4.59424 li
180.418 4.93799 li
180.309 5 li
180.285 5.14795 180.23 5.26611 180.137 5.35889 cv
180.09 5.43799 li
180.184 5.38721 180.281 5.35889 180.387 5.35889 cv
180.48 5.31299 li
180.512 5.21875 li
180.684 5.21875 li
180.777 5.07813 li
180.855 5.07813 li
180.98 5.125 li
181.043 4.95313 li
181.121 4.95313 li
181.121 4.81299 li
181.277 4.78076 li
181.324 4.75 li
181.34 4.64111 li
181.496 4.40576 li
181.516 4.36719 181.527 4.31982 181.527 4.26611 cv
181.527 4.26611 li
cp
182.715 7.71875 mo
182.715 7.81299 182.641 7.93408 182.496 8.07813 cv
182.453 8.20313 182.391 8.30908 182.309 8.39111 cv
182.246 8.40625 li
182.105 8.625 li
181.887 8.67188 li
181.668 8.81299 li
181.543 9.03125 li
181.418 9 li
181.324 9.03906 181.25 9.06592 181.199 9.07813 cv
181.121 9.18799 li
181.098 9.17578 181.063 9.17188 181.012 9.17188 cv
180.906 9.17188 180.809 9.24219 180.715 9.39111 cv
180.543 9.25 li
180.512 9.25 180.465 9.25 180.402 9.25 cv
180.297 9.25 180.207 9.23389 180.137 9.20313 cv
179.934 9.20313 li
179.84 9.14111 li
179.535 9.09814 179.344 8.98389 179.262 8.79688 cv
179.262 8.76611 li
179.121 8.68799 li
179.043 8.48389 li
178.902 8.39111 li
178.902 8.21875 li
178.762 7.68799 li
178.793 7.25 li
178.84 7.06299 li
178.84 6.81299 li
178.887 6.60889 li
178.887 6.53125 li
178.965 6.39111 li
178.949 6.40625 li
178.949 6.33594 178.965 6.26221 178.996 6.18799 cv
178.996 6.125 li
178.965 5.82813 li
178.965 5.69482 179.027 5.57422 179.152 5.46875 cv
179.152 5.46094 179.152 5.43799 179.152 5.40625 cv
179.152 5.375 179.137 5.31299 179.105 5.21875 cv
179.082 5.11719 179.074 5.04297 179.074 5 cv
179.074 4.89795 179.098 4.79297 179.152 4.68799 cv
179.215 4.79297 179.301 4.84375 179.418 4.84375 cv
179.465 4.84375 li
179.473 4.81299 179.504 4.77686 179.559 4.73389 cv
179.629 4.53906 179.719 4.37109 179.824 4.23389 cv
179.871 4.17188 li
179.871 4.14111 179.895 4.05518 179.949 3.90625 cv
180.043 3.90625 li
180.074 3.84424 li
180.168 3.81299 li
180.207 3.75 180.234 3.71484 180.246 3.70313 cv
180.254 3.69482 180.34 3.64795 180.496 3.56299 cv
180.527 3.5 180.578 3.44922 180.652 3.40625 cv
180.684 3.38721 180.719 3.36719 180.762 3.34375 cv
180.809 3.28076 li
181.027 3.21094 181.16 3.17188 181.215 3.17188 cv
181.285 3.17188 181.348 3.18799 181.402 3.21875 cv
181.465 3.20313 li
181.543 3.25 li
181.637 3.32422 181.734 3.38721 181.84 3.43799 cv
182.043 3.59375 li
182.043 3.64111 li
182.219 3.78906 182.309 3.99219 182.309 4.25 cv
182.277 4.375 li
182.309 4.76611 li
182.199 4.84375 li
182.09 5.15576 li
181.855 5.40625 li
181.84 5.59375 li
181.59 5.78125 181.355 5.93408 181.137 6.04688 cv
181.063 6.15186 180.953 6.20313 180.809 6.20313 cv
180.762 6.20313 li
180.543 6.34375 li
180.34 6.34375 li
180.059 6.46924 li
179.84 6.35889 li
179.824 6.35889 li
179.801 6.42188 179.785 6.52295 179.777 6.65576 cv
179.668 6.71875 li
179.668 6.85889 li
179.59 7.07813 li
179.609 7.26611 179.621 7.38721 179.621 7.43799 cv
179.574 7.48389 li
179.574 7.58984 179.566 7.66406 179.559 7.70313 cv
179.559 7.71484 179.559 7.72998 179.559 7.75 cv
179.559 7.76221 179.559 7.77295 179.559 7.78076 cv
179.559 7.84375 179.59 7.89795 179.652 7.93799 cv
179.672 8.03125 179.715 8.08984 179.777 8.10889 cv
179.855 8.18799 li
180.121 8.26611 li
180.121 8.29688 li
180.215 8.31299 li
180.621 8.34424 li
180.855 8.31299 li
180.98 8.21875 li
181.059 8.20313 li
181.168 8.01611 li
181.23 8 li
181.527 7.90625 li
181.566 7.85498 181.621 7.80908 181.684 7.76611 cv
181.73 7.70313 li
181.887 7.67188 181.973 7.58984 181.996 7.45313 cv
182.109 7.33984 182.254 7.28125 182.434 7.28125 cv
182.48 7.28125 li
182.637 7.46094 182.715 7.60498 182.715 7.71875 cv
182.715 7.71875 li
cp
f
190.254 7.10889 mo
190.254 7 li
190.191 6.78125 li
190.238 6.67188 li
190.191 6.57813 li
190.176 6.45313 li
190.082 6.26611 li
190.035 6.14111 li
189.848 5.82813 li
189.707 5.70313 li
189.629 5.5 li
189.52 5.45313 li
189.332 5.20313 li
189.129 5.21875 li
188.988 5.03125 li
188.863 5.06299 li
188.785 4.90625 li
188.738 4.89111 li
188.566 4.89111 li
188.441 4.95313 li
188.348 4.84375 li
188.238 4.875 li
188.191 4.79688 li
187.973 4.75 li
187.973 4.90625 li
187.957 5.125 li
188.004 5.26611 li
188.176 5.42188 li
188.035 5.70313 li
188.051 5.89111 li
187.988 6.25 li
188.02 6.39795 188.066 6.52295 188.129 6.625 cv
188.082 6.76611 li
188.09 6.76611 188.098 6.77295 188.098 6.78125 cv
188.098 6.80518 188.066 6.83984 188.004 6.89111 cv
188.082 7 li
188.035 7.14111 li
188.004 7.29688 li
188.035 7.46875 li
188.035 7.625 li
188.285 7.625 li
188.316 7.60498 188.355 7.59424 188.41 7.59424 cv
188.48 7.59424 188.543 7.62109 188.598 7.67188 cv
188.605 7.67188 188.621 7.66797 188.645 7.65625 cv
188.664 7.65625 188.68 7.65625 188.691 7.65625 cv
188.711 7.65625 188.754 7.66797 188.816 7.68799 cv
188.867 7.65625 188.914 7.64111 188.957 7.64111 cv
189.02 7.64111 189.074 7.65625 189.129 7.68799 cv
189.238 7.68799 li
189.332 7.71875 li
189.582 7.64111 li
189.77 7.76611 li
189.84 7.78906 189.867 7.79688 189.848 7.79688 cv
190.082 7.57813 li
190.098 7.40576 li
190.16 7.39111 li
190.129 7.28125 li
190.207 7.18799 li
190.254 7.10889 li
cp
191.16 6.92188 mo
191.02 7.28125 li
191.113 7.53125 li
191.066 7.59424 li
191.02 7.79688 li
190.926 7.95313 li
190.879 7.98389 li
190.848 8.21875 li
190.629 8.23389 li
190.512 8.33984 190.398 8.42188 190.285 8.48389 cv
190.207 8.46875 li
190.035 8.53076 li
189.926 8.54688 li
189.691 8.625 li
189.426 8.51611 li
189.395 8.48389 li
189.191 8.5 li
189.238 8.51611 li
188.91 8.46875 li
188.598 8.54688 li
188.488 8.43799 li
188.238 8.46875 li
188.129 8.39111 li
188.129 8.39111 188.098 8.39795 188.035 8.40625 cv
188.035 8.46875 li
188.035 8.54297 188.023 8.61719 188.004 8.68799 cv
188.035 8.92188 li
187.941 9.04688 li
187.961 9.21094 187.973 9.34375 187.973 9.43799 cv
187.926 9.73389 li
187.973 10.188 li
187.879 10.313 li
187.926 10.4839 li
187.895 10.6089 li
187.973 10.6411 li
187.973 10.8281 li
187.98 10.8789 187.988 10.9141 187.988 10.938 cv
187.988 11.0078 187.945 11.0659 187.863 11.1089 cv
187.91 11.2813 li
187.848 11.375 li
187.832 11.8589 li
187.801 12.4219 187.676 12.7031 187.457 12.7031 cv
187.402 12.7031 187.262 12.6719 187.035 12.6089 cv
187.066 12.25 li
187.004 11.7188 li
187.113 11.5 li
187.129 11.2339 li
187.082 10.875 li
187.176 10.7188 li
187.066 10.438 li
187.145 10.2969 li
187.082 10.063 li
187.176 9.84424 li
187.152 9.78906 187.121 9.74219 187.082 9.70313 cv
187.039 9.67188 187.02 9.64502 187.02 9.625 cv
187.02 9.60205 187.043 9.58203 187.098 9.56299 cv
187.098 9.53125 187.098 9.48779 187.098 9.43799 cv
187.098 9.33203 187.117 9.19482 187.16 9.03125 cv
187.098 8.90576 li
187.129 8.75 li
187.051 8.64111 li
187.145 8.51611 li
187.098 8.15576 li
187.176 7.67188 li
187.098 7.51611 li
187.223 7.28125 li
187.082 7.15625 li
187.16 6.92188 li
187.082 6.85889 li
187.098 6.65576 li
187.16 6.40625 li
187.16 6.35889 li
187.176 6.31299 li
187.176 6.18799 li
187.191 6.14111 li
187.129 5.93799 li
187.191 5.73389 li
187.129 5.57813 li
187.176 5.40625 li
187.129 5.35889 li
187.16 5.10889 li
187.129 4.98389 li
187.145 4.85889 li
187.113 4.78076 li
186.691 4.96924 li
186.691 4.90625 li
186.598 4.90625 li
186.473 5.03125 li
186.363 5.03125 li
186.223 5.21875 li
186.098 5.17188 li
186.035 5.29688 li
185.641 5.06982 185.441 4.88721 185.441 4.75 cv
185.441 4.64795 185.48 4.56299 185.551 4.5 cv
185.551 4.32813 li
185.77 4.19482 185.977 4.125 186.176 4.125 cv
186.27 4.03076 li
186.645 3.875 li
186.738 3.79688 li
187.066 3.81299 li
187.129 3.79688 li
187.238 3.375 li
187.52 3.43799 li
187.723 3.75 li
187.832 3.64111 li
188.035 3.79688 li
188.137 3.79688 188.242 3.81982 188.348 3.85889 cv
188.395 3.96875 li
188.488 3.92188 li
188.582 4 li
188.633 4 188.676 4.00781 188.707 4.01611 cv
188.707 4.07813 li
188.957 4 li
189.098 4.14111 li
189.332 4.21924 li
189.473 4.40576 li
189.77 4.59424 li
189.785 4.60889 li
190.004 4.68799 li
190.004 4.75 li
190.066 4.80518 190.113 4.87109 190.145 4.95313 cv
190.254 5 li
190.316 5.14111 li
190.457 5.14111 li
190.457 5.375 li
190.551 5.46875 li
190.566 5.54688 li
190.691 5.57813 li
190.711 5.75781 190.762 5.91406 190.848 6.04688 cv
190.848 6.125 li
190.973 6.25 li
190.941 6.43799 li
191.035 6.65576 li
191.082 6.90625 li
191.16 6.92188 li
cp
f
195.555 6.18799 mo
195.555 6.125 li
195.492 6.07422 195.461 6.01221 195.461 5.93799 cv
195.492 5.89111 li
195.383 5.65625 li
195.398 5.42188 li
195.352 5.35889 li
195.246 5.28906 195.195 5.22705 195.195 5.17188 cv
195.121 5.14111 195.086 5.06299 195.086 4.93799 cv
195.008 4.92188 li
194.867 4.68799 li
194.758 4.59424 li
194.508 4.5 li
194.414 4.48389 li
194.359 4.48389 194.328 4.46875 194.32 4.43799 cv
194.07 4.68799 li
193.914 5.03125 li
193.664 5.15576 li
193.633 5.29688 li
193.508 5.35889 li
193.461 5.67188 li
193.32 5.73389 li
193.289 5.85205 193.273 5.95313 193.273 6.04688 cv
193.07 6.23389 li
193.133 6.26611 li
193.133 6.35889 193.094 6.44482 193.023 6.51611 cv
193 6.58984 192.969 6.67188 192.93 6.76611 cv
192.93 6.85889 li
192.898 6.90625 li
192.914 7.04688 li
192.773 7.375 li
192.805 7.43799 li
192.805 7.76611 li
192.758 7.93799 li
192.758 8.10889 li
192.867 8.26611 li
193.039 8.31299 li
193.102 8.34424 li
193.195 8.29688 li
193.508 8.31299 li
193.555 8.20313 li
193.602 8.20313 li
193.652 8.20313 193.684 8.21484 193.695 8.23389 cv
193.805 8.20313 li
193.898 8.23389 li
194.055 8.125 li
194.07 8.09375 li
194.18 8.06299 li
194.23 7.97998 194.359 7.89111 194.57 7.79688 cv
194.602 7.75 li
194.836 7.57813 li
194.977 7.39111 li
195.164 7.28125 li
195.18 7.23389 li
195.242 7.09375 li
195.242 6.93799 li
195.383 6.81299 li
195.43 6.73389 li
195.492 6.65576 li
195.461 6.56299 195.445 6.49609 195.445 6.45313 cv
195.445 6.38281 195.465 6.30908 195.508 6.23389 cv
195.555 6.18799 li
cp
196.352 5.89111 mo
196.289 6.10889 li
196.289 6.31982 196.273 6.48389 196.242 6.60889 cv
196.18 6.71875 li
196.18 6.85889 li
196.117 6.93799 li
196.07 7.10889 li
195.945 7.23389 li
195.867 7.54688 li
195.758 7.57813 li
195.711 7.70313 li
195.57 7.79688 li
195.477 8 li
195.336 8.06299 li
195.32 8.21875 li
195.086 8.29688 li
194.992 8.44482 194.867 8.53906 194.711 8.57813 cv
194.664 8.57813 li
194.547 8.74219 194.398 8.82813 194.211 8.82813 cv
194.137 8.87891 194.047 8.90576 193.945 8.90576 cv
193.82 8.98389 li
193.695 9.03125 li
193.539 9.14111 li
193.383 9.14111 li
193.227 9.18799 li
193.023 9.09424 li
192.508 9.06299 li
192.32 8.78125 li
192.055 8.51611 li
192.117 8.31299 li
191.945 7.90625 li
192.023 7.75 li
191.961 7.46875 li
192.023 7.28125 li
192 7.18018 191.992 7.10205 191.992 7.04688 cv
191.992 6.89111 192.031 6.78125 192.117 6.71875 cv
192.125 6.63721 192.18 6.5 192.273 6.31299 cv
192.336 6.31299 li
192.305 6.23389 li
192.352 6.06299 li
192.352 5.89111 li
192.414 5.81982 192.449 5.76611 192.461 5.73389 cv
192.414 5.57813 li
192.414 5.51611 li
192.477 5.41406 192.508 5.29688 192.508 5.17188 cv
192.758 4.82813 li
192.758 4.82813 192.766 4.82422 192.789 4.81299 cv
192.809 4.79297 192.824 4.77295 192.836 4.75 cv
192.82 4.70313 li
192.867 4.70313 li
193.055 4.5 li
193.07 4.23389 li
193.367 4.125 li
193.48 4.05518 193.555 3.93408 193.586 3.76611 cv
193.742 3.76611 li
193.824 3.71484 193.902 3.68799 193.977 3.68799 cv
194.047 3.68799 194.117 3.70313 194.18 3.73389 cv
194.32 3.75 li
194.633 3.625 li
194.789 3.78125 li
194.93 3.85889 li
195.023 3.85889 li
195.195 3.96875 li
195.305 3.96875 li
195.406 4.06299 195.527 4.19482 195.664 4.35889 cv
195.68 4.42188 li
195.758 4.46875 li
196.023 4.79688 li
196.242 5.35889 li
196.242 5.46875 li
196.352 5.89111 li
cp
f
201.742 7.71875 mo
201.602 7.89111 li
201.461 8.20313 li
201.367 8.26611 li
201.289 8.43799 li
201.039 8.46875 li
200.883 8.625 li
200.648 8.625 li
200.508 8.73389 li
200.367 8.70313 li
200.211 8.73389 li
200.211 8.82813 li
199.773 8.79688 li
199.586 8.81299 li
199.445 8.89111 li
199.32 8.81299 li
199.402 8.80078 199.465 8.79688 199.508 8.79688 cv
199.445 8.80518 199.25 8.81982 198.93 8.84375 cv
198.898 8.82813 li
198.805 8.82813 li
198.648 8.90576 li
198.594 8.875 198.508 8.83594 198.383 8.79688 cv
198.203 8.78516 198.09 8.78125 198.039 8.78125 cv
197.945 8.78125 li
197.883 8.77002 197.82 8.76611 197.758 8.76611 cv
197.695 8.76611 197.633 8.78125 197.57 8.81299 cv
197.398 8.70313 li
197.305 8.67188 li
197.281 8.67188 197.234 8.66406 197.164 8.64111 cv
196.871 8.60889 196.727 8.36719 196.727 7.90625 cv
196.727 7.79688 li
196.961 7.625 li
197.242 7.51611 li
197.461 7.625 li
197.633 7.625 li
197.633 7.65625 li
197.703 7.68799 197.766 7.75 197.82 7.84375 cv
197.914 7.85889 li
197.914 8.01611 li
198.07 8.06299 li
198.102 8.07813 li
199.648 7.98389 li
200.008 7.92188 li
200.055 7.92188 li
200.07 7.85889 li
200.242 7.84375 li
200.273 7.79688 li
200.438 7.77686 200.594 7.72998 200.742 7.65625 cv
200.742 7.59424 li
200.742 7.59424 200.727 7.56982 200.695 7.51611 cv
200.633 7.53125 li
200.477 7.40576 li
200.367 7.40576 li
200.32 7.32813 li
200.352 7.28125 li
200.211 7.29688 li
200.117 7.18799 li
200.094 7.19922 200.059 7.20313 200.008 7.20313 cv
199.902 7.20313 199.797 7.18408 199.695 7.14111 cv
199.586 7.14111 li
199.492 7.10889 li
199.336 7.17188 li
199.242 7.06299 li
199.195 7.06299 li
199.023 6.92188 li
198.664 6.78125 li
198.539 6.68799 li
198.086 6.60889 li
198.039 6.51611 li
197.695 6.29688 li
197.523 5.90576 li
197.367 5.70313 li
197.32 5.07813 li
197.367 5 li
197.387 4.82422 197.453 4.66797 197.57 4.53125 cv
197.684 4.46875 197.742 4.375 197.742 4.25 cv
197.93 4.21924 li
197.961 4.15625 198.023 4.09375 198.117 4.03076 cv
198.305 3.89111 li
199.18 3.56299 li
199.43 3.54688 li
199.82 3.43799 li
200.586 3.48389 li
200.602 3.54688 li
200.672 3.56982 200.75 3.63281 200.836 3.73389 cv
200.836 3.79688 li
201.039 3.92188 li
200.945 4.20313 li
200.93 4.31299 li
200.875 4.51221 200.762 4.60889 200.586 4.60889 cv
200.438 4.60889 200.336 4.54297 200.273 4.40576 cv
200.273 4.375 li
200.117 4.35889 li
199.961 4.40576 li
199.805 4.29688 li
199.711 4.35889 li
199.605 4.35889 199.512 4.39111 199.43 4.45313 cv
199.305 4.45313 199.188 4.5 199.086 4.59424 cv
198.93 4.59424 li
198.82 4.68799 li
198.648 4.71875 li
198.617 4.75 li
198.555 4.78076 li
198.445 4.89111 li
198.414 4.90625 li
198.305 5.06299 li
198.164 5.14111 li
198.133 5.24609 198.109 5.33594 198.102 5.40625 cv
198.109 5.52295 198.125 5.59375 198.148 5.625 cv
198.168 5.65625 198.219 5.69482 198.305 5.73389 cv
198.305 5.79688 li
198.461 5.89111 li
198.594 5.93408 198.695 5.98389 198.758 6.04688 cv
198.992 6.04688 li
199.148 6.17188 li
199.43 6.20313 li
199.539 6.28076 li
200.008 6.40625 li
200.07 6.54688 li
200.117 6.45313 li
200.219 6.45313 200.355 6.50781 200.523 6.60889 cv
200.742 6.64111 li
200.773 6.71875 li
200.961 6.71875 li
201.305 6.92188 li
201.336 7.02686 201.422 7.12109 201.57 7.20313 cv
201.695 7.28125 li
201.664 7.43799 li
201.715 7.51221 201.742 7.59424 201.742 7.68799 cv
201.742 7.71875 li
cp
f
205.297 4.26611 mo
205.297 4.24609 205.281 4.19922 205.25 4.125 cv
205.203 4.10889 li
205.172 4.125 li
205.16 4.125 205.145 4.125 205.125 4.125 cv
205.102 4.125 205.086 4.125 205.078 4.125 cv
205.066 4.125 205.055 4.125 205.047 4.125 cv
205.023 4.125 205.008 4.125 205 4.125 cv
204.891 4.20313 li
204.781 4.21924 li
204.719 4.23389 li
204.516 4.5 li
204.375 4.59424 li
204.188 4.93799 li
204.078 5 li
204.055 5.14795 204 5.26611 203.906 5.35889 cv
203.859 5.43799 li
203.953 5.38721 204.051 5.35889 204.156 5.35889 cv
204.25 5.31299 li
204.281 5.21875 li
204.453 5.21875 li
204.547 5.07813 li
204.625 5.07813 li
204.75 5.125 li
204.813 4.95313 li
204.891 4.95313 li
204.891 4.81299 li
205.047 4.78076 li
205.094 4.75 li
205.109 4.64111 li
205.266 4.40576 li
205.285 4.36719 205.297 4.31982 205.297 4.26611 cv
205.297 4.26611 li
cp
206.484 7.71875 mo
206.484 7.81299 206.41 7.93408 206.266 8.07813 cv
206.223 8.20313 206.16 8.30908 206.078 8.39111 cv
206.016 8.40625 li
205.875 8.625 li
205.656 8.67188 li
205.438 8.81299 li
205.313 9.03125 li
205.188 9 li
205.094 9.03906 205.02 9.06592 204.969 9.07813 cv
204.891 9.18799 li
204.867 9.17578 204.832 9.17188 204.781 9.17188 cv
204.676 9.17188 204.578 9.24219 204.484 9.39111 cv
204.313 9.25 li
204.281 9.25 204.234 9.25 204.172 9.25 cv
204.066 9.25 203.977 9.23389 203.906 9.20313 cv
203.703 9.20313 li
203.609 9.14111 li
203.305 9.09814 203.113 8.98389 203.031 8.79688 cv
203.031 8.76611 li
202.891 8.68799 li
202.813 8.48389 li
202.672 8.39111 li
202.672 8.21875 li
202.531 7.68799 li
202.563 7.25 li
202.609 7.06299 li
202.609 6.81299 li
202.656 6.60889 li
202.656 6.53125 li
202.734 6.39111 li
202.719 6.40625 li
202.719 6.33594 202.734 6.26221 202.766 6.18799 cv
202.766 6.125 li
202.734 5.82813 li
202.734 5.69482 202.797 5.57422 202.922 5.46875 cv
202.922 5.46094 202.922 5.43799 202.922 5.40625 cv
202.922 5.375 202.906 5.31299 202.875 5.21875 cv
202.852 5.11719 202.844 5.04297 202.844 5 cv
202.844 4.89795 202.867 4.79297 202.922 4.68799 cv
202.984 4.79297 203.07 4.84375 203.188 4.84375 cv
203.234 4.84375 li
203.242 4.81299 203.273 4.77686 203.328 4.73389 cv
203.398 4.53906 203.488 4.37109 203.594 4.23389 cv
203.641 4.17188 li
203.641 4.14111 203.664 4.05518 203.719 3.90625 cv
203.813 3.90625 li
203.844 3.84424 li
203.938 3.81299 li
203.977 3.75 204.004 3.71484 204.016 3.70313 cv
204.023 3.69482 204.109 3.64795 204.266 3.56299 cv
204.297 3.5 204.348 3.44922 204.422 3.40625 cv
204.453 3.38721 204.488 3.36719 204.531 3.34375 cv
204.578 3.28076 li
204.797 3.21094 204.93 3.17188 204.984 3.17188 cv
205.055 3.17188 205.117 3.18799 205.172 3.21875 cv
205.234 3.20313 li
205.313 3.25 li
205.406 3.32422 205.504 3.38721 205.609 3.43799 cv
205.813 3.59375 li
205.813 3.64111 li
205.988 3.78906 206.078 3.99219 206.078 4.25 cv
206.047 4.375 li
206.078 4.76611 li
205.969 4.84375 li
205.859 5.15576 li
205.625 5.40625 li
205.609 5.59375 li
205.359 5.78125 205.125 5.93408 204.906 6.04688 cv
204.832 6.15186 204.723 6.20313 204.578 6.20313 cv
204.531 6.20313 li
204.313 6.34375 li
204.109 6.34375 li
203.828 6.46924 li
203.609 6.35889 li
203.594 6.35889 li
203.57 6.42188 203.555 6.52295 203.547 6.65576 cv
203.438 6.71875 li
203.438 6.85889 li
203.359 7.07813 li
203.379 7.26611 203.391 7.38721 203.391 7.43799 cv
203.344 7.48389 li
203.344 7.58984 203.336 7.66406 203.328 7.70313 cv
203.328 7.71484 203.328 7.72998 203.328 7.75 cv
203.328 7.76221 203.328 7.77295 203.328 7.78076 cv
203.328 7.84375 203.359 7.89795 203.422 7.93799 cv
203.441 8.03125 203.484 8.08984 203.547 8.10889 cv
203.625 8.18799 li
203.891 8.26611 li
203.891 8.29688 li
203.984 8.31299 li
204.391 8.34424 li
204.625 8.31299 li
204.75 8.21875 li
204.828 8.20313 li
204.938 8.01611 li
205 8 li
205.297 7.90625 li
205.336 7.85498 205.391 7.80908 205.453 7.76611 cv
205.5 7.70313 li
205.656 7.67188 205.742 7.58984 205.766 7.45313 cv
205.879 7.33984 206.023 7.28125 206.203 7.28125 cv
206.25 7.28125 li
206.406 7.46094 206.484 7.60498 206.484 7.71875 cv
206.484 7.71875 li
cp
f
216.07 7.21924 mo
215.977 7.65625 li
215.992 7.79688 li
215.977 7.84375 li
216.008 7.91797 216.023 7.99219 216.023 8.06299 cv
216.023 8.10498 216.012 8.15186 215.992 8.20313 cv
215.992 8.21875 li
215.992 8.31299 215.953 8.70703 215.883 9.40625 cv
215.852 9.625 li
215.852 9.67188 li
215.82 9.76611 li
215.836 9.84424 li
215.789 9.875 li
215.758 9.95313 li
215.711 9.95313 li
215.727 10.0161 li
215.695 10.0781 li
215.695 10.1411 215.672 10.1948 215.633 10.25 cv
215.57 10.438 li
215.547 10.5313 215.512 10.6128 215.461 10.688 cv
215.398 10.7891 215.297 10.9302 215.164 11.1089 cv
214.961 11.2661 li
214.727 11.4531 li
214.539 11.5308 li
214.398 11.6411 li
214.305 11.6719 li
214.148 11.7539 213.969 11.8052 213.773 11.8281 cv
213.695 11.813 li
213.586 11.8589 li
213.586 11.8911 li
213.449 11.9219 213.336 11.938 213.242 11.938 cv
212.773 11.938 li
212.477 11.875 li
212.227 11.9219 li
212.117 11.813 li
211.742 11.7813 li
211.508 11.563 li
211.336 11.4688 li
211.012 11.3438 210.824 11.1289 210.773 10.8281 cv
210.805 10.7808 li
210.773 10.5938 li
210.867 10.438 210.949 10.3521 211.023 10.3438 cv
211.094 10.3008 211.164 10.2813 211.227 10.2813 cv
211.227 10.2813 211.297 10.2891 211.445 10.313 cv
211.59 10.3438 211.742 10.3628 211.898 10.375 cv
211.883 10.5469 li
212.023 10.6411 li
212.023 10.7969 li
211.93 10.9063 li
212.477 11.0781 li
212.758 11.0161 li
212.758 11.1089 li
212.836 11.0781 li
212.867 11.0781 li
212.875 11.0781 212.93 11.0859 213.023 11.1089 cv
213.039 11.1558 li
213.148 11.0938 li
213.25 11.0391 213.445 11.0161 213.727 11.0161 cv
213.777 10.9839 213.82 10.9531 213.852 10.9219 cv
213.859 10.9219 213.883 10.9258 213.914 10.938 cv
213.945 10.938 213.965 10.938 213.977 10.938 cv
214.027 10.938 214.078 10.8911 214.133 10.7969 cv
214.133 10.8159 214.148 10.8281 214.18 10.8281 cv
214.188 10.8281 214.203 10.8159 214.227 10.7969 cv
214.258 10.7852 214.277 10.7808 214.289 10.7808 cv
214.305 10.7808 li
214.695 10.438 li
214.867 10.1719 li
214.883 10.0161 li
215.008 9.84424 li
215.023 9.68799 li
215.102 9.54688 li
215.164 9.21875 li
215.258 8.92188 li
215.246 8.86719 215.242 8.79688 215.242 8.70313 cv
215.242 8.52686 215.266 8.35205 215.32 8.17188 cv
215.273 7.98389 li
215.273 7.39111 li
215.164 7.18799 li
215.164 6.85889 li
215.07 6.60889 li
215.086 6.21875 li
215.07 6.15625 li
214.992 6.18799 li
214.914 6.35889 li
214.742 6.51611 li
214.523 6.85889 li
214.211 7.07813 li
213.867 7.43799 li
213.68 7.63721 213.453 7.80908 213.195 7.95313 cv
213.086 8.10889 li
212.898 8.21875 li
212.727 8.29688 li
212.57 8.45313 li
212.383 8.54688 li
212.32 8.60889 212.23 8.65186 212.117 8.67188 cv
211.938 8.79688 211.734 8.85889 211.508 8.85889 cv
211.383 8.85889 li
211.34 8.86719 211.281 8.875 211.211 8.875 cv
211.148 8.875 211.102 8.86719 211.07 8.85889 cv
210.852 8.84375 li
210.539 8.54688 li
210.305 8.25 li
210.211 8 li
210.133 7.51611 li
210.18 7.17188 li
210.305 6.76611 li
210.273 6.625 li
210.383 6.25 li
210.492 6.04688 li
210.523 5.94482 210.539 5.81982 210.539 5.67188 cv
210.805 5.17188 li
210.824 5.10889 210.883 5.04297 210.977 4.96924 cv
211.102 4.76611 li
211.242 4.60889 li
211.273 4.50781 211.34 4.41406 211.445 4.32813 cv
211.508 4.29688 211.547 4.24219 211.57 4.15625 cv
211.602 4.06299 211.75 3.98389 212.023 3.92188 cv
211.961 3.92188 li
212.023 3.90625 li
212.043 3.86719 212.102 3.78125 212.195 3.65576 cv
212.336 3.68799 li
212.445 3.60889 li
212.57 3.50781 212.703 3.45313 212.852 3.45313 cv
212.945 3.45313 li
213.242 3.32813 li
213.43 3.39111 li
213.648 3.39111 li
213.773 3.45313 li
213.855 3.46484 213.922 3.5 213.977 3.56299 cv
214.133 3.73389 li
214.18 3.76611 li
214.211 3.81299 li
214.32 3.96875 li
214.336 4.03076 li
214.289 4.23389 li
214.32 4.35889 li
214.164 4.59424 li
213.82 4.64111 li
213.633 4.35889 li
213.461 4.29688 li
213.383 4.21924 li
213.258 4.21924 li
213.215 4.22998 213.133 4.26611 213.008 4.32813 cv
212.992 4.43799 li
212.695 4.43799 li
212.609 4.55518 212.523 4.61719 212.43 4.625 cv
212.387 4.65625 212.34 4.68408 212.289 4.70313 cv
212.195 4.93799 li
212.117 4.95313 li
212.102 5.06299 li
211.93 5.06299 li
211.773 5.31299 li
211.648 5.39111 li
211.602 5.56299 li
211.414 5.81299 li
211.383 6.04688 li
211.242 6.18799 li
211.117 6.71875 li
211.023 6.81299 li
211.023 6.93799 li
210.883 7.39111 li
210.914 7.54688 li
210.914 7.68799 li
210.965 7.76221 210.992 7.84375 210.992 7.93799 cv
211.07 7.95313 li
211.117 8.03125 li
211.25 8.03125 211.34 8.04688 211.383 8.07813 cv
211.453 8.02686 211.648 7.96924 211.961 7.90625 cv
212.012 7.79297 212.078 7.71094 212.164 7.65625 cv
212.258 7.60498 212.438 7.50781 212.711 7.35889 cv
212.742 7.375 li
212.742 7.31299 212.766 7.25 212.82 7.18799 cv
212.934 7.14795 213.008 7.11719 213.039 7.09375 cv
213.102 7.05518 213.137 7 213.148 6.93799 cv
213.336 6.89111 li
213.461 6.78125 li
213.758 6.375 li
213.836 6.42188 li
213.844 6.40186 213.934 6.29297 214.102 6.09424 cv
214.383 5.76611 li
214.414 5.60889 li
214.508 5.51611 214.617 5.26221 214.742 4.84375 cv
214.695 4.59424 li
214.602 4.42188 li
214.664 4.23389 li
214.57 4.10889 li
214.539 3.93799 li
214.508 3.81299 li
214.633 3.60889 li
214.758 3.53906 214.844 3.5 214.898 3.5 cv
214.969 3.5 215.07 3.53906 215.195 3.60889 cv
215.273 3.76611 li
215.43 3.89111 li
215.461 4.15625 li
215.48 4.22998 215.508 4.33984 215.539 4.48389 cv
215.578 4.55908 215.602 4.64111 215.602 4.73389 cv
215.602 4.81299 li
215.633 4.89111 li
215.758 5.07813 li
215.727 5.29688 li
215.789 5.39111 li
215.82 5.44482 215.836 5.50781 215.836 5.57813 cv
215.836 5.63281 215.828 5.67188 215.82 5.70313 cv
215.93 5.73389 li
215.836 6.04688 li
215.883 6.26611 li
215.922 6.35205 215.945 6.42188 215.945 6.48389 cv
215.945 6.54688 215.922 6.625 215.883 6.71875 cv
215.961 6.78125 li
216.07 7.21924 li
cp
f
222.051 4.23389 mo
221.941 4.64111 li
221.504 4.68799 li
221.27 4.84375 li
221.113 4.78076 li
220.941 4.875 li
220.754 4.95313 li
220.645 5.03125 li
220.645 5.07813 li
220.395 5.20313 li
220.223 5.42188 li
220.145 5.42188 li
220.008 5.55908 219.914 5.64111 219.863 5.67188 cv
219.691 5.93799 li
219.629 5.96875 li
219.605 6.03125 219.582 6.125 219.551 6.25 cv
219.379 6.31299 li
219.316 6.45313 li
219.207 6.57813 li
219.191 6.76611 li
219.098 6.79688 li
219.098 6.96875 li
219.051 7.01611 li
219.082 7.05908 219.113 7.10205 219.145 7.14111 cv
218.957 7.21924 li
218.941 7.375 li
218.816 7.57813 li
218.895 7.73389 li
218.738 7.95313 li
218.746 8.02686 218.754 8.07813 218.754 8.10889 cv
218.754 8.12109 218.754 8.13721 218.754 8.15576 cv
218.742 8.18799 218.738 8.21094 218.738 8.21875 cv
218.77 8.32813 li
218.973 8.54688 li
218.816 8.82813 li
218.676 8.93799 li
218.332 9.09424 li
217.895 8.92188 li
217.895 8.64111 li
217.848 8.53076 li
217.879 8.35889 li
217.867 8.22705 217.863 8.125 217.863 8.06299 cv
217.863 8.04297 217.863 8.01221 217.863 7.96924 cv
217.863 7.93018 217.863 7.90186 217.863 7.89111 cv
217.863 7.76611 li
217.801 7.71484 217.77 7.65186 217.77 7.57813 cv
217.77 7.51611 217.801 7.44482 217.863 7.35889 cv
217.863 7.31982 217.852 7.19922 217.832 7 cv
217.863 6.96875 li
217.832 6.81299 li
217.863 6.65576 li
217.832 6.57813 li
217.863 6.29688 li
217.801 6.18799 li
217.848 6.04688 li
217.801 5.89111 li
217.809 5.85205 217.816 5.78906 217.816 5.70313 cv
217.816 5.57813 217.793 5.5 217.754 5.46875 cv
217.816 5.39111 li
217.754 5.17188 li
217.66 5.01611 li
217.707 4.82813 li
217.66 4.75 li
217.613 4.46875 li
217.613 4.375 li
217.57 4.32422 217.551 4.26221 217.551 4.18799 cv
217.551 4.03076 217.727 3.89795 218.082 3.78125 cv
218.379 3.84424 li
218.441 4.07813 li
218.566 4.23389 li
218.535 4.54688 li
218.555 4.71484 218.582 4.89111 218.613 5.07813 cv
218.645 5.26611 li
218.652 5.28906 218.664 5.33594 218.676 5.40625 cv
218.676 5.44922 218.652 5.5 218.613 5.56299 cv
218.645 5.79688 li
218.629 6.06299 li
218.582 6.18799 li
218.613 6.23389 li
218.645 6.34375 li
218.684 6.29297 218.711 6.23389 218.723 6.17188 cv
218.77 5.98389 li
218.789 5.94482 218.824 5.91406 218.879 5.89111 cv
218.926 5.70313 li
219.098 5.60889 li
219.113 5.46875 li
219.254 5.31299 li
219.348 5.14111 li
219.449 5.02686 219.551 4.95313 219.645 4.92188 cv
219.676 4.89111 li
219.77 4.71875 li
219.895 4.68799 li
219.988 4.59424 li
220.113 4.51611 li
220.191 4.43799 li
220.254 4.43799 li
220.348 4.39111 li
220.395 4.32813 li
220.551 4.25 li
220.754 4.125 li
221.035 4.01611 li
221.148 4.00781 221.211 4 221.223 4 cv
221.223 4.01221 221.223 4.01611 221.223 4.01611 cv
221.211 4.01611 221.207 4.01611 221.207 4.01611 cv
221.223 4.01611 li
221.254 4.01611 221.301 4 221.363 3.96875 cv
221.402 3.93799 221.461 3.92188 221.535 3.92188 cv
221.566 3.92188 221.617 3.93408 221.691 3.95313 cv
221.898 3.96484 222.02 4.05908 222.051 4.23389 cv
222.051 4.23389 li
cp
f
225.805 4.46875 mo
225.758 4.39111 li
225.664 4.35889 li
225.289 4.06299 li
225.055 4.01611 li
224.867 4.01611 li
224.836 4 li
224.742 4.03076 li
224.633 3.96875 li
224.32 3.96875 li
224.367 4.01611 li
224.086 4.125 li
224.039 4.17188 li
224.008 4.18799 li
223.859 4.31299 223.758 4.41406 223.695 4.48389 cv
223.617 4.78076 li
223.57 4.89111 li
223.695 5.06299 li
223.492 5.21875 li
223.508 5.26611 li
223.422 5.41406 223.383 5.55908 223.383 5.70313 cv
223.273 5.82813 li
223.273 6.04688 li
223.18 6.14111 li
223.164 6.25 li
223.117 6.28076 li
223.117 6.45313 li
223.086 6.5 li
223.086 6.60498 223.078 6.68408 223.07 6.73389 cv
223.086 6.79688 li
222.977 7.01611 li
223.023 7.09375 li
222.945 7.21924 li
223.023 7.43799 li
222.898 7.60889 li
222.914 7.84375 li
222.914 7.875 li
222.961 7.90625 li
223.023 7.89111 li
223.063 7.85205 223.105 7.81299 223.148 7.78076 cv
223.117 7.68799 li
223.289 7.65625 li
223.336 7.57813 li
224.039 7 li
224.102 6.96875 li
224.195 6.76611 li
224.234 6.75781 224.305 6.72705 224.398 6.67188 cv
224.461 6.48389 li
224.57 6.48389 li
224.523 6.28076 li
224.695 6.25 li
224.715 6.21875 224.742 6.18408 224.773 6.14111 cv
224.813 6.08984 224.852 6.04297 224.883 6 cv
225.508 5.18799 li
225.602 5 li
225.586 4.95313 li
225.664 4.82813 li
225.695 4.68799 li
225.805 4.59424 li
225.805 4.46875 li
cp
226.945 3.84424 mo
226.836 4 li
226.93 4.28125 li
226.773 4.46875 li
226.711 4.71875 li
226.68 4.78076 li
226.695 4.84375 li
226.695 4.94922 226.668 5.03125 226.617 5.09375 cv
226.586 5.125 li
226.586 5.17188 li
226.617 5.23389 226.633 5.28906 226.633 5.32813 cv
226.633 5.37109 226.625 5.40186 226.617 5.42188 cv
226.633 5.46875 li
226.586 5.59375 li
226.617 5.73389 li
226.523 5.82813 li
226.555 6 li
226.633 6.09424 li
226.523 6.18799 li
226.523 6.375 li
226.43 6.56299 li
226.492 6.76611 li
226.43 6.85889 li
226.539 6.93799 li
226.383 7.21924 li
226.367 7.25 li
226.492 7.28125 li
226.398 7.54688 li
226.398 7.59424 li
226.398 7.65625 226.391 7.70313 226.383 7.73389 cv
226.398 7.76611 li
226.586 7.79688 li
226.742 8.03125 li
226.664 8.21875 li
226.789 8.20313 li
226.84 8.29688 226.871 8.38281 226.883 8.45313 cv
226.695 8.625 li
226.641 8.68799 226.563 8.74219 226.461 8.79688 cv
226.258 8.90576 li
226.195 8.84375 li
226.07 8.92188 li
225.711 8.48389 li
225.711 8.28125 li
225.656 8.125 225.633 7.97998 225.633 7.84375 cv
225.633 7.76611 li
225.555 7.06299 li
225.664 6.56299 li
225.586 6.26611 li
225.383 6.60889 li
225.273 6.92188 li
225.18 6.96875 li
225.008 7.23389 li
224.711 7.5 li
224.617 7.64111 li
224.367 7.875 li
224.305 8.03125 li
223.914 8.26611 li
223.508 8.73389 li
223.273 8.78125 li
223.117 8.89111 li
222.918 8.89111 222.766 8.81592 222.664 8.67188 cv
222.309 8.49609 222.121 8.24219 222.102 7.90625 cv
222.164 7.875 li
222.148 7.79688 li
222.133 7.65625 li
222.07 7.5 li
222.133 7.32813 li
222.164 7.07813 li
222.242 6.68799 li
222.242 6.68018 222.242 6.66406 222.242 6.64111 cv
222.242 6.62109 222.242 6.60498 222.242 6.59375 cv
222.242 6.56299 222.246 6.52295 222.258 6.46924 cv
222.246 6.46094 222.242 6.43018 222.242 6.375 cv
222.242 6.32422 222.266 6.22998 222.32 6.09424 cv
222.398 6.06299 li
222.355 6.02295 222.336 5.97998 222.336 5.93799 cv
222.336 5.90576 222.34 5.88281 222.352 5.85889 cv
222.34 5.83984 222.336 5.81299 222.336 5.78125 cv
222.336 5.68018 222.383 5.60498 222.477 5.56299 cv
222.496 5.47998 222.539 5.39795 222.602 5.31299 cv
222.555 5.21875 li
222.695 5.04688 li
222.695 5 li
222.695 4.84375 222.746 4.70313 222.852 4.57813 cv
222.836 4.35889 li
222.883 4.31299 li
222.883 4.30518 222.883 4.29297 222.883 4.28125 cv
222.871 4.26221 222.867 4.24609 222.867 4.23389 cv
222.867 4.19482 222.883 4.15625 222.914 4.125 cv
222.914 4.04688 li
222.945 3.96484 223.027 3.84424 223.164 3.68799 cv
223.309 3.53125 223.414 3.39111 223.477 3.26611 cv
223.539 3.32813 li
223.664 3.26611 li
223.727 3.25 li
224.117 3.06299 li
225.039 3.10889 li
225.039 3.18799 li
225.336 3.25 li
225.512 3.25 225.633 3.31299 225.695 3.43799 cv
225.695 3.41797 225.699 3.38721 225.711 3.34375 cv
225.711 3.32422 225.711 3.30908 225.711 3.29688 cv
225.961 3.53125 li
226.18 3.57813 li
226.617 3.46924 li
226.773 3.76611 li
226.945 3.84424 li
cp
f
232.098 7.10889 mo
232.098 7 li
232.035 6.78125 li
232.082 6.67188 li
232.035 6.57813 li
232.02 6.45313 li
231.926 6.26611 li
231.879 6.14111 li
231.691 5.82813 li
231.551 5.70313 li
231.473 5.5 li
231.363 5.45313 li
231.176 5.20313 li
230.973 5.21875 li
230.832 5.03125 li
230.707 5.06299 li
230.629 4.90625 li
230.582 4.89111 li
230.41 4.89111 li
230.285 4.95313 li
230.191 4.84375 li
230.082 4.875 li
230.035 4.79688 li
229.816 4.75 li
229.816 4.90625 li
229.801 5.125 li
229.848 5.26611 li
230.02 5.42188 li
229.879 5.70313 li
229.895 5.89111 li
229.832 6.25 li
229.863 6.39795 229.91 6.52295 229.973 6.625 cv
229.926 6.76611 li
229.934 6.76611 229.941 6.77295 229.941 6.78125 cv
229.941 6.80518 229.91 6.83984 229.848 6.89111 cv
229.926 7 li
229.879 7.14111 li
229.848 7.29688 li
229.879 7.46875 li
229.879 7.625 li
230.129 7.625 li
230.16 7.60498 230.199 7.59424 230.254 7.59424 cv
230.324 7.59424 230.387 7.62109 230.441 7.67188 cv
230.449 7.67188 230.465 7.66797 230.488 7.65625 cv
230.508 7.65625 230.523 7.65625 230.535 7.65625 cv
230.555 7.65625 230.598 7.66797 230.66 7.68799 cv
230.711 7.65625 230.758 7.64111 230.801 7.64111 cv
230.863 7.64111 230.918 7.65625 230.973 7.68799 cv
231.082 7.68799 li
231.176 7.71875 li
231.426 7.64111 li
231.613 7.76611 li
231.684 7.78906 231.711 7.79688 231.691 7.79688 cv
231.926 7.57813 li
231.941 7.40576 li
232.004 7.39111 li
231.973 7.28125 li
232.051 7.18799 li
232.098 7.10889 li
cp
233.004 6.92188 mo
232.863 7.28125 li
232.957 7.53125 li
232.91 7.59424 li
232.863 7.79688 li
232.77 7.95313 li
232.723 7.98389 li
232.691 8.21875 li
232.473 8.23389 li
232.355 8.33984 232.242 8.42188 232.129 8.48389 cv
232.051 8.46875 li
231.879 8.53076 li
231.77 8.54688 li
231.535 8.625 li
231.27 8.51611 li
231.238 8.48389 li
231.035 8.5 li
231.082 8.51611 li
230.754 8.46875 li
230.441 8.54688 li
230.332 8.43799 li
230.082 8.46875 li
229.973 8.39111 li
229.973 8.39111 229.941 8.39795 229.879 8.40625 cv
229.879 8.46875 li
229.879 8.54297 229.867 8.61719 229.848 8.68799 cv
229.879 8.92188 li
229.785 9.04688 li
229.805 9.21094 229.816 9.34375 229.816 9.43799 cv
229.77 9.73389 li
229.816 10.188 li
229.723 10.313 li
229.77 10.4839 li
229.738 10.6089 li
229.816 10.6411 li
229.816 10.8281 li
229.824 10.8789 229.832 10.9141 229.832 10.938 cv
229.832 11.0078 229.789 11.0659 229.707 11.1089 cv
229.754 11.2813 li
229.691 11.375 li
229.676 11.8589 li
229.645 12.4219 229.52 12.7031 229.301 12.7031 cv
229.246 12.7031 229.105 12.6719 228.879 12.6089 cv
228.91 12.25 li
228.848 11.7188 li
228.957 11.5 li
228.973 11.2339 li
228.926 10.875 li
229.02 10.7188 li
228.91 10.438 li
228.988 10.2969 li
228.926 10.063 li
229.02 9.84424 li
228.996 9.78906 228.965 9.74219 228.926 9.70313 cv
228.883 9.67188 228.863 9.64502 228.863 9.625 cv
228.863 9.60205 228.887 9.58203 228.941 9.56299 cv
228.941 9.53125 228.941 9.48779 228.941 9.43799 cv
228.941 9.33203 228.961 9.19482 229.004 9.03125 cv
228.941 8.90576 li
228.973 8.75 li
228.895 8.64111 li
228.988 8.51611 li
228.941 8.15576 li
229.02 7.67188 li
228.941 7.51611 li
229.066 7.28125 li
228.926 7.15625 li
229.004 6.92188 li
228.926 6.85889 li
228.941 6.65576 li
229.004 6.40625 li
229.004 6.35889 li
229.02 6.31299 li
229.02 6.18799 li
229.035 6.14111 li
228.973 5.93799 li
229.035 5.73389 li
228.973 5.57813 li
229.02 5.40625 li
228.973 5.35889 li
229.004 5.10889 li
228.973 4.98389 li
228.988 4.85889 li
228.957 4.78076 li
228.535 4.96924 li
228.535 4.90625 li
228.441 4.90625 li
228.316 5.03125 li
228.207 5.03125 li
228.066 5.21875 li
227.941 5.17188 li
227.879 5.29688 li
227.484 5.06982 227.285 4.88721 227.285 4.75 cv
227.285 4.64795 227.324 4.56299 227.395 4.5 cv
227.395 4.32813 li
227.613 4.19482 227.82 4.125 228.02 4.125 cv
228.113 4.03076 li
228.488 3.875 li
228.582 3.79688 li
228.91 3.81299 li
228.973 3.79688 li
229.082 3.375 li
229.363 3.43799 li
229.566 3.75 li
229.676 3.64111 li
229.879 3.79688 li
229.98 3.79688 230.086 3.81982 230.191 3.85889 cv
230.238 3.96875 li
230.332 3.92188 li
230.426 4 li
230.477 4 230.52 4.00781 230.551 4.01611 cv
230.551 4.07813 li
230.801 4 li
230.941 4.14111 li
231.176 4.21924 li
231.316 4.40576 li
231.613 4.59424 li
231.629 4.60889 li
231.848 4.68799 li
231.848 4.75 li
231.91 4.80518 231.957 4.87109 231.988 4.95313 cv
232.098 5 li
232.16 5.14111 li
232.301 5.14111 li
232.301 5.375 li
232.395 5.46875 li
232.41 5.54688 li
232.535 5.57813 li
232.555 5.75781 232.605 5.91406 232.691 6.04688 cv
232.691 6.125 li
232.816 6.25 li
232.785 6.43799 li
232.879 6.65576 li
232.926 6.90625 li
233.004 6.92188 li
cp
f
239.055 8.57813 mo
239.055 8.89795 238.883 9.06299 238.539 9.06299 cv
238.371 9.06299 238.25 8.99219 238.18 8.85889 cv
238.094 8.74219 238.027 8.53076 237.977 8.21875 cv
237.977 8.06299 li
237.996 8.02295 238.008 7.97998 238.008 7.93799 cv
238.008 7.91797 238 7.89795 237.992 7.875 cv
237.82 7.625 li
237.945 7.39111 li
237.898 7.14111 li
237.945 7 li
237.945 6.84424 li
237.977 6.70313 li
237.914 6.48389 li
237.977 6.375 li
237.977 5.46875 li
237.898 5.06299 li
237.945 4.92188 li
237.867 4.625 li
237.758 4.70313 li
237.508 4.81299 li
237.148 5.26611 li
236.992 5.26611 li
236.789 5.60889 li
236.742 5.75 li
236.617 5.81299 li
236.477 6.01611 li
236.414 6.14111 li
236.289 6.56299 li
236.07 6.82813 li
236.023 7 li
235.898 7.09375 li
235.852 7.39111 li
235.617 7.59424 li
235.586 8.04688 li
235.477 8.04688 li
235.43 8.10889 li
235.227 8.48389 li
235.023 8.70313 li
234.836 8.93799 li
234.648 8.89111 li
234.492 8.89111 li
234.352 8.68799 li
234.211 8.26611 li
234.195 7.625 li
234.148 7.42188 li
234.195 7.17188 li
234.164 6.60889 li
234.258 6.59375 li
234.32 5.76611 li
234.367 5.60889 li
234.336 5.35889 li
234.398 5.31299 li
234.445 4.93799 li
234.492 4.79688 li
234.445 4.64111 li
234.477 4.57813 li
234.461 4.54688 li
234.492 4.20313 li
234.398 4.125 li
234.477 3.95313 li
234.461 3.60889 li
234.336 3.25 li
234.43 3.14111 li
234.352 2.82813 li
234.352 2.625 li
234.305 2.54688 li
234.242 2.15576 li
234.195 1.98389 li
234.008 1.64111 li
234.148 1.46875 li
234.258 1.26611 li
234.367 1.26611 li
234.543 1.26611 234.672 1.32813 234.758 1.45313 cv
234.93 1.59424 li
235.008 1.79688 li
235.18 1.95313 li
235.148 2.125 li
235.227 2.375 li
235.227 2.40625 li
235.242 2.42188 li
235.227 2.82813 li
235.242 3.34375 li
235.336 3.68799 li
235.273 3.82813 li
235.289 4.03076 li
235.227 4.20313 li
235.273 4.48389 li
235.211 4.73389 li
235.227 4.78076 li
235.211 5.51611 li
235.242 5.67188 li
235.18 5.76611 li
235.133 6.15625 li
235.086 6.34375 li
235.133 6.65576 li
235.086 6.76611 li
235.07 7 li
235.164 6.97998 235.211 6.93408 235.211 6.85889 cv
235.305 6.76611 li
235.383 6.60889 li
235.414 6.375 li
235.539 6.18799 li
235.617 5.93799 li
235.805 5.75 li
235.852 5.51611 li
235.961 5.51611 li
235.961 5.40625 li
235.977 5.26611 li
236.117 5.17188 li
236.117 5.07813 li
236.242 5.06299 li
236.258 4.85889 li
236.258 4.76611 li
236.477 4.67188 li
236.523 4.625 li
236.508 4.5 li
236.617 4.46875 li
236.695 4.26611 li
236.836 4.26611 li
236.977 4.17188 li
236.977 4.12109 236.98 4.08594 236.992 4.06299 cv
237.117 4 li
237.262 3.875 237.398 3.80518 237.523 3.78125 cv
237.523 3.76611 li
237.73 3.66406 237.875 3.60889 237.961 3.60889 cv
238.074 3.60889 238.184 3.66406 238.289 3.76611 cv
238.371 3.79688 238.422 3.85889 238.445 3.95313 cv
238.555 4.01611 li
238.586 4.18799 li
238.773 4.46875 li
238.773 5.42188 li
238.758 5.84375 li
238.805 5.95313 li
238.805 6.84424 li
238.773 7 li
238.773 7.23389 li
238.805 7.5 li
238.758 7.73389 li
238.789 7.85205 238.809 7.94922 238.82 8.03125 cv
238.961 8.15576 li
238.961 8.26611 li
239.008 8.29688 li
239.039 8.43408 239.055 8.52686 239.055 8.57813 cv
239.055 8.57813 li
cp
f
246.699 6.95313 mo
246.699 7.14111 246.668 7.25781 246.605 7.29688 cv
246.543 7.34375 li
246.496 7.51611 li
246.293 7.57813 li
246.238 7.70313 246.156 7.80518 246.043 7.875 cv
245.934 7.90625 li
245.777 8.07813 li
245.637 8.10889 li
245.582 8.25781 245.469 8.33594 245.293 8.34424 cv
245.27 8.36719 245.234 8.41406 245.184 8.48389 cv
245.059 8.56982 244.934 8.61719 244.809 8.625 cv
244.746 8.64111 li
244.668 8.75 li
244.434 8.75 li
244.23 8.89111 li
243.746 8.53076 li
243.512 8.06299 li
243.496 7.48389 li
243.449 7.32813 li
243.605 6.28076 li
243.652 6.23389 li
243.621 6.10889 243.605 5.99609 243.605 5.89111 cv
243.605 5.81982 243.629 5.66797 243.684 5.43799 cv
243.746 5.15576 li
243.723 5.11719 243.691 5.06299 243.652 5 cv
243.715 4.78076 li
243.746 4.5 li
243.762 4.46875 li
243.73 4.39795 243.707 4.31982 243.699 4.23389 cv
243.707 4.21484 243.719 4.19482 243.73 4.17188 cv
243.738 4.14111 243.746 4.11719 243.746 4.09375 cv
243.715 4.02295 243.699 3.95313 243.699 3.89111 cv
243.699 3.70313 243.809 3.61719 244.027 3.625 cv
244.168 3.64111 li
244.27 3.58984 244.332 3.56299 244.355 3.56299 cv
244.512 3.56299 244.621 3.65186 244.684 3.82813 cv
244.684 3.875 li
244.715 3.96875 244.73 4.06299 244.73 4.15625 cv
244.73 4.22998 244.719 4.28125 244.699 4.31299 cv
244.621 4.90625 li
244.699 5.07813 li
244.699 5.22705 244.652 5.35498 244.559 5.46875 cv
244.605 5.60889 li
244.449 6.06299 li
244.438 6.26221 244.418 6.41406 244.387 6.51611 cv
244.387 6.81299 li
244.324 6.98389 li
244.324 7.10889 li
244.309 7.39111 li
244.324 7.59424 li
244.512 7.75 li
244.652 7.71875 li
244.684 7.68799 li
244.777 7.68799 li
244.934 7.64111 li
245.059 7.51611 li
245.105 7.43799 li
245.199 7.43799 li
245.215 7.375 li
245.262 7.32813 li
245.324 7.375 li
245.449 7.25 li
245.512 7.26611 li
245.543 7.17188 li
245.559 7.17188 li
245.605 7.07813 li
245.715 7.03076 li
245.934 6.92188 li
246.121 6.79688 246.301 6.73389 246.48 6.73389 cv
246.527 6.73389 li
246.609 6.78906 246.668 6.85889 246.699 6.95313 cv
246.699 6.95313 li
cp
245.48 .59375 mo
245.48 .687988 245.418 .776855 245.293 .858887 cv
245.293 .875 li
245.137 1.06299 245 1.16797 244.887 1.18799 cv
244.715 1.40576 li
244.59 1.56299 li
244.324 1.64111 li
244.199 1.79688 li
244.012 1.90625 li
243.699 2.17188 li
243.496 2 li
243.543 1.68799 li
243.668 1.48389 li
243.676 1.37109 243.738 1.27295 243.855 1.18799 cv
243.855 1.14111 li
243.934 1.09375 li
243.949 .921875 li
244.137 .858887 li
244.137 .766113 li
244.277 .733887 li
244.309 .578125 244.375 .464844 244.48 .391113 cv
244.527 .358887 li
244.59 .296875 li
244.684 0 li
245.215 .125 245.48 .324219 245.48 .59375 cv
245.48 .59375 li
cp
f
257.508 7.28125 mo
257.465 7.39795 257.414 7.48389 257.352 7.54688 cv
257.32 7.63281 257.281 7.69482 257.242 7.73389 cv
257.199 7.80908 257.152 7.86719 257.102 7.90625 cv
257.055 7.96924 li
257.023 8.02295 256.977 8.04688 256.914 8.04688 cv
256.852 8.15576 li
256.773 8.15576 li
256.711 8.26611 li
256.617 8.31299 li
256.539 8.39111 li
256.477 8.43799 li
256.359 8.43799 256.262 8.47705 256.18 8.54688 cv
256.074 8.58984 255.969 8.60889 255.867 8.60889 cv
255.75 8.60889 255.637 8.57813 255.523 8.51611 cv
255.398 8.51611 255.336 8.5 255.336 8.46875 cv
255.164 8.43799 li
255.133 8.40625 li
255.055 8.26611 li
254.93 8.15576 li
254.836 8.05518 254.781 7.95313 254.773 7.85889 cv
254.719 7.78906 254.668 7.63721 254.617 7.40576 cv
254.492 7.21924 li
254.492 7.10889 li
254.414 6.75 li
254.414 6.60889 li
254.352 6.23389 li
254.383 5.93799 li
254.32 5.84375 li
254.211 6.14111 li
254.055 6.31982 253.961 6.42188 253.93 6.45313 cv
253.906 6.48389 253.875 6.5 253.836 6.5 cv
253.824 6.5 253.809 6.5 253.789 6.5 cv
253.711 6.625 li
253.699 6.63721 253.695 6.65186 253.695 6.67188 cv
253.695 6.72705 253.727 6.75781 253.789 6.76611 cv
253.766 6.77686 253.727 6.82813 253.664 6.92188 cv
253.633 6.98389 253.605 7.03076 253.586 7.06299 cv
253.539 7 li
253.523 7.17188 li
253.418 7.24609 253.344 7.36719 253.305 7.53125 cv
253.219 7.63721 253.094 7.78076 252.93 7.96924 cv
252.773 8.14111 li
252.73 8.14111 252.711 8.14795 252.711 8.15576 cv
252.711 8.18799 li
252.668 8.30518 252.586 8.39111 252.461 8.45313 cv
252.32 8.625 li
252.242 8.625 li
251.945 8.73389 li
251.703 8.72314 251.559 8.62109 251.508 8.42188 cv
251.492 8.29688 li
251.414 8.14111 li
251.414 8 li
251.32 7.65625 li
251.32 7.54688 li
251.258 7.43799 li
251.305 7.06299 li
251.293 7.02295 251.289 6.96484 251.289 6.89111 cv
251.289 6.82813 251.293 6.78906 251.305 6.76611 cv
251.289 6.68799 li
251.289 6.64111 li
251.227 6.5 li
251.32 6.28076 li
251.309 6.21875 251.289 6.11719 251.258 5.96875 cv
251.289 5.85889 li
251.32 5.51611 li
251.227 5.26611 li
251.258 5.06299 li
251.211 4.95313 li
251.211 4.92188 251.184 4.84375 251.133 4.71875 cv
251.055 4.76611 li
250.898 4.95313 li
250.742 5.09375 li
250.461 5.45313 li
250.43 5.57813 li
250.227 5.79688 li
250.148 5.96875 li
250.07 6.06299 li
250.039 6.24219 249.949 6.36719 249.805 6.43799 cv
249.789 6.60889 li
249.734 6.65186 249.684 6.71484 249.633 6.79688 cv
249.578 6.88281 249.543 6.93018 249.523 6.93799 cv
249.5 6.94922 249.469 6.97705 249.43 7.01611 cv
249.289 7.21924 li
249.289 7.35498 249.234 7.44922 249.133 7.5 cv
249.133 7.57813 li
249.078 7.64111 249.012 7.70313 248.93 7.76611 cv
248.93 7.75 li
248.883 7.90625 li
248.82 7.90625 248.762 7.98389 248.711 8.14111 cv
248.68 8.18799 li
248.668 8.31299 248.594 8.40625 248.461 8.46875 cv
248.305 8.625 li
248.168 8.69922 248.086 8.73389 248.055 8.73389 cv
247.844 8.73389 247.703 8.56299 247.633 8.21875 cv
247.586 7.95313 li
247.586 7.93408 247.586 7.90625 247.586 7.875 cv
247.586 7.82422 247.594 7.76611 247.617 7.70313 cv
247.555 7.48389 li
247.586 7.28125 li
247.555 7.09375 li
247.574 6.93018 247.602 6.82422 247.633 6.78125 cv
247.609 6.61719 247.602 6.52295 247.602 6.5 cv
247.602 6.28076 li
247.633 6.21875 247.672 6.14795 247.727 6.06299 cv
247.648 5.98389 li
247.637 5.92188 247.633 5.89111 247.633 5.89111 cv
247.633 5.82813 247.68 5.72998 247.773 5.59375 cv
247.695 5.35889 li
247.742 5.21875 li
247.664 4.875 li
247.695 4.70313 li
247.633 4.43799 li
247.633 4.26611 li
247.539 4.04688 li
247.695 3.73389 247.867 3.57813 248.055 3.57813 cv
248.148 3.57813 248.234 3.62109 248.32 3.70313 cv
248.352 3.81299 li
248.484 3.88721 248.555 3.99609 248.555 4.14111 cv
248.555 4.12109 248.543 4.20313 248.523 4.39111 cv
248.461 4.39111 li
248.57 4.59424 li
248.508 4.68799 li
248.492 4.73389 li
248.57 5.28125 li
248.539 5.75 li
248.508 5.82813 li
248.555 6.03125 li
248.574 6.06299 248.586 6.10205 248.586 6.14111 cv
248.586 6.21484 248.555 6.28076 248.492 6.34375 cv
248.492 6.44922 248.469 6.53906 248.43 6.60889 cv
248.461 6.96875 li
248.461 7.125 li
248.477 7.09375 li
248.555 6.98389 li
248.727 6.68799 li
248.758 6.68799 li
248.797 6.68799 248.852 6.60889 248.914 6.45313 cv
248.992 6.23389 li
249.012 6.18408 249.074 6.10498 249.18 6 cv
249.227 5.78125 li
249.367 5.57813 li
249.414 5.40625 li
249.453 5.375 249.496 5.34424 249.539 5.31299 cv
249.555 5.28125 li
249.574 5.25 249.656 5.16797 249.805 5.03125 cv
249.883 5 li
249.914 4.875 li
249.961 4.84375 li
250 4.68018 250.105 4.56299 250.273 4.5 cv
250.227 4.46875 li
250.273 4.43799 li
250.262 4.43799 250.258 4.43018 250.258 4.40576 cv
250.258 4.39795 250.262 4.37109 250.273 4.32813 cv
250.477 4.25 li
250.508 4.06299 li
250.633 4.06299 li
250.633 4.05518 250.641 4.02295 250.664 3.96875 cv
250.898 3.78125 li
251.012 3.75 251.09 3.73389 251.133 3.73389 cv
251.227 3.73389 251.355 3.76221 251.523 3.81299 cv
251.648 3.98389 li
251.695 4.01611 li
251.758 4.15625 li
251.93 4.39111 li
251.93 4.54688 li
252.039 4.65625 li
252.039 4.84375 li
252.121 5.03125 252.164 5.19482 252.164 5.32813 cv
252.133 5.46875 li
252.195 5.67188 li
252.07 5.81299 li
252.117 6.07813 li
252.086 6.20313 li
252.074 6.28906 252.07 6.35205 252.07 6.39111 cv
252.07 6.43408 252.09 6.51221 252.133 6.625 cv
252.086 6.76611 li
252.133 6.92188 li
252.086 6.96875 li
252.105 7.07422 252.133 7.26221 252.164 7.53125 cv
252.148 7.57813 li
252.539 7.15625 li
252.648 6.92188 li
252.688 6.88281 252.742 6.80908 252.805 6.70313 cv
252.805 6.67188 li
252.844 6.54688 252.898 6.46094 252.961 6.40625 cv
252.961 6.36719 253 6.30908 253.086 6.23389 cv
253.18 6.17188 li
253.211 6.03906 253.293 5.92188 253.43 5.82813 cv
253.492 5.67188 li
253.602 5.51611 li
253.727 5.40625 li
253.797 5.34424 253.855 5.25781 253.898 5.14111 cv
253.992 5 li
254.039 4.81299 li
254.164 4.75 li
254.305 4.57813 li
254.43 4.28125 li
254.398 4.28125 254.383 4.27686 254.383 4.26611 cv
254.383 4.26611 254.391 4.25 254.414 4.21924 cv
254.492 4.14111 li
254.586 3.95313 li
254.719 3.90186 254.797 3.875 254.82 3.875 cv
254.82 3.875 254.836 3.88721 254.867 3.90625 cv
255.086 3.92188 li
255.273 4 li
255.445 4.18799 li
255.477 4.35889 li
255.461 4.48389 li
255.398 4.54688 li
255.273 4.79688 li
255.227 5.06299 li
255.266 5.10498 255.289 5.18018 255.289 5.28125 cv
255.258 5.32422 255.242 5.375 255.242 5.43799 cv
255.195 5.53076 li
255.203 5.57422 255.211 5.64111 255.211 5.73389 cv
255.211 5.79688 255.203 5.85205 255.195 5.89111 cv
255.148 5.93799 li
255.195 6.03125 li
255.117 6.14111 li
255.168 6.14111 255.195 6.19482 255.195 6.29688 cv
255.203 6.33984 255.211 6.37109 255.211 6.39111 cv
255.211 6.41406 255.203 6.43799 255.195 6.46924 cv
255.203 6.55518 255.211 6.63281 255.211 6.70313 cv
255.211 6.71875 li
255.211 6.74219 255.262 6.90625 255.367 7.21924 cv
255.398 7.32813 li
255.523 7.48389 li
255.602 7.64111 li
255.664 7.68799 li
255.711 7.75 li
255.773 7.76611 li
255.883 7.79688 li
255.945 7.78076 li
255.977 7.78076 li
256.059 7.78076 256.156 7.75 256.273 7.68799 cv
256.305 7.60498 256.387 7.52295 256.523 7.43799 cv
256.531 7.39795 256.578 7.31982 256.664 7.20313 cv
256.867 7.06299 li
256.945 6.92188 li
257.008 6.88281 257.074 6.85889 257.148 6.85889 cv
257.23 6.85889 257.324 6.88281 257.43 6.92188 cv
257.48 7.00781 257.508 7.125 257.508 7.28125 cv
257.508 7.28125 li
cp
f
261.918 7.10889 mo
261.918 7 li
261.855 6.78125 li
261.902 6.67188 li
261.855 6.57813 li
261.84 6.45313 li
261.746 6.26611 li
261.699 6.14111 li
261.512 5.82813 li
261.371 5.70313 li
261.293 5.5 li
261.184 5.45313 li
260.996 5.20313 li
260.793 5.21875 li
260.652 5.03125 li
260.527 5.06299 li
260.449 4.90625 li
260.402 4.89111 li
260.23 4.89111 li
260.105 4.95313 li
260.012 4.84375 li
259.902 4.875 li
259.855 4.79688 li
259.637 4.75 li
259.637 4.90625 li
259.621 5.125 li
259.668 5.26611 li
259.84 5.42188 li
259.699 5.70313 li
259.715 5.89111 li
259.652 6.25 li
259.684 6.39795 259.73 6.52295 259.793 6.625 cv
259.746 6.76611 li
259.754 6.76611 259.762 6.77295 259.762 6.78125 cv
259.762 6.80518 259.73 6.83984 259.668 6.89111 cv
259.746 7 li
259.699 7.14111 li
259.668 7.29688 li
259.699 7.46875 li
259.699 7.625 li
259.949 7.625 li
259.98 7.60498 260.02 7.59424 260.074 7.59424 cv
260.145 7.59424 260.207 7.62109 260.262 7.67188 cv
260.27 7.67188 260.285 7.66797 260.309 7.65625 cv
260.328 7.65625 260.344 7.65625 260.355 7.65625 cv
260.375 7.65625 260.418 7.66797 260.48 7.68799 cv
260.531 7.65625 260.578 7.64111 260.621 7.64111 cv
260.684 7.64111 260.738 7.65625 260.793 7.68799 cv
260.902 7.68799 li
260.996 7.71875 li
261.246 7.64111 li
261.434 7.76611 li
261.504 7.78906 261.531 7.79688 261.512 7.79688 cv
261.746 7.57813 li
261.762 7.40576 li
261.824 7.39111 li
261.793 7.28125 li
261.871 7.18799 li
261.918 7.10889 li
cp
262.824 6.92188 mo
262.684 7.28125 li
262.777 7.53125 li
262.73 7.59424 li
262.684 7.79688 li
262.59 7.95313 li
262.543 7.98389 li
262.512 8.21875 li
262.293 8.23389 li
262.176 8.33984 262.063 8.42188 261.949 8.48389 cv
261.871 8.46875 li
261.699 8.53076 li
261.59 8.54688 li
261.355 8.625 li
261.09 8.51611 li
261.059 8.48389 li
260.855 8.5 li
260.902 8.51611 li
260.574 8.46875 li
260.262 8.54688 li
260.152 8.43799 li
259.902 8.46875 li
259.793 8.39111 li
259.793 8.39111 259.762 8.39795 259.699 8.40625 cv
259.699 8.46875 li
259.699 8.54297 259.688 8.61719 259.668 8.68799 cv
259.699 8.92188 li
259.605 9.04688 li
259.625 9.21094 259.637 9.34375 259.637 9.43799 cv
259.59 9.73389 li
259.637 10.188 li
259.543 10.313 li
259.59 10.4839 li
259.559 10.6089 li
259.637 10.6411 li
259.637 10.8281 li
259.645 10.8789 259.652 10.9141 259.652 10.938 cv
259.652 11.0078 259.609 11.0659 259.527 11.1089 cv
259.574 11.2813 li
259.512 11.375 li
259.496 11.8589 li
259.465 12.4219 259.34 12.7031 259.121 12.7031 cv
259.066 12.7031 258.926 12.6719 258.699 12.6089 cv
258.73 12.25 li
258.668 11.7188 li
258.777 11.5 li
258.793 11.2339 li
258.746 10.875 li
258.84 10.7188 li
258.73 10.438 li
258.809 10.2969 li
258.746 10.063 li
258.84 9.84424 li
258.816 9.78906 258.785 9.74219 258.746 9.70313 cv
258.703 9.67188 258.684 9.64502 258.684 9.625 cv
258.684 9.60205 258.707 9.58203 258.762 9.56299 cv
258.762 9.53125 258.762 9.48779 258.762 9.43799 cv
258.762 9.33203 258.781 9.19482 258.824 9.03125 cv
258.762 8.90576 li
258.793 8.75 li
258.715 8.64111 li
258.809 8.51611 li
258.762 8.15576 li
258.84 7.67188 li
258.762 7.51611 li
258.887 7.28125 li
258.746 7.15625 li
258.824 6.92188 li
258.746 6.85889 li
258.762 6.65576 li
258.824 6.40625 li
258.824 6.35889 li
258.84 6.31299 li
258.84 6.18799 li
258.855 6.14111 li
258.793 5.93799 li
258.855 5.73389 li
258.793 5.57813 li
258.84 5.40625 li
258.793 5.35889 li
258.824 5.10889 li
258.793 4.98389 li
258.809 4.85889 li
258.777 4.78076 li
258.355 4.96924 li
258.355 4.90625 li
258.262 4.90625 li
258.137 5.03125 li
258.027 5.03125 li
257.887 5.21875 li
257.762 5.17188 li
257.699 5.29688 li
257.305 5.06982 257.105 4.88721 257.105 4.75 cv
257.105 4.64795 257.145 4.56299 257.215 4.5 cv
257.215 4.32813 li
257.434 4.19482 257.641 4.125 257.84 4.125 cv
257.934 4.03076 li
258.309 3.875 li
258.402 3.79688 li
258.73 3.81299 li
258.793 3.79688 li
258.902 3.375 li
259.184 3.43799 li
259.387 3.75 li
259.496 3.64111 li
259.699 3.79688 li
259.801 3.79688 259.906 3.81982 260.012 3.85889 cv
260.059 3.96875 li
260.152 3.92188 li
260.246 4 li
260.297 4 260.34 4.00781 260.371 4.01611 cv
260.371 4.07813 li
260.621 4 li
260.762 4.14111 li
260.996 4.21924 li
261.137 4.40576 li
261.434 4.59424 li
261.449 4.60889 li
261.668 4.68799 li
261.668 4.75 li
261.73 4.80518 261.777 4.87109 261.809 4.95313 cv
261.918 5 li
261.98 5.14111 li
262.121 5.14111 li
262.121 5.375 li
262.215 5.46875 li
262.23 5.54688 li
262.355 5.57813 li
262.375 5.75781 262.426 5.91406 262.512 6.04688 cv
262.512 6.125 li
262.637 6.25 li
262.605 6.43799 li
262.699 6.65576 li
262.746 6.90625 li
262.824 6.92188 li
cp
f
267.125 7.39111 mo
267.125 7.48389 267.094 7.55908 267.031 7.60889 cv
266.969 7.70313 266.863 7.80518 266.719 7.90625 cv
266.609 8 li
266.5 8.14111 li
266.391 8.18799 li
266.219 8.29688 li
266.094 8.31299 li
266.047 8.35889 li
265.891 8.40186 265.766 8.47998 265.672 8.59375 cv
265.617 8.63721 265.566 8.65625 265.516 8.65625 cv
265.484 8.65625 265.457 8.65186 265.438 8.64111 cv
265.301 8.72314 265.125 8.76611 264.906 8.76611 cv
264.727 8.76611 264.609 8.75 264.547 8.71924 cv
264.328 8.59375 li
264.266 8.46875 li
264.266 8.43799 li
264.266 8.33594 264.219 8.25 264.125 8.18799 cv
264.078 7.95313 li
263.984 7.84375 li
263.922 7.39111 li
263.906 7.125 li
263.922 6.93799 li
263.953 6.85889 li
263.922 6.81982 263.906 6.77295 263.906 6.71875 cv
263.945 6.375 263.969 6.16406 263.969 6.07813 cv
263.859 5.85889 li
263.969 5.67188 li
264.016 5.375 li
263.984 5.17188 li
264.063 5 li
263.984 4.75 li
264.094 4.59424 li
264.109 4.48389 li
264.109 4.06299 li
264.141 3.96875 li
264.125 3.46924 li
264.172 2.95313 li
264.125 2.85889 li
264.109 2.5 li
264.141 2.17188 li
264.109 2.06299 li
264.172 1.32813 li
264.516 1.25781 264.664 1.21924 264.625 1.21924 cv
264.75 1.21924 264.852 1.28906 264.938 1.42188 cv
264.953 1.51611 li
265.141 1.68799 li
265.047 1.95313 li
265.063 2 li
265.051 2.14795 265.031 2.24609 265 2.29688 cv
265.031 2.54688 li
265.094 2.78125 li
265 3.03125 li
265 3.16797 264.984 3.29297 264.953 3.40625 cv
264.953 3.43799 264.941 3.5 264.922 3.59375 cv
264.906 3.65576 li
265.016 3.79688 li
264.969 3.92188 li
264.988 3.98389 265 4.03076 265 4.06299 cv
265 4.10498 264.984 4.16797 264.953 4.25 cv
264.969 4.35889 li
264.891 4.75 li
264.891 5 li
264.813 5.25 li
264.859 5.46875 li
264.813 6 li
264.844 6.06299 li
264.797 6.34375 li
264.766 6.67188 li
264.742 6.72705 264.734 6.75781 264.734 6.76611 cv
264.734 6.90186 264.734 7.01221 264.734 7.09375 cv
264.797 7.26611 li
264.766 7.43799 li
264.844 7.59424 li
264.828 7.65625 li
264.867 7.69922 264.91 7.76221 264.953 7.84375 cv
265.063 7.84375 li
265.219 7.90625 li
265.297 7.79688 li
265.406 7.79688 li
265.445 7.77686 265.484 7.76611 265.516 7.76611 cv
265.547 7.76611 li
265.629 7.75781 265.691 7.71484 265.734 7.64111 cv
265.813 7.60889 li
265.863 7.52686 265.953 7.46875 266.078 7.43799 cv
266.117 7.40576 266.195 7.33984 266.313 7.23389 cv
266.313 7.13281 266.379 7.04688 266.516 6.98389 cv
266.641 6.98389 266.719 6.96484 266.75 6.92188 cv
266.914 6.95313 267.02 7 267.063 7.06299 cv
267.102 7.11719 267.125 7.22705 267.125 7.39111 cv
267.125 7.39111 li
cp
f
270.984 6.95313 mo
270.984 7.14111 270.953 7.25781 270.891 7.29688 cv
270.828 7.34375 li
270.781 7.51611 li
270.578 7.57813 li
270.523 7.70313 270.441 7.80518 270.328 7.875 cv
270.219 7.90625 li
270.063 8.07813 li
269.922 8.10889 li
269.867 8.25781 269.754 8.33594 269.578 8.34424 cv
269.555 8.36719 269.52 8.41406 269.469 8.48389 cv
269.344 8.56982 269.219 8.61719 269.094 8.625 cv
269.031 8.64111 li
268.953 8.75 li
268.719 8.75 li
268.516 8.89111 li
268.031 8.53076 li
267.797 8.06299 li
267.781 7.48389 li
267.734 7.32813 li
267.891 6.28076 li
267.938 6.23389 li
267.906 6.10889 267.891 5.99609 267.891 5.89111 cv
267.891 5.81982 267.914 5.66797 267.969 5.43799 cv
268.031 5.15576 li
268.008 5.11719 267.977 5.06299 267.938 5 cv
268 4.78076 li
268.031 4.5 li
268.047 4.46875 li
268.016 4.39795 267.992 4.31982 267.984 4.23389 cv
267.992 4.21484 268.004 4.19482 268.016 4.17188 cv
268.023 4.14111 268.031 4.11719 268.031 4.09375 cv
268 4.02295 267.984 3.95313 267.984 3.89111 cv
267.984 3.70313 268.094 3.61719 268.313 3.625 cv
268.453 3.64111 li
268.555 3.58984 268.617 3.56299 268.641 3.56299 cv
268.797 3.56299 268.906 3.65186 268.969 3.82813 cv
268.969 3.875 li
269 3.96875 269.016 4.06299 269.016 4.15625 cv
269.016 4.22998 269.004 4.28125 268.984 4.31299 cv
268.906 4.90625 li
268.984 5.07813 li
268.984 5.22705 268.938 5.35498 268.844 5.46875 cv
268.891 5.60889 li
268.734 6.06299 li
268.723 6.26221 268.703 6.41406 268.672 6.51611 cv
268.672 6.81299 li
268.609 6.98389 li
268.609 7.10889 li
268.594 7.39111 li
268.609 7.59424 li
268.797 7.75 li
268.938 7.71875 li
268.969 7.68799 li
269.063 7.68799 li
269.219 7.64111 li
269.344 7.51611 li
269.391 7.43799 li
269.484 7.43799 li
269.5 7.375 li
269.547 7.32813 li
269.609 7.375 li
269.734 7.25 li
269.797 7.26611 li
269.828 7.17188 li
269.844 7.17188 li
269.891 7.07813 li
270 7.03076 li
270.219 6.92188 li
270.406 6.79688 270.586 6.73389 270.766 6.73389 cv
270.813 6.73389 li
270.895 6.78906 270.953 6.85889 270.984 6.95313 cv
270.984 6.95313 li
cp
269.766 .59375 mo
269.766 .687988 269.703 .776855 269.578 .858887 cv
269.578 .875 li
269.422 1.06299 269.285 1.16797 269.172 1.18799 cv
269 1.40576 li
268.875 1.56299 li
268.609 1.64111 li
268.484 1.79688 li
268.297 1.90625 li
267.984 2.17188 li
267.781 2 li
267.828 1.68799 li
267.953 1.48389 li
267.961 1.37109 268.023 1.27295 268.141 1.18799 cv
268.141 1.14111 li
268.219 1.09375 li
268.234 .921875 li
268.422 .858887 li
268.422 .766113 li
268.563 .733887 li
268.594 .578125 268.66 .464844 268.766 .391113 cv
268.813 .358887 li
268.875 .296875 li
268.969 0 li
269.5 .125 269.766 .324219 269.766 .59375 cv
269.766 .59375 li
cp
f
274.25 4.26611 mo
274.25 4.24609 274.234 4.19922 274.203 4.125 cv
274.156 4.10889 li
274.125 4.125 li
274.113 4.125 274.098 4.125 274.078 4.125 cv
274.055 4.125 274.039 4.125 274.031 4.125 cv
274.02 4.125 274.008 4.125 274 4.125 cv
273.977 4.125 273.961 4.125 273.953 4.125 cv
273.844 4.20313 li
273.734 4.21924 li
273.672 4.23389 li
273.469 4.5 li
273.328 4.59424 li
273.141 4.93799 li
273.031 5 li
273.008 5.14795 272.953 5.26611 272.859 5.35889 cv
272.813 5.43799 li
272.906 5.38721 273.004 5.35889 273.109 5.35889 cv
273.203 5.31299 li
273.234 5.21875 li
273.406 5.21875 li
273.5 5.07813 li
273.578 5.07813 li
273.703 5.125 li
273.766 4.95313 li
273.844 4.95313 li
273.844 4.81299 li
274 4.78076 li
274.047 4.75 li
274.063 4.64111 li
274.219 4.40576 li
274.238 4.36719 274.25 4.31982 274.25 4.26611 cv
274.25 4.26611 li
cp
275.438 7.71875 mo
275.438 7.81299 275.363 7.93408 275.219 8.07813 cv
275.176 8.20313 275.113 8.30908 275.031 8.39111 cv
274.969 8.40625 li
274.828 8.625 li
274.609 8.67188 li
274.391 8.81299 li
274.266 9.03125 li
274.141 9 li
274.047 9.03906 273.973 9.06592 273.922 9.07813 cv
273.844 9.18799 li
273.82 9.17578 273.785 9.17188 273.734 9.17188 cv
273.629 9.17188 273.531 9.24219 273.438 9.39111 cv
273.266 9.25 li
273.234 9.25 273.188 9.25 273.125 9.25 cv
273.02 9.25 272.93 9.23389 272.859 9.20313 cv
272.656 9.20313 li
272.563 9.14111 li
272.258 9.09814 272.066 8.98389 271.984 8.79688 cv
271.984 8.76611 li
271.844 8.68799 li
271.766 8.48389 li
271.625 8.39111 li
271.625 8.21875 li
271.484 7.68799 li
271.516 7.25 li
271.563 7.06299 li
271.563 6.81299 li
271.609 6.60889 li
271.609 6.53125 li
271.688 6.39111 li
271.672 6.40625 li
271.672 6.33594 271.688 6.26221 271.719 6.18799 cv
271.719 6.125 li
271.688 5.82813 li
271.688 5.69482 271.75 5.57422 271.875 5.46875 cv
271.875 5.46094 271.875 5.43799 271.875 5.40625 cv
271.875 5.375 271.859 5.31299 271.828 5.21875 cv
271.805 5.11719 271.797 5.04297 271.797 5 cv
271.797 4.89795 271.82 4.79297 271.875 4.68799 cv
271.938 4.79297 272.023 4.84375 272.141 4.84375 cv
272.188 4.84375 li
272.195 4.81299 272.227 4.77686 272.281 4.73389 cv
272.352 4.53906 272.441 4.37109 272.547 4.23389 cv
272.594 4.17188 li
272.594 4.14111 272.617 4.05518 272.672 3.90625 cv
272.766 3.90625 li
272.797 3.84424 li
272.891 3.81299 li
272.93 3.75 272.957 3.71484 272.969 3.70313 cv
272.977 3.69482 273.063 3.64795 273.219 3.56299 cv
273.25 3.5 273.301 3.44922 273.375 3.40625 cv
273.406 3.38721 273.441 3.36719 273.484 3.34375 cv
273.531 3.28076 li
273.75 3.21094 273.883 3.17188 273.938 3.17188 cv
274.008 3.17188 274.07 3.18799 274.125 3.21875 cv
274.188 3.20313 li
274.266 3.25 li
274.359 3.32422 274.457 3.38721 274.563 3.43799 cv
274.766 3.59375 li
274.766 3.64111 li
274.941 3.78906 275.031 3.99219 275.031 4.25 cv
275 4.375 li
275.031 4.76611 li
274.922 4.84375 li
274.813 5.15576 li
274.578 5.40625 li
274.563 5.59375 li
274.313 5.78125 274.078 5.93408 273.859 6.04688 cv
273.785 6.15186 273.676 6.20313 273.531 6.20313 cv
273.484 6.20313 li
273.266 6.34375 li
273.063 6.34375 li
272.781 6.46924 li
272.563 6.35889 li
272.547 6.35889 li
272.523 6.42188 272.508 6.52295 272.5 6.65576 cv
272.391 6.71875 li
272.391 6.85889 li
272.313 7.07813 li
272.332 7.26611 272.344 7.38721 272.344 7.43799 cv
272.297 7.48389 li
272.297 7.58984 272.289 7.66406 272.281 7.70313 cv
272.281 7.71484 272.281 7.72998 272.281 7.75 cv
272.281 7.76221 272.281 7.77295 272.281 7.78076 cv
272.281 7.84375 272.313 7.89795 272.375 7.93799 cv
272.395 8.03125 272.438 8.08984 272.5 8.10889 cv
272.578 8.18799 li
272.844 8.26611 li
272.844 8.29688 li
272.938 8.31299 li
273.344 8.34424 li
273.578 8.31299 li
273.703 8.21875 li
273.781 8.20313 li
273.891 8.01611 li
273.953 8 li
274.25 7.90625 li
274.289 7.85498 274.344 7.80908 274.406 7.76611 cv
274.453 7.70313 li
274.609 7.67188 274.695 7.58984 274.719 7.45313 cv
274.832 7.33984 274.977 7.28125 275.156 7.28125 cv
275.203 7.28125 li
275.359 7.46094 275.438 7.60498 275.438 7.71875 cv
275.438 7.71875 li
cp
f
280.664 7.71875 mo
280.523 7.89111 li
280.383 8.20313 li
280.289 8.26611 li
280.211 8.43799 li
279.961 8.46875 li
279.805 8.625 li
279.57 8.625 li
279.43 8.73389 li
279.289 8.70313 li
279.133 8.73389 li
279.133 8.82813 li
278.695 8.79688 li
278.508 8.81299 li
278.367 8.89111 li
278.242 8.81299 li
278.324 8.80078 278.387 8.79688 278.43 8.79688 cv
278.367 8.80518 278.172 8.81982 277.852 8.84375 cv
277.82 8.82813 li
277.727 8.82813 li
277.57 8.90576 li
277.516 8.875 277.43 8.83594 277.305 8.79688 cv
277.125 8.78516 277.012 8.78125 276.961 8.78125 cv
276.867 8.78125 li
276.805 8.77002 276.742 8.76611 276.68 8.76611 cv
276.617 8.76611 276.555 8.78125 276.492 8.81299 cv
276.32 8.70313 li
276.227 8.67188 li
276.203 8.67188 276.156 8.66406 276.086 8.64111 cv
275.793 8.60889 275.648 8.36719 275.648 7.90625 cv
275.648 7.79688 li
275.883 7.625 li
276.164 7.51611 li
276.383 7.625 li
276.555 7.625 li
276.555 7.65625 li
276.625 7.68799 276.688 7.75 276.742 7.84375 cv
276.836 7.85889 li
276.836 8.01611 li
276.992 8.06299 li
277.023 8.07813 li
278.57 7.98389 li
278.93 7.92188 li
278.977 7.92188 li
278.992 7.85889 li
279.164 7.84375 li
279.195 7.79688 li
279.359 7.77686 279.516 7.72998 279.664 7.65625 cv
279.664 7.59424 li
279.664 7.59424 279.648 7.56982 279.617 7.51611 cv
279.555 7.53125 li
279.398 7.40576 li
279.289 7.40576 li
279.242 7.32813 li
279.273 7.28125 li
279.133 7.29688 li
279.039 7.18799 li
279.016 7.19922 278.98 7.20313 278.93 7.20313 cv
278.824 7.20313 278.719 7.18408 278.617 7.14111 cv
278.508 7.14111 li
278.414 7.10889 li
278.258 7.17188 li
278.164 7.06299 li
278.117 7.06299 li
277.945 6.92188 li
277.586 6.78125 li
277.461 6.68799 li
277.008 6.60889 li
276.961 6.51611 li
276.617 6.29688 li
276.445 5.90576 li
276.289 5.70313 li
276.242 5.07813 li
276.289 5 li
276.309 4.82422 276.375 4.66797 276.492 4.53125 cv
276.605 4.46875 276.664 4.375 276.664 4.25 cv
276.852 4.21924 li
276.883 4.15625 276.945 4.09375 277.039 4.03076 cv
277.227 3.89111 li
278.102 3.56299 li
278.352 3.54688 li
278.742 3.43799 li
279.508 3.48389 li
279.523 3.54688 li
279.594 3.56982 279.672 3.63281 279.758 3.73389 cv
279.758 3.79688 li
279.961 3.92188 li
279.867 4.20313 li
279.852 4.31299 li
279.797 4.51221 279.684 4.60889 279.508 4.60889 cv
279.359 4.60889 279.258 4.54297 279.195 4.40576 cv
279.195 4.375 li
279.039 4.35889 li
278.883 4.40576 li
278.727 4.29688 li
278.633 4.35889 li
278.527 4.35889 278.434 4.39111 278.352 4.45313 cv
278.227 4.45313 278.109 4.5 278.008 4.59424 cv
277.852 4.59424 li
277.742 4.68799 li
277.57 4.71875 li
277.539 4.75 li
277.477 4.78076 li
277.367 4.89111 li
277.336 4.90625 li
277.227 5.06299 li
277.086 5.14111 li
277.055 5.24609 277.031 5.33594 277.023 5.40625 cv
277.031 5.52295 277.047 5.59375 277.07 5.625 cv
277.09 5.65625 277.141 5.69482 277.227 5.73389 cv
277.227 5.79688 li
277.383 5.89111 li
277.516 5.93408 277.617 5.98389 277.68 6.04688 cv
277.914 6.04688 li
278.07 6.17188 li
278.352 6.20313 li
278.461 6.28076 li
278.93 6.40625 li
278.992 6.54688 li
279.039 6.45313 li
279.141 6.45313 279.277 6.50781 279.445 6.60889 cv
279.664 6.64111 li
279.695 6.71875 li
279.883 6.71875 li
280.227 6.92188 li
280.258 7.02686 280.344 7.12109 280.492 7.20313 cv
280.617 7.28125 li
280.586 7.43799 li
280.637 7.51221 280.664 7.59424 280.664 7.68799 cv
280.664 7.71875 li
cp
f
.7 lw
106.27 32.5659 mo
137.043 8.67188 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig6_pose_graph_optedge copy.eps)
%%CreationDate: 2/11/2022 1:37 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B6X23n0n4IhK/6.+=*Y59lD0hdn([hO9VDG5c?EAjo==hp++6Z2K"bmcea$BCjpor)/1prVA\Xl2RD8D`j=3>B)Qqt7#$:?
%^HZB="@AtN0RWQ6m;6joTXT6,W:ai=UfY/hZQ@NKD0ETp1Y\9Gqp/Y]H5q<b-Nd:Z0c8/$j)ca&cd*AKIa'DK3tplM&Em3Df?`er
%Mt,8F3M`(1.24)Un,>KPfA6Qg!$qK$ILl0G9CPlDhX*SS!&b,F[Sb-(SH-F!s(q-5qKo[,0n\:u^&#,-OI>cR3FM"-D)W=h70>jF
%Y93Z]jVkMij^p7"d:hHe,3T%pO+uS"nMB&:N!V@__e1-E+AK[Kck@OXJB8T;H\0XYa@,lQ&bM$/8L,;SkD]BjAh)5]1!OZJ8i+*A
%m!lgLaT)=YroG1Yp'[='Y@]lCFW^H3b0oNo4f0%R%1u!W0gOecs,l;JY!m-AI+(/2am6ne&gq:K#["lI<!WHME%X]l8Sphu>3c[`
%//\kaK&Mg5D^*;2!)+]s#[`D,i:hrA+$r4cMLRYE&/'Z6@mHP`#?+f9B&BppN:15c?XRJUELt'3;hY+%L>dtss$unb\__qCmrn>\
%mlo[7lm'M)K]fTHZ0#*Im!8sc@LKq_!3`I()_KXugf*_NH3QY$2r$+6&,iC`G[\%4J?Srs@\6*cou.t7/26DgVR2enYPtc&a6Omc
%lHl<^RK6>K2V!OHi/?E%6elKm0nU'g!PSqY4G2>,Xof5oPG(_;;t)F9$N?U3IuV*:d1``(70)\X\^d>E@_KSX$bm*NA(/VOfba`r
%?OTs;`e5B=YcG)p_34mBR0[*rbn+!m2&ee+oFbm`6_Vm-HXmE4?oJ5jN*_LQ!d+.:XRke>7R/m3=Us&AfleeE`.&@_)slC@Alc;S
%gJ):pSXNaJog0o,gOOVr:,9.chtbS@&K3/C!"]+A^pA[4@eS%T2Ug>M$,48t!KkO:L:CoMW31eNqFEkppr7di&'mYSnI,[fQ"@)N
%VYShO2jsg<11UU5N7M-iE-`n<'i;H<k'jb6`VE[j2pgbC25c'9r#)re@kC-Z_*1[,\,pW]F]CenI0LGam[jXl[#VW$>5tushb5cO
%ZZdOT#Q)L.dr+_?%@4BC"kkeG^`9&%7YI`Fs+i.j1j'&mQNm6F#mUbYd#ahq3#[\Ld0IPOo0Mb7OJ)[K=uQmt+SfsU^i*fRkm..[
%Q\ct]O/DYI_DJt.%fodc@gorcMXL8i+!rZ).K"^N"\=1R8tS0;_#gQFRN4kGBY<5CM[iUWq`g0_E`9/*!rloOh?Z*%S"qM6.[c[A
%+gXm<j9^uW+0r0oK)5NBhZ5G,YA+oa:@j2d2:qqi\F"Y=+!BIVYHnfdc[bhHqk<mhI0-:@b2^"Rp@iU4!Y*pmoeEf3IRaK?kX(9X
%$o@ZC$KaZWY]ccjn2qP6`O59)]HofmiA(8:qZk7Eo[n>rg@kOd0\\QhS5"NBodt%Xk?tP2)T)eaQ%gfnZFP-`Dmn)ts4<HL[9h6M
%W3fZfk4I:;RJ<Y^s24nm1ZTI<7Ks0D#.P.=BJ]ntMDr9q;k-Vt;O])S822%l(UTm$@:Z88IqOGpKgP-%j'i%trGOAP*9V"Mh6!%D
%!V,ofZ=n&9JG'c.TjSlZkLBMFlNVIp^Xf%W\!HT.o%/AA^],sKjP.Xio`'pg-\82SD:!oh`e^Pbm!EJ\q$Bdq';?Fj:S&sC6gG3N
%De&_C*uPjLN6iNk5DDZ"c[TIn^'NsHi5U?)Yl:)NG>gjrj')F0L'M6aB"cb6f5SD*p-k7<m+BP_6UNt`ks&ZM+;rj;n!OcIp<rpZ
%[KKEHs+u1Ul.o_UN3!D/-@0iJ/7U;1@Yj3Of'"K5?a?('9oiNE9a?;&IFs(=62`P!A,IcOB"2KAB';N!m9V3/%.a'2+bBi]qa"/6
%oTLhhqKfU(+c=q!<ha-D&0*07[bWJ=s#^dY3DZ2&ZQ$%Pbh*'sh=bSA!YjUmKK6%X5EpK*_>OMGMZl\3co:/WCY`AQZX'Q6[klZZ
%o[kPA>!][OD#A-J/o+'`^@,;,n*/1UO]*kP$'V6*a</),d<rtINSTRXJS=CnG4a[g=55&0%Ip&rKoCJsin+[ZA!((KU?,cEQQtC*
%eiS/h_.(EBm4b_O`g`BOk:c8$d<`WblSDg%V>%U0WA3&nBXjN]`rtG'V?sk/9J`R=I^b]HB[_.FXQP2(+L'FmM-ohNq.`']K/ZK]
%m,iq$gY$`Z'+%?"\3l'qGic'&VTiKN]!._WpBq\J<e.-uf,afK:Fr(i&DE-^XL=T!OH$#b5S%L;!;V-*dKDHJnE`/e#m=LcTJ,5]
%W&?F,^d&%MUtbU4T`kb)gR&R^H_FgY$4O>>,i/d^[Wim9)iK+e6iMmKBZ`imZ\-f#K5FPTT1DnOTsllM-Z*ULWBhJ'KAgW$g\i@\
%'r\AKR7CB`VWqR^]n`Qep%8N!.X-ss%\sZEN=BqSqI#9ni0X@N]k0<XeSI;NXG1'>!(?s<T./bI_tpU1H@fAqFI$5aEe!O'8e,uN
%rKYZE4(Ce9g^SEhOWn>cB*q-2^*A^A'e8H4";(q["X8Tc64&kfbTDD/$pdadA2kJa84fc%O!LO">tV.PrHFGHX]OO-?cp]^XWA\)
%-lOn=p7<t6F!k,kFRhO%&.YTu*$u+i1M^eUbd*\/f^LD=r?oj+i"k*KkDdku[K5q&"r.(Ao&Uh3G<qdVZ:ONnK9V]!:Qu/r)@jP2
%7tR<.r^`)_qkZm.h"j.?/sHK4?@\*TeBW`:+@3gLKlZ^GhG+7)M,Y+BNq^6oaXadtD?D_ic:_&6Q^p.lfX6hb&)m%g-MT]/b3p,S
%IOlKnJH-[7b'1`>%Y_=O;?<!]RK>%8XAfng2?Z/d&l,]?D)3#cnim]8Cn)T+kk+.e60gFaI!a4$U=p?LD?m*H9[k*&9#fI$>iWK5
%.'WTB7re%PBX#jI-nq!M-`-Y>&:#NF<22/nNhgM7(^UGS,U(GX=q$*'@sk$*ed.n@L/L5*Km]\"LZ.IdrWXUp#cZ3P`mu%[NH>q)
%=X8FG):rE)V$3Gfj_(M8Zg5:Y@t%FVYU*n2q:*#[KNXQ*<=t;1qG`4,&jli4eK)M[nmJkpR=HqG&4?6nnS$1+l*5j?A+DgcGLGY:
%ng]``]`1s*[,j=qd![8!e7]/.C!WIX"M:1Y>o"Fk>YQAt=f@suS:53Do[?+\)WuB&<P9YLZ^0gJi2R9p@24K_c#tsU,W^sM[B7Pn
%XZj!\;m+t>Jm,Cd*k>C?#3j)begHilSI3?g7KuH(6.E,7U8HIE1gj"`'s^VC<'Z6il*.HaCTeRZp&;%JSdfXIJ-5X"n(9ofLjH:-
%kVV&>B:C%]kZfC(@QT;K_qEJBMi:D0i9Ms_PLXhi4NUsg]u4E8`P7&mqf*Z$Uj./JKSbL387dDf-NbDu>6%1)feB!89Hj/sf"BTO
%N.sJ=mD]P]'Z4A8k%ojE-Q,?K!4.\[_gb>o"%4Q49g]1u-!>JJW(+!'^/q#b9!Yk%!Gmar*Y!)ZFpIVrR\?[;%VLdcmHf1RLN%WE
%Cbk'p">jP]QKuZZ^lVIV]^9[H>7NR2R9M^,LLX[FSgAVeV[7<@!?:B5peGTiYc/ahL9N@&#j`uuB>u!c`*jOGe;$k:3<=_W\n:qs
%?N_k'2I,lQP;*X.DiZe4EfKhs*Kj69[Y9I?!)9r]T/n4QN])gC58o]@D)>E:_u\qYG//gPA!/=:"B2`GC^cDXCT'+@c1c8HTiWpl
%6lt#@BXWW:[DmG/[:dsPYf1)4-*R`"Z^nV?4MIJ_0SF;`oE=GnR@mIGr"-HLHAtD<HDB'rWmhn_(OGHc/H8ih0+<(8#L$4a9#Y3=
%)<k9(e),E9*Bl*h`jdp)ejQ`&Wn<O.`'A+C-O(LL4],BcPL[r7?KapJ[aBhtXB1kM&@U?]LVbP6/'ZW\%/3P$b>&+5L,3L&BMJ?S
%Z_G2>f[c`g.qf4j>C!9e6a.`\9.M#r$PL;qLi/b=1Mf5/.BJ#p[AX75d6$QRX[)nSH76Xo2%(pKK>0>dBl"6$:T55La9,Qn@&DHG
%qk0o\6V_3%RlF#].lLp^VKA7.'r[*,HEdROMke^@]btNU*7SGu2>sJmG^i]J;YIhbE<8i)XT;FRRSELVOVZ9INAuDbi#<^8JR07r
%<l1`1Z<r9RZ+<M"BeOI!bLZAD4f0$A#^fA)Xc,sr[cU5bra@baWN_jCK<o!*Mc%S%"c\$=7S<g>8r`UjpLsA`Q4&GT>jnQ$/f8B"
%.]jCJ9d+LE%*3K]HUZmB!PdO?e9Ze"dpfBZX2r^54)c]ajMFKtp(&ipG7/(S5`j%s(9"(ID"'UU"`.H]H"f'hN3ub*n(2/f*'DEs
%i[]nl)gG2j$NN*E3l"NFku71HE>'lC<Ga(&(A3)hbd*=VltO0km^(qnS=mCJ;P3n^0BtAMTgs/#g[N4dA4)*2JeaZh)#?Rt#+OGB
%dG0pohl=Pt'!-,-DkV%4K=@Ydf^R;9aOo)Q@)IfO*;iAmK%Z`4(3E^q0G20%#Fc($_*Q5_6(@-8YMr6?V-F$MQ07.Wd,n\RG&6A;
%)IkA&LSc!e#`faU_r2.JQ,K/#iFm.A`^b!rc"s?n#uWTb46UD:Tm$1u9YB.bj+FM8m(]U31F]3*SAr9Ek&T>FZ<=N?JS0<CC):q7
%9.\UG,Td+!Z0I,;0u`KLiI&rF(qCpp!=M20W?:E[7GO]u4c^hQE,E%_D8kZABN"B#RGhA8GF@pZF#B3gd*:qD4uo?"*p`P$Y3Pcs
%+:M3EgK=6QYbQY21P%Ko/%o1h[pYeN;eIjrg#o?MbtI23@=8/iW!Q<B.RL`R7jm9@oD;%hQ1]7KZ/Y.[T;faks-\a]4\I0a]%uOd
%L%,;=61i<LokSnho(`pD/5hCDCm(4SZIA:^.A=i7*Ao%A^T#/(on<PP3k`f3^3aYbl0alfND&Dm47[HVDRqDM[M.K5GRr.hIr*D-
%DA7K,AZ(*.4H[ANh`3JgXtOE;CMi7@o\P_sPV(AZBJc*o:GZX$;Ot+l8]!Op1UERSfW8-qB,7re<]B(:fVbdp]3dMtHR`?nq>m$]
%]^qO`Y=@*>oDUK4%50s6BAp(=47T5:;2KD?A#'*F7$Y5%5e4+a%_qdqEGUs6%_s?RO7tQAMp<ljod)\SfBR3&>=r"(Eis'eQJYT:
%pQ-[=cE;N>6tcE=o*m:D#]=[*$\jlS3@o,QhErrik7o7B1,HCpg`1ri``7WgZoh7C6/jM8G.o[B9aErH+Xj8q5XPs`9*+\(RER%g
%:PkECKl*H)jh=i1^/nYJE,_._-BgHVO*^T8k5`3N-fX0YV]M:$TuR.>/JI3mJ6&)Dd"P9#$`*1(!F*qPoNT\4U&'T#'YSo#K\f$[
%UNDFjEDdHgjYo+8=Dosg@J`&g^[8JY[;;^89q&EGeF.#Y*q>@!]XIYf6/P#h[p5PIFu"Vd\sB7C?M`@.:WOKI/8r;pfnk=a1e`@P
%_i=1i6l9Y;/h?0iePXFep2Pe_%Spk`#s]9YD*6.iLX+hE*E"X,)5Q8oh0$;/hX(gY-R165$%=Y@N0sq$"=pF:L"ilC\+/jpmjmon
%&c%KP+7VYV/!6_0O#UCibW=IAc^0m+puM"0_6VD)FLt%bJtp.R<N[+crA'6)-K3au^[eg)`KMV]XZ)mNVO(\;,,IhDhh]^+gYKl@
%SVA'SS?qM&Mu3q5_<W!GRq?OH))VRufCBC[c=5+K:NP90I+3&0_f*7*q)m/bMiIr8FWopk%AQPE&tRL:/3oD:4cZ'ufHd4kVYW>T
%l7Zn0[4AnE-XcK*I"\[7GW]N/>s3,00B.7,puZWE$X^,A>9"Ouf4^>n;8I2ujK<Wem.$1VNXK9l]O)UJk%?VZAeqGm3o-6JDZG`R
%;ZO&D\^jQjr1,qISo.6!<q+i+>peX6:-$^9V^Bu(#kW=(AOU(2dk1,'*FPgn[f#sNpO*k#q_)\$R(fBN\"g(4h-IV>H=''h(@D<g
%DPCHfBZ(,@16KZ%D4=Zl;'9_CW./SB"uob9DS\_"8IY>Rg\pT!W-MoL+[b"-iG[(/\p;XFo&Ygs[M'du8![P;gb7O5c*)/RHQ#V.
%V%UbK#;l8A!-qDSbE-Z>I_*(."iR=;0pHD1QXu$l`U;A-_\]?I2=XMdY/9/?^d=90mjXu?>NW_nEJCERj#$Y4r-BFgT=RV`gE;4M
%7Xf!s)\<J8FMPRmZ$g9\2h/UjHaM)4`4aH+?idOZ2L3[;T`I@U:i$fJnV0CUF:bmt!?j9m8e(sh^@4U;5,PjXY^M,:6Vp#q&/o_f
%#UJc&4k!qkj.N)c+Z/\23L,7mbHY(]*-D6DFu8Xuf^%X)/HK%_+2FNC1epbuhptHjKM4L<6srU_Apr[4o[4q'+WBT].F7IfP9HD%
%&WP+Ai9:EVb-c^pnt_FFKP`)cAXNb-%n(iu$+8.tR2.U`p(It"HReguGlu<N$@?IU`gaMrO%\Q#6[GF2#`TJ1f\n#`n.`].%3$hG
%'eotPC6"#mdGtB706%7$(t.h[X-F^pHW#G1_IKioPO,jmVbB.Z/GUDZ[QPafdZWQi-@?9*".W@'XrhP!@"Vt2XiiPWl<SRP(oI\H
%0>>B-a7&@db_W-M)_aoA[&,!iH`4r66:6>,@E3-]OP5AJFK8>Cj\o3k"oNn-&(_oNoEo9XmqVjfnMQUk4$6?A&bIami@P'(%BsKD
%H0WAsrm&f8I37T^O\t%]<&,UIYcR3;Qj(nfn""4\g;"[;%\[I/j;HogbP`A[AfP/5cNk$&M0oEh.(Xpbp6Lg(Cr2A#=D\pj]Vp8\
%1e=%Vd"LFteU0EFo!YNlD.Q:??CNIee%nP1GqM!R$$Z05.Q]4JM*D8n:[#HKC)u!S1=_m4IT*Tu=%1$ga4eVtqf_Rq*CK))op`+N
%llXB]4YpX)@qX4&J)RM)jD5"/X%%iO+o`"8)PE3qec1Lu%FE1tC,@oqQQV2.e6l:$!Bs#!T$NP7:Mbc[5([%s&`K^C#%S$o*.mLH
%9XfBO]1=C`'Js]CePITbaF/:9hohe^HPpt=+K07hrCL(PWW'PIH=unpY^UZ.=a&_Pht=Ui4))d&I/3;jG$=cdcIn,1*=nZ>e@433
%^iIQ's*($:]QA)-133AOPQPU/H0Af\i=nZcZ8*E_ZfC-tidHhWZ(B<".\ESO@@]?e)*oNr\T`tt5]e:0niZD%Yc\`sMpV41kXLAZ
%J6:Lf[`RG/1Nu"(cF1%j20$C_I<J8_#b-'a@2#30M>,db1?nn20dun4if6'95fC[c"[S@\A/P\.XnC3OVrEunlb_e1C)0no#(;+B
%jKrN-qu\qGT(/Z2js[i<>W:O6He[CIB8Wh'$2[!Gq8gFj'M4WC)jNIKq%U_?gO\#;b6*>/-Q_8Scl%Gl)DR(\93d!UrsJOJP::)F
%q[>d%g0;B>rq$16qVFk8it]&mTG@7pbgN!phf@(3\Tf,""SXn9_q6dsU5!)<"mhRF%E!>jB?F^=^:1X!48gkRJFD+Y97V@=RJETk
%3/.#s5WTFhbhRD\(*=Yfa>nr<MDd[`AJTBBbg+H$<Zkd+cP1@T:$5";h`EY>d2s^(chAbHCHh]%!qO(pCh)/S(J<S)ZFX8c+J7Bb
%f_A!)aF4g<j>lUhDpfogPZu7-BEjfCd>_*L,b"^)N\9ngM32A.pB3&-_Yf](lejc(e_24Tn<8QBAK_9bUC?pTo4DUfl$F2IpsA'Q
%+^A_<i:YR82+dd"g$lng3VE8'UA;@,maI<Wk*led!+onqjmi:A9g%P\9@E\mZR&64KnL!Ab/MMUTne\L4:qQpb?;LX#d?4F&:X*`
%5HO*M[aq6:NNkP[H^`8K'ddrC)h5OO2S//BkP.4'>!MH(;=D@F=uKX(&399g<=;5.+:ATY__qKY_JCg,Bk@f!3rUe4;H_&H?h6qk
%fGL;#<>mli_/CogZO]%nY3bm>mfj96m5i[SDr,M%0C]MN]ZgGFf[G%lQ5d:#I\l09;D@R%f%j%Vhm_Auo)3l\#NOQ+jmIWUcG:Ji
%Y@6q"#iOfrR76o(M+esM2ot8moi!8I9/5ku55ji@-5h#dhT2q@aGBX@Dh"nXJ5JaqKa1W@IH>0:NL*M/L`26!Acl5s%S#!bE_Z`_
%c`C(6PjWti0PKf%R)=Ln/C/;hop[,b5Vi-e3OdZTOq1=9%QYZ98\.gICfLi@HK2_l-B%#'^-;j\ZMn20aGh8/JlJRWDFWs$5P`g;
%>l?tU6t(/X9A/"k9o*#7YoMsqB&f%1#e.G)SYeH3Fp?7a"udJ]:sQpjfFHG83`u;28^1=Sp*6of+P4g6g?Ieqb:R<KEt]G!;<;YC
%"kIt?;n+E,o[Bj-HQ\;SZ(R11J9]Br:.;'&klk27e76);9)[a]3S-2CY\U;"FSI)P9uUFfBAjZAT2)lDlN>/u"m<XgTKVq5?54Kq
%ck]157pCp`P4p+a#8ai39i(ES6c(;`-"S\8=ft%<kjMJaIFHG'hl]<HNI0c%$"hc%+1OfOo2HpEGtPQZPsfM'%>NB$FF[]%DkVVR
%$^(foZY7Hne">OUO1V$^lAn+t1g=$rm;<ZTie^Imb<pER_Hm9Rjdl5J<^uS8h=4$2`Rt;*]$e_rK=a/d6X@uVi%Og*TJ.;=SC8(=
%i0HJ"j50Da]i=0,\!*oJ0=4GQ0>DpE@tl2\Ilghg6uoWb4@bM],2M%fc`"rkE=iL4nJAQr';p3MW<1P%TK4U>=QcpM\BAM@;$XJe
%Sq+YDAo`O-G8i`HUXYn3[X>^hho%FqNC*>,RRia21;8asD;U.!5IS0hYSQ&F[GM@*)=bl`=U\\p^#-&kf;SR'!Bi+&JCW?OU<<4Z
%?`mHLISuB\as4bt'WM'6E^51^Lm>NQ1Z1f34sIakP72k.e$\j^'7C5]b@"LS%:FkO>3U"5nL\%25HJu15"u3m$PLlC:]#>G.c"2i
%;Rtb^J$4Y4ZjPH[25"00kM58I'p1.-@dA>-_.[65=M%04,BTK+]S#g;V97p,TnXoh[]c[J8@AW2FRW^:c.a_%.-=]I/6SM?q70@,
%!-Vc,HkEp:i/Q%-mN3XG:DFDShrQcBKuOU1<c$SkW<B=IDe;;_M;EBdrqluP%5=)'O16*eVO,)-Ge)cq%;nE%/_qCa-@'>lAdI9W
%S\`='`@?K6DkU^C(6nXj32^2b)ut22Vd$:X(Mot2p1,8PJ"UH>fL(E,n4W&ERd]\r'@D=C].MDh#S#_CO"^!KE<Fkm2fiAX[$l&$
%Wk](*66GfHDuCBp%Gb`@X!!Y^N4WJ&-0T\j)B-kpV3-]:,B/%.frbM1,7+G[X26GWHXs(;Mp#UkemA8[aO#4K5aOc`='^>i/]/m@
%5RI]$bgM\CXg)\i\)5QRK-ACQ;[$JM0uLrodM>tu(7s;*oCGmV;5NgSN[ie"GpihgWD9KNaJTgV`&Wk5m]L*_;4%$u]L8Xne'D:1
%'O"nLXg6_7\L;nEb;bc3#e7\*oLJ`DBM%38\@g^="tt9if_jf"'-!!&Xk6Qj\BfZtHqRl85PP\l0o@]jPdi%%n'Hio!NEc;KQ`X:
%ID3JcGbo(U*i6<*E3/5=,#_@aA:FEu%jX_SO:GBplR;R,nYRObm>an,BX@uE6t*>%<1f5l9!9D]k&ihCKHIKgaACK=TXjAfin<2k
%b`fOPG-",pS-6"N`Wc+F3e/(RAa.>@;sm#H?S\&TBMd/So%-a97bPVJEm21kfV?pq%[Q:Ki8F448e=pQGl!LI(Y%?ZXY1%ah)MX3
%HGinKQe4W'4o:H6?m;$.eaK%&l.e6$oNh<Iq@7nu!?:K*=T"4s;R:i7gn?FKUP.ZrFe8$EDe7MU_'])$5=N#r\7C:GgBUPLYEmD&
%ZMrqA7`..gOD@lIVAj-%9?WF4"g2.-Q$:jgARs5I:O,]ne$6ME7_W;tDLaU-//DE;7n!]),"d'1$K!hlNQ!poD?Hcp"0%)_04\\R
%-<l258?8;!XK,\>*^moJ>/;ObUV8EJ>AfhS[U%`j)C.Z:qUc0V@G<(;]nV'`Q++O7mfNpO=Wd()XIK@Z)&f;Og#kljo>d&W[?&fE
%5A<F9]M\JqnkC!HW%uU[Vf+ni^igG"LKg6&kHN.HfO4E0KJb^B?NV5lZeL*ZmPW8kcQ<pq7l-9LXl=SVM)mH.6e7e:T`CpMr0n+)
%9s<"Z)pW=FTO&q2VhQTDXpAO)MH=OS^i$<Xg^H`.Sq6k9R(!,RL"h![&?1q86(S4(HsMsKXH2XM^QG7XPbO0>CX;J4,2F[H$%ITd
%(T;7M<H=VU72eTL5*KsQWF=Z71>BZ!ZdpX1'L3VI?c<KV[GmQ>5k33ZkCH>(R5$cA_03J"5lnMnL0!Ic3!s1_WK@E-DO:ofQbAk7
%CGo-uZC,rdE6CXaDe;'cl+8%NNuu,&BG6^7gVCCic[Io[TKCJ;0_DP3i;%<S/K+2qK0N5/UiVUB-nr:i5@AbSp8QpSHfol)`KX#0
%EZKkZLGMmRBmVKb(40!]ZXulIcJ!t$Ncci/kE#DS:r.4%!9!3O_k-QX'?V/V$OV,TO6b>B1hG62RTfa!@a?#X8=*;W>WC`U&='Nq
%?jG=?42>A"$87c%%]N9304lH2@M4+iH%>XC*l?AP$rAS"<L0EuXf=4lFc2Y>iE9o!'d7tZ#5rDG.Cq#[,H6#fTBa6O?'<]C*Ms><
%D2"b^$o`(f<O#/"\$X>X,],>`3UbBkcW5,S[K5$H:Q%.3<[^*i^k0he?o8uZ>.N[@dhXalCkN;N>#VX::%8"[h39g;H/kbRGKH39
%Y:7.?D$PR-'gGfgE6/+Ugbd[#T>e`VrkLFQWP(_C_-\XqJ(Atq"tV@TH=`i(-'(m/i4]H&'s+4O&@kI7RIKJK&C7^f6P(Kr1dbjK
%"4L`K%m3AmN!udJp<]>sIPcc7/&AI>m!C%1@BlrMjR5D'ee8YoChqb.k3s]8O1)^]M$ZG.R+V[>kLNeITQ?!'R41E,,XcA</\J_q
%Me*5lNX^/RCV!j_=+f18CIk+K[4I3\b"OcE9=[)Vjh1bYlgq*s>c"pWokisP>,\J0l+NQ$/*uaX+7\(VIXk.G0;sdAhGMof49SK#
%-CDV6-dYihg6!YG^3gV`iN(!4<;+ltoRsCh5u&^HO**4N8Q>Jj#$h:bn1%@,;t$t[7Sor@kMiGi7EZG>$a!LS/*I:]n3S1<&srfO
%XdOH7Vlj+o`Je\7R-L`3PC"g[A5^n#C[QuI`V!utJ-+S`?,]uj/aOV+PH-*C0]=a1W!!;\G?(Y`NM#Kj'bJIf(cb/_Ac3H.6r/Mu
%RR]:S^o2Q%XO.i,$@Cn67!ceQLP$Uo.B3EdM6kf,WtDQpd+N6&dB<-dVbCJmnPS`UMZK2-gc9?+4$"+.$ElZ3Y$TUt<)*Gq7R"i<
%s#BE-dMVUe2OPGbh;lCk=4I0n^"WiU@2EKUn4&+eLMe_fjdthI2onqa2/oelNdl<H#@]Uh-ft1]B/95sG!:#&?Gc#UF?:SA4$WZ(
%$RD<RIc8,Ln-M76q]B"R$oNkWk!_r'IR$V`f;.ockIb_dVImHTG].bPXYB4slqG\<B)C%]eEiXL^pC5$a6_U%RV(/]QSQ107j$^'
%J$gHt6$(WV*8(+rO.^^H4Rc2E9):=UIjFY%>.u<<?hlS5;A5Z8`BFa;K,>q\5>8[I:ZYP%\kPYOM&/s:r>+VXR#a1XHHX(3o(VDG
%&a;iA<u`.Yc#JAg6t=9X0EJM\djpjB&U21[*-mul>S6a8cKshWK4b!s^+e;cR2I!7*?SP%eUX8ITI1gq1lu7TGk3-i$17u4;/ORM
%<m#&L?;n.1*q)!bn3'm24n,k`+NAW/'L.]EQ=8e-%eHr]<![E8ajO07'mT>YlVB[uC_4kdN^UgaM3Gu-AfW=]^DbceP6LQK3#N!;
%@,5M!e?JY6ci1:#_^^Tl;Rl`6r]2rj,1^)aXfdDdBNYbWDou/qk4c!So840D'o2[6Db\6Wmq!fHcM/fL:r+'U=?:@r5oE^V"sFJh
%^(L07W2>CD3r]l(=o%*#-*0L`1+K;5^%2D6F6rHs(iJ8S9G@iXX7BBa^MR>d22(Q>=<GbfFW'5Deu_u+PsrSbXe4j&V[+g2b[F7-
%[I;<eeYtp;p-XQAHj4bc[TaX8V?hg61;kBfck@##W*p]$]a3:k`qkp@=FNX77hI7:,9kuJ2OV2rf&D=#7D:3\%G5$YnO<=H&aORg
%!&&qj+i^FgnsiRn)RA-&,JaU"XKR$r^M^GIXB2?P=?p-$\\G2ne$^IO_K2NJ3n?C%fu)'MmUMiT/=pX%]BRn8Ebut/a2)_Qr?]3h
%_](VeC?auH_trZ,ai55/H9?*i<lf"ME8NE=Fnm"X``ft18#ibfLa(F(JhF'4"_]BWhi19S\:JiOdB*?8Q*FBf]kTb2?rk5".a:R0
%<]E$9`6H>!lUq[;7<F>l<#KK%D/#",Njo^&-u:rXqlT.&4#X[b;8`6$]XT%=.Tgc;QW/X[,-1d(I(4*t<_jIrcZQ:W;8N)@,!H6=
%:*m!'e#o=sZ[(p2ae_Ph?E`*b`O_ogCu8u0+,R1+PsSRbVo`"WS%S1WSkD[X)<T%XiNNgjG1kkp7NFKRMfj!P.u7;iacS9tR(Y^W
%5fBf-XL3E0D_K^:!Nc$S>k>nbY:^=N4R/#:]q)fC:CpQW`g:rs92\p?+EC9H"c1]W-l8N2]]R?(j:oo$IQT14#@#J"@YGHK]+%N;
%@j`Xtr&:ls74K*fkC)FU*Fe[_@L_."hnKqb!,L7=_eSmVC/]d#bt[QX,9-'sqE?iNYs,Oq<N19LAH&""OhN&t?hGuLe@/YNIBh=!
%p/G#>^AXVU5@/5l?Otf*i^j>g[AOGkLrYq+;qC$N-#,HK_1AJ4]-jU-^CNIjPkT),7()Or:j\WXWoH\W4U#L5)J"[po1ML=oc-gJ
%Po=C5qa<5%hoVI!QHd%"BQbq=Q.OnV6n@qD;gTE.g?)b'o$`8[JEpfc%W`'hV,i`B[*A@3;sB0l:Wl/hg\mf=ZqA!d7+24b%N@MB
%0;2WOmI`O1AdNse4oHNf]5J24;iGB3@H-lki_k(#,>.U^EPL5V'[[HaUFK(:0T2Fm3%@4Z"p5e^rUN+O4<7VHbZum*p9[ClT!-?&
%6lW8MVn$`Co(q!6^A_+"Pb//,X&_?fHW)5ZDd,/)m:BgDfmou1.nWk:2Jr.%;b?\^>RL=N$ZdLgr_\+_Y^`;K1#M`3>(]U`,/.l$
%:U=q/K6%BNFA$Lfj-DL-hEJ3-/:#"@`LOEm#G'gBVp'WX,*?:TaP2r'B?fRC&)gUNJ5U<rKEqEEjKf`M.%AJ+.o,S;F2P]bFh<1[
%nZrKUe/#fa2:]lCefSXF(@Rt/ofbiG<o@V6pW+EXU3;\2**\>FG!E?dV0JO5c;:Sp&`([=c[&rBo?L2";/-J(`&uW/e8^s3YEc?s
%?G#K)YOc8-$nG:m!b*A2aul_4"\*QMp,GmdqPAbNi/UEHJaqQe7E!>bA'V3,eM"`W.0dB4C7N=J=@aifD8WU_RPt5+LmZkFOWIN(
%M!%aA!fn#i'd(S#"0_0p)hfN&&:*M=`JRn.<NOQN(lMMTBI&CJFf^_'kH6jHBV_S)(ncG'8mcGFcNdBaM7GVDkS)#)1$s-TfPjRF
%L-Pr,WlEcGlYJX22cu-6)Nr+(,`=Xs#O]7t4j0sZ5pM!j6WVM%`"gmQMKH6tQgj1/T,Z)&i8R<IHsqF`<tIh'Mqo]FGAGhsB^%HS
%\;Z%7bJDq;oES.UMp,Dc0[tas;:)r!UK0LoncK\s.^\O"leO/eB@*JC(I/bc"-)1e1AA=2E%r;LbZLd,\QeK_lZ(/^M"M$ui@Kui
%n6o?a6_*cdn!'\e+[^m3!G=S--1,RV9iUuMb.6.h*(`^QP_cl[/E-=-#`nt(,=J]HiX"j^EJ1Fe4;am`Vh+_9$?HL>mmk&Om-g&U
%`H@eqR:PhcQF2C65'7?4FH@MRgj(0Ye2\`@P(=6u.9^Pkbk$P?NAc9Cbf)<D3e%_To(pl:osIAPC]QeL4`3-iK&VFrl1qm;VjC?i
%H.E3ukgd)'?kC<g^dBqKbX`3RUk$8m3\?I\p,g3^Wlt"a[8ZH)f+T:ld3"Br-rd64^>)4K^-$BqY.Ql"cU_J`%qMMO?uYJfi8^"0
%c>CrM*;bMoHg[%9HX`aDk!C(hWN,21EEm_S\<M9QQQt_]r'bs'BJbKC-K?5E1PANuQ.`iI\W[p%&l&P87<pOPS%cJnL81GdD(ipq
%!^j:(O<V'j<Y_&Q-sT>:(Eg7K=F`crYCTP$XZi^S!.'lb&Z_)7K_G.@?j&[)"S&:t[g*f^o"NFu#&R<7\_t0DXMR2,pY"d)+bP:W
%9')`LPUg62I:=3-XD^ka^(HR1k?VYd[:^fO9UoOOB[UT$r#SPT4Mkb^4`)Vn;/9QEh6!-C;R@dIVPH2h"dt0XQ`!e])4oo/JK3HI
%M[#+ibiBn3[V-htU1QQ7h%+AVI6nE*ka!mn(+h%\9/,teCcuL)/6^b+S3[8""H[_SUM4RIoK32&)Kfl0,N]QZZpDHT)/'0O6[+b[
%Z#atC1oZ)SmhdZ<&"lXu^YR'F9ul0RAsedLmHnp^P=`6YM8i!$pmB;Yq()&SI@4tK<?B76B@1PX7&RE,haOO8f<TOaF`nAbmM*'?
%)K'sR)A$:IoBT%$cQ_.sW>sqngJqkW)[97=2t9N5/->'_L28Jt2M(]G_smqjdATZn,GqKEkgbJPi>iHrcKN@Ph4C8k]PcVN2H`u_
%!9sm6cnbVUp8b:$G0-k@qGVDUdFK`77\T<2@O!%C%!G:&K7b6DP^kk5jG[T1KKl8uc0'7]5":^6/X2ljbSH=$Kt?*'oP%qm.LK_N
%49oZ*F;[rk.Y=:UED`Al_O]/U1dX0jUC",:4ifWBYSIt)P^+?ee;eW]Ie"9liHFM(XA37+;AIe(GXR7H?WE-EJrn":V7G6Dk_5\&
%3:nB-Na1o`H:_2LLKA8S`P*lr(V>PDV]1Qbho)\$%0]ZeK+?)1L+@KcaMfqY&(uqQ,78_t"8tJ;;UR;JH=fQV=nY(%>*#\96c);O
%(?3)crY"As69$Dj#&$'`Z\KgXZ?YG240Bs!Wq'IGi!fpJ,l._n-?re*6m]9?QGn#((tt](P)u-c&$bt+AnLo^g:(Z3rImp99hYA&
%*]B:Y@VhdCOg<P*S(%oeb,o23]i[RHOk61.&Q&X2ntmV]M^PZsL\AF[*-Ps4H;fqV7"\oaSD@]$AuQumL*Vf!aH19A-].tqdjbS@
%n,uSg#U@fGYYTY@ZAS3O0lnLhUmb(L0-N0bV5p9eX8oZIMJ_X1:Kd1VD5fa7D"Xc_+1f]1G;o#2($\G>2p-p\e-KtYBL7qaHefNp
%dK4+9X3d5eL5UgL2iJ8[c>Jh3;;!DJ#NRkE43BYO#a"X%j2*C;ZN.NFFGEM>dFO!WRcb*e.M.TKM!an'\$OgMH[>f-2?92i1HSb<
%^lD!0N=>4hW`!nck;0E-`CDq!I_:hc"0PAF/sC22\!R3fc@RrTFNfY\qeYMOjouZm8(mW?dLC_)OD\<d`Nabd!8:;u9uVX7!H%ki
%;?6.N4"_Z[%ML>A3DC<O&TONSL!>C5)j)EBh=7NArlAMT47@H$3f&G<9U\mq:PmhWKR^Y/i?F8%YUY]@1=.IjaE,A:Dal(k:e"M%
%4=dCKA/ho.\fFZ-$JP+44^e=b?fHsJ:-G<*0q(q4,]Q4$:jCf045C+bCc$4]KIM%PUC0WCn5k;fe"-W6F0d>u."^3U]ofK+aCn>4
%OI;iS*YGd.K&!)@_umqYTSj1Q\UGN'<t4pe3kdQ='R!h9@Jt\Sk<Xp$\mbOCTP7U09$1!_EXSS3B`6u_8mV`UU=KP#O-`^Z!7:Pq
%Lb6>c4?GP0F[nU#-crgG#=PTW7r@@d,](P;p[S)W6TN/&.(`]d+(M`(SICcO_^t#nqbDqTkbMgIW?&#0-tZD%=V3O=ns$=O[4ON!
%9:TYu/*mijBLf7IeW-=lXrVu<P.X\eKsYJk\r3WR14]c!(pQ;j[UF0RYcAZ5<mTDslP%8RdTEFH3`C(ZI$sE'>Ge9.aV]cld&M!=
%X-T3k;raNE;oju_P9A>Fas5P//M_%aAs2iN3)<#MYop!<f%_7Qr<&bXnF@1-'OU"qqX,346_<Lt1\<1)bSc,3ZL!?NV+b5)%F,j&
%q3S$UlHs/<,3.iU(,<[m`tTS5POC#B2)c&EDD,.^()EH,T<aFM\U=#re]YFboc1!n")';ccKE]Yjh&BeQHguC__\Y0C\b.&@gpX3
%kL6Tq]+RaQcR\1rYU\/niJG]iQ1J_Anm14NMs$>rC"MoI%B))*q6Xr5Y40lYF3=<cC\b-/V2M7<o4chIEGFn=E^&ko5/bg7.-K'^
%jl8gO>WJE5!Eu5u:P^(u>BkGuT6_O1YCSkT#nV`,l/ddeY-fj*/hMX;mfK#LGl(6-%:e9U!TL]`W;LdtS\fSC)N["2<.',K6(-&-
%.\"@*e#EZ&9_hWB.F`mFQfY&!_Lm^\"%@Tl7sGU/3eQpMmD;l3:KW(77^r!k>oJ.FaDC'Mlh?DN4$@hmg"?Brd/DZn426Gi4:J$Q
%jNcH:P8I,0HtS5D^u.C-ZG@ufoB;Lr*LgE1'Gl:2G=P/l%u3Pu%(];^ATu/c9@QBXTT)9qa[oeG@VDNj@R_!CP!e,1AlbQ1o9E&o
%VD7m(o^-dR.>I.p#M8oirQ.keH9IA:H0pL3UB59dD!BCU&5+2s.Y0KlX:ZAe/nm_M!""jQV2UpA,H%^0nFAP+ok9JYSrI_`9jqsi
%<5FJ^9qfKJ;l[T`)-p@'9>*fT<\;1NS(W+UpB@\CqcZ@C8F+LY'j">4Q[*M^VGJurr<faL5GG#O(A62;#WBdk*L]`WO3rumSodJN
%$i]?ul5sMT$oIXjO&Lk3;u^nadJW/mPK&O6__NN0<,;l,:AKnn1UebC'e9tMM9FaXl(3Xb:]Z+/7aE/El^ZIie_`eAIo%TWepoup
%HdF3*&aa<F!59h?@,)b56NSC@,o"XEOh&!=FK:NmY@LF?Q>klmGd+HIiM``Ar@+mRR2"#ELuCUPC/eKB@.-A<WRs"G8-.D*%^T-2
%%[^9'JW4."Q+EUBn!t*AYHUVPWJ.=gcp4!?(#Z=Vk+GJOSrNeK0?ZCI:-.''q^JMII<!L>;F$RJL=`P*MA+!D5GdCL5oLJSdTmtC
%]$jm,dnh'TIZ9qp:KPCVVi':k.XIl;-^8.])6VDFhHU@7NZ%06ER>`9)^UI_hs]XR)d!ku:@nbNZt9("k`,ThB"Lq2oH_;nTN=uS
%5'itF(Kd!LNo#<&"`,)+,KB'.$q>0<[*F4hol0(`DdY;i*t(E,R[6u3&A@&RNGbkkHM#3RFc^"a5QVs++JbEMiKY;/=+$j2:2-dQ
%6b9"\F)c=rKk0OQB-L>=LVo''s$JkaTU=9FZ"Fe+934!'f[/RC7_'5Pe!(`X@PAZdYD`o;6V(^X-^OPl93g'Be1'oD;UMMTK%WIa
%NB!JkZkJB`C11$Y6`[>"=ZRZ:Qra$;/GMr1,OiW+rN2!A/+[<.)IK"Yl,l-U[-NWMk36p?ALd<(khnaHhXQ-'/+\clL-;Fi&%A7;
%ik.ocjrHL:7M@#-Wm&pa[Gm1m$WQ7oi>4O(XN(]Kk&Hg`o&@;T=6?L+c(ur^FM'K=IA&u?I>PgjW:G'$f+"Wa!`5[YX4'?!-%P-i
%KG4DCD]7:#;D\jPKZj'8C^^I.+:n:$c!gfHl=0(&7knV.!1eN@!.r'>7U1:L]0&T[=K<K^XI+9O.)d*,kt-YX4m"r6g,.l2#7[cT
%f<Yt!'k3^IX54^I``&S5^[`+M5c1NX6<epK(V"4Il<0s"M5/b+F.o@h&KncnE/_<:#ge_";-C#D0!ZN[Wlbp7fbcRD&[^Lo#=CO`
%0cO9<";p)`_@le6BX\pN,HZT5W1M=OP_Lh-/WtOmBT_Z)Ko0D*IP4MC94#4`;^;_N?)C..!]n(e(.,Q&OXr&Ydm*&"Si`lS7KsWc
%`_ispns?0:4A]&uY/`_IFr6/O2HX8AfssFA7<oNRAgCGK3_Z=*4Z57!%fQWho!%5te`H`[7<tg.SjsOWW<_lF>*R&R=m2)cSm@S)
%KhdBiC$QOe*o(_8.\g,+(6]-GWir3Y(](&e?O=3^.87&Fi8g)_K]@m^X13k*FPn$[Co:t@SRU9bb)]BMhjLuP/X;+QF9_GhZq_Zs
%K&)?,i0@ItY("p/XA?.nbb]-,Vd4)9]8G0e#+\&SJ.TIlhU]1CRpFL8-G3%o<YiT2fDB/M,u0n7<9"-g]\\;XYID`9<]U@JeR?q.
%fj3hI$#b#/k*4?nHB*3<O&&?NcsnTCE8OSlG$"DN32Io)E*MYQ)S]`^>'=NthDFAp`I7jbLK<)6c`N'>h*eDt2.T"\=]an-IQag=
%4*+4=/%g^D_!5"2Vbk&,/n+b/\5r#Xe\JE3Y0_g1F'km^qZWmXe;Ih3<f6UN<He+2aKSuBmj\/cWYbQgcFodB)V0HDecHGI>+P6<
%`p^3%'s%/J&o+IEfVMa;GF^DCaefiV>;sE[54M'mqlui<2%)"Z+BE9(?+W$7!6OU)F8WCb3,6i/(#s$++pP6_Cbd$3'm%sPml`LF
%lZZ!II_IoSHW"k2'mlk17Q!r;*+2XYdjq8>(:AHXQ[3Y6mM.U7qe(f6_=Oh]PP/]D:[l-Kom06ZB/FF+[pG\*S;@E*h^SNY<[>5.
%)L&g8YLPE?[QEJ\4k1-Nl/.2mGL;;1&RHoW#'Y)fXJ%^VN"TI[qM?HJ%5Fgd4q*P\O-?U$asT6((G"iNnii(nfbc.(;t:Qc_ffZ-
%p*j#7WS5^s(\T:H&\.o3,n'U7Wqt)R\SP]H')Mr]CR6R<;\+(Z['3=T4U%%rQR_@Nc%N`'@@tt3O30*C3JDn0H"F&Q1cAB0/aQEh
%`P$A%T16fB,n'U/T$_[m@3:g(03%TnDm,a4fVbO8fEftq$i?1bKPu9GW3B'sW_\r.Fc!t!V)]7@c/f<0PX+c.`>:)l;l]+]W`V9f
%YjZ+s*EUmk8$iX=p*j#7*D83kKmcQnI9.n`?=suG.G:LunuD0M$i?0!&#Q-U<S44Vfu!TW(G5!;!k?^%EDJ.P;jqLpNKo\8qs[bJ
%G@n5Sc&%.&.__f178>E#_oO"RQriPVAZ$=;.1PMK4#omW?A72rdmms?"_-5=nf\sKCNjG,WpuYT.3TcFGG@p:^=&8c16^`2\+o3U
%*#H3*0<&oET;'G9N)[B4!+W+Q"sMMMbL8&n2oZ)a"_bS2HQC,'DlTshPnX)'Y2%L<X&lQ%LFFIP>=KC:Tg&!QW)6uu6)r9D_FE'e
%o%uju?E)+IQFfhGM,!Q.R>UG^]Dq?<i]/a;XI<d3csAYUq&dpsg/DtajaV*26gt"=K/J(D3$S:%bPs7X:#l4;j/#X'QiA'FKKSeq
%5NO#`r;OGUl_P(Es1:<On6G5W^Cr@nJ==9VZ0,mb<0M>[MWZTnj0>Rgk"KeP2mMPPX,/=[q&Nq]V/B#";MO5:g"gW,cb:^(U7,eD
%O8u&&D4c,dLuInaFCUq<!hHSA2+X:B0nr`BDbRHd@^dAhe$(5sUA6(kg//eY0WK'$^.^%'*cs94*D8UDeI$R)QV"SOB+pf]Bn5>8
%ZE0!!@U<Fi"[S9<Z:ZZU&C<-m:d&e,!]k$E*^BaTY&rJ>?"o?e;a2PTaQ<*cC>U,eG#7T'6gO21))"8PTafh=XC1cO,`r1B%RYgW
%;eE&ZCp"=,%Eo:LChdf^!A!RlA\5i$kGu;bBdd)N4ig,RYqW&'dE<QbQb2%X/M!MS<=3j!7iD%NDA9[?mMm05KVG#$H46GS*+Qbc
%3phZ?WIG!NBk/G/QPKrEMF%Wg3Le"'-9GIni&??&MGo-$-f"TsR$iP5rHI7I`'@VtY&D"#rsY@]kMH*VS*I"TruG8=UN5h\YqGI$
%p\lV?2<iY@kD\^LAola=I<'#tp\r89`1#5j-f+Z4q"XR"a7%^SAWR(GeYdKZL@K"cnljGK'H$\VC1$Q.\GPBQK.2oE["5e!h*OfL
%oNq.q:'G/Vpna2%K`IZFm>IXAg@P5Wh\XPDm8?K%*`IK:OL8T^(.!dg,Hmq)bh@VZA8Q1CVAKM9b-M,Df3")((/f;&?Br**;m)tF
%Wg4U(8,G8@1[O$%BN#!nM/r&kAU+>jEs'V75Ts,D\bI!34o:2HT7>dGW[Oj6c(gCUWG=62_[iDER^H,8>)Yglj&V0Er-X@]k?t"=
%(cr%1\r1o%h/1`<T#rDfKe(iEpDT<2kFAPp8@4:\L,n%H>IgcG;+<.,X=%gLO'W^:5d9!%ISm-1DA9[[mp_VlJj*n?11Ic]<a<Yd
%i8[EA+ZB_X/]7@,YVq@h(bA0a@B!ZCr^iNK,>T2C(hQX9TuUN"h?_SS-R0Q(8Q$eRCromN`/5C8H8XNd0,@QjbY)3uWE/.9q_+"V
%4Wm.Vn9rJuicBuYdja'5-rd7\BiQ>UO>?i*<er_\C8taV,Kp%J)V20.N>t3iNBCd@fPmZEEa-_O<iaH&'U-9j94=p-auhad%sTDU
%*et@'hPZ6ra@D(7's&S%9k3GR.:EBni,CQr+0Y:jJ3)85l`6e<eOnT5;_69A0+%8a@BE^5Yqk'Wd]A*:TOA3?;kNKDA8:?WNurf0
%-GuF')_[2Xlg:#hM6Kik)RB;7Eo!0:aP`<C5#-+7&tP)jbT+Tb/8WL^#Y]]nW9Z!#o,5Wpj;`>s*MmuF,1eGDcl($M2SJagOYgt;
%PF07Ff=DjeQI1B3_n@g^+omgnf02RCW"D_FK"tFp(Xj4]42"S(2o&f-QeJ5r-?2\^4O0YcJ/q]4Vj7X8,s-b3&6Bm?"/_YI"@oD[
%#]I'M&D6'tlc+/MTME'<B;ZX5QMM1Va0(oAH5\BeS\mQpW<9;B\0lV8g*Jk@SG"tT7O,CGY2)+C0IbCi+!'__)l&n\\]\e&]t,d3
%Lo9>eE<mkl8*$$,Q.j&d`_$l'#!oe]WbP,"c4Qkll4K$-Xm(*g3R&NtA+;Bi.LLI23AgC,C6.)QYSlLTkXc<`f1%+)5aD?,q@Soq
%LZpok*n1AWV/buh+3_9)$ic2T@-3T2r*CCh9N&i#\RLWEdB0_W-Cp#(0N?DRD+KZpg*YVf"`9C89V#FZ;s?0h3Jp*2YHag#^!9CO
%-jBdN]#9+[Llrf`Q\`n[CfaO)Hi_-mV7O/8*6b*kf$HOrk`uPnjp:+b(,u\jC'j9mE8TA(d#M^c/Y_K1'-0NK9:_+FTW.@0SjYDp
%b.*'RB'EptM'\!JbsoAFk(Jmcl1.fW8%__Zro8ft6tn$ulOg=2pIQH0P%_3DO]M[c5*?hCj";6Lg06Y5,Z."s*Rl;`3UB8#,jMEK
%[Hr[D8eP,pH;KYN1SBa[8MoKLb-tHK6TV5f8Z*V,h35"LQ,e$qAVIW.p_PS6`8.AEg;_<A<i?g`\Bnf@U*@sN+(nhZ.$nZJdUe,;
%8G1Jj!KCDd."q!eh9--;Vnm9L]9a8lRJ6a@AVJ:c#M:V3n_-iN=0p`144O\Qm8-?+486TZSlM%o4$5FU:A)KA;bj_]iPIt4_-Q&"
%/+LKoZZ;^t?[/MT!-iX;;m"E#LDMr#b/f9l`p,_5^@4rEOAaFmM4m_Vn1^hegEG^(S9NrNOTf<o??dl2$gDM`#73)^??iD3\1>i$
%4cd,B;#@[gNEG@`(ER<%M)Eg:E8dL.1@/R)4Oh(ZN0@u=?[/N_N!3-c?3599KnnBN:N!)$I,UbErTW7K6Uh%;PRA#0o<PU-lgl_k
%1f-ebM$jj%D`\[*c++W3*dLQ?W>?UJTu_.64:DdnGi>?B\f-@d1)D!Hn&KB&mJI>&2616>>kL`iX/Y!"LjK8;?$N<]c\$%b93c_?
%S`6ai\NTZ'6a^A[Hn44#Op_7a7uU!7J542iX``U]&Q7PW$P*Da;nVMe+D,][KnnAYY#Oj=4MTqY]C#+#;NeJgLG%=u2O<'4i5.kK
%*82q%Hi[Y=Sp'(dp;nPRj)O48LI0sd@`A$U?F47U"R>Kn6N]+2&f2U(hfa7YWQndoG_'mO,8VC>EH*XNi?8_#g#G7mCWBb+W-^t,
%L9N\s_F(FlO,mYnpH8Jm6U`=8DEBsVVS*g(Idhd3ZS"Ai2L_msL\!,\'FCpA)LQ@C;"_]Cj(iX1]'rN.MBIea.oq\?nF6(//qjZD
%:G(,3i[Q5"^@4t)*Y3-MAC4Z?_F)&;:AM=c:8XS3iLtE-'l2T2i5.iun"(o\`<rf5D`^'*egVo6r5-A#IF"Z@4B.N"ltqNE8l<fI
%hfa5j4'M[F$P0X`460(qo.N5U0%*a#dO/:EW.!EoSt0K+86>Dk6TbX"eqJmW=>hO3Gc3ZmBELf:orSBlkJBSRH(F,*Gc7_p:e4Th
%0'M,bm08#<f+jgE3(P8+_SNlr6VQ2gY<4!;IaaDQgA1`r,"f;."QQMA/E?s]W1F_-J7P;'\\a2Rl4\h3XMOQZbE3KhOsMLKkq'^t
%)mbcQQRJcRa@jup9jUbs$*<DA3a;7XA%qn\hO.g%aDC5YVe49R:YH[^r^NH8GiR?-Ra'GP0)+BPE^/t/OfpmFTd%R]B2t\q*-DqF
%dSld:/goOED*^sSk+b.5Zq@Y7dG@VG7#0DHLedDf:V=2!2WE!3[M,:NlPe1:FXKSliSP5SriVO]HF,gk%$U9<gQ-KIforHH5f;sc
%&_kkT^4USq@gB&/XmXlP==ZR(-`PDSgUGjUGMB7W7,j-KD7s(#hbE:Cf@NmgPKgBMh3J,i]@ubP9-kR*;5/@)g'""]d'TGY3.T#=
%cF6ud`!nj65M+MEie3d?<:[WV_?/>hfq!Bt?l*?o2_;s(13t*Q6)#*c@f\iWr@d]+kh-j9amBdtHSF$$^$AAeXXPHdWFUh_A5jl_
%[AW-;dL-Lm0s-j2R/G2hmitWsKK%dI?a1?/cU=oLm\BXi$#bfHac%q<16PmRpgmZe;-IdTU,EX$!Oi"%c>69="jCkf[0+U&.J!u`
%nX<bW<!rV*2ERP7T3s8?'7B:WG,P:KZg4l#1cp.<@'#"<#fkZcrLuJ''V[O^,>6#WRd=kK-/m5IWHct;TF&d(I#em/WOX0Xhqq#p
%WUl&'J&4:^p7U%92pp`I+D`)Pq?eOENVi?842;e(4,\&erH5F3VWd)iM:p\RX./ui%<+"O4P8aboA:tT%@2hBEa@Lu.k`QJ5T]9d
%>X+E\]D)AcJU_VLd9t9)2q`QW=k5/gn7CJ1&,_'C=*t!aZL9XMTLK8!H=50=(PK8:mm+WR2"5,tHQh\fgZ,4?,nHZZb5l_>LD'Zn
%fR9CHT07GG+OO9j6e`$`el*%Z5Te[>L^!'h(Mr15-9.P^Jd'<9#`u1=#S9`g0Yd:L(Ik3+8/Ho^D$8J,:6;same8n'kC2o<$dddo
%Ye[/3JAJQ;]WY<o::)YqbnlcGd$pNq%MEujn!1;O:ZMRAR/CKkCSCWaHagYGbA6-QPaA"L&]=a;!6L.$e4"^Enf3W'ngQ*FU.XHm
%1[f[BTliquNE\Rojgs:2D8fDpB4(9_*0\&G!lE:h30OeeDFc&iTPJcU^:(]ppCFk=3NSP5BPrRn,\n!=LHT!">4Sf3Vh(K?1_(WF
%h#,G:#c&DRFRZ^(jkcQC'E"c"aE'_A;6*9.H-XHZlrh[$n)sTApPSG*nb8=gc$UBq,0$73p`jdiB:i_4TmSGuLfbj'==9No09@Ai
%LVt4db'mdZKm\Q7nF!k/!UGPOR9bjr$Y7Ba4q1'^e(?%V"$4$p7_&=%aLVID1C`b5H&"O#%sQg\O86!"gF,t,rk&.f9U#q1+IK@Y
%O>GMQ(=SO$@F<KdS=rf>an!oVTe(:]Zf<jVLMEXn04`?/$2N",gRm>=S.OMsd&kM\+BT^hB)?D,1qQi8+&K12Q&\lVG!*G3YH6de
%M^N@/CQEPnJGeJs%"=ngHY!2F"-?hI&,=l9nI/U._K=O>-p!ohk_+/j8k%q/g&ln1IFaYY'?r]t.:)/Q+lJb89&<]pk@'!M1KVeW
%$u$j5Eb2)'YlCEg<&nIipoFqOKUDp>Mj=F+Z@&Q#/gS3*KaC7JnN)lm:,2W':QHeG[Rq+I@0Hii.O6!nYS>2Gju3Dikdq%j4ZS0-
%g=bb8Q3DhIAUf=k^Tlc4#uTWsrF?\qX#sO,k=Gr0'HohbYkZRq6LWSN$[f;[KrAjPpD_KmL7'moU1j$:=F1S9iRhfA0q'_L682I]
%r0tc<^7HlOka0rXRYjrXg/Z;/AEZKtdN\.q;dV=&[02]hkY5QWr@D01nbkC#pcSYT"4k#X^mbO)b647lrnmnI%@gZ6)n`pi8gN<=
%9e)J+rJ:9U<'T3]p-*N9qM\,HVS-]D[%)")e:Pn`-:EBQn`J[$M*#5K1IsL,=5j\5*9'>eQ>Oo-H^gm:SJNVJ8""Y6\Mm=%^VrZ"
%2],X[\[V,%'J27o-F.8#hX1.q$OmNJj=koI0d!-=nPL?'i[*L>I?LRSH/?mh0H5c_`uMd9-MM^rRA5QR'FaTLAQN2Yk>C=;::,77
%q%^3RWXV44HBsuRCsO;?J4>m\!;/]AH$:ItGia[3\a!.fE'I.-.0&b`K_P9tY@P`TeM#$Y40'`*bZL]jX!g$nqRmQ":6+LX+8K9[
%(lnJ8>.[aWQG6p-*GbC.[4X5<q7`nC8_:Zi<Bu5Q%5iFf2UJ2RRQmng0tppj@!Tb``OS0k$QMTVUBCg80Ub);\$sHQnPQ(8K@8sZ
%*'+cl7Rqq4])a`YNF$>_r\S,^KKoMV=ZbDC;\c>gR@6[VG6r"K-rbakD,u4orD6'%K4Y<Y;Q?/,q22.b/i%J/QsQj1J#f`8Kghp:
%!LgY7!):VJh+Z3=-+:^:b?i3`XAaARm*ChSRqsu=\#qnC:Y<6IP5nb$i3GR;c9\2hO83TPa'(BI@oaU(@(4Ai>#6WsP&0k53@30k
%nGZ<Absk6)m`7`'k)`b.;p$%]EtHU,;Vlq-5D%?Pc$hcieg\8E.:YcJSRoqld[JqeegL2H"$U6S<o4`4pc5+(@69/hFsa+-=E+>c
%aW^omg'5;5X\e"0"J*1R*"DDud$].sZce\b@_^V;)5#U\O_[9:YR2Dd$@(K@?i[=N`n3NiQe<C!pS:P-!?48-StY(:+AUt6Cf^7_
%1@@!)`t]$2\CnS.p6u=RCoLF3<_n/+WF53Gh2;6bW7$$k$tdG$SOu$*4[L:e=.BE^oQCD]Z!k@@<'G9]W&o+$;n4Q4H"`Ue?_Q1Q
%ah0s^8MV7FrloI5<o9kE8B!fjIEL%6@^;3pe^17+"0p!"Mkc7]'MLO)UbjLUOVBLHcOCgn$3Y"N^/(W:d8?O8erDMY<&Eodpa&mp
%`pH3R$>n:s`oC_kicnmY=bki"kUe]Eo4AY-J%?SA'[J"P,O`L+>#$;CT]E?SG'E_=6b=ZX_S_bg.t2T.6?pmH21/5W!6+M@9-J_i
%#is75rjWAd+j@+HbmV-Xj*\S$6]Fu"gV5'I/f`Odqq:RHs"/Y?W[IkQQSm;Hn'`3)2s6p\%DHlSeEYZ_"n4J/&UHr\gU6AIXM-\q
%eZlQ5hO$/*%"q@<L=-RenC\<g%,=)[?^I`QT$tt]oZu%JDI\7;oah[Ce5mPL^QG^1>b,G/8J`7TJRd9aM4Dk&6Co5V1PQfN2FjjT
%',MOQ#'WYTU*\:60e!P?)!<_#lg2Pe"#NNMZP/+SF./56AoNmK]tM^p(dnq1K7*ACH8D&\&AHpmk4L1jg(:7UkkQZ'4ZJ)UZtg\g
%;K)BeB=\rVH:gn8Rs9th*7j*[A1']H`qpbKi5k`cXbZDH(bC@&TJTu":9[RFg&l"@*N3$poUmR[iJ<6I@*4V$1Qj&G?7JP%J)?GZ
%(,k?X>r&.J1itjNk?i1KGUEll3AGo,B&r[H/V?Dpqh04J8YJ6I2,(OXG@r"AEHOC'Il28IlJbCqC#g0%1u$9e#KG&(n8%tN?Ueb?
%o1E3#i^kZ6b>,sI[)'`\lf?J+K2^qcn?Q\*7bGWZ4A45gML0"r516S,:X>,m6_B%e_,u_?ClukMP?*`Dronf[^2W/^MntH/2[Xs7
%J=QG;q17sQW>0gAoN7]kg9NO+]3R@_,'#`fC%.>@EEA$m9FG4)44kFTYh@O_Irk>Z%EX*Fp<h@t_>A_!p<h@l2#m.5+0eO^cKq=*
%(G`T$[FmcVVsoYu7oR_@Rt#MQd=e7pn\7-^`f+-Hfk1bDBqXiI3=D2#D!EuM1n/"aSi+eiW;_RE?SD[g;,T2h:g\tuQm'(JKhY-7
%@>aq7\B\Tocu7OhoX1o)eWJWb_ud0$!20%uF3S_\(s_Km6V]I7ICA@??Q91EmJ8m>:uIns[0%L8SG;Dtr`0/PnnbI]?5\]>\"4@C
%b\UBY"_'d%'PqSt?g]0,p><jH8`6"60!`jqYa(122_^"-&,H_R:nQK+bdRE$o%ATmS_Sia,D6jt$25BeMS.o,O(s_0PQ"a/nWB1X
%I"cJ0#u2M?(WQNf!_HMMG2'q3-g5<<!$75"rcYI>\_3IkgjX<PqgQR=:O<mAYjaa@cM4.4KJV,YCW-l;A$7lfRsU$bT'N",>$pX(
%="o,1kfuL?4aU$V9*B"aA:l<^*BnF'm,)R[*P,-03/+?&3o1bSO=*AR`/'M')u"S$Ghhk+].g!Q#KI:J"5BB%ln?)QfJ?;H&NHlI
%ogJii4"^;NnD?Xs?5BS+>aoe&nEidLbeSpe]HW8Xc"h6XV#up,I2D-U)r<D8<1(L>_[(OW0Rq3SM<?]i(j9a5q>_L_8G*B.3(Ko!
%$\1]^A_:;OG/>h:SgVAD(`3Ms`>,CZ<J9<oG9DQ,FIpKUjAEPr4b<bQ0)P2)>RJ7i"2NX;a2,99Y]73Q?l5FHQWjar9/Hrfi;JbT
%n/.N)J*P^!irBK/C@WLClWi"]&ZPhU(KV[_Bn2YP/"O(a>Ws2ua<Idnm<,+cQ/M3o`-+'iJ%X'6_mf80gW?uoL"!EKjZPm0aZ7VH
%a='Q_]2t+fOMbs\m<_Xj&rb;P`45tI(I3^8c0IHh'.g&,rVF^?(q>(>3a!:n1?b'H_P\W/G^Z>U%%lk@::R,mqNMlfGmpn\5bg1]
%4sMD8Oq89,&EbQX+"@.<'a6e9keXOG8Z=<#%Gn^-`R=S56gQDFoK7'V@d'eY*IO3'TM$=?Mh]m4CZ,Uo4tcG9@so"^R89t%95p.c
%21!6,_KG$Z?b\RDTu&<ZRfsdr.4W.)+P4X5d(X+mWVAMAn-L09!I>`iUT_It9s)7`R$/$iEJ88GPahXJ\YW/?P1>&G8:5Cl=hW<D
%?Un>:\k9PieX,d@JNq64%abBEdjd!J=dpB=07!$lhtIfC!J*CQhit#9K.")/QRl+>#JtC-G`S+tofOJXR2^X[M*[GQo('2):BZOZ
%OMt$2o#h[cZQY+;>64N*PAN)1OPIEmFplU=%I8Y!hq5.73=9=@TP"=O($);q6XMj`UUPH1/%U,Q4,";J[cYeH&&lO*d97T=$\$L9
%c+0SB?7J]lDFEAgLiP?)dt)%""9BoW<@E7i_&sj%%p+$.gOumRB0s^`i$f]G*8B*_M#FGijpP&DI<]>nQcMueqgLZjl2-)&L6!h@
%6c&?11:3*g/!2B\;kmNXqm:&6\53"r*a=PbZOcn6g]=drSF7EJ>J:5C)#^oX"Sq22GEAqTrC)uZ?gmG&*:PV.=5^8@]WCfW55l-8
%"Ao%D2jtmJR]dNK<X<7o1(2F;,@)BcW`5g*DMk\9=>=Y[7tM"ZH/2naM"'.4)?9*<7)O$K%e6H`?/9_=G(?\m^Pfi3\PL^_-FEAc
%m5iFt]K<N;lSD<gY"._Glbf/1\l17Y4=/W.a-873h/,JpW.U)-jnh>8+Ob\X`DP:,o=3ddX3hECOOj<+"4[XOJm9Rm@'#RMpHAHc
%0=_*6;s6Lh:.s!S<e\uV3E0c_#?O)b?@.*bqq[*^X\_m[7Yc&8hm+;J)G!q;<BE71#'nY5]N=o^Z=&OI/$\%nA,KbFKJsdQ_9,C]
%0t,bEI">o=%E&H=nb=-tQul?!clfC!q9_HYje^+V2$)Fo4a>5"FM;/K3+\flXrpaW!;Ya87T`2Ai=^Nk1D8gqF<U*bk@R8('"Up4
%ng121C-hb_C5K_pdH0M8.K.#3fb0<56Dd:-&i"YNqZY6oR+_4MATD)T&\n1[RkBh6HSo-m)4GHjJ+'?/BYU?E4&aAa9fKDT;C"f\
%U\1"/0>KUJ$4F/cc#F&V0o-pF,"X(KI$gTSdDEP0C"s5t$1XIK-Q6/IX^>2N>ibV:DIMtk45>I(RVg$G$\!M8@lnN%<-B#d]?!f*
%f3t@d-F;#Y+0.'#-&>6SkZ=g(&+^-)0roNqSNp1Ye/S'7NB`L::WC,]CM#e($S(oMjW'p;iPT/5W_p/)A#7jt1pZC_RsT)`G7)O_
%:E1El;)c,#G<LZFls!VsOJ$fs#`;E7a"ecO"VYI/JfEJr5?OUi]mo,HAu=<Q)VrZ?QJfe!IMHrIXOH;qg"8W;YS\D/`JE*B91WEW
%A3FVrHA"5j>]KYabD6+kZcV^[-t'qf]TB9LX:-&SGEOD2#!:H=*Z;aX_\\a0F5KWIjk/5N_seIOaR6=nW53M<Sp5fp#Kojf/\4Z>
%?$NH@/(=hQcCEZ='SWt+'uo9h/C]7$%F;07.a.-(\*+(5K9Y"7;m1N"dk.Zq?!pIZ)['F1,ks0M?b7joY\mM.\KjB9NQ9<`%OEs$
%:AgcFf:%IbF50%fneuiEP_@YC<s]pA`]+iHS%s3;g@qjg\pYCpb"fj>9tHTr]s("8ADS=iPkg"aKi(oJE%Si?A7,*W&$%>L`!c9(
%LLJ*<*d3\CT^;$C_0(Mr!(0^a-qiRE?UUm?kdUZcM4<D]G7^kqc8;!!4YYYcJshO!d0&?D"?1chb'`-b::5WGs-7ig`HQi6AoBtD
%1deuBs/6T'"=;'g3%Uu@R_Y>3p[1IV!pFp`_1'OTPb%.gXQR365PiWkH$/7[h$LbHM[O9?]7k]1.e1jpYU<QR])rmRKkD?;ON_V2
%OSpOAQs'?O/3lr-YTVmQTApCh8dIcUJN`A:ot.1P*u6+A8#0P5nF6UUVTam?$u;:K2e>ak@h;!L@EP*Ra7+H-7ST9am2/#0VL8R^
%/n,=9/+qj70<u_kg[Dg?Gl455[&nQlGbUf*D+2GngR;Z?`'[H3@M#@HQU_Bjb*BUB)ETiYC>2eA7CD(.Y]%7]C^ZNL-#,GK)ts(=
%^tp9iL+V6snKera>*7KgF<P&)-QbHW*3ru"#sW]ghn6gE?uB4DGiXjD@3%DGk'9$^SNf:.Ji9FX,Ki9UPK=I-AOG+`Ht?5Lpl.B2
%mNl+XkNlNL1Y-iG*PHFtkoelJd#Om+6%2rb/at:;Tnh(tD(9UKGf,@<\q:XsT!9Ld!mf4Q*<q?JOUhBb"W>,h$,H-(*5@ajA?Z%p
%(tjts@YWB=FUOPZB#Sr"Q'n=B(E)L*NM4i&Y_b-[eN#>1)6qlqfQ9,j(p=k\.mj[EIq&46"6hTG!,+#]Gadf@"$pRDEh`0TJP=Ts
%b@m20@:;&$6Uago7)%r+6p#R_f3d-"#mrY\!uN,Lo7TiO0:,]@d1">lIE3g\!XJ3A"2Ge`!XsC%<mF4@52@[X2]RhIJ^!j90![#,
%/s^$rD:U(hef(MDI"k\[FX[A7MN=qc):;bT":fasqFfm6Mio<+?i(&;UatI^H",1jpH/KK9$=b5j><XeqE!0iP(QNNM)JFGPTpC<
%g+-#6ELPj;0W,7#OjdY2fB9:72iGY*P4i`W6l9NOBA/Rq0FlDA5Y+HWl!HS_k]C:6,(TG`E;E%^(rQ1C4LQ*0G+t-`;2>[2N<gY<
%-,&9M<bOZl@^[[#\[9%3!\iQdKg'Vo<BfpJh*l<FXUC]4O;OMG4Ta.^j^gcC#`VlLnhM@\1cJT8b0,Gd&K7c"j^gcCBX_%n8pQg9
%jV<:-W`kYX1*K7R/ta,Z]M++oT[Act?7&'s2Z0tWPa;\RU)ZP&.-5#,Pe7],NDa(07#:tN>#@nE+j,ag"uVa0_+KXV;Rc`=aAG$G
%'^jnjN+U2R\*En.9jJ9o=uK&h$$(dD9b*=EFM/mnEt?c-0^N220a?6(G"3@C!AaG:5:8ST7PtSC'_++pda_e$1Mt#92OZ[@a5.R"
%B:8Bi+4pc]^Pe^1?.Q!A9?+3r3>^'`9M)6DKhfNR]@$m(093o(E7rRj+J>bOVQg75iFH3HNXN<2_$0o@JKjG=4'?7O,/VI3gc<!#
%mf;.EJ+@Q@^mc#[M$/tM#t=alF)f7^bIJ8&h.sOH#u>u)]:&WQC5hUlJtHtt:JH/Ehk2=4IYRinXf@#'B]eRjd_u,TJH+QbE7@;P
%+spYN#egH#YLVU^+#_X&7+t@8LplbH1HT>0g<J3L!V;@$L48GP<neqC'Jm"rqk/)eA-76(qOfinA4N,fIG!$JeK9Gn%KCPM])#od
%onR#f^Ar&/n3fga(Q+Xe:P]EJ6P7g*_F"GN&RPNcJH&-W^0i'ul42`FD!(hpJ)Idkq"+Z;qo_A?VFT,4-Xdp#JVT5c5Q"s<'-KVj
%P<T]Q"9SYE')WT*H30d*`8lu64Tt\&!IbGF4bQ&`""hE^@)s/FIgcN++]En64eX"?[e,>;J7)7Dj8W`Y?!;AbP4#Q"6iVotZmV?C
%]N*M;8>(gE5)]W]"*9F^_0HJZcl`,YY.1PJ/"aLZGT`IC50qqc\'2q'8*'So`fZVF?h<OVYAq"Sg!:_t9X(Y&IQ#7/H[C+b3:HUR
%"'aC/@kT[mrRIKeTbe^/*:L]5eW.hXqjjeR4PrXn?dCaX(jLOiG62-UJ+Y_ZQJXn("on0YR?2pi0#mp_$hDj"ES][,J,0!!>.9:"
%dr`"$F,Xg#'g(RJP0FBiUDn6&4mfd"=jPP:\aK2jJ&c]tSOs.=HJd9bT,^5\*-'q">?j.jG2^:mnnqt61`4f)kB*fu])t1`-gl2m
%P7ujp'5!oPDh?SC#/8R>)mIl<`)c=,V\,eY2RA-sGBk4>Co&+3c59JeHcJ_q\?<rop>`Xb]W^SO[ZrMOm$/SOa'D6mm<h-8+*PRr
%*V%jc?b%eE9\i_+\P@P$$h=T.)R@pAE6JCS??74J1`%fa5E>C8jDA^ao;_C.PlgOdNmV@R>0@Xd?WY#%l>+Z;b7LRITDQg(Y]ALP
%>-=-3UYp4`DE7YK.<,.8=,Y`k^Ui5T_:(V+.II:B7eVkefV-"qGfLVJr/OM6GNIGaYPU<I*U?%F$fp$Vg?d-EY_+^gf3&,kY;i*:
%H>O#*B"Rmm]lG-+bip!,ZNjXq$kg4_R;hBrY5!S$s8.Ims7m;Cl+d+c%eSqT\%F`*EO<Fh)K"=m0X#C2h030>Zo)/jETC-9!CeV<
%?Iruu)X)kCaQ5fHh@4l)%qL7$"nZAdqtj]j?cR<QMpELG&E!:<BHI*YjF!gLa]B+slXIm\QF#mMiZPu*HMP8WpP]Q#/`64W,Z*@@
%GaMo&=O_Zmn/:]a1=##do*@64A$b=K4K]840!\+NI;_1;h!tC<EA'hFc<g(6j>=EV!m>rPUb;JcQV.HG?Et<e9O8&NHZ@I&!ok=&
%KG6*a/FHsm'A2])VJidU9[js5P?7R#Jh+j6^@GFYIDj$Xa](WF?g:W:q*OfjG8f(jBuk";O_5sJ%Nb.<!LK7Fq?:f[RMKhGVXK@C
%0YH]a#l&`Xf%Qq8\?Crj^)J'&Ho'U#\X2Z?4,Ie\$`4&3_RWuU)8#6`ea>Nqrd&T&ntVgfA1MhA$L!4k]i6m5N!gnpImlApbfNO(
%rX:g#+XMNm$Y*g/5KJ1k>k.atZ<0':q^PD2WU&KP@j^p]SK^77aB-%'Pa<G8b6dq/3cpo3S>j9Wgu:r&=FW?rH%_?"LA')irK&Z.
%-8(L6qBdh9Xa6(/Jhn^1@Vt3YSH3ZG[KgFH(B!(m%+`rrmrV#3"P;ZY!ssg,OB&3-eO)k)o)Tn&M7/ep(2=HdSq0U?6O,qs2c-"g
%Xn_<!XJKd.SDYpsiWH>67(.(9iL`i3Lk<HY'^>#a5gBu\"[]j7EA@HDI"*8M6qkj.dO,lnWRUUcVDB-&r8-&b%)(i@f;A7gR5t?i
%5>t?12=rB[BQE8aBY"rS1)0B?eMd`)[86Rf.9cFjO7P`"\j<+S`f3$DoR#MU??XrlE`L2aS>aP<\]2[*\+mZ]]c:H\ggJqi3(7`4
%-gmS%YZhYj/-nVg&B^fJ#MN&`Tp>PTK8s/r$H^efl+?W;o,Zt!(=A\V5frMG"ZPX<AT+u%h7pZAA\W^KeABcuJ,M#UAMY,!Y74[u
%'tbqhJeqQ7(k99S%%Rr],X,ZAM8='jAdsFH'QPEa8$;ae5_<P?-b+$+&,Z86[_H+VO%DXJ+lBGZ("+gKbjS+&@1mUUb`.,l-W!@)
%HBN&L\UC'r@qMY]fMb;c7EM,/MW4sh!4EuA5@d\tptcVK)!]S+CQl#0U-Tm?*Zu>U4JBf5)5ZPU]0CG;^W$/hc&uVW`\!@ZL.i"u
%W?'2EQ?9W08h5/G0hQDaD7jq4$<N(Lq@T6e59Ld2-k1#[@m3=G$CNtEV7E:.cI*tS45Hm>KP">5E:dM0>OqO_>oF[Wpa7"_r&*qU
%L\42PnlLA)g$YD&^Yf]_QQgL`>1XECjh+9XGld**BBVFpaEd@Nn$jWcc5P`]j#:t#p-i0?Uqn/D6MYFMprHIgq"lbNDWtJZ(ja"+
%T1D"C&@0*UejJmC=Rd<^9*Q<e;mdb`]jPl2=5Q%(iSCEqB<6Y:?gN0#O8!pB_Ju3Eh]t1R"DRUk0_[qn($6K#-HPuSMki1%)/k<_
%!i;mBFi./(ddCF\`Ts('#pmZh,=T@T]ZS@P0PiIU>YK(O3:WB2[[2R.%&XQ&ejqaXk$!*t3frWIoCM\Ij+WNiT%=$noq`Hr.Lgi;
%^\`/'9Z%65Jp1POi[`U9=!7$BVjdm9fmNj9.n8>B1ok'YoJk:[(0,,h2=X^lhITsJ&2(g/F7]Y!%=JBfF6(&N@H[[Da&,=I3*4da
%S[jG&T^5t>PopFE@)W[:,J?c&"`(H?=3_6s(`NZCiOC&u,U#.e4Wn/"JKuk74T(W]Uc6FmIDL!K>m-*"HXi;tD&=/`FM@8'B=W3^
%&24sI'\79d5+eYbNt_G0D@\C3-C4MH/q7$j1uhshD7YYd:2OHn,"osHm^Do%,oh]pGEih\1os?%^@c,#J!IifaHNb85.&//>;FSH
%k2-Ld$nMZ[W#8-PTpm:C&Nb3O4OlH?lQ2O>;-k01%&U:_@<KrK2Xna'-eLkJ*-ecpD152rTg9dK-?.E'<hrGEP"Q3;F\#F#^rK.-
%J:jo<I6gH6^\.b"fHq8as'<Jb7YI?AA?^]I\`c-s"$>l_DG]@mFN3+k_W"'`k:PK!YjJh3$[p'GnAF$)nGSKSl#'pXS:b&>li\Iq
%_Q-?>F-Z8!h81onUKqLTp;2Q;i(>-bN`:[Ce8,T'2hT8*F?[GurL'Mf"lm*;cK5BZ-p48^pkHS<+c>\^c/RQh0Jd:]>nO.m6"@C*
%oY`"\iF)d)ds28aiKdRA#7U[p/9bVQ1/"Ambi8nJ,EJsCO/$Jt?VJ6"#%gr$MO>Mp"mAGm$p*JZ0CeYlWZE+3*YDb0-b5eg&o%JL
%d#1Tr$>SQE`=BScP!'8oVn6O`a=SK=TEc.qmLqp:Jl0kbghn7f]R\9s*C0hDAPhXKF&So6^5H9!>5;Poe$(od+l'aE**J4W)+_61
%D&h2moVC&:<"YL)W>iX0;%Mn8?qlC$cklUalEN"hO1>:h9H>j3c5@0*MI&s"44Cs^RHsb9a*WXNOoq2pX][,7AP\<7IEcb;[UrEo
%6jgs;],#V>2q./T\8=nlKg6+0qH%-&S"?YtE]VO0EB4`4kY)e[8\U9b$l^&ur,\`Ze1;I3I)=KH8<TUK@pXA\]Qk$gA:S)aG8IhY
%L*q]CJWf2;'CsY0kTVJS63:(tqOA!IWe5IdEirQ`f1Jg(^`T-mTNk4YY4dYHU3!>tca<IjT*/AC6`=_1X@u'@03qQ0_A"m/?:o*1
%fFVqL65LK.R[T1[=.BSsH'Z[MQ]OG2nWtPL,%B4o.6:BVlD:\S0TMXd5J4MJ]UkeE-7^YmLDYcVdL@'HgN->*:Mt:>a3YElp*Ugq
%MU>@AaSX>_Ht_`>$+>1&B`+0;eHt0TOl%bR[[YpSNKnDf=N3g_,Q!WC-4)*<UA!GsJpQk7c1qohdtJ6R]QUIbkB9dB7PCc<FZq*I
%(H5)*3od\kW!6NE'c$Bb4E-P4Vg</^K&Xhm*B&SP5.KYqnXKKm6.Ks54+)c7^?2U!dq;l!C"W8)$6@0XD'/m$Y8hu`"%/.V(#dCH
%JKCncq^g`-ktLRH,%!Z!*/\/b"H,YS"54bZLNBVCWH>0^$u[)>6mo"0$?Buq6dEkPqpS"Y*N>p2AMA0g[D`PrL"npEm0eY9p]CpD
%@QbG?ZB6d+?B@6X"'mdV&.C5O^)mI4_eoGUGV9nbeb'VP1=4/0"`=8VYjV:D2WJGrGGY<8Jt\FA?j*nc[eRF4V49,#n1R,3d;53m
%[I3Ssc4aQ6(\uB54mB"`L_n7TMLd\3Y8gSYG,EaC^uK^ZeP$Lr1./sB3p)QEM050X1_39]fH^"/n>1]gLBV"liMWN,c+lH7quRJD
%0Z4.ZMg0meJ4n,lYB#JOqaCF[KB1VipYuPdH;HudH/&uR1CWg_&[$6a[mkJ]5cV\FlpY-Qd*m%Jq_5jIJBh'!1P-JKiGgWS`9\ML
%H-i0Jb%Jq])pTsa-SJt%aU=OqB9:BArD(L],2,#<P*eL@PQ^dbdJ+-Wgc!G.rXm&NQ$WR>Rre<*^MJ'(:jP-dOA952L3i>fY?iDN
%^lkotjP-fKKGU!P(<Q<$GML.L'Vt.RO5rfW\UgN*a'@U+1^#IQ?"OKanDqlnI=#M?cbP1oc<WmKaU$[eTp9W^fG1<3L$q1kpD\Fe
%JMS07Ud#dWSCcoFc,4`A#D4pFUr>1L7Kr!H/<B=q2$:CQ(NJ=M:V_nMmPHQd%DfX>Ks*B30e=jp6eoU<('Ficgs$;8>Yj<XnCPl?
%ddD4(9fQpt;6Ik$S[\psJHO?`Y^!N"1Ui(M*XmSK6Hffg[C5Zh9B<&8^ij$.0"Ei=MP[&OMp#'$N`+MA6OqpL4,]9?P%lH@)a%Cr
%nNm=^jsGj*`K3dXn6&V=.5?GIDMa,QN!rqo@l!,eA6SgiHl1D)<-AXcjTM_^BP!&8-rC>@!G"FBi\;"4:-&IsaZ\<,"'-J\**XnU
%-?IL[G?N-'Z!DdM'Cg(ia_a7Rc>QRtOZ>O9+fpqJ5HUJ1bDg!Sn)ZhfM6Rh,aD;:P)P7Vk#@:HQfm1CA=jEj*5DW+*)h[8c[W#Q@
%4@MBZeP6BKUspd$B5fkEB\X?F9c!s(7o"'9h=VOpLm_4:I55)VaNQV1d^sn=1Prag-^%oa@GEBG'/RAq/Q/W4`@,AjJkj\cPu'L.
%QlVkdlO18E9e>rfdtO8N1%L')/6h8EG4>ZAQ"HtU?:tn?JUp-0GJ-P]Ki-n8e-[t_U0d4>mt4CJ&hh\\a]t,Tr_QA"7b;OT7$iPc
%`^`clE4P6ir`%UmQ!V&ZWh^d>kP>M_/5c0rR*%H?LjL?]0HJb?U+Leo+\o"oR+$6bD'R"k29Hh?$;*[G7hXQ$l-?Gc4dG;kFNMA#
%eKn8lK25i0B2<+&k+"RI&I\DaJ<X-sU7&`I]9W&.0V=`p]^_c@'cs*TBD1*j501E<HfXCYHi,Yd<&;B1MTfgM$^uN=Tms0ODF;S$
%gkcouO`FaY`sJUhYrT.CQpk8g;:^GWb>5<Bet6DAZEL3CBsNfE%e@!(Qp/`O,8W72#6Ecr:e0W2.G18gqhWW:_P]Mq+OW&-`Afrc
%L1#h&FMeor@)f2&h<,[Rj/JiN%*C]VibQ67HLhq4G$Me6G&p82>Ni%HVXdPo5;r*BR:_KcV5hJ,"dZU4L>ALe%9bI3F%C,8qgRm$
%*O=5F+s`'uFpd*&rm<gb>k4@uQ"`BWJPEkJS@!-OaY_I!c`Z&%H$Caq9JJF.c7#&mE;5Y$/TS%lqkbcSK]oT:+3uAg[X?)rCbhL1
%D9f32Vf]P&=K?G][M2J_<`J``Y?&he)']0lAi"Yt.E,,Nk!6(ejM2\E,0-OI,Lj#V3E02K&>'!-E0.WB+W\j*gL^`7]'/-6:kR@T
%ag-)$qN8oMKT@,L*7E91JAsKlAddM4-Xf#eFRm"RC2J0o`2o8;hH3cOO6#XE1IcWj;^L4*$tpYi,NUktR]nH$)/`MV#1OGC]4Gg6
%RCfKko!<@%He>bS.k%+pNJb0/6d_@V3:L'+>ef2$Y?%f4)M#I-F.0W[lhu!hE^Lu6QfOrS.A<4?9ncf(8tH=dH-"gX.+Z6(5,B$N
%+->SY28tPKq%:NDEj3a.ajO@MO=#:;Vb>67e%oRK.C$1-N%jQWkmadp+q,MB=Rue?X%"K$n'rCa\os(,YHhoLp18&`@W'-sZ,Q8j
%O50Pg0M&p/*aG;\Db<HC]D&9gooq\;SFkN.PSN:Kn)CnF:k:[oj:6#8<AfZ`8grn^=)[1EH$^_ks6[[A%,j"Jn].CK5=RcDLkr%p
%W,ZB:7)13DS5QI$78WSF/6RYEeFF,'Gqu2WKi.>&c.SW8KiQ=F>f_1L7,M@q"jL*;rIX?/&Q?D]b>>at]H_,o.:UJ(@OR&aqiOrh
%0]f1.=<U[%[VJpoT\S:NpWQjDDdCGrPB(RD>:.E\\bAL_&'DBk(b"FA(M1:lG[:3Nfe[(N7aG=A'e/mKX1ja/UOdfGMmmEn^0:WJ
%+h\2FG@U7mLWun)7*51nOdNeHI*\l;fh/uVl,K)\Wme;ShkT=\:@M64I*\.G4R!;(2kGWVHNS%+2;`IS%PGZ&0=Z<h0T+<b=N^Gq
%$JJ3'HbmoKPH&O'=6_A:>RM6/d2mDlN\,5q+JV#1Su9>2Hd*KrI"'*[JP.XjZ"lor=1T*Edg4$BT"7t.#o*#0>J"uh0K6#HD>s"J
%94EpKJl0k$+lOtQ"S#%%gq.(;]#4knUa%aAa90a>p'dL.+J0UeN")K=(,0Lm$u),7'&%*6Pa$\;/Ika@`39Qk(cC5)P,q-<Sr%;4
%aW\)=%O<UG=.2R4MK5m%2rma2YU$N"<\eA9oo*$KQRDsF9fT%]_-jkr/aZ=h;#rJI3[9r7TaKS*)sPRK[>E^?NY:@a7jd'WBAUJ#
%<=bQM2Eo6$:er+R?\X5IO=G2OD^>9AD(_V4TaokF@*@lY&[>/>6"OnuCEb7E%Cn8fQaE01X<_TE`c.#mRsfj-81AegnL=]$$%S@u
%@W2u":[3^Gs%-Zt%;q?o>hcJ5@N&5UDBc6YY+.T7!o6F2GR6p?#<,MkdK($Si:DQ:cVM<kihRdr"Y\Z5oQ^Th!j6PqA`0(.!@kr$
%.HtqEp9%=QN?/s?EoDVcepV_8>,-tlm8NH6-_bhGkDek%3\HG[d1ollb//!-f-MnVY5aciKM:Z5:t&8V?6g^piC-F<'jea`._pu5
%'kEc7P_GGhefY59`!=pNB.,Xi#ql>E_@8N.at!N`MENS`'*Snl6I)K`<+\,ldL0Y<Y/-I1ed"P$1Ku344A4`C(qGXG7@uE[,QG%D
%C>5+KJ`&hJKXIW^#un_P_1G'tpl9`O+JhRuAPn>^$*GOK+63*O#.ZP1"[E8G/pq^mP8#VeGc,:^]'CnYWiR-CBsp_i-Ro!P[`OXu
%S:$EYoY%K0>mh?nD?PGVZ*-^`b8M0HW^M\ViS7?NREHUbs0dhO4;j0k^t>J[gf`KHk&+<C-knW.G%=3P'%dBL8d`PnNWE.h*1##'
%9?#.J>#H--god2<%8(6!g_lsJC8uu[m$gH<q^42gO/*fJge#2hJl+7?a?Z(%Y8B4ZeFI=pRY;)`lFN3P;F+k:_EUnGD28sn$^]\A
%E28]/7ZI(g+HQrbFm[p;\@2i+[#R8:ENU+5)%GHs-h;+,BHtf^W%ZGkO?ZaGEcS9S6>#29mB`B_;W;CVgCsn*8VW7eSm7kZN5BR9
%\M=hd>ds@nUNd!^B*Gq\Pfcte\DP'C[Jk(,\%=5RcI`t$;V9W6B&F7.-<F+^djee/i.VCNjXo[B&t>i=q@T6eCOnl?#7S9O;EaH4
%MD17X5Kpt\SV+V?;Oc013VorJ]Cbhn>PF1(_u@$Heb<QF>3(b<D1<iK[YMd5'O2[`Z:r?%S2lngdXLU:B",IGJej2VRI:kS*V7Yr
%&A))n%6Q'hgB;QJf,[GNRd=KcM]R$5dObZ"NY5K\/JsO/9$LL?7_=[9[[/kPRboaC_!b.=]"j$<jfqj39-@9eWpYGnR`i/%).1Vk
%lrB>HrS;t<$qLD?"q@YjH\jG+5t"gGG\_go8RAuZrSEg87>nX?e6]5U:T'm0XEo^;\M`k+'#.Na(YBJ928F.QH"#>4V3np``Qg/%
%?gTkfT%,=TPji>ZeA:)[HEhU(#<X>ig/gu_.eE7E4dCp]X)!oNYr;H)1W^gq?]'U+:@=`1,j)b+c*F2ppMT<!=ip7VOnEkCHg@Eg
%`p&ajBN11&TTmr9;Ke.hF-F#)d#X7pL;_BZ!9rs^CrM-jW9IcP\rfVP6BA_M$eb!Y'4Vu>no9oT=u9:'fWqWE<Sb!)AT'SF"(OdK
%"6<#(S\$mr^rQ^:eDtG$a'-c/k1RPLFZ\Lb^U>!U\uMTc]rhHVqi'9t(RTmj4kUXfGp?[A?J-+V3s-q_m2-NM$G/_Y(lF[)3(-=.
%j-?fDB)rT:4]6uYI>iRE$c5(b!%tKp"2.6_M+$q&-Rouolp)YbI*5[LZq21*fWR=NilN*F77!f*MDG?rRaBC7r&56;(a:Y?"V%@4
%`P;fhR;E-'/j6c+-kl<naA6Q7olN8f1Bb[)YIk]hn]PKOL\?iLh@VZ,itV5@ZBM>\R1_fK+Di6'+=r5c.Q`</%@P=$_O7tYE*+P+
%)P,_KS,rI%1ij@Q/M>m'>odR%QJU"79$0%$UrV7(^)Y8GWPS?5i'%7/U%/2hBIc)07gH%pl!=_R*WTId<FqT-kK#<&+n@*@pR6BT
%kZOeu%X:?Eed(G];G=sLY64$po)%5bC0/a+C!B&kG\G-r'[20Y*p[BpEt*2C=Z1C%6n#eRoKjAscl",RP,lK)I?o/h3g'hJ?Sc4c
%%UJH0I@k9Y>I@8c-n7@<)I*`PFjeI?>%p9upP+E&Vb$_dP>>,V7]I@Pi$BV3O[sXkJJ-j;0YG_dA8'"n>,sq#oh+CNX_On8'kek7
%k8=W2FH"i`22h&_6jj]jknM;r%.6og-R28B2#@65RV"hVqkI0BeA,OHJrsL4@`_NLeQCSE-[8XMMGnM3+..t+$*0Dnp#0%*(c=Vi
%"OBetb`7e?"cR]Wb(?na/oKuT4U0\POI>ccb<0eEhOD$sOd?W#LD[`tYNQPK="P";Q@:%N(^U2(]gt'p*QVasj%Y:UdV`,^0tkZ]
%<5n&6VUFW-/-AEqB;Nt<dVr!#Y"N-t*bq&b2bhV)C?-']gL3E&KTOu<Co[VCKAcorAnP`7SB$T/?I8?B)ubt/&7B6**T<Smo(,VQ
%FG`&)TTi2/T'4ffW3fAeX0"6%N@&2nJ7%2CqJ!2\F'\E#)]#W_K`#LG0%$\2'"!=9(B)g?SXFX;1Uf+W`jEcBD`2=:>u9[L/AkJ`
%=,a\Y6E;-37T+KEoS%ss[41d-["YKrS<D+,EWk.Y&03sp7gkLEWd%blrVh6dAhHSb2OXk\^!8C.`"+U_XH!tD^jXI>_R%*<?F76(
%oGRd/8EhZ2_po)`\D!RsaS-;'RhY1`lHp:sWQ:,;V9rNj,H:WJ="/e0/i6"Ggk/<K9H(MBaAp!:Uu8qo(>FO1M5ESkjb3jh2KtFG
%YD1Vrau(Q;2QLp4Udq=q`d8S54X8%&i1UQ9Ri-@mb0dM0+Al,d4Y]A1FJ[-Y)rCQAe@6A68WKGn`k[V;Lgf\/M]p1RTmTk5V^URB
%<LS.UT8NBEZkpG);fb*+_NAq)d2?ho1\.TiY6(&F1e+j_HSP]7`5'MO9XOZQCg?$R5IHGaY+2!E,hMbF$ukLW[ECgqk=4:+b\+&=
%J^=261@kC)Nf-1U2k8c<-K*J35(t0:cm[2a\OfGJdesB&<Q?0X+\-4sgo'A7R5B5VlOW55k/(t6#<d%@,F7uH6_)cqi1EOtr5kM"
%mcNQ]^R&GBrp;f"%e0;*If8TiqgjKA[N&n?fkEV:#oAeL*u[?'s0A1:<%$8L=[8n@BV>4>)XeNBfSp:r2Ik[V=.\o&7aAbm&Sf7Q
%3Aq=/Cp!c,iRPW<=rmi(:e9p>i<V<UfR+3N"aC0*1XPr9Jl.82SMBIW'6J_eJU2T0`s)c;St(#?aVV>@dH2u;O=(TbPNg]=1XJep
%'9%>1Ok$WA7bGO=.H7;$-i*pen*G;;gT]kCI4AR.BC@doI+1]R:>J"Xi'B<iWNRS?lNe!_R5Xb)=IV:>@61pnS1BbRD:1Ps1;T1'
%gC)5nlVYIt-Ot6Ur:?'MJ-=JdpM>6O"VU+qm6qc`18$$8p1!Dsk//Pdk8A&f&"+:B[T56:GHBqBB'QgI]]$HI>(_,.H=Ifu.dOFl
%J;7DJ(ghZF+#^s^"A$Bm2$^$d?emp;j/hNd35b#E]rq7W7K`s>H4\F<SHS7W0G,ON@(1t0d=9h1,@LZeCYPUsm(hag/[7hofuRcE
%oq#:s3Ffu!gA;)+Pj3uKUfnK6lR=tjPAQf`*dMk`HYh6R>lG<:%Ua*R1K-QD*HO,*oDi-9oqMVAMPk8K34VLZE]ISjfoV"'^.@\T
%)3XN6>Sn,dR36XY8:IoEdTci4UIJk[a]lO^kWR^'N_GO3mZFmh7l&^3AcgO8=Ol-V.!`V0rA="];l47Ca-V]505?Y?pr@ahlAe/K
%;j\ipXb\o,BF&r*&bF[$JF/-[UqnFUR-7nX#VE>)XiD)f?t*<NY[E&WGh\2R0^C`A$O3<OMtM2]<?2pAWO>0)AFcKJUcUlg<koh/
%Nh@aN):EPX\Gb_!=SEq.aZbXdo5:(S9,KE3ihG4160f#l;;0J[m,!o[Zlblcjc/Mf!YqK;'C^i[:92eTe%?^3;W`<W2t*&33f4@u
%0Orr4&0aJ0?eW"b/pQ?NAKsk>[eL/CWG(4H!%pGgf4p,9Yd!jkm?@e"4G6;.THa]dk`G\<=(XgI8,V3bRtX:k\5bLDWmbs:$+=8K
%(DAjX7d10lHMbZk3Kgb=aR>5U3RoknS1;t`H,*#.3\SB_*Y^#*AoEWiHO)"gGb\J>*YjeLeI)AnX@6VJh2bf>5`E=mQaB\`K!U]<
%f[E!8C='`23pMI9kZ!`$,oc/KDX>h!]Eor5)FNH>Iu;4p4$Hg@32gnAD#;6<"u^S.#6AV,5OiZYX-OoA8/qbG8C/=`k)E*h7fT$J
%Y1n7I_t'A]:qAKt`s4q?V2F%sYBXe*O&[j')YO`SJ@`5rm1%"p)0cDK0d0WaHepFRM;sCk(al>Tgi/ngOmQ5s^c3a]0V?o>53:.,
%E?6qW.)]Ru?DPVCA5D"_(7p<=*g!l.L2sNX^>3#Jqib(I*5ChCW@kGqnk]T6ak8]EQ)fp,*@D!:.Xg&u[GPb$0"r3IJ)Y.jT8YtU
%EI,n&jB;1SVQKm+JOb#g`ep^FJ#,6/?6o3?7/V+')PG!r69HINes."lI>@d13\JX%3hr%LJ".m@pr#/^:GBXALu0j"O93e3p&).Y
%V\;$&jFqXk'QJkiY>Ls<1'0I'l/kr5dA.p]10]o9.hO\6i'S4dKA9*Y)HiaB,Kge&b\DU+Kn7R]fX#D,.t*tmbE56b"Gb>?he1$s
%iSbt%7g:l!CWQgm""=@[I84ZjOUEC\+bWrm,\N5F\tPT3!1f,jk)I""nfQMl>oo+/$eK<Aa+;@klX^`_c%6r\R?2*(m'jO-9:,=(
%Wp>X-Hf#VXr72-?#.f<7M%E;(k]lP,d+'W3h9*:LU=[Xd*$)5.ar3*5mnpr`XaU/4$4`#\VE:)IQ<:;b6+o@p334.P#K8VQEsi0=
%@j"L(d9o>"r]W(Cm3(RCqo>QZ*#XssM'Q:6mF!=;bVt/a7.4lg249d;8ou0=2GbYj_a9cf:m:"/OffUnF`H88rF^MM=_=npo@=/c
%4kEKe\ASR%5UPeiSs.@,KU<'PgM2#.OFd8rd=&mc.)@h(&nVt*Z"0-/:/S1/*8+W@H5Gi,+q!=IbWs$djRW+A[=0s:ReqNt1K;ne
%=Y'IYZH;[N/m6I0R<-J4GJ*;h/&G#($1CiTb!rS&.UqR3SUHN'V,NF]$X29nB8[T;QHPJ'bq`_n5tYX-\T3M]\hi]WrGqFde4Al^
%p$/R5EAi(_%EY?4b[>Ht-6LKpk78g5qu4lcP@<BsQ[7>NU/uln.lq@6p[/Pu5Su$5KW]Uc2raig[OtV#aE"^p7StSt>X$cKkp<-Y
%77g3V'`Emui@5+(s6^`3?C-JWgjrqT(0JEdXQYaY7-n=qqc))t3V](;T!J#Z74BYFKBNK4FfV-8-?%6=WnU#jFG^,S7K8mFPIW,@
%/Mtck$CfeYi5H:hi\:_A-Gd\E=S`N78^I&%42NJ'JGkj;d6sX.HJq:%1F79h]bM%/L;?/UH=gj9\-K+$aOMAj;TcOR?5Eg>TDJY3
%3;&:\UqEpoFMS4miFr\4=):/Y#]aFgs#B0HfX?of:Yj=udSm662]Wc3Do04(FN$%g_M2/=]5-MJP<8s&oI=%($`e=UV\1\uj!lim
%:kn%&6Z.DH&0!Hs-m!PAl??RDJUc*'qn_i$bA?>**hhW/PPJ:1Bb^r*HbYd<iM`:b'AqBm^mM9-EK?MRktMp1ptY,r_GVj#PKYrF
%Yg"2FKc&oHYhhA-F#4GU6pY^=]fZo/%Io[IOX3sgdaM!k@'FmjeK+Apm72(is1Ma;'?,0jC8$uX'YQI%8l#a][Pnf0dK@[(ie)Op
%%sg81VLfLQhW:\a==sd^+6al">-WDBl/"0Ng?KPQ$t_Rt8AWdH*'EQ#o,2BiY8)FX@Zq/aX;0q?ka@`eDeXE0lH@OU//Nc:a]Y('
%;7*r1Z->#P@B6$T\"sA8]Ro3H[\#=&(AS+<0O3hR_N9#O1Yd)e\"+Y(]U==`>#,(>CM'*ah&>uaT(?gU%sqdB/a@&p%"fI+4gEuY
%a0l(KQ5sP,:GP3j$l,jD46-=cs4eta:Cnfl,DnVQ@hmX8UEo>0HH)b=6n.cHWqGGUhBacJ!HkW7RFka9IUWcQ.GUBFLNaCPf'b3)
%<^_^%mQC31Vfe*5+=F\,Ni\Q%M!2q(PS+@"Q:h"QN"ADg?Mk@/g6)c&#ROEeH]YEBQru!if[3@A3X11R&,?1<s'U/GBLjjX+l'ng
%GXu9(!p>7XGN5S>37#!N,&`d>gTT,t)l0@Z=@SSeQOf78^\>4.l)pc/TjZ5t+K5Vq!i8Ak:^@eebuk;TO+NLoa1f/1b:jomh3T"t
%]J,-&eB4n6%MYTa:r!+t1jI2/-BB`mXIH`TXat"VJ;!L+eRXCD0"c$8b]t1HIN[ao<%tb.T%%RACoSFDG8Gn27\sTlDA3De)a[hu
%i2DpcD*D]g;Kj4f)#.o,nf,:j5BVLZm\iOI0./DH(,UojgIQ!+j\8ZM.!\m53a8W$S_<rMLQQHs"@N]P$<H#\#@BX5gSA4RQm/5F
%.`0<GJJ)J0POq7TWjl+FJ]QW^pkRXS7Jul\?^"lkJi.IBBqVGC56t.\9\P+V8iK5rD),lMI.n/'3E]-j5g[CEik3^N)L[`^dd'ZH
%gW=8l0Q._QKLM]rW8WJ(j:&lQ[n[L<h@n-h!K%FVag*'U6lFj4X<d#\Xrgu6!MAk/9sIoW#h]9MF_o.34oeG%U8%jg)sTe,o2Y5$
%dU:[E'SHT>F(-pfr_tNZ)k<Ue1b8RJ(P`l&'q!-oC_Q7pSS%f.:,?fk(R'j_qJQ*Kd/N/S\9"&`_8Sfi9..LZIQlo8P^R]')E@;q
%b>L?nLPSrIh8b.jTG$)EQ#dV%pAo]<QS,80[Y:^n))E537MIX?MUSAYY.Tk]b,Due0/r/raJ6Yj/&6_#J5UC*`)0>k7M;7[>f\'F
%H'8SuKXhh.5hoHOoZ'is"AIM>A<d/.LC_n$?7&*Hf0oL]1?$E;8`]hSC82O,+ZjMp,]dK"GTZ-)9tZE\l'(3K&[6Aa#Q+=]fJXgn
%.P3KE(WdGa8o/l?J#2XkJEbF>90%@'3E6H7^`&]H&akF_mDW%hg:"oILnUE3%fMuHUi^Ob2S9:p.G9Hjj2/0m,g\Oh;uQc*4I>#J
%@+Y$FC-7ml'$1j,:81S;!>%87_or8@:u4l7o!=!IOn.dJ7pt?O"T='?_1!*G6e/'2ngs53_\L-e8"<Za&A7'8pAoQHRc-?gr_o@a
%IcTd`0C#F@fGXToT9sC!etqV&DB*,8hXHq),*[ZJ+,@=K?H".;`=67gR=*)e7n#&H"S#`n;2-Z6#e].\96jt/h73;_\]R:+nRbC]
%C?cSgACeY+5+FPZeB@go83_5KfL"q5#JL%Wo@d!;*Mh9?-^4Mm=.9q$TKdKAm9h2RH+1n[(a0K'<Z:O[H!M]q!-I;CbUm.gNoYSe
%]TCP>ZErdC<u2]R=5@l/]SlfP%oUk`^iG`P080[;SpX?Q&1s;sI<*nQm"g#s_;MddH]fZAbE-ud`JJ3;Mj]"O9a9(7X&KZtp"YB*
%T'KSY'Uj!@bZ3X%n/omYHf5ZnZC(O6;%(etLib7sUNjV7KFuGk0Y5j'pi;Ps=iR00nB.hZDDu)t`/f^11i0ctlA7a&UrsjJ*l3s`
%h.[JsnLeNG/$\d)Em'45O\#elZ]TSH5'ZBg)(_\NFu=:!%mXb]8F6ks3\RRMUYeABU=ZFO+?#^1X/m9HdH-=$8ps%_D4R(tOUc(^
%dMk.ccC82&c"SEK.s2cPaI!>>q@4hoibt/n?E.B7Rr't?X`E^=1'N^76*W$[L.W<_ET6<,>q<HajW0tYo$Y$TRIF*4aK40_<<Ec/
%b>>b\-<cP\A7>%p^,_T@,`/,DYrRW?Mplu[2lO&g7[EG_#>(K1*#0L+jmif<opQ91ASUo'L\Nb#)a\CCUo^Eo$6.aC+MXb+bG\6e
%Yug/dMKS\='/\c>@a,#L3!6\08/7A^<,s#h9$s[r[kD0AK$H5B2LUJ>&\M0p1^IRhGHgY9A$.,CZ3EpH`FL1HWp&=[&lrNOKqu%#
%E^nJCT(Z]2*)'(h7^ajUlomdg/S6bq,=l@=-`j7@Ed"ri/t(r1)u<06b=&Un+X'3bV6uP`R;hB2YUnV?nf9*8C@0R8dU3&^11sk]
%cF>c;IO3Xo8PTl;d5TEj4'?cI;.<n#Wh^8sDl0$RQYC;/$Q$0Pc6VAqd+*\G(flftjS@<CQRLn#Z6bBBn=F]J3(MPP<olNpJhMMu
%Pb?W^<#p*oLcWaa?H@]N#Gr-,i!gJbl3c#R#hf)h0DtgcL'[\:-dtC6O#>ml0$@bBI&F-(!`<&@ehIP-+BffoPo$eieuU'PYWT"J
%_a9/!QH.-eH!)2H'hD_lL4g!gQA9V?j5$@3>O)Ujb/<eSSeY>[);Q6M4]RK)[lUsur)Oip:pD`ULB5)@rDAh%+K`sLcoEC^)'4_(
%5VYA04>4*)XJ+%c.\>;KMge+"4M9!;(XS8fb)m)#RI<qpA$n(V.:a4mR::HC-5"9s7NQ9=;j46eM<1ER/WU'ZKj#Pk/Q%f7bG.6=
%QH+a$[h&sWZhoMn/hN.7bJce;B&Llm,rH]]mK*WSd)A8S>=i3HP$J2%Ps$faX;ME$9YouHSjcA7eWF&Z_pZR7UV`*#[j'c>8^3<)
%UE],7HPH.2m?+M,BmFrmQZ-BPNsl_4E#*$'+0u;&Iq52h,;Z;+QA6X).%o\,#0K):Gq@*M=<;637UDD$Re>E\b;bY%I$PR@9?$*k
%X@RKbdYH5dL4;$@epn].N"0b,R&3k#*G_<gM^MD`MLX+==JNaR1b`_\(]l'U-H+g+WIig^*W<-sLW>]hmlNBgMK-bBa9'LY6>MEi
%8$Oa&3u1b`BQb4o#g\<o*NL>5:hIa_@ZK>g6WgO!_Ip/R7I1Kd&KIY'Z-MnjddC60\V].9,H2(&K>d1[XdkDN+_p)j-A-mPhfp=]
%7LY?h,7G)OW'i6BHc5DUB>n[[\hH95XGk+0cjnJ?(T,62A54**lWIA.`CUf?<&cB#NMa`W.pSk,1?%u/krqaPe+?c%BGF-JT^4%b
%VFO@ifH)nJC_*"TA;\h/=KQU3BmUQiM!\(#"5@<?1'$&r&_\95L@&D?0Lj\9L;^HVm84QF[R]^#0g9D\7Fhg)%rW,Jb'OJX#0f\t
%O-T6gD:fNu&r[>gJgeV50X.Bn6fZ(<p(>o2nPQS4`eP`p4uUb&i0=H\/[UmM@PL";X`QYe)N!EM2d[NQ+kb65d#h8*NZi%=*qaW[
%4I0N.(>J'7rnj<-OnGA"iDD4OY:(qRO+hCE[2i3ejt38mD?FU>mbhacDO*Oi*hW/CmiQA%Zoidk/_'@\rgcUM6Y0eZ7ih3p+TEtH
%GoauBPfcO4TcUQn_g5i$,)UL`Q/"mCk;jgT<[i\<)rI;Dni@=7Qc_i&\Hr_Xd7a^6i$EG1!h^a]-e^h0p=QL=b]`&H0N4."OmB!j
%4D%4>8443'"WgKeeOJg`7`Q4=_HU@teWC&&`0/+)8BT`i,mh*<B^@M\Bj1(#K)GPf(JI1_as5M:[TP$gBIm/HQYANLm`Nsi9\D\l
%/sgj/@m`h5jLUK=_"($K0KXZq])qaRWGq]kejm#cQS+9jpYm*Sj]l1(ZIfuM;)3hAUNo`EC&Q%B`X5U^j()E!#UBk&>npbN79C*0
%;BNGgm"j_=/tA<6A$cb="^\$ZEYq^aMBl5*Ff_dnOj#F\3/C:mAF1g%,NCXs3<'(A^k.k7[OVU\"O+kgX&Q@P!`qB0FDdH]_Rt^D
%=[eL.+f"2L=TkKOop<-enZjW/BZ[(?T!pm3m^[fC9$-,!Of0\[kBrW4"Ku[]dVX#An".fN<I206;C/kSA[T[]1\%hs%@?c@!m5X"
%,TB!oQ)#".A:L7EdQ9&C9ir]U/b>)MXBR:69<'8>&`hJ,W[&BU2:<trg1jM3\Ud_hY*uAbpoDj9*aoAGflaFRP:Kh+%;50i\R1AC
%WA7-A+=/eR>knM.K;GU<E_4ERO_%;XeYPmDAs:h(jJ<R<>gRQgp<ak*r\0MM_3C5bdWH,<]\YQi,S_`jb-e/3G^iT'Jah:eh-dpr
%.V6a(;$%IC\LMU$A//ZC:$,_Nk7:Bdem0Jh_\s2)\-rG)AU;s[>pADlglAJ,.BnIPR*d)'=NI'ccG=mG2,3O;G&-R(E*1E^Op@Fn
%.0Rl]I7ilL(h&^VRDU1@QQuQ0)`<>%`\?<;O_/$1nNFjO6bcc"I;-6/._1n':KVr$I]ac(%HE9iKoV.B6ciRTUDeHY`19S;cEu.5
%]c(IFf26D>l:<-*.b71[Q4?:\U:SG";UY,Y<$!PkX?`bK1_A)<ohm-.YthU??%]iBVa@4&Md>uGVBb'.5'/&t=kPq3-oYuG1p<Y]
%L$5DIR*m=8OpXr,ZjQ$"\EK-u6:nS\_H$HW[`W7Ni1I7&IPSi"6]J&OkqE!N"-Ek7V%r?(m]X%FPk;'P`&6N&cRLY>>$`"8>Y%6)
%?C.pR,<:uGGt5cl14<d.-p!99=>T55@6."j^MrVMfnU+_36]E/0)\$f$W8'"Zn5oPeVd`+%f'6#h`HML8+f9=G91Faom-j(,,=2U
%;16S>Zs_?[fj>B6f,'nj*]8)8^6;0YJTu]`At7AX,N5:f`,EZ*KFH&^pe`D47*OZsSKP,2GtpfE&#[L+/]$'XamW[jSb&ng`HR4R
%D7.0?=AEkR]Sd))VkP:D;T<IPn,tQg`TV3EQGh*>6LR@(RoFJ*W?0a0XGg<`MZ=]#V,7I/N0OU%`R=DG*RWcNp4Imhe`iom/Vqkb
%W))LH&Yoo:f09&d-bIf\B_2C@cs>!ciE*'\PcXUW0_D+L_%CX?TZV-S?"t:@/Ot)tb!Jb-EmHQf$QtOA#Z<?$&R[ua%TSVXcR\2O
%C>6AHWld%?AB-kB6i-#!"*YgY;e58Cg88e>B/D`K++o=\KsH+#D!h4TChC?B@`JC@/beO;=YUM2gU?LBLJ57;IB':H.#@Tab[SXl
%/UM%5YVOYQHqGuI:ARVp_WkcGEp8gJ6'ef3(&[>N`U`A=8"dE&5:W:0c,YDs4#.'&&C?Y6X($'thH[L:Mi<-MD!oChUQFMPd^t/n
%#MK_5c0re7.dYjsrI1RSW>PB0!/_kRPOB'[pVg[=<?2$*'3Z+Z9V(1IbjJe[XA1PB-!Oo1nANj_@Spt>CJo/2`7\q#14nE.m`n_1
%Fg3s6\B$V5SpD\s\6W&p!"uFL.<3:<YL7hq7e5F"Dch\50!dnZY_a][A(*1o=to/!TK.>`1H+E9D,9h;,b+(aA5SLRO(aJn@*j34
%#9kL7FHN2gU+RrBNLtuB.(0jlE2$cXl.D67]j+UW)a;((!7Z"i,J*lI@t1]US**XbJ6ct/BJ31C-l@c3^C1ET]qY>=Ha9[sg08D"
%8Zjiu>/\((-VpV\>\[A)^"SDdU:1gB``#Fk#oc,t;(D(VK/=Ga#Uf%p^t@DWQH.i:*g$N'K,&)'JJHgOB>d)\WMB&I%[Jb">(mtr
%Iu9QG98/hlOKq<$jZ:c-Bq1>28V<e0U*Eff?`MZW[7V[#9,b6GKX+kE'O?-=P=ocE-(3'+?dSL"?L^U^,8kb/B?@lVXo-n[/M^sp
%B-djic0BFE(ZC'mRT9$i*6.t?Z2ZJ#RVl-(Hq=_G&ep8[[8W8%""e'`2j<Y':NkM8WB75-1QTUaT84kd?g,Cgg(?Q@lBHfBU^B3g
%N#e/\&]aL^b&GSN2:-V?O;j0hob!IQb[F&)/d1`S]<H.SSP+2W!h#c!ZC;M_YrS^)5KlUbR^mEUoRKuBV]o-4Lf&qZ1bhM,K<LN3
%RC*7DOtORDHMc;(O`kJbTG[RcO(>WIYE.ZT'UN*CcUQgQaH9qdC]1rlc^V3(rn(>hJ]?\)-OgS_OR:9VE%LF_K+lR.U7:A09IG4i
%dQ[aSGtjm(n;-@Q6_ci``(ild<R!PV/QoUtP$_.#PcY`FPC7fWrjH888?q-_XfTg<>>kBibl.s2%5m[UpOFD>Q&g.H%@Y4;.)?e3
%HStb4)T:H].+l-n.jaD5&WDWn2g3HB:q56jmF2QgM\V]i5MI:K"p]PJa`jE>="qDMB!Y8&ZbKnFI.sYY2%[p%b?b;'ZdIIDh,'Nl
%97acP[+O`Q(%)b#]@:QPB@XgPnop_-_SP\p#-eRu.9J6NJdtnII@mGaa;MXa2@MEBZKGf&=_L>ZPU2)_[;@&I,5(O(6s=um^0mT8
%&7!NcU5&-&n#p5Lgc@:QbaQ=<Fl!\.2]Lu<[ioYAD[=ioJ)V$QBR@!<d5D,Zp-o.rZ[2E!N1c4cj.%tO8%D`>G.Wsrq0c4lE!H;K
%0]l,V<=q<.-QhQlGa;:M5a4N3d5N`m:",m+862H2)%4<+`s0+jAODtU2[""A"XDK*6X7]N83/U9CNspO.>FF3#Wd^4GoHg*)dpqo
%j=V%3Pin;/g-B;s5/eBj%+WF:ojBSl[A4Vi:6^kT1Gr&sPVl?AJ;g:-?6:@g_kI7t.%qmIQF%&FFQ!KdJihj@6lK2Vk`H!<E*u*o
%$k.[uBL2p9Yfg6Y+?`UUa;2?EY.Cg2DSO2J7"2s'X-?GEK#O`"l1jJs`":)9,O)`Mp])%&5p-V4_Krg)n6(V<h$4(6GfT5NlB#Bh
%he2UiS\d.C8*^@6'#DNA'IT\S(;^mgiQ\UGI8]tY97e3#@agF)nhXB;Yq9tPDP/Y[hC8gu?@`SH^-^`<=:*iZA0p>R;*&XK[jf0G
%LJ2ZU6p9kN%7/0q#\P!+Nl^k'Oi@(;7555@af(X_KK^RZPDMBBH^X;QI`+'#95$ta;$gdTU:\b"k>d5o_#q>]/%%GbBWG_O2q4M&
%DA?=d$X?=DMslurVg%fU086[qWF%"X0(-X*jCV;9(JTgrR=Yrq$hmHQE/MHuZ9?;1W.BgDHM;13>8K)T+Gt4K6'L>J7GkdP_W(%l
%L=k5l06Z%:2.Hnc8Jr^R62/C2k>a?jq*nB_9@hh?*"UfU1jcTEMIHQQ0E\`LU\G7Q0ko:bJ=GB!-1HBpjAhnSR@+k8IZ*NWT/OdZ
%T+$o;Bmqm@2M:-]C1ut4^B.nC!*p-CVUT5#B;Vjn_?<+ROE]6e'sSDd2l;.><`H(<]CNAsAMUqond\uFCpe'cZM@u:rEK++EIZkD
%f!Xd`jp]]BE*q&CQ(7JUQ'!Kc(J9P'l";-E&lMG54qm"o/]ja25e*5f<>c&HZHar`njP=937[#TM4tJ7&\m(Pn*rpjd@H9\f]UeH
%SEHZa;`E/B&)lBh0U6a1HW<*fVg0HkGJc13=9AHqX??1(fdC>$+]CTT?a`XAk45jul5iqf=KHu0'?0!G(SacGks(rS&"!'QO[G`]
%d4[<dFp(g7@1*FZ!/H0"@#T,S7\HP@U6ffh7Q%8a]J.GsmCH727Vu5Xa4SnH*N2Y'VVJ-J+2oY:R9/g=9>kkT\G&^Yb(q//,r"Uf
%f*n?h!K0dAG94mn&]DaKVM^VT0u4&nbFL2"%d!5P<J9_I`'7_\8/GNaV%#\LE00W"582Q.HmHm$%\\!1SLDRb'=oW23D#kZ@92Vp
%$/eg'lk$e;mr61+1tBno><$aWhI7VARB#\T*gom*FYb7G>%nbqOC:_Q)-M.DcM!O2iiDodedf<lq^"%]DC0j.g"f`kba&*6ZKD_S
%aIFiWnZ(TB!cN0Ub>^kG$#gX"f"^Z7XJ$'V]53`&RGF%G/!!e:fcVOj&j(li6@sOZkB:><iaronC@Zk&J42+MZJs45jh@eX,h4M5
%(a@E:\_F;;67GS)L'1C%i`1]#6WXKsDOO$r("/un71jG$X.n#`pFT6(Y^1oN2dAlXQ26l2^T)WR*d6f)=4r7$oDr][9a"qfPYPm^
%$Y=l\&[D^T7:9t*nH]`@bc4iH'sEVQe2[3'MKMPQ=Mc@EpIdJ#4Tr)P2B9SWW;ED]A!Sh=][70;Gt'.32^XiU/82Ss8AmZ/CdI[O
%L5n+PI"BDOj36.0=RYl.Ye8YO/9o/lC`$;;@Nos-M%23oj\>Y9ZWb)0]470(WXQ!2GpV49b92D5gs4=P90aW=[%oOg]nVA\(#X34
%@J0<a<F%^;,-\(rIKL01T&Agp:3!.VH>@qkYkW5;n-%>5(IbFRePrWTgoC!2klb'kaH@e#h<_2eGGZF(I44j:VbuQP12*=#lkD(m
%"!Dnu(E1X2O\<&slLV/#>';;roH4<PjikB6Am^K;o&>YtJnm;90UC[QRnjWf(U8NdhgR(da-^r+AjK^h-2nT>IjC-LP=/<to,2,X
%4_UGYN1,2jb;7;Hj/bG><faY=$<"Wb_.mhF:%:aj&+97kQY"4<H]_R"JWn-(JiPs,9(1OUoQ9.<TjdTBX%b5F^(1aqO\!F>`JOaH
%4DZ!WPhr-Bm":'V@ZE")Gh@*bn+Jgq":)c&GbcpdNXoWL431>HBECBbql(3("%>gKpqpkGUNl9LU<a=l#7NoTG^]h.d2l<(qjcRX
%1+Z'LNYH*O8TPg%OSMcG4]3jsmIQJ2K3Dr[g`]qr3KVaJZU.t$%5<Ft4`!'I*:\5Xa1fgRaTar$>j.kc?#m7cjKJa`MF;hkbNE&a
%""/5hfF&s!gsB%.l$1r4AB%-%;hQ(]*7\A_-L(e]N+YN%_6j;?oG#fc5/3A*'dtQ<JS8%Pg%QIq,5.HrqW*PXE#h>T02N,uJ#!B4
%>;.Ks)53BQ1@n&,j,oJGc.;UUF[X#(KNa%[O[pE`Yl@0#LRAN?KPjEdh'n<[>a]/#&%a;kZ*([\I^ecNfsHAQ0a$n2gC\>`qFHul
%q?Y*7+!.b:A[pGI7"5\bN);BXI9kW6297/Tf(hqAdtWsd#T+H?Fn`KR4XogUk+Y*g^"VFhITTJ/>u<_tO:%OB[+pP?r4bZYE9-2I
%:MD`uS!Q>YkpAL(2qhcHDJb08MKNWf-s5dd?tAI=&fu`gj06j,T>?Oe2Jg=D`;Dh^CuJ,@ImY>G(%X)+:@p*LPKc6A&A*WLOm>pQ
%j<1EWITSCLad,)jN=:TI6CErM)cl>Oci.qO'#(*5$_;USgnOA1M^0p-Ej*ZG6>okWH1]Ech0`nFkfBVoN2I`.`$k'_cWJHJ//_d1
%&m2XNQ51^sL(E9(dD5q)i,_L\UJ^TSGEY&Mc.[A&'n^r;h3]`Sc*@nS;e_e9_r0Q']gtVmQt<$Y'iqCe/rn&=Pc/.FL^L2hb(_Pm
%WeMaR<8"8qnQlakEU(tGd<h1c17AV7B:VTA.321U4%n2iF&qa_YhYkW)CP%H6dsGs*<E^%jC5$s4_:PIW0=D"B#C[tREltd#<c^j
%c2,Mfft/[+J8)#3Cl'_$8,?CDZMq5b*_\25GjO6!';8FDJ1c^8cQaorhWTqNKrmpN#SLpR@u=su5&<j!2I2hZfJ94*q-7\^fV!*e
%Gu$;Xf#EX]]Q*`]PDSJtn>rF`J".qjn66R)B*buWap'D76_e'\40u9;]p.;M4`93NaX%Y]#:\m,f-f*?h]!`QGsI@2Dgb)THR1$W
%&cqK-Z69Jf'SpGF__.#qU\,-Z8<+%q4jp9/^HRW!oIG>l,D34");.pX=%;lp3@/l2EAp'<A>19E[OW2lmm(Xf!+-bsZ%5XfH]89E
%^fb84cZIX$ilL,FT2())iZis*.l=rnIjGB6^LWga7FXGaU1V#=*28r7]m>*#\Ka8X-1Q?(WD_fQh3hI%Cgsi($tBEO2Y8mm9Z_M`
%>Er'RDUg*XXS\n1B90>pZgfIWW2$dV;bgaoF?(-FBdL2G"qCC,Wa^*t$u/#7mDa:H0-DQNdF_UblR6CYi)>mKT'<40[-6[$%<irg
%a[TPTkRLBYJrl^aW<?n$SP9ZtnhpV3;^(eW#T-\p-F'mgChE^3?uP.gHfR`GZ9llPlVn3Cc\3j[4f`4]:'g<eWZU&(WkQ@Eq6@*c
%k2mgh(.=@0%cTP739X@.G1NBdrfPY$[..<[bTgodi??*:oCYZ'<L&_`8o]bCk?4ou9_I[jUL9ZBfJ861fE"lH;Fg#8^*6lKK$78C
%H8QmF#/U9rl?o\3$;"Jl?93,eJq(^Qq\+nCS@/r#N%/2u`U[DFaVRi/KT.-,K/4)OH]`-8.JZ:7,+"u/NhD&BSgRL4h,fP&jP';[
%Zh?s7UZJ=0KhnXh]@2apR&NUO#m]ogr_JD/9bhtlGVpdR@:6N;/1,Tdd6h2sBi%m.cu\6\Z%8OZ%U!;=OF_&a5K^RIbJ0JE$b/*^
%.J09gWFcK#(CI.(.J-lq#rt/(f@Tr.V$T<:(]&!5>'blY8TKKU$W^Tq"$MU-DA[_TPSJlRD9WZ=((>]7&UGf$@$ITtr/`?o#,)Dt
%Bclq^I]rpo)0P,gC;O9U7i=>J_6s<\qNtB!j9I-NGcHAS".L$mMYs.D!d24L*&dA?SlrZVki\AA4ddDaT\%VhND5qrX/onKA'eB9
%\-4RV2]P`piHZ"[IR)q([Ra]!f!9fp,e4/RTbfF+5=cB`'0HY,?`iB8VR%WU)%oV;&qg\3d:XoW=68J?gg:WMWqbVY=ighn(,kpt
%-D=&__6^jpP\2SbqBuZh%dQZ?F_U>Mkg#:c6-k6gnV+ZG-4b%Bd1IN:TI[@6OnW>o+JrJnK8NIGYU!#?#8t\k8sJt@kK<0Afg3Wm
%!*4L0`ep^;&"hlo/)Jp84.%Np]&F1ahEc<]9jcD6LL*i1I_^"N2<]=Y%B,+T3?tLh-DTSn`[4V^5YBmfJpR7U:+N[6_/`1`OFfnN
%%r*PU)Y?.7S7K4m"=[&;0'#L:_8R]Xkd_jW,W3ZYG^983)s83W0Z@M;(mNq5a*4BTqsGlCMR4KplM^0f+0es!\*QP@S@]Q?/>0W#
%eZB:,I:N<YKZTNPcinh2BgF"naU5>%P7OTn\SuTdf]4JW87>DXmI0ob/dT0Vf#V"/K`0@![_?_R+fpFp>ro#f$'<47;P[h?pf?;I
%<lB*I&u8&JbmQQq;M%O;1F;6fF_H.,$W\9[+,\(EfJ<Z^N;K)^M)2Lr-0SL!E(L@^dWrR'"?d,&<_3T1OM@JYhDtpM.Bol&50hJB
%Hg;<gbf5m3TP&\LZMDD\lbsPFP-4CIG.E2a3-'V)o6@nSnW<L;_UA&ApKQ`9901F@Q!U=c%'Np)*^tj!f,&0dO:>090!g,#HWT*g
%"6>fW:#s[d5)$2:UoS#K@n#SZOTtg?A[Kt-h;I.Q%&@9.!r8bJIQ&/F8huKKhr;#[Vd#%[?^1lg8:bl%n6_IZj4@nN[#923[U&e-
%-b6N#P!93m0dOdoWXi\gs6Q-CIR=>)qHT+#6>nE&Y7@_Jd.LU5Nc_Y^4u!%R)i6M.dF77X(^Fi,;@4?EhM9aE@:[AL.Y^NU,l>\!
%Y'.JZ-cOAbqpZ@0%lnD4/k,q91^TP=WG;>?bZW#>W=35/_\LYPYUjp%Q@T9_&(_@5_*P[#739KPdX:Qec8pN$`Fk('NYf"#"b_DW
%(L@gXdm4t:%c=C@8U%(k>>n-:'"hYc6\95!2Of1&\2\kH%O1Ac4e2)ZH!&XXaHmH[Dii9c&kD?J^+Mpu&i_NbKSb`FmE8,I,ZI&N
%\PWN8"1A'[B.m'(EWhs<T.r\c4;Ck?%Pk!r_m26SbKgX>cTF.t@@Ca;A!alV=/#LP/^$EAR<"dN3qUQah`RT:1^q]T9E$ZHbi;2e
%4pUX\?n2RA,h.THa(79P"4$8pHq0r@a$lC>AB@A;E;$LG!M->8Z-"(Bc?UN>c=/WKMIK(QJ@d!'Ak5mC].*Le"FmVa\04Fl.f<jV
%+ucU@^rddCl*H"@d@`o(qS;,g+;n&T7c.*&BUrb^B#3XfaA4oL^Gk!qUN#d.r4po)r45o=/P%kYa<T6+<f@'r+(gUc"9!4@%ICS?
%SgX]/qaOV=A%b:g^&rj^Fi5C>>4<Lm#bM<C^hk>R3I+(7QK9beP=dJufM:Sf=1LD?#`P`[03fFnr.[I2nnVb'LV*mfJ(_c_;=VQ`
%X9Y-@%^J.O5ss)47sTD[<_"lA"_g1a<A+BDb!m_gcL"g?/1mE,#\gft%ARbnj?[G":DgHgRI*$^91IJe=[(f\S1DbNi6%9Hk]fER
%'n$n8a^_XS]s#M*o@sHP)S'ir?D[&)K@=ZZB63S6ar+>KBQ[R5m#Og%RC2s<7[EMPQ=ngHkW$=hrIh7BEZiEX346V?3gZR,NHIKe
%$p,X:YKqO"m.?AEA;NEEds".j=4fh)Gn<MY*epa_1N#3!CO7r#8%D$';cU>pb%O='f3,JrO].&gM6dg?jQVpPi?NDR'Y??JgRo(t
%^j8[A5MKB.<dj!T`D]:Em.)I&k0*XEGk?+5JCNIB3^Hi'>uCCQE;X;`r;ON3#W(Kg$UP;]Z\a`,qlUktTZ2MsSIH?')5[n<*@)5q
%B!CL>GqtOM&TjV@@_kcQ+Q\c<'MP=(o;i27!GpZpD,3YK=RD0hGsIKPkXIB_j_WH[(t]Br\a/Mo(#[h3ML+TB?q@_Cb(hs.e&#Kj
%Dbok^B#oN*Md5'Za!1U4DL=qNjNCj`rH:8io6L\;I]>[3%_h\Yle.m=8``TOpioVLF2TMTj1&M.;LuCQ5a#Ju=)=nH3*cSUoEdDY
%mMZ$*#7g1<UI=K>$8d$ElEO@)@:4]p6s;V=;RfA8\`K?\Y_Q@3PY$WTqf#DF]r4jj9c,SCK(1UN%7/cf"%e&e1MG75s5P^PXBrX>
%1lcI_T0Y6<];ka+Eo'enmn/\EJl(53-Q,$s!aU2_#GsnG`4PB1-/46fS\4_[8qj+]F<2/=<fdjOl^S[1@N(hNq<Vk*T@G84N1a+t
%8_cEaKZk$rlT9@A,:8J#G(]cVbQ%87i?-1uYSbHjFnQ%"S)V'4gCD[+2TX!8poMZ8-9SJsAp%!+C\0tSLi<!Y@PQKf.Ek"JQDF(*
%$r"i6L9\dOF^d(U1E`#=UO[1X.+^0GdZYScSYtV/&Q;KZ1(]KqJpX.:W1O.u%`Njf1lT%KFZ4E!8sh,Xen#BSf6,JID`F8u0\RJ(
%3HkBX1RM*!KT*S-n%#J<RHnsT+MH!'l3Q::U?UNJR[>637hFHK<EBb(MtB.A5@H!%FM=VEjE!XDiB$#u8RbWR+&==GZLu\t&gP3q
%+kjWYAi-MSlNC39#1Pf)'B][u75*iW^e=AIdeQ$^duXpF_S.XADENOi-.rjcEM>UfB?_Pn:02^[Cm=f=ls7sN.ATI^fdr],=Hs;i
%IHSNl4DqG\g($FQ/j:s,d.6R_eLcMs5aRiW)jt@bX-_99m9lkRq.[8eZFZ5_X*p>p#nB"-YY.6K5u0r8bE`%U"II"*J6&O`kGP'0
%j]$P6Q`G'$J`8gN%[#H_qiWt*Sn:isc7OPbi%IK#_,q8)oSr)@1,qcP>S7M.1?u(Z"sjB=H!GkEE'Kjqo\l5W)W[KpB:h5<bnZ`8
%c-*^eY`!\q5jRVp'hmhu*!tf5@#J+]rgl02TKLuT8'Ec-7^%mDr!#+R<0;a9-\^DSTiNJums_4h!S.%tA`d%`mCNV*!5l3mT#KQ/
%G;?l^2e1/;'&@h6*aaK#c6"I+dRs;FP]]>$B**Bd8%6m+,m*jc>'#dZ2)-]%?L^fLb\Q-)m6dl+%E$Chq/.d]Onk1U\QP>%*F_uK
%-G_P<%=t*eZufV6:nc2.16>@9[mNYD?*FUi3*18)kG_blAV'J&FKs1m>V43SF,.[\3#B0$X0K.\ftVS"%*[FmWo>)_X95Uf=5K#Q
%RsD*%,LLZ/ORM7],)<+4g"[(8H5VfR.aRF$Uucl'8GFm#[GDl=WS)QsQN=W87nqg@cX^;FjJaC2)R:Iaj[`@+eZiGaI)'(L0_WI]
%<RDAd>:Z_>K?D79/EHVC%FP[.2P"ihf/S+gD?_mXH#eaFhun+e4/Q>SrMQ/Z;*%4NUEuk$p[?-s(s'%ooTiVfdq!bd5"p*(!K.51
%SXi2<<PbsqGZ7Su??>7;.^^i2%"Y4@H:qG6La,]6R:H^-dZ^NZ55JNk`X`AdfA^<mB=PYU3%Ftt'cZAE=?C!)D+CN..Hjt(g$93O
%&Y)?d)*k<b^K:bl4Pe0mS.g("hPCL*\I*XE?GCuu4S@c*H)W7Z[A,?CL9\^4KZm45/QJ]q3J^6YZZfsJh#MdBeVQ.XhN8i?VeEdH
%NiY@tbE1Ro2Rr5ok_*!]2'(c:&nIU9L7'I1!(7P"jI&ti\sIt1dXkYgJN+695P)b^'t$!]\>k1o-IdZAc?(<76_3Z,@)PbUaHNMZ
%AqM5hJ4EqeYb?V6`Hf%],KRf^:rCEH?C$]9jOmh14W9jc%UXI*OA7h0MLL%qn0Og#LK.r@QV39Nqmq[Vo3bW7&8Cg\YU<@NI@%Qj
%6a+,U,"iF:+s3\(>f,*;0MEPVAOsk!jHhO(\N8Tj^kKCc^I>tb/C.Vl;W?+/npE(o8h@)*r2#>t%cja;+@hW>Gk*[*"psW0(60mW
%D.DMZ'`A.U>SZ,=PGe#J12Vr)cI#U^:J"jdVR8&4R<B:6CpNQ1UaV'j'kp;8C03&%^OnL[XIT&"_HgtDnqIYdD;fojSZ/:.Hl+a(
%W(,A"D<'S3W\bB*iqaU:jqgCQVkb"0o?$\C%4%hW8WK_<23IP5HIAT634^<(_rR_<]%;[fmgoa`UB%#>&IYiO+A9U1!%rH6+>$?Y
%BU+`o<1gI#4uf\"9G[u+T??uHfCEa[7H8$2geZ<q8*Nh@)cE8\!Ch0gP@S,c:8,@(:XP;IJeokG-C&>-8riSX#ZWOb<?1;B8\_`N
%h-AuVG4(:tDtp-QOf,X>T4C$a-D;lW(7Erg8G&r02(bb'9cPEO1+$38]5`5:#e"_a09A6Db;#Lq=46'-Zaitd'"]\]k2._th`mNI
%Ik#ACVCbRFg(AON(t.uBU3&1a4'"2;E%m?S.S'")g5l7@Y^S[gKSQH:Sdrc0cT:usL7slX+m0BfD9%?eYZ0]T!&4_f"2l24%M0:?
%gb6n-1,htA3/']e<1P?\T!OG`D.894dYTs-c<7_(P:_ajB.)Tj)FH7scX\7_okUS`<_%,>aFJg-Er.gbGn^Kq3bS:!8"EXa2k(qW
%Z13>X-\gl][&8Dk^)c#UCh3i!Sl>8>^E;8XbOeTG7pbf,diZufGZroH`c[0qWHugG1Mp-g5b`/]LpH9XP4W6orr0?+s&:'1pJ%aG
%Rl9lNS`,Ruj`dR`)R<7EH![NPECA&bfmq*cSkHtDBsWh8@[:_t3,D%%Djr]jTPC_@bi8f@^Y2(jATH\U:iE51Q&R0jAMLP8H+LIh
%CA'`K57r)Ka#n"oS-*E$J@[8gOPoG;=iYA%&gQD>NB/eN"PlNf,$CPplW%WI\'F.^S\.K6_$"+XlT?MOC0U#^"mHUTKVHe.p^Q2?
%$ogj_X0Qh39uN/-o%*S^CH,@r:2Vhkb0&aq4Im_)(I?!sW$&N9CD<<"DQOYae[.1RH'1>j$mE%+D.gaa28sJT`Bq%+P=&#?>%o)f
%Cn"r7^%@DN%AD%rE-dc&%5"@%)_YqgUJ4inj680rHXn7+R[h%@@5L[DDJ-\i6nR/E*E);K_r?*_8,e*S<Jqfr*Q8KQd>+7i7_1\H
%^c#rk$AK(ql,d#0o<b80!dp2dJKKt(2Kk&&P^YuE"E2raL>[XEoQVM:<;1a^8aNg##S3bfeDh?:=*ca)FKhU])>iKB5`;Vm3e@IS
%aqsQ_,Bu[dKHY';S^?&]g<k"%4`tXJ<-Gn['n=Q\0dOM<EcTGE3f7N>h=NJ70J\0\,>:BZ@">.14nZHRK;Y+82r]@NQ>^0g43_XF
%91Ic\<a*&uD`F[P&)u^pCLr:jKk.g]/^&=Mjj5eu7lQK9WmK.!7k9k25cu1)4TLi(ZM#pD[@9Z6U_S0-,7VS<(!6.Q3uG6i]/h.D
%n?(MhiZo0>2DE!4MCdB3'gZ;Yc/&0CM2,hJqP&ML9[eO'IE3<Q9@e(Q/VbXo4nJH4$/b%n-^T*UM'9C5Hs>A5'2aL^NYEC?e-T%E
%,ToYp]2(;p#Dmnm,]7#:1DA1'IQ0`u<hC1Paat/0aSDgA`VTGDV%RJOX>&4X@&?C)T&QfIs$,2iD;.ZY.9]1"!d8"@Hr/;65Z1Hr
%=TQugotY^g.-FM6IkDAJJ5O0^>W=eG3N%T3\qRgaFf;GB+H]599M_43W`)HmP#e/rP?,jYOYFD/Xclnmpa5o:K:o9\0_PY@Ek<Z2
%.QY'4RisTt5EfPu^RLJcV?5sqN$:9GU[PBQn.^Gu6fVo$lcH\o9.pj/XYFZ$AJZ:0YKa9V)8HHf4*O%YM\cMOKt5oh")FXhU)dgk
%q@rid$qmojHu>btjbZ$q54Q9@qBudUK*d"\G`M,a3Sn]XXeb,:*nMn;2=7K_m-(uoV\oGY&c)c6=?]\"VeFpd.j\cK1gD"(V]`Nk
%Oc#[1=,TFW>MKmoeTm?IhKfBuW9&EQ;]`kEQFSlt\:=u;79Mm`OB@?D3[i^DWN8!N#=gdPUG.>a]*d;TFk&`p*NRoB7dO)8\-mY'
%U7*&&]A0#+-D/f_'r:BI9>f>)^;.?09j97SrN(d0@@MD*T48l!Oid86/E&\>comaOijs)=[(Qc;O&EN'c3L7=%:'YuAhnl[:NguT
%0WpW<[$'Q`965\VOol%Y/#Q+pk%\cB3IdJo*N8/oe;YWjluM7fJeZ:N$Qc9qao`dp)Eer`6-AP7Db.:=3DAE?,j*O:mSR9`2U'&F
%D-$Bd(LZO3.3Is^HH+![KV/oIcc7p:m/QtaICP.1!RI/Zq=Fb4U+.JR7p.A7deBN,&k(rJW*T"Zj/*e7:PBU"24htQ;6V8_LalMR
%lHppT*ZW5/O%`BoV05q[%F(:W*6A"+;u'27ACZjM4!QX*_m4I&$V;8+WM#?k&01P^1`!WKe<.C/C;ZtpBbq%Zl:;=Oc:r`:"cqgV
%k*/IYM1GbWcTJn8?1N017FEg,9_<`dC_"sW2!J\>?6KMc`Fs\9$QhtI\LLl7l:BVq-n,(cR:NfpSiPbZb7"Q"-uu(b7+)pd<Z5D>
%>8"pa7"KW:HJ1u`$Yi3N@iA?<inG:R;/Z"D97YP55$g[Ve1+S]a-8=o)68?Uo`b;lEB,9D%&>R``JgRT`+Bo]2\IcY*JEJhZ<sDN
%6c"\a#PTE`TaV#n=gF$sfkEm_]/'CYca!>2>dFm`kLAf[Qn9a5Bb(7T3n[:h4sI2MGgAo*-t9jV.HX`iUOlQ1,1dL),_h8[P/QdL
%`@-f:;c1-sLlo16+G.eD`nFAMo?o_Bn&4S!a]`s_)MeUWMpi?`66OElY(rgS[O`Pa5nq[P7ac1']j+KZ@Nu%1m)n7[EEC*F93Jc?
%)\c<.%&+M\+YQZ4F'gWMqkT7j3$(s68f:h=n>IS"%'@\oN"8m'EE0;6ES=EHiu8M4+#,;e=Q\(!)'%p4I.O7Z+*AjiI,Y=7f0dmE
%-mLGLZ.hgJ;hTub[\&\L<ShM'd\)Q;O=P1;-mQ!R6hlsY,jbZ:SLQbTNP<M,Ao`^WJJ_Ch9JmG_K#`/&-1OqA;I*"P_icShU(pZR
%09Wk[;FOLAgt2d_`C3g'au$N*SsmGmS0'.e1cCukH^KuVWUr=8W>Cna@40naW^r#\WL9b/Fo&`$W(d3&(:T[U?($)_6Q!>ab?:)B
%Ol46*WiRDD`K_ncgZ<ZH<08#+^p8u2]U+!_D.OGRWC(EX?:cX+V(BSUMF\/o'JP&Qi6dWr=mQ/$l+9ooL87dKV+u]3PmaFo:o,GG
%6gfmg7tsIUK8<W$;IWO%@:`F!>T#d;%lYS^mjo_uddJdq8IRmq/)r,Mo!JM$atKe)E'`aP3ZiIFHg[BnfqEO6[Ot**Ahom]khu;8
%7q-7n*,+I19I-)W1r,)DkYY%HNJa@PW)KS1I(bE"4d[)9Ok@[k.@j=+d[oId\j)C6<ZR$6m?Rj4mN1^M!R4`8R7g;PdZ5#j;+K%\
%Oqo*>1XOF.im*!LjDn90KA7[Zm73GT"uB.%0F2DL$PD%iAh0a(q3)8ufpEE^_pl\reH7riSbnWs2l!66V.U?3/3<)4:eK/K.HXr4
%dWoMP'pS>alJ;k?\t#3aS[jeB`fp*^+/n$1PHPKR8XG$l5,uu$@_D=%721u.WG.0?P0T7[UnFNioskd$oNpYR;,Pc0]8fc$6ZDN=
%h(UKA;=)/.lmE>j-(WlJWhcHbqG94;\fC)ScCj$p"[XA0(ap[V*U*eK,qYK.f$bT7W^oQMDeOYM,phAhg`rC>(gB.J8P).Ok>>.J
%,!8tj[V^RUcY$fS:o_/N%s4WLda.47&)CJFC/S>u*0=CqOPQA^'-ARDXb&urB:UnHPuU*g)dUaHd+?48LUAi>%*><37S/G2"A_`<
%M\(t64h^R:kMj/OO@==E:*GIWP0Qu[UngDp#d/*%Q]u:ljQHfZ#2InG#Itq2i,BCmIe6QB7sR[_]dch=FsUrl&E-\E&pZQ#W1[7g
%hF_NTN"XNIOi,i#.^F_S"/D!I&d'kh["!Fd:0$hPB_[1JP0Rs&;H2)t:+&Y+H@rV[OqQMt34`\DAHSi.;3EHn-=^uEi[.8i3fdd9
%P*1j&nQJh"+HDl>YIo,(,khLG$VF#"@0)5^@L^/i<@fT`Xh&TZFZ)8*ag3FCQfI-<].l!q(_n?O4K+>10PBhrB56O^4KL#Q/3ApF
%77g)6krVd@;Cl'f8ifc?5tsr>.!]1=qer"aV':NIT/`nj3k;lD6lZ^+W_G86`4b0UP`SdBdW+geMb<hrmucKk_!%SmU^th('U<KB
%4dHDc;,gFC!NJa+.FC!;kVZO<16Qj"TD_L]J4!\\?<tjI;Pdl>A`/ph_umlKC""-TVJb5Op_'UT-2:>=d^Ad%G$;(imh2KC-./ee
%c:^9p#_*))l2j-F-&\UUUfbP?Lise9=jgFjNQMmo2GZ6MVXpq]O=!u&#tg)*JN-tjJKt=p3"e?0V["O(.71U]F^f?IHi]uXTXX4O
%&h`5(W`!$+JRC`s\DqQr6uOP/6nf5&QYZq4mi)Pc_'Z!-Qs+X`\`L^JdVHP3V!Gicph68rb`(<%1UO!oUe<o9r.`S?@#Pn_T`:g3
%/;k40oNk>@O\GI!XfI(X20L:$T3m8W_lm%,F<8@J=b[-T4^(gPoMMgeU_T%$]n*XHG^9XJ9Jm8*-@MQY!pOGbVihs^cJfi)>P@Tp
%ob;GY#Y2/(`l)[C1lWu!0rn/;W`3H57?7(#,OY;%QJEX^0r^!sNQHpb#GgCU4k?!BG+FoX$55$O9TFS]&joQ-@c1:4if"RhTL,gS
%q1r>t<bg:<-.!7FN9rq`57nJW#fV[-GCSJ_>4WI!D(]K7cAco:^elD).TB+1kWH.D$;G>diEXKf8\Gg3-<P@2Zmf>HhWg2\W&3b@
%H=]m[kG1)U5`!W:pWl2c8$V+[cFImJp0Qq2f%kWm0WWuZkGIRPF?F"7O`!RRHuYMo>^0)-?&'1>AL4`^rrd`14dk[/L^qIH&J).X
%H!6-)4$8!ieI34KV"Q4K08`Kt*W#ZfT)BnQ-Js!QH?b1SPj%'DC`?DX"QQGL7<7C-'Jh<Dc/4C8fH*_l#[[!e:W[Y94OkWZ_.jS,
%h=/phM^chhB0%e6M61uF3g;1Irn5UO_1lQ`G?oX&m@t/M:]W<X3]!Lm8ampp4fdh\O=*FG6"_9-U_<=c$^#b(&!up/jEFn[n6.M(
%DCdem_0(;kJpthRL$RZK.okL#.aLrP&bLc.5_Se,Whq;CbUi"YafVj6"\9p&MhfURO6gt0iZ;f\`ZGF]MSjMAVj-6ToMmKfMc(<0
%Vj=B&a]W^/dT;t?R>N/g+"N]9`E4f.Tq4HK&UnV+6-;S2Y_[88glli1cL\l>9@+KEdr48k6Hmau/K>ftK3X#BlI`PP\8*OHlrLMR
%0:cCaMspE-PX-Z3E0_f^M4:*i">>"0e!Gj'%Op0e4K%'!WO>6,krnO5k]B&9TTDlU4:"]q<9bQ>2bAWk_5eWnZg]/\Ba>7-MfaRM
%e9[@7n#7Y/,mp5!9K!GFXI)dk+F7.TG5,%?`Z\$9B1%o@J)`@(j:h;fB:<:5UKeCj?/1\ra^J.p4eoep/S77#@ll8[ah(_tQDu>\
%i06n"Y2)pMFX(Rsi)S#YMde;!>D[F?PCOpV^rR8!D)l:Ogq)jkM-g!8d;6<98Hm+DG\iX#,;b+T>p1Fc?X&q+Nhc^Yk_/T(JhEtt
%0rr)r&@EI><R;Q'(Kgp!P[A"\/@n`h<jc=oS:]$r[uaP8=)$U:.HhS+BPZr6g9M$2k2Jrj5j-O.CXX[9S6]^YoDDS$r.4`cac=;2
%mZC2iTB^`*5#c67W8)unIaO@$8"?<2i0XKo#Z!HF1OOrb$02BAG=a8MYp^K5inYfDTQls%&o8\]@^hk8E7?f+RMM[/fiMIi7if]'
%=#67-'n$d;AKh0+<RM0L>p\$m7:7&O#9TcEp*tEJ=Tm*)eD@a9F(XfFC-@_J?m(N>Uh5WS@E6@tG\kc5H5';(<0-$)67V)A\:*aa
%*fH-roI>JE6T(o2"gs.A/H'@b)H<<`DENf@k2rZ^f>o-ieW$shi>\u00>[r@3<]'?3!DmNK*RKnTCXNbR)-A7RPgDoo>:;nP!mZB
%/n*Z4]_:$0O9"l(3HnPO9;Psd'!'7;5q>Uj&9N(t7h1)Ce!VpMcQVLJ0lu0<li\RmA,jdt];H.$,&!iO$8JiLEKmtk'EYVQi7Eo%
%!XnJVr&;c,KOd%;5E6@uA=XdAc'j4A6>?T,4`+4C6<i>@`@s&s1a1>dr-urqrV-"Ms7Yo2CVTl)0/L&_G9[%Zn)sA>"7=BoOmcl+
%$Y7NK?R(GZgU/M.pP-^<52]![rVLX8@aFgn^J;E2H=*M(gM/;>kF_OIV&6lFZiTaD*:SIXrGV_pmsk4arr0D,mI,OOIf3(Bo<82h
%+2UE0If6JD5QBj6J*Sm?%`U55:$fr!*5Ktj-NZ6q]m<2PAj<?Bn,Me7R(]-[.JER$HWFu@gMPF65Q"gdld,%j0D-sc)m%`.I(*Yl
%*rbHri7[I6]rZV8NgeWIer[th_(\6N>m\OK[L8_K#+K=k[d2"bcqG+[?"]u$bq^j[Mk%>G7m>RJR:ZEZFnQ$%YBuI'[`/6*Gm7te
%XjV&lphU4ngc!ORR,+ba)9X-XcR(Zdq8DGm7GSQO"MMR)Us%o,Ud:AhY?*JZ3uDVtD+P3e9G@Rb<JA=CFt.QIjbn=oQe[]n$//AK
%`H)OUi'_Q^g\`+04o;]o%39+AN%N4N!tf)6SAu(\8T%'E#SUV"c([_Y_"I'Gfk67b8%s-;1[ppgDqs1ic=!:(lbmgU?U<&l&k1#V
%3+luVbfi?a^H%k94YIo>ZGC-9B+L&1&$d.X,-kuP'PEkYc$i(`YF.^f6V,W4efm)9/(/gqJ`N?r%+H\!\K\c<4"ZAZadI.aU4Sf9
%%RY8`QLi#V1>du,%\L>#<jDU`[="**RPkV&as8O=Wc%[H`G=Q#CkI*D)n?Vp*dK!O+V,:6FWaoJQ5k^r\EgV222f(d:iM@[<`6ar
%R"o/o)5V7oo@)cn.kX1r0sFQjChLWEs8@L5s-jOrhCdLqB3:;9`%O2$2EP$N^boXCG@m4F)MoUs_T!7=I`HT7>55g=cRp=,b-Rji
%-;tip?9]Q]SXn0VpJGAFfo<(dH:(rHc0KV9O@Qr'\b")%0JS6!mWG%F+[N<ZFG*-nR=4H.I"uq+AT1LNi;QM[ilmF)".Rhbq1A3_
%,;Od^-=s]>jj3W,=lEj]T"VD'Q&-qVYEC@U4oJXhoP`'fZ(n;5N)+:m[s-l9)&aj!52"DM'9@s<QRqn`#8<4P4?I3ON9U3Q+C3!2
%>e4<rAdb"n5Tk>2K&1FA^<JN\rs[OM5k<``9P`9$p0<*Oq@@0eld^Lb7.[Zr$pW%m?ES81?3n:e5c=07GB:E7!org.;=&sh:0]Wf
%Q[mjWLAnQaVf*a&3&sFIU`#\7abG$s5HbE5k%;j7e16#tg$bOs='<R>F7G68h#/a9S#dj.Om13c4.VjrP>AepD*?7ph'>bUK21[>
%IenHqnHsBQ%\T4rcDPn7H`+KtitBGRL!dt-<q[IK"WO_U%a')As6FlV>$/X)4-%h2)<,Jt`gN\ho"s$GgT[)a`ENrEai&l6jrraX
%l:LOs=lkX]fq)D3-RN(.I<%X^3;jKo\bW*(3fEJ6Fn3"<LJsj/0UVbh$G7=lS&:CIY4/6:d`V%IjJ1f1S[,sAhd`WFZPAQ".mY.B
%6QZ,l2K?[V?urfb1!+4O%"Qrl`@=Coqh":Sc>VY<:Lq#\)dl-p=745O6DQWc$.",`hi(P5*9Hf#;=ms2G?3B"*@To-A9f?7@"3@#
%G+E1#"rsaV+reJoI:oA5h'"R=a^k2^PibbTGFl,)'[rNRiB9cJn+G!'Bt>8h)51@saI.,no$JBnCUET@XRl+3qtHNE)nNr#14EZg
%n(:n-,VsSDk?;cE]_S;?@Z.<]a)G\K*B/l/"6.p,Hm"3X_UI\trH1m4K"1D802-<hC"iN<*'2ZO4slCsSk.80@;qla@+EmS(HVN;
%^OOr[.HVZkO/-7Q"lffO)=K.%Z[P5e'+mO.=@bKb;l#47MV/)a$:WB+%A_<Y%8fY%4%75*#ZB=F<qYmQTD8;]moG27e"ln_=4TJ1
%05^aTYQ&.$cI]\,Q;_@epjX9uria)O09^g;CbF/,d]AF`GDrk7R^TQVGeTn7OJMZE>HMIrc"HchrVB<0pN0l4gZKl937^3^>5TC4
%!.E8Dp$k,as8VY;AIc0kqIK'p=*U$3*5WQje"/]4]_ifJld&@._tWiA?2m"3YPVLI5Mc/.5Q#['lT]ZcTD`-cr4;!%D&:f>_#HI^
%5?>GqRbmKtm(^lsk'2@Ra8](CP7LD,&t`fek%qaf;#8U]`m^MAQLEmXHE,<Sq&GeVr1lK)RKVnW\46G/:M1V9<R7IJiOlK^o!&J:
%];JG7B=D5l"nOcn:[E8&iA=?%?e3Z3n6#5WYYf&1*C!?([IWSaYm\hU)tu87KV<l+DKUqT`M63ckCPX:i-UmdYF0:FGJB/SMP+=d
%T'UO=M-/=:d%?-9HL9]',W_hV(b<P(2^b'kg:06QiD-JK?cZY3WWq`hY8UpDIJ#j(V_$BGYJY])].e/H]t8"9[_DEkf+f0G4u\i8
%o8m/`@*R7[,=/abor;t?c2EoiW*5fDomp;dX#,K5D%7dZn5c2$I3>MImf`dRX-66M$VAU5#Z<c4M]5%HPkt\A?X!qso5,lS`_KK0
%AAaITpJW)TB)+V>,8D`HEjj.EA4L!l11k;=.@gg7qs(`QnioFenXU#U?d2T+oe<r1SfZ&12Y-I)oZM]0hi`<`3.G.N@'DE1s&Xa-
%D8e2MneeXg<q<i-_hnIq\rYaZ4dV?T#FWd20bR_/>P4!7ic@Q00fP#g5HO:&?`/[:1:]jAb0F1F7<?808&kChHo%m`433Tq-:m`*
%1UCqGPSJ8cn1N@a@iN[Nkn8GF[s^%gqoLbpj]sHN2KgdM!C:RRZ&a.bN(TsK5'sZVgm.:`2W45r2?,'PE[2<cH)doPk7P(`B8tWI
%ZcUlhn#O,ipFSTb)5^_g>dtO2'8U^j"9!BslnTG?"7VS&8Ktcj?-Mjs>.nm%G:jcFb#c[&5\FKpVN[TG]C<AB<6H/2,T'`^,Khkn
%kAiJaF!#D_)PA"r&G?\.\4"b;^>^PuRckc_ZW%B*iEE[XX6Vt3EeGCXOBB3Djh`PF"16]V:=JDsGJpLGDEnfT-,=(HkW7+e02oHP
%gLSVd33mCE3=@"O?ETj+P*nFeba#SDgo^T`C[\QEbApmFo`ah,:.Kg;\;i=#+u1A0Q3\98)$4&>'k$bC`%IKIi#GXf=LZ)\pR7-t
%k(pE(eadQ^lnqQ!.j"<\QlX]YB:,??fLS)i+0*H&=V!=R$k1^!K"I(i/L>ob.i7(!pl..eB0@,'kgMV=%Hm)ol(.Xmj'W:Jms3fe
%j1phRU2JQ]pt#>fW0MAE\[ZWa1W8&iJ&M:AoWpI%lf>tNieueP^lr^6dSFg?8oeqm06PJ3[Tj(Y1qm0Rh;INa*WNBtKo_c(Ys;iH
%Ss#3?7:24fn>U]<'j,PAYcOig((T:80<ghY<"]KB)=b$h59:)/.!K\R\AYB.I=+hf&B2]X9Ghfa&P*N"M-BD'=lu&L";(C!NsIWu
%i9#-3$Jm?_W_H=Vm(:4jT1AqP],1;(4MJTjJN!HYLF'@EOgloGpN4I9n`[3XL,JJ:i0LKWdcSAU([cBP3K`u/@G^!^7>(%!j,s]'
%&8#ba3m#"o'EqF:Ge_S+HK4a,nF>T6s*k8L]Yt;Lo;TGP/p"N.Yult*@i5_@9c+Df1Os@h%u0q:b>'quMd]Y/VSemQ4H@WIrNhN[
%3c_!T$&>3/M+)^5D\l4@U4bYd_g[Y_T&W/Bh_ecp7;"^hR)P3bqr%?7Z-AE&8PYkIRb&9fff22/]JFuWXXubH66iL=A6+/2l/'[\
%rZCe6j,B3qqgH%tD+Nk$kaOKU839L^+i,_qS+gYMd>p-^piJ4L_`hQt&>ldbSq#mYHdJ=2kDT"hON;[gI#X9Y!'ZT2!kU-0,;-[g
%f'e`%\KS[YTE1$G@eG,SqT@[!QgX<F*MtHY\PG4t+kWGt'0I#ui"7pj?Z#X!N$m*nj"-eMRtot28./f0Uq=+rAHhUGTKEYi2Cutm
%i\%"FNq<Qo8A8@^M%!$QFULR4+?a35nj7qW.-4KWq=d\_q!,IMiq13c]W51Q;=c2JlRcsCI5cd1J3@5nD.1OfG;'-)H+ARL!d8OW
%<dNf,RV<mKJ]Yu/Y9Y4_jnjN'W0LNaem."OrQf^;Ik7gO;0FU:[]jck3+-"[QP^IVg=_a=NOi214[iVBq6155c4h^6[u(MK7lK+)
%R?dY1VDM*g(k-u_r<K3_LWTCD:pi&OeIWOsr'HXcGgJKbTpCI:DaJA,13E@aMhYReT_fUV`9TpVhd6IonagIa[t'3$g==ZYF''S1
%>]_'-+i-_IWEW(jD9m%5kFiL>?6ean4L-;rd/'gX+4m(Vk^e-"Nf0DX%XVC1hDe?)]9#+M+hs*]o]t\_8gq^^9,b+]J:*"Z3>.Z<
%Co%<cDWMM@*A,T&5:i6PY*rM"_A^ssFbZDkWk$YG:T-%q,Y>Vt9<B;8FoIQuo56%&M]_D\b=[L/\^qkt9+:.@BB@6rb4S8>mm"NG
%Gh^>'1/dsNnQJ0;3(GloJbJZ\M=4d.e)I"7;\/\[WtIggC3,khs/r,*5<O0*X$IG@\q6XLj%*>*k0B1MD/ZtL]C%3a!@2kne>K9S
%,KhZ$>gu1.k&-F)$PPX$oe@OgCmpqb%pSsVd1K>%Qeuj9Ce)E]Z^1oNZ1IU%3^:?Ij)bfZ2>?Q=e(ugb&78cEIc6q[3Xk@HomMAD
%m<g,6a7l70lg'VqZt8FDlP:CJ%UOWL!H0bp42"/QTJnRIFP-eh\\4SnC%Y&i1"QY"7FJTWOVcc!dO"i(mi1BLSocmf,.2gUB(!\K
%EHb;eR,Gj'7_-*CAN#KqT*m,%MWJcA*u[".Sh0*s,J[^.AeFc"i[:R+UChCWHr**CLu7Po)-2M]BhIuga*&39cUM530RU.Obm-_@
%p4Mqbk$9&Pa;C9[pa:-g+2kps#@nU+IEYi48hao@c?bo)JMVu5dm3gt1^pNq,NV/%<R?4]SB^/L!A<FO)FO-[Yne13p`5qF7g0VA
%CD_qi]&2De$Q$GF)a>F.%,QKmhSRuBp'Sp[5edCe]?6$S)PrlF(e!/kR6*&f/)B2$Srq67Lkd;O'BA53pk;ch!#]rK!CZg;S1]p>
%[d^qk@%K"-MD,#/N?;MU\5<,WBB<(UM&/djHjheQ>nQkge#$iPT34N45Kbf9Ct^Q2?k?CJg9.#jZ//Cn1;n5//18ud7Je*B7tBZ3
%DK=BaFX+nT,BEp&M#.PM6A"XopKMoO)LKeC`e@1)%=n_jK6@n+`S@*AZQtJSR$JM>c\C8LO3/i<X`?mmNlS!NLM,70@SsDM_"?U.
%-`"CsGr"cG@4i!oQ;/FoK'G#9AIeUMPF:YT)h-IOXOhrCDX@*'*eASBBOS4%\7CCO"%U#8N$ls%dlgRNe!.!k*e/3FmYD*-Z)Um<
%jG&2<#^Ahg&\foG9(iT(C&eAe&X1=FBjrl/?FaXB0o)lFnqKrP4i9g:p0)a(ZT,I?$EhPg-UHYK0gSV&n3g<=$602!/qWl#Hp]Gi
%`s45bN#%;3%-r2_<cCY7mUVQ>q9mE6pu:c"p[Qd(CCJ<d1\-BGN%:X8HVX[uVsOdSe9cpLq>OLT"Ppnm6I)VFF+1BH)'%PIH<T`]
%ZO3g`mNXs0Oabb\YPX_/B#qT&XYY/&?8Ne;]+-X4fDu>6r"<Lc>ii+4q]3X!:sW(%%#b.Ab6YiSqn2[qFD!D$h0.aBjjaqTN$%TT
%hIt;P!1pHDgsKrg)dhmFrU*O(iWq&#DBH@RG`hL*H-6t`?G\f:2n:o"bsUPs&JY4JgXB6bY@&DaSWi5;*eO+NSt=lZM`iGA83<3O
%[t,Sp>.86L2o1U.C0jdC;j1f[T,XD[/C*Y%HoqMkKu@'%C4LAn*RM8(LRC"+FZ]NpJp8JN>R/JGDQL@nPK>lV$[i,tRCK[1[b1Ts
%Ad<;"fP-J:@Upe5Ve6bk2/""+4:ePm*K9r'Pp.2)\\\_Cps^se\;WBG,t=;bODj[L%?'&S,3t--?ZOZnL!f*EB`'>Rcd-c0O'H7c
%]G88eis`867s,G+c*=&c*T[Y0Uuf&]LdRfmMT?%7Q.u%8;8aNC238'V.RhCZUfXWcPk0oeL1b<?mLCRTp$@#Y_erfDDQX%%SRICE
%Y$msT`tS)Tj[llX?Tr@]oZklSp>VT+gZn7Vq=2E<-Qi7qk!'I!q[A5IFXbcHkb-,$/M0FeN1Ve)7\+>TaVKW8Z<EgbN0jA"E8_8J
%:;I-+bH?iY?9?6k66S&0"VZKBK^m'?iYb6+&$!A;P$ea;VtkZXiXrIn!H)^E$aD-6,j<+9h^[(0;bAej9LDP8Ok5qG.%.P!8/:$t
%,JZC[fJ-;:Z%bIqT>$D'/sqIP/OODe=GAM"DkHQS4D=rU6!HNC>2DK>$MOhPGcTkR(8(A4:B6H+o,!>!@$!bkJb=Bm6e35+/4U)4
%,G(9N`U?\@7Qt+4%D;V0ik-HLG7)Rh/\>"rC"?kpm"+6\%!i1q3F]nXYV]:'$PQT<\D5X?!)i*[PEMj15/Jf0,j@jjlTVO9&i:jB
%=Iq8;]HJm<I`-pHhBCAEXaH!EZjM0>P=68l`6CAZJ]k82kO&h4QQS)UOr"aiF'Z8<Qf#RJj/W^J')]J2'b-pd*W"BBkoRomAei*F
%;UkL[?s%Hi`G.sSqO<K0.;iOpeu4H-%XOQ-;-akF$u>#sG*u_T#RAL?):[[!*hW\\h._W>90.<0.C;X)9INruPHaP81X3ht?ni2p
%]nE9ijY!PZ(fno\Ya]GjO#1gc?8@?tam4jR:CIZ887*eE?s('d?We;G*DbDIqEj:e_kNB8pMpt`nojRZ$DNK<J[&e_;[[*.>D\pH
%k$qdZ*_.f_fhsi>ZTueRj;e>tRAu*a+_V].-<YETilrioO0$2Qe,<f>Q-Y2UhI>>95#9OR-iT++/e;HXAHAUf,G7`bbg,gO5`c@h
%+I3&I6k#%"liuTA1KOkui`aA((^/W:`u5eP@X+E(bV&?-;;1L:Z:-dp^nARANM;5eD?n!_CIjQEE,u5h6JXO%GOgCceEKnnO%t/b
%fYALt<:/K7c,d:3#=KQL_JOrk6\)G.%U$A?H`:%65^?&4KSSrZ>NlHlr8XmS)9H_hmam#=:<1I+1'T)a0T#]UYU(H>m6j]=0LI'q
%4DlCl*=WF`lsV2kijTk]Ntg"N6-?We3FC=Ng.2#!O&ddXZS81`()g4ld5'b550Gs>Vl?R]`b&s4=;te$^o"PpV/o6dg9s[H#FZX0
%;=B9<R6D6?J'$fo19PJkh8\<l[;F7BF^>G`XF8iK?@T#8*8B^'Ps%s8?T>lQU0SP1+r<0LS2KTbi>&g2b3;/#IEu6R+YO8pn1c*J
%)G0$<hRV`"%RiR$J^2h;Lm6p2RL71oNnVT2,+K'/4gb`Xb'D%GhF=D],CL]re+W9$d_dHYjQ+=P2%N#!3=QMPa@m8fCMG)%r0UX5
%D5<H9&Mf7hrKnOKn\^$\j;WG.\?DG")NP3XiJbGE]NK.);i&jqZE-Fo$tYsG$>2hPN%A%J88`3R"Wn,Anr0['O5sdN.@jQT`6=39
%al-@T6c4QrmXg]<HX&nK1*/%2bRoou%3sk-&O.E\DpJmMs,k,[I_%Y@c'\$E1@r@rIc:s@/"UE_;@ZgoX?3BPQt?oC@6*F,.&RjZ
%1^o3MQoG!M&VI"Y-DPjD\9:ISRB5>qZRF_l%_an,oXbV',JrA;64gum10MP6gOt/!'JH,p%^5j=N"V'*0km8#\-KsQ=Q+PdH0nC!
%X;T=GZiUrW,X`V6OUuG-Kb@N!m!!`Io)OIZ>+m("]EK%\rQQWu$]'%![[mof'[eq3+WsX\[c@Lo]=A@B#_DRM"%>\W+qJiJ-0K9*
%`.-?q?;qaaG`Pc;#)_W]co7%bR(WJd@B^#oo?=u^h`$l!Eb;Kr5Kd3+fKi+2fLb7/m#AsG4GuG[(DR<u2bm&"C)FSTQj?,5ckQ_Z
%35u9FlO354C$,ZRd29^dg<rY1/Qtt=#M;;edY3a!;+^ni)AkT4E`:+i:R1kJ8br5qJJMTAKq^i@1Q+H.rc:NDn-2>td[@N=bZ/)Q
%a+,Q`S:H+RN6nRC1fJbfW;h*S'c+Q*Rck3>)<r)pj@K%s/U>RQl"A`I>T$)1^]oB6)Wo;4%.cU\1Xfae6$9m>%b('1XW.Jo-)VlD
%:-'"bm=n(!T?5p9>dNA3-<m!;LXJW];-45Ha8>>Wa\*5(T4gWH-Z<U&=/-iK)Kd;a40b!o#5BfoVI\-7dD?sN/.CQ/W]n]1d@Cm?
%Fg<?knq?UpN`+fZM8]n;JPd$/W!J'g1TS/L]bu?pE;)?X+k]i;#oJNbaJ.iI6GC5Q:FYE!*$@Kjg)4!C1:V'0D$)$;R;L,/o&WQm
%Klh.(c[kIOLc$QkID(8'Sr1KIaJu#)l?IX<L;%3hHPX'VMbNX,hZ6TW3O@f03uC;MW3Ku.l)l[BV3V_#]$Z/q3NqM8O`Al+c>5SO
%amWlcp,09&SD4llO%h"+QgD9RH?gjW/"_Z?6Ie3bZamF2CS(sg`()mR%4h_3Ye_r(@6,51kULRPmo^tp]['$k\F*J\6KO6pX"S;H
%j^R*p('m+\f5Pib`WF;/7HrCN\+cJ6d`f\YYC.-UC<[%hM6uJ`H$C>#+nUI=415T_Ml:$EqB,ohkD&Vkq(%2)\/Y:5)&U>Ka,ooD
%lNM',HSV*GAA3E)Fg#r(BcFaaVdL3A%E*qM[[3,a"ru;gW'5R1.Sj=LSr:?h)t`DF<OSKnHRpha2Bm-Nhd-!Treb/7WKABSf6aQ'
%a*H0ufqDCeXE3\Q.VAG-5+<c9\!`3)H\*a=8e;NrhL+Ded[D:);fljLrSEYVYS!U9r.6Gk-)B'T8fBA:`]:oLW-esM@@P[W[Aj0U
%=PIU*a0'KH`?eeDk)'FHQMjZrpCs6hi7V[^(\!UNOPJC/hn'"FMV5ack"CLqFp%BM._IrieJhVZDEUracVHZunqS:m\)3H-EKpZa
%reQ2F&Z(d`6oZ$fE7W7Lf$4hdC"UCC^>4_jV1B,h-5AfULrsf%`&^q8KhJWk.\ss+-r+]GLKr@<#gij&\NN;H@n@9hOQ9CVQ/N@d
%$gfhoggf#4_<2CLfc:q,C*ds/8R%k"WX#]\mmTqWWna%e4S77fTts_U53u)3O-$J[T]8qZQ`E0Ro8\ao*c$6L431q^C5FHB`FLGr
%*!'gW0$+$MFl$C-$N4RJo&ll!H1K0,h'nu.K0N6Gqa/\.7I9<m/(.JOB(9MaTa0\.[bopJ6LD0^c]4R-U),k5NG=O<@*d$<!t;hH
%ll.RaJhbB%KZbcDEC41Y7Re8D`._'6I'CB8No>ZWe\3L1#p,Qq:o[)!KP'VEkOr.X9/l(u3qkS..:9:-C#Z0j$J!>1&MNc@<p,p2
%oH"HoKCTmo;;&-(Atg-0c3oOg+/5O_\0)^,`cN=0]"Q6@P:c>K#Jq3'>[RcE4?g/:nIRR*gGnX;U]/@EPj]h6AJ"gV.h6FG:XiI>
%JQOSTO3>uE:J#Q7`?XGePnVVjjAcrr$lnLeKS4I?Eo9A4=$tn!%(#l^/+f'(-4bYeoR)AE9o[9PfCB[!GelFKL1J,RG%Jh1X(a7q
%?7dW_\k^8?f?bRHPqINn4O0r8.Tl#f1=E186R;hpS9bjAoJZiR2R&LAjmG&*(E9[!V!B(=3($1JeZ7e`X/L/Hg"JpopX]S'GEfT%
%@P"jiN!g)'aYL$"GQDrMl`(s8g['&pbO03LS^GDIRDG.`Npm;6_-&O\0&QkF4BiNb$NVaX%Ik\R7kElQ&F<Vc?>4%aZ2"0A]%HgX
%YX2NBT;\OJ$i.T`qdeK-IB,X]NYVBCK>;C7Lj6/SaFe&+=_d7?-"oKq@b'$GK#NI-n]HQ=bbGI!%iZA6Sg*;l<<._cG0g\Y#d3d;
%F>s1^H1&mUAk#d,Qc$ZjUNc8_TaeP@mSh>8@>=RBNi7VQB(>02Uja=UkJV:_A_O%lrhbDiabp"dlL-Q.DO=:`5gnC%r?e]M9(c?P
%co16>^V/=L2LsekK!D-'JV0LN:p)&.695KK3W(ofb%JZ1JiRC/K*1jHVOG.'bZ"lE!C>ctHWbpOqsUVOHY%4?m?E&T@p6#JedRM`
%]?6"Q*>%$[RZTMP'aI/YY@RrLrmLCh)G+"2>^+-B*ZIH&-t$#?e,)WA1ab1A,TVC:l"j5&N9ort-r5K=RYLSL:THn?.S/"/`b.a[
%O-NIuTPZ'B^6S`k3iOirK"S=R[oZ2fL$$@gFe)*%4]6ZZRa8Y&&jAYK,V.-!>'FcO]gf,4o!mWoc2d95Sf'4K@Op-n%9JPPk`Y>5
%QY-Dk1i.sqeg`FD0Sh9\;>oT]0Rsd,]46\oiZBZ/^MPaUY"S\k%a]CfE0*=jpmGNO8W!6cYLg[373@ps]!3/ThN3WXFk-KI^eL@c
%-C%cFY,dkfj8j@Agd!Rim2>._<26L&8%`6o+)$rmR^!/%QDo_)DZH[]C=:h="fZK-$sS/iKEjWPfbLq#M(YaMb<C!<OR\V(5n6aR
%O<;7c<>`@YWGrX5;WN.Ad^^()<-^Jr)H1*2BoFBN;?qqh;YX+%[=WL9?O,0Bpc^kbi#iW65>_6uOHs_T&sC?%8i&HR3pVnkE('5N
%c#H*+\7n;c'$aXTU"!]r@1)>S,OlJ[phcETq35f$+/4qX%(u[rN=2E]r?4Z`5n9#C-$E>ah\B/O2VHCL_3'%COUrLcK0Otr+59X#
%V.<Lbc`#[aTGR!m6u@a6p%`T\Qp\^`6DgKg.SXa"ng[1q\@0n@o28f]6F]^dLC"j'#oiCa*F#"!/d@'B*qe<I*hE-*?MD<e4?Ob3
%4GCXd;KSnq+?6`b$0eP_er"RV\f$?E.Fdf#qM/%PpkjH;G,2#E]2$It^4F[>bu2^P,e_=UZ^^=t^Z;q=H!qDU\=On$d1P;_b"l7V
%kGd+6gb97lL%Mqo6Gr=bo?Mr_#jm]_8u";`]7oaD$YgFY'S,8XY3j*=>I7)Zen`-.Y_-gVg+;S,+pB*N)Nq@O[#E9#!RMs7+]cBD
%Y6KGM*.prU2WTOXje7bsUDXM,6OlLOn\R-^T'VKn0)F[*OP]fQ!cE67lZhro6O\a_]diFM2_$naV3VcoRE,e]c6C[/TcH:$2hYN\
%?kgno3U7UJljJDiM]t6ea`h?&qJtSDCH'IX=Dth1:?-7I'h5ZC9!KQ([ZB$bnql"G#h/M'H).8[C,B6)+!r=M"6"Og0H.j'9*b4%
%ZOLSl.g&/4nbW>9@ugSBYF_<i")#Wcf!&[u"X's6Y9P9OnBYl)'#==m?ZMCs(`>'d#9/4-@6_6mJ#7(tA>of2rs:`76!S:AhCok$
%eYNjD_:lC#7Ken1%4M9S)YqN2^s"UU]1)&XNp96g.LTS'l7c+fRW$mj257t=loFKX/?"YC).8B)=Ch`NTu&[NZR7&W?.e#>&P0TW
%(t2Z/.Art!n1/.^50DS:.rL'db3Q4?Q*R"='r"UCia$nj_#p"tL-V`d0=%:97UTP]r/jfMbG.]pELEQ-L\>=GYApBhb!X>BGDgOC
%0$]#_op7ohSW!,W<h,$'Z/g$..ICb8E:O2<#98'4Bh!C7Ms-lEpDXr-7Y$6?e!^t:OJ8o[%brNoOF!;@7pNI9;*bCDfqXpYIE.mK
%#nb2a-B%d7P\c8Hm>?GDJOB/Kgo9r+>rS:;^&0)03aKt?fK27`qXeOse5?G=R)EO?"J\#Jh']^T"Hk_U1YU%%`P!Tq2`r<cFKn"d
%2<GB)iLL>%LjQ%11s#4)Ai#%67Z_?1JDY-Omo_Kf+Rr!J8>9@Z@io^X8FDEcl]?FKd-JAr1V%QF@=%J0>gL.SCVH2L+tQ;W/FnIg
%0!huWBsJ`3`"t88(F:E+*o=gA33fck8;,br+&47cT>TRi7`J^!4/3mrJ>0B,RO^c/Y-YAEVBQ,7&pa_n&&C0W5O*0:;@u+,dMkO;
%pem_\IDbo2_6-CY6c%,.d+H#'%83T^%`p-)[m7^'dPhS#_Ei>f]4!E-IDaKU,:jo47Ut!\8>$]qJ5;^3#+A>E^0r%^?kpu<CY=r]
%oF5Sg#&T+k7N5o6VM*V,m$seRZiOH8_%+^o\:BhNJ>GA4\+M02<r,:\]he9[f$b<AFebY]-ae[uj.WCj<XjTE9XJ?s=^=fVoWEJ/
%]$YiWoEX6DNc^lNf#:osj'[Y8kZ6"@SV*U#*;17+rKKYre*F6'cG?]\cESP`)$E=in;3W/F:MN>A*th%f5o$BJ2CadMV"s>d:o`9
%p&k6=e2SAP)l[foP*RBn!V\-gT8,_n^P14,WeC$\K+G<^aH0eT$qo4I,CKT$@AChNm/t&e"uVE!atAs]'aGF";'$/<]sJ6,=&fBP
%hX/0-;t`QD5c;Lom4`LU=Y2[gJfdqY0JWVM-e/^%(3^SAaiolcRdJer>%+EO$J+&Kn3A3W02,\e8';qWS(`E7GGTIb.m,/W@u9Em
%L>%d7pf,-rUW,5DBT[$MD9sAQTogF\Q:%4IIE.G(ZSkU6DfAfKOX=`^L0X"=s%nlU>":qrP%l",(_@'@XeW;r"fU#">&?1'k16KW
%;X(Ce2"8l_Qo<<.;*&M9S]_Qo)QdqSFm)(__YP+,q=Yf>B'&<C7\H1Y^6#962KI#9ld-SKlVJ.5A>=Y;gg14lfjZlV*%dmlZuZ!k
%7\a5P*:9ca[%n"['R^^8i)U7oUX%8io$?eU0%c\tD5PFjlSHK1Wd?#EjHlP'*1Z:l3HX''%>H9,WZ23ID_IBNp5Q!j[;f+-BQOf_
%cCk5\%L#5_n=j6iQd0#`NYsF>UGeS)*&o+9E\s!]V933O/gRFT-TZsV;-a.&J*c,@JBD:kCckQT>f>i9=#h0kSYsUrY"k6L&ZQfi
%30Q?-.At>91+GsT%Xg&X6<k*;=SROn/Y+tV)Fk5NNMH/e.,Q3MjMOFHBYE3=U^hE<I5^1hI89T$TlCp!LP(jA7iUspQ.DU+E#joW
%hN)Lrj^,dS,M4@BLW]-Y9DJ9SF\%eX/!WG$%P)XH[^Vbq"g\Fea9p?-]r@1U-e^Xa`O@Ol@aLNcDOIhEe`4Gu-ieCS\n0N$5:c@V
%EY]*u6R!696@q1;*Tb2,Zfi]#n&eegIV5UrL92GKYfiPgZO0_WB@1J;6+TB^UQ'o4OIX`l1hQQF;&D:SqsTF@jsOohU>69KPOqdD
%Jt3Z(EOpB2@;5CJiC[Aqp@<4&86jp8:]Z1c@.bk1+-N%87c!E=`_fAu>!FLN(nYi5qbS>Si0-g^J'+0_a6tHY4Lrf@h,eV4ZR%<V
%Uchtl;NW"'d&JMd+P'DaGoPO\R\5JNd6"j+%O3o='bskfE\Yq($d_q2U?%Jq'k->SIppic$Ch\+7CJa5<L,2#/c'Rq)j\VcZQ4--
%6U\SMfC`0gj9707V+%t.C+PeoeL!Tnci*F4^Z@&U[.:8.\&nmudrQW5MuaJNO<Lh4+u4nuIfgPh-]?&m(,))?pIO=i8'+u:41;?,
%OHEXg5=Ftip;S"g]N.:#Y;D/.hP,R@g/ONW.VdgLRh3UcD\7=]o+l+Qa0pP>&J\PRX,2+[[W=U#K6`B`^Mu2%Pd^f69_&tdFPm=F
%=Yg+kD"AZch0!!Yk,.\b'eAfheV)J]Q]\Z[*2sRoW`A/;>7;G*/k1^)6b;P;]#epa[1Nb7s%4]'Wu52C,?7+jRnMmQc(prUPp&/V
%\S,Bl2TPOM*6HDn*P'u^Beph>o&3'E-.+WB;PZjO<n8)W2b%Qpd*dTu5+e(eVfG-9YsLK)R>^I35d\*ZKghQ\Vj,:V_:i9mna/@d
%&%";frDBdU[\q^E.;lW1\XDZUi$BA2"HP'O?j=MH(-%3=^[l-\T'AhboP@bS@dYQb0MY[j>bLC.?/gAZIBcF)087dU'>rG#l<`]N
%Sm"X[0D5apV-QPF^*X5t+SjA0V=5?H6.#h8NLE5[N>al6CneuWDcJ6EYh)aVAfbHKE[d-kBEC2GG+$Ba[I'Za;a<+"C.E/WX6pK"
%_M&(=R>cm:=A:#V^M<e4^35>k.qod.4LUlNR)80V8&8hQ/u+!%;+8Q57tjY!1A7bhH>'2CLf;c-7KmQh?I0!(Qa+Hf_Hb)TK8L/O
%mlFH4G6`VNK(bH2[OGlgXMZPUN"u!S`m0Bn-g;f?O8#[9bbi8$l1/`1Lo71(`_bBf?M9eP[^q]\[$p/deZG>o/$El^=.#,6@+=@G
%-+ZUA6<=n16aLh,V[p\kbeBP!`5R(!UjC^h,BDAVTCRu=IV4!-DXY3Ee`as.DZjZ_D)=c<lNP4F2@u1m@08Q-<a%:)(LtU@%=TC2
%Au&K[T]R7JnhU,dHVaRbRq/<"LP/?n<ViK^kFDn6GLk7uZD;)(#hG(nMQfn(5WeW$).g@lcSIms>jCoecu,&q%(m&1H0L^k;C&?K
%F)SYpA(CU?<;0$O(6F+%ej^f(;t7DQ4W/N-JE3V.C)o%69H1G.2\e_HV@;,#K[oD@h[nnel3IY44dYfpCj4^`P+Q4%7p\]e^*Bfq
%&"eG[h:&8Y!p`cLpPF+k$+0V8+p">-D:j9M!D%f@d-[G07.mn5W#ReFKit:?Sr>F?LIFl)XIC&tW!Q_A,(IMI_Hbm]>b:D)0pRLL
%,\0`(mlNYUeqN)t+>6ATVRVh:YP@!25E0iJE/Y[oFs'?'Gr'ck_k#>)=n!Yug()ogh_L<&oQpM+KVRJ@[?-EcheZpdp0"GD7C;)O
%CV+"0X%h77M"W$Ii@k[P(0sL7+u5j'DeVQ_Oe>]bJ:Sr!N80C;gI[>T6go-`aU@'*1YNXlf"*g;:IL4RKCk9Q5XXW0dQ*A1Tg#7\
%9ET<JTa<%WO[bho$n\C73&bQ9G><]=''')(\XN#<]5iTbX?fC`'CD=U\8Z@+$+N:OKFPXs$GEn^\WPt7kP7T7#eq<QCF$O7)VsJF
%BKHfblFF0;bZWHM,_rjg'4tAk(O;(,>=JN$CiD/2aSr8eSoq>NA_302Ff2uX<LrtCW>]0NKZh7RC/^..;o#rE.O3t#aOXW59n(?u
%Ah!:iG9"IV\W75'XCU=j_q'S"_+<!EB'dNXa&1uu+q&<38f^<J<hh$5s,#f@6Xi2VG6T5%j#[%["ZtfH0qXnXgegS_=K,M2S?ADc
%O6oUj:4sPs9n2*Xs7$<)k3E:OImUX/AQ-?3=t+D:K.CKHr>qRa$7;gp2:"2a)*\Ik=`A,sL=.(crW.+(L+3cL^Loe<4ucRK2I')V
%OYS\gd8>KnBc@CWgDEMCH<&WWWec58:j>/n#%mXbMGuOW8Z[n"SbH@(N45:6i"$l#"R[7MGe(iF,0Yl]p.KKm28k?]#,(V#'"0E<
%Mc:]P'$-.>_+;,9fXg>s9419>A^<aa-XJJmc_)?nV$!=3-oMV;/p*D+>F^)#'V%SGE`_fZSa>Ae7I>jUMK8Dun+c\gHMVZKaL`ik
%lRfi2ncscO+@MXCJmq#WBJuTaEK1N"&NuhfgYH9Fi#(+&#_3<(72^#JK:'YM!;o6gdeqPGFK<(UT0GP8MHW9E]r?5,:-a:s#"rp0
%BJ_TQLe\kO3+cVn$B_Ra)<oHXkNPB*hLb*XYBtks%[!@In/RU<=uSYXM+D'1"etFhnVh-sqL5d++f?C[gddM3>N4-B-<h)Z+fWR&
%pu"0<_2eM\l(uSp,q()?mYFN3Zj*f2Wa1R6d?86^8=<QPaRJ5RBm2!IhO9.g'P'Fb+($&7+-IrFe_*q1c+'gWO?66f"rQbJ,qVLE
%kO&C9f)a=Cl,OVC!FQQ-3$c;#I[Vu@^PY[$mM#eqnMCYX-!&GhF6uA7i(@Eg@%TfEs+h'A?_kZfr$u`'FuV%-KWWY`A0.$a,:Ht]
%)SLatBHA8/>alEc"tDeS#_^$2F_rYTB"_\)"(&YNid#i-4`LSjHbA-I'td&[JEpQfb:(J`l4>e=rK>&(api./9MIDFrGk"Zf+A^9
%L)-kWd:#79'$/9Wr3QikFgB,Q,JdBdJFnR]b4>nC&I'I`?#/@mBa/bVm[S`Hgm,QdCXoT;CAV<1(VM%([t:u?\-`%gbFOq%i[]+@
%eb1#G%gadKCrAGq7,3l;Y80Uj;50Pl(U>u:*FVoLE\VAACGCh^2]-f.*N+^)R!P&qESp:;+<R%Q5T,iq[Z%^O,Ssfs[g"V-H\Z2n
%i"?#;8MFl*ps*<YVh`WQ/$gdF`_Y8I1`4fuj^[a?3H-\E]0of4+cLMc_caDTf-8ZP)X=?;?Q+#24G`a#gVd[\U++P*1t9ZAN]/)7
%M%0%^F_=qKHkQMX2f-O=B5Es9",`$nG?H)s(Q!F<G$g5F>8sDQ%#G%+Z^_eRSQ%_PF^l5iEE.OESgHq#'Q''r;F.JiH-1A=,G4@D
%Q8@!rEFakZrP8=Nbrid,<DiQ/oaU6;Zkt39bN7u74Hp0b'5CMN"EfI%<TTqJJ`fN&30:BfopBfM8W;G2'%KR>:dBaC*^VCAUXLZd
%2ie$(h>bS&7.tZT5ebZL_86PV#ulMELK7Ffn8h/MS$498[qO,FOPXcErr]ZaOn`C_%E)"fC[DR&9jaTu0,anOa:"7Bnc&*RW\?m@
%EE#%g*]6u08o8(.H][A[IPrfg&;DiQ7W=GO,.%qWg5S4Pl*V:S+*caZi@B!o$Z4-RM"^e,rM\,)o"k$Y#$h@LAGZK.BCA?*#Ygcs
%UMt^*IdSAB94o+cSnu>1Est1fId;kX%n>>V9B\YT0?&1Q)I2qHp?3m&1Yet<;Z@\FhkuVkHL6?J[sQ*5P\`*#*";I,0[.;mT1($A
%$fODEV08YMiYk5K<.Am43nN]0#,=&j_X;^V``B*%T$^B_%*I'"&@S<ACl!7Hb28jXoRq0@.Ya)j<s>94N`!&<![6]\>PYGcc(atl
%=[UT8G6R;f=B7D<`c[m>e6+SSi:3W>9Gt'#W16fA:.FO8OHBrK]^VdTi_]a1\4ajVM-k1C`lHL-2X"1&9<G2OTROZCo]jB^)A+SR
%if)riNJoefN.`>)CA6>]UNYpaRTkF?(ct8,?$^4cqT*ad:oEl:0h@SFX-=SZ4/L"<TgRH`U-6'a>*W6lKot@^6\lKQ<%UG;RU>`A
%=-]MEa.V9d.=J/J'K1;QMrQ4:ZZ4`)noe^X9!D8e6a"('+Y[:RR&!5Y,)T=MHlSDW>As&/Kh?`=l(*m>E>eS+&mLL7E$W/+N9"tG
%Wj=8;"WAud]nG<YAhlHK3SoKZGf>l'.](]h)Q@]rU`H=-d)nOhLWBL,A2Z:B1(Z<dU'e6uY,nEs#RZ^YKiolnL/lTB5*0K[U<PK2
%PF"^<<Mmli#AV!6k[c'_;/iPeSQJ0\Sk!Qf`DqGgB^4^CbkZ$@bud!82K5i2N)\NBA>4g[d3XM>./!\,6)cFNNoJcfl=u[EA^n1`
%-0lG3^5?Xn4Q;-`pV()ZC>QS!2;<t`r0oEkP,G6d(`U.S2]>hF36ck<i]9\U^X)1raiRVG._pJ,%RlX0^X&uh-"#9*flbW(5ud.<
%UDARS^jT/i@]mOqe4(d!['njCEcfgmB^UT3X9f%/@b>h9"o$eB[b=Z8f0CQHZ]P\5da<`pD2Q'8*bdEiW3>aLa=c.;:DFF5bJ@,s
%:$9KM0IN6A%'9JTb:'g+2*Fr7.&mH3Kc*Y(017I-`)$=;0ZuCHYhMDrBar-%BOCQ>7entLBR=0%-(IsTJ$<k`/Cm"#l:^]90-6H?
%;Phg:`/1u8a'H<UGj`MV+7eP57RlJH19OA":8ZQ+[`d$4H%kcWOHM>:kq;38,DO]EMtd:d4c[lZISp@P6ii5ic";b2XHp/[g1_4T
%G2A_nFOVA[X*Lppag'+a7Oo,<kd?jOf$&FI#buV)LA[$E+hb,R[">T,E<lf,R;srG#N$*4[LBU&Q/[[R]i<Fci<U?mRMu&rN*6Vo
%Ys>BF/)i!hQC0>A7A$1X_j1G2_:IfWY2#fTI_*@ulJg*q,D0b\!j49j7/YPBO[Jc;1aG,18tbhbA3>#i[tX9;Cm5rgK_p#"YlUfl
%9I:.)_*JU?BS1"8p"9c4Wj;eDC&!_lN_a*t;<W/,T?j&YS^:]ri_mT+AZMfY)kB/H9*/^TYR%CU2?85/(fKds\qncfH*`4j<?aAi
%c&b23@pnhYU&bt''EaeUHMOI+8+lA;k-@H=J%fDQSbA>A1%)Vl,`^rJofNS\.e7_QS9UODQ-FDR7+OWQK$jDP]AKnP)1%)#/[\b8
%`!aL5_UE=/GZiKt:eWdT4TR26#'MOM9?pIKOtu#qX&l0^#BY[_oVmH4jo(><8g+P$Vok>$@`m9:b%1M$Tl7pKfY(H+.XPrt7=/$=
%it=+J;8TW`Y$0Vd"t[EK)M(sIn;Yp"6dUWN$G@.J[M%#lA#!Da)-ZD5!f$$uY)US+#6^f%>n8uuB/(T^A]Cg/UoF>ed"auESq(Bf
%T%-,03Bsp7E\Pcg[7kA#nV6BO:NMS)79aC2T19>a9QFR`+uEoSVLZ?m^oNSnW8USX4t3O\h?Nl-bT<CnM/M*h"-Kr3EJ9.KlqT=P
%-Z2,6oR1-hp:DotV6r1P'%9mDr<*"HR?:0,+u6XL[0X#uK)8NPdh&7F2fTmZFF<C!gh3<p[u/`IHMZJbpK3oN&ta_OSQ->3kuiH>
%5uhf_W_a-,]$XdN@_!]i33A$0_g@Q]/<#_I.Wtr\=TtS"Ol$Ho!Dh/)U`r;\mQ8$X7Ipmf[-=!&ar[#8F5OAF`Er!1.c!Db>udnL
%5jg^*Q,GQ8G9*.3Td*cj90C42`Musga*;32lD6aH.>stn.NQ&M>7PffO<s8.9Cj7,40"`_qYK#@_9mg)-Lo`!8+$e]%!0?=SZK?u
%[jS[KmI&lZrAQQZe8OTPOpg\YVmejjeN$]mF%Ssjh,"tKMAeO+GOkoJ8Ak;RgSPo;F?=tV(_WP03J,eYg$l^JFf"I"!kAJ@F6C<;
%3P(Ao?U^@(4mo@a*/E>u[?`Ic<E&HEorS$?9tWC/PldmrO51V`)^ac>b>Pqa>'s\M4KH\9pR-jQ#("#F$Xj_A#S8LS)F5gN!\&7s
%*f$f;(mVB'_XZCck+)>aN)JYh1;I=eEr\oRI;a(-Uug6W'k8j.T:gl1g3t1EJ9e",bG<JOmb"KO=*>)ii\!gM^laS("2S7-NCHVY
%I0'U>I]1@0;LmI7EUG"3Z`!gM\YT1(5mjOp@PtcESrL%LT!g<,01kT9*":-!pAg\X/[FTr)i/X1ce6*R9%<B+"N@Nm%p32]CjAZ$
%oS<^c7l:AWTgMn7aUEA`1*)/CC^0=:++\A@f[capY4r$V.$g.\,^jPA$L%7D@S*`Z8;g8+7kfh'[:<Td=!*u1_Y0Xn$-?bY0TsIH
%3X9@9-gXD_?8I"0l-:Kh801f5OF`MmlWeC>>o>B-0UCKqp"OVQ5KVg(HEEj0.tb?!qlu>+i_O+?Cd<<-lqF/c/)Au>6Mq&!=l$2:
%C)=)ON1[)p4fEgA>Qsu<1/o/<H7`6S?(h\I]e\k%>`>tg%&"R_`,&M]pi`]:M9`m1N8J>4''mUCE_.G&BIL_\W_2[nWJ'jJRGVn=
%(A+<`e+J-?Dt((cZ.cPIZj^`SGBkkiBc@*b5*Xubb,jUmLBStOR-RptVPdNN0%n^e$N',M$u6A"dZ-8<jJ2$C/aOe3Do]:Wd.[\*
%B_Y@A&a6$cA>I3G'8!AGm@?#ZOES2>@KJ52XW!BWh!&^<bf'U"+:J`Z<blcK)lKHj@+<^SD$6Gbi=,5_&og;<aso93.]^J(iHr$j
%3+jk5"$MW-n,W>YLiLMt3&ZU(K:9H"D1)Sunu^+O3Zi0N*nF)U?C6WpYPW4AjbSW-erWod3Tp2Ia%#?nK@T5O7BMu%8IhROHk[+2
%Z&o1Cn/:WOgi?!Q7538S/IXb%aGqYCM&su7:E.o3UoptJg'5ijJp5oGMl,:KocC=0@(I19VF5]m(IGO@3:^A1[KM/ngruL`0oIHZ
%dJYE@C^@,eT<uYc4MTAq<U6/&\lOX<WM&EC)Z['hCoDWRQai9HQj=;"9k9t?>=WsqGuc^4<_G-.*Q#'OAlr\GrLB9s\`j@jW(,jp
%!9]Kh(t@Y*&,([mn!("P?t(/l%31MhpQIKl/MV60=[-4TE]<r]-o#_:eLO6^g^dSH8;2m>"akDoA4NuC`/W&>>%-E>l4]jg4OB=e
%?A/8pH!UE0gAY)]idMHRSO;>W@#^"i<=+W<cO4KFe<m`^&k^,iq#XKk6]Hp=Eh_Pbd\;H`8#kAp8;"q#bZBd\gDAg#7HC&*YZ^ZK
%!Qu!*Xc2>,m(7k[SWtd"Fok?s;\Mk2<&tbuFGku4mpg^`8TI=9.:D]k\MgH]giV7MQ&,sNn!IqC69RcQj?U8Y<Ft0]eQ7H)-?el=
%hhKt=)aMt'@*#qCs+Dj8[]8r$aFn!kQ:.!p)_HG6AYK0"!W,)LHLIu]`ae9A<g=!/d&S`&M=3/3L[S4u;(:K4FVH+dbs9A?:/:7X
%&n#I`X*c)0n/"2V-o5kLjrMT<gup4FUs+K4`/_K+EbknL?;%b5\4Q-hobGUfZLWADbe)uL8tCfcA`#+sG.tpQH3FaeSZ;1VhIp1P
%UsapIE*DCaHm!:"dY*`A1oWcQ`r."leLO?2O[M0M<1:>GLqQfW\0%YcW4:b2(\--0Oe<@T.SZ"*&#hC*5<(a'1i\F\Q:*nqQrKM.
%p&csj$o=1QT<VIdQq+PsiOP=G<UV%f-4:eE2)4@<7B)-cVTnmTA$MD5pu(:34+K1,'Vp+6O/bqmJRIR5"2uSoTisNRprZ5UdUAsO
%o70J,cBl5d83*33^DV1l[\SlY[WD>+L9&3sBleZ9WJUKQEDfs8@3aC&1h"Rf)MMmJiU2e"'=Em#EX"<A;H9H7]Rjhq2Peh*3No<u
%'PVdo+a?L`g:bW\O]i1iXplg;EA)";.O5CHas6+a.^R6s9$*25IC#+VMG5LNX_1a3)d"h=!Q3H5Y7f(.+q0?d#WCIt?k=DKk1f@p
%q4cfTMHob#6VqSc61PG(_Hh.)onT<VH#G>KF?^5k%mHASD9Q+pd6"RI:#)cPVK*%n854+N71sgCD+dob,F*cR'H&je$;K:d=qn,V
%Rm.J7Bp,(.2ZsZ:UKZCmEb`.n?=^nQm#rhQ0b;dAP9LZ0gM6P.o`=Tuo+:$+-e8j]gM%7><?ud,A4b,=/\'&j+'@r6@:Ghc+\"fa
%Rn7rN<mJ4-W`pM[rCJI8pe"K^+^m!n\0:Mk2UDmPo0>kJe<_k"0<[&?oM^t='#f#Db%_tgbK0<)"14YJ&^p(7Bh53XZm?;lMn?QX
%.5i.KgCOC)&A8EO:_#gj8cm`NeE]#V+ge]&jSDihYB"ANf3^"<YRm*llm]K-?LEU+bho0?lR-56DcKbg.[ek=YX8j`7Vfk-nY<GO
%)Q#Hh;=LPK\TP7AqmDcTTPg_H-7(V<@'U;#Rm1H(MTri+`;MruOA$9mPqPF#qRHiE0Vjk=L.1!P%rr"MEk)bR87S]mQV<>E.8\>i
%`-?bmH66Lb`ubp"nC:rIS'7%GDVoGWR+G19(\AI]#hKJZJi]&MP22=n4)8f>KReb]<le_b?,`+l-3I't,/g(!LK-[d#%D'jkW7Q]
%WY)8=gG3.[rgCX6J`0"d1^%Y41n974^QoZG?>!Yb%nSN`7g;c_aZQB<3;?Y2CbZG!%1J$O?!M1dYjgJV_\ETNbE+DDg_i4g8GF3D
%Lr5.%p6AUl%P[fB;pGi/V7=:L2<.a%H+p9"/qb8=Cjoqd10H,jnALmGHS4Cjjo^+B<,8*:5(/ZPG!61C+'&#E1=BK$`>]Z6THX$@
%-gf)*3V\cB@!!>*L@ISc7V#J_ra^9(-lRW??7j1$JZuN*Kr0#<Rk@DBOi&WS!U7oM'[GjB2Z``G#f$'W?3Ai6RA0Y)1<*YWQknCQ
%Ia<9a!bBXa2t)&U#4>/cXW:Qg@u^t![`,WC#=J'IDje7hn<@.5V2Qr/M,!)@2]<6=Q)ru##=.!I>^7?4j,&5f#'q!/]Woe##Yd6i
%kn]uWXpl<>Y:h0]Eh^Rp00)H5lZ2%/3KmKAEQ/(s2ZK?-]O<>:)dNtqed']B'p-pfh?X+m77<CM^r&ASa#HK>'sOJa`6#c"T%!ZC
%])8(c!Vnc$MkNqDL?N&XUuW(%H.B`@&DgY8Yn!/>(T'C2_TsEL2Uf,5JBk7/EonN?C4'YjX<Bm:Z\rg0(h*k<8$G7Mbi\QUb^IBM
%aRkskLG^RC.PPp^nZ!spJ8u3JPM[5nC#fQlR)WeCcfNVLWg/@^OnhPu)I++0-Gr_WOB_5dkS(/P-s;b`&PTI%=@[t&h5,60NR`[[
%'I*ZLR89C>-,c17YIs6f@Zg4XVBE]m^*)7,coAg#olH<#0#Wp84KbHZN;I]%K(b$B\$mM)D@haFm-?)"<7%Qi8SGK@fe<ON1!3'R
%)WmC)[P%A\KWL9gfY##:63k:e.V;-4J0S2NANo4-`H)GLo/X2=(b:>jP7]IfMW"k)AL%A<MNY'`"lt\GP3(s8;fe45SZ;C`GTKm@
%0_0g/c&J_XVA\9-oFDOY1d/K:`Wqf/0e;<^kqj22@P3Vc[]FN&>TfT#aMq3;H'dV92UY!Yh4CaiK]u*M1?5rjNLE_/UuOq8G6KFA
%%-Nj]UM$j''@EEh`5k$sL[fZ_%KhB*M:IgGAT`Gk"].N[YAc;q4rNP'I5<?D]4f#/(O0(j7qFTcH3Al-$gO?.$0I>r.o0X47kcks
%O]jmR.p?P>Je"gF3.ed^pBI%]JdO/;*!`ME'1@9">s90u=p*`]M+E7J[0S#)NhXY:=u.6M^*-%fO\T-)N0S!SfKoSu7(bIAXlbV9
%W8stbr$'*IOaa;":YSDP<)=\upY3Vs1g%M*AVSV/4.-gd/W3<dknkh(5/4++b%A5B4_Od)R3g[69h]@:iEArh^oI5f%&u.Q"D>k/
%dX266m9iD1m.\``Q7`!5cNOQHqi%CsXPd,'s$nUY'GmY8M1u_b9mg>I;Ylb^2kLEmHUMY\OD$Z93D>?/npeN%8)"YfY0F8g*%8Lj
%ktVj\2N`HiVQQ>te"8m)iL_p9!hKu^Wk$:'<p*qD\R!0r-:3o>$l5<"Sk7[<YiS;V7,*0H2a_8Do8F*tN7]W;\0rE`JZm'I0Z=_K
%C=?OieM/E>&?`r:Ybr2Ao^6SK6qZ*;Rbj$3YhGj7nY^,JOtg4q+)#I&e@RJJ-nO.lRF"bD.2UJS.gl$J!gqu>Ld#lZFLcF\W_d^+
%l3E<`_c&<\)5p</VaMquhdu;WRD+T=<s[-3FGt0t-mSFgg%][n-Jd5H-K;JD(A>gm`2sm6:Z&Y/bO\-LMAc&1dY%1f\?QbVam1S?
%[=q2%<^;#Z77_!s],Cs)`*J[^_H+;O>nf*_c'/3]Ib74Z^$DmFo0E!`nO4m#s(7./-Sg]+.)=/P'\`Rf3b*&r]S%a*RsB]RFYmm8
%$9I82/O]4PPnuM"?>sHDG,*2WoK#$k3WV@)Iub^O,F+>jPU,i['r-()$+,Ioq]H%7ba=h3YpI>@WmjL_TAnVu&PpAI-o!B`Y:mcn
%k#0Or"ZJoVG7]BN0QLQSM9MlL1Ih:iOuJE,m4Aer70Ig:Orho)9'Sjfn((@kp_7;=D\;46Od//KqF_t\S8(\X]<T`P3oECb?B?h\
%a_nJc;P^qj6@tRi)I#(HR$M*%:=.(_RDZBN.g;j(fc2Xi9tIm3cTLP5!ii&(KY4JjcM\H+\!sG0985fJV!]Q<Jd-AB0)!K7/9(^H
%pgFfrKN4Y#/-S>;Vq\>4]PS1TldA7NU'71%*'YWVodfLOjrKl<A^s!$]d%aoiMPP>mcrq%$cQE5*6U?_Io0<h8S`8@#Y$ZU06b2s
%0hBDUha$V/JNAZd]'T[,XsQ`\@_KPt4@ld;,kO]^c]c_V]GoD!eZ7aQaNK`UF-K64;[,#&`fTPB*$/&U4V"K<H1u-K?56BI6YBau
%hCgR/%S:BJeYP#C2e\O]B0:MBl3e\Ib$F/0cD"2IVMTHIUX"fA./V!MVc>%O.-MT#cTSmg8I;TsOG<&Od\UoVL7S`1#/\Lt_T62K
%Y`r9KKLX`+oN:\oEJ)Mj5^W)MVKpC\aQgH>7]>\[c>BU?cr@br7V2jMQ]7&),0?tq"[@@AV-YasN(Mj"`PUPJ$P]g?oMp&$l"O<P
%5e]k*0p(YH?85rp`qRWX/-,X>MO=WV"$@X>OJcn%)]1ar79kFAKSB18XSpK)i<W@c=&iN6/!hI!;&",G7W4R98Y/J`Es(5.@gGsK
%,?/3IcKqfCZCOLG.@)LER$]Pel3,5Eij`'t7\\T/H7MCp&!TI!#?R4G#u5]<j6[.sW$:<,!qnU9=7dLiJfMNpHOGSZMf*eDNhkoS
%V8VEL@F_BQnnfBj%V54K6Gq.n-$0j6CEOqJM"WZYXL$/1"KI)`DOBoP]@%l9@;DolmZhQXHY-RDne+K1cpqaqX,'NEQ#-)nFJX#n
%iZt26E!gPZAPNprj[!S!IS9*CBJP@S3ic9*QjBc@c-g:u%J2&X^"(cm!@B%>KjnMNIB@35i"sKFkP^EXJj-Zn2K5X!Zqu>eQTB`.
%e8fqeZm-_&S-e1lfOp2H_o<TpJ.7o>'$e9QYFH_)gD.UA[>V,28-L@S$ue[8Jj@jk-BkN;L!u3-p=cV,AMb9ZV3\#M5c?hOe3PQM
%do*KIpEG=2Ni6Peq3D_?VB()E.V?lFN@OP$(ou[4WM"JaA]r\e1](;^7HDs-0kKVA]\m]FW49NY=sr?#ee4$8ipR8fDF7`SrC[Vf
%Z>"Q:%6;->[9X.()fO"pZ[6>t:tD154))DDHRl\NG+ng?XPGMmUY9uF3I6nRYT(FN&_Lqk/=/3<??`Bl5,YQ(S>ZH1''6_<o'quW
%!fc=MNC>^nk:G)k'@*3N,15)AmU6XqX("Ym'37T]"j^>n^tdKoOO`!^iYVr"#*g>8UQ;i,RBRT%JH<!>cuAWIaH<WM^'t29e#S*f
%4f;9DEl+m`XiDCEfe:Z#62p3*heZ[Jk]JpZHo6YikiEN<D'ZbpABY6iKI3lj`@_M+F_-\Y`PAIFZ]]$2"+JO9TM[DmJTO@FB4]mc
%b^Nt0G$O;fcWPB@C4TLA6$H=`DMc&N"6BUkL:uE*6[Ck4Y<q!&?Dq5Ol4`6G[[Wu&:qM2%WqJJbMbb$KU3>qE-k4,RM0l$J9[n63
%cDl7ZIh[rpUn8RV-2Z'H(pWR-@+HY=[@%lTnXL6YJCr9daI6Xcpuq^R.eF]\n<Q'G$J*?kI]VipcV[,*9WH_%ZtLpkMh,VCP4//c
%<MH6)2Ak*i(XlMQf)H`O3S&+Y794.8cQP_O./l>?0-<Gse4_;+nYo5XZcuETnZpNC.Z[LPiqfC`eO$j=Q:kD^g_1u2=Fn+bQiRk/
%-kYgPAo6?Zd%IYHXg"-<>>s7,qT`9N%.j*e/9*lCCF>hb1amU7f>#1XB:7JnVdUm'a?rRST2N`KEmf\*n^<,9?I";PntP&In&%9W
%=F^mQZ[q6kG9Hd_7l&PF-O0BE]^A6%eT:/f+8>Z5,Be%D6D^+V)aD3<N;s^d8f3@nMNmsM<AAafV@D\Gj*LTnY*KOg1=V3lc7BDG
%G=F_p.el'kI_WR/V(,;6SUatn.W1\*_rAR5IO<c))S>SqN9Z4:$$Hg:pI+C[)hkYSMNXE.\tZS1EZ2^m:-YME4LFnm7^O"UE/DP%
%8edW^BYoR2<FRl1A!.Q5eOoq25^%?ISQc_g,;!Oq7%,BgOlCE]W:R>lOE4A6Mde_S'JWO`?.BG@KheOZ6/AStnQOHm4JU1<S7rjS
%i<\EhQiOBlH*iHj0]BNY,aZN)8UAX_=5c<Dn[!nF'F4a*W)+5uD+)MO<".)ZcF3_)3.4AEh6<0W1E)f/=-bsN;h?sTBuGaN&=k#/
%;Sl:.4C'5'WlB.Gn4?''3M<2VZq[@M<Jqr^2"l5<9*r.6r%h\%i?$KBMt+t>0n,-J$=+t1CJ*oV;SjBOqTTX[/&Pe]pcH[=pf0-[
%g&B_^[bNWGn1g4lmZGFA0Jhii?(%h#C1\[`CFoiuTp':a,pPI7<nZJ)>$+,E^_Tu$P:dIr"cN'/FOjI-l]<m"In5[,D+_4q;i^!H
%YS],*KX7u#X9s9mS?<2ZRI\IlX8/hsENnI:''s-P([fA#SL&EBbI]:VWKb<MVqM<T17]9E:4fu9HXnBR22l!m`/5jpONWQ\@*)l)
%:s&TEF>Fmb3Kg7S'-ac0c']NT"?V9`QQ01K3"$J$2doK[Us%oGdr:E>,,diSeql/.jeG(XR?=c+-"S#./siKsSs"5g$4NUdZQ;\2
%<tMBPD6$0AqXI*Hbp3En$SaZIgn>nDhrX?;]&AcceV:<-KDU->L6R9\<u6SM3!_?c;i/FcX<b0S#Y,Jg<d,cg/k,Z.<<&&-_QW1u
%Am\`l!K%>dT335-dN9i"TZ)I/g>K!j03=L?50Nh&h`]HbX:b0PXS0u:^X)8tf;/]F"#7?]5P6f_ej!UYSlq%L8VWj?X\d4)F-iqh
%rkfOC05$\7?rBts+0boRg86uG=hcEKYf:iCW.)%Uh0/$2?Z!L9W9!u)Ruq%+.c^F8hQX0MjdIdXh;Q1>GNp!]=^ZI=%?qg_I+`La
%HF[$#%.i`FP(hDaQ^+G/(5pn;qEZu+G,I7Zb^rfVetiY+1NoITmaO+u\l7A!.pGS4Pcp"A410Vk>=Y%%6LIAPK7\6/40n;$S_B/@
%5^6$<W6[`lkciD1,\<QJ'Hhb.;4qNB))ee*F.HUF<3OTs&)84p%Jde*_Ud3Ig'k:Oo[D8?YJ$p-Nq=;/Q7NBVW?8X*Zo@Zq7dTJ9
%D<&u5]8Y5F^d)]#LTq'3RehTA8U=<"m"BQN[u8:-daQ[F6TCX\H:LT5]h6,gRqVt1X^uQg6R(S+c)L#@d[f)U(Q$Bo;*dLS47rfR
%0"571\DfHYj1ondlDIY2GA,kQ()D6_U-81(?on_XmA^'M1As4T:n*ba$7P;@lT2Fl8t<t&MuG0&UK0cSUYM"-MN>3XUGkI?FR&FW
%WclP?\1l@'RbtFh-0`]S1HQYRE=@.Rb7#hEbGhOkO_]E_KOB4G+j.?[!3R6=^'Y`[l67;p[?,Lkp6+X1=\<k$`g`kg#VOMAMT38h
%8_j1/:VD>M7b't-5k`,Jo7'D_j,P/DF^$'/Kf)g/do@IU+otbG<uG[IrENA"+kfjFOp44+U+"])7AI0sQCB-/J6/'RIJ37r'#B]#
%mAa]W0]oib6a!-poKlJnI\\jm=_DXq@RKCO'1`EaY1;*SS`(X,>3N"-[3b'XIHNk!-&hE2gG>E,%n:bX(NBXWBm`Y=?C1*0&,Z-Z
%4TH+YAji&#(!!mRXYa;YXTs9e_2H;(c918!j8g3U4lVG=3a-1kY3+a*P.S!4V<Z-Cf2a;VqaTY&,cI+nM_G4t%t\($5'*:BU"YSj
%WR7Bm!1[\J_G,d17b\KoX+*:ICVk`(=$Z2@=jaE!@Etr*4/>=<1I3(HMMZ=4'Md+$,$G_t.F]l&'P^R.Np2Bs/S^EFW2p"1!'b]O
%['aTH/FH>Vl<VI,TnYJLA!\7e27Ws09>Z186ABBo`URK3c43t`XY$u[Ggl6.h=XLR3>iuF1@8@1`>R4t!^$/]G?7/QYs+TcQcg7.
%MWY\5*Z5<``-edN2W_2@qnH`km(m'he_KKmP"q?Y.`"1-JONf3MY_ck`RZHJ=ua&]lNeLT$ns;r]2(J>f=DCLd\8R\=4Ip;6qK]c
%Th<C\mM/Mh`@pHU]OTG.7s1ag%(iAFah?,@U<O)=b(1>Y)Zp%pJk:=M/]&6&o-#]cjYbn:;<^gF85nKH97r@6W3Xs)jcTPYMP8G%
%gEV-54C\?[c%M+n/:VRHkN[!'+rRY\8Tj:kd\PU5]RQpc"3l_/B=%[IrL/jXp958F@kWpM]ch49XV\j\?c1MY4!/]g&tma8pYOJ=
%^VCeIr'3^je%'6:Cdf<ZDK<9dl3d*pRo0+#g4H8FBi8dN$"A<]H?R#X<?&G'-SDg9>M:'PbQ1$9j?r11RSKKe'TZ_ZZ[/L8"m2tk
%;c=Vk(F]0qo8+Q(jnjXdLm>.c?(1WD9E';@4`\"RU59e*21U[B1CW-E(,7R%.)T<,:\+A,NcPcM$p;nW.X^Z=7(JSi\+Sd5Ktd*d
%2DFC/@h5mkB"WDS0Y?1jLBbA#b6NG'1V8/6-/#4?_&LDTaeSr$%aG*VU(;o%!;*0Y#*I?kZl7HWNIsXS6.GOW&S`8Q@Zt1G2V#tb
%LQlFQ)c%Qs2P0SeFCaY50H2Zf!Q3R'!dq!i-ZZ_@OHIGB:)ua3<d]i/f^UC<`:/CS)[A)\2;?Pe]f07lk7AmT#Ld`*^Q2P[\:>Pe
%L-r*6;)(M$]a\L.3g_N/m+erTU-7;k4<1<gZXg%rWiT9lSZNYXA*/':AR'6P#B>)PfMEoJ,ZEEdQ`0FR%2\TKVjpC+I`T=QT:^-(
%Q6u0%Qq`95dSh[L\Be*UQLo3PR?TR\m\:*s[h%XKY8QW(.T#]($nSjV@&mR"aIc(*/JU\A3G!J<OF>Zl1&@RhbGR[k^\GeU9R&%4
%G)c6-**m)p!G0C$iRYIScOcp*Q8<jVL6urDoH)`qjcPlRF1&MfgI/T44#hO:b]dt>Nm3#KL.pC(U+KLjI;Hra08Oa.0R_B%oBfqu
%FiVAKW>iNaWF2r`3J\OlUmj-FaN>[f84J`(pX1HR&@!),eVohc;iNo;p6f07D$5K"pTXC/Qc%l2,HF8G]R0<1QH?31l6&E]@41`U
%J@f)OSKjgLD^4qHT[LIc1rOZ"?hoN)r!b(]j7llAaMIUY;^]L7R8p<65j;9!7>@'!`#/Xr/b)_^T$Sp7mP!^jTPcLTE93K8*kf'-
%!lD\4Hk1#e']3D'()UF<n<2srkV[W\ePhlHc?gpW@Fpje*g.Y=+2^(L9iSoloa;.LNQ_qJ"pgWqA;mR"dYgD"&5KAiK=]ipJ"WR8
%!N'SB9S3sK:e5elDea3]`lC'`a-HTnP(L;j[F'*;S$QH_b\WR3eiPaZqo7XV-"4^FBa>YVpjtQDTY7.c0!;rZ=?4Gf-g^3n3B'@A
%;eTI;q?JCoG,mu,FI&SW\%Ln/s-Dm9\e:^Voi+MMFqBcd*X*2nB$8@oQk&bQ6Ss!^bCd>%78bC=D9<>'TdnDLaJR$EIoMu-^-M,o
%f#Liqf+1s9^=:/%><>sr,:fnqHio@n3+.X7\>)iY!LIGmhF/+n96,.r.+p@BIle2@gFYh6P:f6*cIA=#68PRa)Aj2ia!bs)JU=/F
%"p;b2Z8(Vl9BV7"CKNe:@OSibKS<gmJ_q"_aA>s8+:Vb8$a'Z##*5$5HkS^sf,7`X9>4C\IKI^9%+,Ve(:kNqBN,N)p(kLq?kF+f
%lnjecr'<_&3l`6h&s&-<j/HmGG$hs#=5N;0a6!`bZBlZ/KMH?<XOVFu8^hMl1\bZCIXJOlF).BqehHEls&9Q`Yp4JTE&dGE!:ak2
%H8X($g2o$1T(C2)+>-q%I@#iu`\E]ZLl0#];D>!jc3)?J.c-$)Ii_T/M*(;k:r'N.+<,S&ZDos0*as.Kq@Og89t_`?WQR$`ferrQ
%Pf4>AC-'bNVkZG`S_LAF<@!cZg%9JWVc6mZquFZZg6kD38_S1_9V]md*n=AX7FB,d,3R2X@SP,=W"[&&Fc*@129<aWZYK=.YgU[>
%;^,OJDIf>]b=o$%KRHs8P;>Y:i3Q(H5AkL?jQ*RCE;ARs.X^5.63H5[S;;isNub.&PD)D>,`F`D43J$W044H>S\.V0OJrP^GjICo
%]Qujj\\`ga8ESU^r0B="PrPG3_P)+VX&llu[p(('>c;:]/[lPX#89DckOt$PW`p2f+"\?EfbOg#S6r&9a>`&&AtFV@m-(+r[Z-i3
%I9QJsNe]7FmVDD:j+_[sSU_n?!/#<e[4&C*jKu1no+'?Na_=:1Zm1t#-gtC5T(_pgS2lD=7Jm[C)O<C)A`Q95@BUZLg4Oo^$H3TV
%0=]8hACE5ufGO,]*1bNY*b=1NFl8nW!p(j`NguMYjb1n@5%K[)<h'[C87Ne(Mh@=Q!lZcuN-$l54`=Yo+1fPl&IK=1+J+6ie8dSE
%@K]of0_,bB^S90![#PLP:7nh%i08h!kk]Ul$lAc";U"a2mur;JXcj=2R"DMmICJ;uL::3FN*9@-)q35]5u&n9Ds+s0eY1]e-_^Vs
%JDXLWa;,N=n$51uoqURoQPpo)'b:m-?l8YiOF2F%V>NF'M[JUu<GjZYI6Rh07kR?;+UIdc->,l%3OrehJV3SI\@(\7:al0s`eKMX
%75*f_\n[RViGD)hA]*eBaEpCTJHri7LpqDdX^.G`?`1D=]JQK/aG53=rb#6&-6Km^C%MnL)k%5KOX-D3>f0[QRcjB*bF";WELgd/
%(75,J,$r&rK^:bC%FsR26ROh>3PgEPJN^&g)cC\";!+q`?-G9adU.gq04\H38]EB+=@pjOR.85O:JfZ$p#P4m@8B6uG(S3hlR]q[
%W_7;gpV9FG)D\SNJe+JL.HdNnK&aX$C']K:0*L_Dr$(?8DdZQUaH38./=H;_Eu`8e5Y]6UjBkaY4/Jl'CilSb(21$6T<]>4ZTHi5
%lU\#>>ZHe<8kU(S\dF'(A6%7%39'*nRuhi[410#VY#o(<3?Wtmr1*7_EBJ%0^^,.eU/*fBX"n!J,hW`bD[LgeNSj_eh_?r&Gm0Y2
%$q(GD=rHD<B_utUb5=b`'aJ1H4YT1@3S`M=Y,^^d9A[eGci]oa\:nBY.msYUC+WbC9cm;`@Vb4%=36q=fZTf"FA$9#<'T%mV+S68
%=B(9LB;TJLck4Vb0<Dc1*CiK5PT.n>h<PR,FI$:]8YI:Y+&NtSRiYt,8/;W=)fFsfr:<CUDThNj&o`KdUF54RN=Q4ppF[7,D$q^@
%;f@jfOM?_<_1A7%S5fd!9JU1Q]2fXZVN"715M2;'fZ4YoV$Ifp%?-::G:I=dIWHsN?O*QK_rT9"S<U:.Vs:YgOJE"FOS*Lb>&c17
%al5fGlmuXF4[T&Vod8[-d!P%__N.+&mKNke]OAk+i&F5'3u=`!%:m=/%:A9`FFl\c<&=S,D!->DZsj7\7![Omoo/`2g)/.5!=B,2
%238CNr91sZa0[n"*O\*VK:fi9gTUdM]a/4)WF!j$P9BV"_A7-GL4D0g1j8QW#9:Gd6[HDFQ]6)PMmDBK!8RSPqAJEBpRO=<mta#L
%(o_<oP<b$d$g=%O!A1p@%c!X%5R-XU*CI=X]aCIBTT!/kV2$q2'qMJ5V-om_<`S>++P/(s-g:<XdRqq0n=-;nGjtenKL1jY<hsq6
%^Mk;pC#J,BH$T<k'ojH&D..fGaH`4#<V)^0DH_m5V;7ri0>jq:c#.ng0,3E.i2H5s%U+WZ62+Gs8:6OB1jphhVV_b;O_a#r!Ds@6
%9Kil""c[hS2[$R+,O:k(/P;u7Z-b3MboZO)F_'F4o3nWtKb11!p0\)VN4K@*,`/b\5Del`i.M3Fr$ogDilY8<)\2]9cj^35Ph5<O
%r:lWGR3riuKgKUR24X@f_BW-ZpT#bGd+E7]qcdb7+3Cm!*2fhW[#FIR2n=gr$<B:LWZpegCT:UIg:S;*#/;I.4chcl-i1,f(n9'R
%psH+76Z'=;9n9c'IR[CFl7"`BNq(>t!h\Ho<K^0$Sf*2?__)pZ6_$mf&d9_=i?M4CJMnhWiB(sHF=Jo"neePojik(]O&IltM<53i
%WUDe`/0B*&AWh*7&K"jBH:N'TW[F2j/\1fg8\%h93`J)l^uQB8=Ahh[+jd0d@+TKA_QHIT+3*^c`]=U*+nBf!%U0rUR<NhB;!^JD
%q_PsFRJroJ)e3>FB!6'mG&4":K%#]10+cnmf>.7D3mZ#[:2WbqL!/=''M]Mr]2d2`E;"%Rlr>5<5_15*0tEOa&kcpa2N.g)jJf[s
%::GG7W.G6#mN=,JkUZtNJQ[@+G@?m_&tTTPq@]VE[8`^^O#2Z)G+=J5N)GH:N='A<,1G'r:p5EMOMDiDJX/A><sYoD!erF*mhEJZ
%I3.ZL\m1-6'l;Asa'N:N;UmG*0[5QX,tOqj+fLE#$G`TLUpY-foJQ4+r-,Z%8Y,=ZIT92k:hbd(kS!E?4g#,93p+@5\uW;@*PB"O
%bTf^c,E%n%I]QdX6r^s"#A;TL.E,0"g/KJ]LFqcs8i_Zj99ECF'Y)V*lBC%r,W>'YEBFP-5%iEQ.EhLNhMu-UZNrmRW-,lA]!3Jj
%3<DYqMVnG*ijr`N/*$'G-`1fZMO4f'qn.kMF:-1Q5P-,e6^TpRS%V7j%<e/&J^-ST(@l)'+F0@o2RQM@B%:c*bP+"i0e<&b5[?1S
%%17E,U3t9PnD?7Fq?O(3JhSgrO*CaU2FKdqWR[-LCdf"Jh!nW`EM/u79"h&gnW^U\9l="F_0Et#25Vi%Ye],:%N+;Z.""An:0g3%
%@\b$HV*&VIp!RTXN44d8C:NPfB"irQ8Bc/mREM+9_R;+\,1I9uX<\b7<p[en5Pn);&gEWFHjB4s94O\t[7*:a7q0b!JC*ZGO@-!$
%<LGUuS50I*7oiE*,<[-*]mWlp0Rbf'*K'*('MkEuInBM_.U.!N.)i8X<9UrHfHFWf(]**:Aq)cdBN\NaRh\6b63gpbMHHQF!f:1s
%;#kd'lR7Y5@$(ir5SnW`017:F&ODP"L+2>1cs&r/TK\M3^ZuI.O>pBN-`7B$*C\VkO5*11$JR0B*hs!NRd0!p9V\X!3)[QE&:%Q5
%Z%M^Mi<,8KU7CI+b1e4[G=oWF+=*[##aKE4II/\tU.8fXqds@fkuFq'U<`C5QcnaKp@8[=AWuAmfgr<,7j[@.6L\BFd9T7FORsMH
%NJkV3f23jR$9ZLW+"i.<!m,hRT@FT91DJY2#toDf@Lt=Z45?o)/'?sb/pW7/3J2;lE>R/Jem(nOelaSoH*5Ic3%Mje+`RS<g(9&b
%iAA<:gElC_k)+'@QKKsAA+3OKm-"d3d/Eb\mAncumL9)Y@m.$M_&qX4s2k_aH0Jseg/-5A5fR`(s'2l33;P47bL`QtYF!i^RMfP5
%ei*[eP(N8/@>KT3Flo-O"/PM__G52A9'S*-qCgYXrOUH;X`8mC?%pHN\m@>T/gW"9"m/H2@23ud;M-RmK&Ro\G8u9cW(u\MEM@)7
%1IE5PbHP86;RbH<EKo@p?=tCN62]WRDHU'8BY:[*$ZoL&(QM=qGo5Vb$Hi<^`iKB!!=Op;-R+;\`/CrS=4K;u]/1sNk26tV\./p\
%=gBIjD+-u13nCA^R`W@W,_gCY<'`=Np6HHZE:['qZgEK9GQjnBl!fp^/840:XB8L[gQD>m`6d_uBBb8iA7!a/?S0]XX/MG=Z#tek
%hMtORU1T-kHta<QF"ee[i+%$UfbucLPo5`Be[r%NQAXZUeqqPDAqoC+GDR)LTHP^uk2UjH%,n&moOiR7W7]HaL]Vq?<=o0<bLQjk
%I_0ji?,q[K&eYANG9jNQ*NQ'*K.*o>I,?PFV7mWDGdAhTfAOB11/C2%USc]SUnYG/DOpD=`G';!l_:#,--^VW'n/TaUtLc93st+c
%iu`J78[XfAd,RYhR`T\Pd]?K0Oj\tP<1Lm/f6SiVPT*ZM'GmPpR`WW`]6loOW7/Ro&N-&MZUk9:$-'\BBLquk?=#?W!o@sC]_jaH
%&d_$ZeY%c!Cu*`=mC;&oSO*?m*;.O%aLSu.#&\@8mSsZaikS3S2c`V9l$.5+G5H$YQsC>2VkC[6NJ\(7E#Y)5JLUsFGTf^M]KOl#
%'pFlul]V$L*rcTTHIam1BYf)<ct!k_F]T`iB,5Ms(Q5E;Lktce779c9^G;pA60Is5Y]rJY>j0GH-L^Wc15;4Nr$!UqW$C%`>tXaN
%`cp""N:l&J4h+VH$5</%+NXoNpALQZB^e$YKC'h`r.>\JQZ):K0SGr\b*#t,pdbEZ$C[6mZrn4MqH/uXPpQsTGJj&"-QYf>XGUUO
%a<NS[#*7Y8:oH04Z:)a3MIn1ujpnSPAd393Pe;DhPl)-pjj)f@Eh`q_;/Bg^Ht<$iK!Q@AI8!haO_.Foajk&"0^NF?+eS=*@TraD
%jG')Tp0pWPYiRH0en)#qV.)70^6%.I!]le6V0iH;@N6#D.j4b$VRg;rp?r&+[t`X_8o,XWr[cVsFR!/HqGH@u3/bHWdF?A]Qs%jb
%\h.aBECngBqoG4q]@[D,Jo$G:U(q*af-f*`h3]DVSXTO6Es_(G^MXs&\[>0Z"7aLgkZ,jNO$m;XoQaDF78`W,Y]_bANS=7eklW35
%.[Tsnk$AjcAGVCs9NiX#&unpjVDH'lG,<^R`jr3kK^'jF.)T3BYHpN"/PHs-XU5_D<NSPWhTREUfHgp,Sq8(8.X_umMR9jgZ7(_F
%K<T2FH+RmdQscnX,KlMB#RqON-L$YZLrs.r%Z*T<[s6@gV4%tgc:8_^%/`GIXeJ6#!nuKbQt=-$26)>4'4OJ/B$;Mr@!c]"o9-.;
%CRL#W?a\)Ze-`mL/6!a-ab,\`K9BaT?3hm!#EBs`p+9gNLMFG?NdVVYL@I5AVPq\!1;NF[Ym7Ut!<U@N.mXHYf\i7.RSS9[?CEai
%YR-K@,lu,d&`ia7`2k3<kRt0[:hM>E[_"^QV2\^-SnOV-94^q?98u;ap0t&L;(mR*RmP]T0(kIQs2H73<$ATOfS>ph=qE/Ip?.H)
%,_!?TVV>=G35S+<No&\7Ak6AmV$XW'hf`&k"1)YZZAp]9\J]nLJt<o#*EJD53tZfl+k,h[Wb>4m>1QYl%/NH"d#ku9GI',Zh;di1
%[3O_^9X.!e=?A"Q-3E&YO_&c!6KS_;o0ti(mDrrj*Te+l#P&$BZOc><?C/(Y&Q/No:38c1@[^^e7"";`l+#5O3Qiq3lqd+Us%TZu
%8-qKV7t;CgL/_#9Lcg9C7GSM-;EPXHNsYn@Lp=)$?EF6U7`lKnc"-ACO<AO2,+:K1*2W-KokIFJAROd/P)#3j8J/mt)@0,(puSeD
%L5SOh_c-c@Z45#A8*Bje0iHfS2D&S<&1I`l<]5s08V?`Hh?K6]JLK&C,HsL_cWf3M"XuW<o$['2+lu$_;_5s5_R%EX@UPN5k#;-N
%nb.pUI2Rh)bA8K-&r[J_&GC"24hTu'ZmA5F;#h*JfZ.Ni)Tlu)mehnr9\(mO[aHRnOWDX?Jh!SD1@&p1T@FFQfAQ*Gr7a"[[UlCn
%+X&hQ,CY0JkQiY%%K=3\82\2dCaC1dD\#";mm)Q(gB?i[>"*4Ci165-X:$(>qEZPNdRhk4cg:'W*O/;<\3JXDWbOaHOI\[6n_RuV
%i/]]rk0NP(5ILCaOn&8hg$l70;SrL+A-gqp!Q<l.G!MWV"QroZ,KB74!bGma1IRD63"/2qQkBITkX;G=+^6n(*DmRP0S2!7Gj<.N
%DhorN]N^_UB"jaF&+ROqcX,b!;+^orDeebt>6K%/MJ+uP'PRK$Sebl?mARBJl:NX6m@-VNAV%cq+C3M='3![(EV[Sl-(CVL@$r2Z
%2FJF)'E^1FASkMk&tEQFm0eL]9elo>A;WuMmAO_*TsL</0k#BHB6>PBWR;BCP76'@8Ps^T"03,p,r,VBS)_U;OI`p8O0^H4$R68s
%.GPBnM7!V8<TeKd/+>KRUC!,e9g*r5]m7=<of<-b6q!"Y$h&*e/lO=>iibc,9d9!bK2O3l5n@XH8W9]P<+EM%</]JGUaiLAoN7E;
%C)uEaZY!2&`T&'e[B'uIKqYouNid%nXW`$YW^Sd7nOp9gL'f&,/ZN*LSAKm4Pn"cfX"7\bEOi.&+U*_B!cFqQeJcTKU0^f7`A77[
%MTJB,H.R@>NN!@b0<2:[S(*?oY`<SDDW4hQWZb;toqH8#UC./27^Z9DU%VXlad7TV>U/bQ[KbSEYo@/*O48Rn!FVP.j2Y5J'O,ol
%$)L`<5o;g+!C[=GdK['%W>9%f#WZ$e)jTJjZB&\ke8q)n85FA).^Gs5.&I7Q!PYckM#4-L%GK'2LHZgaURF#6bE(u>q(77d*_S(&
%eI]I@P#740\r^"LH53&]W5o?_a>Jm=;6?29'1!*]KR,(`AVPmO]sdO$CI>S/D)g=Q+KCg9ijDh]@rt=1b)Oo0ih>edG$rFd-s55D
%Iu_"fY'*)XQ7S#=Q'N+AUZu%4N)J^N.UA^J@#`.:ZY#HNP15Q6n*mSc1TI,k3GV)AWTP;?Q7n<rI+qndF^LAkC8e/..1ugh7mpNJ
%];gbNc0p02>3o:EL#9WgR>S^?]f?Hi(&:86."0YD>!XR]TjNqOD!RWqEF0p$-j9/.U>.kH7CAG5K@Gc68deoj[kuRRU-seL<O>_K
%2l?[Q0bK)c>"&j0OQ[B/(^P6h#'Xu.H1&-k'P6G;dgH@bo1ajsJ27F=RGp3[K<W)2!NL>X.t.ql6;\)e%+DF<ZVZnVO3eiA:m?Mj
%0-rKa'(qk0#I8ju$:QhjO>,\%[E?U%M%p3Qf.GZBd_Q3HiNZL`)JO:='a64/ItXsf0JV$Qb68W=Y,qoH7)>l?"ZKdAdrt8^%Wc+D
%1.L!6-3[%.Z",dC!(A/[I@L]k24Xo!d]-J(*a:s40=>Nsn]nP!V#&+Bjdd<M@VhA8/73m:btML7ga$Cq/5&<526(/)M+@aIE"KQR
%EIr23TB))pYCr*h7qbbN][JF#HfF3-BRA6Z#/)I+[/3]oR.e"<<'4is`fWF?]MQZ]#l/-?GY_<s@Mhe6W`r>l:!B]giS.<)CE=oC
%9;e.i?jH#qS[N=pbd<*'-8Pc%)U5"_5-up.Tii0&Kd;.-SD1(%ZhP/#@cL5B4fIA=_pSQ@1C:08XN6W/>P3uCT7n0h%b^;lj`U?H
%nRp^3bs?a\$d-]OX+l9B`XkP^2$AF2r"7jP^hB\`LqL&#4C%0DLf7R*D/VtmX8G$ua<Q+7klHsE>C6f(TD*PcZpcANUS%F;OYY#f
%BqE,YhY=Gb==9uAr0AUX;JcFP\D?RF(YddXgn>40J14sN[E3jbZ49^c;lm\XYEX85"f%0K?&Bbc&\#f2ig#Bak<A+Dp>>L3($8G-
%^L?-nEY\k4%X_=9#QkY?QGV9[=^p7eYCQKEr1,E\r6C_smLEX=b=2GC].(PXQs##LA5T]?*VpC9g<=W8!=OmtR#up]7tE6%_QGW"
%KHB^Lo4D,Yi6(,[(W(WqWUJ0oQ(.P1TjUNUq@+Ei/PG%m#-T1+Xj#ldSD[RFUoc)6Ar+&V$Lo*_JHO>_9^HWLO558>A3NYL]S*@K
%BL.eCEP\=*15rE1/=)1"iH5NtGsaS*qru-#[PC*>/FRG,ELXUg-'<oG4a#7S<>nsqJCN6\qp]H!"#j'Kh71;DXCW%;#;8r]T8cK'
%lp9($)a,0k,#II]_00T\IDPL,Pf5XmS?<'S`tNpLqWJ/PXHiYVeB669WF-$_iiU;a4ER1!J(7DB;_jnmjAq;me.G.6l1r[N,u0%i
%9HVmfcV8`,mlIprBXg1u:kO8IUN]4a!(i:u;N7d5886E3b`_@].P:PW&3e2V,T5-Ch!1K0NNV2mL%$Kd+PEiN0Gd$""&XY!VT9>0
%;am4=+l=,+#PnP77-P!ZSoT=L[nCP/@9A%*mJtGd`MO<%Rr4OITt%U_WSPiLq\5kT8OHnn_qbTMh@qa&IZMek"^>!fRcbW!VuQ]^
%EXC#bZCf86T&Z,nc6hO:$eqa2Ka6Ksap&)#&,R9!cWO^SWBUa<6oq"E8dr`i)r")]^;Pt3"'Occ,cCm!f@mYm,=#@0Te2^&8[6:)
%.IsJ"4^Cd3C9'`4]ob!pS`i2Y;LI7&]=*7*$U`j\ao*Ig6WknXa@pL1FRD8VC72u#b,St^@##5j5t.Y5NI6X8,p<&La0L-A_EP\3
%c$i4AC/,eTb^]%W\@!EGn?7f-DMY3R..r<8lTX0h)V(8M>/a+dSNEq;%m)6W&>XE[qbbn$EY+E)$TQn=X0asuYXnon"\Tg)KF#Ba
%/Hj)jVaH@]f=#ZHArVr2:@(c=[M%qGFAr'oD5NF<VK+t/7(A3'qYY%+VJ1/u[<PLoLK(W+j^,<Er/c)e#qO\3Jk]G#nkst:j3u7R
%AYRA)cV8M!-beUI$H@E,,?VpO'qBLSpD1r\8dqr,cBhq<qVQH@o2@!tMjkM[4Ib\XTf@IGrZ6/h7mXC@<bZg8:Ys.T_tZSC"@&O-
%c2'1F2nH(DinC+'ToV#=/!9Mc]W==lWc'!e$"?PL<&;r>Z]<a1@UJYi_mfKDSL#/M(2NC3B[YYlX6?mM,Y3p$2pgM`NmljbFt4@&
%Kf(i[C,/smN7EJ\VX%j)nV.a$m-ENh942AaT&>((T(_T^]gkq)<BH^3?Y?uNrNN=H!u9mu1'>ifHC:94?M/JESE?i?NV1"e74:X>
%hM#F(X;?98E\lL_TB3Xo!0_t]6Lu]TAi;t5qH5*ma_eX(6g$0"p\5BOf/!m2rN,S)[;4(Q.8$(97sPMnL*XZBW'Pl5[7\GeoRi![
%;%'KJeT<W@;A,*G=TrS28hC5gLJpeM6*da+qdNqjVu@#jpeFUh86V\apB'@s\gS3&e'Y"p5:)@,-rO,:#<Hj&G-.KgeY13(.`DD!
%e2X;PgH^Q^)p">`I%t#S74leM87=C-]u6^#NYjK[PgK'[<E0-m,R);2%:gb4G8_F;B"0`T^Eg5)C="TrM:(N.bJPgKAiC:e6@X]?
%C`.HJ4f\RJI.4tp;C?C.i01MGGcSK4[&M6+:s\L16JOS[Jo+K\l`K<"<Ki=(9(muO9!j8E:hWfE's;7V10TP!kN6Lo/L;A(F)d7i
%M5Q#JF]E!A(hC6X!MNMY<"A=RS0_.LWL5qIXlpJqHWH-!N>Ae)1X?4po#erdg[KEWhdJANeb?.K:+S'Ld5297DF[N_lHYSg!2^C9
%X\a;MT<)E+(%85afbq&CQ)*e"XCNBRS#>U0,/DX"#'PlmV2Tu5/VU(,,$GCWYc,#)?D[D]l4-0lP=#Y_A+JQ<Wd@Y1DZf+nY_Qe,
%W*V'mVar,(6&;q^QZY7pd<2<s?!nXXlC^K>-C*"fXMG`&#JJ?qXOO0kc!J(aLaJVJC2&USYVbPi]=Luc7_Lo?oFgf&N.f`[b[5.4
%Q-*m?S$a_m&s*H/pRfsOQsE.s82[!alFrUV?ri_m9rUd6?HgMk7DpV%RiI)mX^-:I=g8)3eG_Wj?FR3`G>U?lQLSWuQXHtRH+>)I
%V<qV0(cj2VB`3OsEPaDL<P:g(DtmOI&n)\8/guJD]'.o#m_?K7(2k:U4sE$4"%`sdV7iZNY^>(bCGq)nZX4G)qT*)XogU8%e^T6W
%9PWP7+AOPcSuaOjBU(3STKVmGmCXS@27I'c$d&R'AHu@&[KF\G*`Ve@A4)J*q@B#H(HAE&6BRO1SF?!Pi@[-=;2+h"<!+"Yj\[#,
%KRm!s`^rT(lIJ(j8)m=Hfb!qZ4t2SeH[_qrVW)lKqj5q7?3fcgH2ZLtnZ0F8^AX\]?46MpJ,\`%;97K!".8]WFjZ+BB@Fs8cN!L>
%roS?q^\tA9n;i(qoDegeO$E[DO+6rLTDnEKIl6T]XO4TWp\3SEiBRA<:VZqIn%SbVYCHM3+!:OCkJ-rbcbH`iJ,encZ&qL+s5@=6
%qjS\brpCm.l1t$K5QCD;J,8cG?iTYGr8GEhgUI4Ra+)&^Wt+aQ#QDp8J+qk#S3tVLr-Lg2q7$AW7_T/K?Q]%.5Q:K)J,G]Zs#9i4
%YQ!\[p32#dmJm!sJ+Yc#r9G0gO8h'9l[SiMJ,AEdr8kD;q@EVb"oRb;qT\JXqd9?pS)=8@m@Sk#2o#7!hu*'"Dnl+c+7+W0qld2Q
%qY%NcrV#.Jr5V&#p=m@\pHSXQ6gQ"'n@*oE+9/OrlMQ,dM2Ek~>
%AI9_PrivateDataEnd
