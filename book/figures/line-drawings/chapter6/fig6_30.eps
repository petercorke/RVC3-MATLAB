%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig6_pose_graph_edge.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 2/11/2022
%%BoundingBox: 0 0 295 121
%%HiResBoundingBox: 0 0 295 121
%%CropBox: 0 0 295 121
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-02-11T13:34:25-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>108</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqkHmrWr2307VLbSJba31a3sXuo7y+fhZ24qV9SdlEjgIAz04UbjSo3IVY1+T3mK8v7XUNLvfN&#xA;Vp5tlsjDPBqMUbW14IbpCwS8teCrEysp4fESV+0Fpuq9ExV2KuxV2KuxVIvMHmKewsIr/TohqEC3&#xA;P1e5jiBZmLq0aCJgQtfrBjRjuBv0IxVil15u833V/p8tnYNA4kks2tZC/pG5igc3byUI5wxPx9Mi&#xA;hYq1D8QxVQl8+ebL+8SDTYVWO4tQB+4cqJpNNN5GyS8h8UknwIu+yknqKqp3d69rLeT9P1S2vbdn&#xA;W5theXQjlWIxeoqScqjlSv2zTx6YqlKeePMWntqMj2wnsYpb0QzTeopeaOA3CqnJv3cC0/a8aCnE&#xA;4qmFz5u8xQeStN1lJdOlu5rmKC9mUSvbUluPRrFwNW41+JgSNjxrtiqFk/MvVZJWNtaQIIrcNPaT&#xA;GQSpK1s06ys54Ktv6hjiUso5Fuo4nFW9N/MLUL3VdEsY5rYx3Jf9ITTQvbvIS5RIrWEST8uNPidX&#xA;de9QMVRmteddYtvMhsrSFHsrW6tba8jaGRpPTuDHzuDLzjSNV9ZVReLFzy7DFUr1Tz75wTRra/ht&#xA;YoWuWuRbxxQyXLyfVAwbkOSKgkcA9dkDGtaDFVPU/PHmRYNZ0+8WL1UtXe3n01Z1khf6oLmN3JJH&#xA;E14/aBrQb1riqetr+r3nlLzLJqdlHFeWKSolmplpxksorhElKsrkgz8HKEdDTFUJdefNUtb1o9N0&#xA;d5tEtWt0D+hLFIyTpxiihjbjuX7kBVWleoOKoaT8xtfjudLZ7OH0riGX69ZGK5W4FxA0IlihYgq3&#xA;EXApsQSCKjFVsPm+G1+p3N1BNe3VnDq8hLxXLyLOkyMkCMFKbROwZ+J4gU23BVdov5iavNcaRb6j&#xA;PZFrtiLlrCN7pS7ylI4kKyqQAOsqCRagg0puq9IxV2KuxV2KuxV2KuxV2KuxV535vsbzStR1y7t5&#xA;xcax50ig0PQbWJRDLC8NvO/Np2Zx6cXOadj6ewFKMaDFUy/Lfyt5j8uWc1hqKaLb6ciRJp9potrN&#xA;b8eClXMzyyP6hO29K1rU4qy9ZoWleJZFaWMAyRggsoavEkdRWhpiq/FXYqp3FzBbQvPcSLFCgq7s&#xA;aAdsVS70rvVd51e100/ZtzVJph/xb3jQ/wAn2j+1TdcVTSONI0WONQiIAqIooABsAAMVbxV2KuxV&#xA;2KoTUNNgvYYYpCUWCeG4QJQfFA4dR06VXFUXiriqkgkAkdD4VxVLLvy9Y3eox3s8k7GNo5Pq3rOL&#xA;cyQnlG7RV41VqH5gHtiqZ4qhbTTobW6vrlCxkv5VmlrSgKRJCFWgG1I679ziqKxV2KoWTToJNUt9&#xA;RJb17aCa3RQRxKXDxO5Ip1rbrT6cVRWKtKqqAqgADoBsMVbxV2KuxV2KuxV2KuxV2KuxVhf5p+R7&#xA;TzRokFw15f6dqOhSnUdNvtKHO8WRI2VkjSh5+orU4jqaYqlf5Jp51bTNUufMF9qN7ps9xG2hNrUC&#xA;W2oCERD1WliQnijSH4A29BXuMVTfyFdXOo6v5t1SZ1kg/Sz6bYP6UKSehp6LG6vLGiPIEunnVeZP&#xA;EDxJxVmOKoW+1CG04IVaW4lqILaMVkcjrQGgCiu7MQB3OKqNvp0ssyXmpFZLhDyggUkwwH/JqBzf&#xA;tzYV8AtSMVTDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVO4uLe2h&#xA;ee4lSGCMVklkYKijxLGgGKsS1v8AOH8s9G0aXWrvzDaS6bBcrZS3FmxvQty6NIsRFqJiGKox+jFW&#xA;J+YP+cofy10by9pOvhNQ1DT9alu4bI2sEYflZMiymRZ5YSo/erx774qh/M3/ADklaaOmjyW3lTVd&#xA;Tj1jTYdUU26qfRWd5EEUvEPSRTCajFV3mT89VTzY/kpvK+slbqWCzOsWhaJY/raofVSRRVfT9Xc1&#xA;7YqoeSfzp0Cz8zL+Xdn5X1WyNrNexxXkwVopfQ9aee4d3KsfWaN3rTcnFUR5V/5yj/LzzPFq5s7f&#xA;UrH9DafLqd3JdwQ8RBCyIxURTyFm5SrRdq4qj/K357/lFe6LqevRaxIsOnvbR6rf3lvMsge7Z1gS&#xA;iodqxvRUHFevcnFWU6d+av5b6hpceq2/mXTxp005tIrmedLdWuFVXaJfWMdXCyKePXfFWR2eoWF9&#xA;BHPZXMV1BKvKKWF1kRlB41VlJBFRTFVfFXYq7FXAhgCDUHcEdCMVSfW/OHljQ2CarqcFpKRyELtW&#xA;Snj6a1an0Zl6fQZ82+OBkPs+bRl1OPH9UgG9F83eWdcJXStSgu5AORiRx6gHiYzR/wAMdRoc2H+8&#xA;iY/d81xanHk+mQKb5iN7sVdirsVdirsVdirsVdirsVdirsVdirsVYp52/NTyF5JEY8x6vDaXExX0&#xA;rQEyTsGNOXpJyYJ/lGi++KsNi/MH83db/MeXy/pnlM2HlGznltr7zFK3J3RoyIrm1eT04mALK/EJ&#xA;JUdaYqg/K/5BeYpYdYH5h+cbzzMmuWf1O608F1giAlSZHiaRmoyPH8PGNQKnbFWYeXfyQ/K7QNHm&#xA;0ez0GC4sLiaO5uYb7leLJNCrLHIy3BkWqiRhsAN8VZfYaVpenwR29hZwWkEVfSigjSJF5fa4qgAF&#xA;e+KorFXYq7FVG4srO5V1uII5ldfTcSIrhkJrxNQaivbFUnuvIXke6sLjT59A097K7dJbq3+qwhJJ&#xA;IySjuAo5MpY0J8TirH9W/Ij8qtU0ODQ7jQkj0u2nkure2tpp7dUnmVUeSkUigkqgHxVxVjvmr/nG&#xA;DyFrtho9nFe6lpceg27Wumi2nRlVHmaZi/qxyMWLSHcMO3hirtb/ACU88y+Z7PVtC/MLUNM022Sy&#xA;gfRR65haKziSJ6stwFLS8CTWPqx3xVE2Wjf85C2n5jyXVzren33kOe9nlSwVE+sxWh5tDFVoYm5f&#xA;ZUn1W8cVSfSfzE/Pq10/zFJ578rWekWul6Ne38Gp2rgo09vFyiiqtxcLycmux7Yq+Y/y7/5yA/Mf&#xA;yNatp+nX31vSShSPT7weqkJP7VuT8UZXqFHwV6qcnjkBIGQsXy72MwSCAaKfaZ53sfMU7zSXDHUp&#xA;iXmjuGrKzHckMft/RnpXZnaunzxEYeiQ/h5fLveQ1miy4yTL1Dv/AFp3aXl1Z3MV1aSvBcwsHimj&#xA;JVlYdwRm1yY4ziYyFguFGRibGxfVX5bebH80eU7XUZgBeITb3gGwMsdKsP8AWUhvpzzDtbRfls5g&#xA;Pp5j3F7LQ6nxsQkefIsozWOY7FXYq7FXYq7FXYq7FXYq7FXYqhtU1PT9K0651LUZ0tbCzjaa5uJD&#xA;REjQVZiflirxW+/NbzT+aej6pp/5PyNp91Y3kNvcavfxGNJLSVW5y28hDiNkYCqsvqcDVQDtirKP&#xA;LP5HeX4oNFv/ADp6fmzzTpNr9V/S94hYOvqtKnON2dZGi58VkerU32OKvSwAoAAoBsAOgGKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KpN5x8rWPmvyzqHl2/nnt7LUo/RuJbVlSYJyDEKzrIvxU4mq9MVf&#xA;M/5xflb+Qn5f+XYYbaVG8xRzoz29xdPcXkkDK32rdCEUV4kMUUbdc2XZWTTwyE5xcK+1w9bHLKFY&#xA;jUr+x5f5V1S01K9nOnaZFZWFutDNwUSO7fZHwgAbA13Odj2Rq4Z8kvCxRhjj1oWT8Pt5uh12CWKI&#xA;45mUz06fj5MpzoXVPefyp8w+XPJvk/TLfzHqUOnXXmW+kk0qGclWkqI4V6A8VJUfE1BuN8869pc8&#xA;Z6qh/DER+8/per7IxmOHf+I29fzQO0dirsVdirsVdirsVdirsVeU/nB+al5oEw0LRGCak6B7u6ID&#xA;GFXHwqgO3NhvU9B89uo7B7FjnHi5fo6Dv/Y6btPtA4zwQ+rqe54hL5n8yS3BuJNVvGnJr6pnl5V+&#xA;fLOzGjwgUIRr3B546jITfEb97IvJerar5k/Mfy+3mTzFfPY26S2iaexV7a59dSno3CNswl5lWZgz&#xA;H4Rt1HMdudhwjA5cI4eHmOld47q+Tueze0pGQhM3fIvpbRtE0jRNNg0zSLOKw0+2XjDbQIERR8h3&#xA;PUk7nvnFvQo3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwX84vPHk7yv5OvV8x6pcaf9fheG0TT&#xA;pTFqLuRsbYqQQymnxH4R+1saFV+fVz5f8xcrCeawu+OtknS5pYnrd1fhWJiP3h5Gnw1xV9e6H/zi&#xA;2dL8t6fbWurCLUfSV9TSWPnGblwDJ6boVPFT8K1XoM6Tsrt6Omx+GYWOdg/e6jW9mHNPiEmSeWv+&#xA;ce9OtLtLnXb/AOvpGaizhQxxtTpzcksw9gB88yNZ7UzlHhxR4fM7n4NWDsWMTczfkh/O0ut3Pn3V&#xA;9C0DyRp3mRX0mztbue5lRYYYZ5XIiuWlI9JUEXJYIEJaokJFFGcoSSbLuwKev2FubextrcihhiSM&#xA;gO8gHFQPtyfG3T7TbnvgSr4q7FXYq7FXYq7FXYq7FXyr+bSXCfmJrQnrzMqla/yGJSn/AAtM9P7D&#xA;IOkx13fpLxvaIPjytiObVwkXpDOurWTRuI5FniKSMaBSHFCT2AynUkDHIy5cJv5NmEEzFc7D7NBB&#xA;FRuD0OeQvduxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtMyqpZiFVRVmOwAHc4q8M/Mr/nJzTNPv/wDD&#xA;H5e2p80+ap29GJrdWltY5DUUHp/FOw8E+HxbamKpd+Xv/OOmr6xrI86/nDeHW9dlIeHRpGDwRU3U&#xA;Tcf3bBT0hjHpj/KrQKvddR8vaHqX1D69Yw3H6LnjutO5oD6E8QIjkj/lK12xVMMVQ+pahbadp11q&#xA;F03G2s4ZLidh1EcSl2P3DFXlul/ltb+ftOg84+YNU1C0uvMMNreHT9Iu2tLaO2VTJawyelvPIiS/&#xA;HIx+19nioAxV6Dq2sQ6P+i9PhntTd3c8NtDb3156M0kQIErRGQSPPKifFx6t3YYqnOKuxV2KuxV2&#xA;KuxV2KuxV51+av5Wf4rWPUtNdIdZt09Mh9knjBqFYj7LLU0NPY+3Qdi9tflbhPfGfsLq+0ez/G9U&#xA;frH2vFZfyu/MCO5+rtodyZK05KFaP/kYpKfjnYjtnSGN+JH8eXN0B7Pzg1wlmuh/843rq+h3kHm6&#xA;4ls3u4+EEFlInqRGteTuQ6MdqcRUU75zPbXb0csTiw/SeZ7/ACDuOz+zDA8eTn0DHF8n/wDOR35Q&#xA;b+Vb0edPKcJqNMkVpJY4x2WAt6qewgdh3K5yju2W+S/+cs/IGryjT/M0M/lXV1b05YrsF7cONiPW&#xA;VQyb9fURaeOKvaNP1HT9StI7zTrqG8s5RWK5t5FljYeKuhKnFURiqVeZtfi0LSJNQeCS6cMscFrC&#xA;C0kssh4oigAnc+AOKsen/MEvrmmadHAbVJpn+uSSshISGzNzOnEfF+7LKC38wIxVqX80rKKG8L6b&#xA;cC5hihmtbNSkk0wuX4RKUjLmN91JQ1YKa0xVF+aPO7aFFotzPblItSLLNBIyRmNzGGVXkdlRApPx&#xA;HFWQaNqLalplvfNbyWpnXl6Eoo67kCvseo9sVRmKuxVp3REZ3YKiglmJoABuSScVeR/mD/zk/wDl&#xA;p5TEtrZXP+ItYX4VstOYNGH6Ukud413FDx5MP5cVeef4c/5yB/OwhvMMp8leSZaEWCq6STx1rvCS&#xA;JZaim8pVO6rir238uPyi8j/l9Y+hoFkPrbqFudUnpJdzf60lBxX/ACUAX2xVmeKuxV2KrLiCG4gk&#xA;t50WWCZWjljYVVkYUZSD1BBxV8zaz+U2maP5yj8t/l5J5tstdtri0nS7MjfoK1t5JOcrNK3pvIBH&#xA;UcQx5N8PXlir1vWJYNf/ADb8s2dtIs9p5cs7/VrxkYOguZj+jrZGpWjj/SevQqe4xV6DirsVdirs&#xA;VdirsVdirsVeXfmrrErazBpf+NYfJ9tZWb6o00RrcPMr+nF9b5qI0tQ1Bw5cpmJUU41Kr0Dy5qE2&#xA;o6Bp1/NJbzS3dvFM81k7SWzl0Dc4WdUYo1aioriqY4q7FWLec/yv8hedIuHmTRre9lC8Uu6GO5Qd&#xA;gs8ZWQD25UxV43f/APOKvmDy7dyaj+V/nO80acnl9SuncRuR0V5oKcl9nibFVIfmB/zlX5JPDzJ5&#xA;Vi812EfW9sUDSsq9TWzrwHu8GKqyf85a/lxq0B0vzj5f1PSZQymSMASrG6mtfURredSPZMVZVo/5&#xA;v/8AONl6jLaanp9s0vDmtzby21DGhjQEzRotFRyNjTc++Ko7QtX/ACnni9G783eX72MRBLaCzuYL&#xA;NlHqeo8r0uHl9V2C8mBXp74qyS482flILGOC41zQxZW0RgjjkvLURpE6+mUoXpQrtiqVx/m7+SPl&#xA;y0NtB5q01YVYuwhujesWbckshmdvDr7dsVYxrn/OXn5PacHFlcXusOv2RaWzIpP+tcm329/urirG&#xA;W/5yI/OHzd+6/Lv8vphDJsmpX4kkiIPQ8v8ARoEP+tIwxVYPyH/O3z8yy/md5yaz05yGbRrAhxSt&#xA;eLJGIrZSOzfvMVemflp+T/5ZeUGppejBNdt6Ga7vyLi7HhJHIRwCNTZolX3AaoCr0jFXYq7FXYq7&#xA;FXYq7FUHYaNo+ny3M1hY29nLeyGa8kgiSJppCSS8pQAu1WO7YqjMVdirsVdirsVdirsVdirxHzpa&#xA;X/mfz1ca3oPk6y88WWlWi6XbTanLDBZwXyXErXZi9ZXFzx/doxAojKQrV5DFXrunanGfqen3pt7T&#xA;W5bUXMulRTCVkRSqSFPhjZ40dwnPgBiqY4q7FXYq7FXYqgdV0HQ9Xh9HVtOtdRhpT07uGOdaHtSQ&#xA;MMVYXqf/ADj5+TGpEm48qWaFq1+q+paDfwFu8VMVY/c/84mfkpNX09Lubarcv3V5cGg/l/eNJt+O&#xA;KqMf/OIv5Mq4ZrS9kA6o13JQ/PjxP44qmth/zjD+SFkwceXBPIP2ri5u5R1B3RpeHb+XFWYaL+W3&#xA;5faGwfSfLem2Uq0pNFawiXbpWTjzP34qyPFXYqhr7T4btUJZop4iTb3MdBJGx7qSCN+6kEHuDiqh&#xA;a6hMk62WohY7tv7mVaiKegqfTqTxagqUJr4VG+KphirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;ir54svN/54flT5O+pav5KtNX8v8Al5RG2t22oRQtNCZaCUwkyzF35iv7utdyMVek+UPMN/rP5kea&#xA;onuuWlaVFZ21hZyxQpMs00KXF38QRZuKepCCrE0YmvbFWfYq7FXYq7FXYq7FXYq7FUp82vAnlnU2&#xA;uNVbQ4BbSerq6MitbKV3lVnBUFexxV4b5E8p6bZ6pZXs/nHWrbyZc3lv+i9I1nUFkutVvWlUQP8A&#xA;V40ikggMjKfTarSbM4RRuq9r8ueY4tbv9Z+qXUFzY6dcrZKscU0c0NxHGrTxTmWiswLqRwGwO+Ku&#xA;8weYo9P1TRdLjuoYL3Vbr044riKd/WijRpJkheIcFlCryHM0p2xVPcVdiqldWtvdQNBcIJImpVT4&#xA;g1BBG4IIqCNwemKoGO4u9PlS3vS09q5CQX1KspJosc4HjX4XAof2qGnJVGLf2TTvbrPGZ45BC8XI&#xA;chIY/VCU619P4qeG+Kpbp3nDy/fsyxXcaEuywCR1UzKkKTmSIVqyenIGriqhF5+8oSy28cepw1uW&#xA;ZIy59OjIgf4ufErVWBWvWu2Kqmqec9C064vrWWYNe2EMdxLaKyCRkk5H4AzDkyrGWI7CniMVRTeZ&#xA;fL6iI/pG3b17j6lDxkVuVxUL6Q4k/ECQCMVV7nWNItZDHdX1vBIpVWSWVEILAsoIYjqFJHyxVKT5&#xA;78vDVLezN1E0N5FC9ldxv6iSvNK8PAcAaUaOnImlTQ0PVVETecvK8N1FbPqdt6ksslvtLHRJYl5O&#xA;rnl8JHTfvtiqOn1fS4L+HT5ruKO+uFLQ2rOBIyivxBOtPhO+KqFv5l8vXFvJcxalbNbxFhJL6qBV&#xA;4MFapJGwLrv03HjiqtLrOkxagmnSXkKX7qZFtS6iQoAWLca1pRSfoxVDWvmvy1d/Vhbanbym8LLa&#xA;qsikyFG4NwHUgNtXFU1xV2KsT1r8rvJ2uea7bzPq1tLe6hZpGttDLPKbVGifmj/V+Xplg2+4p3pX&#xA;FWQWejaRZXl5e2dlBb3moMsl/cxRqkk7IvFTK4AL8V2FcVRmKuxV2KuxV2KuxV2KuxVKvMflbQfM&#xA;lpBZ65aLfWVvcJdLaSljC8kQPD1YwQsqDlXg4K1oabDFWOaF+SX5W6D5mPmXSNAgtNWFTFIhk9KI&#xA;sCGaGEsYoyQafCop2pviqV+W7Dzj5K8s0uk0+51bVfMTTXaiWUmaPUrw+o6NwFZVjccV48VRKlut&#xA;FVaK9s/Nf5vWFzp8yXmk+U9NumkuYTyjGpX031X0iw25xw2stR25e+KvRsVdirsVdirGNe8g6brG&#xA;oTX8lzPbXEkaJG0DcPTdTR5V/wAt4v3Vey9MVQs/5Y6O8t1LDM9u9y70MYUGKFrCSxSKL+UIJi49&#xA;+uKqun/l/Bp8qz2+oTG6W7N21xIkcjEvAkMqUYcQG9MMtB8HQbbYqite8nJq0t86X0tmupWq2l2s&#xA;SRksE58GDsCy09TcA70HvVVLv+VaWcOp2V3Y3KW8NjO00Fu9uk3pqyQIREXPFH/0b+8Kk7+O+Kph&#xA;rHkq01K81S8eULc6jZxWSSNGH9KNGZnpuOQl5AMNthiqAP5bWp1C3vvr0nrj/e8+nH+//wBJW7ot&#xA;B+6BkQD4f2duvxYqv0r8vF09bSRNSc39p6Ua3SwxKDDCsihPTYOOTGZ3ZzU8jXptiqM1nyjPqOsD&#xA;UY9VuLIemsMsNvRRJGvL4HNeLLWRj8Skip4kYqlVp+VOl/U7a01G4+s29vFPCttBEltCROEFSily&#xA;zKUL1ZieZr2ACqrN+XVxK9wza/fE3cUkN05485VkjZKSUpGwQuSnwVXoDTFXaZ+XlxYzWEsWrtAb&#xA;Livp2UCWsbRCQyGIorNyRi2/qczWprU4qzPFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVkXoV&#xA;f0uNeR9TjT7fflTviq/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-02-11T13:34:26-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-02-11T13:34:26-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>295.000488</stDim:w>
            <stDim:h>121.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:76A75751678BEC11832FC73D79298F35</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:76A75751678BEC11832FC73D79298F35</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:76A75751678BEC11832FC73D79298F35</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76A75751678BEC11832FC73D79298F35</stEvt:instanceID>
                  <stEvt:when>2022-02-11T13:34:26-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -121 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 121 li
295 121 li
295 0 li
cp
clp
73.73 79.918 mo
73.73 79.8984 73.7148 79.8516 73.6841 79.7773 cv
73.6372 79.7617 li
73.605 79.7773 li
73.5938 79.7773 73.5781 79.7773 73.5591 79.7773 cv
73.5352 79.7773 73.52 79.7773 73.5122 79.7773 cv
73.5 79.7773 73.4878 79.7773 73.48 79.7773 cv
73.457 79.7773 73.4409 79.7773 73.4341 79.7773 cv
73.3242 79.8555 li
73.2148 79.8711 li
73.1519 79.8867 li
72.9492 80.1523 li
72.8091 80.2461 li
72.6211 80.5898 li
72.5122 80.6523 li
72.4878 80.8008 72.4341 80.918 72.3398 81.0117 cv
72.293 81.0898 li
72.3872 81.0391 72.4839 81.0117 72.5898 81.0117 cv
72.6841 80.9648 li
72.7148 80.8711 li
72.8872 80.8711 li
72.98 80.7305 li
73.0591 80.7305 li
73.1841 80.7773 li
73.2461 80.6055 li
73.3242 80.6055 li
73.3242 80.4648 li
73.48 80.4336 li
73.5269 80.4023 li
73.543 80.293 li
73.6992 80.0586 li
73.7188 80.0195 73.73 79.9727 73.73 79.918 cv
73.73 79.918 li
cp
74.918 83.3711 mo
74.918 83.4648 74.8438 83.5859 74.6992 83.7305 cv
74.6558 83.8555 74.5938 83.9609 74.5122 84.043 cv
74.4492 84.0586 li
74.3091 84.2773 li
74.0898 84.3242 li
73.8711 84.4648 li
73.7461 84.6836 li
73.6211 84.6523 li
73.5269 84.6914 73.4531 84.7188 73.4019 84.7305 cv
73.3242 84.8398 li
73.3008 84.8281 73.2661 84.8242 73.2148 84.8242 cv
73.1089 84.8242 73.0122 84.8945 72.918 85.043 cv
72.7461 84.9023 li
72.7148 84.9023 72.668 84.9023 72.605 84.9023 cv
72.5 84.9023 72.4102 84.8867 72.3398 84.8555 cv
72.1372 84.8555 li
72.043 84.793 li
71.7378 84.75 71.5469 84.6367 71.4648 84.4492 cv
71.4648 84.418 li
71.3242 84.3398 li
71.2461 84.1367 li
71.105 84.043 li
71.105 83.8711 li
70.9648 83.3398 li
70.9961 82.9023 li
71.043 82.7148 li
71.043 82.4648 li
71.0898 82.2617 li
71.0898 82.1836 li
71.168 82.043 li
71.1519 82.0586 li
71.1519 81.9883 71.168 81.9141 71.1992 81.8398 cv
71.1992 81.7773 li
71.168 81.4805 li
71.168 81.3477 71.23 81.2266 71.355 81.1211 cv
71.355 81.1133 71.355 81.0898 71.355 81.0586 cv
71.355 81.0273 71.3398 80.9648 71.3091 80.8711 cv
71.2852 80.7695 71.2769 80.6953 71.2769 80.6523 cv
71.2769 80.5508 71.3008 80.4453 71.355 80.3398 cv
71.418 80.4453 71.5039 80.4961 71.6211 80.4961 cv
71.668 80.4961 li
71.6758 80.4648 71.707 80.4297 71.7622 80.3867 cv
71.832 80.1914 71.9219 80.0234 72.0269 79.8867 cv
72.0742 79.8242 li
72.0742 79.793 72.0981 79.707 72.1519 79.5586 cv
72.2461 79.5586 li
72.2769 79.4961 li
72.3711 79.4648 li
72.4102 79.4023 72.438 79.3672 72.4492 79.3555 cv
72.457 79.3477 72.543 79.3008 72.6992 79.2148 cv
72.73 79.1523 72.7808 79.1016 72.855 79.0586 cv
72.8872 79.0391 72.9219 79.0195 72.9648 78.9961 cv
73.0122 78.9336 li
73.23 78.8633 73.3628 78.8242 73.418 78.8242 cv
73.4878 78.8242 73.5508 78.8398 73.605 78.8711 cv
73.668 78.8555 li
73.7461 78.9023 li
73.8398 78.9766 73.938 79.0391 74.043 79.0898 cv
74.2461 79.2461 li
74.2461 79.293 li
74.4219 79.4414 74.5122 79.6445 74.5122 79.9023 cv
74.48 80.0273 li
74.5122 80.418 li
74.4019 80.4961 li
74.293 80.8086 li
74.0591 81.0586 li
74.043 81.2461 li
73.793 81.4336 73.5591 81.5859 73.3398 81.6992 cv
73.2661 81.8047 73.1558 81.8555 73.0122 81.8555 cv
72.9648 81.8555 li
72.7461 81.9961 li
72.543 81.9961 li
72.2622 82.1211 li
72.043 82.0117 li
72.0269 82.0117 li
72.0039 82.0742 71.9878 82.1758 71.98 82.3086 cv
71.8711 82.3711 li
71.8711 82.5117 li
71.793 82.7305 li
71.813 82.918 71.8242 83.0391 71.8242 83.0898 cv
71.7769 83.1367 li
71.7769 83.2422 71.77 83.3164 71.7622 83.3555 cv
71.7622 83.3672 71.7622 83.3828 71.7622 83.4023 cv
71.7622 83.4141 71.7622 83.4258 71.7622 83.4336 cv
71.7622 83.4961 71.793 83.5508 71.855 83.5898 cv
71.875 83.6836 71.918 83.7422 71.98 83.7617 cv
72.0591 83.8398 li
72.3242 83.918 li
72.3242 83.9492 li
72.418 83.9648 li
72.8242 83.9961 li
73.0591 83.9648 li
73.1841 83.8711 li
73.2622 83.8555 li
73.3711 83.668 li
73.4341 83.6523 li
73.73 83.5586 li
73.77 83.5078 73.8242 83.4609 73.8872 83.418 cv
73.9341 83.3555 li
74.0898 83.3242 74.1758 83.2422 74.1992 83.1055 cv
74.313 82.9922 74.457 82.9336 74.6372 82.9336 cv
74.6841 82.9336 li
74.8398 83.1133 74.918 83.2578 74.918 83.3711 cv
74.918 83.3711 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.360784 .360784 .360784 rgb
f
79.4731 80.5586 mo
79.4258 80.543 li
79.3711 80.5117 79.3198 80.4609 79.27 80.3867 cv
79.2271 80.3164 79.1841 80.2422 79.145 80.168 cv
79.0698 80.1484 79.0039 80.0977 78.9409 80.0117 cv
78.8789 80.0117 li
78.6602 79.8867 li
78.3789 79.8242 li
78.1128 79.8555 li
77.8481 79.9336 li
77.7539 79.8555 li
77.6602 79.8867 li
77.6602 79.9336 li
77.5508 79.9648 li
77.4771 80.0898 77.3672 80.1992 77.2231 80.293 cv
77.1128 80.4961 li
77.02 80.5742 li
76.9409 80.7617 li
76.9102 81.168 li
76.8008 81.2617 li
76.8008 81.4805 li
76.6758 81.5586 li
76.707 81.8398 li
76.5039 82.2461 li
76.457 82.4336 li
76.4409 82.7461 li
76.5039 82.8867 li
76.4258 83.0117 li
76.5039 83.0898 li
76.3789 83.3086 li
76.4409 83.418 li
76.4878 83.5586 li
76.5508 83.6055 li
76.645 83.6055 li
76.7539 83.5117 li
76.8481 83.5273 li
77.0508 83.4492 li
77.0659 83.3711 li
77.3008 83.293 li
77.332 83.2148 li
77.4731 83.1367 li
77.4731 83.1055 li
77.77 82.793 li
77.9102 82.7305 li
77.9878 82.5742 li
78.145 82.5586 li
78.332 82.3398 li
78.3008 82.3086 li
78.3789 82.2305 li
78.5039 81.9805 li
78.6128 81.8711 li
78.6758 81.6055 li
78.8628 81.543 li
78.9878 81.3555 li
79.0352 81.3242 li
79.0352 81.1055 li
79.2231 81.0117 li
79.4731 80.5586 li
cp
81.2539 83.4961 mo
81.1128 83.9961 li
81.02 84.1367 li
80.895 84.3359 80.77 84.4336 80.645 84.4336 cv
80.5508 84.4336 80.4258 84.3633 80.27 84.2305 cv
80.02 83.8711 li
79.9102 83.6523 li
79.8628 83.4492 li
79.7539 83.0898 li
79.7539 82.5586 li
79.7231 82.1055 li
79.7539 81.8398 li
79.7378 81.7773 li
79.4409 82.1992 li
79.395 82.1992 li
79.395 82.2305 li
79.1909 82.5586 li
78.8481 82.918 li
78.5981 83.2617 li
78.332 83.5117 li
78.2578 83.6484 78.1758 83.7617 78.082 83.8555 cv
77.8481 84.0117 li
77.6909 84.2148 li
77.4258 84.293 li
77.332 84.4336 li
77.0659 84.4805 li
76.8481 84.6055 li
76.8159 84.5898 li
76.7852 84.6523 li
76.4102 84.6055 li
75.9731 84.293 li
75.8481 84.1602 75.77 84.0117 75.7378 83.8555 cv
75.7578 83.8477 75.7729 83.832 75.7852 83.8086 cv
75.8052 83.7891 75.8198 83.7734 75.832 83.7617 cv
75.8198 83.7617 75.7729 83.7461 75.6909 83.7148 cv
75.582 83.4648 li
75.645 83.3867 li
75.582 83.2461 li
75.645 83.0742 li
75.6128 82.8555 li
75.707 82.5117 li
75.707 82.1367 li
75.7852 82.0273 li
75.7852 81.7773 li
75.8789 81.6211 li
75.895 81.4336 li
75.9258 81.418 li
75.9258 81.2617 li
76.0352 81.0742 li
76.0659 80.9023 li
76.145 80.7773 li
76.1758 80.7148 li
76.2231 80.418 li
76.3008 80.168 li
76.3628 80.1055 li
76.395 79.9492 li
76.5508 79.7773 li
76.5591 79.7461 76.5981 79.6641 76.6602 79.5273 cv
76.957 79.4023 li
77.145 79.1992 li
77.6909 79.043 li
77.7852 79.043 77.8521 79.0391 77.895 79.0273 cv
77.9878 79.0742 li
78.0039 78.9805 li
78.2852 78.9492 li
78.3789 78.9961 li
78.4731 78.9805 li
78.5352 79.043 li
78.77 79.0586 li
78.8159 79.0117 li
78.8789 79.0586 li
78.9878 79.0742 li
78.9878 79.1523 li
79.0352 79.1992 li
79.2852 79.2461 li
79.457 79.4492 li
79.707 79.6211 li
79.7539 79.7461 li
79.77 79.7617 li
79.8159 79.5898 li
79.895 79.4336 li
79.8628 79.1523 li
79.9102 78.6523 li
79.8481 78.4648 li
79.9409 78.3242 li
79.895 78.1836 li
79.9258 77.8555 li
79.895 77.5586 li
79.7852 77.4805 li
79.957 77.293 li
79.957 77.1523 li
79.957 77.0195 79.9019 76.8711 79.8008 76.7148 cv
79.8628 76.7148 li
80.0039 76.5117 li
80.1172 76.4922 80.2271 76.4805 80.332 76.4805 cv
80.4341 76.4805 80.5229 76.5078 80.5981 76.5586 cv
80.7231 76.6016 80.7852 76.793 80.7852 77.1367 cv
80.7378 77.1367 li
80.7231 77.1836 li
80.832 77.2773 li
80.7539 77.4648 li
80.8628 77.6992 li
80.8008 77.7617 li
80.832 77.8242 80.8481 77.8828 80.8481 77.9336 cv
80.8481 77.9883 80.832 78.0508 80.8008 78.1211 cv
80.8628 78.1836 li
80.8828 78.2148 80.895 78.2695 80.895 78.3398 cv
80.895 78.4336 80.8711 78.5195 80.832 78.5898 cv
80.7891 79.0898 80.7539 79.3984 80.7231 79.5117 cv
80.73 79.543 80.7378 79.582 80.7378 79.6211 cv
80.7378 79.6953 80.7231 79.7617 80.6909 79.8242 cv
80.6909 79.9023 li
80.6909 79.9961 80.6758 80.1055 80.645 80.2305 cv
80.6128 80.5898 li
80.5508 80.6836 li
80.582 80.793 li
80.5352 80.9648 li
80.582 81.1211 li
80.4878 81.4961 li
80.5508 81.7773 li
80.52 81.9336 li
80.5352 82.168 li
80.5659 82.2305 80.582 82.2852 80.582 82.3242 cv
80.582 82.3672 80.5742 82.3984 80.5659 82.418 cv
80.645 82.4961 li
80.5352 82.7305 li
80.645 82.9805 li
80.5981 83.0586 li
80.645 83.1367 li
80.5981 83.1992 li
80.7378 83.3398 li
80.9409 83.3555 li
81.2539 83.4961 li
cp
f
88.2461 82.8711 mo
88.1519 83.3086 li
88.168 83.4492 li
88.1519 83.4961 li
88.1841 83.5703 88.1992 83.6445 88.1992 83.7148 cv
88.1992 83.7578 88.188 83.8047 88.168 83.8555 cv
88.168 83.8711 li
88.168 83.9648 88.1289 84.3594 88.0591 85.0586 cv
88.0269 85.2773 li
88.0269 85.3242 li
87.9961 85.418 li
88.0122 85.4961 li
87.9648 85.5273 li
87.9341 85.6055 li
87.8872 85.6055 li
87.9019 85.668 li
87.8711 85.7305 li
87.8711 85.793 87.8481 85.8477 87.8091 85.9023 cv
87.7461 86.0898 li
87.7231 86.1836 87.688 86.2656 87.6372 86.3398 cv
87.5742 86.4414 87.4731 86.582 87.3398 86.7617 cv
87.1372 86.918 li
86.9019 87.1055 li
86.7148 87.1836 li
86.5742 87.293 li
86.48 87.3242 li
86.3242 87.4063 86.145 87.457 85.9492 87.4805 cv
85.8711 87.4648 li
85.7622 87.5117 li
85.7622 87.543 li
85.625 87.5742 85.5122 87.5898 85.418 87.5898 cv
84.9492 87.5898 li
84.6519 87.5273 li
84.4019 87.5742 li
84.293 87.4648 li
83.918 87.4336 li
83.6841 87.2148 li
83.5122 87.1211 li
83.188 86.9961 83 86.7813 82.9492 86.4805 cv
82.98 86.4336 li
82.9492 86.2461 li
83.043 86.0898 83.125 86.0039 83.1992 85.9961 cv
83.27 85.9531 83.3398 85.9336 83.4019 85.9336 cv
83.4019 85.9336 83.4731 85.9414 83.6211 85.9648 cv
83.7661 85.9961 83.918 86.0156 84.0742 86.0273 cv
84.0591 86.1992 li
84.1992 86.293 li
84.1992 86.4492 li
84.105 86.5586 li
84.6519 86.7305 li
84.9341 86.668 li
84.9341 86.7617 li
85.0122 86.7305 li
85.043 86.7305 li
85.0508 86.7305 85.105 86.7383 85.1992 86.7617 cv
85.2148 86.8086 li
85.3242 86.7461 li
85.4258 86.6914 85.6211 86.668 85.9019 86.668 cv
85.9531 86.6367 85.9961 86.6055 86.0269 86.5742 cv
86.0352 86.5742 86.0591 86.5781 86.0898 86.5898 cv
86.1211 86.5898 86.1411 86.5898 86.1519 86.5898 cv
86.2031 86.5898 86.2539 86.543 86.3091 86.4492 cv
86.3091 86.4688 86.3242 86.4805 86.355 86.4805 cv
86.3628 86.4805 86.3789 86.4688 86.4019 86.4492 cv
86.4341 86.4375 86.4531 86.4336 86.4648 86.4336 cv
86.48 86.4336 li
86.8711 86.0898 li
87.043 85.8242 li
87.0591 85.668 li
87.1841 85.4961 li
87.1992 85.3398 li
87.2769 85.1992 li
87.3398 84.8711 li
87.4341 84.5742 li
87.4219 84.5195 87.418 84.4492 87.418 84.3555 cv
87.418 84.1797 87.4409 84.0039 87.4961 83.8242 cv
87.4492 83.6367 li
87.4492 83.043 li
87.3398 82.8398 li
87.3398 82.5117 li
87.2461 82.2617 li
87.2622 81.8711 li
87.2461 81.8086 li
87.168 81.8398 li
87.0898 82.0117 li
86.918 82.168 li
86.6992 82.5117 li
86.3872 82.7305 li
86.043 83.0898 li
85.855 83.2891 85.6289 83.4609 85.3711 83.6055 cv
85.2622 83.7617 li
85.0742 83.8711 li
84.9019 83.9492 li
84.7461 84.1055 li
84.5591 84.1992 li
84.4961 84.2617 84.4058 84.3047 84.293 84.3242 cv
84.1128 84.4492 83.9102 84.5117 83.6841 84.5117 cv
83.5591 84.5117 li
83.5161 84.5195 83.457 84.5273 83.3872 84.5273 cv
83.3242 84.5273 83.2769 84.5195 83.2461 84.5117 cv
83.0269 84.4961 li
82.7148 84.1992 li
82.48 83.9023 li
82.3872 83.6523 li
82.3091 83.168 li
82.355 82.8242 li
82.48 82.418 li
82.4492 82.2773 li
82.5591 81.9023 li
82.668 81.6992 li
82.6992 81.5977 82.7148 81.4727 82.7148 81.3242 cv
82.98 80.8242 li
83 80.7617 83.0591 80.6953 83.1519 80.6211 cv
83.2769 80.418 li
83.418 80.2617 li
83.4492 80.1602 83.5161 80.0664 83.6211 79.9805 cv
83.6841 79.9492 83.7231 79.8945 83.7461 79.8086 cv
83.7769 79.7148 83.9258 79.6367 84.1992 79.5742 cv
84.1372 79.5742 li
84.1992 79.5586 li
84.2188 79.5195 84.2769 79.4336 84.3711 79.3086 cv
84.5122 79.3398 li
84.6211 79.2617 li
84.7461 79.1602 84.8789 79.1055 85.0269 79.1055 cv
85.1211 79.1055 li
85.418 78.9805 li
85.605 79.043 li
85.8242 79.043 li
85.9492 79.1055 li
86.0308 79.1172 86.0981 79.1523 86.1519 79.2148 cv
86.3091 79.3867 li
86.355 79.418 li
86.3872 79.4648 li
86.4961 79.6211 li
86.5122 79.6836 li
86.4648 79.8867 li
86.4961 80.0117 li
86.3398 80.2461 li
85.9961 80.293 li
85.8091 80.0117 li
85.6372 79.9492 li
85.5591 79.8711 li
85.4341 79.8711 li
85.3911 79.8828 85.3091 79.918 85.1841 79.9805 cv
85.168 80.0898 li
84.8711 80.0898 li
84.7852 80.207 84.6992 80.2695 84.605 80.2773 cv
84.563 80.3086 84.5161 80.3359 84.4648 80.3555 cv
84.3711 80.5898 li
84.293 80.6055 li
84.2769 80.7148 li
84.105 80.7148 li
83.9492 80.9648 li
83.8242 81.043 li
83.7769 81.2148 li
83.5898 81.4648 li
83.5591 81.6992 li
83.418 81.8398 li
83.293 82.3711 li
83.1992 82.4648 li
83.1992 82.5898 li
83.0591 83.043 li
83.0898 83.1992 li
83.0898 83.3398 li
83.1411 83.4141 83.168 83.4961 83.168 83.5898 cv
83.2461 83.6055 li
83.293 83.6836 li
83.4258 83.6836 83.5161 83.6992 83.5591 83.7305 cv
83.6289 83.6797 83.8242 83.6211 84.1372 83.5586 cv
84.188 83.4453 84.2539 83.3633 84.3398 83.3086 cv
84.4341 83.2578 84.6128 83.1602 84.8872 83.0117 cv
84.918 83.0273 li
84.918 82.9648 84.9409 82.9023 84.9961 82.8398 cv
85.1089 82.8008 85.1841 82.7695 85.2148 82.7461 cv
85.2769 82.707 85.313 82.6523 85.3242 82.5898 cv
85.5122 82.543 li
85.6372 82.4336 li
85.9341 82.0273 li
86.0122 82.0742 li
86.02 82.0547 86.1089 81.9453 86.2769 81.7461 cv
86.5591 81.418 li
86.5898 81.2617 li
86.6841 81.168 86.793 80.9141 86.918 80.4961 cv
86.8711 80.2461 li
86.7769 80.0742 li
86.8398 79.8867 li
86.7461 79.7617 li
86.7148 79.5898 li
86.6841 79.4648 li
86.8091 79.2617 li
86.9341 79.1914 87.02 79.1523 87.0742 79.1523 cv
87.145 79.1523 87.2461 79.1914 87.3711 79.2617 cv
87.4492 79.418 li
87.605 79.543 li
87.6372 79.8086 li
87.6558 79.8828 87.6841 79.9922 87.7148 80.1367 cv
87.7539 80.2109 87.7769 80.293 87.7769 80.3867 cv
87.7769 80.4648 li
87.8091 80.543 li
87.9341 80.7305 li
87.9019 80.9492 li
87.9648 81.043 li
87.9961 81.0977 88.0122 81.1602 88.0122 81.2305 cv
88.0122 81.2852 88.0039 81.3242 87.9961 81.3555 cv
88.105 81.3867 li
88.0122 81.6992 li
88.0591 81.918 li
88.0981 82.0039 88.1211 82.0742 88.1211 82.1367 cv
88.1211 82.1992 88.0981 82.2773 88.0591 82.3711 cv
88.1372 82.4336 li
88.2461 82.8711 li
cp
f
92.2578 79.918 mo
92.2578 79.8984 92.2422 79.8516 92.2109 79.7773 cv
92.1641 79.7617 li
92.1328 79.7773 li
92.1211 79.7773 92.105 79.7773 92.0859 79.7773 cv
92.063 79.7773 92.0469 79.7773 92.0391 79.7773 cv
92.0269 79.7773 92.0161 79.7773 92.0078 79.7773 cv
91.9839 79.7773 91.9688 79.7773 91.9609 79.7773 cv
91.8521 79.8555 li
91.7422 79.8711 li
91.6802 79.8867 li
91.4771 80.1523 li
91.3359 80.2461 li
91.1479 80.5898 li
91.0391 80.6523 li
91.0161 80.8008 90.9609 80.918 90.8672 81.0117 cv
90.8198 81.0898 li
90.9141 81.0391 91.0122 81.0117 91.1172 81.0117 cv
91.2109 80.9648 li
91.2422 80.8711 li
91.4141 80.8711 li
91.5078 80.7305 li
91.5859 80.7305 li
91.7109 80.7773 li
91.7729 80.6055 li
91.8521 80.6055 li
91.8521 80.4648 li
92.0078 80.4336 li
92.0552 80.4023 li
92.0698 80.293 li
92.2271 80.0586 li
92.2461 80.0195 92.2578 79.9727 92.2578 79.918 cv
92.2578 79.918 li
cp
93.4448 83.3711 mo
93.4448 83.4648 93.3711 83.5859 93.2271 83.7305 cv
93.1841 83.8555 93.1211 83.9609 93.0391 84.043 cv
92.9771 84.0586 li
92.8359 84.2773 li
92.6172 84.3242 li
92.3979 84.4648 li
92.2729 84.6836 li
92.1479 84.6523 li
92.0552 84.6914 91.98 84.7188 91.9302 84.7305 cv
91.8521 84.8398 li
91.8281 84.8281 91.793 84.8242 91.7422 84.8242 cv
91.6372 84.8242 91.5391 84.8945 91.4448 85.043 cv
91.2729 84.9023 li
91.2422 84.9023 91.1948 84.9023 91.1328 84.9023 cv
91.0269 84.9023 90.938 84.8867 90.8672 84.8555 cv
90.6641 84.8555 li
90.5698 84.793 li
90.2661 84.75 90.0742 84.6367 89.9922 84.4492 cv
89.9922 84.418 li
89.8521 84.3398 li
89.7729 84.1367 li
89.6328 84.043 li
89.6328 83.8711 li
89.4922 83.3398 li
89.5229 82.9023 li
89.5698 82.7148 li
89.5698 82.4648 li
89.6172 82.2617 li
89.6172 82.1836 li
89.6948 82.043 li
89.6802 82.0586 li
89.6802 81.9883 89.6948 81.9141 89.7271 81.8398 cv
89.7271 81.7773 li
89.6948 81.4805 li
89.6948 81.3477 89.7578 81.2266 89.8828 81.1211 cv
89.8828 81.1133 89.8828 81.0898 89.8828 81.0586 cv
89.8828 81.0273 89.8672 80.9648 89.8359 80.8711 cv
89.813 80.7695 89.8052 80.6953 89.8052 80.6523 cv
89.8052 80.5508 89.8281 80.4453 89.8828 80.3398 cv
89.9448 80.4453 90.0308 80.4961 90.1479 80.4961 cv
90.1948 80.4961 li
90.2031 80.4648 90.2339 80.4297 90.2891 80.3867 cv
90.3589 80.1914 90.4492 80.0234 90.5552 79.8867 cv
90.6021 79.8242 li
90.6021 79.793 90.625 79.707 90.6802 79.5586 cv
90.7729 79.5586 li
90.8052 79.4961 li
90.8979 79.4648 li
90.938 79.4023 90.9648 79.3672 90.9771 79.3555 cv
90.9839 79.3477 91.0698 79.3008 91.2271 79.2148 cv
91.2578 79.1523 91.3091 79.1016 91.3828 79.0586 cv
91.4141 79.0391 91.4492 79.0195 91.4922 78.9961 cv
91.5391 78.9336 li
91.7578 78.8633 91.8911 78.8242 91.9448 78.8242 cv
92.0161 78.8242 92.0781 78.8398 92.1328 78.8711 cv
92.1948 78.8555 li
92.2729 78.9023 li
92.3672 78.9766 92.4648 79.0391 92.5698 79.0898 cv
92.7729 79.2461 li
92.7729 79.293 li
92.9492 79.4414 93.0391 79.6445 93.0391 79.9023 cv
93.0078 80.0273 li
93.0391 80.418 li
92.9302 80.4961 li
92.8198 80.8086 li
92.5859 81.0586 li
92.5698 81.2461 li
92.3198 81.4336 92.0859 81.5859 91.8672 81.6992 cv
91.793 81.8047 91.6841 81.8555 91.5391 81.8555 cv
91.4922 81.8555 li
91.2729 81.9961 li
91.0698 81.9961 li
90.7891 82.1211 li
90.5698 82.0117 li
90.5552 82.0117 li
90.5308 82.0742 90.5161 82.1758 90.5078 82.3086 cv
90.3979 82.3711 li
90.3979 82.5117 li
90.3198 82.7305 li
90.3398 82.918 90.3521 83.0391 90.3521 83.0898 cv
90.3052 83.1367 li
90.3052 83.2422 90.2969 83.3164 90.2891 83.3555 cv
90.2891 83.3672 90.2891 83.3828 90.2891 83.4023 cv
90.2891 83.4141 90.2891 83.4258 90.2891 83.4336 cv
90.2891 83.4961 90.3198 83.5508 90.3828 83.5898 cv
90.4019 83.6836 90.4448 83.7422 90.5078 83.7617 cv
90.5859 83.8398 li
90.8521 83.918 li
90.8521 83.9492 li
90.9448 83.9648 li
91.3521 83.9961 li
91.5859 83.9648 li
91.7109 83.8711 li
91.7891 83.8555 li
91.8979 83.668 li
91.9609 83.6523 li
92.2578 83.5586 li
92.2969 83.5078 92.3521 83.4609 92.4141 83.418 cv
92.4609 83.3555 li
92.6172 83.3242 92.7031 83.2422 92.7271 83.1055 cv
92.8398 82.9922 92.9839 82.9336 93.1641 82.9336 cv
93.2109 82.9336 li
93.3672 83.1133 93.4448 83.2578 93.4448 83.3711 cv
93.4448 83.3711 li
cp
f
104.297 83.4648 mo
104.234 83.6055 li
104.234 83.8359 104.148 84.0117 103.984 84.1367 cv
103.984 84.2227 103.957 84.2852 103.906 84.3242 cv
103.844 84.4648 li
103.688 84.5742 li
103.625 84.6992 li
103.141 84.9492 li
102.906 85.0117 li
102.563 85.043 li
102.375 84.9492 li
102.219 84.9648 li
102.063 84.8555 li
101.938 84.8398 li
101.453 84.5898 li
101.031 84.2305 li
100.895 84.1289 100.703 83.9727 100.453 83.7617 cv
100.188 83.4023 li
99.9688 83.2148 li
99.938 83.1367 li
99.8281 82.9961 li
99.7231 82.8711 99.5981 82.7383 99.4531 82.5898 cv
99.25 82.5117 li
99.0161 82.0586 li
99.063 81.8867 li
99.1021 81.6289 99.2271 81.4805 99.438 81.4492 cv
99.6719 81.5273 li
99.8589 81.7148 li
100.063 81.8398 li
100.266 81.8398 li
100.313 81.8867 li
100.375 81.8867 100.426 81.8945 100.469 81.9023 cv
100.539 81.8633 100.676 81.8164 100.875 81.7617 cv
100.984 81.7461 li
101.063 81.5898 li
101.344 81.5898 li
101.438 81.5195 101.531 81.4766 101.625 81.4648 cv
101.656 81.4648 li
101.676 81.4141 101.707 81.3477 101.75 81.2617 cv
101.969 81.1523 li
102.078 81.0586 li
102.25 80.7617 li
102.328 80.7617 li
102.359 80.6797 102.395 80.5664 102.438 80.418 cv
102.531 80.3398 li
102.453 80.293 li
102.5 80.0898 li
102.488 80.0586 102.445 80.0352 102.375 80.0117 cv
102.234 80.0586 li
102.172 79.9648 li
102.063 79.918 li
102.016 79.8711 li
101.898 79.8516 101.727 79.8359 101.5 79.8242 cv
101.5 79.7773 li
101.438 79.8242 li
101.375 79.8047 101.328 79.793 101.297 79.793 cv
101.191 79.793 101.035 79.8516 100.828 79.9648 cv
100.672 79.9648 li
100.359 80.0703 100.188 80.1484 100.156 80.1992 cv
99.8911 80.2773 li
99.5161 80.5742 li
99.1719 80.918 li
99.1719 80.9648 li
98.938 81.3711 li
98.8589 81.5898 li
98.813 81.6211 li
98.813 81.668 li
98.7891 81.7227 98.7729 81.7617 98.7661 81.793 cv
98.688 81.8398 li
98.7031 81.8711 li
98.6719 81.9336 li
98.6602 81.9453 98.6563 81.9648 98.6563 81.9961 cv
98.6563 82.0391 98.6719 82.0742 98.7031 82.1055 cv
98.7031 82.2734 98.6641 82.3789 98.5938 82.418 cv
98.5698 82.4492 98.563 82.4805 98.563 82.5117 cv
98.563 82.543 98.5659 82.5664 98.5781 82.5742 cv
98.5781 82.7109 98.5508 82.8242 98.5 82.918 cv
98.457 82.9609 98.4302 82.9883 98.4219 82.9961 cv
98.4531 83.1836 li
98.4219 83.418 li
98.438 83.6055 li
98.375 83.7539 98.3438 83.8711 98.3438 83.9648 cv
98.3521 84.0391 98.3589 84.082 98.3589 84.0898 cv
98.3589 84.1836 98.3052 84.2773 98.2031 84.3711 cv
98.1089 84.4648 98.02 84.5117 97.938 84.5117 cv
97.8198 84.5117 97.7031 84.4414 97.5781 84.3086 cv
97.4531 83.9336 li
97.4839 83.7148 li
97.4531 83.2461 li
97.4839 83.1367 li
97.4839 82.7461 li
97.5161 82.5898 li
97.5161 82.4648 li
97.5161 82.3008 97.52 82.1367 97.5313 81.9805 cv
97.5508 81.8164 97.563 81.7266 97.563 81.7148 cv
97.563 81.5117 li
97.5781 81.4023 li
97.5781 81.0742 li
97.6089 80.9648 li
97.5781 80.8242 li
97.625 80.4336 li
97.625 80.0117 li
97.5781 79.7773 li
97.625 79.668 li
97.625 79.6211 li
97.5781 78.9805 li
97.4839 78.5898 li
97.4839 78.4805 li
97.563 78.0742 li
97.5161 77.918 li
97.4839 77.6211 li
97.4731 77.4336 97.4688 77.3516 97.4688 77.3711 cv
97.4688 77.0898 97.688 76.9453 98.125 76.9336 cv
98.3911 76.7773 li
98.3438 77.3711 li
98.3911 77.7148 li
98.2969 78.0586 li
98.3281 78.4336 li
98.3911 78.6523 li
98.3438 78.8555 li
98.375 79.1523 li
98.3438 79.3867 li
98.4058 79.6367 li
98.375 79.6992 li
98.4219 79.8242 li
98.3589 80.1523 li
98.3589 80.2305 li
98.4219 80.4492 li
98.3789 80.4727 98.3589 80.5352 98.3589 80.6367 cv
98.3281 80.918 li
98.3438 81.0273 li
98.5 80.7773 li
98.563 80.4961 li
98.563 80.4961 98.6172 80.4102 98.7339 80.2305 cv
98.7339 80.1484 98.7578 80.0742 98.813 80.0117 cv
98.9531 80.0117 li
99.0469 79.8086 li
99.3281 79.668 li
99.4302 79.5664 99.5552 79.4883 99.7031 79.4336 cv
99.7813 79.3711 li
99.9688 79.2773 li
100.125 79.2461 li
100.289 79.1016 100.656 79.0039 101.219 78.9492 cv
102.156 79.0273 li
102.344 79.1367 li
102.438 79.1523 li
102.641 79.3711 li
102.656 79.293 li
102.758 79.3477 102.836 79.418 102.891 79.5117 cv
102.93 79.5117 102.945 79.5117 102.938 79.5117 cv
102.969 79.5117 103 79.5234 103.031 79.543 cv
103.281 80.0586 li
103.266 80.1211 li
103.305 80.207 103.328 80.2773 103.328 80.3398 cv
103.328 80.4453 103.285 80.5547 103.203 80.668 cv
103.203 80.7461 li
103.031 81.1836 li
102.781 81.543 li
102.703 81.543 li
102.703 81.543 102.656 81.6133 102.563 81.7461 cv
102.477 81.7461 102.41 81.7227 102.359 81.668 cv
102.359 81.8555 li
102.266 81.918 li
102.188 82.0586 li
101.969 82.1055 li
101.938 82.1172 101.898 82.1523 101.859 82.2148 cv
101.305 82.4336 101 82.543 100.938 82.543 cv
100.914 82.543 100.867 82.5391 100.797 82.5273 cv
100.734 82.5195 100.676 82.5117 100.625 82.5117 cv
100.594 82.5117 100.57 82.5117 100.563 82.5117 cv
100.57 82.543 100.613 82.6328 100.688 82.7773 cv
100.844 82.8867 li
101.063 83.2617 li
101.391 83.4492 li
101.406 83.4961 li
101.516 83.5586 li
101.672 83.7461 li
101.969 83.9648 li
102.344 84.1211 li
102.563 84.1836 li
102.719 84.168 li
102.797 84.1367 li
102.961 84.1172 103.117 84.0547 103.266 83.9492 cv
103.469 83.5742 li
103.578 83.4336 li
103.656 83.2148 li
103.77 83.1758 103.863 83.1523 103.938 83.1523 cv
104.125 83.1523 104.242 83.2578 104.297 83.4648 cv
104.297 83.4648 li
cp
f
.7 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
138.535 88.2109 mo
164.707 109.961 li
@
176.465 109.609 mo
176.402 109.828 li
176.418 109.953 li
176.277 110.422 li
176.262 110.594 li
176.09 110.766 li
176.027 111 li
175.902 111.188 li
175.699 111.609 li
175.48 112 li
175.121 112.516 li
175.074 112.672 li
174.887 112.984 li
174.684 113.406 li
174.324 114.063 li
174.246 114.344 li
174.059 114.625 li
173.699 114.5 li
173.496 114.375 li
173.309 113.813 li
173.059 113.406 li
173.059 113.297 li
172.918 112.953 li
172.855 112.875 li
172.355 111.828 li
172.199 111.578 li
172.074 111.781 li
171.871 111.938 li
171.605 112.313 li
171.402 112.516 li
171.293 112.828 li
171.043 113.156 li
171.012 113.266 li
170.84 113.641 li
170.84 113.813 li
170.715 113.984 li
170.699 114.156 li
170.574 114.188 li
170.309 114.469 li
170.371 114.438 li
170.285 114.488 170.176 114.52 170.043 114.531 cv
169.949 114.438 li
169.777 114.375 li
169.777 114.234 li
169.699 114.141 li
169.637 113.813 li
169.543 113.594 li
169.543 113.438 li
169.527 113.391 li
169.34 112.875 li
169.293 112.563 li
169.184 112.422 li
169.199 112.266 li
169.074 111.984 li
169.074 111.875 li
168.98 111.609 li
168.809 111.375 li
168.84 111.109 li
168.824 111.031 li
168.699 110.719 li
168.668 110.531 li
168.605 110.406 li
168.551 110.336 168.516 110.258 168.496 110.172 cv
168.293 109.656 li
168.449 109.438 li
168.5 109.355 168.605 109.297 168.762 109.266 cv
169.012 109.234 li
169.09 109.359 li
169.246 109.422 li
169.355 109.641 li
169.449 109.719 li
169.418 109.922 li
169.465 110.031 li
169.434 110.141 li
169.543 110.344 li
169.527 110.516 li
169.684 111.063 li
169.652 111.188 li
169.73 111.516 li
169.902 111.891 li
169.965 112.359 li
170.09 112.5 li
170.09 112.781 li
170.168 113.031 li
170.184 113.141 li
170.355 113.031 li
170.621 112.578 li
170.715 112.375 li
170.809 112.203 li
170.809 112.133 170.824 112.074 170.855 112.031 cv
170.934 112.031 li
170.965 111.813 li
171.09 111.797 li
171.109 111.727 171.145 111.672 171.199 111.641 cv
171.199 111.625 li
171.199 111.574 171.223 111.527 171.277 111.484 cv
171.246 111.391 li
171.309 111.375 li
171.293 111.297 li
171.363 111.172 171.449 111.078 171.543 111.016 cv
171.543 110.766 li
171.715 110.672 li
171.762 110.641 li
171.777 110.609 li
171.734 110.539 171.715 110.449 171.715 110.344 cv
171.715 110.211 171.781 110.07 171.918 109.922 cv
171.988 109.891 172.078 109.875 172.184 109.875 cv
172.246 109.875 172.293 109.883 172.324 109.891 cv
172.543 110.094 li
172.668 110.281 li
172.746 110.563 li
172.855 110.75 li
172.824 110.891 li
172.902 111.156 li
172.902 111.266 li
173.105 111.625 li
173.105 111.656 li
173.168 111.688 li
173.402 112.266 li
173.418 112.422 li
173.527 112.563 li
173.809 113.188 li
173.871 113.078 li
174.09 112.625 li
174.215 112.516 li
174.309 112.266 li
174.434 112.203 li
174.434 112.031 li
174.484 111.992 174.547 111.949 174.621 111.906 cv
174.672 111.887 174.699 111.867 174.699 111.844 cv
174.684 111.594 li
174.824 111.453 li
174.887 111.422 li
175.074 111.109 li
175.074 111.078 li
175.082 110.996 175.137 110.898 175.23 110.781 cv
175.199 110.656 li
175.418 110.391 li
175.527 110.125 li
175.434 109.887 175.387 109.684 175.387 109.516 cv
175.387 109.266 175.516 109.125 175.777 109.094 cv
176.105 109.188 li
176.152 109.109 li
176.23 109.219 li
176.355 109.313 li
176.309 109.438 li
176.465 109.609 li
cp
f
182.066 114.328 mo
182.066 114.648 181.895 114.813 181.551 114.813 cv
181.383 114.813 181.262 114.742 181.191 114.609 cv
181.105 114.492 181.039 114.281 180.988 113.969 cv
180.988 113.813 li
181.008 113.773 181.02 113.73 181.02 113.688 cv
181.02 113.668 181.012 113.648 181.004 113.625 cv
180.832 113.375 li
180.957 113.141 li
180.91 112.891 li
180.957 112.75 li
180.957 112.594 li
180.988 112.453 li
180.926 112.234 li
180.988 112.125 li
180.988 111.219 li
180.91 110.813 li
180.957 110.672 li
180.879 110.375 li
180.77 110.453 li
180.52 110.563 li
180.16 111.016 li
180.004 111.016 li
179.801 111.359 li
179.754 111.5 li
179.629 111.563 li
179.488 111.766 li
179.426 111.891 li
179.301 112.313 li
179.082 112.578 li
179.035 112.75 li
178.91 112.844 li
178.863 113.141 li
178.629 113.344 li
178.598 113.797 li
178.488 113.797 li
178.441 113.859 li
178.238 114.234 li
178.035 114.453 li
177.848 114.688 li
177.66 114.641 li
177.504 114.641 li
177.363 114.438 li
177.223 114.016 li
177.207 113.375 li
177.16 113.172 li
177.207 112.922 li
177.176 112.359 li
177.27 112.344 li
177.332 111.516 li
177.379 111.359 li
177.348 111.109 li
177.41 111.063 li
177.457 110.688 li
177.504 110.547 li
177.457 110.391 li
177.488 110.328 li
177.473 110.297 li
177.504 109.953 li
177.41 109.875 li
177.488 109.703 li
177.473 109.359 li
177.348 109 li
177.441 108.891 li
177.363 108.578 li
177.363 108.375 li
177.316 108.297 li
177.254 107.906 li
177.207 107.734 li
177.02 107.391 li
177.16 107.219 li
177.27 107.016 li
177.379 107.016 li
177.555 107.016 177.684 107.078 177.77 107.203 cv
177.941 107.344 li
178.02 107.547 li
178.191 107.703 li
178.16 107.875 li
178.238 108.125 li
178.238 108.156 li
178.254 108.172 li
178.238 108.578 li
178.254 109.094 li
178.348 109.438 li
178.285 109.578 li
178.301 109.781 li
178.238 109.953 li
178.285 110.234 li
178.223 110.484 li
178.238 110.531 li
178.223 111.266 li
178.254 111.422 li
178.191 111.516 li
178.145 111.906 li
178.098 112.094 li
178.145 112.406 li
178.098 112.516 li
178.082 112.75 li
178.176 112.73 178.223 112.684 178.223 112.609 cv
178.316 112.516 li
178.395 112.359 li
178.426 112.125 li
178.551 111.938 li
178.629 111.688 li
178.816 111.5 li
178.863 111.266 li
178.973 111.266 li
178.973 111.156 li
178.988 111.016 li
179.129 110.922 li
179.129 110.828 li
179.254 110.813 li
179.27 110.609 li
179.27 110.516 li
179.488 110.422 li
179.535 110.375 li
179.52 110.25 li
179.629 110.219 li
179.707 110.016 li
179.848 110.016 li
179.988 109.922 li
179.988 109.871 179.992 109.836 180.004 109.813 cv
180.129 109.75 li
180.273 109.625 180.41 109.555 180.535 109.531 cv
180.535 109.516 li
180.742 109.414 180.887 109.359 180.973 109.359 cv
181.086 109.359 181.195 109.414 181.301 109.516 cv
181.383 109.547 181.434 109.609 181.457 109.703 cv
181.566 109.766 li
181.598 109.938 li
181.785 110.219 li
181.785 111.172 li
181.77 111.594 li
181.816 111.703 li
181.816 112.594 li
181.785 112.75 li
181.785 112.984 li
181.816 113.25 li
181.77 113.484 li
181.801 113.602 181.82 113.699 181.832 113.781 cv
181.973 113.906 li
181.973 114.016 li
182.02 114.047 li
182.051 114.184 182.066 114.277 182.066 114.328 cv
182.066 114.328 li
cp
f
187.008 110.219 mo
186.961 110.141 li
186.867 110.109 li
186.492 109.813 li
186.258 109.766 li
186.07 109.766 li
186.039 109.75 li
185.945 109.781 li
185.836 109.719 li
185.523 109.719 li
185.57 109.766 li
185.289 109.875 li
185.242 109.922 li
185.211 109.938 li
185.063 110.063 184.961 110.164 184.898 110.234 cv
184.82 110.531 li
184.773 110.641 li
184.898 110.813 li
184.695 110.969 li
184.711 111.016 li
184.625 111.164 184.586 111.309 184.586 111.453 cv
184.477 111.578 li
184.477 111.797 li
184.383 111.891 li
184.367 112 li
184.32 112.031 li
184.32 112.203 li
184.289 112.25 li
184.289 112.355 184.281 112.434 184.273 112.484 cv
184.289 112.547 li
184.18 112.766 li
184.227 112.844 li
184.148 112.969 li
184.227 113.188 li
184.102 113.359 li
184.117 113.594 li
184.117 113.625 li
184.164 113.656 li
184.227 113.641 li
184.266 113.602 184.309 113.563 184.352 113.531 cv
184.32 113.438 li
184.492 113.406 li
184.539 113.328 li
185.242 112.75 li
185.305 112.719 li
185.398 112.516 li
185.438 112.508 185.508 112.477 185.602 112.422 cv
185.664 112.234 li
185.773 112.234 li
185.727 112.031 li
185.898 112 li
185.918 111.969 185.945 111.934 185.977 111.891 cv
186.016 111.84 186.055 111.793 186.086 111.75 cv
186.711 110.938 li
186.805 110.75 li
186.789 110.703 li
186.867 110.578 li
186.898 110.438 li
187.008 110.344 li
187.008 110.219 li
cp
188.148 109.594 mo
188.039 109.75 li
188.133 110.031 li
187.977 110.219 li
187.914 110.469 li
187.883 110.531 li
187.898 110.594 li
187.898 110.699 187.871 110.781 187.82 110.844 cv
187.789 110.875 li
187.789 110.922 li
187.82 110.984 187.836 111.039 187.836 111.078 cv
187.836 111.121 187.828 111.152 187.82 111.172 cv
187.836 111.219 li
187.789 111.344 li
187.82 111.484 li
187.727 111.578 li
187.758 111.75 li
187.836 111.844 li
187.727 111.938 li
187.727 112.125 li
187.633 112.313 li
187.695 112.516 li
187.633 112.609 li
187.742 112.688 li
187.586 112.969 li
187.57 113 li
187.695 113.031 li
187.602 113.297 li
187.602 113.344 li
187.602 113.406 187.594 113.453 187.586 113.484 cv
187.602 113.516 li
187.789 113.547 li
187.945 113.781 li
187.867 113.969 li
187.992 113.953 li
188.043 114.047 188.074 114.133 188.086 114.203 cv
187.898 114.375 li
187.844 114.438 187.766 114.492 187.664 114.547 cv
187.461 114.656 li
187.398 114.594 li
187.273 114.672 li
186.914 114.234 li
186.914 114.031 li
186.859 113.875 186.836 113.73 186.836 113.594 cv
186.836 113.516 li
186.758 112.813 li
186.867 112.313 li
186.789 112.016 li
186.586 112.359 li
186.477 112.672 li
186.383 112.719 li
186.211 112.984 li
185.914 113.25 li
185.82 113.391 li
185.57 113.625 li
185.508 113.781 li
185.117 114.016 li
184.711 114.484 li
184.477 114.531 li
184.32 114.641 li
184.121 114.641 183.969 114.566 183.867 114.422 cv
183.512 114.246 183.324 113.992 183.305 113.656 cv
183.367 113.625 li
183.352 113.547 li
183.336 113.406 li
183.273 113.25 li
183.336 113.078 li
183.367 112.828 li
183.445 112.438 li
183.445 112.43 183.445 112.414 183.445 112.391 cv
183.445 112.371 183.445 112.355 183.445 112.344 cv
183.445 112.313 183.449 112.273 183.461 112.219 cv
183.449 112.211 183.445 112.18 183.445 112.125 cv
183.445 112.074 183.469 111.98 183.523 111.844 cv
183.602 111.813 li
183.559 111.773 183.539 111.73 183.539 111.688 cv
183.539 111.656 183.543 111.633 183.555 111.609 cv
183.543 111.59 183.539 111.563 183.539 111.531 cv
183.539 111.43 183.586 111.355 183.68 111.313 cv
183.699 111.23 183.742 111.148 183.805 111.063 cv
183.758 110.969 li
183.898 110.797 li
183.898 110.75 li
183.898 110.594 183.949 110.453 184.055 110.328 cv
184.039 110.109 li
184.086 110.063 li
184.086 110.055 184.086 110.043 184.086 110.031 cv
184.074 110.012 184.07 109.996 184.07 109.984 cv
184.07 109.945 184.086 109.906 184.117 109.875 cv
184.117 109.797 li
184.148 109.715 184.23 109.594 184.367 109.438 cv
184.512 109.281 184.617 109.141 184.68 109.016 cv
184.742 109.078 li
184.867 109.016 li
184.93 109 li
185.32 108.813 li
186.242 108.859 li
186.242 108.938 li
186.539 109 li
186.715 109 186.836 109.063 186.898 109.188 cv
186.898 109.168 186.902 109.137 186.914 109.094 cv
186.914 109.074 186.914 109.059 186.914 109.047 cv
187.164 109.281 li
187.383 109.328 li
187.82 109.219 li
187.977 109.516 li
188.148 109.594 li
cp
f
193.27 110.141 mo
193.27 110.215 193.195 110.281 193.051 110.344 cv
193.02 110.387 192.961 110.422 192.879 110.453 cv
192.762 110.508 192.68 110.547 192.629 110.578 cv
192.379 110.5 li
192.254 110.594 192.09 110.641 191.895 110.641 cv
191.754 110.594 li
191.645 110.703 li
191.316 110.703 li
191.113 110.828 li
191.02 110.797 190.934 110.781 190.863 110.781 cv
190.832 110.805 190.773 110.82 190.691 110.828 cv
190.648 110.828 190.605 110.82 190.566 110.797 cv
190.52 111.25 li
190.535 111.578 li
190.504 112 li
190.52 112.469 li
190.566 112.672 li
190.566 112.844 li
190.723 113.203 li
190.699 113.227 190.691 113.258 190.691 113.297 cv
190.691 113.352 190.777 113.391 190.957 113.422 cv
190.973 113.563 li
191.066 113.594 li
191.207 113.703 li
191.301 113.766 li
191.383 113.758 191.441 113.75 191.473 113.75 cv
191.543 113.75 191.617 113.762 191.691 113.781 cv
191.723 113.762 191.789 113.703 191.895 113.609 cv
191.965 113.547 192.035 113.516 192.098 113.516 cv
192.105 113.516 192.117 113.516 192.129 113.516 cv
192.148 113.527 192.16 113.531 192.16 113.531 cv
192.23 113.375 192.363 113.277 192.551 113.234 cv
192.715 113.234 192.855 113.289 192.973 113.391 cv
192.973 113.469 li
192.973 113.742 192.871 113.914 192.676 113.984 cv
192.613 114.152 192.461 114.262 192.223 114.313 cv
192.082 114.438 li
191.926 114.438 li
191.645 114.516 li
191.582 114.523 191.492 114.531 191.379 114.531 cv
191.316 114.531 191.246 114.516 191.176 114.484 cv
191.02 114.484 li
190.598 114.266 li
190.488 114.219 li
190.238 113.891 li
190.098 113.734 li
189.832 113.141 li
189.738 112.563 li
189.754 112.422 li
189.66 112.297 li
189.723 112.125 li
189.66 111.859 li
189.738 111.781 li
189.77 111.625 li
189.738 111.484 li
189.754 111.266 li
189.707 111.063 li
189.77 111.016 li
189.77 110.813 li
189.676 110.781 li
189.457 110.828 li
189.238 110.672 li
189.207 110.672 li
188.969 110.672 188.848 110.547 188.848 110.297 cv
188.848 110.25 li
188.691 110.031 li
188.926 109.813 li
189.223 109.859 li
189.379 109.828 li
189.613 109.891 li
189.863 109.891 li
189.863 109.656 li
189.707 109.313 li
189.863 109.234 li
189.801 109.047 li
189.816 108.688 li
189.723 108.531 li
189.66 108.438 189.629 108.355 189.629 108.281 cv
189.629 108.199 189.648 108.125 189.691 108.063 cv
189.738 107.906 li
189.832 107.813 li
190.039 107.773 190.18 107.75 190.254 107.75 cv
190.512 107.75 190.652 107.867 190.676 108.094 cv
190.645 108.156 li
190.695 108.23 190.723 108.297 190.723 108.359 cv
190.723 108.371 190.715 108.391 190.707 108.422 cv
190.676 108.484 li
190.66 108.578 li
190.723 108.734 li
190.707 108.797 li
190.723 108.953 li
190.613 109.094 li
190.676 109.344 li
190.629 109.625 li
190.723 109.734 li
190.629 109.953 li
191.004 109.906 li
191.66 109.969 li
192.191 109.875 li
192.379 109.891 li
192.426 109.875 li
192.895 109.875 li
193.145 109.875 193.27 109.965 193.27 110.141 cv
193.27 110.141 li
cp
f
200.555 110.141 mo
200.555 110.215 200.48 110.281 200.336 110.344 cv
200.305 110.387 200.246 110.422 200.164 110.453 cv
200.047 110.508 199.965 110.547 199.914 110.578 cv
199.664 110.5 li
199.539 110.594 199.375 110.641 199.18 110.641 cv
199.039 110.594 li
198.93 110.703 li
198.602 110.703 li
198.398 110.828 li
198.305 110.797 198.219 110.781 198.148 110.781 cv
198.117 110.805 198.059 110.82 197.977 110.828 cv
197.934 110.828 197.891 110.82 197.852 110.797 cv
197.805 111.25 li
197.82 111.578 li
197.789 112 li
197.805 112.469 li
197.852 112.672 li
197.852 112.844 li
198.008 113.203 li
197.984 113.227 197.977 113.258 197.977 113.297 cv
197.977 113.352 198.063 113.391 198.242 113.422 cv
198.258 113.563 li
198.352 113.594 li
198.492 113.703 li
198.586 113.766 li
198.668 113.758 198.727 113.75 198.758 113.75 cv
198.828 113.75 198.902 113.762 198.977 113.781 cv
199.008 113.762 199.074 113.703 199.18 113.609 cv
199.25 113.547 199.32 113.516 199.383 113.516 cv
199.391 113.516 199.402 113.516 199.414 113.516 cv
199.434 113.527 199.445 113.531 199.445 113.531 cv
199.516 113.375 199.648 113.277 199.836 113.234 cv
200 113.234 200.141 113.289 200.258 113.391 cv
200.258 113.469 li
200.258 113.742 200.156 113.914 199.961 113.984 cv
199.898 114.152 199.746 114.262 199.508 114.313 cv
199.367 114.438 li
199.211 114.438 li
198.93 114.516 li
198.867 114.523 198.777 114.531 198.664 114.531 cv
198.602 114.531 198.531 114.516 198.461 114.484 cv
198.305 114.484 li
197.883 114.266 li
197.773 114.219 li
197.523 113.891 li
197.383 113.734 li
197.117 113.141 li
197.023 112.563 li
197.039 112.422 li
196.945 112.297 li
197.008 112.125 li
196.945 111.859 li
197.023 111.781 li
197.055 111.625 li
197.023 111.484 li
197.039 111.266 li
196.992 111.063 li
197.055 111.016 li
197.055 110.813 li
196.961 110.781 li
196.742 110.828 li
196.523 110.672 li
196.492 110.672 li
196.254 110.672 196.133 110.547 196.133 110.297 cv
196.133 110.25 li
195.977 110.031 li
196.211 109.813 li
196.508 109.859 li
196.664 109.828 li
196.898 109.891 li
197.148 109.891 li
197.148 109.656 li
196.992 109.313 li
197.148 109.234 li
197.086 109.047 li
197.102 108.688 li
197.008 108.531 li
196.945 108.438 196.914 108.355 196.914 108.281 cv
196.914 108.199 196.934 108.125 196.977 108.063 cv
197.023 107.906 li
197.117 107.813 li
197.324 107.773 197.465 107.75 197.539 107.75 cv
197.797 107.75 197.938 107.867 197.961 108.094 cv
197.93 108.156 li
197.98 108.23 198.008 108.297 198.008 108.359 cv
198.008 108.371 198 108.391 197.992 108.422 cv
197.961 108.484 li
197.945 108.578 li
198.008 108.734 li
197.992 108.797 li
198.008 108.953 li
197.898 109.094 li
197.961 109.344 li
197.914 109.625 li
198.008 109.734 li
197.914 109.953 li
198.289 109.906 li
198.945 109.969 li
199.477 109.875 li
199.664 109.891 li
199.711 109.875 li
200.18 109.875 li
200.43 109.875 200.555 109.965 200.555 110.141 cv
200.555 110.141 li
cp
f
206.148 114.328 mo
206.148 114.648 205.977 114.813 205.633 114.813 cv
205.465 114.813 205.344 114.742 205.273 114.609 cv
205.188 114.492 205.121 114.281 205.07 113.969 cv
205.07 113.813 li
205.09 113.773 205.102 113.73 205.102 113.688 cv
205.102 113.668 205.094 113.648 205.086 113.625 cv
204.914 113.375 li
205.039 113.141 li
204.992 112.891 li
205.039 112.75 li
205.039 112.594 li
205.07 112.453 li
205.008 112.234 li
205.07 112.125 li
205.07 111.219 li
204.992 110.813 li
205.039 110.672 li
204.961 110.375 li
204.852 110.453 li
204.602 110.563 li
204.242 111.016 li
204.086 111.016 li
203.883 111.359 li
203.836 111.5 li
203.711 111.563 li
203.57 111.766 li
203.508 111.891 li
203.383 112.313 li
203.164 112.578 li
203.117 112.75 li
202.992 112.844 li
202.945 113.141 li
202.711 113.344 li
202.68 113.797 li
202.57 113.797 li
202.523 113.859 li
202.32 114.234 li
202.117 114.453 li
201.93 114.688 li
201.742 114.641 li
201.586 114.641 li
201.445 114.438 li
201.305 114.016 li
201.289 113.375 li
201.242 113.172 li
201.289 112.922 li
201.258 112.359 li
201.352 112.344 li
201.414 111.516 li
201.461 111.359 li
201.43 111.109 li
201.492 111.063 li
201.539 110.688 li
201.586 110.547 li
201.539 110.391 li
201.57 110.328 li
201.555 110.297 li
201.586 109.953 li
201.492 109.875 li
201.57 109.703 li
201.555 109.359 li
201.43 109 li
201.523 108.891 li
201.445 108.578 li
201.445 108.375 li
201.398 108.297 li
201.336 107.906 li
201.289 107.734 li
201.102 107.391 li
201.242 107.219 li
201.352 107.016 li
201.461 107.016 li
201.637 107.016 201.766 107.078 201.852 107.203 cv
202.023 107.344 li
202.102 107.547 li
202.273 107.703 li
202.242 107.875 li
202.32 108.125 li
202.32 108.156 li
202.336 108.172 li
202.32 108.578 li
202.336 109.094 li
202.43 109.438 li
202.367 109.578 li
202.383 109.781 li
202.32 109.953 li
202.367 110.234 li
202.305 110.484 li
202.32 110.531 li
202.305 111.266 li
202.336 111.422 li
202.273 111.516 li
202.227 111.906 li
202.18 112.094 li
202.227 112.406 li
202.18 112.516 li
202.164 112.75 li
202.258 112.73 202.305 112.684 202.305 112.609 cv
202.398 112.516 li
202.477 112.359 li
202.508 112.125 li
202.633 111.938 li
202.711 111.688 li
202.898 111.5 li
202.945 111.266 li
203.055 111.266 li
203.055 111.156 li
203.07 111.016 li
203.211 110.922 li
203.211 110.828 li
203.336 110.813 li
203.352 110.609 li
203.352 110.516 li
203.57 110.422 li
203.617 110.375 li
203.602 110.25 li
203.711 110.219 li
203.789 110.016 li
203.93 110.016 li
204.07 109.922 li
204.07 109.871 204.074 109.836 204.086 109.813 cv
204.211 109.75 li
204.355 109.625 204.492 109.555 204.617 109.531 cv
204.617 109.516 li
204.824 109.414 204.969 109.359 205.055 109.359 cv
205.168 109.359 205.277 109.414 205.383 109.516 cv
205.465 109.547 205.516 109.609 205.539 109.703 cv
205.648 109.766 li
205.68 109.938 li
205.867 110.219 li
205.867 111.172 li
205.852 111.594 li
205.898 111.703 li
205.898 112.594 li
205.867 112.75 li
205.867 112.984 li
205.898 113.25 li
205.852 113.484 li
205.883 113.602 205.902 113.699 205.914 113.781 cv
206.055 113.906 li
206.055 114.016 li
206.102 114.047 li
206.133 114.184 206.148 114.277 206.148 114.328 cv
206.148 114.328 li
cp
f
210.059 110.016 mo
210.059 109.996 210.043 109.949 210.012 109.875 cv
209.965 109.859 li
209.934 109.875 li
209.922 109.875 209.906 109.875 209.887 109.875 cv
209.863 109.875 209.848 109.875 209.84 109.875 cv
209.828 109.875 209.816 109.875 209.809 109.875 cv
209.785 109.875 209.77 109.875 209.762 109.875 cv
209.652 109.953 li
209.543 109.969 li
209.48 109.984 li
209.277 110.25 li
209.137 110.344 li
208.949 110.688 li
208.84 110.75 li
208.816 110.898 208.762 111.016 208.668 111.109 cv
208.621 111.188 li
208.715 111.137 208.813 111.109 208.918 111.109 cv
209.012 111.063 li
209.043 110.969 li
209.215 110.969 li
209.309 110.828 li
209.387 110.828 li
209.512 110.875 li
209.574 110.703 li
209.652 110.703 li
209.652 110.563 li
209.809 110.531 li
209.855 110.5 li
209.871 110.391 li
210.027 110.156 li
210.047 110.117 210.059 110.07 210.059 110.016 cv
210.059 110.016 li
cp
211.246 113.469 mo
211.246 113.563 211.172 113.684 211.027 113.828 cv
210.984 113.953 210.922 114.059 210.84 114.141 cv
210.777 114.156 li
210.637 114.375 li
210.418 114.422 li
210.199 114.563 li
210.074 114.781 li
209.949 114.75 li
209.855 114.789 209.781 114.816 209.73 114.828 cv
209.652 114.938 li
209.629 114.926 209.594 114.922 209.543 114.922 cv
209.438 114.922 209.34 114.992 209.246 115.141 cv
209.074 115 li
209.043 115 208.996 115 208.934 115 cv
208.828 115 208.738 114.984 208.668 114.953 cv
208.465 114.953 li
208.371 114.891 li
208.066 114.848 207.875 114.734 207.793 114.547 cv
207.793 114.516 li
207.652 114.438 li
207.574 114.234 li
207.434 114.141 li
207.434 113.969 li
207.293 113.438 li
207.324 113 li
207.371 112.813 li
207.371 112.563 li
207.418 112.359 li
207.418 112.281 li
207.496 112.141 li
207.48 112.156 li
207.48 112.086 207.496 112.012 207.527 111.938 cv
207.527 111.875 li
207.496 111.578 li
207.496 111.445 207.559 111.324 207.684 111.219 cv
207.684 111.211 207.684 111.188 207.684 111.156 cv
207.684 111.125 207.668 111.063 207.637 110.969 cv
207.613 110.867 207.605 110.793 207.605 110.75 cv
207.605 110.648 207.629 110.543 207.684 110.438 cv
207.746 110.543 207.832 110.594 207.949 110.594 cv
207.996 110.594 li
208.004 110.563 208.035 110.527 208.09 110.484 cv
208.16 110.289 208.25 110.121 208.355 109.984 cv
208.402 109.922 li
208.402 109.891 208.426 109.805 208.48 109.656 cv
208.574 109.656 li
208.605 109.594 li
208.699 109.563 li
208.738 109.5 208.766 109.465 208.777 109.453 cv
208.785 109.445 208.871 109.398 209.027 109.313 cv
209.059 109.25 209.109 109.199 209.184 109.156 cv
209.215 109.137 209.25 109.117 209.293 109.094 cv
209.34 109.031 li
209.559 108.961 209.691 108.922 209.746 108.922 cv
209.816 108.922 209.879 108.938 209.934 108.969 cv
209.996 108.953 li
210.074 109 li
210.168 109.074 210.266 109.137 210.371 109.188 cv
210.574 109.344 li
210.574 109.391 li
210.75 109.539 210.84 109.742 210.84 110 cv
210.809 110.125 li
210.84 110.516 li
210.73 110.594 li
210.621 110.906 li
210.387 111.156 li
210.371 111.344 li
210.121 111.531 209.887 111.684 209.668 111.797 cv
209.594 111.902 209.484 111.953 209.34 111.953 cv
209.293 111.953 li
209.074 112.094 li
208.871 112.094 li
208.59 112.219 li
208.371 112.109 li
208.355 112.109 li
208.332 112.172 208.316 112.273 208.309 112.406 cv
208.199 112.469 li
208.199 112.609 li
208.121 112.828 li
208.141 113.016 208.152 113.137 208.152 113.188 cv
208.105 113.234 li
208.105 113.34 208.098 113.414 208.09 113.453 cv
208.09 113.465 208.09 113.48 208.09 113.5 cv
208.09 113.512 208.09 113.523 208.09 113.531 cv
208.09 113.594 208.121 113.648 208.184 113.688 cv
208.203 113.781 208.246 113.84 208.309 113.859 cv
208.387 113.938 li
208.652 114.016 li
208.652 114.047 li
208.746 114.063 li
209.152 114.094 li
209.387 114.063 li
209.512 113.969 li
209.59 113.953 li
209.699 113.766 li
209.762 113.75 li
210.059 113.656 li
210.098 113.605 210.152 113.559 210.215 113.516 cv
210.262 113.453 li
210.418 113.422 210.504 113.34 210.527 113.203 cv
210.641 113.09 210.785 113.031 210.965 113.031 cv
211.012 113.031 li
211.168 113.211 211.246 113.355 211.246 113.469 cv
211.246 113.469 li
cp
f
219.613 109.984 mo
219.504 110.391 li
219.066 110.438 li
218.832 110.594 li
218.676 110.531 li
218.504 110.625 li
218.316 110.703 li
218.207 110.781 li
218.207 110.828 li
217.957 110.953 li
217.785 111.172 li
217.707 111.172 li
217.57 111.309 217.477 111.391 217.426 111.422 cv
217.254 111.688 li
217.191 111.719 li
217.168 111.781 217.145 111.875 217.113 112 cv
216.941 112.063 li
216.879 112.203 li
216.77 112.328 li
216.754 112.516 li
216.66 112.547 li
216.66 112.719 li
216.613 112.766 li
216.645 112.809 216.676 112.852 216.707 112.891 cv
216.52 112.969 li
216.504 113.125 li
216.379 113.328 li
216.457 113.484 li
216.301 113.703 li
216.309 113.777 216.316 113.828 216.316 113.859 cv
216.316 113.871 216.316 113.887 216.316 113.906 cv
216.305 113.938 216.301 113.961 216.301 113.969 cv
216.332 114.078 li
216.535 114.297 li
216.379 114.578 li
216.238 114.688 li
215.895 114.844 li
215.457 114.672 li
215.457 114.391 li
215.41 114.281 li
215.441 114.109 li
215.43 113.977 215.426 113.875 215.426 113.813 cv
215.426 113.793 215.426 113.762 215.426 113.719 cv
215.426 113.68 215.426 113.652 215.426 113.641 cv
215.426 113.516 li
215.363 113.465 215.332 113.402 215.332 113.328 cv
215.332 113.266 215.363 113.195 215.426 113.109 cv
215.426 113.07 215.414 112.949 215.395 112.75 cv
215.426 112.719 li
215.395 112.563 li
215.426 112.406 li
215.395 112.328 li
215.426 112.047 li
215.363 111.938 li
215.41 111.797 li
215.363 111.641 li
215.371 111.602 215.379 111.539 215.379 111.453 cv
215.379 111.328 215.355 111.25 215.316 111.219 cv
215.379 111.141 li
215.316 110.922 li
215.223 110.766 li
215.27 110.578 li
215.223 110.5 li
215.176 110.219 li
215.176 110.125 li
215.133 110.074 215.113 110.012 215.113 109.938 cv
215.113 109.781 215.289 109.648 215.645 109.531 cv
215.941 109.594 li
216.004 109.828 li
216.129 109.984 li
216.098 110.297 li
216.117 110.465 216.145 110.641 216.176 110.828 cv
216.207 111.016 li
216.215 111.039 216.227 111.086 216.238 111.156 cv
216.238 111.199 216.215 111.25 216.176 111.313 cv
216.207 111.547 li
216.191 111.813 li
216.145 111.938 li
216.176 111.984 li
216.207 112.094 li
216.246 112.043 216.273 111.984 216.285 111.922 cv
216.332 111.734 li
216.352 111.695 216.387 111.664 216.441 111.641 cv
216.488 111.453 li
216.66 111.359 li
216.676 111.219 li
216.816 111.063 li
216.91 110.891 li
217.012 110.777 217.113 110.703 217.207 110.672 cv
217.238 110.641 li
217.332 110.469 li
217.457 110.438 li
217.551 110.344 li
217.676 110.266 li
217.754 110.188 li
217.816 110.188 li
217.91 110.141 li
217.957 110.078 li
218.113 110 li
218.316 109.875 li
218.598 109.766 li
218.711 109.758 218.773 109.75 218.785 109.75 cv
218.785 109.762 218.785 109.766 218.785 109.766 cv
218.773 109.766 218.77 109.766 218.77 109.766 cv
218.785 109.766 li
218.816 109.766 218.863 109.75 218.926 109.719 cv
218.965 109.688 219.023 109.672 219.098 109.672 cv
219.129 109.672 219.18 109.684 219.254 109.703 cv
219.461 109.715 219.582 109.809 219.613 109.984 cv
219.613 109.984 li
cp
f
223.164 111.938 mo
223.164 111.875 li
223.102 111.824 223.07 111.762 223.07 111.688 cv
223.102 111.641 li
222.992 111.406 li
223.008 111.172 li
222.961 111.109 li
222.855 111.039 222.805 110.977 222.805 110.922 cv
222.73 110.891 222.695 110.813 222.695 110.688 cv
222.617 110.672 li
222.477 110.438 li
222.367 110.344 li
222.117 110.25 li
222.023 110.234 li
221.969 110.234 221.938 110.219 221.93 110.188 cv
221.68 110.438 li
221.523 110.781 li
221.273 110.906 li
221.242 111.047 li
221.117 111.109 li
221.07 111.422 li
220.93 111.484 li
220.898 111.602 220.883 111.703 220.883 111.797 cv
220.68 111.984 li
220.742 112.016 li
220.742 112.109 220.703 112.195 220.633 112.266 cv
220.609 112.34 220.578 112.422 220.539 112.516 cv
220.539 112.609 li
220.508 112.656 li
220.523 112.797 li
220.383 113.125 li
220.414 113.188 li
220.414 113.516 li
220.367 113.688 li
220.367 113.859 li
220.477 114.016 li
220.648 114.063 li
220.711 114.094 li
220.805 114.047 li
221.117 114.063 li
221.164 113.953 li
221.211 113.953 li
221.262 113.953 221.293 113.965 221.305 113.984 cv
221.414 113.953 li
221.508 113.984 li
221.664 113.875 li
221.68 113.844 li
221.789 113.813 li
221.84 113.73 221.969 113.641 222.18 113.547 cv
222.211 113.5 li
222.445 113.328 li
222.586 113.141 li
222.773 113.031 li
222.789 112.984 li
222.852 112.844 li
222.852 112.688 li
222.992 112.563 li
223.039 112.484 li
223.102 112.406 li
223.07 112.313 223.055 112.246 223.055 112.203 cv
223.055 112.133 223.074 112.059 223.117 111.984 cv
223.164 111.938 li
cp
223.961 111.641 mo
223.898 111.859 li
223.898 112.07 223.883 112.234 223.852 112.359 cv
223.789 112.469 li
223.789 112.609 li
223.727 112.688 li
223.68 112.859 li
223.555 112.984 li
223.477 113.297 li
223.367 113.328 li
223.32 113.453 li
223.18 113.547 li
223.086 113.75 li
222.945 113.813 li
222.93 113.969 li
222.695 114.047 li
222.602 114.195 222.477 114.289 222.32 114.328 cv
222.273 114.328 li
222.156 114.492 222.008 114.578 221.82 114.578 cv
221.746 114.629 221.656 114.656 221.555 114.656 cv
221.43 114.734 li
221.305 114.781 li
221.148 114.891 li
220.992 114.891 li
220.836 114.938 li
220.633 114.844 li
220.117 114.813 li
219.93 114.531 li
219.664 114.266 li
219.727 114.063 li
219.555 113.656 li
219.633 113.5 li
219.57 113.219 li
219.633 113.031 li
219.609 112.93 219.602 112.852 219.602 112.797 cv
219.602 112.641 219.641 112.531 219.727 112.469 cv
219.734 112.387 219.789 112.25 219.883 112.063 cv
219.945 112.063 li
219.914 111.984 li
219.961 111.813 li
219.961 111.641 li
220.023 111.57 220.059 111.516 220.07 111.484 cv
220.023 111.328 li
220.023 111.266 li
220.086 111.164 220.117 111.047 220.117 110.922 cv
220.367 110.578 li
220.367 110.578 220.375 110.574 220.398 110.563 cv
220.418 110.543 220.434 110.523 220.445 110.5 cv
220.43 110.453 li
220.477 110.453 li
220.664 110.25 li
220.68 109.984 li
220.977 109.875 li
221.09 109.805 221.164 109.684 221.195 109.516 cv
221.352 109.516 li
221.434 109.465 221.512 109.438 221.586 109.438 cv
221.656 109.438 221.727 109.453 221.789 109.484 cv
221.93 109.5 li
222.242 109.375 li
222.398 109.531 li
222.539 109.609 li
222.633 109.609 li
222.805 109.719 li
222.914 109.719 li
223.016 109.813 223.137 109.945 223.273 110.109 cv
223.289 110.172 li
223.367 110.219 li
223.633 110.547 li
223.852 111.109 li
223.852 111.219 li
223.961 111.641 li
cp
f
228.758 111.688 mo
228.727 111.469 li
228.727 111.266 li
228.648 110.703 li
228.539 110.313 li
228.383 109.969 li
228.117 109.547 li
228.055 109.563 li
228.008 109.625 li
227.945 109.625 li
227.914 109.773 227.824 109.852 227.68 109.859 cv
227.617 109.945 227.531 110.063 227.43 110.219 cv
227.289 110.344 li
227.242 110.531 li
227.117 110.672 li
226.992 110.969 li
226.992 111.105 226.945 111.258 226.852 111.422 cv
226.773 111.531 li
226.789 111.719 li
226.586 111.984 li
226.492 112.406 li
226.414 112.453 li
226.414 112.465 226.418 112.48 226.43 112.5 cv
226.43 112.523 226.43 112.543 226.43 112.563 cv
226.43 112.699 226.391 112.84 226.32 112.984 cv
226.383 113.203 li
226.242 113.266 li
226.227 113.313 li
226.117 113.406 li
226.383 113.469 li
226.539 113.547 li
226.789 113.516 li
226.992 113.609 li
226.992 113.781 li
227.055 113.828 li
227.336 113.828 li
227.523 113.797 li
227.574 113.727 227.648 113.688 227.742 113.688 cv
227.773 113.688 li
227.883 113.656 li
227.82 113.5 li
228.164 113.5 li
228.234 113.293 228.367 113.109 228.555 112.953 cv
228.555 112.828 li
228.711 112.563 li
228.711 112.297 li
228.742 111.984 li
228.711 111.797 li
228.758 111.688 li
cp
229.555 112.578 mo
229.445 112.688 li
229.477 112.984 li
229.211 113.313 li
229.211 113.453 li
229.117 113.547 li
229.18 113.656 li
228.945 113.891 li
228.789 114.156 li
228.539 114.297 li
228.445 114.391 228.34 114.445 228.227 114.453 cv
228.133 114.672 li
228.008 114.563 li
227.883 114.719 li
227.883 114.676 227.852 114.625 227.789 114.563 cv
227.711 114.516 li
227.617 114.625 li
227.57 114.625 li
227.477 114.734 li
227.32 114.641 li
227.07 114.75 li
226.914 114.609 li
226.891 114.617 226.855 114.625 226.805 114.625 cv
226.68 114.625 226.516 114.586 226.32 114.516 cv
226.164 114.422 li
226.102 114.375 li
225.914 114.297 li
225.82 114.047 li
225.684 114.039 225.543 114.008 225.398 113.953 cv
225.148 113.406 li
225.195 113.328 li
225.133 113.234 li
225.133 113.016 li
225.055 112.891 li
225.102 112.75 li
225.078 112.656 225.07 112.578 225.07 112.516 cv
225.07 112.508 225.074 112.492 225.086 112.469 cv
225.086 112.449 225.086 112.434 225.086 112.422 cv
225.086 112.047 li
225.133 111.938 li
225.133 111.219 li
225.18 111.063 li
225.117 110.984 li
225.227 110.656 li
225.195 110.547 li
225.195 110.281 li
225.242 110.203 li
225.242 110.031 li
225.195 109.922 li
225.289 109.531 li
225.211 109.047 li
225.242 109.016 li
225.242 108.859 li
225.25 108.82 225.258 108.758 225.258 108.672 cv
225.258 108.559 225.25 108.469 225.242 108.406 cv
225.258 108.328 li
225.164 107.969 li
225.184 107.918 225.211 107.883 225.242 107.859 cv
225.23 107.828 225.215 107.797 225.195 107.766 cv
225.215 107.727 225.227 107.68 225.227 107.625 cv
225.227 107.563 225.195 107.492 225.133 107.406 cv
225.133 107.336 225.148 107.273 225.18 107.219 cv
225.133 107.094 li
225.195 106.969 li
224.992 106.563 li
225.195 106.516 li
225.195 106.5 li
225.602 106.281 li
225.82 106.531 li
225.852 106.656 li
226.023 106.781 li
226.023 106.969 li
226.023 107.031 226.012 107.121 225.992 107.234 cv
226.043 107.289 226.07 107.34 226.07 107.391 cv
226.07 107.414 226.063 107.438 226.055 107.469 cv
226.102 107.516 li
226.055 107.703 li
226.133 107.922 li
226.117 108.016 li
226.273 108.078 li
226.195 108.234 li
226.117 108.547 li
226.117 108.602 226.102 108.672 226.07 108.766 cv
226.102 108.82 226.117 108.93 226.117 109.094 cv
226.086 109.188 li
226.117 109.281 li
226.07 109.469 li
226.07 109.543 226.055 109.617 226.023 109.688 cv
226.023 109.719 li
226.055 109.762 226.094 109.813 226.148 109.875 cv
226.023 110.141 li
226.055 110.281 li
226.023 110.344 li
226.023 110.406 226.012 110.484 225.992 110.578 cv
226.008 110.625 li
225.992 110.75 li
225.977 110.938 li
225.945 111.328 li
226.102 111.359 li
226.117 110.984 li
226.211 110.734 li
226.258 110.75 li
226.32 110.578 li
226.359 110.434 226.43 110.297 226.523 110.172 cv
226.531 110.141 226.555 110.109 226.586 110.078 cv
226.633 110.031 li
226.633 110.063 li
226.68 109.922 li
226.82 109.766 li
226.898 109.672 li
226.914 109.625 li
226.992 109.531 li
226.992 109.43 227.027 109.355 227.102 109.313 cv
227.117 109.203 li
227.273 109.156 li
227.336 109.125 li
227.367 109.047 li
227.352 108.891 li
227.523 108.844 li
227.617 108.813 li
227.539 108.734 li
227.727 108.688 li
227.93 108.531 li
228.305 108.531 li
228.539 108.656 li
228.602 108.672 li
228.805 108.953 li
228.82 109.078 li
228.914 109.094 li
228.961 109.344 li
229.07 109.438 li
229.07 109.609 li
229.148 109.703 li
229.227 109.75 li
229.273 110.141 li
229.273 110.172 li
229.273 110.215 229.297 110.273 229.352 110.344 cv
229.402 110.406 229.43 110.461 229.43 110.5 cv
229.43 110.555 229.414 110.605 229.383 110.656 cv
229.539 110.703 li
229.516 110.82 229.484 110.906 229.445 110.969 cv
229.477 111.234 li
229.516 111.32 229.539 111.383 229.539 111.422 cv
229.539 111.445 229.527 111.484 229.508 111.547 cv
229.492 112.063 li
229.539 112.172 li
229.492 112.359 li
229.555 112.578 li
cp
f
234.109 111.938 mo
234.109 111.875 li
234.047 111.824 234.016 111.762 234.016 111.688 cv
234.047 111.641 li
233.938 111.406 li
233.953 111.172 li
233.906 111.109 li
233.801 111.039 233.75 110.977 233.75 110.922 cv
233.676 110.891 233.641 110.813 233.641 110.688 cv
233.563 110.672 li
233.422 110.438 li
233.313 110.344 li
233.063 110.25 li
232.969 110.234 li
232.914 110.234 232.883 110.219 232.875 110.188 cv
232.625 110.438 li
232.469 110.781 li
232.219 110.906 li
232.188 111.047 li
232.063 111.109 li
232.016 111.422 li
231.875 111.484 li
231.844 111.602 231.828 111.703 231.828 111.797 cv
231.625 111.984 li
231.688 112.016 li
231.688 112.109 231.648 112.195 231.578 112.266 cv
231.555 112.34 231.523 112.422 231.484 112.516 cv
231.484 112.609 li
231.453 112.656 li
231.469 112.797 li
231.328 113.125 li
231.359 113.188 li
231.359 113.516 li
231.313 113.688 li
231.313 113.859 li
231.422 114.016 li
231.594 114.063 li
231.656 114.094 li
231.75 114.047 li
232.063 114.063 li
232.109 113.953 li
232.156 113.953 li
232.207 113.953 232.238 113.965 232.25 113.984 cv
232.359 113.953 li
232.453 113.984 li
232.609 113.875 li
232.625 113.844 li
232.734 113.813 li
232.785 113.73 232.914 113.641 233.125 113.547 cv
233.156 113.5 li
233.391 113.328 li
233.531 113.141 li
233.719 113.031 li
233.734 112.984 li
233.797 112.844 li
233.797 112.688 li
233.938 112.563 li
233.984 112.484 li
234.047 112.406 li
234.016 112.313 234 112.246 234 112.203 cv
234 112.133 234.02 112.059 234.063 111.984 cv
234.109 111.938 li
cp
234.906 111.641 mo
234.844 111.859 li
234.844 112.07 234.828 112.234 234.797 112.359 cv
234.734 112.469 li
234.734 112.609 li
234.672 112.688 li
234.625 112.859 li
234.5 112.984 li
234.422 113.297 li
234.313 113.328 li
234.266 113.453 li
234.125 113.547 li
234.031 113.75 li
233.891 113.813 li
233.875 113.969 li
233.641 114.047 li
233.547 114.195 233.422 114.289 233.266 114.328 cv
233.219 114.328 li
233.102 114.492 232.953 114.578 232.766 114.578 cv
232.691 114.629 232.602 114.656 232.5 114.656 cv
232.375 114.734 li
232.25 114.781 li
232.094 114.891 li
231.938 114.891 li
231.781 114.938 li
231.578 114.844 li
231.063 114.813 li
230.875 114.531 li
230.609 114.266 li
230.672 114.063 li
230.5 113.656 li
230.578 113.5 li
230.516 113.219 li
230.578 113.031 li
230.555 112.93 230.547 112.852 230.547 112.797 cv
230.547 112.641 230.586 112.531 230.672 112.469 cv
230.68 112.387 230.734 112.25 230.828 112.063 cv
230.891 112.063 li
230.859 111.984 li
230.906 111.813 li
230.906 111.641 li
230.969 111.57 231.004 111.516 231.016 111.484 cv
230.969 111.328 li
230.969 111.266 li
231.031 111.164 231.063 111.047 231.063 110.922 cv
231.313 110.578 li
231.313 110.578 231.32 110.574 231.344 110.563 cv
231.363 110.543 231.379 110.523 231.391 110.5 cv
231.375 110.453 li
231.422 110.453 li
231.609 110.25 li
231.625 109.984 li
231.922 109.875 li
232.035 109.805 232.109 109.684 232.141 109.516 cv
232.297 109.516 li
232.379 109.465 232.457 109.438 232.531 109.438 cv
232.602 109.438 232.672 109.453 232.734 109.484 cv
232.875 109.5 li
233.188 109.375 li
233.344 109.531 li
233.484 109.609 li
233.578 109.609 li
233.75 109.719 li
233.859 109.719 li
233.961 109.813 234.082 109.945 234.219 110.109 cv
234.234 110.172 li
234.313 110.219 li
234.578 110.547 li
234.797 111.109 li
234.797 111.219 li
234.906 111.641 li
cp
f
239.516 110.141 mo
239.516 110.215 239.441 110.281 239.297 110.344 cv
239.266 110.387 239.207 110.422 239.125 110.453 cv
239.008 110.508 238.926 110.547 238.875 110.578 cv
238.625 110.5 li
238.5 110.594 238.336 110.641 238.141 110.641 cv
238 110.594 li
237.891 110.703 li
237.563 110.703 li
237.359 110.828 li
237.266 110.797 237.18 110.781 237.109 110.781 cv
237.078 110.805 237.02 110.82 236.938 110.828 cv
236.895 110.828 236.852 110.82 236.813 110.797 cv
236.766 111.25 li
236.781 111.578 li
236.75 112 li
236.766 112.469 li
236.813 112.672 li
236.813 112.844 li
236.969 113.203 li
236.945 113.227 236.938 113.258 236.938 113.297 cv
236.938 113.352 237.023 113.391 237.203 113.422 cv
237.219 113.563 li
237.313 113.594 li
237.453 113.703 li
237.547 113.766 li
237.629 113.758 237.688 113.75 237.719 113.75 cv
237.789 113.75 237.863 113.762 237.938 113.781 cv
237.969 113.762 238.035 113.703 238.141 113.609 cv
238.211 113.547 238.281 113.516 238.344 113.516 cv
238.352 113.516 238.363 113.516 238.375 113.516 cv
238.395 113.527 238.406 113.531 238.406 113.531 cv
238.477 113.375 238.609 113.277 238.797 113.234 cv
238.961 113.234 239.102 113.289 239.219 113.391 cv
239.219 113.469 li
239.219 113.742 239.117 113.914 238.922 113.984 cv
238.859 114.152 238.707 114.262 238.469 114.313 cv
238.328 114.438 li
238.172 114.438 li
237.891 114.516 li
237.828 114.523 237.738 114.531 237.625 114.531 cv
237.563 114.531 237.492 114.516 237.422 114.484 cv
237.266 114.484 li
236.844 114.266 li
236.734 114.219 li
236.484 113.891 li
236.344 113.734 li
236.078 113.141 li
235.984 112.563 li
236 112.422 li
235.906 112.297 li
235.969 112.125 li
235.906 111.859 li
235.984 111.781 li
236.016 111.625 li
235.984 111.484 li
236 111.266 li
235.953 111.063 li
236.016 111.016 li
236.016 110.813 li
235.922 110.781 li
235.703 110.828 li
235.484 110.672 li
235.453 110.672 li
235.215 110.672 235.094 110.547 235.094 110.297 cv
235.094 110.25 li
234.938 110.031 li
235.172 109.813 li
235.469 109.859 li
235.625 109.828 li
235.859 109.891 li
236.109 109.891 li
236.109 109.656 li
235.953 109.313 li
236.109 109.234 li
236.047 109.047 li
236.063 108.688 li
235.969 108.531 li
235.906 108.438 235.875 108.355 235.875 108.281 cv
235.875 108.199 235.895 108.125 235.938 108.063 cv
235.984 107.906 li
236.078 107.813 li
236.285 107.773 236.426 107.75 236.5 107.75 cv
236.758 107.75 236.898 107.867 236.922 108.094 cv
236.891 108.156 li
236.941 108.23 236.969 108.297 236.969 108.359 cv
236.969 108.371 236.961 108.391 236.953 108.422 cv
236.922 108.484 li
236.906 108.578 li
236.969 108.734 li
236.953 108.797 li
236.969 108.953 li
236.859 109.094 li
236.922 109.344 li
236.875 109.625 li
236.969 109.734 li
236.875 109.953 li
237.25 109.906 li
237.906 109.969 li
238.438 109.875 li
238.625 109.891 li
238.672 109.875 li
239.141 109.875 li
239.391 109.875 239.516 109.965 239.516 110.141 cv
239.516 110.141 li
cp
f
247.578 113.469 mo
247.438 113.641 li
247.297 113.953 li
247.203 114.016 li
247.125 114.188 li
246.875 114.219 li
246.719 114.375 li
246.484 114.375 li
246.344 114.484 li
246.203 114.453 li
246.047 114.484 li
246.047 114.578 li
245.609 114.547 li
245.422 114.563 li
245.281 114.641 li
245.156 114.563 li
245.238 114.551 245.301 114.547 245.344 114.547 cv
245.281 114.555 245.086 114.57 244.766 114.594 cv
244.734 114.578 li
244.641 114.578 li
244.484 114.656 li
244.43 114.625 244.344 114.586 244.219 114.547 cv
244.039 114.535 243.926 114.531 243.875 114.531 cv
243.781 114.531 li
243.719 114.52 243.656 114.516 243.594 114.516 cv
243.531 114.516 243.469 114.531 243.406 114.563 cv
243.234 114.453 li
243.141 114.422 li
243.117 114.422 243.07 114.414 243 114.391 cv
242.707 114.359 242.563 114.117 242.563 113.656 cv
242.563 113.547 li
242.797 113.375 li
243.078 113.266 li
243.297 113.375 li
243.469 113.375 li
243.469 113.406 li
243.539 113.438 243.602 113.5 243.656 113.594 cv
243.75 113.609 li
243.75 113.766 li
243.906 113.813 li
243.938 113.828 li
245.484 113.734 li
245.844 113.672 li
245.891 113.672 li
245.906 113.609 li
246.078 113.594 li
246.109 113.547 li
246.273 113.527 246.43 113.48 246.578 113.406 cv
246.578 113.344 li
246.578 113.344 246.563 113.32 246.531 113.266 cv
246.469 113.281 li
246.313 113.156 li
246.203 113.156 li
246.156 113.078 li
246.188 113.031 li
246.047 113.047 li
245.953 112.938 li
245.93 112.949 245.895 112.953 245.844 112.953 cv
245.738 112.953 245.633 112.934 245.531 112.891 cv
245.422 112.891 li
245.328 112.859 li
245.172 112.922 li
245.078 112.813 li
245.031 112.813 li
244.859 112.672 li
244.5 112.531 li
244.375 112.438 li
243.922 112.359 li
243.875 112.266 li
243.531 112.047 li
243.359 111.656 li
243.203 111.453 li
243.156 110.828 li
243.203 110.75 li
243.223 110.574 243.289 110.418 243.406 110.281 cv
243.52 110.219 243.578 110.125 243.578 110 cv
243.766 109.969 li
243.797 109.906 243.859 109.844 243.953 109.781 cv
244.141 109.641 li
245.016 109.313 li
245.266 109.297 li
245.656 109.188 li
246.422 109.234 li
246.438 109.297 li
246.508 109.32 246.586 109.383 246.672 109.484 cv
246.672 109.547 li
246.875 109.672 li
246.781 109.953 li
246.766 110.063 li
246.711 110.262 246.598 110.359 246.422 110.359 cv
246.273 110.359 246.172 110.293 246.109 110.156 cv
246.109 110.125 li
245.953 110.109 li
245.797 110.156 li
245.641 110.047 li
245.547 110.109 li
245.441 110.109 245.348 110.141 245.266 110.203 cv
245.141 110.203 245.023 110.25 244.922 110.344 cv
244.766 110.344 li
244.656 110.438 li
244.484 110.469 li
244.453 110.5 li
244.391 110.531 li
244.281 110.641 li
244.25 110.656 li
244.141 110.813 li
244 110.891 li
243.969 110.996 243.945 111.086 243.938 111.156 cv
243.945 111.273 243.961 111.344 243.984 111.375 cv
244.004 111.406 244.055 111.445 244.141 111.484 cv
244.141 111.547 li
244.297 111.641 li
244.43 111.684 244.531 111.734 244.594 111.797 cv
244.828 111.797 li
244.984 111.922 li
245.266 111.953 li
245.375 112.031 li
245.844 112.156 li
245.906 112.297 li
245.953 112.203 li
246.055 112.203 246.191 112.258 246.359 112.359 cv
246.578 112.391 li
246.609 112.469 li
246.797 112.469 li
247.141 112.672 li
247.172 112.777 247.258 112.871 247.406 112.953 cv
247.531 113.031 li
247.5 113.188 li
247.551 113.262 247.578 113.344 247.578 113.438 cv
247.578 113.469 li
cp
f
251.137 110.016 mo
251.137 109.996 251.121 109.949 251.09 109.875 cv
251.043 109.859 li
251.012 109.875 li
251 109.875 250.984 109.875 250.965 109.875 cv
250.941 109.875 250.926 109.875 250.918 109.875 cv
250.906 109.875 250.895 109.875 250.887 109.875 cv
250.863 109.875 250.848 109.875 250.84 109.875 cv
250.73 109.953 li
250.621 109.969 li
250.559 109.984 li
250.355 110.25 li
250.215 110.344 li
250.027 110.688 li
249.918 110.75 li
249.895 110.898 249.84 111.016 249.746 111.109 cv
249.699 111.188 li
249.793 111.137 249.891 111.109 249.996 111.109 cv
250.09 111.063 li
250.121 110.969 li
250.293 110.969 li
250.387 110.828 li
250.465 110.828 li
250.59 110.875 li
250.652 110.703 li
250.73 110.703 li
250.73 110.563 li
250.887 110.531 li
250.934 110.5 li
250.949 110.391 li
251.105 110.156 li
251.125 110.117 251.137 110.07 251.137 110.016 cv
251.137 110.016 li
cp
252.324 113.469 mo
252.324 113.563 252.25 113.684 252.105 113.828 cv
252.063 113.953 252 114.059 251.918 114.141 cv
251.855 114.156 li
251.715 114.375 li
251.496 114.422 li
251.277 114.563 li
251.152 114.781 li
251.027 114.75 li
250.934 114.789 250.859 114.816 250.809 114.828 cv
250.73 114.938 li
250.707 114.926 250.672 114.922 250.621 114.922 cv
250.516 114.922 250.418 114.992 250.324 115.141 cv
250.152 115 li
250.121 115 250.074 115 250.012 115 cv
249.906 115 249.816 114.984 249.746 114.953 cv
249.543 114.953 li
249.449 114.891 li
249.145 114.848 248.953 114.734 248.871 114.547 cv
248.871 114.516 li
248.73 114.438 li
248.652 114.234 li
248.512 114.141 li
248.512 113.969 li
248.371 113.438 li
248.402 113 li
248.449 112.813 li
248.449 112.563 li
248.496 112.359 li
248.496 112.281 li
248.574 112.141 li
248.559 112.156 li
248.559 112.086 248.574 112.012 248.605 111.938 cv
248.605 111.875 li
248.574 111.578 li
248.574 111.445 248.637 111.324 248.762 111.219 cv
248.762 111.211 248.762 111.188 248.762 111.156 cv
248.762 111.125 248.746 111.063 248.715 110.969 cv
248.691 110.867 248.684 110.793 248.684 110.75 cv
248.684 110.648 248.707 110.543 248.762 110.438 cv
248.824 110.543 248.91 110.594 249.027 110.594 cv
249.074 110.594 li
249.082 110.563 249.113 110.527 249.168 110.484 cv
249.238 110.289 249.328 110.121 249.434 109.984 cv
249.48 109.922 li
249.48 109.891 249.504 109.805 249.559 109.656 cv
249.652 109.656 li
249.684 109.594 li
249.777 109.563 li
249.816 109.5 249.844 109.465 249.855 109.453 cv
249.863 109.445 249.949 109.398 250.105 109.313 cv
250.137 109.25 250.188 109.199 250.262 109.156 cv
250.293 109.137 250.328 109.117 250.371 109.094 cv
250.418 109.031 li
250.637 108.961 250.77 108.922 250.824 108.922 cv
250.895 108.922 250.957 108.938 251.012 108.969 cv
251.074 108.953 li
251.152 109 li
251.246 109.074 251.344 109.137 251.449 109.188 cv
251.652 109.344 li
251.652 109.391 li
251.828 109.539 251.918 109.742 251.918 110 cv
251.887 110.125 li
251.918 110.516 li
251.809 110.594 li
251.699 110.906 li
251.465 111.156 li
251.449 111.344 li
251.199 111.531 250.965 111.684 250.746 111.797 cv
250.672 111.902 250.563 111.953 250.418 111.953 cv
250.371 111.953 li
250.152 112.094 li
249.949 112.094 li
249.668 112.219 li
249.449 112.109 li
249.434 112.109 li
249.41 112.172 249.395 112.273 249.387 112.406 cv
249.277 112.469 li
249.277 112.609 li
249.199 112.828 li
249.219 113.016 249.23 113.137 249.23 113.188 cv
249.184 113.234 li
249.184 113.34 249.176 113.414 249.168 113.453 cv
249.168 113.465 249.168 113.48 249.168 113.5 cv
249.168 113.512 249.168 113.523 249.168 113.531 cv
249.168 113.594 249.199 113.648 249.262 113.688 cv
249.281 113.781 249.324 113.84 249.387 113.859 cv
249.465 113.938 li
249.73 114.016 li
249.73 114.047 li
249.824 114.063 li
250.23 114.094 li
250.465 114.063 li
250.59 113.969 li
250.668 113.953 li
250.777 113.766 li
250.84 113.75 li
251.137 113.656 li
251.176 113.605 251.23 113.559 251.293 113.516 cv
251.34 113.453 li
251.496 113.422 251.582 113.34 251.605 113.203 cv
251.719 113.09 251.863 113.031 252.043 113.031 cv
252.09 113.031 li
252.246 113.211 252.324 113.355 252.324 113.469 cv
252.324 113.469 li
cp
f
260.723 112.516 mo
260.723 112.578 260.668 112.664 260.566 112.766 cv
260.426 112.969 li
260.379 113.203 li
260.27 113.234 li
260.254 113.313 li
260.129 113.355 260.035 113.453 259.973 113.609 cv
259.887 113.727 259.793 113.809 259.691 113.859 cv
259.648 113.891 259.613 113.918 259.582 113.938 cv
259.52 114.047 li
259.41 114.063 li
259.098 114.234 li
258.691 114.281 li
258.582 114.266 li
258.41 114.297 li
258.332 114.219 li
258.215 114.156 258.137 114.102 258.098 114.047 cv
257.992 114.027 257.918 113.949 257.879 113.813 cv
257.742 113.656 257.676 113.531 257.676 113.438 cv
257.676 113.391 li
257.582 113.25 li
257.566 113.234 li
257.488 113.016 li
257.379 112.781 li
257.41 112.516 li
257.285 112.359 li
257.113 111.328 li
257.082 111.184 257.066 111.063 257.066 110.969 cv
257.051 110.906 li
256.988 110.828 li
256.879 110.969 li
256.441 111.422 li
256.285 111.688 li
256.207 111.844 li
256.082 112.047 li
255.973 112.141 li
255.988 112.203 li
255.816 112.563 li
255.723 112.688 li
255.613 112.719 li
255.504 112.828 li
255.504 112.984 255.426 113.09 255.27 113.141 cv
255.254 113.156 li
255.18 113.336 255.098 113.445 255.004 113.484 cv
254.895 113.656 li
254.715 113.813 254.602 113.914 254.551 113.953 cv
254.527 114.027 254.488 114.094 254.426 114.156 cv
254.402 114.18 254.371 114.211 254.332 114.25 cv
254.309 114.387 254.199 114.477 254.004 114.531 cv
253.863 114.578 li
253.707 114.566 253.574 114.473 253.473 114.297 cv
253.285 114 li
253.348 113.703 li
253.332 113.547 li
253.348 113.531 li
253.363 113.375 li
253.238 113.078 li
253.332 112.938 li
253.285 112.781 li
253.363 112.609 li
253.395 112.344 li
253.332 112.297 li
253.441 112.125 li
253.395 112.047 li
253.395 111.844 li
253.441 111.484 li
253.418 111.414 253.41 111.359 253.41 111.328 cv
253.41 111.32 253.414 111.305 253.426 111.281 cv
253.426 111.262 253.426 111.246 253.426 111.234 cv
253.363 111.141 li
253.395 110.75 li
253.395 110.625 li
253.426 110.438 li
253.379 110.109 li
253.598 109.75 li
253.836 109.793 254.004 109.852 254.098 109.922 cv
254.199 109.984 254.254 110.105 254.254 110.281 cv
254.254 110.391 li
254.332 110.531 li
254.301 110.781 li
254.348 111.266 li
254.27 111.484 li
254.301 111.734 li
254.301 111.938 li
254.207 112.078 li
254.27 112.297 li
254.207 112.422 li
254.191 112.563 li
254.27 112.688 li
254.16 112.938 li
254.129 113.047 li
254.129 113.156 li
254.191 113.281 li
254.395 113.078 li
254.395 112.953 254.434 112.871 254.52 112.828 cv
254.52 112.758 254.551 112.699 254.613 112.656 cv
254.582 112.609 li
254.738 112.469 li
254.77 112.422 li
254.77 112.313 li
254.957 112.172 li
255.004 112.047 li
255.113 111.984 li
255.582 111.453 li
255.539 111.508 255.41 111.652 255.191 111.891 cv
255.191 111.922 li
255.207 111.844 li
255.363 111.656 li
255.473 111.453 li
255.473 111.328 li
255.66 111.266 li
255.676 111.109 li
255.723 111.063 li
255.738 111.016 li
255.738 110.922 li
255.91 110.75 li
255.91 110.742 255.91 110.727 255.91 110.703 cv
255.898 110.672 255.895 110.656 255.895 110.656 cv
255.895 110.512 255.973 110.43 256.129 110.406 cv
256.199 110.262 256.309 110.18 256.457 110.156 cv
256.535 110.047 li
256.551 110.031 li
256.621 109.93 256.73 109.855 256.879 109.813 cv
256.988 109.672 li
257.27 109.672 li
257.426 109.844 li
257.551 109.922 li
257.566 109.953 li
257.645 109.984 li
257.676 110.234 li
257.879 110.344 li
257.785 110.609 li
257.926 110.906 li
257.926 111.234 li
258.02 111.688 li
258.051 112.125 li
258.145 112.375 li
258.223 112.688 li
258.273 112.742 258.309 112.809 258.332 112.891 cv
258.551 112.953 li
258.551 113.188 li
258.66 113.328 li
258.66 113.359 li
258.723 113.375 li
258.77 113.438 li
258.816 113.391 li
258.793 113.391 258.816 113.391 258.879 113.391 cv
258.961 113.391 259.051 113.313 259.145 113.156 cv
259.285 113.125 li
259.332 113.063 li
259.352 113 259.398 112.953 259.473 112.922 cv
259.551 112.922 li
259.598 112.875 li
259.613 112.828 li
259.645 112.766 li
259.727 112.715 259.777 112.633 259.801 112.516 cv
259.941 112.375 li
259.957 112.266 li
260.051 112.078 li
260.27 112 li
260.598 112.094 li
260.707 112.453 li
260.707 112.465 260.711 112.469 260.723 112.469 cv
260.723 112.492 260.723 112.508 260.723 112.516 cv
260.723 112.516 li
cp
f
265.59 113.469 mo
265.449 113.641 li
265.309 113.953 li
265.215 114.016 li
265.137 114.188 li
264.887 114.219 li
264.73 114.375 li
264.496 114.375 li
264.355 114.484 li
264.215 114.453 li
264.059 114.484 li
264.059 114.578 li
263.621 114.547 li
263.434 114.563 li
263.293 114.641 li
263.168 114.563 li
263.25 114.551 263.313 114.547 263.355 114.547 cv
263.293 114.555 263.098 114.57 262.777 114.594 cv
262.746 114.578 li
262.652 114.578 li
262.496 114.656 li
262.441 114.625 262.355 114.586 262.23 114.547 cv
262.051 114.535 261.938 114.531 261.887 114.531 cv
261.793 114.531 li
261.73 114.52 261.668 114.516 261.605 114.516 cv
261.543 114.516 261.48 114.531 261.418 114.563 cv
261.246 114.453 li
261.152 114.422 li
261.129 114.422 261.082 114.414 261.012 114.391 cv
260.719 114.359 260.574 114.117 260.574 113.656 cv
260.574 113.547 li
260.809 113.375 li
261.09 113.266 li
261.309 113.375 li
261.48 113.375 li
261.48 113.406 li
261.551 113.438 261.613 113.5 261.668 113.594 cv
261.762 113.609 li
261.762 113.766 li
261.918 113.813 li
261.949 113.828 li
263.496 113.734 li
263.855 113.672 li
263.902 113.672 li
263.918 113.609 li
264.09 113.594 li
264.121 113.547 li
264.285 113.527 264.441 113.48 264.59 113.406 cv
264.59 113.344 li
264.59 113.344 264.574 113.32 264.543 113.266 cv
264.48 113.281 li
264.324 113.156 li
264.215 113.156 li
264.168 113.078 li
264.199 113.031 li
264.059 113.047 li
263.965 112.938 li
263.941 112.949 263.906 112.953 263.855 112.953 cv
263.75 112.953 263.645 112.934 263.543 112.891 cv
263.434 112.891 li
263.34 112.859 li
263.184 112.922 li
263.09 112.813 li
263.043 112.813 li
262.871 112.672 li
262.512 112.531 li
262.387 112.438 li
261.934 112.359 li
261.887 112.266 li
261.543 112.047 li
261.371 111.656 li
261.215 111.453 li
261.168 110.828 li
261.215 110.75 li
261.234 110.574 261.301 110.418 261.418 110.281 cv
261.531 110.219 261.59 110.125 261.59 110 cv
261.777 109.969 li
261.809 109.906 261.871 109.844 261.965 109.781 cv
262.152 109.641 li
263.027 109.313 li
263.277 109.297 li
263.668 109.188 li
264.434 109.234 li
264.449 109.297 li
264.52 109.32 264.598 109.383 264.684 109.484 cv
264.684 109.547 li
264.887 109.672 li
264.793 109.953 li
264.777 110.063 li
264.723 110.262 264.609 110.359 264.434 110.359 cv
264.285 110.359 264.184 110.293 264.121 110.156 cv
264.121 110.125 li
263.965 110.109 li
263.809 110.156 li
263.652 110.047 li
263.559 110.109 li
263.453 110.109 263.359 110.141 263.277 110.203 cv
263.152 110.203 263.035 110.25 262.934 110.344 cv
262.777 110.344 li
262.668 110.438 li
262.496 110.469 li
262.465 110.5 li
262.402 110.531 li
262.293 110.641 li
262.262 110.656 li
262.152 110.813 li
262.012 110.891 li
261.98 110.996 261.957 111.086 261.949 111.156 cv
261.957 111.273 261.973 111.344 261.996 111.375 cv
262.016 111.406 262.066 111.445 262.152 111.484 cv
262.152 111.547 li
262.309 111.641 li
262.441 111.684 262.543 111.734 262.605 111.797 cv
262.84 111.797 li
262.996 111.922 li
263.277 111.953 li
263.387 112.031 li
263.855 112.156 li
263.918 112.297 li
263.965 112.203 li
264.066 112.203 264.203 112.258 264.371 112.359 cv
264.59 112.391 li
264.621 112.469 li
264.809 112.469 li
265.152 112.672 li
265.184 112.777 265.27 112.871 265.418 112.953 cv
265.543 113.031 li
265.512 113.188 li
265.563 113.262 265.59 113.344 265.59 113.438 cv
265.59 113.469 li
cp
f
269.148 110.016 mo
269.148 109.996 269.133 109.949 269.102 109.875 cv
269.055 109.859 li
269.023 109.875 li
269.012 109.875 268.996 109.875 268.977 109.875 cv
268.953 109.875 268.938 109.875 268.93 109.875 cv
268.918 109.875 268.906 109.875 268.898 109.875 cv
268.875 109.875 268.859 109.875 268.852 109.875 cv
268.742 109.953 li
268.633 109.969 li
268.57 109.984 li
268.367 110.25 li
268.227 110.344 li
268.039 110.688 li
267.93 110.75 li
267.906 110.898 267.852 111.016 267.758 111.109 cv
267.711 111.188 li
267.805 111.137 267.902 111.109 268.008 111.109 cv
268.102 111.063 li
268.133 110.969 li
268.305 110.969 li
268.398 110.828 li
268.477 110.828 li
268.602 110.875 li
268.664 110.703 li
268.742 110.703 li
268.742 110.563 li
268.898 110.531 li
268.945 110.5 li
268.961 110.391 li
269.117 110.156 li
269.137 110.117 269.148 110.07 269.148 110.016 cv
269.148 110.016 li
cp
270.336 113.469 mo
270.336 113.563 270.262 113.684 270.117 113.828 cv
270.074 113.953 270.012 114.059 269.93 114.141 cv
269.867 114.156 li
269.727 114.375 li
269.508 114.422 li
269.289 114.563 li
269.164 114.781 li
269.039 114.75 li
268.945 114.789 268.871 114.816 268.82 114.828 cv
268.742 114.938 li
268.719 114.926 268.684 114.922 268.633 114.922 cv
268.527 114.922 268.43 114.992 268.336 115.141 cv
268.164 115 li
268.133 115 268.086 115 268.023 115 cv
267.918 115 267.828 114.984 267.758 114.953 cv
267.555 114.953 li
267.461 114.891 li
267.156 114.848 266.965 114.734 266.883 114.547 cv
266.883 114.516 li
266.742 114.438 li
266.664 114.234 li
266.523 114.141 li
266.523 113.969 li
266.383 113.438 li
266.414 113 li
266.461 112.813 li
266.461 112.563 li
266.508 112.359 li
266.508 112.281 li
266.586 112.141 li
266.57 112.156 li
266.57 112.086 266.586 112.012 266.617 111.938 cv
266.617 111.875 li
266.586 111.578 li
266.586 111.445 266.648 111.324 266.773 111.219 cv
266.773 111.211 266.773 111.188 266.773 111.156 cv
266.773 111.125 266.758 111.063 266.727 110.969 cv
266.703 110.867 266.695 110.793 266.695 110.75 cv
266.695 110.648 266.719 110.543 266.773 110.438 cv
266.836 110.543 266.922 110.594 267.039 110.594 cv
267.086 110.594 li
267.094 110.563 267.125 110.527 267.18 110.484 cv
267.25 110.289 267.34 110.121 267.445 109.984 cv
267.492 109.922 li
267.492 109.891 267.516 109.805 267.57 109.656 cv
267.664 109.656 li
267.695 109.594 li
267.789 109.563 li
267.828 109.5 267.855 109.465 267.867 109.453 cv
267.875 109.445 267.961 109.398 268.117 109.313 cv
268.148 109.25 268.199 109.199 268.273 109.156 cv
268.305 109.137 268.34 109.117 268.383 109.094 cv
268.43 109.031 li
268.648 108.961 268.781 108.922 268.836 108.922 cv
268.906 108.922 268.969 108.938 269.023 108.969 cv
269.086 108.953 li
269.164 109 li
269.258 109.074 269.355 109.137 269.461 109.188 cv
269.664 109.344 li
269.664 109.391 li
269.84 109.539 269.93 109.742 269.93 110 cv
269.898 110.125 li
269.93 110.516 li
269.82 110.594 li
269.711 110.906 li
269.477 111.156 li
269.461 111.344 li
269.211 111.531 268.977 111.684 268.758 111.797 cv
268.684 111.902 268.574 111.953 268.43 111.953 cv
268.383 111.953 li
268.164 112.094 li
267.961 112.094 li
267.68 112.219 li
267.461 112.109 li
267.445 112.109 li
267.422 112.172 267.406 112.273 267.398 112.406 cv
267.289 112.469 li
267.289 112.609 li
267.211 112.828 li
267.23 113.016 267.242 113.137 267.242 113.188 cv
267.195 113.234 li
267.195 113.34 267.188 113.414 267.18 113.453 cv
267.18 113.465 267.18 113.48 267.18 113.5 cv
267.18 113.512 267.18 113.523 267.18 113.531 cv
267.18 113.594 267.211 113.648 267.273 113.688 cv
267.293 113.781 267.336 113.84 267.398 113.859 cv
267.477 113.938 li
267.742 114.016 li
267.742 114.047 li
267.836 114.063 li
268.242 114.094 li
268.477 114.063 li
268.602 113.969 li
268.68 113.953 li
268.789 113.766 li
268.852 113.75 li
269.148 113.656 li
269.188 113.605 269.242 113.559 269.305 113.516 cv
269.352 113.453 li
269.508 113.422 269.594 113.34 269.617 113.203 cv
269.73 113.09 269.875 113.031 270.055 113.031 cv
270.102 113.031 li
270.258 113.211 270.336 113.355 270.336 113.469 cv
270.336 113.469 li
cp
f
275.563 113.469 mo
275.422 113.641 li
275.281 113.953 li
275.188 114.016 li
275.109 114.188 li
274.859 114.219 li
274.703 114.375 li
274.469 114.375 li
274.328 114.484 li
274.188 114.453 li
274.031 114.484 li
274.031 114.578 li
273.594 114.547 li
273.406 114.563 li
273.266 114.641 li
273.141 114.563 li
273.223 114.551 273.285 114.547 273.328 114.547 cv
273.266 114.555 273.07 114.57 272.75 114.594 cv
272.719 114.578 li
272.625 114.578 li
272.469 114.656 li
272.414 114.625 272.328 114.586 272.203 114.547 cv
272.023 114.535 271.91 114.531 271.859 114.531 cv
271.766 114.531 li
271.703 114.52 271.641 114.516 271.578 114.516 cv
271.516 114.516 271.453 114.531 271.391 114.563 cv
271.219 114.453 li
271.125 114.422 li
271.102 114.422 271.055 114.414 270.984 114.391 cv
270.691 114.359 270.547 114.117 270.547 113.656 cv
270.547 113.547 li
270.781 113.375 li
271.063 113.266 li
271.281 113.375 li
271.453 113.375 li
271.453 113.406 li
271.523 113.438 271.586 113.5 271.641 113.594 cv
271.734 113.609 li
271.734 113.766 li
271.891 113.813 li
271.922 113.828 li
273.469 113.734 li
273.828 113.672 li
273.875 113.672 li
273.891 113.609 li
274.063 113.594 li
274.094 113.547 li
274.258 113.527 274.414 113.48 274.563 113.406 cv
274.563 113.344 li
274.563 113.344 274.547 113.32 274.516 113.266 cv
274.453 113.281 li
274.297 113.156 li
274.188 113.156 li
274.141 113.078 li
274.172 113.031 li
274.031 113.047 li
273.938 112.938 li
273.914 112.949 273.879 112.953 273.828 112.953 cv
273.723 112.953 273.617 112.934 273.516 112.891 cv
273.406 112.891 li
273.313 112.859 li
273.156 112.922 li
273.063 112.813 li
273.016 112.813 li
272.844 112.672 li
272.484 112.531 li
272.359 112.438 li
271.906 112.359 li
271.859 112.266 li
271.516 112.047 li
271.344 111.656 li
271.188 111.453 li
271.141 110.828 li
271.188 110.75 li
271.207 110.574 271.273 110.418 271.391 110.281 cv
271.504 110.219 271.563 110.125 271.563 110 cv
271.75 109.969 li
271.781 109.906 271.844 109.844 271.938 109.781 cv
272.125 109.641 li
273 109.313 li
273.25 109.297 li
273.641 109.188 li
274.406 109.234 li
274.422 109.297 li
274.492 109.32 274.57 109.383 274.656 109.484 cv
274.656 109.547 li
274.859 109.672 li
274.766 109.953 li
274.75 110.063 li
274.695 110.262 274.582 110.359 274.406 110.359 cv
274.258 110.359 274.156 110.293 274.094 110.156 cv
274.094 110.125 li
273.938 110.109 li
273.781 110.156 li
273.625 110.047 li
273.531 110.109 li
273.426 110.109 273.332 110.141 273.25 110.203 cv
273.125 110.203 273.008 110.25 272.906 110.344 cv
272.75 110.344 li
272.641 110.438 li
272.469 110.469 li
272.438 110.5 li
272.375 110.531 li
272.266 110.641 li
272.234 110.656 li
272.125 110.813 li
271.984 110.891 li
271.953 110.996 271.93 111.086 271.922 111.156 cv
271.93 111.273 271.945 111.344 271.969 111.375 cv
271.988 111.406 272.039 111.445 272.125 111.484 cv
272.125 111.547 li
272.281 111.641 li
272.414 111.684 272.516 111.734 272.578 111.797 cv
272.813 111.797 li
272.969 111.922 li
273.25 111.953 li
273.359 112.031 li
273.828 112.156 li
273.891 112.297 li
273.938 112.203 li
274.039 112.203 274.176 112.258 274.344 112.359 cv
274.563 112.391 li
274.594 112.469 li
274.781 112.469 li
275.125 112.672 li
275.156 112.777 275.242 112.871 275.391 112.953 cv
275.516 113.031 li
275.484 113.188 li
275.535 113.262 275.563 113.344 275.563 113.438 cv
275.563 113.469 li
cp
f
206.168 47.7578 mo
206.168 46.1021 205.84 44.4409 205.203 42.9102 cv
204.57 41.3789 203.629 39.9731 202.457 38.8008 cv
201.285 37.6289 199.879 36.6909 198.348 36.0552 cv
196.816 35.4219 195.16 35.0898 193.5 35.0938 cv
191.844 35.0898 190.184 35.4219 188.656 36.0552 cv
187.121 36.6909 185.719 37.6289 184.547 38.8008 cv
183.371 39.9731 182.434 41.3789 181.801 42.9102 cv
181.164 44.4409 180.836 46.1021 180.836 47.7578 cv
180.836 49.4141 181.164 51.0742 181.801 52.605 cv
182.434 54.1372 183.371 55.543 184.547 56.7148 cv
185.719 57.8872 187.121 58.8242 188.656 59.4609 cv
190.184 60.0938 191.844 60.4258 193.5 60.4219 cv
195.16 60.4258 196.816 60.0938 198.348 59.4609 cv
199.879 58.8242 201.285 57.8872 202.457 56.7148 cv
203.629 55.543 204.57 54.1372 205.203 52.605 cv
205.84 51.0742 206.168 49.4141 206.168 47.7578 cv
206.168 47.7578 li
cp
.0588235 .4 .972549 rgb
f
gsave
0 121 mo
295 121 li
295 0 li
0 0 li
0 121 li
cp
clp
3.66113 lw
14.5078 68.6602 mo
53.8628 90.8008 111.719 113.68 177.535 61.0391 cv
0 0 0 rgb
@
grestore
189.957 50.2729 mo
182.031 65.8672 li
173.859 57.1211 li
189.957 50.2729 li
cp
0 0 0 rgb
f
.915283 lw
189.957 50.2729 mo
182.031 65.8672 li
173.859 57.1211 li
189.957 50.2729 li
cp
@
102.73 104.691 mo
103.059 104.676 103.371 104.691 103.699 104.676 cv
104.668 104.629 105.84 104.551 106.793 104.535 cv
106.121 105.176 105.746 105.551 103.324 107.379 cv
98.4961 111.051 97.9648 112.613 97.9648 112.707 cv
97.9648 113.035 98.3091 113.035 98.5122 113.035 cv
98.9019 113.035 98.918 113.02 99.0898 112.77 cv
99.9492 111.582 100.84 111.41 101.215 111.41 cv
101.871 111.41 102.418 111.816 102.777 112.082 cv
103.512 112.613 104.105 113.035 105.027 113.035 cv
107.699 113.035 109.449 110.129 109.449 109.207 cv
109.449 108.879 109.043 108.879 108.871 108.879 cv
108.699 108.879 108.434 108.879 108.371 109.098 cv
108.152 109.551 107.918 110.145 106.309 110.332 cv
106.168 110.363 101.512 110.551 100.98 110.582 cv
101.652 109.926 102.027 109.551 104.465 107.707 cv
109.293 104.02 109.824 102.473 109.824 102.379 cv
109.824 102.035 109.496 102.035 109.277 102.035 cv
108.918 102.035 108.871 102.035 108.73 102.285 cv
108.152 103.113 107.699 103.66 107.121 103.66 cv
106.496 103.66 105.98 103.285 105.434 102.91 cv
104.855 102.473 104.262 102.035 103.371 102.035 cv
101.262 102.035 99.9019 104.176 99.9019 104.91 cv
99.9019 105.238 100.293 105.238 100.48 105.238 cv
100.699 105.238 100.965 105.238 101.027 104.941 cv
101.371 104.77 101.527 104.738 102.246 104.691 cv
102.73 104.691 li
cp
f
114.016 104.871 mo
113.547 104.871 113.188 105.277 113.188 105.809 cv
113.188 106.371 113.531 106.746 114.031 106.746 cv
114.5 106.746 114.906 106.34 114.906 105.84 cv
114.906 105.324 114.5 104.871 114.016 104.871 cv
114.016 104.871 li
cp
114.156 114.418 mo
113.734 114.98 113.609 115.121 113.438 115.324 cv
113.141 115.621 112.875 115.793 112.703 115.793 cv
112.563 115.793 112.422 115.652 112.422 115.527 cv
112.422 115.355 112.484 115.09 112.609 114.746 cv
112.609 114.699 112.656 114.574 112.688 114.434 cv
112.688 114.402 li
112.703 114.371 li
114.266 108.668 li
114.219 108.637 li
112.422 108.965 112.078 109.027 111.391 109.074 cv
111.391 109.355 li
112.328 109.371 112.5 109.434 112.5 109.777 cv
112.5 109.918 112.453 110.215 112.344 110.559 cv
111.484 113.699 li
111.203 114.715 111.094 115.262 111.094 115.621 cv
111.094 116.277 111.391 116.621 111.922 116.621 cv
112.734 116.621 113.375 116.09 114.391 114.605 cv
114.156 114.418 li
cp
f
118.75 116.418 mo
118.75 115.246 118.297 114.559 117.609 114.559 cv
117.031 114.559 116.672 114.996 116.672 115.496 cv
116.672 115.98 117.031 116.434 117.609 116.434 cv
117.828 116.434 118.063 116.355 118.234 116.199 cv
118.281 116.168 118.297 116.152 118.328 116.152 cv
118.344 116.152 118.359 116.168 118.359 116.418 cv
118.359 117.73 117.734 118.793 117.156 119.371 cv
116.953 119.559 116.953 119.605 116.953 119.652 cv
116.953 119.777 117.047 119.84 117.141 119.84 cv
117.328 119.84 118.75 118.48 118.75 116.418 cv
118.75 116.418 li
cp
f
126.711 104.871 mo
126.227 104.871 125.883 105.262 125.883 105.809 cv
125.883 106.371 126.211 106.746 126.727 106.746 cv
127.18 106.746 127.586 106.34 127.586 105.84 cv
127.586 105.324 127.18 104.871 126.711 104.871 cv
126.711 104.871 li
cp
127.055 108.668 mo
127.008 108.637 li
125.43 108.918 124.555 109.059 124.008 109.074 cv
124.008 109.355 li
124.477 109.355 li
124.602 109.34 li
124.742 109.324 125.102 109.434 125.18 109.496 cv
125.258 109.574 125.305 109.73 125.305 109.902 cv
125.305 110.09 125.227 110.559 125.023 111.324 cv
123.758 116.48 li
123.148 118.902 122.742 119.684 122.039 119.684 cv
121.82 119.684 121.727 119.621 121.727 119.496 cv
121.727 119.418 121.742 119.387 121.805 119.293 cv
121.914 119.152 121.945 119.074 121.945 118.934 cv
121.945 118.559 121.633 118.277 121.227 118.277 cv
120.82 118.277 120.523 118.59 120.523 119.012 cv
120.523 119.637 121.102 120.09 121.914 120.09 cv
123.461 120.09 124.508 118.746 125.227 115.934 cv
127.055 108.668 li
cp
f
gsave
0 0 mo
224.813 0 li
224.813 114.582 li
0 114.582 li
0 0 li
cp
clp
3.50732 lw
[2.66729 5.33271 ] 0 dsh
15.4102 64.2734 mo
59.1289 30.3672 84.563 28.5698 174.641 43.1992 cv
@
grestore
190.859 45.8872 mo
173.656 49.0591 li
175.641 37.2578 li
190.859 45.8872 li
cp
f
.876831 lw
190.859 45.8872 mo
173.656 49.0591 li
175.641 37.2578 li
190.859 45.8872 li
cp
@
27.1719 68.6602 mo
27.1758 67 26.8438 65.3438 26.2109 63.8125 cv
25.5742 62.2813 24.6372 60.875 23.4648 59.7031 cv
22.293 58.5308 20.8872 57.5898 19.355 56.957 cv
17.8242 56.3198 16.1641 55.9922 14.5078 55.9922 cv
12.8481 55.9922 11.1909 56.3198 9.66016 56.957 cv
8.12891 57.5898 6.72314 58.5308 5.55078 59.7031 cv
4.37891 60.875 3.44092 62.2813 2.80518 63.8125 cv
2.17188 65.3438 1.83984 67 1.84375 68.6602 cv
1.83984 70.3164 2.17188 71.9727 2.80518 73.5039 cv
3.44092 75.0391 4.37891 76.4414 5.55078 77.6133 cv
6.72314 78.7891 8.12891 79.7266 9.66016 80.3594 cv
11.1909 80.9961 12.8481 81.3242 14.5078 81.3242 cv
16.1641 81.3242 17.8242 80.9961 19.355 80.3594 cv
20.8872 79.7266 22.293 78.7891 23.4648 77.6133 cv
24.6372 76.4414 25.5742 75.0391 26.2109 73.5039 cv
26.8438 71.9727 27.1758 70.3164 27.1719 68.6602 cv
27.1719 68.6602 li
cp
.0588235 .4 .972549 rgb
f
10.8359 88.5469 mo
7.83594 84.5625 li
6.36719 84.5625 li
3.39795 88.5469 li
4.21094 88.5469 li
7.10205 86.0938 li
10.0229 88.5469 li
10.8359 88.5469 li
cp
0 0 0 rgb
f
gsave
0 121 mo
295 121 li
295 0 li
0 0 li
0 121 li
cp
clp
6.30078 89.8438 mo
6.08203 89.8281 5.89502 89.7969 5.77002 89.7969 cv
4.69092 89.7969 3.59814 90.6563 3.41016 91.6406 cv
3.20703 92.5156 3.61279 93.0469 4.69092 93.3906 cv
4.00391 93.9531 3.55078 94.6719 3.41016 95.4688 cv
3.20703 96.375 3.45703 97.1406 4.19092 98 cv
3.23779 98.625 2.75391 98.9844 2.25391 99.4531 cv
1.20703 100.453 .39502 101.922 .112793 103.297 cv
-.276855 105.188 .362793 106.938 1.66016 107.656 cv
2.34814 108.031 3.23779 108.188 4.69092 108.188 cv
5.12891 108.188 5.64502 108.156 6.80078 108.109 cv
7.73779 108.063 8.34814 108.75 8.16016 109.688 cv
7.97314 110.594 7.20703 111.266 6.31592 111.266 cv
6.20703 111.266 5.75391 111.219 5.30078 111.125 cv
4.73779 111.047 4.55078 111.031 4.33203 111.031 cv
3.73779 111.031 3.23779 111.438 3.11279 112.031 cv
2.95703 112.844 3.66016 113.422 4.83203 113.422 cv
5.95703 113.422 6.92578 112.938 7.89502 111.906 cv
8.75391 111 9.36279 109.906 9.56592 108.797 cv
9.78516 107.734 9.55078 106.891 8.91016 106.313 cv
8.44092 105.891 7.94092 105.766 6.86279 105.766 cv
4.78516 105.766 li
3.77002 105.766 2.95703 105.672 2.56592 105.484 cv
1.62891 105.031 1.16016 103.906 1.42578 102.656 cv
1.75391 100.969 3.06592 99.5313 5.30078 98.375 cv
5.91016 98.625 6.39502 98.6885 7.12891 98.6885 cv
9.02002 98.6885 10.27 98.1875 10.4258 97.3594 cv
10.5508 96.7969 9.97314 96.4844 8.92578 96.4844 cv
7.98779 96.4844 7.08203 96.75 5.27002 97.5 cv
4.37891 96.75 4.14502 96.2813 4.28516 95.5156 cv
4.45703 94.7656 5.05078 94.0469 6.05078 93.3906 cv
7.28516 93.3281 8.11279 93.1875 8.83203 92.8594 cv
9.72314 92.4531 10.3628 91.8594 10.4878 91.2969 cv
10.5508 90.8438 10.2378 90.5938 9.56592 90.5938 cv
8.69092 90.5938 7.56592 91.1406 5.80078 92.5 cv
5.03516 92.4688 4.62891 92.0156 4.73779 91.4063 cv
4.83203 90.875 5.31592 90.5156 6.20703 90.2813 cv
6.30078 89.8438 li
cp
f
grestore
14.0742 100.133 mo
13.605 100.133 13.2461 100.539 13.2461 101.07 cv
13.2461 101.633 13.5898 102.008 14.0898 102.008 cv
14.5591 102.008 14.9648 101.602 14.9648 101.102 cv
14.9648 100.586 14.5591 100.133 14.0742 100.133 cv
14.0742 100.133 li
cp
14.2148 109.68 mo
13.793 110.242 13.668 110.383 13.4961 110.586 cv
13.1992 110.883 12.9341 111.055 12.7622 111.055 cv
12.6211 111.055 12.48 110.914 12.48 110.789 cv
12.48 110.617 12.543 110.352 12.668 110.008 cv
12.668 109.961 12.7148 109.836 12.7461 109.695 cv
12.7461 109.664 li
12.7622 109.633 li
14.3242 103.93 li
14.2769 103.898 li
12.48 104.227 12.1372 104.289 11.4492 104.336 cv
11.4492 104.617 li
12.3872 104.633 12.5591 104.695 12.5591 105.039 cv
12.5591 105.18 12.5122 105.477 12.4019 105.82 cv
11.543 108.961 li
11.2622 109.977 11.1519 110.523 11.1519 110.883 cv
11.1519 111.539 11.4492 111.883 11.98 111.883 cv
12.793 111.883 13.4341 111.352 14.4492 109.867 cv
14.2148 109.68 li
cp
f
213.031 57.3052 mo
210.031 53.3198 li
208.563 53.3198 li
205.594 57.3052 li
206.406 57.3052 li
209.297 54.8521 li
212.219 57.3052 li
213.031 57.3052 li
cp
f
208.496 58.5981 mo
208.277 58.582 208.09 58.5508 207.965 58.5508 cv
206.887 58.5508 205.793 59.4102 205.605 60.3945 cv
205.402 61.2695 205.809 61.8008 206.887 62.1445 cv
206.199 62.707 205.746 63.4258 205.605 64.2227 cv
205.402 65.1289 205.652 65.8945 206.387 66.7539 cv
205.434 67.3789 204.949 67.7383 204.449 68.207 cv
203.402 69.207 202.59 70.6758 202.309 72.0508 cv
201.918 73.9414 202.559 75.6914 203.855 76.4102 cv
204.543 76.7852 205.434 76.9414 206.887 76.9414 cv
207.324 76.9414 207.84 76.9102 208.996 76.8633 cv
209.934 76.8164 210.543 77.5039 210.355 78.4414 cv
210.168 79.3477 209.402 80.0195 208.512 80.0195 cv
208.402 80.0195 207.949 79.9727 207.496 79.8789 cv
206.934 79.8008 206.746 79.7852 206.527 79.7852 cv
205.934 79.7852 205.434 80.1914 205.309 80.7852 cv
205.152 81.5977 205.855 82.1758 207.027 82.1758 cv
208.152 82.1758 209.121 81.6914 210.09 80.6602 cv
210.949 79.7539 211.559 78.6602 211.762 77.5508 cv
211.98 76.4883 211.746 75.6445 211.105 75.0664 cv
210.637 74.6445 210.137 74.5195 209.059 74.5195 cv
206.98 74.5195 li
205.965 74.5195 205.152 74.4258 204.762 74.2383 cv
203.824 73.7852 203.355 72.6602 203.621 71.4102 cv
203.949 69.7227 205.262 68.2852 207.496 67.1289 cv
208.105 67.3789 208.59 67.4414 209.324 67.4414 cv
211.215 67.4414 212.465 66.9414 212.621 66.1133 cv
212.746 65.5508 212.168 65.2383 211.121 65.2383 cv
210.184 65.2383 209.277 65.5039 207.465 66.2539 cv
206.574 65.5039 206.34 65.0352 206.48 64.2695 cv
206.652 63.5195 207.246 62.8008 208.246 62.1445 cv
209.48 62.082 210.309 61.9414 211.027 61.6133 cv
211.918 61.207 212.559 60.6133 212.684 60.0508 cv
212.746 59.5981 212.434 59.3481 211.762 59.3481 cv
210.887 59.3481 209.762 59.895 207.996 61.2539 cv
207.23 61.2227 206.824 60.7695 206.934 60.1602 cv
207.027 59.6289 207.512 59.27 208.402 59.0352 cv
208.496 58.5981 li
cp
f
219.145 68.8906 mo
218.66 68.8906 218.316 69.2813 218.316 69.8281 cv
218.316 70.3906 218.645 70.7656 219.16 70.7656 cv
219.613 70.7656 220.02 70.3594 220.02 69.8594 cv
220.02 69.3438 219.613 68.8906 219.145 68.8906 cv
219.145 68.8906 li
cp
219.488 72.6875 mo
219.441 72.6563 li
217.863 72.9375 216.988 73.0781 216.441 73.0938 cv
216.441 73.375 li
216.91 73.375 li
217.035 73.3594 li
217.176 73.3438 217.535 73.4531 217.613 73.5156 cv
217.691 73.5938 217.738 73.75 217.738 73.9219 cv
217.738 74.1094 217.66 74.5781 217.457 75.3438 cv
216.191 80.5 li
215.582 82.9219 215.176 83.7031 214.473 83.7031 cv
214.254 83.7031 214.16 83.6406 214.16 83.5156 cv
214.16 83.4375 214.176 83.4063 214.238 83.3135 cv
214.348 83.1719 214.379 83.0938 214.379 82.9531 cv
214.379 82.5781 214.066 82.2969 213.66 82.2969 cv
213.254 82.2969 212.957 82.6094 212.957 83.0313 cv
212.957 83.6563 213.535 84.1094 214.348 84.1094 cv
215.895 84.1094 216.941 82.7656 217.66 79.9531 cv
219.488 72.6875 li
cp
f
87.6328 6.19922 mo
87.3052 6.19922 87.0698 6.46484 87.0698 6.82422 cv
87.0698 7.21484 87.2891 7.46484 87.6328 7.46484 cv
87.9448 7.46484 88.2271 7.18408 88.2271 6.85498 cv
88.2271 6.51221 87.9448 6.19922 87.6328 6.19922 cv
87.6328 6.19922 li
cp
87.7271 12.6519 mo
87.4302 13.0269 87.3521 13.1211 87.2271 13.2622 cv
87.0229 13.4648 86.8521 13.5742 86.7422 13.5742 cv
86.6479 13.5742 86.5552 13.48 86.5552 13.4019 cv
86.5552 13.2769 86.5859 13.105 86.6802 12.8711 cv
86.6802 12.8398 86.7109 12.7622 86.7271 12.668 cv
86.7271 12.6372 li
86.7422 12.605 li
87.7891 8.76221 li
87.7578 8.74609 li
86.5552 8.96484 86.3198 8.99609 85.8521 9.04297 cv
85.8521 9.22998 li
86.4771 9.24609 86.6021 9.27686 86.6021 9.51221 cv
86.6021 9.60498 86.5698 9.80908 86.4922 10.043 cv
85.9141 12.1519 li
85.7271 12.855 85.6479 13.23 85.6479 13.4648 cv
85.6479 13.9019 85.8521 14.1372 86.2109 14.1372 cv
86.7578 14.1372 87.1948 13.7769 87.8828 12.7769 cv
87.7271 12.6519 li
cp
f
95.5659 5.74609 mo
96.707 5.74609 li
94.2539 2.22998 li
92.4258 2.22998 li
89.9878 5.74609 li
91.1128 5.74609 li
93.3481 3.79297 li
95.5659 5.74609 li
cp
f
93.6758 7.02002 mo
93.4878 7.00391 93.332 6.97314 93.2378 6.97314 cv
92.332 6.97314 91.4258 7.69092 91.2539 8.52002 cv
91.0981 9.25391 91.4409 9.69092 92.332 9.97314 cv
91.7539 10.4409 91.3789 11.0352 91.2539 11.707 cv
91.0981 12.457 91.3008 13.0981 91.9102 13.8159 cv
91.1128 14.332 90.7231 14.6289 90.3008 15.02 cv
89.4258 15.8628 88.7539 17.082 88.5039 18.2378 cv
88.1909 19.8008 88.7231 21.27 89.8008 21.8628 cv
90.3789 22.1758 91.1128 22.3008 92.332 22.3008 cv
92.6909 22.3008 93.1289 22.2852 94.082 22.2378 cv
94.8628 22.1909 95.3789 22.77 95.2231 23.5508 cv
95.0659 24.3159 94.4258 24.8628 93.6909 24.8628 cv
93.5981 24.8628 93.207 24.832 92.832 24.7539 cv
92.3789 24.6909 92.2231 24.6758 92.0352 24.6758 cv
91.5352 24.6758 91.1128 25.0039 91.02 25.5039 cv
90.8789 26.1758 91.4731 26.6602 92.457 26.6602 cv
93.395 26.6602 94.1909 26.27 95.0039 25.4102 cv
95.7231 24.645 96.2231 23.7378 96.395 22.8159 cv
96.582 21.9258 96.3789 21.2231 95.8481 20.7378 cv
95.457 20.3789 95.0508 20.2852 94.145 20.2852 cv
92.4102 20.2852 li
91.5508 20.2852 90.8789 20.207 90.5659 20.0508 cv
89.7852 19.6758 89.395 18.7378 89.6128 17.6909 cv
89.8789 16.2852 90.9878 15.082 92.832 14.1289 cv
93.3481 14.332 93.7539 14.395 94.3628 14.395 cv
95.9409 14.395 96.9731 13.9731 97.1128 13.27 cv
97.2231 12.8159 96.7378 12.5508 95.8628 12.5508 cv
95.082 12.5508 94.332 12.77 92.8159 13.395 cv
92.082 12.77 91.8789 12.3789 92.0039 11.7378 cv
92.1289 11.1289 92.6289 10.52 93.4731 9.97314 cv
94.4878 9.92578 95.1909 9.80078 95.7852 9.53516 cv
96.52 9.19092 97.0508 8.69092 97.1602 8.23779 cv
97.2231 7.84814 96.957 7.62891 96.395 7.62891 cv
95.6602 7.62891 94.7231 8.09814 93.2539 9.22314 cv
92.6128 9.20703 92.27 8.83203 92.3789 8.31592 cv
92.457 7.87891 92.8481 7.58203 93.5981 7.37891 cv
93.6758 7.02002 li
cp
f
105.066 17.832 mo
104.676 17.832 104.379 18.145 104.379 18.6128 cv
104.379 19.082 104.66 19.395 105.082 19.395 cv
105.473 19.395 105.816 19.0508 105.816 18.645 cv
105.816 18.207 105.473 17.832 105.066 17.832 cv
105.066 17.832 li
cp
105.363 21.0039 mo
105.316 20.9731 li
104.004 21.207 103.27 21.3159 102.816 21.332 cv
102.816 21.5659 li
103.207 21.5659 li
103.316 21.5508 li
103.441 21.5508 103.723 21.6289 103.801 21.6909 cv
103.863 21.7539 103.91 21.8789 103.91 22.0352 cv
103.91 22.1758 103.832 22.582 103.676 23.207 cv
102.613 27.52 li
102.113 29.5352 101.77 30.1909 101.176 30.1909 cv
101.004 30.1909 100.91 30.1289 100.91 30.02 cv
100.91 29.9731 100.926 29.9409 100.988 29.8628 cv
101.082 29.7378 101.098 29.6758 101.098 29.5508 cv
101.098 29.2378 100.832 29.0039 100.504 29.0039 cv
100.16 29.0039 99.9102 29.27 99.9102 29.6289 cv
99.9102 30.145 100.395 30.52 101.082 30.52 cv
102.363 30.52 103.238 29.4102 103.832 27.0659 cv
105.363 21.0039 li
cp
f
161.305 3.85889 mo
161.242 4.07813 li
161.258 4.20313 li
161.117 4.67188 li
161.102 4.84375 li
160.93 5.01611 li
160.867 5.25 li
160.742 5.43799 li
160.539 5.85889 li
160.32 6.25 li
159.961 6.76611 li
159.914 6.92188 li
159.727 7.23389 li
159.523 7.65625 li
159.164 8.31299 li
159.086 8.59375 li
158.898 8.875 li
158.539 8.75 li
158.336 8.625 li
158.148 8.06299 li
157.898 7.65625 li
157.898 7.54688 li
157.758 7.20313 li
157.695 7.125 li
157.195 6.07813 li
157.039 5.82813 li
156.914 6.03076 li
156.711 6.18799 li
156.445 6.56299 li
156.242 6.76611 li
156.133 7.07813 li
155.883 7.40576 li
155.852 7.51611 li
155.68 7.89111 li
155.68 8.06299 li
155.555 8.23389 li
155.539 8.40625 li
155.414 8.43799 li
155.148 8.71875 li
155.211 8.68799 li
155.125 8.73779 155.016 8.77002 154.883 8.78125 cv
154.789 8.68799 li
154.617 8.625 li
154.617 8.48389 li
154.539 8.39111 li
154.477 8.06299 li
154.383 7.84375 li
154.383 7.68799 li
154.367 7.64111 li
154.18 7.125 li
154.133 6.81299 li
154.023 6.67188 li
154.039 6.51611 li
153.914 6.23389 li
153.914 6.125 li
153.82 5.85889 li
153.648 5.625 li
153.68 5.35889 li
153.664 5.28076 li
153.539 4.96875 li
153.508 4.78076 li
153.445 4.65625 li
153.391 4.58594 153.355 4.50781 153.336 4.42188 cv
153.133 3.90625 li
153.289 3.68799 li
153.34 3.60498 153.445 3.54688 153.602 3.51611 cv
153.852 3.48389 li
153.93 3.60889 li
154.086 3.67188 li
154.195 3.89111 li
154.289 3.96875 li
154.258 4.17188 li
154.305 4.28125 li
154.273 4.39111 li
154.383 4.59375 li
154.367 4.76611 li
154.523 5.31299 li
154.492 5.43799 li
154.57 5.76611 li
154.742 6.14111 li
154.805 6.60889 li
154.93 6.75 li
154.93 7.03076 li
155.008 7.28125 li
155.023 7.39111 li
155.195 7.28125 li
155.461 6.82813 li
155.555 6.625 li
155.648 6.45313 li
155.648 6.38281 155.664 6.32422 155.695 6.28076 cv
155.773 6.28076 li
155.805 6.06299 li
155.93 6.04688 li
155.949 5.97705 155.984 5.92188 156.039 5.89111 cv
156.039 5.875 li
156.039 5.82422 156.063 5.77686 156.117 5.73389 cv
156.086 5.64111 li
156.148 5.625 li
156.133 5.54688 li
156.203 5.42188 156.289 5.32813 156.383 5.26611 cv
156.383 5.01611 li
156.555 4.92188 li
156.602 4.89111 li
156.617 4.85889 li
156.574 4.78906 156.555 4.69922 156.555 4.59375 cv
156.555 4.46094 156.621 4.31982 156.758 4.17188 cv
156.828 4.14111 156.918 4.125 157.023 4.125 cv
157.086 4.125 157.133 4.13281 157.164 4.14111 cv
157.383 4.34375 li
157.508 4.53076 li
157.586 4.81299 li
157.695 5 li
157.664 5.14111 li
157.742 5.40625 li
157.742 5.51611 li
157.945 5.875 li
157.945 5.90576 li
158.008 5.93799 li
158.242 6.51611 li
158.258 6.67188 li
158.367 6.81299 li
158.648 7.43799 li
158.711 7.32813 li
158.93 6.875 li
159.055 6.76611 li
159.148 6.51611 li
159.273 6.45313 li
159.273 6.28076 li
159.324 6.24219 159.387 6.19922 159.461 6.15625 cv
159.512 6.13721 159.539 6.11719 159.539 6.09375 cv
159.523 5.84375 li
159.664 5.70313 li
159.727 5.67188 li
159.914 5.35889 li
159.914 5.32813 li
159.922 5.24609 159.977 5.14795 160.07 5.03125 cv
160.039 4.90576 li
160.258 4.64111 li
160.367 4.375 li
160.273 4.13721 160.227 3.93408 160.227 3.76611 cv
160.227 3.51611 160.355 3.375 160.617 3.34375 cv
160.945 3.43799 li
160.992 3.35889 li
161.07 3.46875 li
161.195 3.56299 li
161.148 3.68799 li
161.305 3.85889 li
cp
.360784 .360784 .360784 rgb
f
166.906 8.57813 mo
166.906 8.89795 166.734 9.06299 166.391 9.06299 cv
166.223 9.06299 166.102 8.99219 166.031 8.85889 cv
165.945 8.74219 165.879 8.53076 165.828 8.21875 cv
165.828 8.06299 li
165.848 8.02295 165.859 7.97998 165.859 7.93799 cv
165.859 7.91797 165.852 7.89795 165.844 7.875 cv
165.672 7.625 li
165.797 7.39111 li
165.75 7.14111 li
165.797 7 li
165.797 6.84375 li
165.828 6.70313 li
165.766 6.48389 li
165.828 6.375 li
165.828 5.46875 li
165.75 5.06299 li
165.797 4.92188 li
165.719 4.625 li
165.609 4.70313 li
165.359 4.81299 li
165 5.26611 li
164.844 5.26611 li
164.641 5.60889 li
164.594 5.75 li
164.469 5.81299 li
164.328 6.01611 li
164.266 6.14111 li
164.141 6.56299 li
163.922 6.82813 li
163.875 7 li
163.75 7.09375 li
163.703 7.39111 li
163.469 7.59375 li
163.438 8.04688 li
163.328 8.04688 li
163.281 8.10889 li
163.078 8.48389 li
162.875 8.70313 li
162.688 8.93799 li
162.5 8.89111 li
162.344 8.89111 li
162.203 8.68799 li
162.063 8.26611 li
162.047 7.625 li
162 7.42188 li
162.047 7.17188 li
162.016 6.60889 li
162.109 6.59375 li
162.172 5.76611 li
162.219 5.60889 li
162.188 5.35889 li
162.25 5.31299 li
162.297 4.93799 li
162.344 4.79688 li
162.297 4.64111 li
162.328 4.57813 li
162.313 4.54688 li
162.344 4.20313 li
162.25 4.125 li
162.328 3.95313 li
162.313 3.60889 li
162.188 3.25 li
162.281 3.14111 li
162.203 2.82813 li
162.203 2.625 li
162.156 2.54688 li
162.094 2.15576 li
162.047 1.98389 li
161.859 1.64111 li
162 1.46875 li
162.109 1.26611 li
162.219 1.26611 li
162.395 1.26611 162.523 1.32813 162.609 1.45313 cv
162.781 1.59375 li
162.859 1.79688 li
163.031 1.95313 li
163 2.125 li
163.078 2.375 li
163.078 2.40625 li
163.094 2.42188 li
163.078 2.82813 li
163.094 3.34375 li
163.188 3.68799 li
163.125 3.82813 li
163.141 4.03076 li
163.078 4.20313 li
163.125 4.48389 li
163.063 4.73389 li
163.078 4.78076 li
163.063 5.51611 li
163.094 5.67188 li
163.031 5.76611 li
162.984 6.15625 li
162.938 6.34375 li
162.984 6.65576 li
162.938 6.76611 li
162.922 7 li
163.016 6.97998 163.063 6.93408 163.063 6.85889 cv
163.156 6.76611 li
163.234 6.60889 li
163.266 6.375 li
163.391 6.18799 li
163.469 5.93799 li
163.656 5.75 li
163.703 5.51611 li
163.813 5.51611 li
163.813 5.40625 li
163.828 5.26611 li
163.969 5.17188 li
163.969 5.07813 li
164.094 5.06299 li
164.109 4.85889 li
164.109 4.76611 li
164.328 4.67188 li
164.375 4.625 li
164.359 4.5 li
164.469 4.46875 li
164.547 4.26611 li
164.688 4.26611 li
164.828 4.17188 li
164.828 4.12109 164.832 4.08594 164.844 4.06299 cv
164.969 4 li
165.113 3.875 165.25 3.80518 165.375 3.78076 cv
165.375 3.76611 li
165.582 3.66406 165.727 3.60889 165.813 3.60889 cv
165.926 3.60889 166.035 3.66406 166.141 3.76611 cv
166.223 3.79688 166.273 3.85889 166.297 3.95313 cv
166.406 4.01611 li
166.438 4.18799 li
166.625 4.46875 li
166.625 5.42188 li
166.609 5.84375 li
166.656 5.95313 li
166.656 6.84375 li
166.625 7 li
166.625 7.23389 li
166.656 7.5 li
166.609 7.73389 li
166.641 7.85205 166.66 7.94922 166.672 8.03125 cv
166.813 8.15576 li
166.813 8.26611 li
166.859 8.29688 li
166.891 8.43408 166.906 8.52686 166.906 8.57813 cv
166.906 8.57813 li
cp
f
171.848 4.46875 mo
171.801 4.39111 li
171.707 4.35889 li
171.332 4.06299 li
171.098 4.01611 li
170.91 4.01611 li
170.879 4 li
170.785 4.03076 li
170.676 3.96875 li
170.363 3.96875 li
170.41 4.01611 li
170.129 4.125 li
170.082 4.17188 li
170.051 4.18799 li
169.902 4.31299 169.801 4.41406 169.738 4.48389 cv
169.66 4.78076 li
169.613 4.89111 li
169.738 5.06299 li
169.535 5.21875 li
169.551 5.26611 li
169.465 5.41406 169.426 5.55908 169.426 5.70313 cv
169.316 5.82813 li
169.316 6.04688 li
169.223 6.14111 li
169.207 6.25 li
169.16 6.28076 li
169.16 6.45313 li
169.129 6.5 li
169.129 6.60498 169.121 6.68408 169.113 6.73389 cv
169.129 6.79688 li
169.02 7.01611 li
169.066 7.09375 li
168.988 7.21875 li
169.066 7.43799 li
168.941 7.60889 li
168.957 7.84375 li
168.957 7.875 li
169.004 7.90576 li
169.066 7.89111 li
169.105 7.85205 169.148 7.81299 169.191 7.78076 cv
169.16 7.68799 li
169.332 7.65625 li
169.379 7.57813 li
170.082 7 li
170.145 6.96875 li
170.238 6.76611 li
170.277 6.75781 170.348 6.72705 170.441 6.67188 cv
170.504 6.48389 li
170.613 6.48389 li
170.566 6.28076 li
170.738 6.25 li
170.758 6.21875 170.785 6.18408 170.816 6.14111 cv
170.855 6.08984 170.895 6.04297 170.926 6 cv
171.551 5.18799 li
171.645 5 li
171.629 4.95313 li
171.707 4.82813 li
171.738 4.68799 li
171.848 4.59375 li
171.848 4.46875 li
cp
172.988 3.84375 mo
172.879 4 li
172.973 4.28125 li
172.816 4.46875 li
172.754 4.71875 li
172.723 4.78076 li
172.738 4.84375 li
172.738 4.94922 172.711 5.03125 172.66 5.09375 cv
172.629 5.125 li
172.629 5.17188 li
172.66 5.23389 172.676 5.28906 172.676 5.32813 cv
172.676 5.37109 172.668 5.40186 172.66 5.42188 cv
172.676 5.46875 li
172.629 5.59375 li
172.66 5.73389 li
172.566 5.82813 li
172.598 6 li
172.676 6.09375 li
172.566 6.18799 li
172.566 6.375 li
172.473 6.56299 li
172.535 6.76611 li
172.473 6.85889 li
172.582 6.93799 li
172.426 7.21875 li
172.41 7.25 li
172.535 7.28125 li
172.441 7.54688 li
172.441 7.59375 li
172.441 7.65625 172.434 7.70313 172.426 7.73389 cv
172.441 7.76611 li
172.629 7.79688 li
172.785 8.03125 li
172.707 8.21875 li
172.832 8.20313 li
172.883 8.29688 172.914 8.38281 172.926 8.45313 cv
172.738 8.625 li
172.684 8.68799 172.605 8.74219 172.504 8.79688 cv
172.301 8.90576 li
172.238 8.84375 li
172.113 8.92188 li
171.754 8.48389 li
171.754 8.28076 li
171.699 8.125 171.676 7.97998 171.676 7.84375 cv
171.676 7.76611 li
171.598 7.06299 li
171.707 6.56299 li
171.629 6.26611 li
171.426 6.60889 li
171.316 6.92188 li
171.223 6.96875 li
171.051 7.23389 li
170.754 7.5 li
170.66 7.64111 li
170.41 7.875 li
170.348 8.03125 li
169.957 8.26611 li
169.551 8.73389 li
169.316 8.78125 li
169.16 8.89111 li
168.961 8.89111 168.809 8.81592 168.707 8.67188 cv
168.352 8.49609 168.164 8.24219 168.145 7.90576 cv
168.207 7.875 li
168.191 7.79688 li
168.176 7.65625 li
168.113 7.5 li
168.176 7.32813 li
168.207 7.07813 li
168.285 6.68799 li
168.285 6.68018 168.285 6.66406 168.285 6.64111 cv
168.285 6.62109 168.285 6.60498 168.285 6.59375 cv
168.285 6.56299 168.289 6.52295 168.301 6.46875 cv
168.289 6.46094 168.285 6.43018 168.285 6.375 cv
168.285 6.32422 168.309 6.22998 168.363 6.09375 cv
168.441 6.06299 li
168.398 6.02295 168.379 5.97998 168.379 5.93799 cv
168.379 5.90576 168.383 5.88281 168.395 5.85889 cv
168.383 5.83984 168.379 5.81299 168.379 5.78125 cv
168.379 5.68018 168.426 5.60498 168.52 5.56299 cv
168.539 5.47998 168.582 5.39795 168.645 5.31299 cv
168.598 5.21875 li
168.738 5.04688 li
168.738 5 li
168.738 4.84375 168.789 4.70313 168.895 4.57813 cv
168.879 4.35889 li
168.926 4.31299 li
168.926 4.30518 168.926 4.29297 168.926 4.28125 cv
168.914 4.26221 168.91 4.24609 168.91 4.23389 cv
168.91 4.19482 168.926 4.15576 168.957 4.125 cv
168.957 4.04688 li
168.988 3.96484 169.07 3.84375 169.207 3.68799 cv
169.352 3.53125 169.457 3.39111 169.52 3.26611 cv
169.582 3.32813 li
169.707 3.26611 li
169.77 3.25 li
170.16 3.06299 li
171.082 3.10889 li
171.082 3.18799 li
171.379 3.25 li
171.555 3.25 171.676 3.31299 171.738 3.43799 cv
171.738 3.41797 171.742 3.38721 171.754 3.34375 cv
171.754 3.32422 171.754 3.30908 171.754 3.29688 cv
172.004 3.53125 li
172.223 3.57813 li
172.66 3.46875 li
172.816 3.76611 li
172.988 3.84375 li
cp
f
178.109 4.39111 mo
178.109 4.46484 178.035 4.53076 177.891 4.59375 cv
177.859 4.63721 177.801 4.67188 177.719 4.70313 cv
177.602 4.75781 177.52 4.79688 177.469 4.82813 cv
177.219 4.75 li
177.094 4.84375 176.93 4.89111 176.734 4.89111 cv
176.594 4.84375 li
176.484 4.95313 li
176.156 4.95313 li
175.953 5.07813 li
175.859 5.04688 175.773 5.03125 175.703 5.03125 cv
175.672 5.05518 175.613 5.06982 175.531 5.07813 cv
175.488 5.07813 175.445 5.06982 175.406 5.04688 cv
175.359 5.5 li
175.375 5.82813 li
175.344 6.25 li
175.359 6.71875 li
175.406 6.92188 li
175.406 7.09375 li
175.563 7.45313 li
175.539 7.47705 175.531 7.50781 175.531 7.54688 cv
175.531 7.60205 175.617 7.64111 175.797 7.67188 cv
175.813 7.81299 li
175.906 7.84375 li
176.047 7.95313 li
176.141 8.01611 li
176.223 8.00781 176.281 8 176.313 8 cv
176.383 8 176.457 8.01221 176.531 8.03125 cv
176.563 8.01221 176.629 7.95313 176.734 7.85889 cv
176.805 7.79688 176.875 7.76611 176.938 7.76611 cv
176.945 7.76611 176.957 7.76611 176.969 7.76611 cv
176.988 7.77686 177 7.78076 177 7.78076 cv
177.07 7.625 177.203 7.52686 177.391 7.48389 cv
177.555 7.48389 177.695 7.53906 177.813 7.64111 cv
177.813 7.71875 li
177.813 7.99219 177.711 8.16406 177.516 8.23389 cv
177.453 8.40186 177.301 8.51221 177.063 8.56299 cv
176.922 8.68799 li
176.766 8.68799 li
176.484 8.76611 li
176.422 8.77295 176.332 8.78125 176.219 8.78125 cv
176.156 8.78125 176.086 8.76611 176.016 8.73389 cv
175.859 8.73389 li
175.438 8.51611 li
175.328 8.46875 li
175.078 8.14111 li
174.938 7.98389 li
174.672 7.39111 li
174.578 6.81299 li
174.594 6.67188 li
174.5 6.54688 li
174.563 6.375 li
174.5 6.10889 li
174.578 6.03076 li
174.609 5.875 li
174.578 5.73389 li
174.594 5.51611 li
174.547 5.31299 li
174.609 5.26611 li
174.609 5.06299 li
174.516 5.03125 li
174.297 5.07813 li
174.078 4.92188 li
174.047 4.92188 li
173.809 4.92188 173.688 4.79688 173.688 4.54688 cv
173.688 4.5 li
173.531 4.28125 li
173.766 4.06299 li
174.063 4.10889 li
174.219 4.07813 li
174.453 4.14111 li
174.703 4.14111 li
174.703 3.90625 li
174.547 3.56299 li
174.703 3.48389 li
174.641 3.29688 li
174.656 2.93799 li
174.563 2.78125 li
174.5 2.68799 174.469 2.60498 174.469 2.53076 cv
174.469 2.44922 174.488 2.375 174.531 2.31299 cv
174.578 2.15576 li
174.672 2.06299 li
174.879 2.02295 175.02 2 175.094 2 cv
175.352 2 175.492 2.11719 175.516 2.34375 cv
175.484 2.40625 li
175.535 2.47998 175.563 2.54688 175.563 2.60889 cv
175.563 2.62109 175.555 2.64111 175.547 2.67188 cv
175.516 2.73389 li
175.5 2.82813 li
175.563 2.98389 li
175.547 3.04688 li
175.563 3.20313 li
175.453 3.34375 li
175.516 3.59375 li
175.469 3.875 li
175.563 3.98389 li
175.469 4.20313 li
175.844 4.15576 li
176.5 4.21875 li
177.031 4.125 li
177.219 4.14111 li
177.266 4.125 li
177.734 4.125 li
177.984 4.125 178.109 4.21484 178.109 4.39111 cv
178.109 4.39111 li
cp
f
185.395 4.39111 mo
185.395 4.46484 185.32 4.53076 185.176 4.59375 cv
185.145 4.63721 185.086 4.67188 185.004 4.70313 cv
184.887 4.75781 184.805 4.79688 184.754 4.82813 cv
184.504 4.75 li
184.379 4.84375 184.215 4.89111 184.02 4.89111 cv
183.879 4.84375 li
183.77 4.95313 li
183.441 4.95313 li
183.238 5.07813 li
183.145 5.04688 183.059 5.03125 182.988 5.03125 cv
182.957 5.05518 182.898 5.06982 182.816 5.07813 cv
182.773 5.07813 182.73 5.06982 182.691 5.04688 cv
182.645 5.5 li
182.66 5.82813 li
182.629 6.25 li
182.645 6.71875 li
182.691 6.92188 li
182.691 7.09375 li
182.848 7.45313 li
182.824 7.47705 182.816 7.50781 182.816 7.54688 cv
182.816 7.60205 182.902 7.64111 183.082 7.67188 cv
183.098 7.81299 li
183.191 7.84375 li
183.332 7.95313 li
183.426 8.01611 li
183.508 8.00781 183.566 8 183.598 8 cv
183.668 8 183.742 8.01221 183.816 8.03125 cv
183.848 8.01221 183.914 7.95313 184.02 7.85889 cv
184.09 7.79688 184.16 7.76611 184.223 7.76611 cv
184.23 7.76611 184.242 7.76611 184.254 7.76611 cv
184.273 7.77686 184.285 7.78076 184.285 7.78076 cv
184.355 7.625 184.488 7.52686 184.676 7.48389 cv
184.84 7.48389 184.98 7.53906 185.098 7.64111 cv
185.098 7.71875 li
185.098 7.99219 184.996 8.16406 184.801 8.23389 cv
184.738 8.40186 184.586 8.51221 184.348 8.56299 cv
184.207 8.68799 li
184.051 8.68799 li
183.77 8.76611 li
183.707 8.77295 183.617 8.78125 183.504 8.78125 cv
183.441 8.78125 183.371 8.76611 183.301 8.73389 cv
183.145 8.73389 li
182.723 8.51611 li
182.613 8.46875 li
182.363 8.14111 li
182.223 7.98389 li
181.957 7.39111 li
181.863 6.81299 li
181.879 6.67188 li
181.785 6.54688 li
181.848 6.375 li
181.785 6.10889 li
181.863 6.03076 li
181.895 5.875 li
181.863 5.73389 li
181.879 5.51611 li
181.832 5.31299 li
181.895 5.26611 li
181.895 5.06299 li
181.801 5.03125 li
181.582 5.07813 li
181.363 4.92188 li
181.332 4.92188 li
181.094 4.92188 180.973 4.79688 180.973 4.54688 cv
180.973 4.5 li
180.816 4.28125 li
181.051 4.06299 li
181.348 4.10889 li
181.504 4.07813 li
181.738 4.14111 li
181.988 4.14111 li
181.988 3.90625 li
181.832 3.56299 li
181.988 3.48389 li
181.926 3.29688 li
181.941 2.93799 li
181.848 2.78125 li
181.785 2.68799 181.754 2.60498 181.754 2.53076 cv
181.754 2.44922 181.773 2.375 181.816 2.31299 cv
181.863 2.15576 li
181.957 2.06299 li
182.164 2.02295 182.305 2 182.379 2 cv
182.637 2 182.777 2.11719 182.801 2.34375 cv
182.77 2.40625 li
182.82 2.47998 182.848 2.54688 182.848 2.60889 cv
182.848 2.62109 182.84 2.64111 182.832 2.67188 cv
182.801 2.73389 li
182.785 2.82813 li
182.848 2.98389 li
182.832 3.04688 li
182.848 3.20313 li
182.738 3.34375 li
182.801 3.59375 li
182.754 3.875 li
182.848 3.98389 li
182.754 4.20313 li
183.129 4.15576 li
183.785 4.21875 li
184.316 4.125 li
184.504 4.14111 li
184.551 4.125 li
185.02 4.125 li
185.27 4.125 185.395 4.21484 185.395 4.39111 cv
185.395 4.39111 li
cp
f
190.988 8.57813 mo
190.988 8.89795 190.816 9.06299 190.473 9.06299 cv
190.305 9.06299 190.184 8.99219 190.113 8.85889 cv
190.027 8.74219 189.961 8.53076 189.91 8.21875 cv
189.91 8.06299 li
189.93 8.02295 189.941 7.97998 189.941 7.93799 cv
189.941 7.91797 189.934 7.89795 189.926 7.875 cv
189.754 7.625 li
189.879 7.39111 li
189.832 7.14111 li
189.879 7 li
189.879 6.84375 li
189.91 6.70313 li
189.848 6.48389 li
189.91 6.375 li
189.91 5.46875 li
189.832 5.06299 li
189.879 4.92188 li
189.801 4.625 li
189.691 4.70313 li
189.441 4.81299 li
189.082 5.26611 li
188.926 5.26611 li
188.723 5.60889 li
188.676 5.75 li
188.551 5.81299 li
188.41 6.01611 li
188.348 6.14111 li
188.223 6.56299 li
188.004 6.82813 li
187.957 7 li
187.832 7.09375 li
187.785 7.39111 li
187.551 7.59375 li
187.52 8.04688 li
187.41 8.04688 li
187.363 8.10889 li
187.16 8.48389 li
186.957 8.70313 li
186.77 8.93799 li
186.582 8.89111 li
186.426 8.89111 li
186.285 8.68799 li
186.145 8.26611 li
186.129 7.625 li
186.082 7.42188 li
186.129 7.17188 li
186.098 6.60889 li
186.191 6.59375 li
186.254 5.76611 li
186.301 5.60889 li
186.27 5.35889 li
186.332 5.31299 li
186.379 4.93799 li
186.426 4.79688 li
186.379 4.64111 li
186.41 4.57813 li
186.395 4.54688 li
186.426 4.20313 li
186.332 4.125 li
186.41 3.95313 li
186.395 3.60889 li
186.27 3.25 li
186.363 3.14111 li
186.285 2.82813 li
186.285 2.625 li
186.238 2.54688 li
186.176 2.15576 li
186.129 1.98389 li
185.941 1.64111 li
186.082 1.46875 li
186.191 1.26611 li
186.301 1.26611 li
186.477 1.26611 186.605 1.32813 186.691 1.45313 cv
186.863 1.59375 li
186.941 1.79688 li
187.113 1.95313 li
187.082 2.125 li
187.16 2.375 li
187.16 2.40625 li
187.176 2.42188 li
187.16 2.82813 li
187.176 3.34375 li
187.27 3.68799 li
187.207 3.82813 li
187.223 4.03076 li
187.16 4.20313 li
187.207 4.48389 li
187.145 4.73389 li
187.16 4.78076 li
187.145 5.51611 li
187.176 5.67188 li
187.113 5.76611 li
187.066 6.15625 li
187.02 6.34375 li
187.066 6.65576 li
187.02 6.76611 li
187.004 7 li
187.098 6.97998 187.145 6.93408 187.145 6.85889 cv
187.238 6.76611 li
187.316 6.60889 li
187.348 6.375 li
187.473 6.18799 li
187.551 5.93799 li
187.738 5.75 li
187.785 5.51611 li
187.895 5.51611 li
187.895 5.40625 li
187.91 5.26611 li
188.051 5.17188 li
188.051 5.07813 li
188.176 5.06299 li
188.191 4.85889 li
188.191 4.76611 li
188.41 4.67188 li
188.457 4.625 li
188.441 4.5 li
188.551 4.46875 li
188.629 4.26611 li
188.77 4.26611 li
188.91 4.17188 li
188.91 4.12109 188.914 4.08594 188.926 4.06299 cv
189.051 4 li
189.195 3.875 189.332 3.80518 189.457 3.78076 cv
189.457 3.76611 li
189.664 3.66406 189.809 3.60889 189.895 3.60889 cv
190.008 3.60889 190.117 3.66406 190.223 3.76611 cv
190.305 3.79688 190.355 3.85889 190.379 3.95313 cv
190.488 4.01611 li
190.52 4.18799 li
190.707 4.46875 li
190.707 5.42188 li
190.691 5.84375 li
190.738 5.95313 li
190.738 6.84375 li
190.707 7 li
190.707 7.23389 li
190.738 7.5 li
190.691 7.73389 li
190.723 7.85205 190.742 7.94922 190.754 8.03125 cv
190.895 8.15576 li
190.895 8.26611 li
190.941 8.29688 li
190.973 8.43408 190.988 8.52686 190.988 8.57813 cv
190.988 8.57813 li
cp
f
194.898 4.26611 mo
194.898 4.24609 194.883 4.19922 194.852 4.125 cv
194.805 4.10889 li
194.773 4.125 li
194.762 4.125 194.746 4.125 194.727 4.125 cv
194.703 4.125 194.688 4.125 194.68 4.125 cv
194.668 4.125 194.656 4.125 194.648 4.125 cv
194.625 4.125 194.609 4.125 194.602 4.125 cv
194.492 4.20313 li
194.383 4.21875 li
194.32 4.23389 li
194.117 4.5 li
193.977 4.59375 li
193.789 4.93799 li
193.68 5 li
193.656 5.14795 193.602 5.26611 193.508 5.35889 cv
193.461 5.43799 li
193.555 5.38721 193.652 5.35889 193.758 5.35889 cv
193.852 5.31299 li
193.883 5.21875 li
194.055 5.21875 li
194.148 5.07813 li
194.227 5.07813 li
194.352 5.125 li
194.414 4.95313 li
194.492 4.95313 li
194.492 4.81299 li
194.648 4.78076 li
194.695 4.75 li
194.711 4.64111 li
194.867 4.40576 li
194.887 4.36719 194.898 4.31982 194.898 4.26611 cv
194.898 4.26611 li
cp
196.086 7.71875 mo
196.086 7.81299 196.012 7.93408 195.867 8.07813 cv
195.824 8.20313 195.762 8.30908 195.68 8.39111 cv
195.617 8.40625 li
195.477 8.625 li
195.258 8.67188 li
195.039 8.81299 li
194.914 9.03076 li
194.789 9 li
194.695 9.03906 194.621 9.06592 194.57 9.07813 cv
194.492 9.18799 li
194.469 9.17578 194.434 9.17188 194.383 9.17188 cv
194.277 9.17188 194.18 9.24219 194.086 9.39111 cv
193.914 9.25 li
193.883 9.25 193.836 9.25 193.773 9.25 cv
193.668 9.25 193.578 9.23389 193.508 9.20313 cv
193.305 9.20313 li
193.211 9.14111 li
192.906 9.09814 192.715 8.98389 192.633 8.79688 cv
192.633 8.76611 li
192.492 8.68799 li
192.414 8.48389 li
192.273 8.39111 li
192.273 8.21875 li
192.133 7.68799 li
192.164 7.25 li
192.211 7.06299 li
192.211 6.81299 li
192.258 6.60889 li
192.258 6.53125 li
192.336 6.39111 li
192.32 6.40576 li
192.32 6.33594 192.336 6.26221 192.367 6.18799 cv
192.367 6.125 li
192.336 5.82813 li
192.336 5.69482 192.398 5.57422 192.523 5.46875 cv
192.523 5.46094 192.523 5.43799 192.523 5.40625 cv
192.523 5.375 192.508 5.31299 192.477 5.21875 cv
192.453 5.11719 192.445 5.04297 192.445 5 cv
192.445 4.89795 192.469 4.79297 192.523 4.68799 cv
192.586 4.79297 192.672 4.84375 192.789 4.84375 cv
192.836 4.84375 li
192.844 4.81299 192.875 4.77686 192.93 4.73389 cv
193 4.53906 193.09 4.37109 193.195 4.23389 cv
193.242 4.17188 li
193.242 4.14111 193.266 4.05518 193.32 3.90625 cv
193.414 3.90625 li
193.445 3.84375 li
193.539 3.81299 li
193.578 3.75 193.605 3.71484 193.617 3.70313 cv
193.625 3.69482 193.711 3.64795 193.867 3.56299 cv
193.898 3.5 193.949 3.44922 194.023 3.40576 cv
194.055 3.38721 194.09 3.36719 194.133 3.34375 cv
194.18 3.28076 li
194.398 3.21094 194.531 3.17188 194.586 3.17188 cv
194.656 3.17188 194.719 3.18799 194.773 3.21875 cv
194.836 3.20313 li
194.914 3.25 li
195.008 3.32422 195.105 3.38721 195.211 3.43799 cv
195.414 3.59375 li
195.414 3.64111 li
195.59 3.78906 195.68 3.99219 195.68 4.25 cv
195.648 4.375 li
195.68 4.76611 li
195.57 4.84375 li
195.461 5.15576 li
195.227 5.40625 li
195.211 5.59375 li
194.961 5.78125 194.727 5.93408 194.508 6.04688 cv
194.434 6.15186 194.324 6.20313 194.18 6.20313 cv
194.133 6.20313 li
193.914 6.34375 li
193.711 6.34375 li
193.43 6.46875 li
193.211 6.35889 li
193.195 6.35889 li
193.172 6.42188 193.156 6.52295 193.148 6.65576 cv
193.039 6.71875 li
193.039 6.85889 li
192.961 7.07813 li
192.98 7.26611 192.992 7.38721 192.992 7.43799 cv
192.945 7.48389 li
192.945 7.58984 192.938 7.66406 192.93 7.70313 cv
192.93 7.71484 192.93 7.72998 192.93 7.75 cv
192.93 7.76221 192.93 7.77295 192.93 7.78076 cv
192.93 7.84375 192.961 7.89795 193.023 7.93799 cv
193.043 8.03125 193.086 8.08984 193.148 8.10889 cv
193.227 8.18799 li
193.492 8.26611 li
193.492 8.29688 li
193.586 8.31299 li
193.992 8.34375 li
194.227 8.31299 li
194.352 8.21875 li
194.43 8.20313 li
194.539 8.01611 li
194.602 8 li
194.898 7.90576 li
194.938 7.85498 194.992 7.80908 195.055 7.76611 cv
195.102 7.70313 li
195.258 7.67188 195.344 7.58984 195.367 7.45313 cv
195.48 7.33984 195.625 7.28125 195.805 7.28125 cv
195.852 7.28125 li
196.008 7.46094 196.086 7.60498 196.086 7.71875 cv
196.086 7.71875 li
cp
f
203.629 7.10889 mo
203.629 7 li
203.566 6.78076 li
203.613 6.67188 li
203.566 6.57813 li
203.551 6.45313 li
203.457 6.26611 li
203.41 6.14111 li
203.223 5.82813 li
203.082 5.70313 li
203.004 5.5 li
202.895 5.45313 li
202.707 5.20313 li
202.504 5.21875 li
202.363 5.03125 li
202.238 5.06299 li
202.16 4.90576 li
202.113 4.89111 li
201.941 4.89111 li
201.816 4.95313 li
201.723 4.84375 li
201.613 4.875 li
201.566 4.79688 li
201.348 4.75 li
201.348 4.90576 li
201.332 5.125 li
201.379 5.26611 li
201.551 5.42188 li
201.41 5.70313 li
201.426 5.89111 li
201.363 6.25 li
201.395 6.39795 201.441 6.52295 201.504 6.625 cv
201.457 6.76611 li
201.465 6.76611 201.473 6.77295 201.473 6.78076 cv
201.473 6.80518 201.441 6.83984 201.379 6.89111 cv
201.457 7 li
201.41 7.14111 li
201.379 7.29688 li
201.41 7.46875 li
201.41 7.625 li
201.66 7.625 li
201.691 7.60498 201.73 7.59375 201.785 7.59375 cv
201.855 7.59375 201.918 7.62109 201.973 7.67188 cv
201.98 7.67188 201.996 7.66797 202.02 7.65625 cv
202.039 7.65625 202.055 7.65625 202.066 7.65625 cv
202.086 7.65625 202.129 7.66797 202.191 7.68799 cv
202.242 7.65625 202.289 7.64111 202.332 7.64111 cv
202.395 7.64111 202.449 7.65625 202.504 7.68799 cv
202.613 7.68799 li
202.707 7.71875 li
202.957 7.64111 li
203.145 7.76611 li
203.215 7.78906 203.242 7.79688 203.223 7.79688 cv
203.457 7.57813 li
203.473 7.40576 li
203.535 7.39111 li
203.504 7.28125 li
203.582 7.18799 li
203.629 7.10889 li
cp
204.535 6.92188 mo
204.395 7.28125 li
204.488 7.53076 li
204.441 7.59375 li
204.395 7.79688 li
204.301 7.95313 li
204.254 7.98389 li
204.223 8.21875 li
204.004 8.23389 li
203.887 8.33984 203.773 8.42188 203.66 8.48389 cv
203.582 8.46875 li
203.41 8.53076 li
203.301 8.54688 li
203.066 8.625 li
202.801 8.51611 li
202.77 8.48389 li
202.566 8.5 li
202.613 8.51611 li
202.285 8.46875 li
201.973 8.54688 li
201.863 8.43799 li
201.613 8.46875 li
201.504 8.39111 li
201.504 8.39111 201.473 8.39795 201.41 8.40625 cv
201.41 8.46875 li
201.41 8.54297 201.398 8.61719 201.379 8.68799 cv
201.41 8.92188 li
201.316 9.04688 li
201.336 9.21094 201.348 9.34375 201.348 9.43799 cv
201.301 9.73389 li
201.348 10.188 li
201.254 10.313 li
201.301 10.4839 li
201.27 10.6089 li
201.348 10.6411 li
201.348 10.8281 li
201.355 10.8789 201.363 10.9141 201.363 10.938 cv
201.363 11.0078 201.32 11.0659 201.238 11.1089 cv
201.285 11.2808 li
201.223 11.375 li
201.207 11.8589 li
201.176 12.4219 201.051 12.7031 200.832 12.7031 cv
200.777 12.7031 200.637 12.6719 200.41 12.6089 cv
200.441 12.25 li
200.379 11.7188 li
200.488 11.5 li
200.504 11.2339 li
200.457 10.875 li
200.551 10.7188 li
200.441 10.438 li
200.52 10.2969 li
200.457 10.063 li
200.551 9.84375 li
200.527 9.78906 200.496 9.74219 200.457 9.70313 cv
200.414 9.67188 200.395 9.64502 200.395 9.625 cv
200.395 9.60205 200.418 9.58203 200.473 9.56299 cv
200.473 9.53125 200.473 9.48779 200.473 9.43799 cv
200.473 9.33203 200.492 9.19482 200.535 9.03076 cv
200.473 8.90576 li
200.504 8.75 li
200.426 8.64111 li
200.52 8.51611 li
200.473 8.15576 li
200.551 7.67188 li
200.473 7.51611 li
200.598 7.28125 li
200.457 7.15576 li
200.535 6.92188 li
200.457 6.85889 li
200.473 6.65576 li
200.535 6.40576 li
200.535 6.35889 li
200.551 6.31299 li
200.551 6.18799 li
200.566 6.14111 li
200.504 5.93799 li
200.566 5.73389 li
200.504 5.57813 li
200.551 5.40625 li
200.504 5.35889 li
200.535 5.10889 li
200.504 4.98389 li
200.52 4.85889 li
200.488 4.78076 li
200.066 4.96875 li
200.066 4.90576 li
199.973 4.90576 li
199.848 5.03125 li
199.738 5.03125 li
199.598 5.21875 li
199.473 5.17188 li
199.41 5.29688 li
199.016 5.06982 198.816 4.88721 198.816 4.75 cv
198.816 4.64795 198.855 4.56299 198.926 4.5 cv
198.926 4.32813 li
199.145 4.19482 199.352 4.125 199.551 4.125 cv
199.645 4.03076 li
200.02 3.875 li
200.113 3.79688 li
200.441 3.81299 li
200.504 3.79688 li
200.613 3.375 li
200.895 3.43799 li
201.098 3.75 li
201.207 3.64111 li
201.41 3.79688 li
201.512 3.79688 201.617 3.81982 201.723 3.85889 cv
201.77 3.96875 li
201.863 3.92188 li
201.957 4 li
202.008 4 202.051 4.00781 202.082 4.01611 cv
202.082 4.07813 li
202.332 4 li
202.473 4.14111 li
202.707 4.21875 li
202.848 4.40576 li
203.145 4.59375 li
203.16 4.60889 li
203.379 4.68799 li
203.379 4.75 li
203.441 4.80518 203.488 4.87109 203.52 4.95313 cv
203.629 5 li
203.691 5.14111 li
203.832 5.14111 li
203.832 5.375 li
203.926 5.46875 li
203.941 5.54688 li
204.066 5.57813 li
204.086 5.75781 204.137 5.91406 204.223 6.04688 cv
204.223 6.125 li
204.348 6.25 li
204.316 6.43799 li
204.41 6.65576 li
204.457 6.90625 li
204.535 6.92188 li
cp
f
208.93 6.18799 mo
208.93 6.125 li
208.867 6.07422 208.836 6.01221 208.836 5.93799 cv
208.867 5.89111 li
208.758 5.65576 li
208.773 5.42188 li
208.727 5.35889 li
208.621 5.28906 208.57 5.22705 208.57 5.17188 cv
208.496 5.14111 208.461 5.06299 208.461 4.93799 cv
208.383 4.92188 li
208.242 4.68799 li
208.133 4.59375 li
207.883 4.5 li
207.789 4.48389 li
207.734 4.48389 207.703 4.46875 207.695 4.43799 cv
207.445 4.68799 li
207.289 5.03125 li
207.039 5.15576 li
207.008 5.29688 li
206.883 5.35889 li
206.836 5.67188 li
206.695 5.73389 li
206.664 5.85205 206.648 5.95313 206.648 6.04688 cv
206.445 6.23389 li
206.508 6.26611 li
206.508 6.35889 206.469 6.44482 206.398 6.51611 cv
206.375 6.58984 206.344 6.67188 206.305 6.76611 cv
206.305 6.85889 li
206.273 6.90625 li
206.289 7.04688 li
206.148 7.375 li
206.18 7.43799 li
206.18 7.76611 li
206.133 7.93799 li
206.133 8.10889 li
206.242 8.26611 li
206.414 8.31299 li
206.477 8.34375 li
206.57 8.29688 li
206.883 8.31299 li
206.93 8.20313 li
206.977 8.20313 li
207.027 8.20313 207.059 8.21484 207.07 8.23389 cv
207.18 8.20313 li
207.273 8.23389 li
207.43 8.125 li
207.445 8.09375 li
207.555 8.06299 li
207.605 7.97998 207.734 7.89111 207.945 7.79688 cv
207.977 7.75 li
208.211 7.57813 li
208.352 7.39111 li
208.539 7.28125 li
208.555 7.23389 li
208.617 7.09375 li
208.617 6.93799 li
208.758 6.81299 li
208.805 6.73389 li
208.867 6.65576 li
208.836 6.56299 208.82 6.49609 208.82 6.45313 cv
208.82 6.38281 208.84 6.30908 208.883 6.23389 cv
208.93 6.18799 li
cp
209.727 5.89111 mo
209.664 6.10889 li
209.664 6.31982 209.648 6.48389 209.617 6.60889 cv
209.555 6.71875 li
209.555 6.85889 li
209.492 6.93799 li
209.445 7.10889 li
209.32 7.23389 li
209.242 7.54688 li
209.133 7.57813 li
209.086 7.70313 li
208.945 7.79688 li
208.852 8 li
208.711 8.06299 li
208.695 8.21875 li
208.461 8.29688 li
208.367 8.44482 208.242 8.53906 208.086 8.57813 cv
208.039 8.57813 li
207.922 8.74219 207.773 8.82813 207.586 8.82813 cv
207.512 8.87891 207.422 8.90576 207.32 8.90576 cv
207.195 8.98389 li
207.07 9.03076 li
206.914 9.14111 li
206.758 9.14111 li
206.602 9.18799 li
206.398 9.09375 li
205.883 9.06299 li
205.695 8.78125 li
205.43 8.51611 li
205.492 8.31299 li
205.32 7.90576 li
205.398 7.75 li
205.336 7.46875 li
205.398 7.28125 li
205.375 7.18018 205.367 7.10205 205.367 7.04688 cv
205.367 6.89111 205.406 6.78076 205.492 6.71875 cv
205.5 6.63721 205.555 6.5 205.648 6.31299 cv
205.711 6.31299 li
205.68 6.23389 li
205.727 6.06299 li
205.727 5.89111 li
205.789 5.81982 205.824 5.76611 205.836 5.73389 cv
205.789 5.57813 li
205.789 5.51611 li
205.852 5.41406 205.883 5.29688 205.883 5.17188 cv
206.133 4.82813 li
206.133 4.82813 206.141 4.82422 206.164 4.81299 cv
206.184 4.79297 206.199 4.77295 206.211 4.75 cv
206.195 4.70313 li
206.242 4.70313 li
206.43 4.5 li
206.445 4.23389 li
206.742 4.125 li
206.855 4.05518 206.93 3.93408 206.961 3.76611 cv
207.117 3.76611 li
207.199 3.71484 207.277 3.68799 207.352 3.68799 cv
207.422 3.68799 207.492 3.70313 207.555 3.73389 cv
207.695 3.75 li
208.008 3.625 li
208.164 3.78076 li
208.305 3.85889 li
208.398 3.85889 li
208.57 3.96875 li
208.68 3.96875 li
208.781 4.06299 208.902 4.19482 209.039 4.35889 cv
209.055 4.42188 li
209.133 4.46875 li
209.398 4.79688 li
209.617 5.35889 li
209.617 5.46875 li
209.727 5.89111 li
cp
f
215.113 7.71875 mo
214.973 7.89111 li
214.832 8.20313 li
214.738 8.26611 li
214.66 8.43799 li
214.41 8.46875 li
214.254 8.625 li
214.02 8.625 li
213.879 8.73389 li
213.738 8.70313 li
213.582 8.73389 li
213.582 8.82813 li
213.145 8.79688 li
212.957 8.81299 li
212.816 8.89111 li
212.691 8.81299 li
212.773 8.80078 212.836 8.79688 212.879 8.79688 cv
212.816 8.80518 212.621 8.81982 212.301 8.84375 cv
212.27 8.82813 li
212.176 8.82813 li
212.02 8.90576 li
211.965 8.875 211.879 8.83594 211.754 8.79688 cv
211.574 8.78516 211.461 8.78125 211.41 8.78125 cv
211.316 8.78125 li
211.254 8.77002 211.191 8.76611 211.129 8.76611 cv
211.066 8.76611 211.004 8.78125 210.941 8.81299 cv
210.77 8.70313 li
210.676 8.67188 li
210.652 8.67188 210.605 8.66406 210.535 8.64111 cv
210.242 8.60889 210.098 8.36719 210.098 7.90576 cv
210.098 7.79688 li
210.332 7.625 li
210.613 7.51611 li
210.832 7.625 li
211.004 7.625 li
211.004 7.65625 li
211.074 7.68799 211.137 7.75 211.191 7.84375 cv
211.285 7.85889 li
211.285 8.01611 li
211.441 8.06299 li
211.473 8.07813 li
213.02 7.98389 li
213.379 7.92188 li
213.426 7.92188 li
213.441 7.85889 li
213.613 7.84375 li
213.645 7.79688 li
213.809 7.77686 213.965 7.72998 214.113 7.65625 cv
214.113 7.59375 li
214.113 7.59375 214.098 7.56982 214.066 7.51611 cv
214.004 7.53076 li
213.848 7.40576 li
213.738 7.40576 li
213.691 7.32813 li
213.723 7.28125 li
213.582 7.29688 li
213.488 7.18799 li
213.465 7.19922 213.43 7.20313 213.379 7.20313 cv
213.273 7.20313 213.168 7.18408 213.066 7.14111 cv
212.957 7.14111 li
212.863 7.10889 li
212.707 7.17188 li
212.613 7.06299 li
212.566 7.06299 li
212.395 6.92188 li
212.035 6.78076 li
211.91 6.68799 li
211.457 6.60889 li
211.41 6.51611 li
211.066 6.29688 li
210.895 5.90576 li
210.738 5.70313 li
210.691 5.07813 li
210.738 5 li
210.758 4.82422 210.824 4.66797 210.941 4.53076 cv
211.055 4.46875 211.113 4.375 211.113 4.25 cv
211.301 4.21875 li
211.332 4.15576 211.395 4.09375 211.488 4.03076 cv
211.676 3.89111 li
212.551 3.56299 li
212.801 3.54688 li
213.191 3.43799 li
213.957 3.48389 li
213.973 3.54688 li
214.043 3.56982 214.121 3.63281 214.207 3.73389 cv
214.207 3.79688 li
214.41 3.92188 li
214.316 4.20313 li
214.301 4.31299 li
214.246 4.51221 214.133 4.60889 213.957 4.60889 cv
213.809 4.60889 213.707 4.54297 213.645 4.40576 cv
213.645 4.375 li
213.488 4.35889 li
213.332 4.40576 li
213.176 4.29688 li
213.082 4.35889 li
212.977 4.35889 212.883 4.39111 212.801 4.45313 cv
212.676 4.45313 212.559 4.5 212.457 4.59375 cv
212.301 4.59375 li
212.191 4.68799 li
212.02 4.71875 li
211.988 4.75 li
211.926 4.78076 li
211.816 4.89111 li
211.785 4.90576 li
211.676 5.06299 li
211.535 5.14111 li
211.504 5.24609 211.48 5.33594 211.473 5.40625 cv
211.48 5.52295 211.496 5.59375 211.52 5.625 cv
211.539 5.65576 211.59 5.69482 211.676 5.73389 cv
211.676 5.79688 li
211.832 5.89111 li
211.965 5.93408 212.066 5.98389 212.129 6.04688 cv
212.363 6.04688 li
212.52 6.17188 li
212.801 6.20313 li
212.91 6.28076 li
213.379 6.40576 li
213.441 6.54688 li
213.488 6.45313 li
213.59 6.45313 213.727 6.50781 213.895 6.60889 cv
214.113 6.64111 li
214.145 6.71875 li
214.332 6.71875 li
214.676 6.92188 li
214.707 7.02686 214.793 7.12109 214.941 7.20313 cv
215.066 7.28125 li
215.035 7.43799 li
215.086 7.51221 215.113 7.59375 215.113 7.68799 cv
215.113 7.71875 li
cp
f
218.672 4.26611 mo
218.672 4.24609 218.656 4.19922 218.625 4.125 cv
218.578 4.10889 li
218.547 4.125 li
218.535 4.125 218.52 4.125 218.5 4.125 cv
218.477 4.125 218.461 4.125 218.453 4.125 cv
218.441 4.125 218.43 4.125 218.422 4.125 cv
218.398 4.125 218.383 4.125 218.375 4.125 cv
218.266 4.20313 li
218.156 4.21875 li
218.094 4.23389 li
217.891 4.5 li
217.75 4.59375 li
217.563 4.93799 li
217.453 5 li
217.43 5.14795 217.375 5.26611 217.281 5.35889 cv
217.234 5.43799 li
217.328 5.38721 217.426 5.35889 217.531 5.35889 cv
217.625 5.31299 li
217.656 5.21875 li
217.828 5.21875 li
217.922 5.07813 li
218 5.07813 li
218.125 5.125 li
218.188 4.95313 li
218.266 4.95313 li
218.266 4.81299 li
218.422 4.78076 li
218.469 4.75 li
218.484 4.64111 li
218.641 4.40576 li
218.66 4.36719 218.672 4.31982 218.672 4.26611 cv
218.672 4.26611 li
cp
219.859 7.71875 mo
219.859 7.81299 219.785 7.93408 219.641 8.07813 cv
219.598 8.20313 219.535 8.30908 219.453 8.39111 cv
219.391 8.40625 li
219.25 8.625 li
219.031 8.67188 li
218.813 8.81299 li
218.688 9.03076 li
218.563 9 li
218.469 9.03906 218.395 9.06592 218.344 9.07813 cv
218.266 9.18799 li
218.242 9.17578 218.207 9.17188 218.156 9.17188 cv
218.051 9.17188 217.953 9.24219 217.859 9.39111 cv
217.688 9.25 li
217.656 9.25 217.609 9.25 217.547 9.25 cv
217.441 9.25 217.352 9.23389 217.281 9.20313 cv
217.078 9.20313 li
216.984 9.14111 li
216.68 9.09814 216.488 8.98389 216.406 8.79688 cv
216.406 8.76611 li
216.266 8.68799 li
216.188 8.48389 li
216.047 8.39111 li
216.047 8.21875 li
215.906 7.68799 li
215.938 7.25 li
215.984 7.06299 li
215.984 6.81299 li
216.031 6.60889 li
216.031 6.53125 li
216.109 6.39111 li
216.094 6.40576 li
216.094 6.33594 216.109 6.26221 216.141 6.18799 cv
216.141 6.125 li
216.109 5.82813 li
216.109 5.69482 216.172 5.57422 216.297 5.46875 cv
216.297 5.46094 216.297 5.43799 216.297 5.40625 cv
216.297 5.375 216.281 5.31299 216.25 5.21875 cv
216.227 5.11719 216.219 5.04297 216.219 5 cv
216.219 4.89795 216.242 4.79297 216.297 4.68799 cv
216.359 4.79297 216.445 4.84375 216.563 4.84375 cv
216.609 4.84375 li
216.617 4.81299 216.648 4.77686 216.703 4.73389 cv
216.773 4.53906 216.863 4.37109 216.969 4.23389 cv
217.016 4.17188 li
217.016 4.14111 217.039 4.05518 217.094 3.90625 cv
217.188 3.90625 li
217.219 3.84375 li
217.313 3.81299 li
217.352 3.75 217.379 3.71484 217.391 3.70313 cv
217.398 3.69482 217.484 3.64795 217.641 3.56299 cv
217.672 3.5 217.723 3.44922 217.797 3.40576 cv
217.828 3.38721 217.863 3.36719 217.906 3.34375 cv
217.953 3.28076 li
218.172 3.21094 218.305 3.17188 218.359 3.17188 cv
218.43 3.17188 218.492 3.18799 218.547 3.21875 cv
218.609 3.20313 li
218.688 3.25 li
218.781 3.32422 218.879 3.38721 218.984 3.43799 cv
219.188 3.59375 li
219.188 3.64111 li
219.363 3.78906 219.453 3.99219 219.453 4.25 cv
219.422 4.375 li
219.453 4.76611 li
219.344 4.84375 li
219.234 5.15576 li
219 5.40625 li
218.984 5.59375 li
218.734 5.78125 218.5 5.93408 218.281 6.04688 cv
218.207 6.15186 218.098 6.20313 217.953 6.20313 cv
217.906 6.20313 li
217.688 6.34375 li
217.484 6.34375 li
217.203 6.46875 li
216.984 6.35889 li
216.969 6.35889 li
216.945 6.42188 216.93 6.52295 216.922 6.65576 cv
216.813 6.71875 li
216.813 6.85889 li
216.734 7.07813 li
216.754 7.26611 216.766 7.38721 216.766 7.43799 cv
216.719 7.48389 li
216.719 7.58984 216.711 7.66406 216.703 7.70313 cv
216.703 7.71484 216.703 7.72998 216.703 7.75 cv
216.703 7.76221 216.703 7.77295 216.703 7.78076 cv
216.703 7.84375 216.734 7.89795 216.797 7.93799 cv
216.816 8.03125 216.859 8.08984 216.922 8.10889 cv
217 8.18799 li
217.266 8.26611 li
217.266 8.29688 li
217.359 8.31299 li
217.766 8.34375 li
218 8.31299 li
218.125 8.21875 li
218.203 8.20313 li
218.313 8.01611 li
218.375 8 li
218.672 7.90576 li
218.711 7.85498 218.766 7.80908 218.828 7.76611 cv
218.875 7.70313 li
219.031 7.67188 219.117 7.58984 219.141 7.45313 cv
219.254 7.33984 219.398 7.28125 219.578 7.28125 cv
219.625 7.28125 li
219.781 7.46094 219.859 7.60498 219.859 7.71875 cv
219.859 7.71875 li
cp
f
229.445 7.21875 mo
229.352 7.65625 li
229.367 7.79688 li
229.352 7.84375 li
229.383 7.91797 229.398 7.99219 229.398 8.06299 cv
229.398 8.10498 229.387 8.15186 229.367 8.20313 cv
229.367 8.21875 li
229.367 8.31299 229.328 8.70703 229.258 9.40576 cv
229.227 9.625 li
229.227 9.67188 li
229.195 9.76611 li
229.211 9.84375 li
229.164 9.875 li
229.133 9.95313 li
229.086 9.95313 li
229.102 10.0161 li
229.07 10.0781 li
229.07 10.1411 229.047 10.1948 229.008 10.25 cv
228.945 10.438 li
228.922 10.5308 228.887 10.6128 228.836 10.688 cv
228.773 10.7891 228.672 10.9302 228.539 11.1089 cv
228.336 11.2661 li
228.102 11.4531 li
227.914 11.5308 li
227.773 11.6411 li
227.68 11.6719 li
227.523 11.7539 227.344 11.8052 227.148 11.8281 cv
227.07 11.813 li
226.961 11.8589 li
226.961 11.8911 li
226.824 11.9219 226.711 11.938 226.617 11.938 cv
226.148 11.938 li
225.852 11.875 li
225.602 11.9219 li
225.492 11.813 li
225.117 11.7813 li
224.883 11.563 li
224.711 11.4688 li
224.387 11.3438 224.199 11.1289 224.148 10.8281 cv
224.18 10.7808 li
224.148 10.5938 li
224.242 10.438 224.324 10.3521 224.398 10.3438 cv
224.469 10.3008 224.539 10.2813 224.602 10.2813 cv
224.602 10.2813 224.672 10.2891 224.82 10.313 cv
224.965 10.3438 225.117 10.3628 225.273 10.375 cv
225.258 10.5469 li
225.398 10.6411 li
225.398 10.7969 li
225.305 10.9058 li
225.852 11.0781 li
226.133 11.0161 li
226.133 11.1089 li
226.211 11.0781 li
226.242 11.0781 li
226.25 11.0781 226.305 11.0859 226.398 11.1089 cv
226.414 11.1558 li
226.523 11.0938 li
226.625 11.0391 226.82 11.0161 227.102 11.0161 cv
227.152 10.9839 227.195 10.9531 227.227 10.9219 cv
227.234 10.9219 227.258 10.9258 227.289 10.938 cv
227.32 10.938 227.34 10.938 227.352 10.938 cv
227.402 10.938 227.453 10.8911 227.508 10.7969 cv
227.508 10.8159 227.523 10.8281 227.555 10.8281 cv
227.563 10.8281 227.578 10.8159 227.602 10.7969 cv
227.633 10.7852 227.652 10.7808 227.664 10.7808 cv
227.68 10.7808 li
228.07 10.438 li
228.242 10.1719 li
228.258 10.0161 li
228.383 9.84375 li
228.398 9.68799 li
228.477 9.54688 li
228.539 9.21875 li
228.633 8.92188 li
228.621 8.86719 228.617 8.79688 228.617 8.70313 cv
228.617 8.52686 228.641 8.35205 228.695 8.17188 cv
228.648 7.98389 li
228.648 7.39111 li
228.539 7.18799 li
228.539 6.85889 li
228.445 6.60889 li
228.461 6.21875 li
228.445 6.15625 li
228.367 6.18799 li
228.289 6.35889 li
228.117 6.51611 li
227.898 6.85889 li
227.586 7.07813 li
227.242 7.43799 li
227.055 7.63721 226.828 7.80908 226.57 7.95313 cv
226.461 8.10889 li
226.273 8.21875 li
226.102 8.29688 li
225.945 8.45313 li
225.758 8.54688 li
225.695 8.60889 225.605 8.65186 225.492 8.67188 cv
225.313 8.79688 225.109 8.85889 224.883 8.85889 cv
224.758 8.85889 li
224.715 8.86719 224.656 8.875 224.586 8.875 cv
224.523 8.875 224.477 8.86719 224.445 8.85889 cv
224.227 8.84375 li
223.914 8.54688 li
223.68 8.25 li
223.586 8 li
223.508 7.51611 li
223.555 7.17188 li
223.68 6.76611 li
223.648 6.625 li
223.758 6.25 li
223.867 6.04688 li
223.898 5.94482 223.914 5.81982 223.914 5.67188 cv
224.18 5.17188 li
224.199 5.10889 224.258 5.04297 224.352 4.96875 cv
224.477 4.76611 li
224.617 4.60889 li
224.648 4.50781 224.715 4.41406 224.82 4.32813 cv
224.883 4.29688 224.922 4.24219 224.945 4.15576 cv
224.977 4.06299 225.125 3.98389 225.398 3.92188 cv
225.336 3.92188 li
225.398 3.90625 li
225.418 3.86719 225.477 3.78076 225.57 3.65576 cv
225.711 3.68799 li
225.82 3.60889 li
225.945 3.50781 226.078 3.45313 226.227 3.45313 cv
226.32 3.45313 li
226.617 3.32813 li
226.805 3.39111 li
227.023 3.39111 li
227.148 3.45313 li
227.23 3.46484 227.297 3.5 227.352 3.56299 cv
227.508 3.73389 li
227.555 3.76611 li
227.586 3.81299 li
227.695 3.96875 li
227.711 4.03076 li
227.664 4.23389 li
227.695 4.35889 li
227.539 4.59375 li
227.195 4.64111 li
227.008 4.35889 li
226.836 4.29688 li
226.758 4.21875 li
226.633 4.21875 li
226.59 4.22998 226.508 4.26611 226.383 4.32813 cv
226.367 4.43799 li
226.07 4.43799 li
225.984 4.55518 225.898 4.61719 225.805 4.625 cv
225.762 4.65625 225.715 4.68408 225.664 4.70313 cv
225.57 4.93799 li
225.492 4.95313 li
225.477 5.06299 li
225.305 5.06299 li
225.148 5.31299 li
225.023 5.39111 li
224.977 5.56299 li
224.789 5.81299 li
224.758 6.04688 li
224.617 6.18799 li
224.492 6.71875 li
224.398 6.81299 li
224.398 6.93799 li
224.258 7.39111 li
224.289 7.54688 li
224.289 7.68799 li
224.34 7.76221 224.367 7.84375 224.367 7.93799 cv
224.445 7.95313 li
224.492 8.03125 li
224.625 8.03125 224.715 8.04688 224.758 8.07813 cv
224.828 8.02686 225.023 7.96875 225.336 7.90576 cv
225.387 7.79297 225.453 7.71094 225.539 7.65625 cv
225.633 7.60498 225.813 7.50781 226.086 7.35889 cv
226.117 7.375 li
226.117 7.31299 226.141 7.25 226.195 7.18799 cv
226.309 7.14795 226.383 7.11719 226.414 7.09375 cv
226.477 7.05518 226.512 7 226.523 6.93799 cv
226.711 6.89111 li
226.836 6.78076 li
227.133 6.375 li
227.211 6.42188 li
227.219 6.40186 227.309 6.29297 227.477 6.09375 cv
227.758 5.76611 li
227.789 5.60889 li
227.883 5.51611 227.992 5.26221 228.117 4.84375 cv
228.07 4.59375 li
227.977 4.42188 li
228.039 4.23389 li
227.945 4.10889 li
227.914 3.93799 li
227.883 3.81299 li
228.008 3.60889 li
228.133 3.53906 228.219 3.5 228.273 3.5 cv
228.344 3.5 228.445 3.53906 228.57 3.60889 cv
228.648 3.76611 li
228.805 3.89111 li
228.836 4.15576 li
228.855 4.22998 228.883 4.33984 228.914 4.48389 cv
228.953 4.55908 228.977 4.64111 228.977 4.73389 cv
228.977 4.81299 li
229.008 4.89111 li
229.133 5.07813 li
229.102 5.29688 li
229.164 5.39111 li
229.195 5.44482 229.211 5.50781 229.211 5.57813 cv
229.211 5.63281 229.203 5.67188 229.195 5.70313 cv
229.305 5.73389 li
229.211 6.04688 li
229.258 6.26611 li
229.297 6.35205 229.32 6.42188 229.32 6.48389 cv
229.32 6.54688 229.297 6.625 229.258 6.71875 cv
229.336 6.78076 li
229.445 7.21875 li
cp
f
235.426 4.23389 mo
235.316 4.64111 li
234.879 4.68799 li
234.645 4.84375 li
234.488 4.78076 li
234.316 4.875 li
234.129 4.95313 li
234.02 5.03125 li
234.02 5.07813 li
233.77 5.20313 li
233.598 5.42188 li
233.52 5.42188 li
233.383 5.55908 233.289 5.64111 233.238 5.67188 cv
233.066 5.93799 li
233.004 5.96875 li
232.98 6.03076 232.957 6.125 232.926 6.25 cv
232.754 6.31299 li
232.691 6.45313 li
232.582 6.57813 li
232.566 6.76611 li
232.473 6.79688 li
232.473 6.96875 li
232.426 7.01611 li
232.457 7.05908 232.488 7.10205 232.52 7.14111 cv
232.332 7.21875 li
232.316 7.375 li
232.191 7.57813 li
232.27 7.73389 li
232.113 7.95313 li
232.121 8.02686 232.129 8.07813 232.129 8.10889 cv
232.129 8.12109 232.129 8.13721 232.129 8.15576 cv
232.117 8.18799 232.113 8.21094 232.113 8.21875 cv
232.145 8.32813 li
232.348 8.54688 li
232.191 8.82813 li
232.051 8.93799 li
231.707 9.09375 li
231.27 8.92188 li
231.27 8.64111 li
231.223 8.53076 li
231.254 8.35889 li
231.242 8.22705 231.238 8.125 231.238 8.06299 cv
231.238 8.04297 231.238 8.01221 231.238 7.96875 cv
231.238 7.93018 231.238 7.90186 231.238 7.89111 cv
231.238 7.76611 li
231.176 7.71484 231.145 7.65186 231.145 7.57813 cv
231.145 7.51611 231.176 7.44482 231.238 7.35889 cv
231.238 7.31982 231.227 7.19922 231.207 7 cv
231.238 6.96875 li
231.207 6.81299 li
231.238 6.65576 li
231.207 6.57813 li
231.238 6.29688 li
231.176 6.18799 li
231.223 6.04688 li
231.176 5.89111 li
231.184 5.85205 231.191 5.78906 231.191 5.70313 cv
231.191 5.57813 231.168 5.5 231.129 5.46875 cv
231.191 5.39111 li
231.129 5.17188 li
231.035 5.01611 li
231.082 4.82813 li
231.035 4.75 li
230.988 4.46875 li
230.988 4.375 li
230.945 4.32422 230.926 4.26221 230.926 4.18799 cv
230.926 4.03076 231.102 3.89795 231.457 3.78076 cv
231.754 3.84375 li
231.816 4.07813 li
231.941 4.23389 li
231.91 4.54688 li
231.93 4.71484 231.957 4.89111 231.988 5.07813 cv
232.02 5.26611 li
232.027 5.28906 232.039 5.33594 232.051 5.40625 cv
232.051 5.44922 232.027 5.5 231.988 5.56299 cv
232.02 5.79688 li
232.004 6.06299 li
231.957 6.18799 li
231.988 6.23389 li
232.02 6.34375 li
232.059 6.29297 232.086 6.23389 232.098 6.17188 cv
232.145 5.98389 li
232.164 5.94482 232.199 5.91406 232.254 5.89111 cv
232.301 5.70313 li
232.473 5.60889 li
232.488 5.46875 li
232.629 5.31299 li
232.723 5.14111 li
232.824 5.02686 232.926 4.95313 233.02 4.92188 cv
233.051 4.89111 li
233.145 4.71875 li
233.27 4.68799 li
233.363 4.59375 li
233.488 4.51611 li
233.566 4.43799 li
233.629 4.43799 li
233.723 4.39111 li
233.77 4.32813 li
233.926 4.25 li
234.129 4.125 li
234.41 4.01611 li
234.523 4.00781 234.586 4 234.598 4 cv
234.598 4.01221 234.598 4.01611 234.598 4.01611 cv
234.586 4.01611 234.582 4.01611 234.582 4.01611 cv
234.598 4.01611 li
234.629 4.01611 234.676 4 234.738 3.96875 cv
234.777 3.93799 234.836 3.92188 234.91 3.92188 cv
234.941 3.92188 234.992 3.93408 235.066 3.95313 cv
235.273 3.96484 235.395 4.05908 235.426 4.23389 cv
235.426 4.23389 li
cp
f
239.18 4.46875 mo
239.133 4.39111 li
239.039 4.35889 li
238.664 4.06299 li
238.43 4.01611 li
238.242 4.01611 li
238.211 4 li
238.117 4.03076 li
238.008 3.96875 li
237.695 3.96875 li
237.742 4.01611 li
237.461 4.125 li
237.414 4.17188 li
237.383 4.18799 li
237.234 4.31299 237.133 4.41406 237.07 4.48389 cv
236.992 4.78076 li
236.945 4.89111 li
237.07 5.06299 li
236.867 5.21875 li
236.883 5.26611 li
236.797 5.41406 236.758 5.55908 236.758 5.70313 cv
236.648 5.82813 li
236.648 6.04688 li
236.555 6.14111 li
236.539 6.25 li
236.492 6.28076 li
236.492 6.45313 li
236.461 6.5 li
236.461 6.60498 236.453 6.68408 236.445 6.73389 cv
236.461 6.79688 li
236.352 7.01611 li
236.398 7.09375 li
236.32 7.21875 li
236.398 7.43799 li
236.273 7.60889 li
236.289 7.84375 li
236.289 7.875 li
236.336 7.90576 li
236.398 7.89111 li
236.438 7.85205 236.48 7.81299 236.523 7.78076 cv
236.492 7.68799 li
236.664 7.65625 li
236.711 7.57813 li
237.414 7 li
237.477 6.96875 li
237.57 6.76611 li
237.609 6.75781 237.68 6.72705 237.773 6.67188 cv
237.836 6.48389 li
237.945 6.48389 li
237.898 6.28076 li
238.07 6.25 li
238.09 6.21875 238.117 6.18408 238.148 6.14111 cv
238.188 6.08984 238.227 6.04297 238.258 6 cv
238.883 5.18799 li
238.977 5 li
238.961 4.95313 li
239.039 4.82813 li
239.07 4.68799 li
239.18 4.59375 li
239.18 4.46875 li
cp
240.32 3.84375 mo
240.211 4 li
240.305 4.28125 li
240.148 4.46875 li
240.086 4.71875 li
240.055 4.78076 li
240.07 4.84375 li
240.07 4.94922 240.043 5.03125 239.992 5.09375 cv
239.961 5.125 li
239.961 5.17188 li
239.992 5.23389 240.008 5.28906 240.008 5.32813 cv
240.008 5.37109 240 5.40186 239.992 5.42188 cv
240.008 5.46875 li
239.961 5.59375 li
239.992 5.73389 li
239.898 5.82813 li
239.93 6 li
240.008 6.09375 li
239.898 6.18799 li
239.898 6.375 li
239.805 6.56299 li
239.867 6.76611 li
239.805 6.85889 li
239.914 6.93799 li
239.758 7.21875 li
239.742 7.25 li
239.867 7.28125 li
239.773 7.54688 li
239.773 7.59375 li
239.773 7.65625 239.766 7.70313 239.758 7.73389 cv
239.773 7.76611 li
239.961 7.79688 li
240.117 8.03125 li
240.039 8.21875 li
240.164 8.20313 li
240.215 8.29688 240.246 8.38281 240.258 8.45313 cv
240.07 8.625 li
240.016 8.68799 239.938 8.74219 239.836 8.79688 cv
239.633 8.90576 li
239.57 8.84375 li
239.445 8.92188 li
239.086 8.48389 li
239.086 8.28076 li
239.031 8.125 239.008 7.97998 239.008 7.84375 cv
239.008 7.76611 li
238.93 7.06299 li
239.039 6.56299 li
238.961 6.26611 li
238.758 6.60889 li
238.648 6.92188 li
238.555 6.96875 li
238.383 7.23389 li
238.086 7.5 li
237.992 7.64111 li
237.742 7.875 li
237.68 8.03125 li
237.289 8.26611 li
236.883 8.73389 li
236.648 8.78125 li
236.492 8.89111 li
236.293 8.89111 236.141 8.81592 236.039 8.67188 cv
235.684 8.49609 235.496 8.24219 235.477 7.90576 cv
235.539 7.875 li
235.523 7.79688 li
235.508 7.65625 li
235.445 7.5 li
235.508 7.32813 li
235.539 7.07813 li
235.617 6.68799 li
235.617 6.68018 235.617 6.66406 235.617 6.64111 cv
235.617 6.62109 235.617 6.60498 235.617 6.59375 cv
235.617 6.56299 235.621 6.52295 235.633 6.46875 cv
235.621 6.46094 235.617 6.43018 235.617 6.375 cv
235.617 6.32422 235.641 6.22998 235.695 6.09375 cv
235.773 6.06299 li
235.73 6.02295 235.711 5.97998 235.711 5.93799 cv
235.711 5.90576 235.715 5.88281 235.727 5.85889 cv
235.715 5.83984 235.711 5.81299 235.711 5.78125 cv
235.711 5.68018 235.758 5.60498 235.852 5.56299 cv
235.871 5.47998 235.914 5.39795 235.977 5.31299 cv
235.93 5.21875 li
236.07 5.04688 li
236.07 5 li
236.07 4.84375 236.121 4.70313 236.227 4.57813 cv
236.211 4.35889 li
236.258 4.31299 li
236.258 4.30518 236.258 4.29297 236.258 4.28125 cv
236.246 4.26221 236.242 4.24609 236.242 4.23389 cv
236.242 4.19482 236.258 4.15576 236.289 4.125 cv
236.289 4.04688 li
236.32 3.96484 236.402 3.84375 236.539 3.68799 cv
236.684 3.53125 236.789 3.39111 236.852 3.26611 cv
236.914 3.32813 li
237.039 3.26611 li
237.102 3.25 li
237.492 3.06299 li
238.414 3.10889 li
238.414 3.18799 li
238.711 3.25 li
238.887 3.25 239.008 3.31299 239.07 3.43799 cv
239.07 3.41797 239.074 3.38721 239.086 3.34375 cv
239.086 3.32422 239.086 3.30908 239.086 3.29688 cv
239.336 3.53125 li
239.555 3.57813 li
239.992 3.46875 li
240.148 3.76611 li
240.32 3.84375 li
cp
f
245.473 7.10889 mo
245.473 7 li
245.41 6.78076 li
245.457 6.67188 li
245.41 6.57813 li
245.395 6.45313 li
245.301 6.26611 li
245.254 6.14111 li
245.066 5.82813 li
244.926 5.70313 li
244.848 5.5 li
244.738 5.45313 li
244.551 5.20313 li
244.348 5.21875 li
244.207 5.03125 li
244.082 5.06299 li
244.004 4.90576 li
243.957 4.89111 li
243.785 4.89111 li
243.66 4.95313 li
243.566 4.84375 li
243.457 4.875 li
243.41 4.79688 li
243.191 4.75 li
243.191 4.90576 li
243.176 5.125 li
243.223 5.26611 li
243.395 5.42188 li
243.254 5.70313 li
243.27 5.89111 li
243.207 6.25 li
243.238 6.39795 243.285 6.52295 243.348 6.625 cv
243.301 6.76611 li
243.309 6.76611 243.316 6.77295 243.316 6.78076 cv
243.316 6.80518 243.285 6.83984 243.223 6.89111 cv
243.301 7 li
243.254 7.14111 li
243.223 7.29688 li
243.254 7.46875 li
243.254 7.625 li
243.504 7.625 li
243.535 7.60498 243.574 7.59375 243.629 7.59375 cv
243.699 7.59375 243.762 7.62109 243.816 7.67188 cv
243.824 7.67188 243.84 7.66797 243.863 7.65625 cv
243.883 7.65625 243.898 7.65625 243.91 7.65625 cv
243.93 7.65625 243.973 7.66797 244.035 7.68799 cv
244.086 7.65625 244.133 7.64111 244.176 7.64111 cv
244.238 7.64111 244.293 7.65625 244.348 7.68799 cv
244.457 7.68799 li
244.551 7.71875 li
244.801 7.64111 li
244.988 7.76611 li
245.059 7.78906 245.086 7.79688 245.066 7.79688 cv
245.301 7.57813 li
245.316 7.40576 li
245.379 7.39111 li
245.348 7.28125 li
245.426 7.18799 li
245.473 7.10889 li
cp
246.379 6.92188 mo
246.238 7.28125 li
246.332 7.53076 li
246.285 7.59375 li
246.238 7.79688 li
246.145 7.95313 li
246.098 7.98389 li
246.066 8.21875 li
245.848 8.23389 li
245.73 8.33984 245.617 8.42188 245.504 8.48389 cv
245.426 8.46875 li
245.254 8.53076 li
245.145 8.54688 li
244.91 8.625 li
244.645 8.51611 li
244.613 8.48389 li
244.41 8.5 li
244.457 8.51611 li
244.129 8.46875 li
243.816 8.54688 li
243.707 8.43799 li
243.457 8.46875 li
243.348 8.39111 li
243.348 8.39111 243.316 8.39795 243.254 8.40625 cv
243.254 8.46875 li
243.254 8.54297 243.242 8.61719 243.223 8.68799 cv
243.254 8.92188 li
243.16 9.04688 li
243.18 9.21094 243.191 9.34375 243.191 9.43799 cv
243.145 9.73389 li
243.191 10.188 li
243.098 10.313 li
243.145 10.4839 li
243.113 10.6089 li
243.191 10.6411 li
243.191 10.8281 li
243.199 10.8789 243.207 10.9141 243.207 10.938 cv
243.207 11.0078 243.164 11.0659 243.082 11.1089 cv
243.129 11.2808 li
243.066 11.375 li
243.051 11.8589 li
243.02 12.4219 242.895 12.7031 242.676 12.7031 cv
242.621 12.7031 242.48 12.6719 242.254 12.6089 cv
242.285 12.25 li
242.223 11.7188 li
242.332 11.5 li
242.348 11.2339 li
242.301 10.875 li
242.395 10.7188 li
242.285 10.438 li
242.363 10.2969 li
242.301 10.063 li
242.395 9.84375 li
242.371 9.78906 242.34 9.74219 242.301 9.70313 cv
242.258 9.67188 242.238 9.64502 242.238 9.625 cv
242.238 9.60205 242.262 9.58203 242.316 9.56299 cv
242.316 9.53125 242.316 9.48779 242.316 9.43799 cv
242.316 9.33203 242.336 9.19482 242.379 9.03076 cv
242.316 8.90576 li
242.348 8.75 li
242.27 8.64111 li
242.363 8.51611 li
242.316 8.15576 li
242.395 7.67188 li
242.316 7.51611 li
242.441 7.28125 li
242.301 7.15576 li
242.379 6.92188 li
242.301 6.85889 li
242.316 6.65576 li
242.379 6.40576 li
242.379 6.35889 li
242.395 6.31299 li
242.395 6.18799 li
242.41 6.14111 li
242.348 5.93799 li
242.41 5.73389 li
242.348 5.57813 li
242.395 5.40625 li
242.348 5.35889 li
242.379 5.10889 li
242.348 4.98389 li
242.363 4.85889 li
242.332 4.78076 li
241.91 4.96875 li
241.91 4.90576 li
241.816 4.90576 li
241.691 5.03125 li
241.582 5.03125 li
241.441 5.21875 li
241.316 5.17188 li
241.254 5.29688 li
240.859 5.06982 240.66 4.88721 240.66 4.75 cv
240.66 4.64795 240.699 4.56299 240.77 4.5 cv
240.77 4.32813 li
240.988 4.19482 241.195 4.125 241.395 4.125 cv
241.488 4.03076 li
241.863 3.875 li
241.957 3.79688 li
242.285 3.81299 li
242.348 3.79688 li
242.457 3.375 li
242.738 3.43799 li
242.941 3.75 li
243.051 3.64111 li
243.254 3.79688 li
243.355 3.79688 243.461 3.81982 243.566 3.85889 cv
243.613 3.96875 li
243.707 3.92188 li
243.801 4 li
243.852 4 243.895 4.00781 243.926 4.01611 cv
243.926 4.07813 li
244.176 4 li
244.316 4.14111 li
244.551 4.21875 li
244.691 4.40576 li
244.988 4.59375 li
245.004 4.60889 li
245.223 4.68799 li
245.223 4.75 li
245.285 4.80518 245.332 4.87109 245.363 4.95313 cv
245.473 5 li
245.535 5.14111 li
245.676 5.14111 li
245.676 5.375 li
245.77 5.46875 li
245.785 5.54688 li
245.91 5.57813 li
245.93 5.75781 245.98 5.91406 246.066 6.04688 cv
246.066 6.125 li
246.191 6.25 li
246.16 6.43799 li
246.254 6.65576 li
246.301 6.90625 li
246.379 6.92188 li
cp
f
252.43 8.57813 mo
252.43 8.89795 252.258 9.06299 251.914 9.06299 cv
251.746 9.06299 251.625 8.99219 251.555 8.85889 cv
251.469 8.74219 251.402 8.53076 251.352 8.21875 cv
251.352 8.06299 li
251.371 8.02295 251.383 7.97998 251.383 7.93799 cv
251.383 7.91797 251.375 7.89795 251.367 7.875 cv
251.195 7.625 li
251.32 7.39111 li
251.273 7.14111 li
251.32 7 li
251.32 6.84375 li
251.352 6.70313 li
251.289 6.48389 li
251.352 6.375 li
251.352 5.46875 li
251.273 5.06299 li
251.32 4.92188 li
251.242 4.625 li
251.133 4.70313 li
250.883 4.81299 li
250.523 5.26611 li
250.367 5.26611 li
250.164 5.60889 li
250.117 5.75 li
249.992 5.81299 li
249.852 6.01611 li
249.789 6.14111 li
249.664 6.56299 li
249.445 6.82813 li
249.398 7 li
249.273 7.09375 li
249.227 7.39111 li
248.992 7.59375 li
248.961 8.04688 li
248.852 8.04688 li
248.805 8.10889 li
248.602 8.48389 li
248.398 8.70313 li
248.211 8.93799 li
248.023 8.89111 li
247.867 8.89111 li
247.727 8.68799 li
247.586 8.26611 li
247.57 7.625 li
247.523 7.42188 li
247.57 7.17188 li
247.539 6.60889 li
247.633 6.59375 li
247.695 5.76611 li
247.742 5.60889 li
247.711 5.35889 li
247.773 5.31299 li
247.82 4.93799 li
247.867 4.79688 li
247.82 4.64111 li
247.852 4.57813 li
247.836 4.54688 li
247.867 4.20313 li
247.773 4.125 li
247.852 3.95313 li
247.836 3.60889 li
247.711 3.25 li
247.805 3.14111 li
247.727 2.82813 li
247.727 2.625 li
247.68 2.54688 li
247.617 2.15576 li
247.57 1.98389 li
247.383 1.64111 li
247.523 1.46875 li
247.633 1.26611 li
247.742 1.26611 li
247.918 1.26611 248.047 1.32813 248.133 1.45313 cv
248.305 1.59375 li
248.383 1.79688 li
248.555 1.95313 li
248.523 2.125 li
248.602 2.375 li
248.602 2.40625 li
248.617 2.42188 li
248.602 2.82813 li
248.617 3.34375 li
248.711 3.68799 li
248.648 3.82813 li
248.664 4.03076 li
248.602 4.20313 li
248.648 4.48389 li
248.586 4.73389 li
248.602 4.78076 li
248.586 5.51611 li
248.617 5.67188 li
248.555 5.76611 li
248.508 6.15625 li
248.461 6.34375 li
248.508 6.65576 li
248.461 6.76611 li
248.445 7 li
248.539 6.97998 248.586 6.93408 248.586 6.85889 cv
248.68 6.76611 li
248.758 6.60889 li
248.789 6.375 li
248.914 6.18799 li
248.992 5.93799 li
249.18 5.75 li
249.227 5.51611 li
249.336 5.51611 li
249.336 5.40625 li
249.352 5.26611 li
249.492 5.17188 li
249.492 5.07813 li
249.617 5.06299 li
249.633 4.85889 li
249.633 4.76611 li
249.852 4.67188 li
249.898 4.625 li
249.883 4.5 li
249.992 4.46875 li
250.07 4.26611 li
250.211 4.26611 li
250.352 4.17188 li
250.352 4.12109 250.355 4.08594 250.367 4.06299 cv
250.492 4 li
250.637 3.875 250.773 3.80518 250.898 3.78076 cv
250.898 3.76611 li
251.105 3.66406 251.25 3.60889 251.336 3.60889 cv
251.449 3.60889 251.559 3.66406 251.664 3.76611 cv
251.746 3.79688 251.797 3.85889 251.82 3.95313 cv
251.93 4.01611 li
251.961 4.18799 li
252.148 4.46875 li
252.148 5.42188 li
252.133 5.84375 li
252.18 5.95313 li
252.18 6.84375 li
252.148 7 li
252.148 7.23389 li
252.18 7.5 li
252.133 7.73389 li
252.164 7.85205 252.184 7.94922 252.195 8.03125 cv
252.336 8.15576 li
252.336 8.26611 li
252.383 8.29688 li
252.414 8.43408 252.43 8.52686 252.43 8.57813 cv
252.43 8.57813 li
cp
f
260.07 6.95313 mo
260.07 7.14111 260.039 7.25781 259.977 7.29688 cv
259.914 7.34375 li
259.867 7.51611 li
259.664 7.57813 li
259.609 7.70313 259.527 7.80518 259.414 7.875 cv
259.305 7.90576 li
259.148 8.07813 li
259.008 8.10889 li
258.953 8.25781 258.84 8.33594 258.664 8.34375 cv
258.641 8.36719 258.605 8.41406 258.555 8.48389 cv
258.43 8.56982 258.305 8.61719 258.18 8.625 cv
258.117 8.64111 li
258.039 8.75 li
257.805 8.75 li
257.602 8.89111 li
257.117 8.53076 li
256.883 8.06299 li
256.867 7.48389 li
256.82 7.32813 li
256.977 6.28076 li
257.023 6.23389 li
256.992 6.10889 256.977 5.99609 256.977 5.89111 cv
256.977 5.81982 257 5.66797 257.055 5.43799 cv
257.117 5.15576 li
257.094 5.11719 257.063 5.06299 257.023 5 cv
257.086 4.78076 li
257.117 4.5 li
257.133 4.46875 li
257.102 4.39795 257.078 4.31982 257.07 4.23389 cv
257.078 4.21484 257.09 4.19482 257.102 4.17188 cv
257.109 4.14111 257.117 4.11719 257.117 4.09375 cv
257.086 4.02295 257.07 3.95313 257.07 3.89111 cv
257.07 3.70313 257.18 3.61719 257.398 3.625 cv
257.539 3.64111 li
257.641 3.58984 257.703 3.56299 257.727 3.56299 cv
257.883 3.56299 257.992 3.65186 258.055 3.82813 cv
258.055 3.875 li
258.086 3.96875 258.102 4.06299 258.102 4.15576 cv
258.102 4.22998 258.09 4.28125 258.07 4.31299 cv
257.992 4.90576 li
258.07 5.07813 li
258.07 5.22705 258.023 5.35498 257.93 5.46875 cv
257.977 5.60889 li
257.82 6.06299 li
257.809 6.26221 257.789 6.41406 257.758 6.51611 cv
257.758 6.81299 li
257.695 6.98389 li
257.695 7.10889 li
257.68 7.39111 li
257.695 7.59375 li
257.883 7.75 li
258.023 7.71875 li
258.055 7.68799 li
258.148 7.68799 li
258.305 7.64111 li
258.43 7.51611 li
258.477 7.43799 li
258.57 7.43799 li
258.586 7.375 li
258.633 7.32813 li
258.695 7.375 li
258.82 7.25 li
258.883 7.26611 li
258.914 7.17188 li
258.93 7.17188 li
258.977 7.07813 li
259.086 7.03076 li
259.305 6.92188 li
259.492 6.79688 259.672 6.73389 259.852 6.73389 cv
259.898 6.73389 li
259.98 6.78906 260.039 6.85889 260.07 6.95313 cv
260.07 6.95313 li
cp
258.852 .59375 mo
258.852 .687988 258.789 .776855 258.664 .858887 cv
258.664 .875 li
258.508 1.06299 258.371 1.16797 258.258 1.18799 cv
258.086 1.40576 li
257.961 1.56299 li
257.695 1.64111 li
257.57 1.79688 li
257.383 1.90576 li
257.07 2.17188 li
256.867 2 li
256.914 1.68799 li
257.039 1.48389 li
257.047 1.37109 257.109 1.27295 257.227 1.18799 cv
257.227 1.14111 li
257.305 1.09375 li
257.32 .921875 li
257.508 .858887 li
257.508 .766113 li
257.648 .733887 li
257.68 .578125 257.746 .464844 257.852 .391113 cv
257.898 .358887 li
257.961 .296875 li
258.055 0 li
258.586 .125 258.852 .324219 258.852 .59375 cv
258.852 .59375 li
cp
f
270.883 7.28125 mo
270.84 7.39795 270.789 7.48389 270.727 7.54688 cv
270.695 7.63281 270.656 7.69482 270.617 7.73389 cv
270.574 7.80908 270.527 7.86719 270.477 7.90576 cv
270.43 7.96875 li
270.398 8.02295 270.352 8.04688 270.289 8.04688 cv
270.227 8.15576 li
270.148 8.15576 li
270.086 8.26611 li
269.992 8.31299 li
269.914 8.39111 li
269.852 8.43799 li
269.734 8.43799 269.637 8.47705 269.555 8.54688 cv
269.449 8.58984 269.344 8.60889 269.242 8.60889 cv
269.125 8.60889 269.012 8.57813 268.898 8.51611 cv
268.773 8.51611 268.711 8.5 268.711 8.46875 cv
268.539 8.43799 li
268.508 8.40625 li
268.43 8.26611 li
268.305 8.15576 li
268.211 8.05518 268.156 7.95313 268.148 7.85889 cv
268.094 7.78906 268.043 7.63721 267.992 7.40576 cv
267.867 7.21875 li
267.867 7.10889 li
267.789 6.75 li
267.789 6.60889 li
267.727 6.23389 li
267.758 5.93799 li
267.695 5.84375 li
267.586 6.14111 li
267.43 6.31982 267.336 6.42188 267.305 6.45313 cv
267.281 6.48389 267.25 6.5 267.211 6.5 cv
267.199 6.5 267.184 6.5 267.164 6.5 cv
267.086 6.625 li
267.074 6.63721 267.07 6.65186 267.07 6.67188 cv
267.07 6.72705 267.102 6.75781 267.164 6.76611 cv
267.141 6.77686 267.102 6.82813 267.039 6.92188 cv
267.008 6.98389 266.98 7.03076 266.961 7.06299 cv
266.914 7 li
266.898 7.17188 li
266.793 7.24609 266.719 7.36719 266.68 7.53076 cv
266.594 7.63721 266.469 7.78076 266.305 7.96875 cv
266.148 8.14111 li
266.105 8.14111 266.086 8.14795 266.086 8.15576 cv
266.086 8.18799 li
266.043 8.30518 265.961 8.39111 265.836 8.45313 cv
265.695 8.625 li
265.617 8.625 li
265.32 8.73389 li
265.078 8.72314 264.934 8.62109 264.883 8.42188 cv
264.867 8.29688 li
264.789 8.14111 li
264.789 8 li
264.695 7.65625 li
264.695 7.54688 li
264.633 7.43799 li
264.68 7.06299 li
264.668 7.02295 264.664 6.96484 264.664 6.89111 cv
264.664 6.82813 264.668 6.78906 264.68 6.76611 cv
264.664 6.68799 li
264.664 6.64111 li
264.602 6.5 li
264.695 6.28076 li
264.684 6.21875 264.664 6.11719 264.633 5.96875 cv
264.664 5.85889 li
264.695 5.51611 li
264.602 5.26611 li
264.633 5.06299 li
264.586 4.95313 li
264.586 4.92188 264.559 4.84375 264.508 4.71875 cv
264.43 4.76611 li
264.273 4.95313 li
264.117 5.09375 li
263.836 5.45313 li
263.805 5.57813 li
263.602 5.79688 li
263.523 5.96875 li
263.445 6.06299 li
263.414 6.24219 263.324 6.36719 263.18 6.43799 cv
263.164 6.60889 li
263.109 6.65186 263.059 6.71484 263.008 6.79688 cv
262.953 6.88281 262.918 6.93018 262.898 6.93799 cv
262.875 6.94922 262.844 6.97705 262.805 7.01611 cv
262.664 7.21875 li
262.664 7.35498 262.609 7.44922 262.508 7.5 cv
262.508 7.57813 li
262.453 7.64111 262.387 7.70313 262.305 7.76611 cv
262.305 7.75 li
262.258 7.90576 li
262.195 7.90576 262.137 7.98389 262.086 8.14111 cv
262.055 8.18799 li
262.043 8.31299 261.969 8.40625 261.836 8.46875 cv
261.68 8.625 li
261.543 8.69922 261.461 8.73389 261.43 8.73389 cv
261.219 8.73389 261.078 8.56299 261.008 8.21875 cv
260.961 7.95313 li
260.961 7.93408 260.961 7.90576 260.961 7.875 cv
260.961 7.82422 260.969 7.76611 260.992 7.70313 cv
260.93 7.48389 li
260.961 7.28125 li
260.93 7.09375 li
260.949 6.93018 260.977 6.82422 261.008 6.78076 cv
260.984 6.61719 260.977 6.52295 260.977 6.5 cv
260.977 6.28076 li
261.008 6.21875 261.047 6.14795 261.102 6.06299 cv
261.023 5.98389 li
261.012 5.92188 261.008 5.89111 261.008 5.89111 cv
261.008 5.82813 261.055 5.72998 261.148 5.59375 cv
261.07 5.35889 li
261.117 5.21875 li
261.039 4.875 li
261.07 4.70313 li
261.008 4.43799 li
261.008 4.26611 li
260.914 4.04688 li
261.07 3.73389 261.242 3.57813 261.43 3.57813 cv
261.523 3.57813 261.609 3.62109 261.695 3.70313 cv
261.727 3.81299 li
261.859 3.88721 261.93 3.99609 261.93 4.14111 cv
261.93 4.12109 261.918 4.20313 261.898 4.39111 cv
261.836 4.39111 li
261.945 4.59375 li
261.883 4.68799 li
261.867 4.73389 li
261.945 5.28076 li
261.914 5.75 li
261.883 5.82813 li
261.93 6.03076 li
261.949 6.06299 261.961 6.10205 261.961 6.14111 cv
261.961 6.21484 261.93 6.28076 261.867 6.34375 cv
261.867 6.44922 261.844 6.53906 261.805 6.60889 cv
261.836 6.96875 li
261.836 7.125 li
261.852 7.09375 li
261.93 6.98389 li
262.102 6.68799 li
262.133 6.68799 li
262.172 6.68799 262.227 6.60889 262.289 6.45313 cv
262.367 6.23389 li
262.387 6.18408 262.449 6.10498 262.555 6 cv
262.602 5.78125 li
262.742 5.57813 li
262.789 5.40625 li
262.828 5.375 262.871 5.34375 262.914 5.31299 cv
262.93 5.28076 li
262.949 5.25 263.031 5.16797 263.18 5.03125 cv
263.258 5 li
263.289 4.875 li
263.336 4.84375 li
263.375 4.68018 263.48 4.56299 263.648 4.5 cv
263.602 4.46875 li
263.648 4.43799 li
263.637 4.43799 263.633 4.43018 263.633 4.40576 cv
263.633 4.39795 263.637 4.37109 263.648 4.32813 cv
263.852 4.25 li
263.883 4.06299 li
264.008 4.06299 li
264.008 4.05518 264.016 4.02295 264.039 3.96875 cv
264.273 3.78076 li
264.387 3.75 264.465 3.73389 264.508 3.73389 cv
264.602 3.73389 264.73 3.76221 264.898 3.81299 cv
265.023 3.98389 li
265.07 4.01611 li
265.133 4.15576 li
265.305 4.39111 li
265.305 4.54688 li
265.414 4.65625 li
265.414 4.84375 li
265.496 5.03125 265.539 5.19482 265.539 5.32813 cv
265.508 5.46875 li
265.57 5.67188 li
265.445 5.81299 li
265.492 6.07813 li
265.461 6.20313 li
265.449 6.28906 265.445 6.35205 265.445 6.39111 cv
265.445 6.43408 265.465 6.51221 265.508 6.625 cv
265.461 6.76611 li
265.508 6.92188 li
265.461 6.96875 li
265.48 7.07422 265.508 7.26221 265.539 7.53076 cv
265.523 7.57813 li
265.914 7.15576 li
266.023 6.92188 li
266.063 6.88281 266.117 6.80908 266.18 6.70313 cv
266.18 6.67188 li
266.219 6.54688 266.273 6.46094 266.336 6.40576 cv
266.336 6.36719 266.375 6.30908 266.461 6.23389 cv
266.555 6.17188 li
266.586 6.03906 266.668 5.92188 266.805 5.82813 cv
266.867 5.67188 li
266.977 5.51611 li
267.102 5.40625 li
267.172 5.34375 267.23 5.25781 267.273 5.14111 cv
267.367 5 li
267.414 4.81299 li
267.539 4.75 li
267.68 4.57813 li
267.805 4.28125 li
267.773 4.28125 267.758 4.27686 267.758 4.26611 cv
267.758 4.26611 267.766 4.25 267.789 4.21875 cv
267.867 4.14111 li
267.961 3.95313 li
268.094 3.90186 268.172 3.875 268.195 3.875 cv
268.195 3.875 268.211 3.88721 268.242 3.90625 cv
268.461 3.92188 li
268.648 4 li
268.82 4.18799 li
268.852 4.35889 li
268.836 4.48389 li
268.773 4.54688 li
268.648 4.79688 li
268.602 5.06299 li
268.641 5.10498 268.664 5.18018 268.664 5.28076 cv
268.633 5.32422 268.617 5.375 268.617 5.43799 cv
268.57 5.53076 li
268.578 5.57422 268.586 5.64111 268.586 5.73389 cv
268.586 5.79688 268.578 5.85205 268.57 5.89111 cv
268.523 5.93799 li
268.57 6.03076 li
268.492 6.14111 li
268.543 6.14111 268.57 6.19482 268.57 6.29688 cv
268.578 6.33984 268.586 6.37109 268.586 6.39111 cv
268.586 6.41406 268.578 6.43799 268.57 6.46875 cv
268.578 6.55518 268.586 6.63281 268.586 6.70313 cv
268.586 6.71875 li
268.586 6.74219 268.637 6.90625 268.742 7.21875 cv
268.773 7.32813 li
268.898 7.48389 li
268.977 7.64111 li
269.039 7.68799 li
269.086 7.75 li
269.148 7.76611 li
269.258 7.79688 li
269.32 7.78076 li
269.352 7.78076 li
269.434 7.78076 269.531 7.75 269.648 7.68799 cv
269.68 7.60498 269.762 7.52295 269.898 7.43799 cv
269.906 7.39795 269.953 7.31982 270.039 7.20313 cv
270.242 7.06299 li
270.32 6.92188 li
270.383 6.88281 270.449 6.85889 270.523 6.85889 cv
270.605 6.85889 270.699 6.88281 270.805 6.92188 cv
270.855 7.00781 270.883 7.125 270.883 7.28125 cv
270.883 7.28125 li
cp
f
275.293 7.10889 mo
275.293 7 li
275.23 6.78076 li
275.277 6.67188 li
275.23 6.57813 li
275.215 6.45313 li
275.121 6.26611 li
275.074 6.14111 li
274.887 5.82813 li
274.746 5.70313 li
274.668 5.5 li
274.559 5.45313 li
274.371 5.20313 li
274.168 5.21875 li
274.027 5.03125 li
273.902 5.06299 li
273.824 4.90576 li
273.777 4.89111 li
273.605 4.89111 li
273.48 4.95313 li
273.387 4.84375 li
273.277 4.875 li
273.23 4.79688 li
273.012 4.75 li
273.012 4.90576 li
272.996 5.125 li
273.043 5.26611 li
273.215 5.42188 li
273.074 5.70313 li
273.09 5.89111 li
273.027 6.25 li
273.059 6.39795 273.105 6.52295 273.168 6.625 cv
273.121 6.76611 li
273.129 6.76611 273.137 6.77295 273.137 6.78076 cv
273.137 6.80518 273.105 6.83984 273.043 6.89111 cv
273.121 7 li
273.074 7.14111 li
273.043 7.29688 li
273.074 7.46875 li
273.074 7.625 li
273.324 7.625 li
273.355 7.60498 273.395 7.59375 273.449 7.59375 cv
273.52 7.59375 273.582 7.62109 273.637 7.67188 cv
273.645 7.67188 273.66 7.66797 273.684 7.65625 cv
273.703 7.65625 273.719 7.65625 273.73 7.65625 cv
273.75 7.65625 273.793 7.66797 273.855 7.68799 cv
273.906 7.65625 273.953 7.64111 273.996 7.64111 cv
274.059 7.64111 274.113 7.65625 274.168 7.68799 cv
274.277 7.68799 li
274.371 7.71875 li
274.621 7.64111 li
274.809 7.76611 li
274.879 7.78906 274.906 7.79688 274.887 7.79688 cv
275.121 7.57813 li
275.137 7.40576 li
275.199 7.39111 li
275.168 7.28125 li
275.246 7.18799 li
275.293 7.10889 li
cp
276.199 6.92188 mo
276.059 7.28125 li
276.152 7.53076 li
276.105 7.59375 li
276.059 7.79688 li
275.965 7.95313 li
275.918 7.98389 li
275.887 8.21875 li
275.668 8.23389 li
275.551 8.33984 275.438 8.42188 275.324 8.48389 cv
275.246 8.46875 li
275.074 8.53076 li
274.965 8.54688 li
274.73 8.625 li
274.465 8.51611 li
274.434 8.48389 li
274.23 8.5 li
274.277 8.51611 li
273.949 8.46875 li
273.637 8.54688 li
273.527 8.43799 li
273.277 8.46875 li
273.168 8.39111 li
273.168 8.39111 273.137 8.39795 273.074 8.40625 cv
273.074 8.46875 li
273.074 8.54297 273.063 8.61719 273.043 8.68799 cv
273.074 8.92188 li
272.98 9.04688 li
273 9.21094 273.012 9.34375 273.012 9.43799 cv
272.965 9.73389 li
273.012 10.188 li
272.918 10.313 li
272.965 10.4839 li
272.934 10.6089 li
273.012 10.6411 li
273.012 10.8281 li
273.02 10.8789 273.027 10.9141 273.027 10.938 cv
273.027 11.0078 272.984 11.0659 272.902 11.1089 cv
272.949 11.2808 li
272.887 11.375 li
272.871 11.8589 li
272.84 12.4219 272.715 12.7031 272.496 12.7031 cv
272.441 12.7031 272.301 12.6719 272.074 12.6089 cv
272.105 12.25 li
272.043 11.7188 li
272.152 11.5 li
272.168 11.2339 li
272.121 10.875 li
272.215 10.7188 li
272.105 10.438 li
272.184 10.2969 li
272.121 10.063 li
272.215 9.84375 li
272.191 9.78906 272.16 9.74219 272.121 9.70313 cv
272.078 9.67188 272.059 9.64502 272.059 9.625 cv
272.059 9.60205 272.082 9.58203 272.137 9.56299 cv
272.137 9.53125 272.137 9.48779 272.137 9.43799 cv
272.137 9.33203 272.156 9.19482 272.199 9.03076 cv
272.137 8.90576 li
272.168 8.75 li
272.09 8.64111 li
272.184 8.51611 li
272.137 8.15576 li
272.215 7.67188 li
272.137 7.51611 li
272.262 7.28125 li
272.121 7.15576 li
272.199 6.92188 li
272.121 6.85889 li
272.137 6.65576 li
272.199 6.40576 li
272.199 6.35889 li
272.215 6.31299 li
272.215 6.18799 li
272.23 6.14111 li
272.168 5.93799 li
272.23 5.73389 li
272.168 5.57813 li
272.215 5.40625 li
272.168 5.35889 li
272.199 5.10889 li
272.168 4.98389 li
272.184 4.85889 li
272.152 4.78076 li
271.73 4.96875 li
271.73 4.90576 li
271.637 4.90576 li
271.512 5.03125 li
271.402 5.03125 li
271.262 5.21875 li
271.137 5.17188 li
271.074 5.29688 li
270.68 5.06982 270.48 4.88721 270.48 4.75 cv
270.48 4.64795 270.52 4.56299 270.59 4.5 cv
270.59 4.32813 li
270.809 4.19482 271.016 4.125 271.215 4.125 cv
271.309 4.03076 li
271.684 3.875 li
271.777 3.79688 li
272.105 3.81299 li
272.168 3.79688 li
272.277 3.375 li
272.559 3.43799 li
272.762 3.75 li
272.871 3.64111 li
273.074 3.79688 li
273.176 3.79688 273.281 3.81982 273.387 3.85889 cv
273.434 3.96875 li
273.527 3.92188 li
273.621 4 li
273.672 4 273.715 4.00781 273.746 4.01611 cv
273.746 4.07813 li
273.996 4 li
274.137 4.14111 li
274.371 4.21875 li
274.512 4.40576 li
274.809 4.59375 li
274.824 4.60889 li
275.043 4.68799 li
275.043 4.75 li
275.105 4.80518 275.152 4.87109 275.184 4.95313 cv
275.293 5 li
275.355 5.14111 li
275.496 5.14111 li
275.496 5.375 li
275.59 5.46875 li
275.605 5.54688 li
275.73 5.57813 li
275.75 5.75781 275.801 5.91406 275.887 6.04688 cv
275.887 6.125 li
276.012 6.25 li
275.98 6.43799 li
276.074 6.65576 li
276.121 6.90625 li
276.199 6.92188 li
cp
f
280.5 7.39111 mo
280.5 7.48389 280.469 7.55908 280.406 7.60889 cv
280.344 7.70313 280.238 7.80518 280.094 7.90576 cv
279.984 8 li
279.875 8.14111 li
279.766 8.18799 li
279.594 8.29688 li
279.469 8.31299 li
279.422 8.35889 li
279.266 8.40186 279.141 8.47998 279.047 8.59375 cv
278.992 8.63721 278.941 8.65576 278.891 8.65576 cv
278.859 8.65576 278.832 8.65186 278.813 8.64111 cv
278.676 8.72314 278.5 8.76611 278.281 8.76611 cv
278.102 8.76611 277.984 8.75 277.922 8.71875 cv
277.703 8.59375 li
277.641 8.46875 li
277.641 8.43799 li
277.641 8.33594 277.594 8.25 277.5 8.18799 cv
277.453 7.95313 li
277.359 7.84375 li
277.297 7.39111 li
277.281 7.125 li
277.297 6.93799 li
277.328 6.85889 li
277.297 6.81982 277.281 6.77295 277.281 6.71875 cv
277.32 6.375 277.344 6.16406 277.344 6.07813 cv
277.234 5.85889 li
277.344 5.67188 li
277.391 5.375 li
277.359 5.17188 li
277.438 5 li
277.359 4.75 li
277.469 4.59375 li
277.484 4.48389 li
277.484 4.06299 li
277.516 3.96875 li
277.5 3.46875 li
277.547 2.95313 li
277.5 2.85889 li
277.484 2.5 li
277.516 2.17188 li
277.484 2.06299 li
277.547 1.32813 li
277.891 1.25781 278.039 1.21875 278 1.21875 cv
278.125 1.21875 278.227 1.28906 278.313 1.42188 cv
278.328 1.51611 li
278.516 1.68799 li
278.422 1.95313 li
278.438 2 li
278.426 2.14795 278.406 2.24609 278.375 2.29688 cv
278.406 2.54688 li
278.469 2.78125 li
278.375 3.03076 li
278.375 3.16797 278.359 3.29297 278.328 3.40576 cv
278.328 3.43799 278.316 3.5 278.297 3.59375 cv
278.281 3.65576 li
278.391 3.79688 li
278.344 3.92188 li
278.363 3.98389 278.375 4.03076 278.375 4.06299 cv
278.375 4.10498 278.359 4.16797 278.328 4.25 cv
278.344 4.35889 li
278.266 4.75 li
278.266 5 li
278.188 5.25 li
278.234 5.46875 li
278.188 6 li
278.219 6.06299 li
278.172 6.34375 li
278.141 6.67188 li
278.117 6.72705 278.109 6.75781 278.109 6.76611 cv
278.109 6.90186 278.109 7.01221 278.109 7.09375 cv
278.172 7.26611 li
278.141 7.43799 li
278.219 7.59375 li
278.203 7.65625 li
278.242 7.69922 278.285 7.76221 278.328 7.84375 cv
278.438 7.84375 li
278.594 7.90576 li
278.672 7.79688 li
278.781 7.79688 li
278.82 7.77686 278.859 7.76611 278.891 7.76611 cv
278.922 7.76611 li
279.004 7.75781 279.066 7.71484 279.109 7.64111 cv
279.188 7.60889 li
279.238 7.52686 279.328 7.46875 279.453 7.43799 cv
279.492 7.40576 279.57 7.33984 279.688 7.23389 cv
279.688 7.13281 279.754 7.04688 279.891 6.98389 cv
280.016 6.98389 280.094 6.96484 280.125 6.92188 cv
280.289 6.95313 280.395 7 280.438 7.06299 cv
280.477 7.11719 280.5 7.22705 280.5 7.39111 cv
280.5 7.39111 li
cp
f
284.359 6.95313 mo
284.359 7.14111 284.328 7.25781 284.266 7.29688 cv
284.203 7.34375 li
284.156 7.51611 li
283.953 7.57813 li
283.898 7.70313 283.816 7.80518 283.703 7.875 cv
283.594 7.90576 li
283.438 8.07813 li
283.297 8.10889 li
283.242 8.25781 283.129 8.33594 282.953 8.34375 cv
282.93 8.36719 282.895 8.41406 282.844 8.48389 cv
282.719 8.56982 282.594 8.61719 282.469 8.625 cv
282.406 8.64111 li
282.328 8.75 li
282.094 8.75 li
281.891 8.89111 li
281.406 8.53076 li
281.172 8.06299 li
281.156 7.48389 li
281.109 7.32813 li
281.266 6.28076 li
281.313 6.23389 li
281.281 6.10889 281.266 5.99609 281.266 5.89111 cv
281.266 5.81982 281.289 5.66797 281.344 5.43799 cv
281.406 5.15576 li
281.383 5.11719 281.352 5.06299 281.313 5 cv
281.375 4.78076 li
281.406 4.5 li
281.422 4.46875 li
281.391 4.39795 281.367 4.31982 281.359 4.23389 cv
281.367 4.21484 281.379 4.19482 281.391 4.17188 cv
281.398 4.14111 281.406 4.11719 281.406 4.09375 cv
281.375 4.02295 281.359 3.95313 281.359 3.89111 cv
281.359 3.70313 281.469 3.61719 281.688 3.625 cv
281.828 3.64111 li
281.93 3.58984 281.992 3.56299 282.016 3.56299 cv
282.172 3.56299 282.281 3.65186 282.344 3.82813 cv
282.344 3.875 li
282.375 3.96875 282.391 4.06299 282.391 4.15576 cv
282.391 4.22998 282.379 4.28125 282.359 4.31299 cv
282.281 4.90576 li
282.359 5.07813 li
282.359 5.22705 282.313 5.35498 282.219 5.46875 cv
282.266 5.60889 li
282.109 6.06299 li
282.098 6.26221 282.078 6.41406 282.047 6.51611 cv
282.047 6.81299 li
281.984 6.98389 li
281.984 7.10889 li
281.969 7.39111 li
281.984 7.59375 li
282.172 7.75 li
282.313 7.71875 li
282.344 7.68799 li
282.438 7.68799 li
282.594 7.64111 li
282.719 7.51611 li
282.766 7.43799 li
282.859 7.43799 li
282.875 7.375 li
282.922 7.32813 li
282.984 7.375 li
283.109 7.25 li
283.172 7.26611 li
283.203 7.17188 li
283.219 7.17188 li
283.266 7.07813 li
283.375 7.03076 li
283.594 6.92188 li
283.781 6.79688 283.961 6.73389 284.141 6.73389 cv
284.188 6.73389 li
284.27 6.78906 284.328 6.85889 284.359 6.95313 cv
284.359 6.95313 li
cp
283.141 .59375 mo
283.141 .687988 283.078 .776855 282.953 .858887 cv
282.953 .875 li
282.797 1.06299 282.66 1.16797 282.547 1.18799 cv
282.375 1.40576 li
282.25 1.56299 li
281.984 1.64111 li
281.859 1.79688 li
281.672 1.90576 li
281.359 2.17188 li
281.156 2 li
281.203 1.68799 li
281.328 1.48389 li
281.336 1.37109 281.398 1.27295 281.516 1.18799 cv
281.516 1.14111 li
281.594 1.09375 li
281.609 .921875 li
281.797 .858887 li
281.797 .766113 li
281.938 .733887 li
281.969 .578125 282.035 .464844 282.141 .391113 cv
282.188 .358887 li
282.25 .296875 li
282.344 0 li
282.875 .125 283.141 .324219 283.141 .59375 cv
283.141 .59375 li
cp
f
287.625 4.26611 mo
287.625 4.24609 287.609 4.19922 287.578 4.125 cv
287.531 4.10889 li
287.5 4.125 li
287.488 4.125 287.473 4.125 287.453 4.125 cv
287.43 4.125 287.414 4.125 287.406 4.125 cv
287.395 4.125 287.383 4.125 287.375 4.125 cv
287.352 4.125 287.336 4.125 287.328 4.125 cv
287.219 4.20313 li
287.109 4.21875 li
287.047 4.23389 li
286.844 4.5 li
286.703 4.59375 li
286.516 4.93799 li
286.406 5 li
286.383 5.14795 286.328 5.26611 286.234 5.35889 cv
286.188 5.43799 li
286.281 5.38721 286.379 5.35889 286.484 5.35889 cv
286.578 5.31299 li
286.609 5.21875 li
286.781 5.21875 li
286.875 5.07813 li
286.953 5.07813 li
287.078 5.125 li
287.141 4.95313 li
287.219 4.95313 li
287.219 4.81299 li
287.375 4.78076 li
287.422 4.75 li
287.438 4.64111 li
287.594 4.40576 li
287.613 4.36719 287.625 4.31982 287.625 4.26611 cv
287.625 4.26611 li
cp
288.813 7.71875 mo
288.813 7.81299 288.738 7.93408 288.594 8.07813 cv
288.551 8.20313 288.488 8.30908 288.406 8.39111 cv
288.344 8.40625 li
288.203 8.625 li
287.984 8.67188 li
287.766 8.81299 li
287.641 9.03076 li
287.516 9 li
287.422 9.03906 287.348 9.06592 287.297 9.07813 cv
287.219 9.18799 li
287.195 9.17578 287.16 9.17188 287.109 9.17188 cv
287.004 9.17188 286.906 9.24219 286.813 9.39111 cv
286.641 9.25 li
286.609 9.25 286.563 9.25 286.5 9.25 cv
286.395 9.25 286.305 9.23389 286.234 9.20313 cv
286.031 9.20313 li
285.938 9.14111 li
285.633 9.09814 285.441 8.98389 285.359 8.79688 cv
285.359 8.76611 li
285.219 8.68799 li
285.141 8.48389 li
285 8.39111 li
285 8.21875 li
284.859 7.68799 li
284.891 7.25 li
284.938 7.06299 li
284.938 6.81299 li
284.984 6.60889 li
284.984 6.53125 li
285.063 6.39111 li
285.047 6.40576 li
285.047 6.33594 285.063 6.26221 285.094 6.18799 cv
285.094 6.125 li
285.063 5.82813 li
285.063 5.69482 285.125 5.57422 285.25 5.46875 cv
285.25 5.46094 285.25 5.43799 285.25 5.40625 cv
285.25 5.375 285.234 5.31299 285.203 5.21875 cv
285.18 5.11719 285.172 5.04297 285.172 5 cv
285.172 4.89795 285.195 4.79297 285.25 4.68799 cv
285.313 4.79297 285.398 4.84375 285.516 4.84375 cv
285.563 4.84375 li
285.57 4.81299 285.602 4.77686 285.656 4.73389 cv
285.727 4.53906 285.816 4.37109 285.922 4.23389 cv
285.969 4.17188 li
285.969 4.14111 285.992 4.05518 286.047 3.90625 cv
286.141 3.90625 li
286.172 3.84375 li
286.266 3.81299 li
286.305 3.75 286.332 3.71484 286.344 3.70313 cv
286.352 3.69482 286.438 3.64795 286.594 3.56299 cv
286.625 3.5 286.676 3.44922 286.75 3.40576 cv
286.781 3.38721 286.816 3.36719 286.859 3.34375 cv
286.906 3.28076 li
287.125 3.21094 287.258 3.17188 287.313 3.17188 cv
287.383 3.17188 287.445 3.18799 287.5 3.21875 cv
287.563 3.20313 li
287.641 3.25 li
287.734 3.32422 287.832 3.38721 287.938 3.43799 cv
288.141 3.59375 li
288.141 3.64111 li
288.316 3.78906 288.406 3.99219 288.406 4.25 cv
288.375 4.375 li
288.406 4.76611 li
288.297 4.84375 li
288.188 5.15576 li
287.953 5.40625 li
287.938 5.59375 li
287.688 5.78125 287.453 5.93408 287.234 6.04688 cv
287.16 6.15186 287.051 6.20313 286.906 6.20313 cv
286.859 6.20313 li
286.641 6.34375 li
286.438 6.34375 li
286.156 6.46875 li
285.938 6.35889 li
285.922 6.35889 li
285.898 6.42188 285.883 6.52295 285.875 6.65576 cv
285.766 6.71875 li
285.766 6.85889 li
285.688 7.07813 li
285.707 7.26611 285.719 7.38721 285.719 7.43799 cv
285.672 7.48389 li
285.672 7.58984 285.664 7.66406 285.656 7.70313 cv
285.656 7.71484 285.656 7.72998 285.656 7.75 cv
285.656 7.76221 285.656 7.77295 285.656 7.78076 cv
285.656 7.84375 285.688 7.89795 285.75 7.93799 cv
285.77 8.03125 285.813 8.08984 285.875 8.10889 cv
285.953 8.18799 li
286.219 8.26611 li
286.219 8.29688 li
286.313 8.31299 li
286.719 8.34375 li
286.953 8.31299 li
287.078 8.21875 li
287.156 8.20313 li
287.266 8.01611 li
287.328 8 li
287.625 7.90576 li
287.664 7.85498 287.719 7.80908 287.781 7.76611 cv
287.828 7.70313 li
287.984 7.67188 288.07 7.58984 288.094 7.45313 cv
288.207 7.33984 288.352 7.28125 288.531 7.28125 cv
288.578 7.28125 li
288.734 7.46094 288.813 7.60498 288.813 7.71875 cv
288.813 7.71875 li
cp
f
294.039 7.71875 mo
293.898 7.89111 li
293.758 8.20313 li
293.664 8.26611 li
293.586 8.43799 li
293.336 8.46875 li
293.18 8.625 li
292.945 8.625 li
292.805 8.73389 li
292.664 8.70313 li
292.508 8.73389 li
292.508 8.82813 li
292.07 8.79688 li
291.883 8.81299 li
291.742 8.89111 li
291.617 8.81299 li
291.699 8.80078 291.762 8.79688 291.805 8.79688 cv
291.742 8.80518 291.547 8.81982 291.227 8.84375 cv
291.195 8.82813 li
291.102 8.82813 li
290.945 8.90576 li
290.891 8.875 290.805 8.83594 290.68 8.79688 cv
290.5 8.78516 290.387 8.78125 290.336 8.78125 cv
290.242 8.78125 li
290.18 8.77002 290.117 8.76611 290.055 8.76611 cv
289.992 8.76611 289.93 8.78125 289.867 8.81299 cv
289.695 8.70313 li
289.602 8.67188 li
289.578 8.67188 289.531 8.66406 289.461 8.64111 cv
289.168 8.60889 289.023 8.36719 289.023 7.90576 cv
289.023 7.79688 li
289.258 7.625 li
289.539 7.51611 li
289.758 7.625 li
289.93 7.625 li
289.93 7.65625 li
290 7.68799 290.063 7.75 290.117 7.84375 cv
290.211 7.85889 li
290.211 8.01611 li
290.367 8.06299 li
290.398 8.07813 li
291.945 7.98389 li
292.305 7.92188 li
292.352 7.92188 li
292.367 7.85889 li
292.539 7.84375 li
292.57 7.79688 li
292.734 7.77686 292.891 7.72998 293.039 7.65625 cv
293.039 7.59375 li
293.039 7.59375 293.023 7.56982 292.992 7.51611 cv
292.93 7.53076 li
292.773 7.40576 li
292.664 7.40576 li
292.617 7.32813 li
292.648 7.28125 li
292.508 7.29688 li
292.414 7.18799 li
292.391 7.19922 292.355 7.20313 292.305 7.20313 cv
292.199 7.20313 292.094 7.18408 291.992 7.14111 cv
291.883 7.14111 li
291.789 7.10889 li
291.633 7.17188 li
291.539 7.06299 li
291.492 7.06299 li
291.32 6.92188 li
290.961 6.78076 li
290.836 6.68799 li
290.383 6.60889 li
290.336 6.51611 li
289.992 6.29688 li
289.82 5.90576 li
289.664 5.70313 li
289.617 5.07813 li
289.664 5 li
289.684 4.82422 289.75 4.66797 289.867 4.53076 cv
289.98 4.46875 290.039 4.375 290.039 4.25 cv
290.227 4.21875 li
290.258 4.15576 290.32 4.09375 290.414 4.03076 cv
290.602 3.89111 li
291.477 3.56299 li
291.727 3.54688 li
292.117 3.43799 li
292.883 3.48389 li
292.898 3.54688 li
292.969 3.56982 293.047 3.63281 293.133 3.73389 cv
293.133 3.79688 li
293.336 3.92188 li
293.242 4.20313 li
293.227 4.31299 li
293.172 4.51221 293.059 4.60889 292.883 4.60889 cv
292.734 4.60889 292.633 4.54297 292.57 4.40576 cv
292.57 4.375 li
292.414 4.35889 li
292.258 4.40576 li
292.102 4.29688 li
292.008 4.35889 li
291.902 4.35889 291.809 4.39111 291.727 4.45313 cv
291.602 4.45313 291.484 4.5 291.383 4.59375 cv
291.227 4.59375 li
291.117 4.68799 li
290.945 4.71875 li
290.914 4.75 li
290.852 4.78076 li
290.742 4.89111 li
290.711 4.90576 li
290.602 5.06299 li
290.461 5.14111 li
290.43 5.24609 290.406 5.33594 290.398 5.40625 cv
290.406 5.52295 290.422 5.59375 290.445 5.625 cv
290.465 5.65576 290.516 5.69482 290.602 5.73389 cv
290.602 5.79688 li
290.758 5.89111 li
290.891 5.93408 290.992 5.98389 291.055 6.04688 cv
291.289 6.04688 li
291.445 6.17188 li
291.727 6.20313 li
291.836 6.28076 li
292.305 6.40576 li
292.367 6.54688 li
292.414 6.45313 li
292.516 6.45313 292.652 6.50781 292.82 6.60889 cv
293.039 6.64111 li
293.07 6.71875 li
293.258 6.71875 li
293.602 6.92188 li
293.633 7.02686 293.719 7.12109 293.867 7.20313 cv
293.992 7.28125 li
293.961 7.43799 li
294.012 7.51221 294.039 7.59375 294.039 7.68799 cv
294.039 7.71875 li
cp
f
gsave
108.813 0 mo
160.813 0 li
160.813 41.582 li
108.813 41.582 li
108.813 0 li
cp
clp
108 0 mo
161 0 li
161 42 li
108 42 li
108 0 li
cp
clp
.7 lw
119.469 31.582 mo
150.242 7.68799 li
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig6_pose_graph_edge.eps)
%%CreationDate: 2/11/2022 1:34 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!Q;=*O5VZKQ_.[JV*P[`KYK*/r"U`WcObhuG*[@%mhKlo>U>\)6USC'c3'S3-JH^%OBeC/oCX='+[em[K]iHG:BC<g1c(5;<fh
%N0sPBTICHEKE$_0rj]Kfc0Fq%Y>K1#gb7pBY/[PuoQH^00@n?*B$1,/?^[M^'C_l;at3D,3G=p8#CD0XJhF-mAUe>:.5-7DP#O*@
%T.NOYqrN??@\utd7*kfp"R^C?huJl.2gQP5Q'^E+KAPu\cN#j/k,)J/i10jDdJrPTFa>gtm[3uk[U+ABGf\*TZg9L>/K@dC)i[=>
%ZD#*89mX?QoQN,1]q5RV6)/*!r[\!1Rt?3bAtEt_9+hAA+pl"C8e;#%-kc4dd:`gaJ?QIY7,$%<cKN#PV@q],d0rOE1p^uArX0.)
%$j6ifrKhk2h_/[*FZ%p)hG`W@PU4l/H:0F%(F"[PU5p^Ur^VkGE\3`.AjYt%4KfQJ8=u7u,%(H#;<e*T_s&F,,h3@;C9Cd>Z_Tg#
%$A:`P$4tHMP!SRJ'aU5+&<"J&Ku$!,J=.,OjkrL6&/:0N$tlgL-FV(@-F6^2mq'"1A7d'+[_n=Y_Z#0Wif.@GO7N>63XgbXgX.O#
%"G"t,:Dht#hPURrRU;&[lQr'Z/c7C,3+`>]BsF7KDoFrf3ria)iJ)n)oUa[mK@pS5^A?lXI2D.u(45PVaK5-*nnPhOqSSmGXTu54
%71XTX#0cMV<#tme59)"3ib;>Tkmme'n@-cagRi=&3WQuU);<$C"lH%=_10Mp^IGr`d:9C/70)]'r9@((Z//l=KdZiLaRn%r2F`5K
%(B%7*0qfBbm)nZjn>6^e-:/N@)$12UAcmjB5!j*s-o;iMY7.,in"r@/dAtYqJBn-ClTG'k#ft$CbJAKZgF`Y[p_2Vq_;=QmAlW-A
%h.666WN!F7018.2%CfL!,VqOURstk[Ts543nFGHE4PO3oAeV&VREgOZn.jdfLfD)G`'m$]FX<!p<s#\F0E+[jGUCRoAjH-j/8NKg
%NPG>%i=q*7!Rk[n[*Dj.dlX/'JCZS8p9PbkcI[BQJYnL-1$ro;A(\);[1qR(HU'mT$Gb]L<=Mh!*RsVk^DA`R3kiYbqQCY1b7k%A
%qZ%hN^L-?A*%'QaIn?-bTM8o#lk*E77$t"D+&U"?VKO%FWIo]5i?1De%I"=UUS3Jcr?*MGK%c>06NQV]FrGfpnpgTIs*=[[I_`;)
%J.6"714=N^VU6-'$,@`),L@0+FN:Ta0_mt0i=@ar5RM=(qUDM;(I0"ilnE/Vj8G:uFbg+ds+6K!)go%:pjYd"NI^W18ZDc`P)21=
%1>CkXSfe@5,qJj9W;jb"#JfCreM(s5k&&:HIg7smVWZt]5e_f!cA%ECIHGJ962RYP%'2saf5[#Q5Kh"Q2"6%Ga34bb*=YuA)`:AH
%9`KSVb_<9/m=nQtIk^MPCIOY=AO%a(2>h+]2j=F.[Jb9VmJY^N[W/N2)Z[cj,&R3iJ$Be._\ZOBL+BL6\TV4r[aID?^F.QH]qUK_
%BsA`)l&d,EnP.j>M?+3!a?_/4$ki%<E#kOtBFG:`Dgk9T31hUp2GoEq@b)VPBL=;fa@uUuB8#<!6L7M.@KEq9G;)-!kA\2lXdB%h
%nb8*MBPcFYp(l/O?l^0KeGkAJ"$6'mld,U6V7[iKoe57lrspCNFtjs8mh+S*n3)/A]"cT/nW]V>VM:D/d.CZg]"(@U89]Ua0uhQ>
%P$u2:^#"SE2Dh/Cs!8naU-UF5[gr%bp"+#eRi31`fCE9'4Ku[Xla><R#4!;60.QU=a)2(u)WK^Gru+f;aiMJJcO=NpU\=/\-%LmM
%=7fuon+n8:A6kiadBboE*H@2S6Tg.37ZRh(a^u;F4_h,Y/I])[AK>Lip",:dAT,u;i6Go&U&/Q2H_Ft*aObKd#l*'nc3W[4=<t<I
%CpcVEZ(p,Cabo%Sj_!8lUAssdT:,<#8Mdup]$H=/d,07Wc%^`m4I%Tj<R@GIFIda]G?+l=NR6;A7<;aI0sb/bXg^+=FnD,cC+ZqS
%)`%CM.@2pR/`1b)JG6.`<dYiS:S,(:K),W[]'58F,10L\bPlZ;8&!f\GOfqU`JbU#@:!?%2D[!^0CI5,]jO6W9:&B;rGHJPpU<4&
%mLIAo_0DYfb\hdUN+ou_/S6Ne[,!J&\KLSOX>O_O=kGQ<XbUueKk\C.e$[oT[VNB/DAp;20=54<D]L]PqA[e8m;0=?TO=i&7&@Wc
%kl:.jiopN<m?mlf]BOsU55ZAlE&IcZnaQtrq`KoLiLW$\+@l[7Lh\.J"U6/%2;P\SL))%pDIZ.l<J?#j\,b$IP'A'jgZ!Y.D(PC3
%%/D,sTd_&ucLt=hp9tKBINhKDL>LA&T<tR(V?UnMoEV_AD"kD4@%bM+U`&Q_Rk"BeA.Q/XC[2GL<1Y3u*/GeT>8HZ&pV7^9_`nKd
%opTUf=0q9.YT!@g!u)%AM&,WF@=;6Sgqp1,3_M+Aq>]e,65t&SrKGfK4(Ce9f_'GNOWn>#152KS6^aqa$)dturum1hi$]-SAEQLV
%KO?tH"D%jr+sk.STKu1:c#b3S728a-NTgC!ki$hF3qB&_N7mJ>6B%Wn@qsm-6TTFc"[FH]ZN/s'R_rR^i&%d[K>K1?l%oka_Uj:c
%bQ_r6D0<Q0/nQ%F?XSEN5<uqVJ:&0_R4*t=T.ifMH2^4"/Z(fUN,g?!>oul7BXV9:`+5[I6PDgY^_?qH85/DE\/c1rN%-4lTBPZA
%:n:-'@H_rSP)t&hh=!6e,O0Y%2;QoQ_i6T:)=eDH5A!g=e)eGqZ/E[N!YYjTJ[^"cW,O/d-'sLVr7;Wj).fY=fX<Er$'B1a%BGut
%:mD!2TP!4NIn6J=P6J)C*:iJ_l\K:W@/:_5-EpEm(b6J2CN,:)#,B!%V#G#Er^'DT_"9a\Pj/?9jH56pNQ.&>P.#pL,TP0oKK,$+
%0beA]nVM-f,CG(]9)4,I;5@BNiTTe1"s_M$WR4bdef$-"F;@:S,^n2\f6Fs)"eJTQB;cu[^u=/W_F:LOAq*\C>qNmo_"F^\7i!P=
%iAX3W(UptCQr*4SFu'g$7J^J,)B^*(R1VS[n:+-GkOhUHStDhdOHI3U<6f4$F\JH,-K*Be$#s\*Ta(_4S;(;b*=lCL+c':"T<au9
%W_<!56/*mPGr/L6,Y>>>kb-k6%^f^[KoaL81h@pnNg-rRb&sgMYt.g-ei87bYdGO_=I9<W`AZ9pR'`Ck`RmWa8]F'GYYV!jeQOe;
%9X>J>:LI-eLm.&,Z:Jc'(b>7WX9[SkE++8!3g"XQTH-GV?S$;fD<J7M!"<s%P"r8&6\F?6C"PjDV^_-.(8Aoc5;\tm+7NUr0uN"c
%_=k,n%hV_;@6K-tFXBXjK+o[8?6ROP,Md/QmgQ']HZs8^CCE\MhN2nj"qumQY\nM?AB^5g7um\WN_G)?9fWE6:e$q/&BmbPn.&;)
%@3[o.Y22dV<MTY3NN4*0E:S/Wo89!1W/;'tNTfbGZGJsgPST_s\-TPj9[n)GSfJYGb+,p]b]_2/`]/$4-g#C7$c]d]TBe<7DCT%H
%*=Uh>%1"j,jN[ak]*NsN`TGCc$^<V%Nfj/LMClk60Mg<EJ+8F^V:gT]IVLVB69OdQ1F(M-:H0L(eRi$!#Rf"$)ucfmdd;"[)#gW\
%M:b;8eNk0?hIm.!GW[=P1.j63MuL]r3OjfI"5$;5F"b4Y\Ie>Q`^-p_9GTM*bG[RnDM'MV,9MJ:Yab$uo`ZjgP_:2r4/0bl:Wim+
%Ep!\S`RS`\AC_^52Gg6qJ@a*Ca'e_U\p.Z!F3nR.>#Qm\"3=%%!gru,>OV'$kr$JgOg6<cbu#LMX="3UM`ifA)"3=0ar7I,hU+Y[
%,-m1db]phL'SipKG!?O=WF'AJ[U?UpdTUf,BJPr@_a/(d\)%i_l!mq+.]o?i#]/V)%M-C15VK6]TIi\?Y:mJ0b07*_DPs_7O4L$@
%Cdmfc6ad'p'Bu1r:Y%(uU^d=0nOd;,W-_.](e,Rf63/m=VNZY0.LeD'M/D6#c)oW[h3l]*$<3ZV<p7NrV(Rd#bOoJG-#lb>Xk*->
%(8Lh*ED,!Z3lVI[agVIR$#2BTYD-4C_`$NP7=fB!oEY5k^KLr5QHFXgC<#Nc/Z$/!/M6k#\)B3Xd0&<B!cMX\qQr3<WjPWXktap`
%;ZP*t_(A,&,8;s9-5\<@GUkZ2j5%W7hc_WLeoJHnlFLB)OfGcdoJD9?&MYES-1)G$VZcpH9BXkn'V#qK%9S=H(>47C8L#$H]"``F
%EP#F?3s("%G-F4`*G0r]E?ATS_T56:&S.u^b':ZZ,NI]b`YLd9Phj--dTljW&_@&4Jk8SZ0?$YiE)a65`*(UaTeX_WlER8_f!s%d
%a)Q^jG"Z]G+*peZR5$jhgY[`EIO,pgC_WtloLI7E68caK%ZTVB%/X$.L6Z/s-N"3f9-8O-`PmRmN^h$;AcNc>Zpt'kq?bC>CpTe`
%Z@IcCXub37=S32&/e6T/f70&tU+GC5,'*o?%L?qNok)7!m\DSgL\8G^ARFED_JiTq_8MgOiFlS1`^b!rNGQ-F$0Gp2G0o!ZIJ*<O
%Q$BpI`VXNHKE&CFaeY<`EZ1FKbRXl`gMY3[qVLU^kd?Wc=_"G_@e(se+00eCSl3d](bXmKVoT;b#ZqCBS,:<%gr+=bhXrp.$28&$
%g-/CuJ0l#7Ql3Wg__*_o]i7md!8Y`AmZPJXf5$iqi2V_s!+@ig\;>psMn@cj=!mG)EMo/haqi4MDX'iKXSY=:E;c*u=kMR2RbX9T
%(aq__%S+Ruf#u*H\s`6"e?S$#@UH+Q]^V2DD7rSDc@*#PfScLZ5_J9#q!M/V\ae9U33u.-g9GX0]$!jdn"bU\hm^->=ntc<mVQkn
%+OK@i[QE`V_6;VN>^9:,B0;<KlZC$S?*Tr6pIBR\-Mh4r%J.KqM`j-2o\t`"NW7RpH$4\L;H_ai+\V9paju)e)BTIdF80P5b)\&O
%(,\\YqI*uZr>hAM+%D[;c+VB>\3BZO9&oU]%`"3a5>;"U9dnlp8u5TVgX:6='_d<JT6IV\fXDmue',$i]&k_F!'/7dCg2F1@2g59
%o+RnO/F2VS8LC(tllJ*V=bLQ`Fpsqa9e'@B=Pr];BFpJnk/nbhCGMDcG?p'VkT`P+XBu6NEchJ=PRKRSE*>FlDkWL4,ZQTUGD&'u
%K=45aK)Do<ja@$FD8GRbB-<WSI*kAZ:_SA6(g+o]oS4r"88u<VDtuo3IFathAt`'BWXLks9t6A.]UR(":[U2-Dg.'5ki]L7AlInJ
%J60tuGr20ok!A4JQe2JiITM<,kQ#oE1hUhl7.)&.]aoeQ6U/J11\]qPNI?l&q0q4ESI#a3?_Xrtp1q7.c.$do`p>YWq\=`R<b)9&
%Are8%HYE&CmuabR-I>Lh$b;n=??Z#Uo#8YmRn4bbG*7B1amX2Y5$EjM,E:UBA%Gi`4r/1!d3D:)T%<6@J1RqZG[F_MXo9t8Ugtn%
%:W8eb9=jr'gE-o#7U1lbr+*/P1CpJd<_tX][q#$uURMS_S[cuXL!Pu*nNl.r;9/bZEOoGDFgNZk0.Co2alOn&AY8kaG)thi7t[#j
%Ti+SY*_=4.$.gO'?*KA3]kJ\<I&@t9h#uIG.7HT#HB^&7D`<^C1fU+1>nq9DjB&Pq3bp!W)YjtUe.c"jb?HY[X!9]ok-s=En?nht
%^Jf(AH)QuD/I?Ah1%0)mU.WlIS^WX&J0s*")S(C&8Odch8nY<V?dod*=6tU\@.E;,Jgptr%bYJr.l_:%GTdlNVd.@'2lo1YLBbaU
%*#J1V?oShj<*MoeGf`k,NNhPmh]$4jB/a"+(9?"Ih41pW!K9O8!+;"7YFhf2XXF%/Y)fJ=nCcE1-KM1#3RR*4NGYL'kjNi?MSsnC
%?/d.k_!q-LoG:Dh]/GoJhml$\qNcTD)/c;<DU\:@a!1)\n0F*;'D2Dp,;rXg&;eWd^6o]K7FI3QqY.S-O-9b2(//h6`*f4Hhu19G
%RRd&e1:2HGSq%=!NIqFtDcaTa*<Z+#Zj&>IIdrP<Hp;/P\'ahl.T+?76'LaQO9_'*%/IX+V&T;D5^\J.6^\.M/5sbHG0<Vu^/06K
%`-jMT$AT`#<oRQ^OWkk6b<5Q4PT_*i;4@IVd(,'d?gT+`ekb8Na@QSa!R]h"qqRO!p.:SMnd#)56u2-Zgugd(((^jj;ZQ4QlepAj
%NbuWjhJd.]%`27++G=?pPJb2I07<:D+6C$#Y^M,:6Vp#q&/o_f#UJc&,L^%mER<(B&/t>SS4Z,Gj]F#>N]I.]4.;4Wm.6!<2$$mo
%hLg;AdPs)rIX=#m'/K*0&V27m]Bu#AdS5Y<KkR9gV*)N5:53R36o:.=aO:N=Q#$D^j@LYk#hr,PP@YZN4qRBq-e(UqA6R=sfO$a3
%m]GPGa;\f1<7jQj2r;doHs@l1*7>5.5\QDG`=<[rK;Su5C=lXNY)#BJ;0+Q.M'a<(pkV9c^lW^E>HR7B5EZY\&0?b;SRg?33+^O;
%A]Y0CZL%ZIPa2`e1>ukb*T4#VE;a`s!ui4QDI',*<,]*q_`1AXIISP*4\i:10dE,&DSRgNd$f^A*MFt_$OmCPKH7,\;ect,e'6J(
%WfXO6:#H88.9q?jdjq(S-^DRC;^YU"42"Im&bI1]i@P&U26^_6o@09&Fcr;<H`?p^rd2iR2U'/HmV;%T%W737hN5>O]eue0K=[M@
%GT?IZ9iro-5"2:qn](oNWb&M,ZdX@$4nnaHS&'lEl-\bl.T]>%]$(-m[u8b!PbN.@f-9o^/:%WKG@<(Qla&Q7J>:iPjG30#0,&A)
%*mD#;1P88ZG32Glab:/%LOE-t%;25[7]Mi"LKbP0It\AOFAZ/$=gRJq5W\s0o;m@9p!5J](c7n9/K]@)a*BDt\KD">9]sBFkJE^@
%!i()"i)n$'iZWO/U'D?7GaT1'&$Ip5c>75[A<;KqP"GlM^Wu@7r\j4bPs08MR?.kcE""KTW=NY(jlU?69P*4W8;7jMKtAgjqid^D
%Dm'!OmYd<^NX$gN2[/GG.GS*+Rd',',@Gl&9N`DOH_TYDYTuqt6;Cr0'JkZoj9,2^!0-1`*-RUMk)/aL)Q^93":Tbg_(YPc\?QI:
%;-,mL/;7;*nR3%g:=p90NCCtn5+hb9_tneH9"g[gS3,JIdXYZqJ51'6HCnEJdnb#noXNN5=l@I2#4.%A+>\Lf!CrtE%L<Fg#5s9o
%Akq0M`>8U%'=#r*6,9IGOEf3I9HfPuoEnF3L$k;V>0*o@E-Y>?d:J!m0DDmC,8)%u*\oCV</kp?QHrf;pRRfGbB'E^?#oq`gQ.sO
%oD4aYchE&1;;$11`GLlPA>o=c.DpUKe,YKDR=u?m9O@n,Vmh#++\ph5^S(as--">K)$=4$A4i9*5!tG"f<&12%j0VL2#c\N?8Mc!
%hH?<?f(/5C@sKI;S.9`CLor\p!4bTMTW[R66I0)3_Qir9M*Z?NH@'Yf`hooY$u!QB%q9`V<ZcuU8tOf?j8A%!m>u81q'=]o=NM1h
%`g/=o9&ChXLgi8g/(lSq.CGKsee>QPJ[`-1B4ot%#_a?_+2Fhrs(5gb%7C:P\1_HebkYi:-]?Zu"_nYp,N`Ve"WX)e0)aEG8*jL;
%4[+pIULhs"Z_6+Uh"c:@QRu?CjlBR6P?p.T^dd)8mXd1iqj-A8<N>jM$ZDR=5T;4aMZ>RbcKEg#=2*;"q#K6CQrCbfY$Fk4;h=gr
%$k?S#!+J@>:^9_c"5iuLC=sa*rIJ4$:5)ard!uJ<4`)*8IEj_[-iA6NhlRB7^g`-ffe[g4LG%RB*O&%@J1,f'YkA*Qheu48mU'mR
%jlPhR'5Y(iknduLP--`L"h8GfMI5>dS/a8n!Q-CS4(#/g;/no1UlLlD=e04SF[+<e]l"O1f%Wr;$qQ[e7'>@V#J7m69HI%<+S0&_
%1C'E^[D^,;NN!!1!)T`hD;O@_NH'@OkA/PiFAo=-h+g4@!Rj.cLN\paF:'h?VUm&<B/:4_O(*]n+fJW[f7!K5O(1!#b7h,Qh!%/.
%;fX>s:=:cY!bgS#l]4iD<\7tZGo3a-R`+Hn@ufPdZ0+]+Q?TOi8K]@4A@`@(Hkhu0V[^*3&VSC003PbL[ldAfoB&6d/nU`^Xa:q<
%E-i[cq#d#6^ND6ZWF*kcj?O;`5iFYH-6V#,;4%SA=K%:Scs>V>PfPF+6.%s[-F.DEkJiMMF`qB-%KcV><7@mYH*,"UBPns]<S,,_
%oP*Y:e(%S"0br#NE3l)#>Jct@4OH<Vd&D-^C\4,98&'KJGC"H`,AHe*Yr.(ad-[X\e#F&o:!,5C'nuYb'Y=meF^N-j-$^<t.re.&
%T$B:DiFj7bPJ,cHAIFb[.lFj9QE5dVqJ0!MVC(uaoc7117t(!9Eg*m%-e2stqh7FULNNjCAZI*lH_VsfaG/rQ:o4;_4QUOVq#\3.
%Ri3:tC]?u",`7MXV(3E9QCttfI?/T*g%#6ERGYjmrsRbITA*=\gtZDTPG*b[c<DB9;R,DW3G,gSJ!qNR@?or_DM300S#5+E6tQbt
%Tk"LH$f@3:Ie2Wt"#r_AeU=UMh/7<%5p;k>>i30qNpQ[UQITO8OD/#P5b60WOT?1Em6Kk=DL`2Jo]=(e#5EhhG_n#ko(MC]GZ-:\
%VAO)mQQ*+GY6*TNJKC@Ai9!kJO<*6U`F[!b2pc">_sf6nH53U;5;RlucDS3^nqI?l7l8.RDMP@gXT1:dYa7juciO)ud\<;-'4'fm
%ls6?H-u9RmST[LKaMctdYuLWm=36CCGiSPi<$JlXieru/Nkhi\%jN@)Fh`]pYCV'^k]qQ,,(ii[K3FtOFph8J;+XmtPuW8M>QN=q
%Y=!kI[WK%L;ulO:WMS52Z!@MBT`/Fh%>Gl?<Q$0VjRNE/g:T9^>-\e/kN56N!=3[l@L&3?F-S)Nqn`_KX`#CJlnH7\WjMT`)nX_K
%cjR,6<:$CrB`!oN3F$b=mgg7dJ/\:,/AeB%jCrQPU*7$&&U*T9kbuNairgTc'ou?WPoN2(Z.OHIr-XIP0NC<X%u>lJ\*l>=+ne?N
%dAPrpL)"V"&F'&&ZHKeZ^E_TcRdYrJ9CrZ[F.47T6=7OW0f+N2UgB3g+MXb!"hE+PnacAhGkXEGd6pm:$D)eGc?mrl6So^97f4k,
%WnL^.L0]j@]AsW-O,qlmFht,3)P@\H^SMR$JcdsYjj4q2$P9K&hs>DJqMc2J/%L(hMLlIu:,o78qhq3O4d]m>bSj,n[P$I;cs-93
%5[]<^WGm3I:Ig;s*Sa3['^Q@%<gJ,=DW>j*FpUWDGMoE`^Ir*D+piZ^Unsf,T8j=<'21b9nb`=60**;:9uP)!RZS!;[57!`^(C"*
%&a-qXa"J<I!+WZ=.&82?fc0hN8=tl/a>6;MJ6p)+i1W(:(b(<>FMjXNF#.g=,\RaMk(e:V0-0S-/^RH*ad<M#V\Pa/bX\F)lh.:n
%$/]Agg$-Pu!aRKQ.e2NejrPTX(1H*'rY`)l$N8_,.fT)J/CO$GMkJk?6Ql$Yk<KK;2sL/_pa-TprH;rABNoM<%t;=mf$$TT](/Dm
%[J+XH[tfaUJ>V#3ga!`B,i&:C=Xa+3bQBfGq--B(L)a,!Z:Y[,]QiFHg6V=jC:C@X<7m@$aU"Oe?eKC.Zq`kbI<46;L_8%eBJaPF
%W4oU(=a8#"Z2NNcJ[sHF`:tG/jLIA)(V[ZX;jbC06dCm.j_b:LADe+rTL57&)&`<6Dd`9GmHN//Z5)Gj"D!j&,-?[_D+NTnJ6gpc
%!uc?#J;AR*Mf1UNHV6;)_bH8@d<Y#T!X?DePCtq>V8(o<cIria1m*%>@"D9FYDb'\bW0=M@D^iGbbQKO15'j5K;1`5<j7e;W6\6N
%BDU_@NKkBYX,eR:mlK\u8l1[7]i]ffTKhH7\+L8REIIYTRmK<MT&mTOkpqiYSrQ/7n'GkCj+e:+Q,9FKn:G-d?g!1f7kjPqE6Q2"
%nr!l9m.)k($a9f+$9#]MfC*u\-SidHhY\FR"_M'7,i-[]SY=r]rr!l,T^BPl8rur(!Yjf<>W7;fr%@_$lW>lb'*'3M+6]Ao)@ZX=
%G+'=pEofa`9kFS@eB=bt@"6Bgi7ui=h.qrPOpHA)O:a;4UB^=BAj.W#8I=[+BM=X[.+6?F;r48tr.7%F5;A>@B4C]9pQ%DL\i84J
%htA]1/rJ!1K6^.H*TVeG]('gK<"Ht%Y6-Hs]"m!ZJDiJunNaki0sps#!5g0*k7>P5?\YkPK$g/?s5]&he`Ut*[FF!oLWL//om46\
%NkXX?Y+q1>kXgE@Q!d;CgJ'W)_]A+*Ij`3o95/9L%NTb*W'\r3;-kgIVuUGSQnFo9$Src<\O)?Ai<M^RO8/g,Zi(>[f[!6i@Sj3T
%i'BN.=6nh0=YK$pqQCW\K^M.7Ugi<"&]]U(N.lj(@#sXSYM"9%@)b1%6>aE'%CKqBp]2'/hD]`\&!nt8\L^faP%M(YdeMBfB"!BU
%WG**#n87L``+W(kqbos^p7sn&r<ZbqP[,;A%eFOkPNWE6Y3Qh-8m40]X/R@]1O:M=dSA+hF7$C:fTsj@2ZQmW4?('-NEq#kl8)VC
%j*]<&e)+tp%bR7LYRjOu2Q,Aq2K<HkVCd")Q0GJ$]eXI%J&2rX?^YlT!;YF"hnmEC?8-k8S(I;D73KF];IG!XpSJC%>,Lu87'fN-
%Tk;,8qQgnfUrO%W9`UUNkmA!JZs,m/6eX@a<VLpjUAm/77h1IdX?$!uSF(bbL#"8_Ei>L1"N+\QJ]Zf%hQ=gBqUsH,?d7QK-sgb9
%`tK,:*\t&2T$=CDF@#((O"sXc%S2D]k*pU<W><YkTcECekiR!%*3B"C`R^,9!GbgPSW>ScUb(We/=#Z66nUp-aBYRFd;<FY_-/7f
%$gE)/'asBt/g'W:bJ'$3";TET$1HYb*1d203"o!cmh9@arTm(<8j>LsU@?Xl#qGi;(ja%pO!(?`NlO0ucm1+==G&4,6[4lqUT+"?
%)C)1YnRHQ<b+du)qi01-jV@Cj3d77t3XJK3^XgWAU/TXDqI)k&-qs<_qT6Dc<ALOfju)i7pu-P,X$Zo+`3*Q$]-_]]kK-/W177Qq
%4&c65RCaq;\],/&_s3$<!/qmCVm:a[StW&K8Bm?f$t*$t&(]s"3d&,VIj.$deq<s^^#RRliPaF8jjapp)sCrnb\5W)OAdL1V"gnW
%JAhL^*psk)ll2Js6&!XW%2U\_3%Cg+!@&]Fa+'WQEHq\51)nPuQ>Z8$\/X'!Q<mPohQVnn.sRi+b<n3)]0T28Go>Zlp/WtOH,m\4
%q?&Gkr^aR^c'8]dLL'YVJWK<2Sij1Ql-9fh;1ZYYbV-VR&UpDiEW:H.QcY5^`HfR/^[&cHY,(QQEo#85;mXAK\he\\2RpYAFsZ;X
%ZfCjEC3EBci8+.[CNf)T%C>r2SMPVK-]7ELFmKB`d%#6k"LchR$1oi/&):7$PQ"7o*soW9QL?6X!sM35[m[2c_bpu!8_sp)m`k>j
%l7okE7S8LrDdiScB]YZ.G9ZcfkVNZkl+8,'9SZ[h)ZTJMK1#M`BRC4%0Y:QFZIoo]7*Mg-[fOMaJ^<n!GAe0P4(e)<fs/`Ei8>UM
%hu`=-r07:Gq+RQ7,bq4%+)shjdg;%LC]:X$-sP,_PI9uX[ZMbVD_6+JT>^sg]'\SRJQ0&d'Ap6ccUHoWn-'^]>t%YB05oSDe;N,m
%d>Vs77#\-*H-B@@RI^2)OhE8J1uF1SJZo@0ou9T5CR=k^9cGjh_It.4]C4[]F$h?bm=sJ5C04-[`PD5NN&>&CfNMK"P`Mn*gm:*,
%17%l`:r;LT%g*+QX<FXPp&5qq@7=i@i]u[t-tGYE7BDfl:ZQi`O4TW#&r#k[Ul+i2$?Yk*nl-HDTJIdL7AchBf#$l+Q#.#h]EZpl
%o4hLL335!,%:NhqE)Z(8>.uH&$93*gQVQoQo9F+A+BHN+6Nt1*47B4?)=+0l!7M"FLdeD=B-M4n_`D>>&[JNtof;KJreC,B,$'4`
%7(fpF1'KP:V0crG^+3\&3'+5;iq6FdX/40u(RrSZj&>jMP#9%6ZJG^/_0ZouSK:X12k)#B.o\bb+>.!Xh,`b(X!6-S9;JCFem"3g
%bKXi%F'aqZ*Xgc[gtGZo/O\qf(iH=^jHj\-,KEt:5C[ZT4!)"MXPoi(q^u?3S;%RK4[W2704AFnA]m88kmSeo=K;h@Ul#n[H1_)R
%grdMDI(4u%j`dnep!M[!'FOSH7BFc)X=Rh7F!F-/GR?=CeZe1l(=A*kA$(!Wbu)e)=2G;u9riWM<?5u#:A6Y]=J(C.c[A7dCYn`M
%MD/1d'qg["pYFZlWabq31b0FYXIgZqX8hQb_?r<Jo)(P<a)7L)MF?lUgHAQ<C\lmO;8`5uI-3"?KGAKqI+>roQM0aCXFujISip*a
%lbMtN/KS!CRJ4$iqj(Mb`/76KKK7'=rE01GFrt+ohV!Cjq0!*Q]jp,l-arHQ3NVhN;hjsWr*^HfX8i]pl&]JUXJcg.kDph*l8b)e
%cQ6EaA9W&$kOUoE(@/XsmhW/p$16IOVm__GP>M8E=S>TA(MVK,jS8meoc7KNh,s)+V%UT?@$Y4Y;jlnb@7>5NHh#75qm4#[cWR@D
%YEauE]`U%i9\2hm&Z+r"(4T!EQ=_VT)T^cm8t+JkRf0#C7euY+""^$SOB-_O!02;mWOue:NdRRiB,_h(lM!B7P4DQ8m@h1B^F(N(
%qgdDT1f5,RL<s.T7\N,6GV[$&e3;1leR?"kp9mIJZLaXR/S<[`\;<\uC0(0._b2gb:Nj.T6/pGmlW&D'0GAE]m*/tA_4f@.&Zo.+
%*W&mKio&PrU,DJrX1bVHDqECD5d\E5cbs$9T2kd$7_DsC?YXM/Lp-Na;t^tOg1QfJqAHnF56$QSh:K/Dm;7aEKmHU][lq6Z8p[%h
%6'VY&3uS!oSlFPVXCUJ%>>T\$+<OrA&*cP%Y0#ie2,j<uj<-NKO138MKABN`T%L`W&rkVrbVmKDZF0&7e$55bX*^<oHV:=`qc5<Q
%WSPF]#X&#5^C<.d;19?>Gu8AHj\!IXFmNtrj/d;s+cpT`NIB;uA_,UK<g"ct2E.#pQN*a:]]bUUDb)-/bWU68o'L8H6M!Cr5n7Sr
%4eM4qB1*o4nIDnYN:5-t5&4uEcb=<5YWI:L+bn_9\$;h,_ij\J?8mcQ;2G(?+tFW%1Y[9;%foNh:'cl^eMk)Z35AG!jFK*$X%>]<
%A"d^_2%T-a<M-(q!(>%@%8NHQ$1h=<CS9-Wa(d&^Hnqd"XU0f?68S5-Je]-Ie_*l.%I:J-etONA[09%/[oO(kZ]2N(!`m&=CSVYX
%:FgE+CN1MkYf2W4%5b3g)A+^1s!GFZ=:rlY?j.T!n1-\fYm*62X;cj<Q4S=5WFA<!Kdp-e=,]PKE&83GZoZdZo1N:..l:.'.1FQg
%4/Ji5gm<Ym[DpuAIe8P.pR$+c,]'ufEC1iNT+tl'*&Y/FPT-\o:^K_R8WlMIfE6?Sp6"H;6,0!WL*8'[GiFTr5=N.j8[n38#<t/;
%Tu"^32Yb/cG-)mG3Yo>#eo'*DK@&%bUi71TnNR.pDU:Ue9&F19)Mb"9oI'sXb5uFt,CI#a6;tkT)YiptLARn+cA=0(/>rdlJ)n]K
%f=&c>Cq)30SPJ<c\:<:0CR.5e8&,LFE=@@.ZP"29UsJh5FRB>g2#&`^b^6(ch(>=W8tXma2u=+U;A'?`@P09+pq6^FUOTcc,1g+?
%KJg(q6<8FS$rZkuNr)?SEsV.$-bVP,m?&@,Fe<fEAFWQ`[=jr3FUh8jO<%leFX4ZM3?mmWJJ*Sa>&:Cdo>T!ES%hARiYYji^PFUY
%knp)-2X->U!3!*AXbKnRS5:Cm5<&H2P"HndqEPC1g`$P(@Jg*f7!$;*jP`@](_!+e&h2nO7D,V24?Mu%C6,lr!)\gViQ-d@[0l!<
%J%"F]':7b%bEMUX'F&bW5#r(#Nh%,:I$2<kXP/;:s.O5bgZ6A:fI2ro=Be,P<^f60j18gBV9JPe4@*oKDq[QFUH+i")$_=U+`tT)
%bjNHj>F?WfiA<5m3Su,rdo0?'E&@4Te]2Zk^sK.bU^1hA<J@:W$<P[("\<M@(>s`>2)&dAeL1"q5`Z7+@TD!Hd,*U`N5-gM+J';A
%p-@YeJbn)5co./]$f7r..f>(f4raGaA.UF]WB?DqEbFa;:TWT-p!'>e2e&<MI]*[]qP%MkM)3?f9fakWhh,X27i6*>V_*TJC(6-&
%]iEN\MUnTQPS@c?-kilPns!l=_im24P5T0#aad6BR2i$N(+l=`e>u0D]7F8":WQrLh4c[nd0JcN$"fctXXEM"<D.[r1MB%A!0YX2
%26@=gSk"<,UQ2I#`#Kthf'g:Y"r]f-cn-P?m+`Qi9r_Un4,/[="))3!Du4QCdkUWX)<NnjJ%luNACBjYU2c;L5%_,orlVlX.b!gc
%as4IY/=OhRk`kdb;N`MZ/R):ZB:%QE:.\ZeiRYK4!<Ip3[p3ZnQJ`h.j"]u/6Y//'0UUk7N^$Ri,*9NOaQ@MV'<((O*,j1@NN.Xk
%@]Fa3?B*SNhXSt\N1N/Ym0VL`C\Od6aeC6b:et2JQMHTH?Y,e995ZW:T9Af%[RPO$$AHM4)[Y2-YZkQV*;&Hm%-0]=D]FBTr#rIa
%^:#Q`0p4qAU&:-d[YW-VeErQt:HPUS;'8Np3EUXibD64#&c@lQMZW8XmT_ZH&RM.e99(:1T(O5hgq[)m"B+Bq\*%q11\4PT^^.DJ
%$F;dQ"\;WuGMj&J5CZZnJdXm`VjHOT=/$L_K&Y.4oK%#t9B[[-l!@\u8J_3o6+Y]Kgc4+lPlEdVYo!hFBEfKC%iVV/@3?B4KKNd(
%P)UmR"Ut#*\O]<48DBOEQ0!Yu^=@U/*?5\M]!2hHFnD"[-P4-dJHp_&[6Aq.E\32>DRJMNP,Wc[9*Mue+H](L5hZ@%$^[g1Frk2!
%*=[b3.Yf:FB(gYS[Zd-4rqk:dZ]+lM-D[N8I5hb,a.m*[U9Kccf)7+u*B'-da_H.l&a;_jHYPu;%9U`A8#]fWES]EbhDrkiGF"p]
%O)fqf0T;!tHgJ^&<J9"d`6fD>dS8Xf;1N`Aj+.Cs5nj=9a>>"*';)5)UAS!7>Y$!:k0q^N#Rt_:.O[M#5]*o;S%@NZ(-JoVogb"D
%55"D4]5ciu#!T2!D2I^N):<sQi@P=0Lsg%A)Zrr@!)7eT)O&NenW;pgn_q\PlnTt=4,*N]S4@]lH&!C@Ea<3\\7K^s+HM*AE!\5P
%\e%1!StT0gU@B#(_f=m`[[UoJ:LM$D5a-J*-`\?A1!-S\_4<nmC6!0\,<K%UPXFTR.nM\Xg&rEOkm!`u%%)6>['??8?F4(cQ>UAR
%JAHMqIBOsQ!%8$8`[+b-]*AM4*@9N@$n)t>p7Eo?i4cqs&lRXATgG=!F9*6k-e_DLI-A'P8YY)_T;q@@*;6f+Np!6k8=78i\[;'p
%\/e-8O&%T;UeqV&jmbtJ3^lehc5:e<A24R)FCi;#ZKaof6&Vl$&ga]R4\soJ#12ugXr-KS'=ocj#o-&F8!F(oc:6RQ2IL-lR?Jsk
%W='YN5cTRR.MS<E'EF\n<P_!6ghuM=HsK!,F..d+'\2l4TUckZ(6p*c+LV;V>]e*\A)C0=i:H1-hQ0Z.I_1:+s/DRp+e%\Noco!a
%C&KP28%$DiKQa*_O3]=j$!p$%odrt+;/60Yq:^WV^3D\#3=0gu4gHHW[aPILWp3)kjesG@8;lYUrMZD0@s4*m/_?%<qiOX.8to`0
%o]0L0`!(6\Zc(?'<I#:bX1PHhRV6uh=/O[e*q1IN1kHJ9#S=A<f=>Y:cm%'O5A3Vp.FCK9ZRO_LeT@4pKXQilT1[kB\5V&2N-VI:
%m&BXa@gd"P;h(>e\T(TGh=8S9PUm]i:`NZhNU(8W.6KHtau"h=3&q:#mAW4"IFKI)`b`XtYE&3b1`HgS$>Ri1;;4;HRLUtm&PSlR
%*R!h)G)&3-&SL;;$HsBAVR#On>GY##$k:K"](q\k:[6><q'+k^7M[_qQcBd]Dc>jKE]#cdW,=7kSJE$DIP5=SmIQ%qFfJYZ->Rm+
%b6QC!VOYu/=j)#C'ePtVcA-%G*S0deiPue*;pM:HbBG7u/tQ.iLLF2]jhhascRS,,Y3!:49,Go'kL6TqP8[81Pk/V@nm14NMs$>r
%C"Mo]8P9jq0B^fejl=kEq;m"X[=!e(02^#m?-C9Jk.#FqB`bY2!M0ie&@V*#$pO>FY[7K\1(k]6h9sI]Ip-VlmT`p^:;.*TEoQIV
%:21VEk6-TV[\NEF20K<kEmfKf$)HSHgCDAR%TD%+:75-GTOu?=i_H0O1qbFnPn>':X;EAF1H`O,5h?m,mqET@Z@0U\dknY4([0<2
%dmdq:+'ZL(K\5P+K?_[O3.gR"GM;j=SE"$#`?]rY#+rha6K:-h]EJN6BpB-&3Lr[Lm-`O(&uE)</A!u)dX4$MSCaDQV,qhQ4MO9i
%F9:/EUmR\5V'(LN=t!u._(.O=ehXQ57@:9#$8IO^Y5u&_%AjuFHgP$`(B)?O/:'I@cirfob+f#T0Pj<p"c+H:'pV%R1tDql@(.te
%;M9_Fb>LgTW0("[Fa/2%TmF)e:=$p>VP^T05H<X1US^jsO=A`;^l0ls`hcud8#mEaaN\P7bkn,8k'aWi7&4tfn;=7qeB>K`?;mei
%P^\<fj<%5t.#WE:E<MbATajep_T-?1=AQN)^'0#Y0_LJ]3!PiJhT%'5e#E@-P%ai9TLn1_lsZ<F,V$5*9;d0XOI9=9LPch(QGd?Q
%XE76*DQ!P#F/.n/U305rb3DPiaWFL)\M`:Umd>4T:IMfu"G#r4,8do1_iOjhD@)#<>\#Ii0\pJSd4<mKR3gXu/KJZ/BK0b,AUfU'
%<[Iul.:P7JTc-q_/(cr1G:N:p*)]$[Ur+``W<9"t6=A+onk.`Am:<+_odd,l957n80JlV'7g1jl\2gKdX/@1meB>--P*8YLdsfH>
%CL:?<JeZQXQ/QkdPi@@9g/%OS=HGuURrfGPnA0\EBoiktC\/m#\e5K5<UA:6d2S'/Td5Q>E0XJrk"7UQbZM?7Mr)P2-u%K3DC:M%
%^p9n[U,Npe/K`8uhY=9ap1ksM:EjT`H5-t27rQo;!m?A*UGlS"!P:hDM",dNK@-/=X`L.34l!Tq)d!O3a+BDNjs</-Lu*+:7^lDp
%4aLV:3_6Jk+G#P&&CO7bnAu+'/&'G)V_ltd+oS@.F)c=rKk0O=B-L>=LVo''s8?`c5V]<jA'Z48/7$d7@RGch)!+X0:K(lT7t\np
%H=^nH)+#8-4L)h#?fJB*VbW)@Oc!2a(!IG&C;f@qUn(lr;@Au:(g:c&bL-EB^pM3BAAL'ENkc=KoX?GJY0<)TCOC-YV(;/Ee#k?)
%RA\5BQ`82=UOrfjH,g$8Y08sO)>9TC4PY\2MXrH+R<Rj/)GQ/QW\R@#eVZ:P02S'\KjX&>YT>GsRE&mqbDYsE?(%TG2j^\ke+)#=
%p4\C+od'tFTutj+?T4L$#saUWX\JttQN.qH#q5jfhCu1uV.^e*$(%i^YV?]RK083.2N&.iWJdn5*Q=BT!d+,J!!iq@(ier"mID6^
%@]aslZ!uk/TbM9MV'hi)opGd'C=A9f*AjuA4(fRW/&XKh2SCnQN2K"sIcW*$J4rm9Ksppu/o]>pe[%m$&kB94lU")^,=$Qfi>?QS
%&YLB#UU"'=?"?+,<0\[LZS?.g,A;_)%Yf)I@Q(NV#r'5KKI-E[BX\pN,HZTuX.IXRP_O)m/WtOoBT_Z9Ko0D*IkOVD93OHE.?Xjb
%/lO#'!M*RC$_^h$8/@N=koY"!cQ,t:,6J<Bj!\"sq+K.X*[iNKf40k%3t0+8)lt[\ls(^1U-+991Qj76*Mu^&*h+*K#QFioH._]K
%lLOq:U:es'c_HBge:[K3/^!+:/9K#lcS!AP679Zo[<7Bn%rSUOPu4W&Moc-4eQ:1h$iSQCYCtZj'IHt3E:V+@_Jr!@<STo%3q*P>
%[SsR1:9eUrnfsClG:'Il9BBSBSUipHXcnO6@.tfbGbnH!X'^!$l]^ZtF"(>OC"M)'Y+deG6"c9-+N,pt\(@h$B(tqq!H40WQ,W7P
%oq'k4(amSr>l>+<]\\/TY;a_OAi^'EeR6k-g%3i('#+'%bUKI%oc3EW+.n^&TuU2eiP)4cm&oIqE(Wb1i3p)[21ENG[-Z(%\?=.X
%Mu<^;:T^q7Y"'3W\qsYqCWMBJZ`_f9rOQ0DGNPPZ<d5:gJCUiB:SE(8>f-E8ENS"hWfCMQ?(hLAkIshGp'XWdWAj!0XV@n4<H^;E
%A6?%2pCr(Ae;O9Ck.]D3%;T;QCQXEEX\O.Yj5e%VMUhW=%DAc=fWA<CB.9'`AQ&ugXU!fT^\FP=rQ%gIWg/l]&?@[r<:A$85Vi5n
%*'\9[N`n8:`HW<9Lr&7l]1g7[`LQVmHOl+jg?he0T.c8CSlAs:`STje;2nL'#?]LEoL^R(7BN0/V-[E&HUZ3<rg@5;n@\)[Uj^t?
%'DsM+]q3[E)%G?NCmK."1U-rM7o')m'hRhd`nbP'C\8*hm>e\Z:N_=lqKLo_?*n'OKNCdD_4=gGCZpcnUP.70Ic?0+6]<OH:ICqp
%j.ttLnqg-#`<uL,]T6Q42?jNcPe7.\Yh`H9I7dLfW]'M6KmcQj6nU`Pahg6<W]me-/mHu+`'2&pg>r\=eAL)Y/aQD.:Ve=KV$d*A
%1EeDMfVc+&UU#f):19c:?J2>BNK'3%$i<nHEA(VMVbs^>ahg6:B69\IfSASc$WVVtgT+s%p*hF<2?J$K_EOe[iEP1U.dU*6lB>e$
%?)"Q!Bb#i>F1K.O,uFMOnHB<tPcFSE.TXhGloUVK`te=4&a_o=I7dLf`tHW^@@pFthj$g1f,99j8iGq!]^#Cl_EK:!K.6%X(%s(n
%[]mL/719!g!,cpbg_1(mPic.tA*)dg5(&[kSJa#-F(/RMMXRN:OV8-"0QIFWk*:6Yfr9[R8jg2,:/4]n=(/S`oF]c(J_9[hI)qo.
%[6(`&ebDo;P`_#_]2>J-?g5]BRE9H*>Q"+eNXO\&QW1K3:XS5W7Om4UJ2()9K95Abjlr)r)rh%A!jpgT]hW(d2cWqoapJ&N=75>/
%eZ7?#_itbc/L(YX:nMtce>TV!+B@V2@AE*Cq6-Q7T@@FuOLn2AM,!Q.R>UG^]Dq?<i]/a;XI<d3csAYUq&dpsg/DtajaV*26gt"=
%K/J(D3$S:%bPs7X:#l4;j/#X'QiA'FKKSeq5NO#`r;OGUl_P(Es1:<On6G5W^Cr@nJ==9VZ0,mb<0M>[MWZTnj0<mBbaIO*DIP83
%<td`3kBD^gQb#&&8f<Z0Ap;.L5Ppb>8(C;nK*3%IC\uU;6O]=%Tc<lN''P9#WBog&NA7g*I:JH='8QP5SVBRa'$VfoerJH<Jl-s6
%ojq;UnXuo`m9'3>WE.(b\4in;3h,&T:'3=3P%A4#&G#rb.0tgLPZ;/nK7K!0Ja/)%&C=!AnGipcF/A3bkXp1ARee1a7P:m2=8W!D
%p4I,;+'O.Qb'3s@%rLNZA-KS@+c.1(EuG[-QnhU:An-OnBjbgtB2`Se$<V;'.GHHJ3+)'$:IDt8lp3hXM1m[f(VSVool?B\^<0%r
%:6bm_ohi`BMAq9;U-$E8&><d8NueDe!ll.^J53`8>O(*25T8<Ha/-b,Kq_C1ER&/NYfRC,,C$(^6?,Were,Xu'Ji\WX8bq"Nu4f'
%hY"!pn"2mErS2c"GZ.o@lG"Q:IoPk744_A6n_QJ6[3iT`n!nA<`,(IGXA9=#s5#tCJ69/3pS<09$m4A5r;8^i^'q:IYkiH:hCr:'
%93N$897`dtX7dhka5&DP*)(o?V[_.(kS@XuV>$]SE%2tt_(V@</d1CNC0q*teXkr*qn?d9D3mTCo9eh?K<-(\[g5SW)gO$c@Fbo>
%,C@tlBSp4PV*#\NHB%TBA0Fqlm8^-d2<A!kX_PCtHF/an1rBeeJ2T9HP:61n<L,"_2E.j&%2;^JOc+]4hm:@:qtUK2Vi$XpftA:A
%PI_O)4T#2jV--H6XMm/,2f@_j^uJ'-56hSX7bC<%dTtWAl>Eq7oi++P-sXm>][s)U46KSF6_[lQ1<dR8gr`XQNA>8%AA)CRHM#A<
%"bQ-5nV^:FGGEMJI2BL('D+lfPS(fU\)K/<#+nqR#e<O*C`.u]_:g<?@.5>nJYe)qpeT'!)L<K5M.%1M)1)7Hkd<*m[ka[t^Eb[W
%ba,nM7')3<V,u,KW*!$01,!(H<NXJTp>93LH9d955u$E!n[ZT=knJ"U'WT^?[Ajdf8==rP.mt@A2cR'=Oq57")V1$cN>t3iNBChl
%fPmZEEa.jo<iaH&P`if594=p-aufo0%sTDU*et@'N`*hg'V`OP$J(=3]"XuO8lu*43*_I67n[80:rca]J%&C^g1YhXM?UTP-%TAS
%X;.3S<bD5t1b2u<B\5Yie<d'^R9DYoj%$koa`(eJ7nY)o])1S],&C5IL9//GI(QBd1-"C*O&MRQ7-??X1In\q$iBK;!`R`-l8hSb
%Hj6l43JUmK8*M7BO_YbRcl"@T2SJagOYgt;PF07Ff=DjeQI1B3_n@g^+omg.cosh<W"GP`"bEik/uC?CGP]DFh>i0S>\]JfR)CSi
%ni3PI"*RppS6@9'Q0\og6X4bE%[_Rn&0.B],.u;)5[]dkY8cL*J3)q8S=O8n>O"`N*4p+Jl=mV1G7O4`V%1#PiL]C)BUA3Fo%N9n
%)NENqgq.W:@8`i]5?lhj2F]XAo9\,Wl?KBHLo9>fE<mkl8*$$,Q.j&d`_$l'#!oe]WbP,"c4Qkll4K$-Xm(*gH-I<_A+;Bi.LLI2
%3AdCX[7>(9f^oOfoV;_@Mil+8:o3'Y4CN9r0V.CJK=V&r1_0NJK/m"LiP2W'bWN1nhl@u_8ZEUV=7!1P\oi23Uf5YAL'lY=%EVIE
%gS?p*TImI9WKXB(._Q$I7kohY2-+h!f@d,F`F-J\QP`O(;:8t?'!XH]m7Jk"04;;u<;4t9K/loU)Oa/5h,5E6*5NWI!bXet/YTij
%mTVaWg<kk_75Wh8U8*NfWUise1t<VnPDH)5)0\or/DVj@Yp@_qfne8;S5>@s?(U?SLfXr(IiM=K..)\64lVan53X:b&rkHenqo]_
%7oFtZgdQifHYZ-9,cZ[6K6fp3L]*$l7"&(1QMkc%8YQP`&*aa<#1Tn(M2'eQq=^h184QZ4l-prXHd^GGj`-i5=WoC$rkZbbEB!0U
%[deC)($^Jp/p(6iW!N%W`u13Yb%99kFBKb';Ea\^5bjY\$=UPrp9I$'Bs:hAlt(lqk5@Mh=eTm2!HsB%]QP"BeSKI%::7rW3u$-$
%cFr_/B3"'J%ZelC;n_\iPZ+\Z\F<=;E0iQ79"aZ_X;iYK(ER<-!+&sh<%E(Li<;ua132?IZ$Oa&00BpTU_NGt@d'".4A9MHG)/."
%k?W=WA3nnJ(EU`P6@.DF5m#90(ER<%mRm)"cQb&)e@t<H,M%.qKnnAL@SQM'>^33:%""BM&%+%oj(-m>(ER<EA&2-2QTuR<iM!^B
%PM9e!?[*tjIlb+,:sm$<jhaCP]IYW$qRd1H%@!#\ike(MgC=C8F7+a;8)@0hl@k!k..Z+&%g0`t??iE?Y/[0Gb_:i+q_=U749*/b
%c0?-(=8c%IC?i8KiZ>p=(ER>[o,q8q&f2U(Vg,73DNDL#:otQDhhjD"j8qTq&L.o;TMoksCL)10KG6E/_F&n1'Q6&qLtS;EiLr/o
%/(JtRcS)iEDEBtaPiPip6^R0u)b]QUE8dL6%dfO#^4<F/:V6*mqrA@:nMp-W6_X!BZ"!S;03U,;!d/bHT`LR)M$jj%D`^)=<9Gkr
%]KeKcOUD\Z\@<?bn;rF"lu=,G[::jPe@hSQ6eIoJiLs;Ga6,,=H_,`GTd#[,[iM%fe)$$%5PVtU=Vi,o)a@Hu_g*%>M?I!1%6c[2
%W-[F]n[5kS?$N:R71dGl'e;dZG^+O(QbnH3Vj?UTE>=XL?[*u%NsE-7Z=kk0i?;Q.VgR5B-e$AUn5)3'MD]9)E8dM!GL$ri@YIn+
%[iHM%l]`#VIc98M^?8?0*id=Lp9qk3V'or`D`bUp*Nah^KnnBk*HELIq%k)e([3D"kn>[3e@t<HcV?9&UoSdq+Wc;!lb^P</=R;*
%4B.kGZiMH.qUU7qF5`gd][$+%4Ohps.&8=o(\I.BFp$(?FTnZi%amn$E%l4`&EDB0:EC)PcSX^rG.t_uLls>9_745)$[I:0Wb"U"
%+PEZ8X`,JWq?3K%X)D-P3KaG?ZK.f&SRn1!I?sHk&eA\3o%'IM8P9ONJQ5u%=0pIjbVu/s>;M3VR;Ld.eEjmG8\=!(hl&%;YBO6r
%fmHNTo05D_s5SqJKu]N:<!7pJX?mV.U)p%,IdRf5j`j*k(\Er*4Sba?ZTN"8YM8</BG%i[dH]TUM)S5R:;"2G*Q6RF;C/p1p6b'o
%rB'#nhmO-S:\GTZ@IcToqmh_CHZIX<BUF3$@c,nV\'RmKmpNQ&bqg<(WhnnB37[kOT9u1Y2so=A,eh@Te/H;]gZeXU@YsrQmFK8G
%VAtEK<X1kV>f+T!-(=Sr:#Pgd9a`G%"),pC6F1r)>gjqe\@,EP-f!LMP1T(:(:[DhSkLM^?'*1aYSbR)k_4frM,o"\"TV!b^Vk>j
%lX6)mO%UJ\_,pf"[O^=GV2.J#0gcYp_Zuo<I9pfnh9Z-;e!`:Maksbs0(Sp+p^01U'jDjW6KDA0*kMB5n5X23bQsCb,KWr?htEl`
%V8WWdC*V+A@-`;\c&T_`_!LUE>-JDpB>2Y[HtKi4Q%I='bcVc*1TUb/L+hu>T!WuXG!EB-B'6?4N4&[)iE2S_?^,Rs+aQjDZXb&K
%aj0`H&e;%1MHA"1R\3!=HA[5[N=G-D9Tn=8lPI,3KPtbuU<ieidH-B2ls:e1'1teWpZmTXJhK_+(?*p>lXJI?ai-E"ffeh#&,0]_
%^qg$A@$_t\J"qZM==2J>F_.%kI!b_lnmE9qqO%aR`#!(qr/3Xm#(+t:cJJ*[Z6&N>Q$Ikmk?jI%iX9.X:"&rt.Oi$oJk<RW&AI.p
%'0Ut]i+!aR1$]V0j/@lI0;,l1$$=q"$NRInW3>U7*k\G8kYM6WWu:h<90!.U4_-Vu(8qu'Ya#lhi,f/0(+9tD5dj];5WDc[r77l3
%(m/td>n$^[7<"ga"SldSIc"(6mK_W-!WB,,.t$Xa(q`MYf;X"6U4)WH^;9/khE<l+5B.X3XDG(o6pC*ma\PsK(>CLPGK[V.]Jco\
%H277V5qHs]OM$B<?$&1s?D<Qk+_@F<\ant0bkmu>BPioFj!Nm1\Sq0FH`:8I*/gDRA$Sio+:PrE1YJGdJQ-Xl\qX;EcW;4/rI[!o
%%Ou#pR[_+ua]cWs6'k25bL@I.lMLBaUB#n^c0r<*5^JM]#Cj11gpckcK)a@9H#<U=C*b;]chYYC^$D-c]gC'8nOS'mrSDLgR4gou
%`:u,#Ij@d5*TQKC<2aCE&ShLWlQcl8"]E;*OLQN>fg",6+WoYfI(Qgg^cLOYB%J?M,+5`h?[\+;258$45\J]b#^8K6=a/e;VSQQ=
%i,g7)iKhOT<;:pRM'>CS^[5mU`'_oe"S;:$EogNm;YmXm=EQG]B4t7RZMZOn-k"k[m//@"Tiu0J$^pTO6GBkPNotUJ-Ud\`F=VD=
%#hJmMfeH\Vc(<J/-PWXZV5"cY*=q%5LR!6pnYGPcm;^DjOIodAr\'L\*<qTc!9n(hJj4TDSj?"-Qu;d/7Al%WSa\75WT`]M]b%]5
%ZDGcPB_J,kksbmf!RET"p<D;Q0,shX\RR7&8->9GIo)".qsRb8O,#7dhn9(J@HKi)U87jc/Do\^2j3(F_M"\0oXU.D<[mo/:QHbF
%[R(PA_'9@t4HaY?_GVY;RGSRCTLfm2HZf`@FKj<a/.2Nqb!(G:^Tlc4#uTWsrF?\0<Il]H$7#a>MNFMl=Lt\'U%dQ2"hn.>6I`Hc
%]8^J1_b?Lc8Mp2PXM+L&3;-@!MPa%?&Bn,Zs%R#Zhp9kdoH\UlcGag)g0N"=Aa"GTga$gS>H1PV>(ap`oX[6/IQ^e+nbiS-r8%G&
%!peWEj@o`TAHE<&J+/$X)G[H%%Gotp-'I`n3Yfj<I`D<=>VFpWG!GSpg5J`(VL@]6GraUpEXOY?R1Or)N&U46ceKZOQpJSt]b56k
%jq&VD[;PT=g&!V^CqVQC3m,[qNP0TUr[lYNq0q5`c+f;j;mb<[R`M(+GW4rl/2T&.P/HLka*`^>NQQO[M75fipI1t=&+dC+JCuoh
%39I0YQ/(8cAW@s<:b^)uQefQB4--,_F.pQ'b--ma<iH1Qe$I9RDLW6q"#RUM#,q"NakIJ+`uhL+0NUD=/DeY#c(+h.BYm\IVF-XY
%;#QQI[^15]V2S.6[u-oDY2-X]ki?t@s&o+3N8_;H^:?mJB8'P:eZuT4;sP(F.J2CACUuPu;udL3f=CFp[Z2-bf)0+&&Ykgq%P5rY
%M`B=DEIjluDNs&Z%7YF%A:&rV+"B4NhCFTb`1]P,@s%?UYT#iKeEE0PmS>Y$S.Gs6,AW']CT:iD-;tQacRt@7pPTb/;]?J0Cu7IS
%90k?9,\aEDa]#$81`mUHo1V*oNPAOqal9&FrWGqZ#_48`gMWm%O:p=,]O`a+I+B`/>kVf%S4to2RG1c73H*QY7?[^S^u2L_8'XDp
%l&YXV3QG;]H=Ktr0OVB72-Ng)e<54H3V,kAg#2h*At"^@X?;W!Cs=-2G,CK_Yi['sF/?MM[=/7VM44Bfe>uSnGuM_=>!'ol;5?(Y
%orV$X@g7>%DQLQ,2"5QU%E!>r9C,>I40[]ERZg/K$FKJU]iq,J>mNK:;)fKPae:N^11iIFG\6tt3&?fPo9jM^0<bKu^dmn2_nZ7U
%K8m-e->p.;ios(+639'ZB0AVuRm<L`L"U;/$"_n+A5=]mV"([;,95;IK%T3dR;+>H<QG>rhs"bNa.=f2KH@pffIa)@IDIE:P(1GB
%n4dh%YT+VEgI1-*2ibI<Vco.*AM=WhF8e7#SLU%/-ojk2A)+b%:W5p8Hd5UgF5"f_lebBZI(("2[;6sdR:UBF;2'TNB:+nfV)shA
%`q6fMUIp*qm+1pQ1cIJ\1Y(2V#*b!W4V,;\lHm&SLf'k*)V0-Qm7&'KCbP+YS"8BS7W@5N,3_mIUQ4>ZUi5="3)Rk5`!V_KG%u5Z
%Y;in)+sB(-)0PGDb7qgOmTc<78d$Q.GC'\]RmiuXG5"H:n-NNHs)-]GD&V#a,n;e)ea3&P8%<MKDrbQWGQ"H3c)IE;aBmFs^V!?X
%:u@e$3oBt_cVplOh`&>XLI^PKTl&ELs&jbkXK#cI!PL4'%N#J@eoa_LE5Q<Q>VL+!7=7h,l?H&c6d`[0`jZm;1p.(6#fE7^d.rZK
%-0+8Ab=]@e+:B0qc;*GB/edgJYaI5qaKdg8SXm:3\2:]g$5P4]G)f..@)+b")-LT"NZ+QNC7UnTFI^g=X>>Ke%.<MjI`3F](`h\D
%?dY4nN0g4.Djemlg:\Y-l/Bg,+a<A^5,@$#QnA&=fR9ShU$q0o\@IIZRBJn6IS[Br3U:@NceU\Sr^-3?g_#0mclA:i$dT+pW`j`L
%c(tO88qnDZUb<_80H<bHEcX^U"O]phM>PVGd`B;f]X:C%1mE`TVt9fg:(H`'!Al0Y0@,U4T"JWRBPX4O:HL"i-_Q2#QiHF=j"@Kp
%Vt#g;DH0t)BfqA;,G&M^rp[eW=V^p=43Eme>40%dQEPP]7dmY3n/#q\Z2_DFFN!+e[0sY7fp!(,0`]Nt27hf8ld!guoC]"s8C!o9
%6LJ54cT8L*jfqCX7k4O\Tf6=<$gC+[a-[g"IK;^:_Ua*1\%'op5&ts#ce7[<RJFao)b^i(S`M^'bN$5ea&/];Q"fu:"tXRK[J-;`
%I==QS+.dm;og80I+.I[8o`36$4SqWb':grVB^1;1Y((9]O4bsEA+n="ZbkjsS:*6Q-p[]kcFu$n<cdt;_d=<q4&!r:,rD)Pc4S;R
%)2!-m1DHkhiTD#9_-W;S$lmdK@0^DcY#f%1dSlOm^(%4Q(bYI)P"f/6]rICZQ6I)p6NdCskH0)sQbdWPYOD(WJP+Uj*PXQ<oZUc9
%hA:GbG4!5g%k$43.,9UY:nEXmk``hr[qf[Y`lsGX<?N%[9>Sncp>nO!*rg*TK*7cKc:o(d?FH"/4TfcXntKdDJGS!n@(+nSQHp'-
%mGo<&)Blcg8\![A9B6O`HrtfKRIh9J`CFBTn.iOZ-TH7GhOK#\$7'&&47)\`?_FHN,'ZCGq:i=:k@SWJF8O45mDgfn4<8;6_TM>O
%]Aeb#B:PYVmM/7!N8r=)hqV0,nlgKKdJ@=U]n6(O6?a1hl.Ltu=X)q8%5sTjdbtk;_u?D\d%N%fK1hTcWUkc4%sT;:8;mi-pJI8)
%K%D6n[L4n&FDtP23j@GNci2q)MEUPF&qRsC?!d`]Yg]=B#QJpgmUNNu_ppb;"DU^N?j85?j:b\/D-m,1/01*Ok<l%tI;iKl<+,ud
%*@'W>_Yc"G-D&[C@5tW&kQ>ep+k8AVi#JH!/-$TjQ/Q\SgBip_H(G/VCLA8u'N_5Z<=suSgjp"Ld<QXGO[npgoEYq7\/iVnF"%*e
%$ik'1*s^g-_T(tDJRNXig`@aA/C>`5JbMMA_eWXLr2CLESHI6RYKDKZmW2OS9rJ-O?!MdpU]G51Y&r7#EDnuYOB#Ou>>+K@/&C=g
%MX@QJrcjF;L2TXTgW?uoL"!EKjZ>a.aZ7VDa='Q_]2+P^OMbs\mJBZ?&rb:e`45tI(I3^8bt">R$'s%fIf3hZ$J[dU>q?C2)>$Q_
%60SXt?JfE.K6!U=$'/%WT/%XUf)T"T1g2\%))6E$KU;ai3+#6UV"@H^.%pL4#KJ/=V7)%1GitA-9,F&kZ1gB0otI=sU$#=^5C*$T
%/pU8E)Ic@CKe"kQ\BLG5oh?]C55B(I_,VCRknR8,f:I>f?>8IiKib32$TKP5<.O.#Y)WJ\e\Y?cnTBTE(Hh[!oJkboIf`P,[0D-#
%>^U4@.r5Tj4RA\I>8l$=g&0HY`&Cb[eP/d53nd**X/)4eI1%]upl"L`!52c#mEpp.HR22!7pc,4jDHN]+KuZRlgg9in]Y%lP/W<T
%00DV<H`R@NlQ$?$4SXh/%'n*`O0<,A-;ZOL/;5R8?_5r<%6<Y/#f'ePCm2\ijOVS67rVe;=W\VGA&AZ70U.9A?3oUlOMas2rQ2kr
%^425Ld:K66&kZ9ZRPW(uMN'<a28/c#r1\1pG=N\0<1IW-MnZk9jf#M`"3HQ/!`49E;#'O45sPPoY4>`)$.is_#pip\cfsrNaNhdj
%*:F=m?\nPEiK_C>,"#4frFjL*pC6-l.Ta36K&qu'BI`a_-<X*i%BDe_fA`(TIdKA2Cb8-5dI1@\#LH@oC'*]Qhh!D<hKoT]I.tK>
%aOX=/;'FT<Hi#i/r7fU7q!/qRX8S'>IY8L<<56P7Aq5m'qotWG6<X!*_E2b7CVt-<pK0=4`)mGLR'rb76%lSWDQuPsq!Eoss(5W8
%@CZGpprg^\mT\s6^fIGl`]o(1Y?ZQ([.AA+>0F:c44S0=X,pOfL?X$Ue!;)#;K#Ao-.jWdPV:eID*i';K8lcDH9k+Fds'!S;:rkZ
%[,O9MdS?*i[_%8-eH_k$>U5nKXHVT:4oP+nq*$<-k^F%;9?GI[L!n^9<,3d-=$BD`HrSD_iBkC^W$q>3_`>N=X;@H4dM>s8JW?Tn
%Soh3p;a-m+==3f8Cj=5BJ(PUs9*Xaeo$U0im.M9'i#+laYldicqER1jh%^__a<!MBBV<03jW5%M!jjV*nXB@=I)4BRb![%N6*)71
%o#o49YaBII-27UU,g8jD@_ot-c%+^tFKsic92;21K(soH&qPt8bJWjJqS.U7&ro@HVFWBR1&:,3"jL#7fjqNH\Zc!g?iAqVQV$aj
%2-Le5RVpRRg#^f&rK:LS9JM_ah8ko*O^O1jY"(>H!7(Ca=HIqPN_?m@62V!'8LbnC_b=qf/^@#?qHZ<E-9=_DU7lGQr.T:;-#O7]
%#3HDE^cf2^fj<CDiL_,K[_mhqAS9DpM[W$qS^ne*AG1<#;rp`^"HfYqrGED>?sWj`B(^!g#umadHdCMDj7d*&RrKut)qhFc,+&?)
%G4e^pnDQ)UQ)NDeZ-mGJ)Hh3kh:&jKS\bX,:E1El;)<QH[p=^Qll0*3OJ$fs#`;E7a"ecO"VYI/K'Qbs5?X[j]BaD;1Xkb8NUGb+
%9CR!1rtKPtXOH<\g"A]<YS`qZ`JE*B>=`*<B>&!KHA+##>]KYqgSb(c[E7p]-t((j]TB9LX:-&SGEOD2#!:H=*Z;c._\X3`[I:!2
%EboRb@JGa8AG8'&e6ogY:V=KIK4QEn(>U=Z/j*1['rqHOB.iTdMW-.?$KLYD(2CYML?DTVQ0#EZ8+_Gl5t^L,WE$Utkn^_>2R"QE
%FTS^f')XP;J$rLi@,7p:F%Ie#[F`56%V7Jd0)VB&:=[O_3UWOCGn%H38j]HD;h>7<0hqrK8mj_UYBR6fqXlcGSXkKW2sFq#ou8&,
%Onis>;<A\#'S^Hj_);/mPC;JT4K,cp'/.u?*<pX>He:dd1Zr.qodqch!";_!Te)%EIgMr<UZ2R*05c4DP9=$fS7sg0otkZ,$"bf!
%6SF,!&NojI..]WVSSA2ms"!WXMb/G#B(&#o1]tHWs/6T'"=;'g3%Uu@P/*K+pYeJG!pFp`ao9G45.K6P=O21)5C,e13j-,s4/)C[
%Bos@lCnVr89&-lXlq%u.mJquBn\rck,dWtEAH,4)AemTW$W%L$/4_bCkIAE]&qU\.B+MUns)+jZLBS")&Ll?eI/LdY.<D4(_jVpl
%9pl[^(rXckQng&C1&Tn9;,cUF4,+9%BcfWpMjT.g8h#/I72A:?qjm0\NusUN[M<]^caaj@>ENpI[O)k=ESh=[(e"2Km?Ia?E[<Ai
%qMrgcg:f''U0@)(fQZUH[Y7?7'@jb"%Jt/O?uM<I_j515p_!rkCrgEX\e$RP1BigULFcPJ_-^O-R88&3k/Q5-8)Dl9etF>ThY4q;
%q9pQABLA4OZKqr\R4JqWeqMr'%\$Y=DqrHY0B%dMBD3%0Z-F$Mk`%Yp#Pk6MFrZJNo#j@6JR<s<?(;C<;jjDu4&,q**LmE)N#a>Z
%G_X6&cqcc^FRXc2a9\)&!1'PWpoS?UK*BW<aF8dX1Sj`E>I[or/%1qLbRDIZaAALD%&FGa9pB@nc@LPlLt)^FVTW\kk\L[/$nVJW
%M<3n/UrO;PTY3JHBqFJs"J+AjM9]$)10%s=UKJ5KL"Rj_'g^@_q5VUMmFZPfl`?-['Q>l60KqGY$(G*o0!,8N)4luEJ5P_;%cCUs
%J2;'H)"dO'S<%2t\l7U,3#^fZRI<pVA68\7/BQW"XA98,2,[rZ%';d-.0:Va:S"2<BUqqMK0!+aM8E=cEb''cB7NY/1/=#\((G`=
%'0mRAc6X[4)<KGp<1cen3[#m)>`hmD(s$Hq6qtU6L'PSc.Y'o^lg-4dXo3IEeUWg[[\"`PZ`Q*%8.laEB*f]VU^-Oq*\hat0i\fN
%Hm^n%UIC-XI!Zo=$s#Ge8Y7EL#/<V1OKt&+E*b%O+3-*_'T65M5F_`kE,@t7\q2CRq#'QC\=M3*:0pI":@K<UC6\9E+\IDW.nY)T
%&1*baXXN:B6Bhb8<g</1+\K,rWthJD9Si7s5BBgV8pQg9,p*q"NDa(06j_4R7k$))U-ot">#EGcKIB]XTiREK1*K7r$E-EC0,('J
%JM+&QV83^S7Qc<lbK+(f`PYT`!>*=L#C@/&hsu;0ai1`(rPD9709fX`9POlSL<E:$P'1r\,5C=2W4u`maX1Ni/Ickn(SUpcpm42m
%4QSjd$h+l#G?<5K@e_`r_[/5i3e!':.,N9*m\W1Q%=EU@5>/S);]h?biP9LeU-"a*o]QoK%28-O)g&_P$6-in5A,V!mV\E3&i>9*
%EFh3agf=Os"9\jbYhSMTn^SZm:<)D@fe#r#E3oPsb=)K9;g]i'82;G)nH7"S*LC]r8dKXEiBAVOoc<I4p@>6r^68jEhge3+HFMe)
%-Ga#CT$16#rnfPRo`o2?s$qV>_10@"'1kVd<%nUW#f<L)_:9WNeCm;O9GNAlk=[VCghaKiX]Kr5Dc7'-CHkg*b;iMF`4#)beo?lo
%oSMd_k2;L,D5-`3:O?/m&>h;^Vu>5t+3m%I"\^ejlOOTd8AI'5&(k3>-@`qJ*l+s$nE_eA8XQ)C+('\8F9Q"%YPt3mPW)3(9`?a-
%%8i7dBdnHGoEQfYHk6VZfd?eU5b]X"BTthZW),<a)RA7SJjHg_)$g@BZXB$pORPcn%tc,25:!qi@$psH&;YAQ!.<7IIHW&o([tk#
%U;Hgq+qfm.LS6CeKcZE68=3plUAf0D_grBrcqfAtr50)b[Ia^@@K'[H%"Wgt6p`6q,S9USc):p4B:f_\gI</8BMSfaDNc51_!<?R
%[YJB1Hifp:+g*1<ln`rS"sW%?%N5Yn->c6AU`tX<,U^E&$mF&Z&B@@1q&t<E49G-d4pcr(%u?nRJ:eT$2@5HJLS+59d1a9e,<qW)
%mOJpoYP=4F!>4h-oHMp_rEn.4VH&spaUXeIGlPZ!g)_66nuFP/_Le?bWA,"k&'Qbo#3Q8Ni&:Q&?',_7`QDi^CMXPVGJAKqXJ`?Z
%,NCj0bPM%a`ucr&a1QorL34U3o.SN]9Y:&BfB!!F_,#(4#?Lg-$W^`jmfdsVBA/4`cqC0(nJdr^QbT?;&&-uU5?Mu@hl$Fjl:W&/
%Ht&m9_jjWjqq8<)!@N]Ojte"+.J?JR2%N*,mA5a<q2nIe_!K5F5F'JB1)>sZ_*O5Shr!dmf]^<KUX]8:o@15KY.\a]54?Y5Y7mDc
%3<h(1Scc38q06X;-(]/"l7\prnX,sKme[^Em8Z+7V(nmBnn]f@n+cU(+>$,g_9HcnpFh#+mnIHOSH_?-pW&s+E\^/O57@jq&kG.J
%k:No?hp&JcLi7[te$4JeneHXDna@E?jPmX\F_kspoE))K5)8fiYn-!Y4DadiNIuL>qihNP.).u34..$io6+O;+V-UQmo%,Z]jMh_
%!9:Ot;+H)3nHe<t6b"jRaU=9BCr%fSNbW%P!#G\i,.scFa0A@%`hN0()_QUu+'\9fA#'.&k_!K*QTas2\%Ut.D.N(J*_DTNc,Y<K
%NGCPh/[6"*?GV2`;*7&rCj%T!(E=l>p>L:'mV(e#"N)`u*<CY6g3O5Xd,spSC@f<%(g1`*[Md_]#K*bXK?/Zo!Zr!`06?c<p4C7Y
%oo#p(M>6?KltlG'%M?taIlb#A_2Ar;@EDh]@&V!cG/!g0V!rXOS3bRPm:0BKlaL<S/a!WX=k-Zo9)[`6Rt%e4WUN]!neLUK/]YG>
%T!*B$);<@FmaRb@`0,m\J!o]hXsMl+s"rq(Ul9I&bb1YQ#gCr&k(FIWO6J,pS4-E?_M>XLji%X:P<@e+FS>BZ`TYL4M,W4,HR;]4
%fmf'Jr&RfYl>#>I&$X:mEP@ml'dX:$*P82`@(Q+c6#m3N-guJR]p(mW'7BZ:+7MBF\Rur*6VB1t"5Nh:5jkP?87*f*&ql?@jCt4s
%)@:h;&;%ccVPFK<-<-KsEhsf2C?s`9:rWmWGK&I:=+Ja]`>6ih0.9D'0DcR0\-eW[FS'+rglNep4(!&cU4(@2TDI&$)tEI@O$YV7
%hcBPpX7<Q3j:Bi+-9$oYITOg?+QqA4YdhN_b@VN06l1<#E#Q),MT]KsmO.?:V^Xu@hTXM`hGfU,'r,"p<G23`!-2(!&6MB85ZOUI
%!?3Yb2i5rT&lnbt`A7>`NOAKZeGj*GkeE6[)gf'o*6<QaDV'PEn02^1X,FLtf*rlrC<43meWiI6U_7C#&u&lg)gUTEJN1oEDqM)+
%3UH?ULkt)rF%jZt"8VKr1l*.#Y4[@qD\aKkauCfZDuk[DW@r,E/'cI]D5OoTJjT^,2T="-lJq".@/Q+6<?@4im7s4T6oBI;F4N1p
%Re(pjDB[r(]V,+8BrUF*=][eu-S`C3Z(RJ5E/Pj?0'biHl3'JtVfYJ4Ee65VU\#>u`k*]n\;G4S5604[&9I34UkS3nS`KriY"_`n
%\Y3SX;'tWhc-TTu43SpOT).L-8H/I+8H&<ih]LbUorl./0E7MgGY3D/QX3`#P<TQ6GF9O8qDC"`0W)pmoAsCu"2E`1XE$?X]qOr>
%QTOmDIec@)G06aaHMCfOV4Fgh^]/cH':JiGPm*54h9"ZKGCD:@:-nOIZ(MkOJlTb*$^U'?F`PqkZAB9Ci,oUspB?0S]T6Fqp:?UT
%HgDni^+/if4ssm<`k8;2"P2D7.d7"Z_-27AW&)->(@?I&qW?9P-.6DAL=krmT^KeeGj-duhJ5.JoPQUD!p&4#VL-PJQLjSelI#Q=
%q?:WWfAm6b_)k+5gM6`1e%aJ^NKfL=lK8g52GU45Ha[lM,R?7e;T385.T@5<)g!=P*\/bjU%fY#=)e<cSpLub\1mBr!mN4th5Y;'
%\q]IOb*J'foAb8rQl6U,:u#Ik&,$<p"WLD#kS:T$J"Pb!9'!La[KH-m?U[B5E%-T</m'k4/kHe1MkD,WYVW`X6\D-<:ME-X@8^o\
%Q7l@3J``\:$Pn1c"6js5<m<tr+&\cjD"Mhc<L[q:-d3i*&'q>63T')<3*MjC+\H_Vru9"Z;jm08DE-["Y.Gq5HaGp^&%%2%I=$'c
%`*)\M)o?N<GR'dj0,C&:fKT#BpcCidpXkJaHPt%95s*4X*\dV#l_!?e^o@%KpCH.t3][=YIVR3LWQ]A-_[l/HBfWs_L+oY/g,_`Q
%4*-!PUr\6k/'fhMY<5#[e\FQ->`L+9;hi4#!t5p-,lH`T1_Ea?L--.aFQ^;(,X/+sFS>G7Is=JpUj=<EJbM:k7CIbrd&&K!%%O6Z
%o];LXih)miRG9cqA);cj_XdisNEIn'pFH3h/`D(^KI'-3Jej]WWd"12<Z96/\rEdmaXGL&Ls=N_(L-uoh@Z3\N9[7Xcb%F]EE8Dc
%2CC><oeM*_H;6$<$4lCF(#/X"cabHmLSbeN2J$N5aH.ijX9gYOZI]bj1nAUeo_"_@IJK)c,b1Nu=MFsK7&`guLCj5RO4u2U^*fKL
%3O@oHXr6/(T2[XAkIUKjd%`31ou_4u]k;HHZ'Z7(,'suTom0jdf5SC"l.2<5r50t@)s'nWc)e`Obj06K<B`CY*ECJD%]M[V=/Z(!
%^m&:8DHDoCOC;?%V%2>mANBt,RYFec]*($)W!o6U[Q;6jePO/n-GIA(Za,EXQ#BMo@/^S6SUM!]V5B3"0pgsp2<SbUgPH7G=ZU"5
%&X_ungB]^)^J#^[(9X78a/m^bb^h4TAub&DIjT:i4kUf7j_Rg8A^p2QK4Ct.l-k+YXcAkU;RJSnq@d6C$>H't2]QMel$FZL6:bh&
%_&g)-,^s9cF3ks\;DV`h?&->`TqZ,Q(lqrIIXAY+npk5b]#@\).Z'5RiZb$lmt[^:>*N>+.N'.u)DGsWo0QAg#k@TK!'9\?(C@%$
%;oQonnh0;CM\UX%4_Ne@r9]plTsACl1=WEFB/SqX]/:SZ=/_3cYp'NpkQ=O:eR6=nk"JV=ZX>+S`-_sS7W%+=fOYfBW6pHi8kVhS
%\B$p!SI=1;VFC3I,Lqfmf^%O:L%@`%eb7okjnP@uX)cjc32h_^LX9Qu5s<20Ebl5713Go%_!,:`'QD%40@k2)X_^5CauL/@8YhEN
%H-+qO&l=nE1H*]M'>B*[WVaME;hYembdtrKo>IUu@pm(*U"5"gC#[;R8SYfs"56%6<^h/E#oA!;mSd\_TXo1'KJapR:HnSYh.PV!
%;>$Ti!T.>YchZU/\8I!I%3-I#T`]SO%7K9PQ1ZU5L*1<jTh\%T%NjX&p$\L[(WHq2as?37:^e9eR&<Zcn4[aR?+\*G_S:D.XP6!a
%HsWe;.`hR&*Eb'4O/NM0p[fcTd1OsBnrOaQHMNg/o7Gp=5/Ap!/k1V4TF8C_&&eR<IblIlY&F@YElBC^_#/d*@3$l/P(B+L`cB>T
%OC;?J/7#4YYeqVoV&%g3kU%tH@IAkk5!3Dp!;FHnQ-Q-@]^]M$'=JZ`5%^C:(Nc#?&6%Qlj/m$n[IuD2jd*=DIZN^o)FHF/0VI)#
%eHes0R5S$FZ*6TSP#`fd3G.j2",moN/2HRqfW<3qO'rm2-0^?S5U1gXdZQD[NnZ+I0NKGj$'B_M+i#,Q32V(MON]CL["^itR)uPd
%SMR'&gho?6[R",!Dn`-gd*`KW).ItO%r)s"pW5CPg@qLhPTBt;hmM'Pq&.q;F+u3o93uS<F;EmYHU8#/>S20r9M`=LfJCl7U.'hr
%M),&"Ec1Dk+81XQhtZ,3579=:'2Tlca:S-5)Y,EFj?Or-LmsEi"=dM/eDa&EA#0a[?!hX+9/)I4Ot?r/*NIZJ8]T;F.t1l1mK59K
%P:=DN@KS=G4M!D%Iq*&UaU?*c>H''ZOOed(4(E%JN]Y!b+2BD@[>)P8=:Yo$$'BtD?s/srg-KltD$sF^Ebb*A!o+&>B;ad+A-S=]
%iA8l1h[)?=pjumToYGRuO'uqb(h/6.0qg+p^gt^mZs^K7.QD;Sl2BXq_/4OXg5:jg;T"[_$QDX5)h6QI<nSK)L5[Ga(_;(ekm%-3
%$4tOr\^H'a$kcW0=XXZUaQ.?=hY)P`<HlR$lB6EciSWVd\qMAP,[fHe:,1gi8=lrA!_e[fCmN7UBW1&PR+$u'-;`.Ld5o_LMA,CG
%%hLAPr.:@QM1R0^HE(_eHjh"9Ulkm0N@@shP+?<gqAq!?;P,eVHUm'oV'q?`YKj$h<\CD_SYoLa'?:5hjRYJqT[Y/i.^N*5?SD]h
%M'^/EO=bPCZ_r5i;N:9RTncsk9:5jQqEmQIi]c"9m,77]lTu=P?.V3$96[:L`jiG2![OHYk/n^I#YJ2A+bMb4>Yc$F"5p%Q,\c$d
%m^J"AO]0OJ8s=XL%Z@)+^VhC:S]-9ks#bXk,G,?crJW:H3q!tC,p[kTi"_YVUn'$aLT>BGpq<,r1XfU0.,J$;*9rI&OIS[GaQ7<o
%"-]AIl@qCb5`shfk$@'',.jShmP,$c*M/7)/Ns',\_n?;CH#1fo<dBLar[83giTk.lCj1G[lT#<Sq^A&ekb4KodYd;][i4m>Q^+H
%]FCu;U@+He&?!b;)Bq9Oaqr'k<ous#:Pr@j"4U?s!SV*Vam<YP:H$==9f?ALo5i_[ITigWaU";]MN'>5f6[i4\aaIW""FtCC"=4r
%MEJ&,ReoLQP@+dOfP6UT'ku1[qVMRqT:TdlF[>W(.J@TZi&ZI[\$\k%W$2=*ebKEH-#kuPKU>^ik#%A#M!H]9mg&/k\\TM*gVQK2
%Y;K7eQC'm1O@q321H(d$\n5]FK!-^2E!L.e_><L\0&',B"0p2?W$thX.8@=*'mrh(@2Yu4er[W,OVpNh#WJ!tkkjk^VbO`t\$7'I
%3Fq,Y6kWM"%Ro1$1'aUc=-6)8*Xi.f&id*WZf`qql[hf7Oss1T43]hIXf5/g(7XY)X@lQI4!lSJc=rTpiti$aB1n,`9Tf^[;dQ"t
%W:FiX^6reR#b4aGc2aXu:8'%q:jtos"*1<Kf!C9u/Jhb0=X^99gUoQ]RHj(2,iJ)h.?(WEGh'S9BA++O,pOS)7:tV5<*3_"bR=,d
%=JJu/]-V6GA7k>)AVTOacN+`nE0:qqiM3\o,H19Ejj^^H_cc72Q[(3!e0!'fKW?("h%Qd^];ERXGbbgNB9TP=5s4[>0XZ5:<KL+K
%Q:Q^29p0^Z(ZT5,9l,1(U"8$jMGGu8YrT]S3(!EA/Ph9YB-+)f=:OiT,8]*Q($FFhd\p_MFVHF,KDd]ujaPE<nt]'I:+9=V-;8=&
%j4I8#:k:C<D=p73342gj[0YVcZLt;hROt(f9]El:f#7'%W"M5P#@t4U(V!C#[ksO%C"0qT10_n^/m?`LRP;K'13/ehcknG%*_bGs
%f),h].KK_b(!K\E.2c^.$i.m/Y?e*Z8SQka#"C/^3.ig"Ms4kl3:h_U:4@^T^>,+='KYaRj$PupQY3S"=s?1sJmr7Fd3VQW'e,b`
%+:fl/.'?Dm[m<=C\ai['*6S_*B)gV<?[9J#@,q!AML6B4d""YG'ceU(#`'nm-&Puc2S9ml73\6Q!hsHFa=_lrUr7mlqY_W85IC'p
%^NPHh>G^uh"_WhM;VFYp3:8I,l07UO5^:/O"(cX+9.WqB%+4g$GDhS?j19M*Og"&*22Z0GphbN4Y]E_]/gT@HiO=@aZ<+a/]:n'd
%"l0A>'QheZ><(UtXCIg<i`Xp"/GsB9^G9ZGjT22/ibmn[4A*F!WC;pD24DT@CdqPMMSGW,!GS,!IVu`/GSGWdF1c!#Th*M2K&:IU
%$#YXcn+OE7.-@-#3sBWnSm;7oSK?kM9'6!Y%X]b:$o.FU4J!d@C1@c0aJAgi^_*06e5lfI#5NdWeVtk_L36gAKasg*S.se'qZ'Ip
%Sr]TMg_RbfVpp5IaE/JOQH97:HHE9PgEVsKFl9\/1BP;7&Ndd6dA0=O3u"BGW1^bF*`*c4_%!B+*6ajQ")h6u65P!1d7l!C,*^a^
%H6Jk'IWeTNSWf4GE$NAW&eZ9E@1f7Q]M7l5eTW>MTd5EGM7AYQlsFHUI]+jUp#(SK&@*aFkA*%IISHaX1YjWh&8k"BGKGHQ@D*k)
%38Hh$H8p%n+Rb/5E;Ou+Tp_B.EST&019n(DprqtR>#hfKRc@.\"4Q)4^C5,(+SFXs:?;=5FY72RTd&9:@#5-;"0k[35t,Xec0[CI
%L<N1N9'TY6p+k<I1ZM<f4:ASLE"=B):G+7gi?eRdb.HL+H,[d\lpnA]TJEJS2bA-&*G3A+l,$aCDBc6X_An?L^kH+tK2)_%Q/O&_
%rR@Mrr'fgFnS`o>Nn%a4mL,0nW6HFB`Ac/Cj?`B:#uDSD#c3`9=&co]hT:oEMmPFm8@]oJRQ?!F3@`GM-*sdc70!Qd*;Pc=YsX)P
%/No\JS]Gto4JFY:"e`(^OucV^9<KNdO[snFP*=CNVmr'sn0EGdR40Wii[L$J!(&%&!S0d\$70l47t:qd6`rpWMnkYVTW@6D^a?7@
%("IiWbYXDu^l6O'E2E?O;hRWH,tg`G:C;OO4i,N*l&*&l:P)9s=q1b#+S\bWDJ]]s3q3;o6*//V4s+=.;*g#"M?9Q7:D96i]fm)q
%Il_X_C@;=5*?-:.9Ere&nu.HdH"(W)i@%1=D1XoB&\,)@NYLd>HZ\>/NLf@d!m-a\i^7Zq\[_1L&PoGCcgnUn8"'8Al2Ppe0h2bo
%)1T7;p5I4sNR.7QZoq5@DX?bJX?J!c6XU\W/\`kT&G6dU6@tnEg^L$Qp#3aWb'hC9i-<)3;)GHLR_-\UR!$0XZh8c?qJe,p<fS]m
%[H!"KE4C8^\08<s;FB4Je5AZu9u/*_<!FOUiH<e-BSj:hg%,[)W#qeg=<@fZaRNO21@-&(1C,uc%rRT8l@YQ5kPR_3f-8JXEDZ>G
%FVO\MMNqMNQ'o^p^p/Lr76!GC.s9-ZIB=3E<?Ap5d1;<#`6:<r/k&oh<@:25e<&F[GDJ&T7eE6r`MQAsrpjh4Pg^/_&-URFKo$Ih
%JfWQ1M@VJ3'7B;D1j]up'+IZTYPnR$h?E0gFMagu60cNMV'=!F.M-[k<UF1"]5*YORG:ZqcVs]+S!3_RnmT9nea!)N-/%>XZp+TB
%nBH"d'\l45&@tbeQcG(1Ei5C"_<6)Q=G6M+9kStuAk=n*_.Y_T5+Q\?<i0K?(fn:cSW::t#g/\^CKu,/Q$U`c,2.1ejrW*bWdf:P
%K"cHWl2V>-Vak+Y07cse.iSfc@!4W![m/+Om%-*2gG<^I"\_b.`/fa+ImM(U89YTsPN8S[(l]B3-$>Zi25PJ_dX!S2H]\g,V!#ek
%#?-cK`=%u\.XM$o]+HEFJKr\(4(iTG&_c$r\:4r/$d\URQe#!Ni?%8b'cB1)Qmc^AeK`("(JUOt<c66J%Sd*%mca:T&4U&S02U6d
%/il@Id@8c?;q1\]me)tSo_2BRD<KrgF]TB*EA4H?kU+#/BrPQ='I;hrA3m'$*0G*kXZ/?R+oUM`N?0`DDRXZ#Y1E<c_@j>n%Ig!!
%FJDc"[M3#"#-1j2G.]$o>Ou6'3+EF04qA/h)RB:g[e!&p3m)RpF*>Q=\;9A"ZZ09NGJFW9*&7(/buXOS2ZiHop/NBQOQ%Yb+S]pJ
%/+4jK,/,fE1@GZ<,GDX5.ig%3GqGt`,?V8=n;j=UO[ps,M]MQUr%\%nilQ&3)Gnera1O\k&;%cMq!B$nN#9Jom$Qc8CPa\SZ6!A=
%To1jFm4&J61t8'6JBW[ljj=UZ8XCR9P8Oam'?4:K4&qe((oK-@8%(6^?]<2S:Y5s!UNAn#XE%F12&9]X4FBEgLss'Mn0"n&pkdI`
%ChZ-U8H,@n"T(hBJX(BanJ["CmJbT;J]B7V$?m#1+238q7MRFD^h<DdfQ1^3?Yt6UcmpS=2[uP:Hma8X,W_ncdnbMYI#@SE`^Eh*
%ZN<LcOB>3K;K,jq)sQ>H#cHDO)&8l+7CMuknP$"BQZj7Y+XImqf94">If:=TeSb9Yk,ECo&Z7D\.rG?^67*)'kA.lM]lO;9E-Y4Y
%#B7e+!I>?:+]efd4<W;^][aLDPp:VkG7`>f("taWU>3Kn@mWXJq!i;3G&5a#*i@e8;3TcsqGn>np+eBDGqq-t+G*MVBQ&[_P)!AZ
%P`GmWqq7'en*I9Er=+I4WEd,LH$-%dr?i(cfg-AWi5HH_FY'[p',=>/k#-<E0:8@oO!>r.e4,0pm]t-Rf%5,HSEYtSO:_gfI`Z4K
%4#(s>3>S2oQ]\urcgcRk))E-n+.gNbUGQT"V;%]X=n27a6qHeKH:Y),\_+6Og$Y:M"6duIaS8uF:-?Db&2u=a$8i@8i();\!D372
%-Ll(i/<V[7&AXt"T3hgqR\hg<9@IQ=Su1b;geANB+gEMF&&>Q&pit+?U!@]/*neg7ljcc18;6T%X!9BLUp?LfK^nZ/^C\ABL(FP/
%JDHE^[`jAq\%gnj+UA+'l7rq?kp\n1[9Op'(0&_Y`Y88R)7Fcf5ND!S+HcrihilI&IYYlX*-S.Dfg)1Q&.3g5\WqKk%&2;Y%is7-
%TUC8\6`'I7R(crk7r+epO`(`I5+!r3g*:Y[fd'bGLs_;mNCb(FPUOrD+*^'+;Am\/nYE2p+;;5@#/@[<mbYJ3nlDR3YKr2RN/D!!
%&_V/:noTd0NY,tPVm4%O_EHp<j+]gZP[4GWi%C]<@E;V<%pA@F1A]i*V\k4Z/Xg,_MtmZ2Po<k=.)%8R.9'=O)eb7:\+?%0QnWR\
%*]s?D;.4\$)JgE(,s#nZQLbiM4O.atkgj3P3C0Z8K''(T';Rjj7]q*l@5UBmL3+-YcSVD,V^c4MW2ABf)uM1AT[SmhA&8=P4Vk;n
%5qDLt=UnqL7:S`poBBMY:ok5O=7pj9-I,K<_Zfj8]6.)sPPsZf>[eq_Np1b[E9BgI#l6<P1SQJV6Llo9^h^;dA9-^q8]sgd0l3+q
%pe9lY;o?5a_3bH9`-@oM%Gr8-Hjj6>,L:$FrMZ!&@PL(mZIK^dfbb>qMdt<l5P8fHAlM[6S$TG2a_#ifUFWXjA^,@TY*r+[j%d'*
%nmBUj>Ik:oE4mKRoYis5c^j!4cSYRFQQ3a%lc4L:X(hS#44l0\q>'s`QbVBIU.N[Uge</=X2R/:<6KbJHg?+!5QAW*DZ7cG[/$b'
%P^PC;I]fr*W()?&J_SWQ*T6;e[qH4eZ^'62+U)PN:'3HR"m@E4QK)b_!<<mbh#FOK]36f0fTnN_YJ7<Q':WE\qq1J+:r6^2,;VV]
%PM6E(QsGCFlE5F#"5o2Tf+rSu"R'R^<`*9D>C[c4BL,PtmNQWQ3=oJ7XX4%((Xk58]a(ue-gT(NcU[$YF>a2<q67]Fdq4q]@o)gc
%%"3b5_oji(C^kGQYGf:A.\Dl3XBBW3_a$,\[u>Q*h/;;`i]RBB[js[j#A#"DrfH4Y?]Jo/>25,@m,!Co]R@^&B1.<Qe=j(L+IDI!
%4`/rRl`md-ju2:YclC4oXAPD<MVF+cJH"Z>QTtf>>/2`jYmHc\-"i%_jbrp."dAdocUFJ9o>_m_n0h9bp'c>j,@A<AGe=UK>_pFI
%0^nkf+AouIe_Q:Y'f>#*H7Fc5c\l36>KrMiIUm17I04nX<Hdk'P0/1bOKXM2YiDOG-j;;DjM9DsCO79.9Dme8>62a<Fk7B0%VJ4)
%#<Fa:4ECZiXqim")mN2;]-3':r>1;hh;)lDb9-?[$`b_*bZ!EQO=f*#</W:jR0C6T`E\qB1\JGU5tGul`^(]_@>?eF_9P'Q)TOH6
%2]-S2St',ie<<"%SdpV)AXspPT(XYT:HHbnA<f`->o:K^p1o@-K*8V7O$abKk`3/uQ97pIE=3e6;P^QF0#tmKeXudJP5K3DSX:-M
%%Da/2VXU9]a`HO9/-90Qk#?g;*spAuXquM<Y/qS[6B$1eXs%3CMqhliD(rg$[9*V(PmoM5pu^d.&`@!-%@RrI,F^0,RgIQCGT53d
%5@$R6$DnXOdB]YicC9f\(;:AnEm;p0r)h<]':-#@R=tf0VR2SB-!Ge7MSXsuW*<LrZnG2G+hKs3]G,H[e\pkp\V&&(47$`S6F4dd
%ZbWZSE33f(j?2Sq(\7m&W@5'ua01QuHMk[BD'QKFnPn:YJl<Q5D<Jr?g%IU1KFD'EeP+g]"Zu4s`BF#!#(^j+%aJ9SnAFc5<btXN
%]?!to*$ek7Zb(':<(;Icbrd?60Bmb69t?rU#VN,",ts;%%jf$oCT0_t_1&XN<A:F(qMQp>X41p'YV$N?G&n!)\1'W[qGM==K9?L8
%UY7!'6E7-kjK9.G@'IKu']bD6G<n)NaI[3X=$^\9f^<Qs3>*mc!q+SVLk4:dC_<YM]Vs8?SV2//T\7hdRje1\`GofViD@7XXD:O1
%@#BP30UL-r91C46Tk8&SX$>E=m0kEr+M.19?XXs?$V4HW!rlOd\7dTn3`-j"=QG$EWU>Gmo$cs]")2-n$9BuIT6K[2Gi$;TIfK1_
%gBVFWf0Hn/mCYMSV7VLSQAa8^Z,:iTJ<]KObBH&B3DS\rMs^7cgSE`\KTc@7>;XLV.]ZFjT+>nu_shE'mLZD1/(jjV"aqk^rOJjH
%cs^?JhN<RnUMJBYELTff)!c96:0U0@?Gl.SekjrN@e%C1rLe[TFKIMS/ab:ELdauq@UA=%WFV\0=s(j9AdhbXl#g))G>)K?C#5sC
%@LCR_]MueI&M)Q"pa'<l'DD%F.OU=M=lfe3clmQO3gdZ;P3YE8$#OZ?>uhI((.hZ(.GR*m3QLORh\&cJe*d:#WD8N1;b@93Ml7aZ
%VOM<#/WY>DNQV=l')^S6l64gLL$=aclX86hX])I=78."Q]fF98jfoo*m*(P#Ur+>Qo]K6c9X9Ii+c:Y*&^p"fR/%!>p)1+L6S(Z:
%&g*EM*LPq?)\Fg%IDdPTd/%r.C<SJC4.fpE?=M[?%]/W[/b:mT#N9mnGB(Uh(g#2[W#^&i..oH\<]A*BM\`X6-e)hLEtV,Vpn#n]
%Ee+aRUjB0:VK9%SY!iK<56duql.E<04;6Z(Kj,@c%Y%@sD4JuJ.@\eZns)'rIr]r2N=Q7SWB<N.gqcJd>!UamQ[8$ZB'l]LXK%=F
%.r:p@$?j]@f]>4r-O=)eZf/XDK6gu;:N4?e#]@M%Q"5X/?TYbn_ukJaK?G'?*_25HbWQu.5Z8GFjL"A<mr@?YjJ@`2rtnkC7u1J@
%jsG'.&9W>-:K=.L2NftYa+J_u1i`+U8nEC_+5A%MEHgg3HsD%I3Dt!@:0ppaY,38dOnNCM:fO`;'j&+47TOMjb"2J*0^2gdZB115
%S9BTIV[1f^.!m&N?WYH^#h*XPYsJMcqM5M:3PO2l_h0?]]dPJXF^<<PMbR"SNKRNMVme_DSN3o+!iDI^_$6p`IrI<bkZ+k/Mob\)
%]Z@u,WZF:%#s=hh]*hi!RqKt=<&MH%_[4a:ek\t$H2i%VQ$eLC:sh+SW2UGG1IUJJ:J$J'N]N@sn*k;XAI=1-;fdJ`hRGr#cLW[.
%fQVuW@HC_B3g`#$cTOII/Pep&T3B><dQXAaNI8@LdaZs^\rlufLl(<+C\gEjV?K-%/d]%e;a9=jgcpBbptc'r<YKN88P#FGYT>%L
%2tNOIP]7a.>^iR,+)`dKhA4V`iYU?c`)<KlZN$mV.e%.c/o4>r(.M--+>]@Sg2Bbo!=8QNjsa?]j"0HDq"j[82\t(b\)b90e.,,(
%;N<[BfOFi"0WZ[#qJMm&5(('rlK+)_2/if]>L+_?mTEj[4RNFAV:@8nJjH[*=:Tu?*UT27'`&s9/i+'F(5rYeT>'7+pWSp=V-#*C
%Yf6am[W+69CWV%ba'/`MoKcc\Qs35.6Q[[-g;n,lC7)0Ch';f1n8%ig>CM\F;sYcsnnC$U.N^!tJ^-eSjQT4@IYL4u%*eN+qlq@o
%['8:@]\pglb!B5.d[DE5WLtj]6-mb?!,!PEp>S2,HCFLmrO1@DP,b.:FGh#7J$RV]hK_'r0[`B]8Yp/P=>^W#M^(V3rAOp_pmo!1
%*eb"2)Rct*?tE269.(!T<P'u%,n7F)g2&Yq#$Z8k)tX8f:qP2HhgNT*2lRWDQoipTT\WX^EJ>NF#qq/[%8O)/jE<@VGtli,7f',6
%V)E-p'cu+mrhu@Spd5V-IU@oJR_c0J!Pd2761"@EUFAKP$de2aN4L%MO;Bp]e&=^AWo7VUUdHt)p'<H\>qkkS\7kLK4H/gDp(=^8
%^)O=GqcOa*,eh?eft2cb[dA-kNULc?!rpp?rF,E#>PO3tWiPf6i<VOUdiC<URbP&.j46RKlT"`jo.?+sYhS7DPG04BJ5<7B+ujC,
%"sOukkk^kp/c;#n:]MrSh3dQhgFE!cNDiqb'(A0qS)M'A:X/GjGpoJGKhDp_;6?[8Z"qo#GJ3M[kBmmUCf*=!W?.8rqE%%KILQS=
%T*IpD'HsnW$?PgOV)]is6>)T+g-3(]Jb#lbG;_@djT^]Wq$VtZ(IJuL^*eS7o8M^X.'As%pA;d\_1fJ)qE#E,]&4(&It9^"O8W5?
%#2Memf;FO!=.k9?oLg(cT@u(Ikl;m*&daV>!aJ=P9[UF2aaH`N3ij!gkZ"dqj7e>p]pf2]:HGT:3F]O2,ur<25*V"@`0(j3;YW<4
%f/f*<>VV0a,<J?r+V]S`1>LVV>$B$O9$1US_]Ee,^Y'A?Q[<B9jKqGX1f0tV_:6(88GAh)o&sF_lnt)J3VbUq:;h]+-OGN[F!4VG
%?@i_c&l^nW34KW9iJ^>r1^CLIZ-:Q7?ol`*RG-sdm/\#,@dAIt4+:g8%1hkiLk+AkPGi4k0h4r'O%>055VV'"*I`[\A2PtG1-WKL
%j/:m=NC.N']2E.;@(.69f@ND.SbdC:"'qe7;PAc"?#9oT[(i9!o#5]"a`t8:(8Oad7obAcV/JRt#X4j'=J2]F-`!onNfu7_[D-8#
%/&Dug2BVj>kW!>D#cN+q85K@FaXH^us'?"n/'(Pu0c_[(q6blBY*:=pBGE.]!mRR!Bd""aia__3X9dP%r!G![[+WM4l`nSe;Xt64
%,V>aV1*X60V#MklE[+>&&Xu&BUVp!aaFH@JQ-<HLTYT(N7)W''`i5FBS5<2d$[?.nNkuH,jY2G_=cXdCdo&98@V-ADU]/MZ>+l:'
%;1^;,-jc$iIq,5a&DNQ4<H3%=&'rg@dCLOt8V;5aJk<DpZ"X[HM3cQ9$[S&X<>rgDp&b/D9F41]Jg]':e4X!A7d+&TL75$D,q%nc
%Llt?1/Uha.hq:ri>IL];W.(Z9G]WXE+/!uPXPjgpOA#P$_eCH3<!L4-]W:R;^QLs1Kn/i_JffaVa?!0QH$rVNormq=Mn3"Xi0J8"
%%p=Z=rn:\=h*hOQ_6(cESkP7L+*JNC,^O(P[0>S`4_"jn82k?.-?4X/VkRMq[W4[H32nW>OH-^T%75)J)Y+S'(4N-j#`^gZdc6&O
%gh9VO&,8TM(EX&D)O$$`,7`)AM<Q]qWA"o3D>a9k0Q;=Zq$+8#"\c'\iF"5]'pq-Z)*(WCKbgYDHj%8fL5Am%n.P's#j"0ocV+R!
%',B4&T-sq-+H1c2"5MHVA*E&FV+Os[.BnNu6Hls$N@^rba+scd&TPRN+.0F@EXb$f%Q1G28W#01$ne?TQ98Z>UO[HpINcF,15=b)
%ch]XQ`?,]Q<?)OXOC\@\]DGbW+`%2QYAo<Q((#\,2u8KW%KBJpHeDoVWG(rTCD#>df9u:;I;-1ZNn'm(5s\DRK!*.3hA$o_/cp?(
%41^P9Vr?EL=$Jf2><2h0p"973,\bV-hONl+;Sb6tIKfu).5I+JH9<4*)nL'eMdh6C8qBC91E"2QS&f>L=_a';f+NiDrFHWcWB2?#
%D'BsFMifb\Y!mHSRInMcL##B^&lkkN4gC0=(YY7/,T3DD6nol%.,ESf%ZP_n3O"?7anJ>?Ne-]"lFSc)=$r.FE]"D$Pr'<U`RO(C
%bh]jQQG++4Qk5Ef;YWAB/Wa64#mR9ZJ=A=0D:Ki;dbm;:P5J?H`iLSR;E:NF4-&cc'/5Hs%K[ZkLW"HV67<A_k!&iE\UIYR2rs'?
%paDOR?CT?Y#=60r@P"=H7k?]aO0ppVq[ZK[R@\4-k>dV!$s^T8^]XDokq!cUOZSd[1/aWQs7!*`=m?=bHG[spW=5"4s">"A+H.X0
%4WG*"+VS9U'^sbOkjk,:WD&'!K"8K$-hDnnJe'[_+q1e"@#5:;\8P9>qu/d77-E'a20"7JU#?rRiT*e3kplilbVYM?R4+7P+/5W.
%I)&:=_4M^f]/_S&ZSFNb[sI"[7[gEjHhQj`&<L[Ba`:EU-Ljpp^eb[I]92e#`<p<#+J\Ib(%LTOe&(L8DbZ80,an.+X%=LCQm<?Q
%W&.'mJer0b9N\GS8LB*09p,gH>YUA!]e%SW@;QZPOse08Bp(S4A8.2hYd.u+4J',NMe"d@>#OAn^N:LBm2m;:Nf*@8bs'pW5/Fh[
%('$n#FJ$0/1;`M[dHN%nMkm+)KdMX6:@d<H/;l-k#rG5":Q*7fOrfY$j1u!)Le2%u_?+^b\qK?oJpR^p3=*of<9Er[0hE(T8^^,+
%UsgUROl;NO8U`0`Oopi-+QtB4Ic%h\0M-'c)I,)V?j?=l#5+JA3!SdlTa5sfFRpAuVbtl>JdIpbHG.,_[#[+k^SFS5c!O^'i/mGU
%_qHdIT:"^187K=EA*k_(OsG?.8tm\GRNtZiZbj"md^2WiiecG>*S)pl6kDf<#9u&uPN5#c:JHuW73jQY.&(F=4R$u_PN8r;VJA5%
%NQg2>Zpk0l!Z!Jk&bHo6CZL&U7BM\"1E++KGu,SPCZL&-:9BXK,)NNdCjR!D-V0gSk(jTZ*d;sA[h=W$CH"*&FAM:dA7dU@)j8Si
%0q'1&WrI522R,b5Z_55X0p[B4$eci;%9g]f;bD5<j%'(qX^)hj^&&faLI#BW%Au#lP2>,S'SE41;jR\[%MXO@h]i>^JIM7p].m-K
%j$FkIQ_P^V7P#2N8QmAGMFGr>9U%>JnC4E/Binh!5<<:E-V-1fgEaID2I*Hj6'C1V)"XdWQ=uKSQ6@=JOuN\UPJ#g=/5Es5&O@]Y
%7bGEYBp7V8Mc$2n+/(OrH"iLb'],fdOq]028WjXDP0S:sN"SQmPUP`bM':.n_^I7Tf2[cmUcL5&o"^&]@RnV*>[WihNY4<13HcW6
%fId#HDe>2#+r1Ea`"8h9YtB=T9KB5<hU2-!<_:G_==&jO.QP;HX*7p)OQT;.'8o8VV5KHfPPU79]!<=T-;>*n8Q2>WUeI4&q0"Ja
%HI'[=BG_O\_!uFRbkI&)VWL@/N7t.#o"ZCp<lH;=MFZbo(e"YW;E_6b";CBW-HW/#n`r9c![c#J-AS$8UZ#TQl(s!7PR[1$e5VHc
%XA(.W*#2F*_jJC&Z@,]o#D?hK+s/JE%S+d.1H0nT7<i*10,<R<1N4ru]sM-6@+.h,7@8FDJECUN?UFSq=5ni*M:0RE15?Bt_l/Yd
%,"QPn,)7G'*6FkL6<&^2;l0D4e<I(GX?'82jLIIs069>U>Wp_O'O!lp!VhKt9q.YL8UHH.!de+M^`=_RN="IgBr%QM5\)'_+NtG=
%\(jN5OS[/:1faqK>9glXR@HBYonsSnZ?;ONc6\qcL9nK)p5]:!h6QDD.)6f2s%0>h2*:sY+!@sLY/Q\%RCV9Xk'V1sXPFdof9E)@
%nO1hfqoT=:"iFA;Fa0`(R[V\,]1hea.h+]YA`Q**_<eZ?:6TG[4YU6,WT3si/b1Z9>TYhj#+"pZK@q+u:fVJ2"+s%0\K4Y%W?[gr
%CZ'8^<+-\9O3T&41S[[Q.!(;ejYFM^NR+4:hgOV(5u'(2Kpg\oE`bT_g,2*p0KX0^3E.&;UQf1j)gXaCo2qT9Qt@6]gtR,$:i,.u
%7PcNY@2erfiX![\GMC1525[rhl[EM^HLNm]m](E+6l_Mn4g(=KSYr'YHK5p#61m"[QV>OUF_(%YNYHWU3c%+`i3=5&jsqL6,A3%F
%8\Ra:/0F<cc_.n/>$F0Cq-5pX%',o2P[W]hapBqe,pOpAM:kPumEAo%hi6.C,d5KN+s.+'Iq<AULB.p=]#XJ<ZHmE:)H.NjHi']a
%C[A^"O#kKqr)/<\qqFlJ_b?bt$[\dkqCS)!G,Il4!Etko_gN,YG2BaXWI0U8XH;Zt`_it^Mobb+]P,*Gb/Lkh,BuDk[o@YkL^YL+
%*;Y=!c%5]-:MM9\4ZkrrO,QEL+_eop[$EP8;mXT#Am:6Haf(bO%`o0WJ*-fC[M'+2>Qg";W$EiD:$4S441*E*0rgnY9Dh\QP"YTK
%;@>u8k)_b]mRoBiBrPX4'okN#/2[u>$55m!c,?d?5_;miBje\?HMNLnBbRXBn5O^:S5VW//S-d70Io?Xbu0?X.eHAE*fc[q?Vbh_
%;NaDNmq@lQ:>SB8e02/ii8gY;A'fFP8k_+JgroQ5(5qpYi,:R@^,+OS_iBQ`iG&8^!I?BY=@f;=i/nC1<(f\A`loQVa,U?,E/V?f
%%>cEhGM8m'VIMG#f7[DT9!g=JHdXM$A>7>s/R&.tC:=n(dKpROp`Md*b\s/lqR0/Dh)!^^n!7m'T>4YjqNKGkrqc/X/F\\6BERW.
%mqeaWSub*6W/>/,dqu=ei["uQR)4gh7+L2l5]h,2+&RRM%l10Ds7i6mM^Nua"A3RhaEWAMHR]IL4-c]%1p[,4gII8&'8F,soFC>H
%^@r$rs,-?6oN^NXFF#iC9hhHWM&C02T"tlI@n)MkF632=nATB@I$`=_.[ZIOfs<81JAbR&@$kk&4m1uL\13.bTX,J`en\ke8'A,5
%-t32`hYCUMW'h%/FGmsV73Ru;mRPUsC9/=8_0)BfG)#dKTMk4YT,8;+n[=jn!AmeL`smXOVL<:+BF*$HG9Y?6E#f4<5Gh*ACk$Pi
%4_oD'!80:b7Ni/ij49u<'buWt%7Dl#'M5B;l<p@QItVDoL*/4;6(GdZ/j7^V0n)UBKdR@kOa>%oO0NtRC-)KCHc@ccl![)e%@L)f
%`59YOE5KP+5GV#TIV7`Ag.`>k0.0-?NFp4]4i[K[,<O7p@5&5Ga95KQj;T9gAdki\K+-6IfV?^H?Kh\h77XlUa-04GP9qBY5su12
%LtM#!nNS)'V5,J%3V1="MD97G!E'\f,V5(S#B`07k@\rQLIHZ:e8T90Kt'LAN!D`uY4%U$%n1!lL7WlQ-;#c_a_Wgdj^)HZp8;K'
%+BeZu/)Cht9_"/4]cd+;BO.%N%WdSt%MN;QNto:^G#>Ij=rt+>IAl?NY2=2n"/UcRD7T1QW&>/H'2pV`N5nq\>@b(tV<^/fN$^m_
%@DgaQ,mnLsC.[\<f[7>f($LcXLi09S#p3RJpUIFLdS.aR*Xk?dcbAuBZ_'/9mg<*@!up0raZ)&un+r\#4gaAp4%8@8+.60#Ea:rV
%p)5/SAAc2#l,m(NOs%80,!0f=5e]AB.D#iU`1ePEX%kqs(0hi6"\*ZVY4C+?)A._B7\G:hpuH8D:Wm[,m#.g8,8I(42ADsl0es,g
%<P?C#3KdqJi'lhMNdd1k>!4"\EmQnk):Do?;"7G4VK1"p#-&YQDRT;PZ82p;Bs9#ndb`HeSS71h,jk[0+VKbm;a\ZH:tNqbo][iq
%@9aaCh_FI`h6<C5@qIS!X.>#fj\0Bnf]YD].'^9E,lP\9qt6Mfp0.l+F7mBTo&g"HNXX\S0VX$<!#.8R,ammEB`KT:dLC&\gNO6c
%*"d6mJF0/nk;.5uK@!VY!5s[WL#d%[\jng_[%!>YW)R0OKC$hc^+R2dhclr;NhmD@VtQ?mL*uF;O`L]n2PnelD3A=]0iAeLR@^@d
%Ei6`]J,Y`b(/eqNA.\+:bj%oLoT%epjMd<W;r$gt=?Ms8`pWj>(nnXrO!Q7=-*CXhQn*Hc&&*(9_,n42=\$egoE9/prW1Z)<Dhjk
%U9_$GGRd*e-WP+<p1@@&K\Y5,'_V*8=6,_>q!5OZqHI\L^H99sXEgTM@+3gO#MBHKPI@OH:uOkWpDKk`',YL6\2&6X)L`;lpl',`
%ro,Qh,OJ&VDX#X'WgAM*5p!AD!TSLh:Q4gIf;S'P1t8XR_?m@TAshPD5KFV%FKaGaR:lWC6='bfn_kBrp4W'bQTC!CI33GNp=@g)
%7dSJJ(#BJUIaj>T)2L$glFV4n1!4STGu??ZgHZ$BeGZT\8W?Mn@*0Fo]n#h5BPu"F?X202e9r8AYrM@H,)O#R?d_bF#khm5=UuqH
%5Rk`V?61NME$:eY[%%4Lo5iPj#=[9II_W.EH?;jI_BnZ&KU@`\lF+-"niJq%(GkKI.rqP+"kQ-a!Hm0qk8l>t^)Cc7/[#<#dp04\
%%GaS[[cgF\Kn&!N**E@bg;IjN^3]_[J,ue15.q3*^ZIf>%T:XuJd8SMqLQG#WF-ctRRN7NfS3@im)P.fT^Q)=mrttMj,*:%3XR\I
%SRq8DNd0N:>Gg(e[=#-BSk'_hZ(iN]W76rTMI\"*oDB#R)($q+;[OPebR=S^s*>)`,A9U8GM`]n]1G:p--gkM*iG]h%[iC)![!mm
%$&B%:V/XuCQ5_\?5J+Fk>aK7.%-3/YH=Z[Tc<U;6*EhBV72Di6'/bmX>/b[s/@]neM10?_4`&@d@6IjkH+:n6=o4=CMu2ECV=B+L
%61[BY,U0(),T9&a8nSRKf/#PZA?U_6!iA6SMn9L(#2S<+96)\*hB(Si[u'[RT!!-relOU3Q"Q>rlt)F=Um*JrWJcGtlq<X(XJ4up
%#4CO6PJ!!(,Ld5BHaPXo`A#4R?$P;mduF,sZjiO,Xs:gVhE4B-n<U/NPff.uLYGrBjk>q-?@+qGd%Q2hbC/Y&*LAh\Zc3a6&;stD
%r`H:qY#L-P8Xl_iQQ+$p^3]()9L1?A%Vb6-PV1ZC$M*M[9F.(rMVc/Oq4W\C*Vt`]".UoRA2\:0Q8qe8i%F[m4O.@'$G#4ZOS?6a
%22:Xf>j@9T/!",ZZV\U1!IU1;EQj@6_C9:k)WfL\q1Aes\QJdH3onjVa_j(s3Q8^u&)1qoUu-'38()Ka5l=$,4Z]QlYt9CmB;i>*
%o;r%g#0slD4rPg7O+YXXTJ%M*)R=]F,rAM)2o=oHBTnYE,N@EVOKM:[O_.!EDR.5g4XLhVGEQ\pfn;V:a\M)%8`=S1]+om>bWAJ8
%a?3gk=iHbiA<\iEBctqkIcQ1qAFT[=Lb&[1Q0+A!55k+IaX*e326Y6Mc7d!ciQTVs&[q.eX5]I&QUJsZZdKTQ9$<,$r04+65>5t-
%1J[Ts\a^F^0'T9JQ`ePc87joFUjI]U7kBf$B1a@03T/,7=t]gG81bZQl6ko1P#jj#TJMSK#G3G?:j]hj\>_1kWPBrOAD#=3HS>l=
%h&AZ1VqZoW0]o':BGqDoTG;Yn5C#f`VDN7u2*6&#T07J8*bS_?X:+jo[W(Ra.a,)Yc'qnPPC+R>M!'D9`"'$TbR*C)P9lA&2Za3d
%UTjT&Wp'TI0$[-eO/qP;(+jhc-dkH`R$hl\)Xh3FZs*Y;Y`l!`e),Qf/eQjDgAXQuZ(G>i=u<>GG[3[s>\YZ#Vu6a$_#5PS1VJ_$
%0XJkF"YhZU7"!Yt*XZ1>f#U8\FOrb$pQ_Pa7rAM:olk!E9lEK!8BNb6q8kg2=AWa#S2UMW551W4nDbma.Jk?MjLQ'P7Qf]aaCMiG
%,#%ns_'mZrL5j3[;.Gh5&os(k\-55/J%B9X9sueEC"sV_1eG:,;Z)@@A0UCh.ti;(*]uk8'%Ft:*';.c-As0:Z2aCrMHmjJ*-a!!
%;pn]P%o\.t1OY@_IU61&8],m!O\21&o?,`^h&_rqri`k@..0/.SELc"`7bk9;Wr;jT-+m=Fp#Q&Wm!'@VG\JDOIGsWP.dXuE1tYN
%&])OP2m+AC!e004Dg;>/#%m6^TfYU["Y4@k<QpUC)4uDE'_]ld>fe;@J[L.IdpFd`-)oo^.1N[=g`&&-K#/!qKOTqBX<"C$(C?nN
%/>1$P%.R/2KkG,^[04,jq3`[Ph#Mh7`#DPX]b)#uc$YTq\V5UU-Vo_0AhV9u"3mptT#nNGo:NJCr+H4`VqFaL7M;N6Ro891<bjt:
%9(>'NUO4!H'5-M-NZ@]]Q+]L?Ej1X^r;e+rH\&jTbO:&H8:Rl5H`i&$(d$k-M(D3:U=,'%>,`6/o=<?X='cp9I]beli>:=jpsAi1
%B]ElR[+V$:<H#=XR)0(M1q6m:VPoEL[;p]E#XlM9J>B?-Ske=JXR[/8k[p/[jh`E,*"Zd"X=&34*!g@X"[0,;hNC@7*A[4]QGO[A
%,(k>;aR)%iF]bG8RW_n*qr8f'i9.[6=UL>8qW-eDJl':jpE&Q@81CY=6#cDX&;q&Wb8f3RJ',jXHV%q'N\&h(-8e;j)Z.S#+jKf@
%(7laldo/^FZ0t3mdW$Hg)$)nLG-^qfm5j_&q%4':_<f90aJrj-]Y&a:>M5BN0JY,HLU2JOGK&pA9;[G>\S*6g2h]6kMF.h=#.]4Q
%9D6B/BODN7-u(@%?pM'[ZmZJt"+<eYqioM0l311j9&X+"71O&&=(K$3F.8F4l$g!Pc$mj[A=GG\=6=M*;!!rYdIf,+>RFA@baO;J
%Bt5SJaKN2u52@/3V0LZ6$O=QA;\7hUXq<i)enU*PH[slDGp#2YIN[,@"k5EE^Qa3sR-Je4OV^OWXC=BM\Y*q5j`]nD%oqcX8+U1P
%NqO_,<\'O=USbTA(s\A58<]1;Oj\0GrM1D4p%Eu?4o6""DuYe\&1of$#i1sW\mmpRaLgTugR.'#Nub%^kA?+>X<MFuH@+*<:>#78
%L7+1ia\0H_"M"2YkjPbka^!Wc^0j(E@9\9FB$]BJ#6HM&R-1"*c]d)9]MR3(3u[PUcdP(qDGJ?E)>)A_WScf1QRj>M#cu5`f9&d@
%K-5r'-YaY)*6`7?'GrT:ae<CPKiT*A$K`U<<Wp$TAdFhjH?+d\g4a9QFLe\cc'LG\VS)!k4VnV3aVP;qr\b_,UWr:59U:`6iD31j
%PdtfiP)1!]jVD,O6Caf5E[VeaHSYG,,I;H&+($'b2C"lQO.9`#=8C]CaBaP>ad8XjnVKddrbP`9aXc\"jJ0>HZHo\c%</r,ErAH7
%pPc?'k9+0t2tCe[.iQ!Nd!*s74joZ=P;$,<=?jP$,Lc9$cnj18@\]ki-s!o9g+YA'Vn+,U7B_4T67!EuP*:$soY`H93SSb@X(@iA
%&X"WRmO/gS/2J)gN#q[5@^r7Ee#i3j?++u"U4M/g/J`XWm!?"']%OBc_ig:ZK.M_NJm?&;?;`du]Usp%^a\*G;OME0gC[0EPL\aU
%"C:1Jop')C4-Vq^+\N/RAs]hi#1<$+fsDcGFrcsL9s_T"MKb:eBfh1)V8i^1PtJYn@l2ltl8^]nnC:-TY:1KnE[BB.mKE?TC,V'(
%(Bleg33@Z4Z!k`Ya2dR:!5C@URZF\AOk(\lZm?d(K5.5+=Q$+&LXX(4(82kc7mN+s)mUYd2<=OrAbta+44u-ICug^t_-Y@giDW"s
%W1<3.fd"aUZ<:bbYhbOuYkmH%2ku*E@#[l?'?0U0,/H+LRtrKl)@g>mZiqU&Op\jRD@Sm6<Z)nMa`]u7WHn'OQXgCuHLu<K3&4Xu
%VlSdc3mpN)]XgnWT)b"eP<qu/`i+jkg!FmgSS+uAT#Ztq!\X:CZAfRm,6_C'FOE<HN,Z3n;iJO&-d/+[&,]BD^L6(XlI7tD-Uda)
%-XU6M,G[StVV3gK15$t$hF[Fg;e@&_)5:!Y7E-3-]lQf`9(s@PQ9g_1Ym/6R41I??k#Jg@f2\dMc)ZP!C:R#E9Xg1:gC(TTa@Y0$
%^F;A4:T>[.r*UO9BM&SePCoN@e]roHZo&2Y;PmN8dC&UN5GGWm2q0'mPP7JA6`m3R9UCCHW>Zk^HW%O7Dr2:8R!7hqo7p]l&j9G_
%0Z,Q_k6\Fm(Oc"@[HtEPb=EV5(=2T?]]N>=`b&$0XpW9e>TpDC2oY?Td]ZEa;iu77MYdD<p^cJ"8=GH]"UX=H1@[tb_ucqtP':=]
%H&q<M;fq*:!Iq-hpD`h)DVS5gPpD2T0,V/:94CbM81[pJAOf9B=p6K;-*_-K9R7hp.7bpli@6qE`sXiXeRL3p%n[u4m*_]("Yrps
%glf:ua:/n;7i(As"o!X(VeFoUECp5K^pn?Cr9qTK+%6$blc/mt81@``rF&=G65p2).9\\,YY.U9]$o9q,'R>&cl,-\Y.T^^p<C0F
%IuT\e-+Qe=7!t,gJ&YFN_a/-]?1(FMA>44_[$/.ra]Rg7ZC=D=:CGQ88LBl6L;+uIc,m[;.45s<P[#C7+#I0#q/lXE"cPh>i6UcU
%SR+i)[cG,IrnZk,fP5Yh'Oep[_2*3X]HZ)DM/rU\KUnNJkD;TJk(26\IcfU",*@G<3k?)H3NI1hR=$/PP52pF!90/O(NP]u;BV+C
%&?)*m.+&:K<YdBuE8`&dOXNd&M+!26g;*gm:cis%n[pY-(7M<s-BWkhI*Es!Db*4]`":^)d.tOL)G!S4iK0[>OD6*hXC-.587X)<
%X%76K.dAq$");,pe\MoU$uu7kM*uMlSNBIgd?4l&>Ru,m:NK!WO>-iEI`Wg,Sfu"':m"7Ym)Ng<nqbj3#8_)B$b^F(NG*kTWH#[t
%jcl-ilc+K<_>$<rMsCS4T-2BXT7\lsWCleLl+,pfXTG%Y9[&_ZP!cTQ:9@r['U+^<TqFUKji#R==U!P43CF43#`YQPj:JGV#L\$@
%MGTMb#C57ZSbF:+WE_AmO5pkS4(gchDrN)gj:Gb/O?k.AiujgRAL5Cr]TfYA+&[df6S"TM*@=F:>tNaQGA\MITQMV`H$K84<$?dr
%mR%`#TPl$(LkIGG6[!)$kAqg`mTSq3>U:7CHcStXI"VlZ4n,IY0)?k&R/XSf'2Ng\3)ojn<P9MGO?@V-'P31=$nM)C9Er`^;D?V`
%"goD^6`C8\ma,2fAKu/u1=aFccNP)XThYX;@Tg4T9QGpN_U;*Fd$>Iknn7OYM@7[s4/?8Jc_V+TFX4a2nuYjqFg]jJ/L@j$J>^S-
%r=",<)cDcQ;clRscar2S&-6dGjTU+YC\]U(MYN-'pcDPCIk"K'nqORY=f>]hlu3%:otM1cWc_\%A\uoNndH^Za<Z[Yot_47V0VR(
%e>mcKU&7^FI(\*\M,^5/Q(N5t+`n)J+dhC$\Z&\alUJKOaVmc`/A@*SgW1:j7Pp\jKKkPK'RtIud!dn<RlsJZQ/isrTq>d`mE=s/
%cs^:=l]P=m.Hm82&>2Kp`t5gpl&8mYX<VgO>BsqVF+Er]";b^&c?_7?j6iV[1*YKjZ3Ij\>"U$MZ`j(?g==RAClRc])\g<s5B9oY
%)YqVV'tNC_50)2P:asJI%XeV`k9>/LI.@2Bgs`YR-C`f>[5r=sE)2fD\:iLa@C8dUA]a"b'+a"ji%!oB'+7U0YSuk(hUAkNbWb:&
%\%G`S.OgufLB2m3DWt%QO'0Zu62Jf+bM4dq%cs&:QEC=P:E\k!C@N2UgsWTVp*l^`F7C#Y\Y[J-PUoDiJ^!YW#=%V()JHBY+"d[M
%"Q"p9K_K"ScnTimnRBR-&U<Mg4hjjnL!(=NfVT22F="K@2-k!.(*Ck'RDDR&'!D?7?MY9d]u#`G0\&R#VT3bf_:[KIY,F/5#k$q4
%OS>mEKbu7g]S#Phi6ZL?f4$9=QZX1,_)3%f[Wuo"RDPV)d]n<Dem4HskX#)'@.gL(*ACl?=dRD,o$"WL)\hRqgsrf/g8KEdf0J(o
%"aakNV1%"L%Q0QukQu)Gr,o(?KUT`Gn)S+:.dnANc0VG"Uj^nE".$6r5qNhtc>&HRE`L_CcU!a[?]a?7hQ$j(W$8sQjNUUR.OG?[
%H&9Gi5j45-;Q=t=ke,t,jHct!`;Gdr0i1p1a5It?2%;49`TaR'PtY$NQ.t=QKlSp`ao!W3C5*^l!EZM.'4dRW-b[K7?momr8RAG?
%9ioK4<4OKWG8su<ckKa:)Eno7&:+DB6Kgc3(8QqO$SM0pl,Z@$XGr::^Vq`NM;TcK8?b:7#PW;ARTKLV<!EAJ4-s>mB.nF1M9EG1
%`L=s2>Y/aP;ah`>\X[H?AH4@GZ8:[tPi'-]g<YdDTE]WPK)ZlP*k7W]Uo]cRgs!0n;(U<d/G9lH\$D7m\=$!P$puGQL$7OXF=78t
%n0[Gn>WOfT8DG1bA,$CB1]0u$PWCRZUm?[*ZS(,fR1u^LLR(%PHfFA'0eVA3dE+8T\S#]h$t0QdhA4`'aQ(3+1=GR1EDO.f"Ud+:
%]$$ob!57BMZ1.'@$c:/LD_2@%4PJ?)TcXa!%;aB5i6X6`5jDjI2L%YE"YA0=4(K82rcU.'+s;OIHPj!/EPXjMX?s">Zjc#b4/YGP
%EfMCN,&C?*+:()i##`l9X;P+OJ]Ym0=fHk/Ur^$ZI"k%9W-HKTn1ClQO&t]?'LOM.Q*eF4m4&aEMR1&`aS,P=P#4(?\ZT>g)_=le
%?pN#_]EEsCW0[$Dql?j,]J?Qo2_;qp@gk@A:]%[aK3;U?)rqs>'qujnh!@TO6N7N0g'o*iRMnN;NjB!+2bQIG/6K;*SK!>=.j[*p
%)m9Z,KQS=t"SEs'=:;HbrM%$:\%r(0Gh^n#87C`O!0\V1<4-ukmaT=Ni9YCYAmg7.nf7r/Lp(@A5'mcd$_Y*R4&Ub,_?$26%K[B5
%fRf4diOD0-(haodoKai.D`2Q$-\^im627/gjGS%FU:nF,1m#Gb>\PN<LO$70&\;B:<#7ob=YB'1J.Oj_j;ldsnmA/mD"$*8KA4cZ
%^MtB">/-7k[AEDp+MDlT-b[@PSaJGqJV?_I?84E`0+nQ](0^>ao@8k]A,Ac,;_jQS^bC"D(i*?"4%VeK&[Ht\E8<))fmFE`=m2iS
%lQXDs4h:$_m7@A[LkR<\TK,sp)^J!#6Rk=ZC@#tW(?RS[;EJ.UH4Kb)\^38T<)&bKN?)j`(\/U6E\KHcWQcAKA$`::D?TcLem_-O
%?`2ViV[$;SB#P^?]5'T9J\bh[W.7-Tdn(JcdU!@9$hamRc!USe:8"E.UXGB4$AN@?>Kt'5ga%Tf%*7)qK,V>O1K*L:1!@W!HK%&Q
%-iqtWJVI]c2U(Oj<0fiKP2o$Oh%2/pY.@=#G3oOD;q]"?F$U&?&03>iE)=r9;ou7'(Z,0k3*^)4[M-kR?Ed,db%(.\WLUVuB&$3C
%87s#KH(84+%D't$+1@"o2Rh0&^5k3ZZ,'-OlpBY,$12]A]1"O@_LN""V9:;?Bq0C1E_5;]_jI[$>Tn3r/qdGJZ\IaEpCVCfn-<I/
%?mc4dmNdmR+RsN`js:&hgd;sfdrbPdE&/fd*?68cLTiWo,b&m?Y9iX`gAs[0Gn\%20F8hm9aQ'&1)\>92etiKb22NFi#2a.^Gf@\
%!i>F&r!6m,"ci.9>a=Y:`LR8_V;O$+W'^d+%DJ\#;*_kAcAI(agC:ln1k^],9h&Xu2nNW[LSVMI;6C$`(0^rA:SG7Cr\h?,#N9RE
%[LG-B=pj>^)Fpr(O-HfSbh/DgJ.M;`NTRS\8Q27YURRe2RZqQ-hA<=e&sH81c*n-j5hN%"^@E<M`*<_`TP(g`EF1r=0kq],>q>c5
%k?VMNZ/.NUA"fm4R%4VO*2uB2d$e5L^Qk-,'WQ/ciU!GkT"IJ7Sc=Gk?+k#A2r]7Go<L%PH%T46C6OClY"1I$3II/t/%k6p0+0Rt
%V;iPM>L@Tsd"'c.9,<Q^-JWi1m`sZbn05.9LR4+A)qi`urfLL\UGn;Ym,"&X/(^<]W'>0$CPJX9dJPdQ$[YZ9Ap=O;iT2J&`@=F9
%`Q4<>\KTR3Uk1>J8Lj0:'<m:u`!]YhnXEB1_a3g0Wj)nue2HkQYLGuE9M9uH0\(6%4`5(-qA1j(O$(%dh<n:QU92g3-6V6;T,*JG
%EBjdHnn-gsY39Q1(E^+!T^^qC>k^6pZ`t1;XAn\G;/Ji8?mE]l"8JZ,qTJTED?Q;SQ0\5GEZkGMptYl=#eF6;TZj;A'-/K*a\cki
%\p:k!3,]@!j-t5mFYR^)8BVD@h*)ckm2AI]'<UQ3aS7,e]0=N+:iG+JcEM`hcq3Vf#P7KnE_$6*+l,YV4cEJ::[5Gj,TS"JB1An"
%&!h>XhoXWf:c]kLAc20rT?*#I)4MS][:`dt$p1?k=n7`rW;,,+%el84@(8Mp;;4`,1I#qN'FZG#(F4iXnj]k^?>$[.R2Oj)\P[-^
%^VQY"aDtU+)4-(pOl/B5T4I=T?dBkr)!g*6n!b8?L2H2:N9l[jZ$8F!0P(U+LD&$2=_*R1_DKg<kQS\dQ\HC!rD,R_6*gER2nA8Z
%ZRP+ueh@+QoPmgN9W>_P"Hi&#a\<kDb[JIJ/([CQ+`=W&LDgc^eW*F]Mm"&3P.^%7Wq&j7P_q3WH*m;%U77Q@mUH9'1_H:!F'3Ao
%V0BA^(0Wpg^BpcpX8Y[VP_L6)_?Y>+KbJfs2D]pa-u9[UgJZ"O`_15L,8RN+.sR7[3_:T,@(A5k62QTBZ;]fg#Cc5=XVC1)mOZM?
%4ONO\*5<#&@8_88$quG,q[`r+I&+<C(#Xr1,!]5@@#u![0$+Iro41M#.UU@EPJ(;JlU19XnYs/;%#'ml?ZA/-Wh=C=D2*NSUriC^
%&)H4HRFmR)aD^2uYrXZ/"XA$2+OkFnH&)[t5u23dQ7@5%B5=RX@ZNIiDIs*1BeV!_(+pgD$QZI/\FO;s'Z:J^1qtA3/LXC`]HBkq
%-gqnl<2@e:\(T45J16-tU51KJ$9*FEnt_#k%Zc+Ia*rGLV#AT'H<InnBLoo>T>lJ60]5RSm]M7[*uBg2UR0DAUfNo"e'1-Tj$8,2
%NYP0"hP\.T]XnlnrUh>IInXCL!$<#?D+lT.gONU$-7!gu'aJ:i"?a2-6L!!d0#farDUguna?EGIB2efN%9/TVdtbdncZ5m9?GSlR
%/u0acV3jT;a-IO'Ds:8Hi\'AZ]Jj:X%:2?W5cR%,5p;Yp,F2q+f#/*YM1)oG9GknYG$LSbVa::C687)gIfMCc;:I=hk\(?pQ.$%i
%9A<F@\T-Z6C(nZ'%F%_qSO\Au:ZASHNp#k)7K3#I*o<;&=am:Yq""f\7:umjKUpn6J@AHkQ(<1/jLmD*UjM5e:is8('A'^L'K32U
%E^cpDpV^nOA7.2L0"X2r?IIOVNfnBri.P4e%Wk(0i8r_*B0_i5,5DX84gc4c2t%pZ3[b*GfkD<Ck+NP&KD1R20i>I:]Q?Hp$hqa=
%;]><&M"bG/T4*#W'AT&Ni"]5@iU-a/&<8D2Jem?,"@G/6"\6\jZci;Rer@U*R*O?&gb%@Q<[\'Vm+bsh.mH@c3=m+J$M'#.SSO1,
%6O069Ai_PBaZb7[<nscG#G$j-VV5QkUhts0jj)W8=SlL!)r#B*ap*UW_'4]F(C\5f.'t>h(0:hlO1KTYS?TM-DNCJmns9/eO=n#Y
%\3:.#hhLs&,s$<Q*#A&Wh7+k>rSfIiEW%QDhHc=(jL_JJ0Ll2Gn,nL'Y+WB/DnT4f.mS;Qk!4-dJRAsuR5^VZ'lQKQ87)#%%=CN^
%2][;hGCfB"IIJk.%g>rP_Rt\qTOS8`kHr#5K^Uip$uQ0%Wk/k=bg8L\i"_j'h/gDo$85t(E$`hRa&<^:j1Xf6KJd^qnWtEheWQ#8
%hp>RQ<Tq0]=5N)1!TCW%rNcq&'QW]5potsYK&;E`?RG,X0J6R>3(X?QE#K"Y(ZpIc!L6YXVMe*I0-,jISEHHX.(5q&]M=Ha,_%R0
%lA]l*`9$%<V-gQJpS7XqSm!O]#);O5(?Gbm^8DWQd,P+#%Cjdger]9-1B]X?1AZKN44J<oG+)0:i,mb"6!U]$IOK>0Kk`5<6P31^
%%:YUtPeG.2QoJuXNS*s;-5f=CT8hbXHFT.;#ImA,]BF^l%j[K4^_Aqcf3BVM(8UYH+Yd5*.(SO<-_5VKhXg9M4mW04Q:kOe7[iL9
%.Y[$#'FZ;JQH?Dnl/^L,.f;7r-$?=8Dull@ar?euUWW\8WcP@V3fu-[plR\1H/j?r8.%%NJ@hmQG]2YGDZ1'T;h_4E&:/Wi94f^%
%gLMEB7[Ge^@%Fi]mOuhf>U!6EiC_XOQCH"/:`\aP0FVg9Fof[MK/i"_WqMMDo"-F6+@/'I9fRTarHcY^#gD5fk?J9&&_+IP/nqr[
%ATW3XW=apqG;DC`M-`ZU+*2&t,h33PbeJKIY08BtB8UCS\G^$Ofc:*OZ;p[$$k(FQE2aO?>B!N3K'[hF/IdAK3&kZrMlK-rj,.'_
%`OU77XCTcs#gG%d3)0;OQjDLP[i7S3'SgAZ<%0+VajaO"18eNT?\HqGZiGsMUrFu-$e*[HR:VPk?LB2P3>L6k08^D(0#t;2j_63d
%"P[?47<,3)^:9\>L%R^$\>DSIO@E<4LEjR6K%L;$[),WZe.D0nNoW[?3$Ztk.;t$;<9/EU8BYN$-l&<F")YOU3,sRjb,mu,G.?N-
%3GKeOPZb_R[<r&lmtK()XpHoN?A,C%WdqYJ%lHPYGb^"umU*!(Msl8nhI)JA8:P/q8WXH^L.XC">3BX4TGRt&M#_hufUhh,(iQYL
%n*N!BijEn'RXY@\i5jM:,U@`,8V\_pl0@1LIKR:ApZ,''ad*+b_1d5J9=-:h%S'7iEY[C**JZl"L!?OMkOZNUNhgTA7-[,h28/\,
%n0o(q,Uk2l2/i0MR41!6'bhCZMQ[(c>magtio_^9it!@>17(M8MF8TPAYnJ"\aZHRcF7j?6/#)qc@d.j2s#dC,<8-Q%elf!Q'=@^
%3ZmCVN+/-<'K0>b8VnVc%OS[+c[/+&$dc6?'d_rCX\2*>J]PgPYIZLh76rOTeHl<s];G9"P+:<&/1FX)I<)n8%LO[XDWulkY+h2N
%SJLQ!(+0hCL@G_bU?#Y>X[K#,c,beWPe8,:N]8Ld).X5uP[ZYpc%*9bbUk8PWCeeA&1Ap:=869%9l`&\+XJH3S>/p'mD>8<\bh*p
%OdZmde(ePiRE1VX_5$'t.hANdN$\9@@nhe3-7">tPh;GBCT;_*,pg!@$s?IE&?s72i.5FIP[WK(AGgWG&;HsR<GnUa8-)::cV1<F
%_0_aeZBL?g@Ziu*Lf)5k)`N=1o_b1VE'OsG/k)-RoL]:d.2drtFM$Flp/+atDnp8;&i3jLE#rl)jE2i+^bR3:.2c?e@[d3jCdVDZ
%O0scY=mhN?mOg,9VW,2.cQ/,Vee7(415J9P$VJP^$QsatZ<O:U0dc.i/?(!G2kp5E;Ac1!(cdcf?[**d$i,F<Xo!^4!%8R.`WV^u
%+K&g[R]5b<a492iiZloQ=IJ33`n\^@eIPD35,)CE0MSX6c.]h)A0:h*7s7<-R@j=K<d%:4JeCE^=`[<"^u-A+p/\c4R<X@9&jq`b
%jTQs=@L2P1TVPh#[,V^ng!3ptYi*3:RM\VU852Ee[$8dWUReY#DKqE:Bt>RES4In"]Ukp`b[@3X=[D-bN%?>BPn7nDE>eI<7$frW
%6$j*1U8;Dp6l-g<APu<e9M1&qaCX0",g"i[L-<=Wj+UScr;h)MBbHWUg_jp.p(;<4o5POZGiZBig$m&J8TJaGStt-a%FgRY?,5e:
%m=`kierun9,Z^qE5ffE??_[fNjWk%>"`bH+j"!bfoK&uF6GcJ^1b*s-Z6%lM5o++R@n';K'/0jZiJ6*t=%Z$*PEf":Sn.oX5<O2s
%eK[UdZru6LZ%aA$k+S*2]TeX/R'_?/f4`3Vcti&pElMFT<g;7N+TIgcF2jW1\A3t7gM;1h1Ad^`8X2+&!Y\=K-NZnsGXXE1jX:go
%N1?<?7!(O^Z(S$+'d\QrSpDC%%V\>Ch@=_>d?Ql>Sd?c5Ji0n6P,6YBHX9QIC3kQh")HKArDDNV.^b7@QC8-KBpR;NILT=W5P1Am
%7O1]V)NJ6FIV2Iu#3X3Rl"P)DkipH*C.@!UVjUhEk\)TMAO'*aab#8G/1GU44%#1mM4S]j>#OFIG&e)LruflYGu2>Vk22@=pbBuh
%Suf]I0Ci.6Pa3"4Dt)2<1@dK@r)e,=QdV$PdbsWKOtuUZ5>N.T"SXq)8b7NBHu^'N%!Zb`@6Z_#/h--8Iq&\m/TO(,D@$5sf*')D
%Oc*WI->f,4lr,s6W^ptul0+6Y`?h@-0(DeDnq-6"i5I"=iHV--j@+;LAK%o_dYH4jX](*6g^>Xc+,)Wb8T@=ROp"q[Sc\^^>hd'/
%7lZB(L^9C?f(-+SC8D978^XgKpG#+lQ^B-c5aOk7X;@3;go7$e,mrN)BtVe:I1ZO8jCq0=6#fJY4#9uDEe<U@LO!m]JPc/>n;1#P
%6GTol9#JK3ljj3O1hmhnPa3,3mh"X_j?i@an"&6<fK1DE7WLgn>uK#U>XkuKf(4Vh#;;5)&d*-7<Ecn<g/C!rm7^=alW.1?VS)@G
%P4dgtdUA$,\>8'Z+"])oCkO,9#R*@-X7Yb>j2E<u(V*.XaU?*;PN!2WEAOG?k/3Z;&\UfVZAVBB:R7/[=0*RTgStXR@2!RWat=Jo
%m2X:n=6$NnUl;t=Bs7-LBXZNYPjrbV<]h.a=eX-8n7l8DQP@!&LW(R]USYPtnBN+TQ^CbAh!lb[HdLAca8e,Hiiqe0[!b4e_/R4l
%SrEtS-flX'!$=hT*[U_j?;_iS)#;hq31H/!PU@n&eTqD@oUj@Xp%"91p8BVVKVBQ>`gO,ZnTl_.J-SDCO4KN.!#Y,RE\3Pk'C@4B
%`gYi&'DGGZMW<C:FQA=C<0Si^;.3@u9J:L[O`fJ/5tOPG2cGH(+<sJW"F2^hqX&XPUGVsrhN`M>kf2R=-:J97h2!d<K;_\ZeTcq7
%lGs$-Gst#4-%1V5WrY=+](EXG-tlBgA9sT6f,U]I(XVIK9$c'?mLE!H=q8!(+Lk2kmT!6Ib>TJB5*.--/J5MF%hLLK]h:^4p$A8K
%jf;6.iM@kiD`,BJo;61Jgm4N`85gi%WB4Zf83r]-*DB%FClMkD,ft#dp"h_b;uB02!sDg<HI%n^E7Pn"7!mM7p3H7PQ%R;op0*[N
%,ipj")8X[rfVCX_s0W6$$k3Zb-KROo"]EqSD+^g&$B'%gCfqfceDnLpB)LS=.TW%+iIk3'OYO\A;/N$cQmZ[!1"C`$B>=D2C6Mmd
%WAZ2GpRsZ1%&pa^cFqG<5asVI-=_#\>l'#D]TDg39fksD2G7=Qf1=g;+$Vuqk7%Z1J%uLYPiu%DLE[?f!FGLL&'^.Wc3?B65!P[j
%hDj_De;l]g>S(/7P6DeiHElP,N4_VB"k#r<OsMKPV`;mf^!NOqCJM<MF\>M2Z/DEOV"D=Z/):[U[rJie`Y$Wbd7N:#KDK@.YF]=B
%;Hfal=Htk.+!>*DapR^*'+E`\<@<N\\.jR0ZFNd2!,TNTW-C/Hh%m0(9`Mo<54TW8P;a5VL;<qRcl)KVHKb.q8H/JRSGnh[POB!d
%H>omoN9J*WljP3i"1;_E,>#CGE)Vl/[A)WBU^Yb9*B0pCe,l[%I5J?&S*7er9/I,I/bs9>jN;8ccB/6D]2n<9#T6Z-q\BCWT$Oqe
%d^S]_=X$)bdfq9XU6.A',5`4f/bBdL2c-@0U#um7$Wh#g?8RI$*;O#Ep:D*!Mb6i[i#Nl#D-,:]VR@KLou_0E3SB=^TL]tL$TW_C
%fU%lXSJob9?CEu4.quf*#0N)uRa-iPijBKA/,Q;b=Q:-;QptAm9CX-OCSi@Id?f.`QX""_dX=E?+`X0Z,Z56[?B@TD&_c2LC.K=8
%6kT_=9HX4drKjehZEaKA".&Xhh[F&mrpMNf%[<5b/l*H@A3rB)D3<$CgV"NM,?'F8YfPn>geP?c#FpP(\k9/"V@M)pScHkFW-Pr4
%J[%cmAlMDU(Tfn(TrKCD.&fkMF2\t/DJjG?^D:7HY]1AQ5cuF-dfYlCaM!#C*N18CKT<cMZF)*W6o)Fd&3IejJQgF88i4NJKT\Go
%jcUGFr<D6c>$(%`@Ri/>S#EkF'!6CE-E1ue.)8@qW&GJXnct?P9)_(eg6L_0<-E&Ar.3#6Yf,-sn%=/t_(3-^-.uOD2\VPDb%>-h
%:(NO:dT*oba/,@tIV,$?m)gIh"NG/#gQf&i[^;eZ_i^qC/`&8C)$C/j-YXG$7BQ]&$A$Ii664'@+YX&.]XW$J^u/pfKOZK?9,]I0
%3-&R8(f)8&/!Y*$&A2fE)`q#tr]!d\lA]]>%.dKUUF)B2[=E?EF.a:_:O2'lVB[l-,SY.B*2k0Q?.,4BTJ?o?r^f[M)L%'FJpRQt
%/<k6/HaKrM?igW8q-B.BO;plIZ$Y`\)bA7$Gln;=$d8tekiSj\(G4od]m8@o1(GY)kgQUpEo"Le/E?9%!Gngt%+Lb!D3*/s4)[Op
%h1R*_;[/m-M$[_H%h9&0Cm@ZZk^P@Lf4"6[#G<Vu*A`mSY>!YIFUFa[a>\4Tbi%'pk+?'L0:6Fo(eDKA_%.D!hR8\t.0n0;mk$+j
%GbQGa.0HHaU$BU&jIEno$j`.EImM+ga*Os"cJ>)b!p`4nJ0E7Z]mQ:ait]cTW)nG"Z?L0$"5*[GRhAJ,OqKEdQ;p[HZ,_NKaqj;6
%(t`jcC?[liTX%dK4\fRDpn=B_flpBmT!dL$.9M(KhB0-[LcNctW"lHbj9sJ+2moOhY,Ppl_FU0b[*!@$4>R2k+EWK%9LOul(VA(S
%c>W)AYrB.)anGW^mp+bFHB39%5;)gT95C&o^&MO@]:RI*qXL3WO2(Zp8)("b]Cgi*rZB*QXaJuX19*hTFua'A/KAb)iiWj!1koB2
%>fjQ$:Z`M'hmfql=);&_p`6]Qf#$E2p0:rQ<BunKr^7T?-g]Loq`qub*R!Rum&3i92upY/$[[T\eF0#l'ntC2=pWLqZS+><6[f7@
%Q/d#A_f=Qh.g1oSk3ub"+5#Sem9GBhTb&)7<EI,TF@GNdn3\gUSaHg0bt01hE'Hm4KV?5S\lt=<nVu+;G56hDS<ro_*YIc5\R2ie
%(jbq6D;3B:gtl\s-fJP*<4^%$;mE4s1-K+MqnZB\\V^MNNa3p<j#25lrQi!A"ktS<Je[d"5V^=F5Zg#s&7<^F8G)[@&i*L=[*FBb
%Oc\\c_;V-[Cgg[7&)aX0%]+E@^,rR8"TE<YnfR5ur7f!c<dstq&$'T\?U"!5J%`Ep37I'NiR@P+Ec^O%C%WdsCt.NIA_2scU#XFg
%GCKR.n+`e&\,GeCUj`(!QBg!GT6XRE<O;etT/#9=rq3c#pt+F&gL#I-pOE-YrV3#ak9'`g5<9IiIf);)5QA\N_i'SWp[2fIhO?=/
%.r6cK[a[F-^Q$glVL;1rgu%!Om7[61NsZ7XQd<0/0@SM@J,EjVqtH<Mk>-QPotZHO@@*_V6a<s*D'NEQ]JasfcuS+T#u2DV%.TWQ
%)"Yol/=lps@sA$j)R@%mAMd36mGX/\O0pt%rUL_;p70aeoF'"$8C*@b:\J1/9@r</S#,jQ/_h5$#@asHr>`*%s'`YV/6J!_Q]anP
%E*]j#@i23fG&$9Bmq6\=%Ya?6T$/[lUquflB)^o;gFHPcdt;'J30D,H_i1'Q7tf.NpAR5&-JN/'b;V-;N`?qIR&A-?7tp/gcPmmQ
%W]5rC%D0qS&20U0cOkMO-OoT\!!:BP$Y2I\n3.`@C:d80H@;*:#Od\r#+Rk<]63MR'-jO0dCtGMKGH#Z].Kt`D_+kKhs'8KoY5>4
%_8*[+VOoGcX<$2)OO?6_AE344DSLfZ"rdEQib#(g*XIU+_;']<k),D:ks/]Tp(HF7XLTPPYZL;IE\(d_h"mgu?C\PF&dL7T=Nm-I
%LXj(]4aOuthnGLAFV%cWBrNMk#j+0!a7kbOaOf,@3/?1\g4urj_)<"d$PU1c9$6k[G=DSe4T)mbRTK\1j@ge\'m*ieZ_[Md-X#Op
%s-q(`Ca[gQ!I6gJf]c_0P7`_7re<pm.dH+ER>,FI$01',otZH>2S0%GOE&N9/2_EVL`8mO-NX5;k?\hlhI-"R\8pGEo!Z:X'&^QS
%b&1jla-^i2>cp(-aEH4U@g%#RHR#jXZ5%+A@bS<c*f1+.mOF`dn5_)=O#DUZJ[mT,*&(%Lq<aP;[p7/2P.mj3H'*A@JDH?c[9H)t
%5!IrqiX%t)./phT^f7"/Bp>4(HclTJh]BPPG/nq^HY)rDq]#+PD/!JDSNfhu3NGGhhgkZh%=*er2\@^(AWE?3^E$i!Bksc(KJ2V2
%]CS9GH,QmHpmM6<WLP&3=&@:pVZ]Q7h2.B6*fk:Y&DLQr9[Pucf/Ej$kJcBFNha#LmPkJi@fY:053"3_fa=t\(Z6;"]jB=so:fNN
%Cc^@TF2-EAb4H(*A.21pSS++A^!2X`MVp[UnN/bocVOH2h=iDVphhh#EfQ\VBratBiJ;?\J&"<o,C223Vru_X5s8L_[m$n8FUQh#
%.3b+j[.f1S#+rb.frU_-nO=Yk7e\%eYkJP7IkI,14*Qe<2G\hu#J+Ql^foe,%<,X-gQ$j'F+0.0@6LKA?QrnDM8pTo^'6Lc+SmIQ
%-*l`M*;WbRpHI/j$VFs%KG3<,"Y<F*4`33Z_^TK<EAMk_Z(UX;*#@$9XVsF&jjt=F3QUZQZG+]BZqc+aON%2*bh^CX@]-1<QOhkF
%DH^PFmV:sg2_jC)2!rg?V]\"d[!:PNIf\F;%a[C&5UHU/R@G&_MIB8#L<M1=RR,B.Ae(u%U1o#q@_tkCMX8j@GVHoSgs:GL4EiQ!
%6`s<2_\GLbhN7qObACJVgVLKb:1sG=AR=mq7PFM-59.m4p85RbI%)n3@F&tpE[/l-"j+*Pi0Hh_?au$KpM]LrXFC+84Q\BB3cMCA
%;eF*k@8>nRi$9?H(h[AJY#]tdgK1I!OT"+U(NS/UosE_:eQhST)=EfO#75;E[,6(rW7\HSS3UP=4F<F4-JU#h"u`O,c+``f5>Ok,
%\r#b#<7JUSrrC$Xqib?!dilLATs,b4BkKZl).\h>p-t[F8A!P@ruBUPN<"N"6j906EObL:3Vh!>r:Sm$/(=<3<W96nlWsL663$&e
%Il>WloBrX?hqBIWn(3X#o<8$WK<]QG(h``V*`N,_VmNbcm?(D`\Pt0E6;].Rd`qIF5PqX>0?]kM1HbWpgZ%+^h_XNc3rb/ds.A(R
%EK/D\,g-%JJ)%XM[oXF\^"g5!CNe'L_Hls0EB(bJq:Yca&(l9LXS;F=rK!SsJ,]cFq;)GOs"grH&*:`@A)d?,d.ZWKMgI@,SAQDY
%H'25%rk2qR?h4V;pMD+Q54406c+dmNairq,L2HA[EU.aMS\o6:hT!\"j"BLhXnT0f4grPe]J0'/<gEC5hD71dTEYr+jYE!*>pB/3
%9>QuVCtNSFf92aE:Gh3s(Re^IDb%jLbk5'&/MeJ+3hY^2N=q4(YmSCuao+CSe8#T,"OZmi6/NM3]6V`2PKe9I,7]6PZY+;HpG.g-
%Q$:PtK7nX*N"/GVAXLrZglJ#TI[4(!kLVlEF+$9/7<kON,o>j'MPXS'-Z]T7eXm+9F(abOC-]AlT2Z6/cS>p9O?XH_UG!lqEF,;#
%:7_$V?Uu[/6BKX+=?I/+VE?eBqE.g2ShI#1(J^TS+qMCNY@#/:`Zjj`6*=u%2H-78A.Ons4IJ<HS*3H##AD-A,EMkJ@eL<q^`N?h
%=KJm6\%>O^N;T3/IbAr:9hEBdgU#^A8k*@er,H\b<AMdaa/F,aIJXlL!AM=+?2-LAk1DMXK?T0]1cQ\m@\8T21.Pjq`,XIU:Eq(<
%"q6QQ7<Y0uG.-'[cl7_"aCO-\gkTW4Ej!(E@^uVKB[0iO&<!mfO:V'.I[oD^fE9Za:4K_H_2eK&ILXqdBnglmgR\S-`^0Mkh6C$4
%mr4gd&@W%g!"T5+_G8I%ItA.%8?:ChNR5GCEVI__U>=d=g8Rf@mR(p?ShYZ0IHKpRTAi`Mfah,*f&A@sXPEp7\qW\'%l=6F=<IJ=
%cMTVU`@2N$48RqH<]8W@l`!c=CBti]m^0T#QZnZ>D^>,<a/BpRJ>-RAfE7Mb^L3?Zkpa2Z2(TGf'K6flf])"6+3S@7Pi#4t&VI7W
%i5K#Wqb1ja7WZ]m=LRtK.R<@;6Ia`p+d.bBcHU@'>N`DulN<'l[s/0NM**shqM;H(4KK()L/-(\fu&-GYBGfP4a<7K@Vr5u0&''&
%pL2n.0gc<Ac==OQYR12d!.ujA)p'I;iVJ9"Hc>(C`I+OWqjUc9A/H3D<7W9Sc4EcYle0D4^c8d]6F$o&rqjTS`KGc.;`O>m7"PZh
%IuACGG^[m"g-2>u@Zg2B%slk(nUqQ?A%:C5iX$=\1\RLqYgFgn9923b]e^rI$FhRo&+c4h:MXmsWlqh^L\2>;J%2$P]:h_/CIQXX
%5o9u\9<`ai3IXMRF&R6SUr\&S4c<1=Df;]<cK4J6,3"M_`E]_hdkC#&$h:%HdRQkhDMqCbnF)Kg4S-nMUqgegD+rOlY`]WBbZQ;/
%#L^5"!-)_4c4F'@[\d_gR-t'dC/\@bWu5uTVD,ZOatlMcQ?Ygaij'QFr:FbqMK0iCM-]oKm_(#lYW"17n*_-=gg7a3ij++KibW<G
%DhU&HgdkMEK;GBg23FT9;<LOXP\Vu3S<Df^7XMT)]-bh@(42CRI_VN0bMiK=U#(S)s5-B^+.36.9iAX)Z8t=ELfdT^25M6A!74#C
%Y&47#K$"eG?Zd=@U%c,L#c@l9qHklraISGX+DmE$_2hlV5,I4<YeO*=l^Jg8dd6b@k^$hUo&isKV6cd%I]<.hdSH1tKC;U\3Y=2j
%bi6+G:LNC#^Dji>TpR=jmi'QqD$\N)=[3F>M"djrQJ_Oh\JLGur4T#2*Cs<HkcZu?.[k/-JREqP5O3^nhL(S.%d&2XB,Ip/?"X2E
%:d:'NUPB+>qS`YjY#u\!Y;&*f+@l!H@0Zu^99mrPR3:FDqS39V707gLG1u>nQ;<RsLg3TH?U+B+ZdN-gFtQFh[pB3WA!`$3^OBAY
%[2B'"-D]>e(;1TgaL2'a5R2\KK&;YeRDQWV#bJQ2BUp@4*@impE'a?fH:mP0N`M2j]j-Z#L[5s!lqM2Tilch#iieuggP+*PKCW_t
%L$dCc:(_4_jT,]=-u#-ZUO3I.m('8OF'?@+/`?$2/"<ZHn/(RHk<e7\V)LNPYB=e,_iRrKHR7"&qrrODIFNt0V!rBB#5GO?U/25:
%0:?*ep`a_?6:MTL?hH:qG,WU0>.p&NQk'HC50;X;=o\)oL8O2,?LZn9=Vf4o0A-'mm'@=:q?Q=nho_3FR>:He=B.Sq(C/mpK-:)N
%b@W!L[Ohujr5#;QJ8o))$U3e=(\V6cl2rB=$et3^O`2"\8H%Jqr9^1G54-E?=aGWOmlB]j^FD*#;e-q'Zc7Fh57]B]^g_N&beqTq
%b`H'gP-k#DpPUD-5_8!EGT0pHgZ*C.:\[9,r7ueaIasm8nbc!m%:(>giTV)#Tt0.<XeL<qrlGSH)u\F,2io8,cfRF(d"!.XY?n[[
%Qd)+X#cT.Z=XYfnU)-b<ij8MN0<M<Z1H2nEKdr<_!7Ffl)aDAbp1h:VI=BN(`Zjc]8&+Y<@`lu>CkZ%t^Xu),A)GAN3lrooe[(>!
%MYEor.6nA3alf^1>;>h?+*<'c3Tc)9(jqOPQ?(40Z@'Lkf'`up%A.7dlsHj.eIS%j0/V.,](S$g^6THE9Lo(4^_W1]>]_X=n3Q*7
%cs-,?,ECDJ:q7B_TH9VP(Z$P!PkF"nF+8r3QQ<[TU+\']HN)aS':72>PgI2ceS%c%5h%s\n9L]J09@7?H:)"^K4ablhP8Bk1l(S(
%3XAp-FfK-u\VK%eo?&M^h"/e1L7.2:%%WbmYb&i^iY?@R]E,c30,m'?n(&-ek?(JY8D-p_gG0NAeR<FI]:[`'QOo!roUC=\75RF<
%Ne8*?Df;"ed$'sB2_KSABD7.bHtUXnbb[Y;4]]6coP,]AmP9;X.[Q=Q"\9/<T1Q]^en$q=;Ot#/7MMXc!S2!)Lj%^K.&Yo;^jT^B
%23LYN%,C^bo0JIrn&88Emt^h(;#c.Pn6Pe!]@Ylf>ugl?0Y(G\PGN"C$aV/,e,H&&<E17:F9upo_Rf86=c.i;>aMpsPJaZY7dZtJ
%.KR!<*OV+j')*KtCIG6Ham'sFmj.]%YEgMYGKFC<OLb?"68SdArY5r9GL+an#_AdQin7F6(`u_JSaJ*=%,%5+R<R7%a8aYegaLUb
%]3Ljs4pbN>r3C?&h+b#V+SoOLX.JT?oS]Q?`\[5XmSI;pM&WLgjQh:FMs4gZ$)q<!<&:t54Z)*B]t7tG]]"hQnuFV"r^L5FcF=h$
%B`ph7jB,tXAK'@*n41e?^La>+302a/)5YMGe(ij:@Rego?hT&C];(#'2]CsDG<%!kf:XQ(^d'Yd-'cBtnJqY4X+AOiP)lX+:V>Q?
%P7+0nY89AUHb.,Ce+#4]0)E*oY]gg(`L$W&`a:rYpgTTf0IkrmX[^oqN2R!fkP_"VB"Gj8FT6;E*a(LMm"n\jE4A^/`cc1sWZ*`p
%2*e?gACn`5Z1=GT1V".?)oK\0ht=;!j2sk4++M$O*YpFmKa/P``f!;A<BU*!D`O(2Z@J@!1-.L-A9GoJn&^\P&)8Q!.Y!;':_dO>
%mU8g*YAh.pirCD.iomJ8hodAi7lUlqhn#nP,EjH4#P#qWQ`jk#-S'tij1ZJTKU_b^%2WH#LnroB_ZB8n6(:ri_H#!fK<=gPGats6
%Q-NO1>8=>3Z3^.8KhM6_$JV0+aPZR'F,fge#];B/p3g40(9^R,bWmj,25\#;MTg\"-E'Fp?G+8/P!unDNhs<>r(`h%S\$[IkCrVa
%aQ,F7\^G8H?EA69FsPrOHogA81hC,=]WltVYlU8X^1N^;fPltG2IAu2*9t2_Yaf'IP.gbhM8+N9DU4mMBi)O#Oso)k:\g@u%ul^@
%UZ`,:`=eSeUlK_0ksd[7nm2TZY[W!qEbg&:`!t;\m59N+<ZBBB5J<#*c;/BTrH%[E59<u'o4L?LV?qr/QTooL]#^\@@s4)uaKPHO
%or?COWd%>U,9=jfMbW)_/TGoLL"s>7dcPBkG<f6+l,f9@D02R([VC-T!_L@=N+V"VT,Xk)ddIoRIGU9D]5\74`YqB&*@:g6fPt9C
%aXGL7&SjP<fg&:#Oe8%;gA]gV2t<Fr"RW3Q+LSp_M)6jqjNW_+`4V*4$To``38:WU5dlY.]NTg'PH3R8lgK4AhY-RQS8I<P[3L_`
%+,%H5cr5/=cge#@Fo,1a1qT$$!-la:R_&@[:JKB=2u#-JipWXKqk.FA^l1i3=%<[<4K-7KkV[CN@U[h<mJ=QMq%h.babbFHB=.Gs
%kA32c2N[Kfl^`2NW.$7]Gg<G:,pGM8Erg,;]3.P)V^)42-;ViPdoO5PKlNa(Q;PV1ZRbbNo[fZ&oSYb'UNieZ0T1\GgoO';`55(.
%`#g.]391r^3+`>8MZg68o,P`ZF,hm=Mi2>77[6rmP:QCpSFrQS\U<p#/A2Ac;FS2S[8K=f'BhHt1_kTokN7(@LG"\_9V@'k.2+eo
%INC;M4*k6$rkc93H/+Zn'AG)$]^P0a^\YVV^KGAalR*1r)g/TN]\*&mDCW1pOcK4r<0RCT5eU\!Maj\6H2<jESWG:o?.N;f-ZAW^
%jk3P;p-b&*ft._"p=+0Y<C[GAhM>C,Vt!u=`JsU3,me@3`eh7^HGLmfb!BH5U*11HqQd-a:EJgAT3CY8Y[`UC:ns+/GR*(@oHiR-
%/a(&!Yr7nCpeMQ<&MndM`M<SbSr-r#<$V3<W%9;=QL8F4$180$4c[L9X/c^9qC\U<Ti:Q4eQ.50XiW,lHjZ9'mt,*8j681iLMbGB
%Zt%$ic]+hqV'5Dqb4##Q?;CH;#Ptncs(\r*G'XM#59&C)UZJ"W4kp'h;a.Fa9hfr#d;o-$WX8l?`eKIjf5Y&WdjoV4_H=,Rf'*]!
%&>"8T=24(fj6"(!S402@IirloT**Wn7(dKk^^'Q3:EP]Z#8bDP4B1s4kruD!p3/g1SW@*j;>YYUX+)eY<gnm+AA00fiaiY!Q;Mhn
%#in1C$f^4JiVcab#$&t)/QHnK<_LO[k,mYE.a\9:lA-^EJTorFe2W$T3.TFgJFnaXM[V8Np$-h*g#(M>[gbZqCJQ%5/S+>g'<5T]
%]Q+2J(!'rZWoB``k_Ta$b\ds_I5eNiFAYW/T[KI?+*o(EFs+[N%\A&>#;X'P=5DG8eYj9_`)[+FSdeaon,BrVX+[EWe,/EF\d'CD
%^tcC2X"DNXi13(rm+2ai]9HZP*sf&ip_pj5IR]W+,aD/eFJT>K(UHW?57OAKVuW:Y0u:51j",%BWrOq+@Eb;';@+]AoA#`=FRDp<
%%7b$MF1qW1g`Bj7-(cTS#\[NLY[jsE/75^!b\J&0<toaXdRQQ*6j^*1!A>n:::,jQqtIZ-AhqFmrb@'cFc_Bo%;[P-c:uI-F)TXl
%4?hJ#]f5UZGuaoVE_W-Z2mHmkcL^>fhjAYY^Pm_7Y7@dB%?F4WpH_BO*'_p.$">/:XkbNTa7]]s1hQ4L*WXq0't&5'MGlM,A\@j&
%e[*K:kh\:=aRQ`83'a3Fp,E=i"+p;;/sN[k($!s&Skm^fm;14]<%K`.VksKjZiLpSEI\jTRhKcuPB;?Bhhe.#>o3khUUA\RW]O3A
%f"V,In7ah,.0HC?NDDU()Ud5i@<9IZ*;YJL6\%'*4p4C;9U-NMeS1]TF>ZGsD!Hj=7f(O0lu9;t%tA/kc19T6Di20tnmLm//LF2K
%Jc(qLd^.MA^/pWLR%)*.mthPac7dD$)R<noRb],IG4LM;\@!SDm)iMRF1;+V=-t/H@NjMgSt&?WI0PiRHL<!@g@lXC,ldSeb/H7L
%bs=:n9e9Q:H4LS]`eTg=4_dgj#ATUL_j8@R);>8sR$/4bo2m?>6pW0cC$PMC)QZ;8s0:>UeC[>BS6&1C?\#jUCYd7k6mWUTHDOAC
%=jf5U<K!rk]7(TIGq:bYFn6'1o@QsdjoN"\D)c9hdadsj4XTRAmVOm(qns/+rio6]+]d2F#EC!b<=5X*C\d>i*N&M>hJZfl)[CEV
%IS#5?&P2Lun%\/-9XH&NM2H:,3QY]SH'3:3;%.<lp?\=sS4JA^^BD*mMs]cZkTE@FZ$PHu"#o/^a\uX:o093In?Ah(TFsnm-*rL1
%S1/Nce$.LhF33@"HWb8]gTV2>b3&9YT-Ylh"WXC\2s"IU6ghC.]!5OmPY%E,;3GOlTB65++5.=fHS8b6YS0E]\\#00GXmPj40rk,
%p.593LI7ZpI9!Kj`.<F12XLj/`1E9'\>Y1+mj;_!P^)R#pO1iQ(QY"6nN+1N\op,ikFmc3.sOsST`isoSu*%4dXqhjS=,XE]duLf
%2JO)b0I4Jm(mPk"&Zrm81[`,ZBntZ$rVB&[>u6lZ>':?qg[Q;rJ'FnB\jHP_II<E*Ml\U/>J=$r8i_q(r]hZ/KqXYp.&+KZS2tWM
%P9cM1%>!G2YC_*kR(blJ3C]W6iRWr/Y?n_\DcG4;>5E9843/SX97\X`+gM1O\bgpqRg[tY_\p:tJ,lPVE%O15hBZnYSPMd<M$n=7
%otW]?-7=kt/B)ShTNj4Upl"hN3^dPe"OOI7:o[&'9Mbl9&:3Y)4D^6gI'!*`dg!\j:W<6c$oS"De,K5MW=(rDKk<]Dd<.2`LLn,o
%o7e9eK$g?oi\Ejuobmjq7b,;X\udrJm@l?Y1X[8DpDBH5*D[`IHZtuC63@Z"^Q8[A]+dDbUc_<]F;8"4+:c?*P$g5Q,[3:?$#4;7
%mJ-JR3qst0%k_V_V2(_cU<@%+EEfU/E`l/M5d<YfD@p9e4"1_`h7(/,naqO=2I9XVI+]Z,TJQG0=R3ofVA7Xb&j&]Q<kn!VirMd1
%\bi:9_Fbl%p,8>8j<qfal:fL<]+`.2=SrLL5G6RJS[qdo;aAm4,pX+PTQT0,?&p%O?sGP4h>"i=gS<RJMc+cKOick?0k7/H:2"FX
%[Up;'AAZQu/#s+p;PUZiF6n/7'he^PAEiDTYe"neh0<c7I^b=8<n3D/\p"4F]lP9%Fk4]@_:#O2L<V@@D%:?M[dMQ%COE0-P)I;^
%TlGW9oS_FPFD5A_#D]?c(5jV\FJ6Xa4LX6T=H8^mQ\sN:7it[?U,=P\$5p?9pMUl=fJr^i9>q-"NW=tc7D5@[BAPNqIGMg"_?8=)
%b8tp+oR4beF`X[H#l2clfpenA?ir8bh-_J&LO/@Q_i\rYENF3u"m!$Y]4X]c2EprG,RWZj"(pGfD[!28,/@HcV/CgA/_2bML2-G_
%X8g6\bHg*MBh$iCOIs@oY!M#o@"0L$l$&*_Bn.$K/U"bSV+4mleij+T2S$l.Maa5XG&td(nC'_Qf$F-F_VMg1L)oF/?H1U[h=Q]j
%8lN4lk,-.4'\=@.7O/[BJ0jJeqf'1<Zj"H"QY3`TjpsgmjC+$L:3M4cc5_rRd2qTGfj.([$D:[[K["oq1\-?"Y+'ENJ0r>I-_(Jb
%6e\>.ru[me0V6Y#^%[GWIV_IZdd_W'RQI,'#Blj[YRV^t!)q0Wk)X9Lk/[Ip'E7SohG"EOA\d*Q6iQ?5/a<=q>Phi[R:^hGolBJX
%FP9<GfVN\a([=,UNpMn]RN!fBo&KWup04?[V7tB)npn?k0tq0EFQ_LT[Z^glM]o<'^KO#b[+S&/j(4uA>kFtG%;uFTe`TU^46snp
%<EaZDUs?#.C!0#i`#KOF\'Z\HgpO#[hoe&r^c%Bq"!ZB6^gh'J9<\J&Ph(<EGh5/37&0W#/1LL/Z:<JXV7\t9-Q!,P"H!KC(sp*;
%fn`/m*_j&"!m!X/`<"6`B&ApX9-Bm`J$G4*St+>OlJGm`hdqQ@A7i@i(.h6Rpj!p^WXl>8TO-@8<h-m^[l3"$>[s>SZVB`?mZ2oh
%hp*J*Ci6s5`og_=Ed!T#?5_aRe3luG8TH!qASsVH(CZehn'4@a8-X<Os3uX*8=j2(A3`,T9YSI1Z`e::8&!mD_o,WO<oLN/+\(0e
%[\`TZ>(G:oI;Z^(&jSjgUc[s[E=?L,g!nMhVo3`@r.r/aKp;%oQIZqH(Oq)uTXV%S8d5ZBIf.9nXK(Q,m/b?5[-o6l*4>"DP+;/G
%9bC`dmU<lX5HaUG*iX7dpmt5h8$AWi[p/h3m"Md0Oe=E4L&bQ1T#<NR^p'@"J^jSQ;E;8o/>.31fboaG"JT^/Y)BX^KniOb"PEOL
%[p2te+fp1/[pC(^E@'^$1N)"i1m%^RBYYM]>UfEa!IVOP8kONSrncV.E_trVgT*D0@-AAE&%^HB04sQ.U!!:Cf=]sXr8dtWkX0Ue
%C1aOs>GuGca-#oMH[0-aQ7tegjO"<iB/Y('djKePFEH,tjY1ABU5B39LMshLLO^=SigXcL$[E*h#*K_?M*.cT>[4`cSGeRt1YY]+
%r>(Gefa?j8%4&Qma$dXI=WE8dgV&(%<L%:A%LNa\bb/X"[F@1/FrC7cp)DFAYO6KIo*aYh_;9KL+f4omK&FNJhTt@r&PR=tZ'>Jd
%GN4D*LUVPpZR>O&.Z3'MlcUb)j%mh/PQeVUluO][@JT\rm"W,Y+Gk@[L\c!Vc7*L`[cE;8:%(9'EhE3c(M?rS/:g2#l`,-e`ruit
%1[E+8]07;Y5.(Q%SqDZcd]T@t3&B+SG%RdCgr;1C=[,rUo[Z^f8(YAhAV6KK0U4oL/@DDSs&4gng<&O8c".s;dh.0mJ[-$fQu_H`
%:UY_[Rks;\qS(.DjB*93L;\7A!?8e6H[tMNB\p(H7-56#g#ug`JGSk9ThT(SIsCb7+<N1MQ;qjMgkmo[GSM)Yg_@M,kTMUQqI0ZL
%n>qP*&HB6ponT9F!OgN($$(6LcETpoqngUBdNqf++?OPNIb\Gr#dKr@?8#8@m7$*Dg8a_&Rq\!3d*&<G149]@Hg8--!9MV@OZ[eM
%`j:1A)B;>g01TnY$n;>o_[OKaL*6GU;G3'>JSjNK=ELLlQ7*]J$G_^?+@(#,cN[<AHH$38qIO`\Q.b$f2eM+;#Klgh[!j$#baG5!
%elK!+UM5lTn?cI!!67mM;&SrmI=6FT\?hm2a2L*RX3VH&IK1@R+q0N4$W3+F=>0KA)0`K2JaJV)T\I^sF1;"Za?A`1Md,DJgu]<O
%GTBE:@SV#u-0A07gj"r^@u2ER#b[1!fA+e?q3b-0/6)!ZKA$PYb6.Zse-XQ..&AlpB=24>b$=H5Ut=C%fN]m")Q.<n^;On3#2L3g
%.hS45\ue?"9!96B-l/3D`;-*Rh'h!%UuqQ8pe'2^DP1KlM#pJFaL<U=FB!7AQ2Z!_?#JZ5h2RSQa$LWV&Vg!OBpA(lX4etA8*X"U
%,7.sX"_lK67m&Pc@QQp$O^a6MoHdE2o[`d;BbG2Q4YX]Y4!\^>E`@s%MNKa"B>)H?V9K^@!&I`<)T+u"rr1sr30;,ZA^CCn&^n;<
%:7>3h-kS*<*-oLK3jmjOM2kLFUG,_Jj&8;E[[R)c`:r7]]&`$K8cIlX=SrKg"cm2lp-`\PLDc7skF`c<]Q<4-"9O_<%9o^h`0<5Y
%U5$ml=tn?RZ]p0(^'-hF1:\!khMk<HRsW#m%JB-/8<7T?HCdZ'!0YYp-gSaZ22X\0RBNPeRI*6SGa;T>*:>3F"JCh\;OMk%N1C:^
%clmZY;]rm@)fjqkLr1@)2`/,oJ$Eo3cXU?,aG&W5m/ZR`l5NO3lGUl<*BTMslU5QV>DtM\hPP&l5N0Vo5a/Qgn!l_p#.%6ffYdn7
%)\OV6E#6I,JmbjRkI>fGEt1/b/gu$@puYeP@S61)^*4E+?<5!X#;?[SPPHeSV=,[-dJG<k3;XMsrfF.Ns#A`e:e\I`^k\?43^<i+
%Go7W3h+3C%30,W'F!*@4_=ee<0(>MEeNios;9[u=8A4Q:qH+D]"Gc)&*2f&'H;:#1s3fX[Xc-!oaK:HgM=R<h+WY`QUeQQ9R/J<;
%VD(;B0)O:?DWsW0:s7G*b!8REeNTF2Ytrcs.K?cj69<@)V$8O8keeo?i:o^a(2Vlm:&A+)&2SLSlOtd/P][16?ir?3j.Oe4Hb5ki
%`MJ+WH3DAD^PnF0S445On1.9<5NM,oQ+Xutj`r>$7HVXi4;FlSkFm%<4G*0$U(f2<Zan.?"7nq[O/H^s=C*#ZU(;&So:Y+n>)N:]
%ZnTeCJm3Eah-jEFK;Bc+*#Ra9[Y[52g:Dp`p#G2)".Tc/G"Bs*R7#q[M;&+M)@l3&@0DtBC_1W(=^[%2X+:qFlLW'V97&<uZh`TL
%&4lH0k0`SR;;2B0`XVVBq'0R<()h%$5Pg)_f,"LgN8gB5,*o.$,$6fjO0EC,$7VT2KA4ASZN-sVrTZ$<=Bsd8e4EqK-2H13c]`6!
%XY`\aiU2NEFa[k+b@eEmA%.^12<p6+S3s3&C0^Fm?#G5M>&fMPaue^m3)Aa)QL^1Dm]:bJT?8"T!KDj?UYZB'pSlpXQrE0icfVd.
%dsNqf61lYX;tt`3PuGkY2QX&D/.-K.*EmcLIep9neqnZ8,Tc<7ro;L8rHFX&T]mJHm0!\VQ8\(d`^rnteZP:1Xg28(A_40\0l585
%X#ImSe)8hRp-KW95M?]eB-\3lqbq3A3*:>n+B8^P4(C)thI:+CPuHSm*@=Mr13?Gu0Q=Om0tMM7m#6L!+UYtlGX*gMG"-F<nS'k6
%"/WlA1IdRhb0C:l#Zrgg1WD%+1:>90_nTn4"o=F3K#d*_IY0^EjCMt_DY5PBA'iP7G/i1g"Um13)D8c8cCo'b6)UEE):<MjAdmB;
%-NiRQ@ra+QAd5gobKLe=5j/+eRtV/k*W-FIf_?D'B*^=U,<fUZI$/YBJ5n6'4+gm54(CSC1C0;;&L3_35h[)1"jaHB)1`r'$6:H?
%&$P:,!a_=,4Ws/d.q>6PO]D[T8Cr7W%*RW61B!pHXfLVm5/c/Clr%V0[hO*meff$8)-lEDAW3L:Q^'98q4gR.9NJO<%#DVPfhg;D
%l;\ijI!<-kmR"Um1WFtoS/E9NGNT+$aNU[hm#s1_`h=5.NK'#8kA+HJa^Zl3,6SNhR)Xl5>.Xu^o@Kan%:j:6m`W*W)bEBFR/gf7
%KR@6?qU:L7$ld4+38-/=]-=,.'J7*CMqll#46+]DpiBNAEjltE/X9brib:WL?'`tPZ8KuGIBbXXdbNCja@UDV,IT[S+D>OYcgRo#
%*fjg[@ai0kdXma`nJ7V]@VV!Ha%_OphF(Kcn@H0<@2DN@[\&\unKR[?"pZbc$kBqs@W8uN"DRRa4](j,J^bh\f5Z/tAMdG&qMP?3
%>8@S>3(@Oc>8rWddb<D/7+R*D4TpfYf48a2MTaXRSFCh#8FliUc_->!.b'Adnjh'/%1KW^)g:'0"bmF])&mM7%G]U/\(6NJ/0*@_
%$k1#00L5>dJSf><33lt2]GOMP2n75ihWPthk!lT9<J;O=NS&3H8WESAQKI,)IpVulAA=G@&Z9=p4>SqUZ;QP'g__!?!m9<VWD7NP
%&XjXHR-$j\<IbU$@rsVr>9!QNM\*aa\AH*iTP3:/c/-g$AoEW&JRmIRqJii#`hosoUk:n[J"(bcIV6-7-`2+S$EV\:M":`'%9A*s
%_31c&U)nL:.D=?;j"bFJs18<eVj6c;-e"b`Nh9"&`T2:%EjSG-#J3,[K0NXpQl:KT-2sq!C2M]o3thGek^JbP-O&]_hKGamNE[i=
%D;g".aX\)HjHdDT6]=XVp`IEq]B?j+mM(?YHhnq^>P8W`87tnu@cifDCDGG$.A*5sWMu,.V'Wqc^\r!V/jI`U'f5g":JT&.^CnR9
%1!e1b]@`7cTCu2t=J4M7Y)S]pGo[f2eCO(`&$Wrn0\^1C4+Grkd_8!/(#r4FKami&(U=[U?85P_0fU*;9-JPM6G_E30WG9*Cc-ut
%@btW>:$<uh_%ShhQGkosT(C[Sm$EGqCS:;RNe5XYC75A@/2[GqW[LWad<q=Q8JuWsY`'PaO9\J8G"A[`9F^%ifO>pZhH8t!f.f-.
%gL&eZCa3H*UpIAGGb:/?<[9Q65MitD#%XQq/WTPlRq=U6Hk81u".<LiI..N3qANEZ,DJMa\<<7u;n)@d\'5BS]gm_+:UIu-4n8=3
%$^lP\f-+qmR@eQ1S@&RTI'm2>>i**+8#FOM(;4ZA\AN*[O(EiVX'>*<B@cA_22Nhc*).tj9O@<njc!3P(^Q_Q9_)TWXFV53io(8[
%=so2oXE\a/IVTZPEkb`XULR3*V?T`;hQCs?Z84^_8h=p^\`5$#"o[QcV'WKqoJ=5&E46Q9`eAC38L_!XR8p(6bsKjJ>61KgdeDll
%.ZP5t#$@Vg>s=c[Z@L?+>b9WSR=@SOCu&H]=Z4e\f+;X3o7suJOL7Vi3DJ(rT>kPf/4A?\k)%+iA][mQRVltRE?.pqP<XZ5^j'bo
%8\$QqL,3;3r1',9maZ$\j5ag'Mh?f`%L(^'^G@nWQEoT"Z2])=>Lc]Cj\Vh@;]fcBU)u'Rf7$h0fd)m`>8<+7dWhaMhADU^$AgaU
%Np;gV[ae5$N'jSSbRAQOY=[F`'HX-KoQUgT*oeltU$!2t%PN1EnAIg[<j"uCh'9Lnp(/-69%>VU8'/?D@16]M<k9!@7nH'Qedli&
%1iX%q!(b0oE`Ph'IC/u"?S0H;\T0Ln$@c5FMXEk1"FkJp%:`WI+'#06%8^OEe1cnQ[6/KY1-a#u(`h+HHsdUi%HDuZA["b8>>TN>
%c>$;Nn#kU;2UHn,^t_2EbW0@/karr)VD[KZ]sl1fg1-aL*]e2X,N];&Ib/TDOtF5MCb%<AVt!7)]UYm>/j`0a%KUlE#_haJTN_bW
%7i;+GB8#[o`dTqg0-+q/'Ti+%P>o*t.$;Yf]t1K<"QNc[!IQ;onUb>!kJNcfjQ^ntl&n*27\4p.B,=i_%?"LnM4/Tjdm.5F82S.-
%(ugRN[d+ke5!',7'$@u8^9@QSMRr_tT2Mp"?IA!R<u6-W`\suge\6s]3;%s8K<4[-nq^2m*'eWA9fi*W-dmPfg@P]g:8HPr+EgJL
%D==`u'7l9>'`(B@QM%)of]aNL/0SfS%sH5)ce;dKA_,KjV&2rj@Id7X.1P,hSGs))A0=jDR[eSI75F1lQIWf6*0trP8gP$FUHMlo
%Z=*NhVTcD<T7bhH-4tnR].*\*OtkO!X^LmK(31E;5W:]1_"<6`!+*0/jH&1%Yo$b%F$iPb=,83?`6*?e^h#oOd;lVtJg>m5UTTs:
%=\FBpID;`P4V2AR([Hr)Q=\'oJWZ0%;h2qCf_a]rm?8-fe?:nrQI2&PF>bG6p5\1PL<Uq-GZ[o>.4g1GqP*(&i9YfYUJN].<6$og
%Y4pC[CUqW:)G@(oO^tYN[K:!]XDWLO,]'k4D9#&;Tc>C`OLW\RECV2L;'!\TY$JNlrd@uUbp,"mV.9%0[Vn!Vkg@T_'@iHNU?&81
%KdHkuJXh^]:mR\m$L'NMG+C<7hBCLj3LNZb8@hT9_YPG&BhrnTk@dr=<!"2.d"XNagrto*_bYIS4Ja#uYuB;;R#M#`E%P:6eNC5>
%BEgOh4$AO&$sV+rnu.T]:&h;VS];8n<i>0\r%^kC'@aA&Z,$"#3t0R."R4gPBG1Wl&G.,94+\guI)h'%hUZcY*.P.).!2i2eUSiV
%StqFDqsY;LmG'NVB0S>sa*cQp,3-.b!u.'NUil%<E`>mqI"HQ`W"hP_1_-*,^J+gu0e9j0(:g7Z3d6ZD?UcVe9HH6$(n`N89H\8S
%e%PSdiTf0^l0KcZ_6bK6\LDm5ll:o3nX*R$nEE;8aSkZ'r-f:h=s4c;?P(k5%e@9jd.Bo:Mp`HIJkRu+'_;t8SQ8QU0Ue_Zk<eY[
%XY*O"h5)^Nn5qpm*ckEN_BnaNi^0c_6U,W`fk)\Ge>`UDoj/mWH.6O_L&`^CaTm<ZBV-#Bdk[/_>uC`+00;jc%9_mODH"dH7Vo>u
%&Y0XNa9eT^?<!g.g?B=\H%UfUNC;NhQRfZnaJl7i()9VTVI\IEX=CGZ\*dd]=%8IiR:j9`ZIs\2XXFDbY)be3_5q%9TZEb]*%$fY
%.r,`p$PN%J2paQ1TC_E(i/B/j&7&i_TEOTOGi]Y678.VHJ<Re:.de.c#),;FE2<8'a2`gp.k0ERkBBPd^+<^@0)K*jc6RfI+mZs:
%:%PI.EijL9T*&i`M]3Jic+h*ToKWNDpY?riGLN4?U]M(JWJ>\\mfqIW=0ll&RP-OJGZZV]c%X)'3c>st%DUgD=i>G<*'1,@4RkMA
%_?Se9oE+gkr<SiRJ4nlUAIT@+E3,qb[=*^A@MaQWGa^a((+Zd\DR(Gms0`_nrNnk?>H-OV]@Yjrf-,1.N26GU@)[:o\6PV!#7!eM
%hoL?GFp9f*gcFB7OhE=#O$T9$:k9AER[p[;FTRDC6H+Q4`Rf[rYfBBY\TZ?;grfE(Fp8nboL.^i`&[L=QG^`;e$UDO+@";^.AMs<
%nnV0oPM4#Fg8FhO]U,%(IP8U/;TrHmoCtA1l"4[Y1>a1:kN8g=5.Lo)":ae]jTktkOkT4fpLOKpJJtgNQ!Z56ga1D^!J`H_@CqNH
%qak+e94?uY_C9K@qEZ%P5SIp'W91@_kTq%H/tC@&fV*CZ!:f2c3o\mKYR%o2i3F_FEuQNOaG\Qt=`s.he>tN3s,,Ha'K.u]30<^d
%$oer."HA-bD_IF&0Op8&91,T(gY&@><,T'7)^i"=E\X-0V1RQ6!:iXP:''se.RS$Bd#5uhA;OQTA`G0*9>h(T0EV@GJ]JT,1=77B
%kN(*'QBTEiES]tQ>om'3410,@D2=8jQ!$83SiT()1@$[cc.hjD-L4TY8J<Q!/"Ul8"#o._jY4(N]s>&u$:(/$/CW-^FY1i:NI1[B
%d[o[RE3'HL6fsu@bRppF_a7_1DhHNMr$i4PPBN+mpDN@dk)I']i]:UsBK&(H8YKtm-d"u0PgL[N5-K@"gW=.Vh>(J,aQ8Q-iOE.V
%2X7'YlhT#coDJ^&m.Po$=&R*n8h6Z,G^P1Q;]JZXKq;E5(G[^u5I7jXm)nE95uAiVrDDu*&+F96]4Hd0g69DGoLV*GU!j'`ghp[5
%44kF6QJ"Bk?H'_K]Me@h=n;W9J.-"1s5.*?4&H/;0BFeSV=GN+;r=6k1LA<j1&#--Rhc@n9qn'8q/IoFU:2&?R:'sgCW>M?\d^b:
%(:8CL`d,(=,[]uu;Qg/ak(2WIY8:NTqpH,q;)YPP=b;[KIN1S1j6p!^Oac?X<[NbScW@:+^!u'Y\TrsN.KW$3b%@*c6S9N\5q4&S
%J-H2gk9'L);pt7[^,?T2^$+M<(j=Q>+`<?*#8T)hn?k!@/WFs1Oq4YhCY(V/^:c$gL:TriY07@0O)J-]s(0/_Pu\G%2JQi'V7+$`
%'jI`c8<^iA(hqTGm7c@6$+ogB9XJni]MkT,+&nU.&8[S>f:`sY<W@8s;tR)\?-8Fk$?Nd>#da"]PZVE,&ob(>_sfrA-RF4lI5EXd
%n]elGD8$_p@KuJ:?`-.!(o9DBB3YT9*1h>&V+,+L6,Eu>R,i]p](';2]ut4489^mgHgOLmV$AP*S/F)=QmorqhO(*)#KX=;\FJ[1
%U,Ia8r7\5EZ5'W[e*?,<E.L8s)Y)BhEQ/>`7a'e@7?T4`mPQaQM6DcBb!d%<<HK6)*FCHu5O"DW`O.,oW\G&Z'375njG&%Nr8h9V
%5"b\iO<2O-"*%8Om9d+V;;lo5C^tg(+s[8(-KPVb[NkEW)d&iT?_SAeANmgX[FJK/=J;%^XrAHE`pLnjN*)n_a&HD1?qBT4=6eP:
%Z1*/eJkTsG29,bc<?a*>*c=N"1:,hP8cs`Z\8?g6FbEOCS31[cSp@'n=+DFH.4XIB]@qfe"DhVlNV!tG11a;V&$i&If)2qTL6K)(
%[45p'E<Zn'T"Ht,M0RRl!38=uJkF::mfHoL&%7IS=bd:pG+1F)7f(oXjB`RGB<YsJ"&EL-WG><=!r:qEoN@tA%1YV18Zke.bI-Zj
%jCEmQlClZ+m>UgWm_,5&ON"nGh:ZsNk[1g1:K!C#Yag](Ya8p5eQb&=Wa=BHf<$ru)LMX$!doQ908cAa0Z;iG?/!>-M0<5K-UmmI
%X]-7a_/8->*\s(%*763\0oCRt8INK.j[)_/]-AtNgU!!n`En/dor0gS%q0\F$Ui7:Oo6";Jlql,.1W'B*./oODWY(A#_Qr(2$e0i
%'Y3clI3E,8.a$[&Udt1qO7^DOd^OL3al$]TDq@g[QrF62Yl"J_'W8mXCVWSfWCl85Q"\125;i)7S;_p^#Qr4RH7B%($i2olMPM)Z
%q!Ehdn-LJ;SI0i%D*O#9iKH[NQ\G('FMKj[4nH$-P=Zp;)3J)DM"V"U!cuuHA4FOnEEU?8R=D6?CfbphVZllR&/XpB\=M!eA@t+_
%X0_k_L9"lt?-(0YSQ29fZFuWAj>UgR4(tt@0MlbXE](W>?P"Qp>XOKFV4Foob2078"$sEF0P(3oYKC%`g$)T>,\__I]gHSG"u8;S
%dH<rSn5-J#,ss[POFK-E%*u)nVI:\!bmWb]W)TdT>_cuf)9C@-2%34"#%mE>O10u76B9P3;Yd#ml8_`\JEE9?/7aK@1siA1S@dAe
%\[#h<D.%)<?^Kl:ho'[`V9>gJ^:1:>&/e:S:9[gKW"2JEoH47JB3=9Lk<T*"hf>R3H%B"j$r('lj#VB5h)oSPjdjG+Kb0_K(*&V-
%6?CLls0h0&+BjQR&>+H$@N*Ms&gg?;7$,_toH$DtaQ.X(ZK!TlC1Z.+U5%'?>^H.fk,*JEUPFb>.r*"`%n+&*C0s!V"Zg8MhD8R6
%Dd`KjZT$p9Um?7>p>e?(b$15u(d=R8%$GM-Q(b0^K:GV>qE(81Z"r!J*q(i6_HNi(<.f$KTE@Rb?>@KA,h/It9s4Bp"#"2&huM0D
%[jhsk5odR_?\g8i'$.9<(`>qXP:+2^MZ1Z0Q-9.n251`1/WooXcl9-.Ac`fE"IR9mrKVB[p.a?_C8EJ*b`H\Y0]Rk1jIr1f'Z-DW
%-WXp$%f9A.TUT5C9QOpU6cu&4'iWA&?4YR80MO%:oPTZUqbgPbI_V^N"c,YUS>p)6+jl3S.WsQ2.lRC.anYi6p(PnQi@f$e.Vk8K
%fFjlggGWlu`\d.@[Q7CocTO6/W)<.RWUI=^DggsT@]I+@&b]FKWsi8a(;9/L)lZ$g&d,7"j-#,7`Gg[8)K,2/]3N>K6jdq#]9M?N
%7Gu(2rbN7S+S<tu=T+6M8T4(?\)hW`T@YFaj2bBIc0r]8>FYAd?8AV\\IU\ZGf8CXpE!&<nK2b#gkV_EoRPf=&%Ms);b<4<EKe,Z
%0^uFY,9XRArA6CA>=g#f+fj+dDr+6'KUmC,/:5F-hj[`X1_:oi>:u/2(TL]rH@j3qe_tk]cbR\1IN^jhnb?Ta-.>nU@R^`@%.4SX
%%K9WPZ2dpe6Rni\G`KB7->O@"=)XF??6H=ddnYmui@aRk(JGsYX"/\rZ=FQq:L-X0EPq:r$96>DF2uY9RI\4eFkbU>.[u3[D%#CS
%H!+k;%SQ+B4tR+-1p6=gZ2cZu%U^Jo(fpIO(ZWBA\]>h_(fc*34fBmF4%W,%FbFd3.d80**(9<A?^e($LE$r>mSuo4+#0!W#C&3!
%?<I_U7q,(-gS@s7Z0N-oRuZr=#uJk4]jC5hnX-Nh-:ZhZ?*7'$1@AFC@;:ZYl1[A,jL+N;mTlU,W'Gmn1YM."*U`u:h7[<V<+>WN
%86"">lQ?ql&7V$MOg4*HOS:YGm@X829F'%umbQM-Z!/O@<fl2*b9S$b<d>P=E`(]e^!$q=QR=J7E?tbFX>P6+hs^q\7Dfp4[Qe*,
%?i?eem;VM4!VU]Hjm],D.4!nqI^g24H&ER6^Wig<Klo1MDo!8Nd;%@GOhqa)Hc9njc!TuS"_qCuh1i%Q1(W0KJJh:Jm'U<b71><R
%PPPcmjQ"t<US$Uu@qT_0s.bAf3QU49BGm/qo.&I;@@%)[d*[QK\g>?JEk,ptFWiFRep7Nn@X(ufDQgkT5^nr@QqY_@\!(Z'Xk%(r
%:hi>`cRt`[-8%@B`,@i>RNd6WG@Pcu$1C?^DlJV1+)V\22Ea[F.U5Wdd,h8>#7l-04:qni71OSbZ>]'=i)f=:f2FU'<QIAF/5D'Z
%A01Yh3B'r=F^(l]APs.^lI(B6^Fh@)/>8Oljg1<8G]0n6X5fT0FI0RcZa4G"[2f$)BDr3(#_qK?$b8X_hS_."I7p\T=sr.L-j:-Q
%M9Odq6(h1#g)7*Hfj'TL5'\hK7q13&eD6"Lcdl7!N[1+rd(#J!`%"p)XMVW$_!*VYj4MTEeF$m(^Cr]:X7K0GlYeG#TS!qh@^G\-
%H-t6D>b(Pc>`YoM^,L1aU0HX6XPMm#qE7-mi\LL!+%U7N9k'QJZ9"?/AJ$F\5/3Y9Q<fVCjD-1\Fcs2B^%d@m)r`!fhE9<ZMF#Dc
%^G.!h6o^6G(cr8?4MbJ#-JLlfDkDh'I1?>g\rI9Z;^\Z,rY+IbHm8<a?sAP_o0\F=&GVU,fns?Rrb+YO2Wg!2'lIM"R,u]hX[miC
%VAi7JNF1[7=s,sNpFSP@N9'k:%hLKBgc([f(r+"[WN;#_GrNXQRfiD]#37W:Y-(^o.,00T%h/Fa+[iS.gm8Y(.iCI2EgR`V`-lcF
%[KYW-L*j_hEMLK'=<m5AV4:"-EJ)%sQd'E16un,'*M]-0ih$!7%*q?ApS*P$^UJF^ho4q8Ef#-P'Cq<0idb=oT'41(lk9%\NtPrh
%\4>$0Hbf1n#aU$IiZ?b3@$eA.U3CL&4%T+b^rVF>if;+/rD=;MZi?-;AiN>Pl*g:SI,q817Z?_kO#,m_Qon79)mr(.-ZtO;'(Og_
%GD'.+&Y3)N.1NAraR:^(M4;2D`%J<&p^Z*D$"sh"i=cJXCDFHL$p?YOOBl<!hu2T@lhCI!DE=.'mZ!f6?+H7dP;,;q@u--Z\&=9?
%4gV[F"E4sXrBjTWhB#qWDLXlj9ABVT^3#Js.^Db17T1`YI34@_A^LuUWL@&N*`hT-f'H6"6RqM#).t6Wgn_Rb_o.Nm;UZI0@WUsN
%Da>i:?j;8OWA%V37;k)<1PU`>YdW.?L5DC:22krfAB3Q>&DRa2$9_S,J>T?@V`4HP9k0P]Y_/1R+=GmCJ79^u)nOLk(*g&qUTF-(
%9OKK1M*Tp8DB`A6ei8M#+V<]jQX;/:o%*^LUmRgRSjkFH@NOu7796n:@<iRZ!]u^C?m$rDb8;I!MMX=0d$mK$ikh]OM@#l)U6rG.
%\cp'kc!JZmn-^gD6nr]==ohOe%?tUMMk%(N^NeIr@R:?;g&"6Tgh\.G9]H*?ds0PQEB]?,P_P\-2FY<o]t_bC-"9,YB/q;KHsL<t
%E;$hoN,p#`&oiSWS?TCB*oZR.B"l>`d5:A-2\HG"oae8g]c"/0Na+)aThtLe&T+Tf[!O4r:q"Ql2J^;`&OL+p51O3HGP_]dPN4\C
%U.DFBkaRRd^b"FM(YrbJQ16E'3l)/:-F+ekEkWknOfaA9&UaG*'68U#4hom-6WV9JmiMfjE?4+S@A1+nLY,pQ]54FZY=KjN-26DO
%RE!83`7BC9Mb[tXMYoG)T><os8d.=E7,gP8^6MM=A6c1j;PYord!H?l-a'8sq7_sb78\asG-p)o9,!e:&clC&'V31u)Df:O]fXo@
%OY9#,!NEgW]b##HKlf[`1,aur5^Ms$61fSTjKYP8F$CH!ll-bhM11ApgKHpF1,CFZTYD@S^OEK8ITo,Ha3Ntt="rGJpLP$IjZL6m
%^4dW>M=u17mde:n6<.E,FIT[9!B?9+jQQ1$E>uMX).2.1!c2UaGJRY/M[lMO-t%NhmpZ>1/n.9XJc"10P&JNF03d**3bPo37^$ar
%oLi[&blKb[E9`C<B&AfEc+iQP5pVRBPP$5a7HW)1!TGZ"H?Q]_,`b>WI9NdH^=2nq_lhS)9e)7_6:4&XBa%-r\[24J56!59@^R*T
%JQmem,<d\DJnFOo+WRA:M+EZA_H+Y(>:uk;mUX#\J\H7lgK0ZhrGDH1qIrb)[ZLMb)qOsBO!Sc&nAdZ#;C`S'$kTDCF9VN+e<$8k
%4`d[9_.-BEZn`d`.<HSW69O@N0%:2_*7[.+;KNZcX2;\0n=Ejt:QP6Di'>"4<V$46d<EtGZs^+V*q9%r*B;?W\.X1U4rR-9H*Qf$
%@G^mXAbOp=oQ7>%MP^lj\?`DdVO"`EAT7lOreK1+P0XSlTa><*@:Hp-kar6<rp5(NcNU>/Y<Dm?NDrZjU`K=TaY9ae;]gL6ecmQi
%jBOpncnW+a0<fN-NN2rfnEE<Sfk2LOI4.ke0XKV\ih$NQd'.5Rc0Q:S";-(hUciUjP:iG`FL%UAr.g,.K/2@N'!IKP/0N_!?XOQ+
%NpaFL:lu_HRfhm(UHo(N)0ur%n;#4b6d+^^QN!!/pgHY'^$uClA17!-!VKA"BtKh*6a'#Is#I;*8!A-Z7jf\)A4HI#7-^&8%3Cr+
%VM(dQaWp+[8%Df_q3s6^@=C_Xir_om0kD4e,hn;(cF7]XFk47n"1bY$W&["r(2.9k`c)p2O06bdIh%/3-bc)qq1Y?L+\othlSSK=
%j4uJ&.d$5jq>dWu"!q5Kj@)gXWkJJ?q3eKI9M?9o"m\HTr5\1fllY."'S#l3FSSHODm)t(AYqj*fuIGBpDpU-T$^_WDjf<++@h9l
%aM!CpbqeYd.j8Q68,$HVbNoqqB0p:@laUjaV$16NR%VZN8`],Y_gTUHS(X;($`I;m"(n_g]5)6'H<5kGAg]iu3.a8i-ecE8)>0:Y
%HG-9jRDW-AE+9?U?WP0u4c5`EJ$GE,B.%^'Jg%8uQU'gQS$G.&@sqio3f*,jiP)1Mn@:CN>-sVEZ#te-.QN+0r.0_i0&'Sm>qXS0
%/eLTH4C4=WQg3.C=ms;QdT[9_)[7&Yqf=2EeM>:)cKK2ibFf$T`S_lPnrI@e55O(1NEe9Z!+$FeruW#c]uq8^8p8I(Y*C1LPOeA7
%>kU6@nm\$Jnk@CcqAZ]8c($PoVbm92'euhj29Vb8pU=^<(AG_Bksrr$+^^=@\4F#G7,B*e[f+)InXRsMDUU(1jS7SiSE;(tVF@)_
%aSRKAe-af0qYQe'6M*T*&O5MDA9R0?B<jL>nJW=n6gX$M:dK&VI*K\MNM9KV?jEu6q]_o6o/Y%Up3.XOVtM2=BmkBE8Jo?,!Fb]t
%2]+-SDK_jd9,?kDEg&]#X,c/g:G<enOK)s[mFX1>bE<$X"=rFNdHm"9fk=rqk^YfD`sGa()%1a#0tM0,=E2^DXW6qf#`X#00bRNE
%!@N?iW(Jq8bq8P1eMec:Upb<j+*6%-^PF7#n?`CUGK]9A=Jajs>tPDYS?TT@0^[#[Y(RHN2TOZ?Rp'dpi..i45Ze:](\!&$aJjn_
%U%Nqq>[rN%%#W*Xnf&Fc.s9l\'^q-Y/JK!`9gW6DOG5c[+d<O2OaN`E%X5/A/<@bTWLh5<Gsi9R7*$&IM^hR)5R&,0/$&><M-s5:
%;oc?S5*jSZ;`pALR8"L_.W>2)<^C"DeIfEWY!,iZkuLlP4SeA3*;C/b6huWmZ7k:S3B4isJ)>B"i&AeI(%]Nu1N&0!Vd%booqOF,
%L/1rO03g=Y"-^"Bi6a%r`9.j)/X!-*;]N9cGE<3AGO1`cY&RoYLo!BSF1I]]hjI-F?^+AVRpa4VUjC/4gXo>RCQr%P>>.0p#Rc9H
%Psdc7*(+T%paCKDSOg^b:F*qu5/b&!YK.'S@6Z>9$N9UR[bhfPGn,+uG1`]\W0SOrG\NraS`?g9H^Z1Hi=S;3F'+_AS,#+k!Cc/=
%Ub,>2r+>*H5$#):]`.sRAD;#KOkX>iC&i;A/G('5ho1U%krCg;07-AH68,+k2&%<h,nL>fYbuX`,8K1]IS`Dfasjb;''@AqbT.SB
%e*>aSHhnO-S.BDsSk]WKc!BrHXT0E?<__Jg')BM_Jheho,#d:nr4FIrI+H+t82&%8R'mD"KAOhe9AAi']fk8%Wm]I01A?u-Wi;`=
%!R%q8b1"[cQi03rBVp%$R/2oW4Lq@-1sE.BBs**G?A@hi2Q>a8Jp*;^*t?.r$D@,^V29lEJE2YlJ"eLu?&Tdn`s$8q_C%k^0V@9W
%oCO`/+HPR=bU";`ni.Id?QL,P,pHu<mBOZKU_\D3UfbQDcnEGU/ts:TQp0OQ#Op;QW4-=MqR/A%GHuF^F+$QXn)_$R.(Dlhl#iR:
%2S12u8d8=jqpX[6e_fKIL\o\Ci^b*#[?#Drd%tX1`)#.5APh6%]Ac]WGf-^\KMu;eFV4@<SbN%lq*>3=T3JFZ,RZfr*5="2or%S?
%a%,"8R]ONLs&n8/@`Y..pJ=duS5JaKXEtjan*pLFk%f)AE9k5nqL\=7H;PC@e`R<r2>-BF:,K8bG8HGi7E<"jA_b+c+tIlS];tG7
%G![=M?D.Dmm[!Y(ioN%D3@^jY]7@PjPU8.SNKAW3PK)I_\u??*`/sPq$Ic;jhlR9WN(i]rN/J2So\GJ^%"$;dIpposd:)]cUlft=
%Qo;"B8lh@Hl0MI>oSQV+RVlO1[8sTJ7bZrGdM8D*V"!3)HbJ)dm-o(]1@f<4UFa`o,P:"K?tPi\8@iUQ"Qiq&7Q\[HMbNS^GD=h/
%oY(bGKt+M)@RN\`GZ,X4OB?5_$]<9(Y11ePg%33_oXlZ>Q2PHjCme?up51_1RAp[cf=1jE+la`HG?)pA!$e(qV%:Cnbf1IiQrh,?
%MQ/[7)N5i8hK)M+.d=g4X:tqt,2:FTLe\Wh9<#0dp#0Gr.)"*Go#/313hb9s!O;I`S(iDA2*,dF3Yp]/Fkf93Th\k,^R7(M#PI;$
%U"@'_=I_dPk'0]T4#[:1*T7<?i2Bc$>:#IVOR'+1q8e9`RkB0o>UejdgN=TX3]rjRP](OLksFMc4HHM<'F6PbZ4!@?<jlW`4??-Q
%22%iZ@<Djo2f.joWT:JMrSB$u5t/A_"@#qfp"E*G$;ucOX$4;9AlVS"YS0iaf+As&NGUHGhG)&ZD9#8rF-&oTh8Bn(H1dD)SufYV
%R76J'Rd3&NBB68SLD\`Kb?+2uLt)i^;$;$r@Ih+,G.sE775%4[qpn/sS]]:a76>8#+N:&2QA7B[H@&eQpG^C.fm3asfZUijX-r(#
%m:I/qib=?GTe0Z5Qj.P_-^V4dmj=bc*h?Q;'k_o<Pnqe:)Bd\0.32aTI\s.k'IYf8VUDt!X4^1\f4m2-8Uks3f1p$`m!ijhq/A!6
%+83Y(EP'tsrN:i<_Uu2!MU8'"RDlH0Wj?.4dHogL8Gmi'ZYi4GT)(*g)>\5O9K80pqc1hAd(]&4]G6.@q*u6#+$*R-"M%\?D-q(W
%=>Ak1JES\jpkpW7jYA+1=*jV!U:b2'Zen^DEXL^2/m(MI)Wdk/o'7[HUb/%-/=+8LH0"it_>._pB_>Ip`tmUF1.pF/DFQ\qh?WE'
%^8rF,R*3EnjN<Q=A72gm%V2*8DpJ*CVhD4>!86QJX3r^BIXZK6W5i#N8h_2Np[J;soud_/S^VB#SQl>AO%.2s9DdC[QNDXeAgP.a
%`hBbZ`7TRf*lhA6`4BG8->jD3_#YMm_IkW]lp?FNj&OHmP*Xo5&#e5;\!j(-EZV`"[A%OaDOIhT!UTsqQEr^c,\S!fTt^s514H!J
%*BPq>[!ZDnaKg95m<[OXmZ]n.4jP_0cJaYu"d122UPT'dJ\.;c-uK'd4:Q,9_S^b2jP:WCC^fMo.b%h+<!QqB]skMl[./#;Iq],#
%\*.[3"lUT)Na=5q/Q;UKo>9lss/%a(5tqPdWDr0XhJ+@ZFa@KEbe*Kc4-u!+96"HigElPn=nJ'9e5C]Iq9"%FVKtnXiA7m_l*?_7
%M/*PTV9%pH?K6Ku!$H9R&L2^TN(lj4(n&?8/:\a4.$a)h%P:sHB?i0$kNp@SU`YNdipB`LdGjnb;kC7Nf)cK\g(Wn"haXMQr_+An
%8$[.#\'(RrfT4+7FW,*SAD;^Lp!Q1P5&Q)$lf);t2&qJ2M$)h-=MP3.#>fjaPV^"3_S!2&r3E?>n0cKHo@8s`\6s#G"bQ$n]3bOI
%I:%?G)l/>G9.,P`K;ZH@oS+l@4$NYX38_T9FS]QjZQ2/bOS]a3rGpTaq=q$^Fb$8q%WY01AD/h,U1"s(B4[[sO]t&iS;ulo&.!lZ
%i)pNuAIfF>$k@3]oEB^@]7Z'Io85hGa$IY6K3d>sfBA%T3!p3_E7uLrAO`sMATg)L!?>R5.=:s"io;N4=V)X:#$.>*5JNS6?4_$M
%eZ_$qj/'3SB0WKg+JE`Y_VXe'*=pP!cBD#b%AX)?SRmp='?Lk<Is?aC=V;u22Ejgq:,s)-b%k%j^,foZc2=gk73I91V*#JT%sd^L
%l+icY78mQ(l!)!iJj"O*-4Lp[A9eB+3Ud*9N,U%@kT%--94/);q#T>V#q#4!h_JYGjkmgAk.[5u^TD>=]oc7DQG]=(,1f1_kpMlT
%c?!Mnpaj6_,E'l]K,8L3D(NuT>aX,PS^J!s8u:LO^\l)VbKGDZ^*n&5>&>,-&SnB>?6n!EWlko./T54P^3u,"+tIHM%ju4&RUeK/
%B#l"[,#H5FVQ/FI<2eCdP0=pc15(,$f9hD+c[:lh2b<%(rg0=C=,cB?^<(5a9Mj]?Te+jl%B8Au+M6Y#FIh#COq/4e]MD_V:uRU=
%_,-\d9XA0`0Pm8)-+u-&`-G6lNUU&]]7U@'DG;PTr#&QVLH;?jrRpC7;[;qK`=<qj%C;4:?Ed9[b+9>>99N[A%/l0=$K#')WOOBL
%>+(DVR$R])A@U`ldX.eU:*kV8R[I3DDBMYb/M#tg^F%er0LOr,8slF5SSRFU?-@$"4qnrrp,f0O@KVCArO`p[8o]bM-KrB6P/1lG
%/J2G*U$b@B!'0-`TN$)%HPP)GXd\`,3GuR-Ymh:`TcJ9+N:t'XcRV*RM9oF4\Fa/)rGac>?\"(tiO]1+Q"nW]JtRn<mMjme?;5EF
%#M<d3GG>Y$RJp2UZ(5WV$8EMC)kUTX!b@Zp+*]9P$$XFVC'4_sRf@qE]We5*Jnte=mrL6q,4keW/*"!_`EhU*HCH5p*9:lF#S6QS
%)4&7pSKJu@WcoR*"n\Nq6$o9E.t2?iNBB/o_6tj6gKNWX)_CpfX/2?ZU.u9<:o.31i/pD\l31n`/@!SB>mJsg04Za$^j>g](U`']
%D9@#)^X\6gGp5?Z$](?Yi*3$7ATqs;LGug[o`F>5cmQDHL)d!Adn9&5r.(\\q)Sg)YH!;O51Fjdm4%b&:9:2YWeF-N@Rqk)&=Ns#
%`H34=RT2^p8?f1-]<%'lmR/'d:VAed-WhPqSZ!2gfBe,&!6H&;YIpkOoIuE3WKm7-keag,e0!:,41/o`o`MrX\Eo'SLtNGAnW[FM
%[:i!7YP_F0<#l[!fX2,.bF1:b,seRJoa6p8[pkK,P";H/G;JO^3OF$Ll[-UV!7R'H7_L!JNeTtYlMA(EISLih7c5]ubcu>`r0oTg
%BLZ8\s,kW91ZG.VSquGnRh@TR[O\!3FtueXE9"l!lSFm6EP:qND8RGn%`<>aI"),L^Ra1(T?fCg8mlMn)hr)YQ+Wq$/QT,]#UN82
%@pDRJQ-2gp;s*]>T?l<["Q'n'?&%S@[!XF#09+CGWl<gOe3K-KdjTZ,f!o/kSSb4MK@54*4hZ_Zh\KfPI[,b%eF+XELMB<G#TSF#
%'d6^&k]g)[a[ZqKhXj0of<R?hh=IY0UR_/"j%OC;-^->U&e&$P7+d:J'K-4fV&.m&Y88D5j3h7GSCW?D_l]OYO>2D[5?N@Z7W;+R
%WT'Qk=-eRE1(gR@CGS46b2,g5\XOMk2%]7XoC$j-jeEp;GB"BK#H"Pl=-+Bf5i0n>^R7![4aa2n\9-R0bBl2DEG-dlj$&U+\XS%g
%U6..sLBYR@S=&L-7i_kYC2":]?p>kCSiUu&e])[Ed3bbTNhi]t_+S^_bZEE;S$I;qFn^Q6E%,DEiR1!o!Uk'0=L9SHe[Bu=e;jVN
%mes1Pf7jQ]C`fI\9'-YT%NECOViC@RN])mW:d\(^q0`tTa"H,"h"El#lp;d7*[R#Yf;U]_hoKW,GF:*r#>:sXe3P&l4TR`+2e^p,
%/71ViW4hb=p[ZPu/T>h'C'aFHcjQ?>fV.sk*FiFi_6EOAfF=XHQ>()j3`>Kk;O[';@EbclECE?<>t;tCOZA8'IFeF&o<R+"D'FmN
%Q)9)r8_`fiaJQ=O5q\uB^Sb9cA9?$H``GdqY#TQ<gS+6d6*i)R+n^`Z023F</UQh9C<+GN<'tDMN=T7cZ#sh6KQ!=u?MT4&qoGG>
%DS_?aN][0$$)%/fE=m-?*uL]m"Q/t6ZDp;4h3-K.HaTYEn3D2a1(AF!Pj7Bd!F-^p9bKjU]F&pB'N[BeZ44;!aN2(JA#nto_*aaR
%2!U-_:=a^WZ+t5=#9M#E7W::F3.+0-m!-kL8LI]Af^Bu9T19iRb';.Q4$Z(2R"g/:e5@2_aA"LQ.I56'em%;kMK\'!QlLNTM2TL*
%d=&%hMEESj^/!8#WN(YB8,%=)r0E]<a$[eYI/@M-I,cOQquANg2\9/e+^<"\WpT9`"7f*@</uni6IB?JA@>RAjeRaHi;5eD:`rtd
%BhF.b+RPn)Ohh)si4lM(mg>.(63adVj):<hn&fZOO(ftf$,P6Y;3-RG=?T5An1$btWI,EiO:^E:hu:'*KqJ./,_&8K+]">.8_j^*
%U-%=Fr0YE@,P)WdZ>ZX)O3oMlc_GMC)?^Q`8H#c=:rU,"9HBFVMYsS9_>:&]bDs>XK0SU3j<hY]_kYVfT'G@sh2Dn:I3EYPs5r+M
%<3'r&3,"U2,o0&QB;3jlr_)rGrrBOb)mZ1k;#IhqQjc$b9`k2AhD4dXPUbR6jA.&iXl'Yc&B[`5BWg$WU2f.dR#3Rh#I+Z/_a$Tj
%2:kd;2B'&=rDN%'4']BL[klW(/r?PC\b)@b0lCr`0Go_2Af'`KQn\D\PNGfoWj5"YR8RLl(tg!j)cIlT?;BT1s6u#g?gVG<K?qkX
%S>WK&")Z2l5P)FuG`ua0k3BfGc=)/A7_Znu6G;K98K1@k*6TPkH!J10[gR9M(4GO_?FPpeb(D.0\Jo9+`j5",JsobO%F/DBIGq;(
%9al4$4=*W0P<8-ZLhYu*Q(!BL#YCoMnrk%>018.HE]91/(kL]8pc?#T4lZTrH1u@Ug$Q'bH0&Xe;82p>p*9ml2s@)U_dK>KO>1tZ
%FC$C8frjs[6;$iEaH/O1n]I9@4Ppm9Q>q=#--?PhbW&=YXBD!?AkP@W.3;$E-asA:FDeAV`3;&_4MQl^JQcNlc>`09)lZT%$!.5j
%A?nD^YKf9DZcEMii*jAfTm,5ZLf*9r8$8u+mC;"I)H_]D.f`8?>>te(ZG+]%ZAfp8s$6T0*FkFFqCj]6cah?Hlq2#P0Ao=Y7[okX
%54UD.e3Uf_=J+u3XQ^,3BhEoRG.!-JBYEFhf#tWtRQ[UYrBZ`iC"`'%^1p?(o,.fOQK4C=ME!%XYHeYBYkRO3D2<c*BF#1I#LllY
%`#bS=-0X&7T/kbh^QlWPGBUR&Iane&'1DOdB#5fkl-W:RP61gn>^DBYeVtqsms41Ya>FhXd_+g&#[7UWC,<iT@T#Xofln[AIs2'G
%VqLd=7CH<7:`a7jXoA+s`^pe.-X=r3'GF"jVCALSJ1\!KLup_?N8(PEWTL-kEBDWR#&6@)lf>u-_fhYS?)45)X>N)g*HomeG[Bj9
%ASh(](*TRY_p81hJ\O:-FRW\oR795Z1@EV5N:bE^'E*m(oT4/km@YQoYBA&QJsls>KcPQ9F3:lDaU0pPJK:P.M:&>?2f5ZqH^i8b
%^/##gfoE"ZC.4fc=+Y?TmBYX:8[@8t9P5C7(DfM7n#RiB^>d:Ls(u3DqJ!?HPs7m^ar0tq!S^@EKK\6lA__43PXc@&K&@lJMQpBN
%'$o5/<g"EPp]*7[8OuGLL!6XH%;Ct1_A>P],<,[HYc1`r?@Y-&5$n,?/s\6PD?iDN5`+%:^@6AADU<AZ=ZA^1Pbo]7"DjA]:\uG>
%$e(U=b@F8a.s#XHlE&7=?]_`US\+cqE[pJ09/S.0*E+kt+Bl!+2e/&6G89u@DH/Mi<Of<SA"/e6_C@Ld/WUl>B".+LpTnVu]FlZj
%3>]8NU<)%#qN_pO,E$oXjudFsD,?%N)Stm4S"2-IQ%a[eHfk#q.VX4t\`5\"bd<F@mPDme\]-bAR45n[6[qT2^=g1*9W4tU@(E@J
%,P`6PhH,OSrbthmRg@iTNU9aAa\(?cYcuG)kFGq\'q#6Y9s,)p%6U>;**ChL(C]VU>4I3$EA\!UH[*-B=qNhC!$Y%2cg8Z_Ko;=:
%T?J6$<"C`IYFpn`B)5SChL913E@>V`S$$<'n%+;g<o&g[iumXh)LG>>5j:VA-6,]sPXJ&:(icL!(]pk=S4X>SLN_5Y2iHsj8q;GV
%+R39RW9NY"aYm_;%7JhhKQiNH7[u2Via8LoZWF]1@pULXGic0iSFI8^/1+ID^;*mZ5fA+C]eta=LeCclB@k7JWKIdSk5CI,bqZL+
%l4ll?.#E66qs6Y,elr^/.Sm_d%pWgW<rBLYA-MVcONc.;s#a"-WG92-PVW!kIY6asoD8'OVj!Y!b:9Bc38J&C.[s?D7f*P,CF6fF
%;HNi*C5a\/a('`<)t;/X&ZI:;HotNlIEWu=&+`%]_XV<Zb/c^ecpp=NlnB#j5&r?;8(#DRj%b77:+hMZjBJHoJs]GJaW-@!Hq?&@
%4;NcFQ0*<j-i;WpPE20QiUKHGEcCp<HTp@c)!iT8(sFZ$guF]M*S]S`d717B!6PTZ^_*m=\>:rpbjW!h"3f6P5UXCq>iL;_^DR7T
%EO3t/YM+jC'0Q_a$Z#C#,WjY'V85RXg7KI:6Gaf9MV0B+a/7/'!E'*NaI3mC3O"<+np(GFA$sj$I$dI";0ehX'dKT,%'82gCfZ3P
%\_*e,$:'\689oX9U!StGU!p24@0ZD>_jEXH[lZ.r5ki2Oj[Z,/GG*&YAn:%MR,TNqbiiP/P0m'RYSm"i4[/o"I1U&i5r)Bod)k7V
%T\UL`'*0[k:];F1jc454OVgQZ'!&C&"b@0H@$]p8%rRK7\_?uskai+mV9S+Hn/JF?kqOK+_7GdP4Mk<^c[`Cj;^)fm4i"UP%(^':
%PDA]HGR>IDS^r^5lEGGnFYk.,3l""@nhFnBfZG4j<d-Q(+L2'Z+,<EFY+<tC6@aV`c6_03MEn@L^t'J,)s,8cb2RE2$8n\/%"tu#
%>)1rA!R&E]@gq[JZq(W-m,m+9(/5)H`O8K-:e;(N[6p=Oh*Y%03Z/FS<A/tmnA4!CoFOr?OR]C3OHr6OG\C-OA-R5-AUSqH$4^,A
%M^,Sa(9eQ0Scj1&5Nc7fmXsB*@.rh$G09aX::"[;KI!M)OT)U*H]H)#Cf01IeG([]iLpOkM+8TaR5U?>/^`7`J0bd<ppN7u/eRU;
%K'kK]('5TOZNigprY)Z?l"`A(`(hn^0L/Ikdc5E8qEF`p^Hgp48D2[],f#Jt=o[,Eag%VKeI-B&bM`nS^p-O?lAXHIO1b_f/nVQ7
%Gmab\OnhGdVG=rb(4kg(6%b.@JB+)3q_hD,Q<-2!d4O@e;M6s<E?=3q+.GB*3h6^Ro.L*RdO$#2Efc,*WKRU#A.q+Pja/#;0rV!I
%*sg^r]?A$IB9A.E#48ZE>:76TcHD(R"#4fnn-:kMKbV7jK^TS/p5?Z,X_J"`fh4F%'r;?"llJ2SMrRJIgKuhWB`mO`c6`YV"jskd
%7c@SnLf[nQAkhZRc;94-*3:QC,<9"hci`Q8H%@&r7*e^Sd.LMp'Hdel3VMfR9R64[j])hGb1;PeW<WM)?ba]uRg(%K\-uZHgFm(r
%<dLekqTSER7=0K?iVc3/`j\b8rKZdQKdEmrR,OsXD&`\GPK:e^"o0hNS&i*7KQ6dUF2mJ*Kn&3nOl-2(#j$f$.p6h=E.u_Q`-`fC
%aY)1t@<*)FU1S&DP9,!_nTM@oJX?XB4coZ+M0:J`N%OBh!=8m.%pEqU>]t3#]dVbuW`UYC0n-Gl_%no)86A.TAnA/f/k/#D;0'W_
%?KDR:ch*+V6%5\4!Hn6r?;">1ZuGm0D-<;QcI!oC"J'far/U<9+6M,1H;=gU2GK>;HUW<Ye>k.6_tNkQ2gkaJ6%8WR`I=:.!dQ&V
%/.;Y.'hrMd=Rck<pb8Bh-Q3C(2T0u)m__!tY[L<6HhO%M$sok@\Ajp=;mYlic-eGJI;`lL-B"*9>n[b0Bo"d*rjd;dp,;)J9EbWp
%ndAuWS0+j!@3I;>VXDVFGt>'1WL(c&Pfa-MQeG@X(o`h"Nc)O:!h?*gTIk8?Ml@&W=JL!^ck8VR+or8Y:M<b\0!`WD2W.>FWRSqf
%TVlPf;Rp<:!e-*=:=D$]>m>@Y7qTj!?D:_>1%X\&'11<)JaLml-WO^1Ih0bfWLY60jlTWcl^O>;and5_rgBOL"rTW3"9Auk"%Z@:
%Qr.jTm3ic=cj>]P,d]E%_`Wi6'^W+ED6gI6:YL8R]^/`lVqQ$&o:7pUR%a'S18lMVe1"-k\bur$;0[u/8*6Rt>$)on__M[3K&jK%
%?&iS.6%A'3ed!-]=jl(+l9*6u5#-C5ko^LuZ4ofHhVCMl4Fhh9k^FL%6Gq?hb#-:D&&_<4r`1B,Fa2-f6KXY@82n4h\_.OUMPa"_
%%O2=^nBPGnJb$Ah(ZDSA;94=S?mrgkQPgf=Q!lMfm*bn%+nLXRJqKu3Nn@1,/<keJ50X1s/g._*?TDs/d`$=:l#kr:1sOfRcC\Wc
%6!n/nZJi!%>5>V3LC@HX(Ct#1nkW0L0^^`OErDMAZ3iZ/fEDe@9d%NbQI.OWL.A^%G8sYtFeY'9pEGS+B7?jh)pNuP&us-=-bjOq
%A@L`!LcHlACUPLk*65"^rTF/OW*8WcI8O,u7g,@<!PUQ)(WNP_$NkoC$H)*>O]e`Va!Cn6"2DuuWL-iS>:IGaS,)>+:bS@ieG'Pi
%Y!f%CnV0JI=rO[D,F<K^*^WCdakHdk=SeDV3hHkl@>>kiHqBSeFBFk!e\ak,*gB;qQ&-^l[PCe3;2:u&[kki3*F94fE7#b-=bQd4
%ncW:].C*Up4Q`i\)MPfSdFB$4$SSa?g?4D<b];^dL&B")aMTd(>KLj&?Pd,KO$BZ:*;dPuW._2U,!^NR7j&8'+E`d[+pZ;,Fs."?
%2:8rO8N-P22+[Vgkd=l4ca&iSCmJ/q<Xp"tG7-Z'o\9db*>W[k-V=3n<fNI<VctEe%Z^-;0Op'\[JZ8XFfT.3C)@&*cT6tU,Bep4
%cuMu'[se4ogX<O8YVMrXj$BchoBA5=O'4Sc?U(P[PMg_J!6^#fO\/O1oA`];5=G\sUo2mW(P5k=e?ai.qo7q!2W.!oLjJnP^P1<[
%hZEe[Gl:G.G`UIK6SUN_Spc0k!9O"i=&rCF@m)mki3ALY^R]0(N*snT<\I^.HXg1+?WaRp%O4+uc]1((kLgY0d5.bt_\Y)D1LBtR
%4Q30GUqeXFeE0_;cP(jsbKr<]]X4r&SVO`+i6ses4?,DuJ;=nZa.>f%'*Fb;JRmAejk_"A$%L!$&U_:;Nl2,*_S7cgddQ%>$u&!1
%L*tOf3d6Pc=jIl1Su30Y''++h)N*%e5iCqp^$^)aT:KeqAu'(MO-.s5\*ZoR<-jrWO9kBHRKhe6dtQdC3tXF`h3m[g]!DBP$B=Jt
%+%W*k+Pfa>3Q+1,(.c[cK%CBNBoiZhl=Q('.,(t94:@s"L5kcjKPSFRccut]8sEs9g`K::(1?7gJF`'^cnlMCB'0B<Fe_&\8L.l6
%FY,R$ccut5Dj4nt#5LR-ZP/H*@m#[mAq)>7Wl8e5B.(=1.C]?4d+Da/O/lV&j4VQ6#tkX"-fUfG'92PKgdJkXC@8Wha0/6;4mZ?A
%Y!X%mNDiEpAis:J2H1JD4d:L[olE]LFu%Vn_QsD=KAVe84BiA6.q0r^cOG.S+?Va5rQ#;kFIs/:ETWWCSZgmAi7^ts&!r1I5aoW[
%&E>i6/_&mk+&FJ0Y&RX:jdGG>\6et`HY/%*GQ)^]I"),L]=hSNF\,!F"P*Spr5Zh`(@h';h))]!]8ecrJ&JHr]?oGsIBAlt`!_Rj
%N&0TrG20X"aF1_jR-j#uEKDp!=&)0h-UL>a_DslTn,_*nHc5)lHcE^an9DcQ^0/%e"67&Ic;OUnla<is6X]0tFO!X*S7o90*ns1j
%iHZ(Kl24=i#;cBBh@gsVdKX(&,MC?D4)p`@ZWA.>oJaO"(j3@86[djp-!BiQ??b=>4'#J3B9KZ,bo_H64FK=$SXRCc,NK"pn_`$a
%';@QMGBn5.JY.9>?VYf7?-0bfTiG)#"=d2K]/0$22hne;iZ4:S`cnkALJIlYr2\<oG:[@ni<-K"`cq+[p'NamZh)OQOKO#)c("6o
%Ke>HuS0.;h&E_oh1kY0H&F@rA3su0qR]4,s5//Hc?(k_/7B-rhS`X,T&\R`O^$N3s(GG)g)V`pOMW7-_V:q$J/e,BG*me2reLR(%
%`c^Dd6=sZ6FROCQ,,_`E\XJ:"(fK3$SIFR?qds%12QehEi\7Ag@f/-AI#?2L9=$R<X^C<[_c(*7_8R4%^fmV]]<'1n#%?K>0RZF:
%+9UZe6,+r[RMGsjQ)&P?9P:UTqGpu#lk`5Z*a=KL*K&LPV(_4FLI<q%Ze3Z1l3:-Yb93W0YrE&l.>u[ZL==;!eV7qAlNk$.oQ#02
%]!+9:Bju6IUJ5"`Us^7LW-d3`05N.*/(ub\B^b?X<0XG;G,!t?!FaY$p3'06%'DBhPMeK+&@b%ICrp0?;-Gb-7nZ@Z\+hXBNFdo)
%)Uk*]pk/Al@[E9]D(>gO9KK(H0[RZ!O\9CJWEHtfqe#H*C?c8&1YM@hF;EeRqVFUmd$("X3#;q8a]B6.ImZD&jq=2r;LX=ig\cN\
%r4!$>A,U1b8XU;hf,O1)f5rnlImAJUmY5YY00@\Y]-#R$_1.M0'"KhJ;21>ZKeS*:J%@2ci/g"]SU&":egB.FO(qr&6?!ddR:PNf
%86ade3jDJN!*3YGi3bW2bTeF"Zd0<E[um3ZE-a'1]gt9HO8eB7-/tPXEk8R\8g9d%>3D7b-7#1D2<M'Dql'4><A`kJDaf05h'n_W
%p3a.LU9Y2',SPLPoQc?IN@#8f9#b_69&p0L'=6"r+RCVFg>%[8[G*V)V(.s,Gn4G-MtT9n"*raPd"s%@!&L*Z\a8Z1AS,]X/;iC-
%\A0#DSFS>/]-EU]]hg_//+)prWM;)8)!*TNo5>$E1Q5+oEoN:4(W^o;#t,#lm2/kYXY3(@<'NE(L])kLCXos6T!HY)e[[_f<@usX
%<?oXudY4k5h:^4r0uiUt[LK;DV2lllCm=/^^NqG,,\0m\d1J4]cA,EoUMY:7]$`sm!PTR5V"0F@ED&..YOd0+/s9*eHUfWQ^_cd)
%%jE8(WAfN\F+.:^3K;T</!4:u31"o\M>5-b0:[N_+4!1'YJOlM+q*:.K=00[NhUXl90<uTG'[Kk"'["Na`W0e.OoH!$TW29CG\f]
%gk)Y\:8/-"0.MtQC2r9%>3CTr)S.=ke[(HJ"%f1Ic`Y,FYKl5j($5(gAF70"2c$9^na8bV]jW@9ibtW;-FL<Hnkc@+!a^<0hN[!*
%"qV2)/gtFZbOi?LY2*j-YQN\+^;-;q),PYRG#KplI$T@>gog,#ot^m5p*]=.T=8'UG^H5P?lo]lhppqh')QVS2Rp2MY2_slR,R&=
%PV5U_NW;p,-HTY$R&]^.7D1X>>*7o7BWs6HKKReNHpqiqqq\?j=mr4s,(5i6pTE)-]KYSm'N-O'J$,(aa/u^.cI>Zl?1"BJA@PTm
%-EHAt*V?\>Zl@&>K.Q;jOusc8O3ZBAd@Xu<qZM%1na=WbJZs,:AA<OrZ/@>%SA3H1lS7;@/Ie`$P0R:L;PE[Qee(Lrr2g08\W'Nj
%67mT*5>skJ+(TP[K9bF0RMRrT94ne6m-Sr+0hf_JcDXO'Y(s<foBD]N$XoZgdXY!F$9b[tf1XT2KQE>].<^EGWN[0(_Q)#_qPN;=
%Er955FffoT]tg1/b/$be*iS!@O46GJOn2*q@#L5RJX3B_UrEU"p#_ATRnc*094M`<B/ELrqeMg(+H\_Bf(GP$l=;rjO[u#rgm:JS
%FhWs+IO7!0)%SDT%f"0?lA1[*6%1bS8-Mm/Y98rg?QGn@%3;d9W4hUE;C?6"N'uqVm@05/3N+P,G/J;IOZH@F6kZK(oeIkNeC_,J
%\CAM&EGm+#Qm.G(`_=sgF5_&m<ZBE:=rRI69Cg\1la.K&31rVXK9SVT8-K'7d]#Y?llor$)Mb+Jc_kc]hOP#$0[$']mP#:H<k43t
%]hH=P*XSVCNr94)5'H%)]_2a3?t59:el]%=Na=+H?#=&=@`cSS,!Qs@#.o/36#*VVd#ph,;krWZ(o5.u$`LCa2HcttR>hX[[08G.
%L:La^1Y*\?#.<NWYpj>BX61or"a.Aq+N7VLSn5t5I$1N.@U3)ufD2kLm.D:[/"<LTUj+O1U`>N?cG;9W^uZ"DWVAb]90DS1YtcNd
%U4A4[;Q%ojVnhE;2iZ>_;L(Ck"8gbZOZHi_pJri-&oD\*WUgkPk(R`I/unNo/uu"Fo0p8>7.L36A<E#`"cJV[._h@,e2_qg'g_&s
%5U,<G:Cb3amspgt,Z<g[g4PMYSM+_lNo_g$+^*3I"9LW_dDt2M_\4I*@oMeL/i"[3WVoM#Jna'LW3$2$W9S@(^bFe6f!rVWj5A`0
%@CgdNDjk<<#3e:qZ*+Op6d!6nAcgYTr[`t`8(TRL*)ZfHmneFknUf&I*M4OO]9?3V_-g<c/(qp79ern3a@Pd#HI:!U#Q/k5"7W>[
%oeJ8@.qp_WP/h'AYJlG\D`OfZjUF3WFjVn*<1%Ku[p*Ls"t-1)RLo'M1*,[&\b(W`"Xl.HVU+:V]4C4ZkaR,\G+H.m_#hPZ0-K-*
%cU4_WOT.@9/PTgC0SuIK`<jhqQE45HK:\kbOBggBT3l>-WB@hL6>h^5J_\gpR`Vb*e<U&c)RHC,FIDjFq""THQ(!P\0VbXsHX&Ut
%l(8=p3MN>s7d<p[4Lr'NAR%9!V=S!P4CWW\T]N5ucXBRNRe1+4[uHA)kXrO)!oYXK]Vnh/[S`FUMK3k!hk62)Z4EL.7i/l'OTnki
%!#KtE9I6O##To]l"O[frMjKb>KLSKT4tn4JNS;`<@XJCT&ZuHsNS&>oq&=hU,M5i"s1R(qXu^&K0sHJ9/u<Z>JM$IHKpTj5AjC_K
%jhqH/n8%g-*:"9kMg$,OOeN--53"g7aA%)?P^qcX[&='pkcb5&Il$FS%S7s1k`Ci,_g11(Pe&J@@QZ?1rU]M4E$2MO:)/iCgZ`71
%<GGpBg3.D,4JuEeZu@&'GFW+BAU8o[7ICpYGp)8PNHXL*3GHjP0:,qao&na>:I4[EVgNk`D@o,O_OI(>nL@'6l]h6E[:7fr9u*o9
%>-Y033e<r,Ab@54=4nJVN+LR$/2*]'fUDaF4*m5</\nFUUEaW[.!'=;H!1l7Ec7J=:lQ[rITVd=TXj,"_R?5qf'DZ)d^@s4&Xq'l
%k2=1k@,S+ahD%8hh:5oHX*67]19W#iQCID3#F$M\X\j1^L%"66mI=h7-ARi,_^*?\-7->2#9<\4kOT.eA@X$kajocDO2$dc2UPa?
%T0Y..5eJ9rkVAV]V/!X$>=o?%2TV>@3"@>9Y-V[-(MH"3M2Lmldf.0B0'uI(\FQr.g-'Hik:tKt`bq/GD265;,EgUI==f-qqW7=9
%jU9Nr:H3,")M$kr`(Q(H:hlU+/m:JJ49bE;65Um`$7er6Z`>A/)$ob<AT7d?VstY2Kn_DgIbSJl0k"!Hm2q.PAgZuJA%rO793]m8
%*HVlV;r+u(DD7X2mrCHQd((u;4KL,$_6s7C[buFB+R=!SFCr[K&!3S\?!__AKHfYoS0VfXHp*,or"H@J%,C4dki7uGHr^4U3d:_%
%^tW(F'B.A$'kX]!>@;Xi4[fM(<R7SA8L7(N7!!PqpW)1_qb9%NKcKjdJKV;A5opa\)'2*BpNG4LGJE[VkY@s+]_G`DE$.:h-6%t'
%lC:6<O=VIYkq*p[!0u+iL7E+pqW,td1/6mYWDF6MI4m@48Kjm3(ec"/2SIhUO=`[S_0[Z-;i@Jel2tJa#r/6;Dt(L_p(k"Sqj5,M
%XVGCuU81RVPG8o`"jNTLQT$aM<`lXKE3PMUdYuUflF1G4am?$$DYn$orVFV]qe_b&(d!tPs7q4GUhR]<O64l1J:MGVH0^$Pm8K.j
%\'?%;&IW$h(>sC2%/MUb-ulg\H\fM:01(4R!IELBf@!=I%SHolq<]MOmHJC_L/-\%rpf@Xg6^>_ApIbHXX`^Yd>!HIbaXo"PIOh_
%88'VP*K`rM#!\V>PE&]-4"&[%>*]ZIR2H\X3Z"\8hL;b)3_oS(qUU%FkD+ht1>V"Y0-a+,Q56l[GS;)'6RT6+P5]C6_HP?ke6no@
%+$h^T^H%j!f.6Z).*or@).ZfoidYd9]pk%k;Q0OoT'4Kpq!3]pq:cMfJ(V-rK:.LpVWi`$(@km9,'Q!`pTSDm[EugDLHp5!W!9Ld
%k,tjS<%KAQ,irTo)&jY;Y&gr+)qY@9dn`p=c:tsuIO.9`TZJbe%To<%YP;B`aY2XL(8D24#HY4S@Foqb.L51sp)EFqf=lq+#60D/
%'D^tak^a4mE>aA3RQej#I[*&EnBn3"gj:UKe3]dGa,X)/Fk$:PaC/U6*m2"WiT+Mk4Js5(oU+eU$]NDMD$K$(fc+p-K;)6kYL03@
%A[eC_e3MLl'X%@<"Mm.(DmaSI?Oq;@j&R;+&)USu7lF#;K&k:dQg!gS^$J_PHhpcE"X_YYW:agD%<Oto7OpkakJlXh/lZ'@T.jgJ
%?kW29b$lk$djN'hGm<i<a((Pu6!(h:k&4\Oi>h`M<c'Kd,7'[VInHV_nt*3l[".LON&Qola:aN=^]GB@)!=$J>$WUb8X;UcBrHqN
%aL$MGH3\``#"XKH$mUNuA,"aqR=B*7a$pnb&nfu*m:NUtV\.</+Qhc@R7>1*We/\JBlElV[X<Zn57no/1!las/;WN>$_%a^S9%X"
%4"m@\>HE>7eJOB>8`J=D3^OaZ@>%Ut=8^Zj2SGPd0!89t;hf]Jr"tJ`8pGSF@U5dFesJba?[Y=mjdV@fQYtQpc![oHjLrMO[)aE]
%5'(*#8j;ZPkq,fVTj)V*3pE3V3]>>)"EEnc4<USs5m.16.XG8L.d9<@_t&VJT`]$k<#/<hAr1cP%bob#k@g]E[<i>jJ/sHC(@7&.
%Zd^E^[3_7g1W[Z#GJArWpR^1%KObY/anUesDumLpFu?st"PVC(gsmX0+>hi`b>hgFF;(KSZR\-)bBDEL:e:CnUh3;,%LT[Z"HEu/
%"31<.H*_S@e@M;Mh^&pXjCa_Kk=+Lh%W25G*Ga'rCMn@&Hs`YQ<9P5<m^;X?*(lfK27>8d?M30\%87Dg_j3$VH_I<$iY?NkE+<(Z
%C*,8khA:%o)hhD:p28e?!JeZNR=!^M%[1;]C3n9jPWj-"XF4dnN/^P#4euLK[?$gGEpN"UFEetf@%4*!!pM1?r!lVt4mFc],P%Mi
%U"u/u[1KK;)sEe.8*?oe;Y%ZBoRkZ@V7de=:hCV?0&>PKUu#Z'PF^:d!nm!E^D]J"CtR%l%#2QmhT)&uUTk(`kcWba[.=?0[uj18
%c[hBg%^JNTM\R:\n(flcSPp&_NS%KjL[qSM=1SC\"-a@Z3Vm.AH9-kdW\k09kg_W8Z)l4m/]tL]s.@((?1$8p^bZdE-;`k)m[9Q5
%(YJc="onQTJ+p_VjmW1'N8"=-lT\`Tq)(M!O8nY6U-JY%+(+p/O8o-Ej$riHE)5mnJ9>a!!7h51Iu1*$Rm6VVjU-LhWAf.WrIrk?
%hg7Mk?E.o=!W%&ms621dp\s\irRZPsmpCSDg]-t#J+r^;c$qtXO+7+hs6%/qLO]-S5Q.X4o`b9ls7d-)mVi-k5Q/M"p%r\-oU!>i
%GQ71TrqUJ^r51buj+$i"s6uZ[p4%Sjdi\VXTDnO+s3lJmVn`3#+92:hps4N09t]HRs8HC*%pq^$rrSnLl[J~>
%AI9_PrivateDataEnd
