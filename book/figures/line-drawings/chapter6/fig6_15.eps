%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig6_pf_resampling.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 2/11/2022
%%BoundingBox: 0 0 345 379
%%HiResBoundingBox: 0 0 344.6915 378.8907
%%CropBox: 0 0 344.6915 378.8907
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-02-11T13:45:43-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>236</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A79+aOna/qXku8stDEr3U&#xA;0luLmK2kWK4ks/rCG7jhd2jVZHt+airD5jFUoaX/AAzYWVto2gNo+n6tq1rbC3FyiSoJGgh5w26i&#xA;4ijX00Z2jBX4UYmjtir0LFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXmXkTzX5S/MLznr94tuX1LybqDWOnyCeZoTCY2jW5EPqei0jSfWFWT06hCAD&#xA;1xV6birsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rAPyv0rTLPW/PrWdnBbEeYDEDDGkZEY0yxcJ8IHw8nZqeJOKs/xV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsP0HzXqP6V842+rt9Yt9B1GC3tDZWs0kv&#xA;o3FlbXCqYYvrEkjK1xQso96AdFWP+QfOGkw6v54Z4NSIn8wNInDS9SkIX9GWK0cJbsUaqn4WoaUN&#xA;KEYqzD/HGi/8s2q/9wfVf+ybFXf440X/AJZtV/7g+q/9k2Ku/wAcaL/yzar/ANwfVf8AsmxV3+ON&#xA;F/5ZtV/7g+q/9k2Ku/xxov8Ayzar/wBwfVf+ybFXf440X/lm1X/uD6r/ANk2Ku/xxov/ACzar/3B&#xA;9V/7JsVd/jjRf+WbVf8AuD6r/wBk2Ku/xxov/LNqv/cH1X/smxV3+ONF/wCWbVf+4Pqv/ZNirv8A&#xA;HGi/8s2q/wDcH1X/ALJsVd/jjRf+WbVf+4Pqv/ZNirv8caL/AMs2q/8AcH1X/smxV3+ONF/5ZtV/&#xA;7g+q/wDZNirv8caL/wAs2q/9wfVf+ybFXf440X/lm1X/ALg+q/8AZNirv8caL/yzar/3B9V/7JsV&#xA;d/jjRf8Alm1X/uD6r/2TYqg7j80vJ9vdNaTvqEVyqJK0L6VqgYRyFlRqG26MY2A+RyyGKUvpFtWT&#xA;NCH1EBb/AMrW8l/79v8A/uFan/2TZP8ALZP5p+TX+cw/z4/N3/K1vJf+/b//ALhWp/8AZNj+Wyfz&#xA;T8l/OYf58fm7/la3kv8A37f/APcK1P8A7Jsfy2T+afkv5zD/AD4/N3/K1vJf+/b/AP7hWp/9k2P5&#xA;bJ/NPyX85h/nx+afaDr+la9p41DTJHltS7xcpIpYHDxMUdTHMsbijDuuUyiQaLfGQkLG4TDAydir&#xA;sVdiqU6R5V0XSNS1PU7FJlvNYkWbUXlubmdZJEQRqwjmkkRKIqqOCj4QB0AxVIPy6/47Xn7/AMCN&#xA;v+6Vp+Ks1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvLfOn/kwrv/ALZOn/8AUTfZ&#xA;uOy+Uvh+l5/tznD4/oQGbZ0TsVdirsVZf+VP/KNXH/bRvv8AqIbOa1f97L3vY6D+4j7mZZjOY7FX&#xA;Yq7FXYqwr8uv+O15+/8AAjb/ALpWn4qzXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWC/mjd6hEdDt&#xA;7S9uLJLm6lWdraRonZUt5HCll3pyAOZejxRnkqXJwe0c0seLijztiXDVf+r5qn/SZL/XNv8AkMXc&#xA;6D+VM/e7hqv/AFfNU/6TJf64/kMXcv8AKmfvdw1X/q+ap/0mS/1x/IYu5f5Uz97uGq/9XzVP+kyX&#xA;+uP5DF3L/KmfvSRLGa481aotzqF7OzadYoJZbiRnUGe7PwsTUdPxPjhxYIwkRHbYfpY59VPJCJlu&#xA;bP6EwbRImhhi+t3YEJYhxcSBm5EH42rVqU2rl/B5lxfF35D5Kh0qMzzzfWbms6shT1n4LyFKotaK&#xA;R2I6YeD3o8TaqCkdCi+riD65eUDl/U+sSc9wBTlWvHbpg8PbmU+LvdD5Kn6Jj+tfWfrN1Xjx9P13&#xA;9P7HCvCtK96+O+Hg3vdHibVQ+TOPygtxb+VJog7yBdRvhzlYux/ft1Y75zmqFZJe97DQm8MT5M3z&#xA;Hcp2KuxV2KuxVhX5df8AHa8/f+BG3/dK0/FWa4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwH80/8A&#xA;ery5/wAxc/8A1CyZndnf3vwdZ2v/AHHxDHM6B5V2KuxV2KpTbf8AKW6l/wAwFh/yevMqH1n3D9Lb&#xA;L+7H9aX3RTbLWp2KuxV2Ksv/ACp/5Rq4/wC2jff9RDZzWr/vZe97HQf3EfczLMZzHYq7FXYq7FWF&#xA;fl1/x2vP3/gRt/3StPxVmuKuxV2KuxV2KuxViOjarfz/AJja/p13CpgsrW1bT7gWzowWXk00ZuD8&#xA;LrXgwodzyH7BxVl2KuxV2KuxV2KuxVgP5p/71eXP+Yuf/qFkzO7O/vfg6ztf+4+IY5nQPKuxV2Ku&#xA;xVKbb/lLdS/5gLD/AJPXmVD6z7h+ltl/dj+tL7optlrU7FXYq7FWX/lT/wAo1cf9tG+/6iGzmtX/&#xA;AHsve9joP7iPuZlmM5jsVdirsVdirCvy6/47Xn7/AMCNv+6Vp+Ks1xV2KuxV2KuxV2KvKdP80+dG&#xA;/wCcidS0SawnXyudGiFvKeIjDxuXF1Tkdnd5Ieldh4Yq9WxV2KuxV2KuxV2KsB/NP/ery5/zFz/9&#xA;QsmZ3Z3978HWdr/3HxDHM6B5V2KuxV2KpTbf8pbqX/MBYf8AJ68yofWfcP0tsv7sf1pfdFNstanY&#xA;q7FXYqy/8qf+UauP+2jff9RDZzWr/vZe97HQf3EfczLMZzHYq7FXYq7FWFfl1/x2vP3/AIEbf90r&#xA;T8VZrirsVdirsVdirsVYVH/5Om4/8BuD/qOmxVmuKpR5t16TQfL13q0duLuS39MJbtIYldpJFjFZ&#xA;AsnEfHX7JyUI8RA72GSfDEy7mIf8rL81/wDUvWH/AHFJv+yDNh/Jk+8Oq/lrH3S+z9bv+Vl+a/8A&#xA;qXrD/uKTf9kGP8mT7wv8tY+6X2frd/ysvzX/ANS9Yf8AcUm/7IMf5Mn3hf5ax90vs/W7/lZfmv8A&#xA;6l6w/wC4pN/2QY/yZPvC/wAtY+6X2frY15q83eYNZ1fy/BdaTaWcUdzM5kivpJ2p9WcH4WtYR3/m&#xA;y7TaSWLICacbWa+GfEQARVfjmh0uPMhgkL2Fms4K+jGLyUowNeXJzagrTalFNfbNlcu4fP8AY6eo&#xA;XzPy/av9fX/Utx9TtfSYL9ab61JyQljy9Nfq9JKLuKlanbbrhuXcPn+xahvufl+1aJ/MXGcmytAy&#xA;0+rD63LR/ioeZ+rfB8O+wbfb3wXLuHz/AGLUO8/L9rZn8wenARZWhkav1pTdyAIOW3pn6t8dV33C&#xA;77e+G5dw+f7FqG+5+X7UHpzXbeb9X+sRxxqLOxEBjkaQsnrXlGcFE4t/kjl88hG+M33D9LOdeHGu&#xA;8/dFPMuaHYq7FXYqy/8AKn/lGrj/ALaN9/1ENnNav+9l73sdB/cR9zMsxnMdirsVdirsVYV+XX/H&#xA;a8/f+BG3/dK0/FWa4q7FXYq7FUpbzd5UUlW1qwDDYg3MNQf+Cw0iw1/jDyl/1e7D/pKh/wCasaK2&#xA;GHR+aPLP/K4ri4/S9l6B8vQxiX6xFw5i9lPHlypWhrTGlsMx/wAYeUv+r3Yf9JUP/NWNFbDF/wAz&#xA;fNfleXyTqEcWsWLuzW3FFuYST/pMXQBssw7THvadRvjlXcWKHVNMEzQG7h9ZAWeL1E5AAciSta04&#xA;750/EO94vglV0s/TWj+j631+39Hlw9T1U48qV41rStO2Djj3p8OXKivGqaYZlgF3D6zgMkXqJyII&#xA;5Aha1px3w8Q70cEqulg1rRzE0wv7cxKQrSCVOILVoCa0qaYOOPenw5cqKXahfWU2v6FHFcRyOzzS&#xA;KqOrEobd6MAD098hKQMo/jo2QiRCW3d96e5c0OxV2KuxVKbb/lLdS/5gLD/k9eZUPrPuH6W2X92P&#xA;60vuim2WtTsVdirsVZf+VP8AyjVx/wBtG+/6iGzmtX/ey972Og/uI+5mWYzmOxV2KuxV2KsK/Lr/&#xA;AI7Xn7/wI2/7pWn4qzXFXYq7FXYq8C8qWNk3lfR2a3jZmsbYklFJJMK+2dPgiOCPuDxWpkfFlv8A&#xA;xH701/R9h/yzRf8AAL/TLeENHGe9jSWVl/ysiZPq8fH9DRHjwWlfrUm9KZRwjxf839LlGR8Dn/H+&#xA;hkv6PsP+WaL/AIBf6ZfwhxeM96UearCxGiSkW8Q/e2/7C/8ALRH7ZXliOFuwTPFz7/uTr6rbcy/o&#xA;pzIoW4ipBFOvyy2g08RW/UrPhw9CPhWvHgtK9K0pg4QvEe9d9VtuYf0U5gUDcRUACnX5YaC8RWiy&#xA;swhQQR8CaleC0JHTamDhC8R70r1OCBNd0NkjVWEk6ggAEAW77fLISHqj+OjbAngl8PvTrLWl2Kux&#xA;V2KpTbf8pbqX/MBYf8nrzKh9Z9w/S2y/ux/Wl90U2y1qdirsVdirL/yp/wCUauP+2jff9RDZzWr/&#xA;AL2Xvex0H9xH3MyzGcx2KuxV2KtK6MSFYEjcgGuxJH8Dikghhf5df8drz9/4Ebf90rT8UM1xV2Ku&#xA;xV2KvCfKX/KK6N/zA23/ACZXOpwfRH3B4jU/3sv6x+9NctaWMp/5Mub/ALY0X/UVJmP/AJX/ADf0&#xA;uSf7j/P/AEMmzIcZKfNf/HEl/wCMtv8A9REeVZfp/He24Pq+f3JtlrU7FXYq7FUp1X/jt6J/xln/&#xA;AOod8qn9Q/HRtx/TL4fer6hrMFjMscik1RpGYECgAPEAHduRFNumRy5xA0WzDpjkFjvQ0vmeyWMv&#xA;CjT/AB+moSlS3p+pUf5P+V9OVnVxrbf+y2yOgmTRNbX9tfgOHmnTDEZakIGK0NORHDmpC9fj6L44&#xA;/m4VanQZLr8c6+zqpXPmiG3jmeiSOsipHDzAPEwLKSSvOu5Kig67ZGerEQT5/otnj0BkQOW3P/Or&#xA;y9/uS601hz5rvZJFMZa3tokhUqfU4PdlFqe7FxQDfp2yEdR6zf8AbzbJaSsYrfz32+m03i8xRTXk&#xA;EMEXqQTmi3HIKKAbmh6/EeI965cNUDIADY9WiWiMYEk0R0/Hz+Sb5lOE7FXYqy/8qf8AlGrj/to3&#xA;3/UQ2c1q/wC9l73sdB/cR9zMsxnMdirsVdirGdE8nnR9Ga3057ey1SV5Gkvo4BJ8Mk7yiOjFCVVX&#xA;4rU7ZjxwGMajtLvp2+q7T8fLxZBKeMAenirlEC+u5qyxfyLpvmWTVvOi22tJA8WvFLpzaLJ6sv6N&#xA;sm9QAuOHwMq8d+le+R8LL/P/ANj+1h+a0n+on/lYf+JZb+h/OX/UxR/9ICf9VcfCy/z/APY/tX81&#xA;pP8AUT/ysP8AxLv0P5y/6mKP/pAT/qrj4WX+f/sf2r+a0n+on/lYf+Jd+h/OX/UxR/8ASAn/AFVx&#xA;8LL/AD/9j+1fzWk/1E/8rD/xKVXnlj8xZdctrqDzSkVnHHxmUWwHI8if7glozt+1yBymWnzmYInt&#xA;7v0Obi7Q0AwyjLATInb1f77n8Kp455a0bzo/lzSnh8yRRQtZ25jiNgjFVMS0XkZRWg752WGGTgj6&#xA;ug6PmGpyYvEl6P4j/F5+5Mv0J55/6meL/uHR/wDVXLODJ/O+xp8XF/M/2X7FXRfLWq2muTaxqeqj&#xA;UbiS1W0RVt1twqLIZK/C71NWwwxES4ib2RkzRMOGMaF3ztkOXuOlPmv/AI4kv/GW3/6iI8qy/T+O&#xA;9twfV8/uTbLWp2KuxV2KpTqv/Hb0T/jLP/1DvlU/qH46NuP6ZfD70xZ7U3CxsyG44kohI58ehIHW&#xA;mSJjddWAEuG9+FRS+0to2nSaFkjBLOrKaBRTt4cvxyIyQqwQ2HFkBog7ujvLJyzAoIY1R/XJUL8V&#xA;QB1qNh3xE4n3KcUx32ejaTaf9n4I/wB4YVDALV1FOK167eGIlH7aQYz8ztfwS22e1HmzUm5IAljY&#xA;/FUbMJrtDv49BkQY8Z9w/S2SEvDA35n7opgs+nySc1ETR26cxcgoVSpKkA12+ya4RKJN7bdWJhMC&#xA;t7l033XjUrEtQTIVKh1kBHBgxYfC3Qn4TkvFj3sTgn3Lob+ym9P050YzLziXkOTClahTv0xjkiao&#xA;80Swzjdg7K+WNbL/AMqf+UauP+2jff8AUQ2c1q/72Xvex0H9xH3MyzGcx2KuxV2KuxVhX5df8drz&#xA;9/4Ebf8AdK0/FWa4q7FXYq7FXhPlL/lFdG/5gbb/AJMrnU4Poj7g8Rqf72X9Y/emuWtLsVdiqU+a&#xA;/wDjiS/8Zbf/AKiI8qy/T+O9twfV8/uTbLWp2KuxV2KpTqv/AB29E/4yz/8AUO+VT+ofjo24/pl8&#xA;PvXaho4vdRhmYmNI4zWVOIbkHVlFSC1Nj0/jleXBxzB8m7DqfDgRzs/oKyDyzYx8Q7PMq8jxkod3&#xA;jSOuwHQR7eGCOkiPP+wD9DKeumeW3u95P6Xf4chMYRriQgKq0KxcTwJoSvDidm74/lRXM/Z+pfzp&#xA;u6H2/rbHl6NbiCYXEjC3dnRJAjgciCaEitfh69cfywsG+SPzh4SKG46WEB+iLe4826lzZlH1Wzmo&#xA;tBu8lypU+3KJX/1sidPE5Cfd+n+1nHVyjiiNuZ/R+gke5E/4bEFqUhmdmCxqIlEcaH05DIpoVbcF&#xA;j1698H5Wo7H7uhtP57ilZA6955iu9u08uQcUknBEqmqxluYUesZep6s3Rj7nDDSjmef7bRk1x3A5&#xA;fL+Gvl3Ii00NLaeGVLmSkKCMJ8ChkWvFXCqOVOVfHJw0/CQQTs15NWZgggb79UzzJcRl/wCVP/KN&#xA;XH/bRvv+ohs5rV/3sve9joP7iPuZlmM5jsVdirsVdirCvy6/47Xn7/wI2/7pWn4qzXFXYq7FXYq8&#xA;J8pf8oro3/MDbf8AJlc6nB9EfcHiNT/ey/rH701y1pdirsVSnzX/AMcSX/jLb/8AURHlWX6fx3tu&#xA;D6vn9ybZa1OxV2KuxVKdV/47eif8ZZ/+od8qn9Q/HRtx/TL4fem2WtTsVdirsVSm2/5S3Uv+YCw/&#xA;5PXmVD6z7h+ltl/dj+tL7optlrU7FXYq7FWX/lT/AMo1cf8AbRvv+ohs5rV/3sve9joP7iPuZlmM&#xA;5jsVdirsVdiryry950s9A8zeeLW4sL25abXjOslrGjoFOm2SUJZ0Naxntl+PTTmLiHGzazHjNSNF&#xA;P/8Ala+lf9WjVP8AkTF/1Wyz8jl7mr+UsH853/K19K/6tGqf8iYv+q2P5HL3L/KWD+c7/la+lf8A&#xA;Vo1T/kTF/wBVsfyOXuX+UsH853/K19K/6tGqf8iYv+q2P5HL3L/KWD+c8v8AK2rSL5V0Cmn3TiWx&#xA;twSqp8FI1WrVcdeop2zd4ZVCOx5B5rUQvJPcfUU2/S0nqXCfo+6pAGIfinGTiwWkfx716itNst4/&#xA;ItPh8twsfWpVgjl/Rl4xkLAxBI+a8absPUp8Vdt8HH5FfD35hUbVJBcTQ/ULoiJWYShU4PxFaIed&#xA;at0FRh4t+RRwbXYSjzJqkkugljYXUXO5gjKuqAqBNGebUc/Ca0yvJP08i3YYVPmOR+5kuXuM7FXY&#xA;q7FUp1X/AI7eif8AGWf/AKh3yqf1D8dG3H9Mvh96bZa1OxV2KuxVKbb/AJS3Uv8AmAsP+T15lQ+s&#xA;+4fpbZf3Y/rS+6KbZa1OxV2KuxVl/wCVP/KNXH/bRvv+ohs5rV/3sve9joP7iPuZlmM5jsVdirsV&#xA;dirxMf8AKW+cP+2x/wBiNrm+7N/u/i8v2z/fD+r+tF5sHVOxV2KuxVKfJ/8AyiWif8wFr/yZXKsP&#xA;0D3Bt1H95L+sfvTbLWp2KuxVKfNf/HEl/wCMtv8A9REeVZfp/He24Pq+f3JtlrU7FXYq7FUp1X/j&#xA;t6J/xln/AOod8qn9Q/HRtx/TL4fem2WtTsVdirsVSm2/5S3Uv+YCw/5PXmVD6z7h+ltl/dj+tL7o&#xA;ptlrU7FXYq7FWX/lT/yjVx/20b7/AKiGzmtX/ey972Og/uI+5mWYzmOxV2KuxV2KvEx/ylvnD/ts&#xA;f9iNrm+7N/u/i8v2z/fD+r+tF5sHVOxV2KuxVKfJ/wDyiWif8wFr/wAmVyrD9A9wbdR/eS/rH702&#xA;y1qdirsVSnzX/wAcSX/jLb/9REeVZfp/He24Pq+f3JtlrU7FXYq7FUp1X/jt6J/xln/6h3yqf1D8&#xA;dG3H9Mvh96bZa1OxV2KuxVKbb/lLdS/5gLD/AJPXmVD6z7h+ltl/dj+tL7optlrU7FXYq7FWX/lT&#xA;/wAo1cf9tG+/6iGzmtX/AHsve9joP7iPuZlmM5jsVWySLHG0jV4oCzUBY0ArsBUn6MVQ/wCk7X9F&#xA;fpSkv1T0PrVPRm9b0+HP/efh63Pj/uvhzrtSu2KvONL1DUx59s45J5TfXGuatBfWzyPQaZDZlrYr&#xA;CWK+mGFuQ3EfEx/m+JVLNQ8tfmDb+afMdzZ+Xhe2Woah9atbgXtvFyj+rQxfYc8h8UR65sdLrRij&#xA;wkXu6nXdnSzT4ga2W/oj8y/+pU/7mFr/AFzJ/lSPcXC/kSf84O/RH5l/9Sp/3MLX+uP8qR7iv8iT&#xA;/nB36I/Mv/qVP+5ha/1x/lSPcV/kSf8AODv0R+Zf/Uqf9zC1/rj/ACpHuK/yJP8AnBBaH5Z/M7T9&#xA;F0+wfysHe0toYGcahagExRhCRv7ZCHaURECjs2ZOx5SkTxDco39EfmX/ANSp/wBzC1/rk/5Uj3Fr&#xA;/kSf84O/RH5l/wDUqf8Acwtf64/ypHuK/wAiT/nB36I/Mv8A6lT/ALmFr/XH+VI9xX+RJ/zggtZ8&#xA;s/mdfae9snlYKzPE3I6ha0/dyq57/wCTkJ9pRIqi2Y+x5RN8QRv6I/Mv/qVP+5ha/wBcn/Kke4tf&#xA;8iT/AJwd+iPzL/6lT/uYWv8AXH+VI9xX+RJ/zg79EfmX/wBSp/3MLX+uP8qR7iv8iT/nB36I/Mv/&#xA;AKlT/uYWv9cf5Uj3Ff5En/OCCvPLP5nT6hp9yvlYBbR5GZf0ha1POJkFN/8AKyB7SiSDR2bI9jyA&#xA;I4hujf0R+Zf/AFKn/cwtf65P+VI9xa/5En/ODv0R+Zf/AFKn/cwtf64/ypHuK/yJP+cHfoj8y/8A&#xA;qVP+5ha/1x/lSPcV/kSf84O/RH5l/wDUqf8Acwtf64/ypHuK/wAiT/nBBReWfzOTWrq/PlYFLi2t&#xA;oFT9IWtQYJJ3J69/XGQHaUeImj+LbD2PLhA4hzP21+pG/oj8y/8AqVP+5ha/1yf8qR7i1/yJP+cH&#xA;foj8y/8AqVP+5ha/1x/lSPcV/kSf84O/RH5l/wDUqf8Acwtf64/ypHuK/wAiT/nB36I/Mv8A6lT/&#xA;ALmFr/XH+VI9xX+RJ/zgm3lGb80tC0yWyPk6Gf1Lq4uA51WFDSeQuAVEUg2r45qs2TjmZd7vdNiO&#xA;PGInonf+JvzQ/wCpIg/7jEX/AFQypuY1rHn789bfzXp9hYfl9BcaZNCZLtvrwPEhiP8AeykcKbfs&#xA;GNmOKsi/NafUE/Li8vhPPp2pwxo0MFlcMnO+nHoW0DTIEdoxdTRn4ePLiAfhJUqsu+rXn6L+rfWj&#xA;9c9D0/rvFeXq8OPq8aca8vipSmKongnP1OI50486b060rireKuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpVqPlby/qWqWmqX1jHcX9iVNrO9fhKN6iVUHi3&#xA;B/jXkDxbcb4qmuKsY13z5Y6L5hg0m9tZlhms7m9N+APSVLSMyzbGlQiheTdAzoN6niqv0HzrDqgb&#xA;1rC4seNnp17+8AkJ/SYbhFxi5tyidOL7e/TfFWSYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWPeZ/IuieZJ1l1Fp1rZ3Om3CQSemJ7K9MbXFvIQOQVzA&#xA;m6FW99ziqU3n5fN9X06HStUla4sdWt9Q1G5u5GeWVYIgqQsIDCvwqsVFIoVBH7ZOKs3xV2KuxV2K&#xA;uxV2KuxV2KuxVxIG5NB0399sVWCeAzGASKZlHJouQ5AHuV64qoPqVuJkij5TO0xt39IchG4QyH1D&#xA;+z8Pj4jFV5v7QXJtjKBMIvXKmtBGDxLcunX3xVWV0YAqwYEBgQa1B6HFVCa/gjkijWs0krqgSIci&#xA;obkeb0+yvwNufl12xVdLe2sTojygPJIIlA3+MgsFNOmynriraXdq5lCSo3oMEmow+BiquFbwJV1P&#xA;yIxVVxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvJfyPs/O9v5h/MNvMVxaTQya6WRLWSVxFcNbxTOqCS&#xA;NP3XoTQKprWqnbvir1rFXYq7FXYq7FXYq7FXYq7FUh86aGms6Olr6KSyi6tXiZ4xKE43CGRitV29&#xA;Ply3G2KpIPyxLTTzzavLLNNAsHqmOjgp9WpJzVw/P/ROteh8QSVUb/gGKC9afTLiLTozP66CG2X1&#xA;QGhMMieoW3B5VU8dt+++KoRvy4nGktp8eoxpHJH6MsSW5jiaP1BIYhxk9RUc1L/HyJOzAbYqmOoe&#xA;SzdW+npBftYz6fbehHJbxhVZ4+DW7FCx+CGSPkE5b9CcVQFp+XBs9U+u2d+IOM0UqSej6s5SKFoe&#xA;DPI7J+2WBCdd25Yql2i/l/cTtJHfCa1hrbfWyywp9bNuZeQ4xSTNRxJV5Hcu3I9uiqLP5YenZx21&#xA;re20bobdjcS2KyuXt7dbck1lCsG4c+LhgGJO+1FWdRqyxqrtzYABnpSp7mgxVvFXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FWFfl1/x2vP3/AIEbf90rT8VZrirsVdirsVYov5qeQ3UMmp80YVV0t7llIPQhhGQQ&#xA;fEZaMMz0LSdRjG3EG/8AlaPkb/q4t/0jXX/VLHwJ9xR+Zx/zh83f8rR8jf8AVxb/AKRrr/qlj4E+&#xA;4r+Zx/zh83f8rR8jf9XFv+ka6/6pY+BPuK/mcf8AOHzXR/md5HkljiXUqPK6RR8oLhAXkYKo5NGA&#xA;KsQN8BwzAsgpjqMZNCQZRlbc7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWFfl1&#xA;/wAdrz9/4Ebf90rT8VZrirsVdirsVeE+Uv8AlFdG/wCYG2/5MrnU4Poj7g8Rqf72X9Y/emuWtLsV&#xA;diqU+ZppIdPt3Q0Y6jpqHvs+oQI34NmJrTWKTm9mi88fx0e75zj2DsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVYV+XX/Ha8/f+BG3/AHStPxVmuKuxV2KuxV4T5S/5RXRv+YG2/wCT&#xA;K51OD6I+4PEan+9l/WP3prlrS7FXYqk3mz/jmW3/AG09K/7qVvmJrv7qX46ud2Z/fx+P3F71nOPX&#xA;uxV2KuxVhX5l6trdidFg0rUZdNN5cypcSwxwSOyJbu4X/SIp1HxKOgrmTpMIyT4S4ev1EsWPijzY&#xA;t+lPOn/U1X//ACI0z/sjza/ybj83R/yzm7o/j4u/SnnT/qar/wD5EaZ/2R4/ybj81/lnN3R/Hxd+&#xA;lPOn/U1X/wDyI0z/ALI8f5Nx+a/yzm7o/j4u/SnnT/qar/8A5EaZ/wBkeP8AJuPzX+Wc3dH8fFkH&#xA;5c6v5gutd1ux1TVZtThtrWwmtvXjto2Rp5LtZKG2hgqGECfar02zW63BHFIAdzuOztVLNAmVc2fZ&#xA;huwdirsVdirsVdirsVdirsVdiryjy552stC8z+e7Sexvbp5Nf9USWsaOgB0yxWhLOhr8Phl+PTzm&#xA;LiHGzavHjNSNFkP/ACtfSv8Aq0ap/wAiYv8Aqtln5HL3NX8pYP5zv+Vr6V/1aNU/5Exf9VsfyOXu&#xA;X+UsH853/K19K/6tGqf8iYv+q2P5HL3L/KWD+c7/AJWvpX/Vo1T/AJExf9VsfyOXuX+UsH85595P&#xA;YP5S0Rx0awtSPphXN9g+iPuDy2p/vZf1j96bZa0uxV2KpN5s/wCOZbf9tPSv+6lb5ia7+6l+Ornd&#xA;mf38fj9xe9Zzj17sVdirsVYD+af+9Xlz/mLn/wCoWTM7s7+9+DrO1/7j4hjmdA8q7FXYq7FU7/LT&#xA;/lK/MP8AzAaX/wAnr/NH2n9Y9z0vYv8Adn+t+gPRs1ruHYq7FXYq7FXYq7FXYq7FXYq8Ot/+Uy88&#xA;f9tv/u22Wbzsz+7P9b9AeZ7a/vR/V/SUwzZOodirsVdiqTeSv+UN0H/tnWn/ACYTKsH0R9wbtT/e&#xA;y/rH705y1pdirsVS/XYo5bOBZByUXti4G4+JLyJlO3gRmLrB+6k5nZ5rPH3vcc5t7F2KuxV2KsB/&#xA;NP8A3q8uf8xc/wD1CyZndnf3vwdZ2v8A3HxDHM6B5V2KuxV2Kp3+Wn/KV+Yf+YDS/wDk9f5o+0/r&#xA;Huel7F/uz/W/QHo2a13DsVdirsVdirsVdirsVdirsVeHW/8AymXnj/tt/wDdtss3nZn92f636A8z&#xA;21/ej+r+kphmydQ7FXYq7FUm8lf8oboP/bOtP+TCZVg+iPuDdqf72X9Y/enOWtLsVdiqR+diw8s3&#xA;ZR2jYGEq8bMjqfWShVlIZSOxBrlOoFwIcjSEjICEy+ozf9XTV/8AuLal/wBlGVfksX83727+Us/8&#xA;77nfUZv+rpq//cW1L/sox/JYv5v3r/KWf+d9zvqM3/V01f8A7i2pf9lGP5LF/N+9f5Sz/wA77nfU&#xA;Zv8Aq6av/wBxbUv+yjH8li/m/ev8pZ/533JRqMMsXmbQQ17fXCsbolLu9urpARDsQtxLIoO/UCuC&#xA;OnhCYMRXNMtVky45CZvkyHMxwHYq7FXYqkMcMkvnLUgt3eWwXTtP2s7u5tOVZ737f1eSLl025Vpm&#xA;LPBDJM8QugP0ubi1OTFiHAauR+6KafUZv+rpq/8A3FtS/wCyjB+SxfzfvT/KWf8Anfc76jN/1dNX&#xA;/wC4tqX/AGUY/ksX8371/lLP/O+531Gb/q6av/3FtS/7KMfyWL+b96/yln/nfc76jN/1dNX/AO4t&#xA;qX/ZRj+SxfzfvX+Us/8AO+5nf5VzXMnliQXFzPdNFfXkSS3M0lxJwSdgqmSZncgDYVOaPUxEchA5&#xA;PTaOZnijI8yGYZQ5LsVU57i3gQPPKkSMyxqzsFBeRgiKCe7MwAHc4qqYq7FXiOqeWfzQs/N3ma60&#xA;zyzDqOnapqIvLW5fUYbclPqlvBT02RyN4D1/tzP0ut8KNVe7q9b2d48xLirauSn+jfzi/wCpLt/+&#xA;4vB/1SzJ/lQfzft/Y4f8hn+f9n7Xfo384v8AqS7f/uLwf9Usf5UH837f2L/IZ/n/AGftd+jfzi/6&#xA;ku3/AO4vB/1Sx/lQfzft/Yv8hn+f9n7Xfo384v8AqS7f/uLwf9Usf5UH837f2L/IZ/n/AGftQWh+&#xA;XPzj0zRNP00+TreU2VtDbmT9LQLy9KMJyp6bUrx8chDtLhiBw8vNsy9jGUjLi5m+X7Ub+jfzi/6k&#xA;u3/7i8H/AFSyf8qD+b9v7Gv+Qz/P+z9rv0b+cX/Ul2//AHF4P+qWP8qD+b9v7F/kM/z/ALP2u/Rv&#xA;5xf9SXb/APcXg/6pY/yoP5v2/sX+Qz/P+z9qA13y1+cep6XNYjyfbxGUoef6WganB1fp6a/y+OQy&#xA;dpcQrh+1sxdjmMr4vs/aj/0b+cX/AFJdv/3F4P8Aqlk/5UH837f2Nf8AIZ/n/Z+136N/OL/qS7f/&#xA;ALi8H/VLH+VB/N+39i/yGf5/2ftd+jfzi/6ku3/7i8H/AFSx/lQfzft/Yv8AIZ/n/Z+136N/OL/q&#xA;S7f/ALi8H/VLH+VB/N+39i/yGf5/2ftQF55a/OO41TTr4eT7dRYmYlP0tAeXqpw6+mKU+WQl2lZB&#xA;4eXm2R7HIiRxc/L9qP8A0b+cX/Ul2/8A3F4P+qWT/lQfzft/Y1/yGf5/2ftd+jfzi/6ku3/7i8H/&#xA;AFSx/lQfzft/Yv8AIZ/n/Z+136N/OL/qS7f/ALi8H/VLH+VB/N+39i/yGf5/2ftd+jfzi/6ku3/7&#xA;i8H/AFSx/lQfzft/Yv8AIZ/n/Z+1BQ+XPzjj1u71L/B1uRc21tbiP9LQbfV5J35V9Pfl9Y8O2QHa&#xA;XqJ4e7r7/wBbYexjwiPFyJPLvrz8kb+jfzi/6ku3/wC4vB/1Syf8qD+b9v7Gv+Qz/P8As/a79G/n&#xA;F/1Jdv8A9xeD/qlj/Kg/m/b+xf5DP8/7P2u/Rv5xf9SXb/8AcXg/6pY/yoP5v2/sX+Qz/P8As/a7&#xA;9G/nF/1Jdv8A9xeD/qlj/Kg/m/b+xf5DP8/7P2sg8mz/AJraFpD2cvky3keS5uLkkavCKevIX4/3&#xA;LdK5q82TjkZd7utPi8OAjzpPf8Tfmh/1JEH/AHGIv+qGVtzGtX/ML88LXzbp+nWf5eR3Wmzwl7ll&#xA;vQQrciK/XSqQJRR/dshY+O4xVPvOPmXU9P17yZbTvFZwatdrHf2cqLOgYJsvqcSea3DwpEU4/EeR&#xA;+FTirPMVdirsVdiryr8zbjU4dfvpI3KSQ6Zp7eWwXZa6i+pOs6xAfadkEKtQE8TQ7HdV6rirsVdi&#xA;rsVYNBqekx/nHc2EWoqbybSFM9gbkuRMkoZQsDOQjejR6Ko2PLvXFWc4q7FXYq7FXkP5UX+gXfn3&#xA;W/0B5ifU7CKzW2ntpLhrmW4u4J29fUJh9iHkZRFGAB6gUtTiFJVevYq7FXYqlPm24sLbyvq0+oz3&#xA;FrYJaTG6ubTkLiOPgeTxFAWVlG4YdOuKsX/KCS3Fj5gs7aT6xb2msTrFcwzNcWTrJFFKq2buWKpG&#xA;H4utSBJzp1oFWfYq7FXYqxz8wNR1Ow8r3U1gGjJVlub5JIIjaW4RmkuA08kSVAXiu5ozBqEA4qhP&#xA;yh1D9Iflb5TuTIZZP0VaRTyM6yMZoYVil5MrP8XqI3IE8gdmAaoxVl2KuxV2KuxVpkRipZQSpqpI&#xA;rQ0pUfQcVbxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-02-11T13:45:43-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-02-11T13:45:43-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>344.691406</stDim:w>
            <stDim:h>378.890625</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:7AA75751678BEC11832FC73D79298F35</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7AA75751678BEC11832FC73D79298F35</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:7AA75751678BEC11832FC73D79298F35</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7AA75751678BEC11832FC73D79298F35</stEvt:instanceID>
                  <stEvt:when>2022-02-11T13:45:43-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -378.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 378.891 li
344.691 378.891 li
344.691 0 li
cp
clp
2 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
15.2422 232.156 mo
325.203 232.156 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
332.723 232.156 mo
325.203 234.895 li
325.203 229.418 li
332.723 232.156 li
cp
f
.5 lw
332.723 232.156 mo
325.203 234.895 li
325.203 229.418 li
332.723 232.156 li
cp
@
2 lw
15.2422 232.156 mo
15.2422 24.2422 li
@
15.2422 16.7231 mo
17.9771 24.2422 li
12.5039 24.2422 li
15.2422 16.7231 li
cp
f
.5 lw
15.2422 16.7231 mo
17.9771 24.2422 li
12.5039 24.2422 li
15.2422 16.7231 li
cp
@
15.2422 328.535 mo
71.9331 328.535 li
71.9331 362.551 li
15.2422 362.551 li
15.2422 328.535 li
cp
.419608 .811765 .992157 rgb
f
1 lw
15.2422 328.535 mo
71.9331 328.535 li
71.9331 362.551 li
15.2422 362.551 li
15.2422 328.535 li
cp
0 0 0 rgb
@
128.629 345.543 mo
185.32 345.543 li
185.32 362.551 li
128.629 362.551 li
128.629 345.543 li
cp
.419608 .811765 .992157 rgb
f
128.629 345.543 mo
185.32 345.543 li
185.32 362.551 li
128.629 362.551 li
128.629 345.543 li
cp
0 0 0 rgb
@
185.32 311.527 mo
242.011 311.527 li
242.011 362.55 li
185.32 362.55 li
185.32 311.527 li
cp
.419608 .811765 .992157 rgb
f
185.32 311.527 mo
242.011 311.527 li
242.011 362.55 li
185.32 362.55 li
185.32 311.527 li
cp
0 0 0 rgb
@
242.012 345.543 mo
298.707 345.543 li
298.707 362.551 li
242.012 362.551 li
242.012 345.543 li
cp
.419608 .811765 .992157 rgb
f
242.012 345.543 mo
298.707 345.543 li
298.707 362.551 li
242.012 362.551 li
242.012 345.543 li
cp
0 0 0 rgb
@
71.9341 294.52 mo
128.629 294.52 li
128.629 362.551 li
71.9341 362.551 li
71.9341 294.52 li
cp
.419608 .811765 .992157 rgb
f
71.9341 294.52 mo
128.629 294.52 li
128.629 362.551 li
71.9341 362.551 li
71.9341 294.52 li
cp
0 0 0 rgb
@
15.2422 232.156 mo
15.2422 198.141 li
71.9341 198.141 li
71.9341 130.109 li
128.629 130.109 li
128.629 113.102 li
185.32 113.102 li
185.32 62.0781 li
242.012 62.0781 li
242.012 45.0698 li
298.707 45.0698 li
298.707 232.156 li
15.2422 232.156 li
.419608 .811765 .992157 rgb
f
298.707 45.0698 mo
9.56982 45.0698 li
15.2422 232.156 mo
15.2422 198.141 li
71.9341 198.141 li
71.9341 130.109 li
128.629 130.109 li
128.629 113.102 li
185.32 113.102 li
185.32 62.0781 li
242.012 62.0781 li
242.012 45.0698 li
298.707 45.0698 li
298.707 232.156 li
15.2422 232.156 li
15.2422 232.156 mo
15.2422 198.141 li
71.9341 198.141 li
71.9341 130.109 li
128.629 130.109 li
128.629 113.102 li
185.32 113.102 li
185.32 62.0781 li
242.012 62.0781 li
242.012 45.0698 li
298.707 45.0698 li
298.707 232.156 li
15.2422 232.156 li
0 0 0 rgb
@
2 lw
15.2422 362.551 mo
15.2422 279.359 li
@
15.2422 271.844 mo
17.9771 279.359 li
12.5039 279.359 li
15.2422 271.844 li
cp
f
.5 lw
15.2422 271.844 mo
17.9771 279.359 li
12.5039 279.359 li
15.2422 271.844 li
cp
@
2 lw
15.2422 362.551 mo
325.203 362.551 li
@
332.723 362.551 mo
325.203 365.285 li
325.203 359.813 li
332.723 362.551 li
cp
f
.5 lw
332.723 362.551 mo
325.203 365.285 li
325.203 359.813 li
332.723 362.551 li
cp
@
1 lw
128.367 299.93 mo
128.367 333.945 li
128.629 130.109 mo
128.629 232.156 li
185.32 113.102 mo
185.32 232.156 li
71.9341 198.141 mo
71.9341 232.156 li
@
242.012 62.0781 mo
242.012 232.156 li
@
1.76465 lw
9.56982 158.457 mo
64.418 158.457 li
1 .129412 0 rgb
@
71.9341 158.457 mo
64.418 161.191 li
64.418 155.719 li
71.9341 158.457 li
cp
f
.441162 lw
71.9341 158.457 mo
64.418 161.191 li
64.418 155.719 li
71.9341 158.457 li
cp
@
1 lw
[4.77406 3.38528 ] 3.38979 dsh
128.629 130.109 mo
185.32 130.109 li
242.012 62.0781 mo
298.707 62.0781 li
185.32 113.102 mo
242.012 113.102 li
71.9341 198.141 mo
128.629 198.141 li
0 0 0 rgb
@
.937988 159.703 mo
.891113 159.938 .796875 160.313 .796875 160.391 cv
.796875 160.672 1.01611 160.813 1.25 160.813 cv
1.43799 160.813 1.73389 160.688 1.84375 160.375 cv
1.875 160.313 2.42188 158.141 2.48389 157.844 cv
2.60889 157.328 2.89111 156.203 2.98389 155.781 cv
3.04688 155.578 3.5 154.828 3.875 154.469 cv
4.01611 154.359 4.46875 153.953 5.15576 153.953 cv
5.57813 153.953 5.81299 154.141 5.82813 154.141 cv
5.34375 154.219 5 154.594 5 155.016 cv
5 155.266 5.17188 155.578 5.60889 155.578 cv
6.03076 155.578 6.48389 155.203 6.48389 154.625 cv
6.48389 154.078 5.96875 153.594 5.15576 153.594 cv
4.125 153.594 3.42188 154.375 3.125 154.828 cv
2.98389 154.109 2.42188 153.594 1.67188 153.594 cv
.937988 153.594 .625 154.219 .483887 154.5 cv
.203125 155.047 0 156 0 156.047 cv
0 156.203 .15625 156.203 .187988 156.203 cv
.34375 156.203 .358887 156.188 .453125 155.844 cv
.733887 154.719 1.04688 153.953 1.625 153.953 cv
1.89111 153.953 2.10889 154.078 2.10889 154.688 cv
2.10889 155.016 2.06299 155.188 1.85889 156.016 cv
.937988 159.703 li
cp
.980392 0 .00784314 rgb
f
1.76 lw
[] 0 dsh
71.9341 158.457 mo
100.281 158.457 li
100.281 103.609 li
0 0 0 rgb
@
100.281 96.0938 mo
103.016 103.609 li
97.543 103.609 li
100.281 96.0938 li
cp
f
.44 lw
100.281 96.0938 mo
103.016 103.609 li
97.543 103.609 li
100.281 96.0938 li
cp
@
100.25 89.8281 mo
100.438 89.3589 100.438 89.3281 100.609 88.9058 cv
100.734 88.5781 100.813 88.3589 100.813 88.063 cv
100.813 87.3438 100.297 86.75 99.5 86.75 cv
98 86.75 97.4058 89.063 97.4058 89.2031 cv
97.4058 89.3589 97.563 89.3589 97.5938 89.3589 cv
97.75 89.3589 97.7661 89.3281 97.8438 89.0781 cv
98.2808 87.5781 98.9058 87.1089 99.4531 87.1089 cv
99.5781 87.1089 99.8589 87.1089 99.8589 87.6089 cv
99.8589 87.9531 99.75 88.2808 99.6719 88.438 cv
99.5469 88.8589 98.8281 90.7031 98.5781 91.3911 cv
98.4219 91.7969 98.2188 92.3281 98.2188 92.6719 cv
98.2188 93.4219 98.75 93.9688 99.5161 93.9688 cv
101.016 93.9688 101.609 91.6558 101.609 91.5161 cv
101.609 91.3589 101.469 91.3589 101.422 91.3589 cv
101.25 91.3589 101.25 91.4058 101.172 91.6411 cv
100.891 92.6558 100.359 93.625 99.5469 93.625 cv
99.2808 93.625 99.1719 93.4688 99.1719 93.0938 cv
99.1719 92.7031 99.2661 92.4688 99.625 91.5 cv
100.25 89.8281 li
cp
101.469 83.8281 mo
101.469 83.5161 101.234 83.2661 100.875 83.2661 cv
100.438 83.2661 100.016 83.6719 100.016 84.1089 cv
100.016 84.4058 100.234 84.688 100.625 84.688 cv
100.984 84.688 101.469 84.313 101.469 83.8281 cv
101.469 83.8281 li
cp
f
5.30518 236.703 mo
4.68018 236.703 3.74219 236.297 3.46094 234.781 cv
3.27295 233.813 3.27295 232.359 3.27295 231.406 cv
3.27295 230.391 3.27295 229.344 3.41406 228.484 cv
3.71094 226.578 4.89795 226.438 5.30518 226.438 cv
5.83594 226.438 6.88281 226.719 7.18018 228.297 cv
7.35205 229.203 7.35205 230.406 7.35205 231.406 cv
7.35205 232.609 7.35205 233.688 7.16406 234.703 cv
6.93018 236.219 6.02295 236.703 5.30518 236.703 cv
5.30518 236.703 li
cp
8.66406 231.609 mo
8.66406 230.328 8.58594 229.047 8.02295 227.875 cv
7.28906 226.344 5.99219 226.094 5.31982 226.094 cv
4.36719 226.094 3.19482 226.5 2.55518 227.984 cv
2.03906 229.078 1.96094 230.328 1.96094 231.609 cv
1.96094 232.797 2.02295 234.234 2.68018 235.438 cv
3.36719 236.734 4.52295 237.047 5.30518 237.047 cv
6.16406 237.047 7.38281 236.719 8.06982 235.203 cv
8.58594 234.109 8.66406 232.859 8.66406 231.609 cv
8.66406 231.609 li
cp
f
4.49219 39.9409 mo
4.49219 39.5659 4.49219 39.5352 4.11719 39.5352 cv
3.13281 40.5508 1.72705 40.5508 1.22705 40.5508 cv
1.22705 41.0508 li
1.53906 41.0508 2.47705 41.0508 3.30518 40.6289 cv
3.30518 48.8789 li
3.30518 49.457 3.25781 49.645 1.83594 49.645 cv
1.31982 49.645 li
1.31982 50.145 li
1.88281 50.0981 3.25781 50.0981 3.89795 50.0981 cv
4.53906 50.0981 5.93018 50.0981 6.47705 50.145 cv
6.47705 49.645 li
5.97705 49.645 li
4.53906 49.645 4.49219 49.4731 4.49219 48.8789 cv
4.49219 39.9409 li
cp
f
43.4688 378.547 mo
42.8438 378.547 41.9058 378.141 41.625 376.625 cv
41.438 375.656 41.438 374.203 41.438 373.25 cv
41.438 372.234 41.438 371.188 41.5781 370.328 cv
41.875 368.422 43.063 368.281 43.4688 368.281 cv
44 368.281 45.0469 368.563 45.3438 370.141 cv
45.5161 371.047 45.5161 372.25 45.5161 373.25 cv
45.5161 374.453 45.5161 375.531 45.3281 376.547 cv
45.0938 378.063 44.188 378.547 43.4688 378.547 cv
43.4688 378.547 li
cp
46.8281 373.453 mo
46.8281 372.172 46.75 370.891 46.188 369.719 cv
45.4531 368.188 44.1558 367.938 43.4839 367.938 cv
42.5313 367.938 41.3589 368.344 40.7188 369.828 cv
40.2031 370.922 40.125 372.172 40.125 373.453 cv
40.125 374.641 40.188 376.078 40.8438 377.281 cv
41.5308 378.578 42.688 378.891 43.4688 378.891 cv
44.3281 378.891 45.5469 378.563 46.2339 377.047 cv
46.75 375.953 46.8281 374.703 46.8281 373.453 cv
46.8281 373.453 li
cp
f
101.098 368.344 mo
101.098 367.969 101.098 367.938 100.723 367.938 cv
99.7378 368.953 98.332 368.953 97.832 368.953 cv
97.832 369.453 li
98.145 369.453 99.082 369.453 99.9102 369.031 cv
99.9102 377.281 li
99.9102 377.859 99.8628 378.047 98.4409 378.047 cv
97.9258 378.047 li
97.9258 378.547 li
98.4878 378.5 99.8628 378.5 100.504 378.5 cv
101.145 378.5 102.535 378.5 103.082 378.547 cv
103.082 378.047 li
102.582 378.047 li
101.145 378.047 101.098 377.875 101.098 377.281 cv
101.098 368.344 li
cp
f
155.555 377.313 mo
157.242 375.672 li
159.727 373.484 160.68 372.625 160.68 371.031 cv
160.68 369.203 159.242 367.938 157.305 367.938 cv
155.492 367.938 154.32 369.406 154.32 370.813 cv
154.32 371.703 155.117 371.703 155.164 371.703 cv
155.43 371.703 155.992 371.516 155.992 370.859 cv
155.992 370.453 155.711 370.031 155.148 370.031 cv
155.023 370.031 154.992 370.031 154.945 370.047 cv
155.305 369.016 156.164 368.422 157.086 368.422 cv
158.539 368.422 159.227 369.719 159.227 371.031 cv
159.227 372.297 158.43 373.563 157.555 374.547 cv
154.492 377.953 li
154.32 378.125 154.32 378.172 154.32 378.547 cv
160.227 378.547 li
160.68 375.781 li
160.273 375.781 li
160.195 376.25 160.086 376.953 159.93 377.188 cv
159.82 377.313 158.773 377.313 158.414 377.313 cv
155.555 377.313 li
cp
f
215.156 372.938 mo
216.453 372.5 217.391 371.391 217.391 370.125 cv
217.391 368.828 215.984 367.938 214.453 367.938 cv
212.844 367.938 211.625 368.891 211.625 370.094 cv
211.625 370.625 211.984 370.922 212.438 370.922 cv
212.938 370.922 213.25 370.578 213.25 370.109 cv
213.25 369.313 212.5 369.313 212.266 369.313 cv
212.766 368.531 213.813 368.328 214.391 368.328 cv
215.047 368.328 215.922 368.688 215.922 370.109 cv
215.922 370.313 215.891 371.234 215.469 371.938 cv
215 372.703 214.453 372.75 214.047 372.766 cv
213.922 372.781 213.547 372.813 213.438 372.813 cv
213.297 372.828 213.188 372.844 213.188 373 cv
213.188 373.172 213.297 373.172 213.578 373.172 cv
214.281 373.172 li
215.578 373.172 216.172 374.266 216.172 375.828 cv
216.172 377.984 215.078 378.453 214.375 378.453 cv
213.688 378.453 212.484 378.188 211.938 377.234 cv
212.484 377.313 212.984 376.969 212.984 376.359 cv
212.984 375.797 212.563 375.469 212.094 375.469 cv
211.703 375.469 211.203 375.688 211.203 376.391 cv
211.203 377.844 212.688 378.891 214.422 378.891 cv
216.359 378.891 217.813 377.453 217.813 375.828 cv
217.813 374.516 216.813 373.266 215.156 372.938 cv
215.156 372.938 li
cp
f
272.324 375.422 mo
268.434 375.422 li
272.324 369.484 li
272.324 375.422 li
cp
272.23 375.922 mo
272.23 377.297 li
272.23 377.875 272.199 378.047 271.012 378.047 cv
270.684 378.047 li
270.684 378.547 li
271.34 378.5 272.168 378.5 272.84 378.5 cv
273.496 378.5 274.355 378.5 274.996 378.547 cv
274.996 378.047 li
274.668 378.047 li
273.48 378.047 273.449 377.875 273.449 377.297 cv
273.449 375.922 li
275.043 375.922 li
275.043 375.422 li
273.449 375.422 li
273.449 368.172 li
273.449 367.859 273.449 367.75 273.199 367.75 cv
273.059 367.75 273.012 367.75 272.887 367.953 cv
267.996 375.422 li
267.996 375.922 li
272.23 375.922 li
cp
f
15.7461 1.25 mo
15.418 1.25 15.1519 1.25 14.8711 1.51611 cv
14.543 1.81299 14.5122 2.15625 14.5122 2.29688 cv
14.5122 2.78125 14.8711 3 15.2461 3 cv
15.8242 3 16.355 2.51611 16.355 1.71875 cv
16.355 .75 15.418 0 14.0122 0 cv
11.3242 0 8.66797 2.85889 8.66797 5.67188 cv
8.66797 7.45313 9.82422 9.03125 11.9019 9.03125 cv
14.7461 9.03125 16.418 6.92188 16.418 6.68799 cv
16.418 6.56299 16.3091 6.42188 16.1841 6.42188 cv
16.0898 6.42188 16.043 6.46875 15.918 6.625 cv
14.355 8.59375 12.1841 8.59375 11.9341 8.59375 cv
10.6841 8.59375 10.1519 7.625 10.1519 6.42188 cv
10.1519 5.60889 10.543 3.67188 11.2148 2.43799 cv
11.8398 1.29688 12.9341 .453125 14.0269 .453125 cv
14.7148 .453125 15.4648 .703125 15.7461 1.25 cv
15.7461 1.25 li
cp
f
19.6519 12.4878 mo
19.418 13.4409 18.668 14.2539 17.855 14.2539 cv
17.668 14.2539 17.4961 14.2231 17.3398 14.1758 cv
17.7148 14.0039 17.8242 13.6758 17.8242 13.457 cv
17.8242 13.1289 17.5591 12.9409 17.2769 12.9409 cv
16.8398 12.9409 16.48 13.3159 16.48 13.77 cv
16.48 14.3008 17.0269 14.645 17.855 14.645 cv
18.6992 14.645 20.3242 14.145 20.7622 12.4409 cv
22.0269 7.44092 li
22.0591 7.30078 22.0898 7.17578 22.0898 6.95703 cv
22.0898 6.19092 21.4341 5.64502 20.5898 5.64502 cv
19.043 5.64502 18.1519 7.58203 18.1519 7.78516 cv
18.1519 7.95703 18.355 7.95703 18.3872 7.95703 cv
18.5591 7.95703 18.5742 7.92578 18.668 7.70703 cv
19.0269 6.91016 19.7461 6.03516 20.5591 6.03516 cv
20.9019 6.03516 21.0269 6.27002 21.0269 6.72314 cv
21.0269 6.87891 20.9961 7.06592 20.98 7.14502 cv
19.6519 12.4878 li
cp
22.605 3.08203 mo
22.605 2.84814 22.418 2.55078 22.043 2.55078 cv
21.6372 2.55078 21.2622 2.94092 21.2622 3.31592 cv
21.2622 3.53516 21.4341 3.84814 21.8242 3.84814 cv
22.1992 3.84814 22.605 3.48779 22.605 3.08203 cv
22.605 3.08203 li
cp
f
340.691 236.227 mo
340.316 237.742 339.348 238.867 338.238 238.867 cv
338.113 238.867 337.816 238.867 337.457 238.695 cv
338.066 238.555 338.363 238.039 338.363 237.633 cv
338.363 237.32 338.145 236.945 337.598 236.945 cv
337.098 236.945 336.52 237.352 336.52 238.07 cv
336.52 238.867 337.316 239.305 338.285 239.305 cv
339.676 239.305 341.52 238.258 342.02 236.289 cv
343.863 228.992 li
343.957 228.586 343.957 228.32 343.957 228.258 cv
343.957 227.117 343.113 226.414 342.129 226.414 cv
340.098 226.414 338.957 229.305 338.957 229.492 cv
338.957 229.695 339.16 229.695 339.191 229.695 cv
339.379 229.695 339.395 229.664 339.551 229.289 cv
340.051 228.07 340.973 226.867 342.066 226.867 cv
342.348 226.867 342.707 226.945 342.707 227.773 cv
342.707 228.227 342.645 228.461 342.566 228.789 cv
340.691 236.227 li
cp
344.691 222.773 mo
344.691 222.398 344.41 222.055 343.941 222.055 cv
343.473 222.055 342.879 222.523 342.879 223.117 cv
342.879 223.508 343.16 223.836 343.613 223.836 cv
344.16 223.836 344.691 223.32 344.691 222.773 cv
344.691 222.773 li
cp
f
gsave
336.473 353.938 mo
342.203 353.938 li
342.203 367.938 li
336.473 367.938 li
336.473 353.938 li
cp
clp
336 353 mo
343 353 li
343 368 li
336 368 li
336 353 li
cp
clp
340.379 362.344 mo
340.613 361.766 340.613 361.719 340.816 361.188 cv
340.973 360.781 341.082 360.5 341.082 360.125 cv
341.082 359.234 340.441 358.484 339.441 358.484 cv
337.566 358.484 336.816 361.375 336.816 361.563 cv
336.816 361.766 337.02 361.766 337.051 361.766 cv
337.254 361.766 337.27 361.719 337.379 361.406 cv
337.91 359.531 338.707 358.938 339.379 358.938 cv
339.551 358.938 339.879 358.938 339.879 359.563 cv
339.879 359.984 339.738 360.406 339.66 360.609 cv
339.504 361.125 338.613 363.438 338.285 364.281 cv
338.098 364.813 337.832 365.469 337.832 365.875 cv
337.832 366.813 338.504 367.516 339.473 367.516 cv
341.332 367.516 342.082 364.625 342.082 364.453 cv
342.082 364.25 341.895 364.25 341.832 364.25 cv
341.645 364.25 341.645 364.313 341.535 364.609 cv
341.176 365.859 340.52 367.078 339.504 367.078 cv
339.16 367.078 339.02 366.875 339.02 366.422 cv
339.02 365.922 339.145 365.641 339.598 364.422 cv
340.379 362.344 li
cp
341.895 354.844 mo
341.895 354.453 341.613 354.125 341.16 354.125 cv
340.613 354.125 340.082 354.641 340.082 355.188 cv
340.082 355.563 340.363 355.906 340.848 355.906 cv
341.301 355.906 341.895 355.438 341.895 354.844 cv
341.895 354.844 li
cp
f
grestore
12.8521 257.445 mo
12.9448 257.008 13.1479 256.273 13.1479 256.148 cv
13.1479 255.789 12.8672 255.602 12.5698 255.602 cv
12.3359 255.602 11.9771 255.773 11.8359 256.164 cv
11.7729 256.305 10.8359 260.117 10.6948 260.633 cv
10.5552 261.227 10.5229 261.586 10.5229 261.945 cv
10.5229 262.164 10.5229 262.211 10.5391 262.305 cv
10.0859 263.352 9.49219 263.977 8.71094 263.977 cv
7.11719 263.977 7.11719 262.508 7.11719 262.164 cv
7.11719 261.523 7.21094 260.742 8.14795 258.305 cv
8.36719 257.695 8.49219 257.43 8.49219 257.023 cv
8.49219 256.133 7.83594 255.383 6.85205 255.383 cv
4.96094 255.383 4.22705 258.273 4.22705 258.461 cv
4.22705 258.664 4.43018 258.664 4.46094 258.664 cv
4.66406 258.664 4.68018 258.617 4.78906 258.305 cv
5.31982 256.445 6.10205 255.836 6.78906 255.836 cv
6.97705 255.836 7.28906 255.852 7.28906 256.492 cv
7.28906 256.977 7.06982 257.539 6.93018 257.883 cv
6.05518 260.227 5.81982 261.148 5.81982 261.898 cv
5.81982 263.711 7.14795 264.414 8.64795 264.414 cv
8.99219 264.414 9.93018 264.414 10.7271 263.023 cv
11.2422 264.289 12.6172 264.414 13.2109 264.414 cv
14.7109 264.414 15.5859 263.164 16.1021 261.961 cv
16.7729 260.414 17.4141 257.742 17.4141 256.789 cv
17.4141 255.695 16.8828 255.383 16.5391 255.383 cv
16.0391 255.383 15.5391 255.914 15.5391 256.352 cv
15.5391 256.602 15.6641 256.727 15.8359 256.883 cv
16.0552 257.102 16.5552 257.617 16.5552 258.57 cv
16.5552 259.258 15.9771 261.211 15.4609 262.227 cv
14.9448 263.273 14.2422 263.977 13.2729 263.977 cv
12.3359 263.977 11.7891 263.383 11.7891 262.242 cv
11.7891 261.68 11.9302 261.07 12.0078 260.789 cv
12.8521 257.445 li
cp
f
19.5859 265.559 mo
19.5391 265.73 19.4609 265.902 19.4609 266.137 cv
19.4609 266.793 20.0229 267.324 20.7891 267.324 cv
22.1802 267.324 22.8052 265.402 22.8052 265.184 cv
22.8052 265.012 22.6172 265.012 22.5698 265.012 cv
22.3828 265.012 22.3672 265.09 22.3052 265.246 cv
21.9922 266.355 21.3672 266.934 20.8359 266.934 cv
20.5552 266.934 20.4771 266.746 20.4771 266.449 cv
20.4771 266.121 20.5859 265.855 20.7109 265.559 cv
20.8521 265.168 20.9922 264.793 21.1479 264.434 cv
21.2729 264.105 21.7729 262.824 21.8359 262.668 cv
21.8828 262.527 21.9141 262.355 21.9141 262.215 cv
21.9141 261.559 21.3672 261.027 20.5859 261.027 cv
19.2109 261.027 18.5698 262.934 18.5698 263.168 cv
18.5698 263.34 18.7578 263.34 18.8052 263.34 cv
19.0078 263.34 19.0229 263.277 19.0552 263.121 cv
19.4141 261.918 20.0391 261.418 20.5552 261.418 cv
20.7729 261.418 20.8979 261.527 20.8979 261.902 cv
20.8979 262.23 20.8198 262.434 20.4609 263.309 cv
19.5859 265.559 li
cp
22.4302 258.465 mo
22.4302 258.246 22.2729 257.934 21.8828 257.934 cv
21.5078 257.934 21.1021 258.293 21.1021 258.699 cv
21.1021 258.934 21.2729 259.23 21.6479 259.23 cv
22.0552 259.23 22.4302 258.84 22.4302 258.465 cv
22.4302 258.465 li
cp
f
142.633 276.074 mo
142.617 276.012 li
142.633 275.965 li
142.555 275.73 li
142.617 275.605 li
142.555 275.512 li
142.539 275.371 li
142.445 275.168 li
142.383 275.027 li
142.195 274.684 li
142.039 274.559 li
141.945 274.34 li
141.836 274.293 li
141.617 274.012 li
141.414 274.043 li
141.258 273.824 li
141.133 273.855 li
141.039 273.684 li
140.992 273.668 li
140.805 273.668 li
140.68 273.746 li
140.57 273.637 li
140.445 273.668 li
140.383 273.574 li
140.148 273.527 li
140.164 273.684 li
140.133 273.934 li
140.195 274.074 li
140.367 274.246 li
140.227 274.559 li
140.242 274.746 li
140.18 275.137 li
140.199 275.305 140.25 275.445 140.336 275.559 cv
140.289 275.699 li
140.289 275.711 140.289 275.723 140.289 275.73 cv
140.289 275.754 140.258 275.789 140.195 275.84 cv
140.289 275.965 li
140.211 276.121 li
140.195 276.293 li
140.227 276.465 li
140.211 276.637 li
140.492 276.637 li
140.523 276.617 140.57 276.605 140.633 276.605 cv
140.715 276.605 140.781 276.633 140.836 276.684 cv
140.844 276.684 140.867 276.684 140.898 276.684 cv
140.906 276.684 140.918 276.684 140.93 276.684 cv
140.961 276.684 141.008 276.691 141.07 276.699 cv
141.121 276.68 141.172 276.668 141.227 276.668 cv
141.289 276.668 141.352 276.684 141.414 276.715 cv
141.523 276.715 li
141.633 276.746 li
141.898 276.668 li
142.102 276.793 li
142.184 276.824 142.215 276.84 142.195 276.84 cv
142.445 276.59 li
142.461 276.402 li
142.539 276.371 li
142.492 276.277 li
142.586 276.168 li
142.633 276.074 li
cp
143.617 275.887 mo
143.461 276.277 li
143.555 276.527 li
143.508 276.605 li
143.461 276.824 li
143.352 276.996 li
143.305 277.027 li
143.273 277.277 li
143.039 277.309 li
142.914 277.414 142.789 277.504 142.664 277.574 cv
142.586 277.559 li
142.383 277.621 li
142.273 277.637 li
142.023 277.73 li
141.742 277.605 li
141.695 277.574 li
141.477 277.59 li
141.523 277.621 li
141.164 277.559 li
140.836 277.637 li
140.711 277.527 li
140.445 277.543 li
140.336 277.465 li
140.324 277.465 140.289 277.473 140.227 277.48 cv
140.227 277.559 li
140.227 277.645 140.215 277.723 140.195 277.793 cv
140.227 278.043 li
140.133 278.168 li
140.141 278.363 140.148 278.512 140.148 278.605 cv
140.117 278.934 li
140.164 279.418 li
140.055 279.543 li
140.117 279.746 li
140.07 279.871 li
140.148 279.918 li
140.148 280.105 li
140.168 280.156 140.18 280.199 140.18 280.23 cv
140.18 280.301 140.133 280.363 140.039 280.418 cv
140.086 280.605 li
140.023 280.715 li
139.992 281.23 li
139.969 281.832 139.84 282.137 139.602 282.137 cv
139.547 282.137 139.391 282.098 139.133 282.027 cv
139.18 281.637 li
139.102 281.074 li
139.227 280.84 li
139.242 280.559 li
139.195 280.168 li
139.289 279.996 li
139.18 279.699 li
139.273 279.543 li
139.195 279.277 li
139.289 279.043 li
139.277 278.988 139.246 278.941 139.195 278.902 cv
139.152 278.859 139.133 278.828 139.133 278.809 cv
139.133 278.785 139.156 278.762 139.211 278.73 cv
139.211 278.707 139.211 278.668 139.211 278.605 cv
139.211 278.488 139.234 278.34 139.289 278.152 cv
139.211 278.027 li
139.242 277.855 li
139.148 277.746 li
139.273 277.605 li
139.211 277.23 li
139.289 276.684 li
139.211 276.527 li
139.352 276.277 li
139.195 276.137 li
139.289 275.887 li
139.195 275.824 li
139.211 275.605 li
139.289 275.324 li
139.289 275.074 li
139.305 275.027 li
139.242 274.824 li
139.305 274.59 li
139.242 274.434 li
139.289 274.23 li
139.242 274.184 li
139.289 273.918 li
139.242 273.777 li
139.273 273.652 li
139.227 273.559 li
138.758 273.762 li
138.758 273.684 li
138.664 273.699 li
138.523 273.824 li
138.414 273.824 li
138.258 274.043 li
138.117 273.98 li
138.055 274.121 li
137.641 273.871 137.43 273.668 137.43 273.512 cv
137.43 273.41 137.469 273.324 137.539 273.262 cv
137.523 273.059 li
137.773 272.926 138 272.852 138.211 272.84 cv
138.305 272.746 li
138.727 272.59 li
138.82 272.496 li
139.18 272.512 li
139.242 272.496 li
139.367 272.043 li
139.664 272.105 li
139.883 272.434 li
139.992 272.324 li
140.227 272.496 li
140.34 272.496 140.449 272.52 140.555 272.559 cv
140.617 272.668 li
140.711 272.637 li
140.82 272.715 li
140.883 272.715 140.93 272.723 140.961 272.73 cv
140.945 272.809 li
141.227 272.715 li
141.367 272.871 li
141.617 272.949 li
141.789 273.152 li
142.102 273.355 li
142.117 273.371 li
142.367 273.449 li
142.367 273.527 li
142.43 273.582 142.48 273.652 142.523 273.746 cv
142.617 273.809 li
142.695 273.949 li
142.852 273.949 li
142.852 274.215 li
142.945 274.293 li
142.977 274.387 li
143.102 274.418 li
143.121 274.617 143.18 274.785 143.273 274.918 cv
143.273 275.012 li
143.398 275.137 li
143.383 275.355 li
143.477 275.59 li
143.523 275.855 li
143.617 275.887 li
cp
.4 .4 .4 rgb
f
148.605 273.215 mo
148.543 273.121 li
148.449 273.105 li
148.043 272.777 li
147.777 272.746 li
147.574 272.746 li
147.543 272.715 li
147.449 272.746 li
147.324 272.684 li
146.996 272.684 li
147.027 272.746 li
146.73 272.84 li
146.684 272.902 li
146.637 272.918 li
146.48 273.055 146.371 273.164 146.309 273.246 cv
146.215 273.559 li
146.168 273.668 li
146.293 273.855 li
146.074 274.027 li
146.105 274.074 li
146.012 274.242 145.965 274.402 145.965 274.559 cv
145.855 274.684 li
145.855 274.918 li
145.746 275.043 li
145.73 275.152 li
145.684 275.184 li
145.684 275.371 li
145.652 275.434 li
145.652 275.539 145.641 275.621 145.621 275.684 cv
145.652 275.746 li
145.527 275.996 li
145.59 276.074 li
145.496 276.199 li
145.59 276.449 li
145.449 276.621 li
145.465 276.871 li
145.465 276.918 li
145.527 276.934 li
145.59 276.918 li
145.629 276.879 145.672 276.84 145.715 276.809 cv
145.684 276.699 li
145.871 276.684 li
145.902 276.59 li
146.684 275.965 li
146.762 275.934 li
146.84 275.715 li
146.891 275.695 146.969 275.66 147.074 275.605 cv
147.152 275.402 li
147.246 275.402 li
147.215 275.184 li
147.387 275.152 li
147.406 275.121 147.434 275.082 147.465 275.027 cv
147.504 274.977 147.551 274.93 147.605 274.887 cv
148.262 273.996 li
148.371 273.809 li
148.355 273.746 li
148.449 273.605 li
148.465 273.465 li
148.59 273.355 li
148.605 273.215 li
cp
149.84 272.543 mo
149.699 272.715 li
149.809 273.027 li
149.637 273.215 li
149.574 273.496 li
149.543 273.559 li
149.559 273.621 li
149.559 273.746 149.527 273.84 149.465 273.902 cv
149.449 273.934 li
149.449 273.98 li
149.469 274.043 149.48 274.102 149.48 274.152 cv
149.48 274.195 149.473 274.227 149.465 274.246 cv
149.48 274.293 li
149.434 274.449 li
149.465 274.59 li
149.371 274.699 li
149.402 274.887 li
149.48 274.98 li
149.371 275.074 li
149.371 275.293 li
149.277 275.496 li
149.34 275.699 li
149.262 275.809 li
149.387 275.902 li
149.215 276.199 li
149.199 276.23 li
149.324 276.262 li
149.23 276.559 li
149.23 276.605 li
149.23 276.668 149.23 276.723 149.23 276.762 cv
149.23 276.793 li
149.449 276.824 li
149.621 277.074 li
149.527 277.277 li
149.668 277.262 li
149.719 277.367 149.75 277.461 149.762 277.543 cv
149.559 277.73 li
149.496 277.793 149.41 277.855 149.309 277.918 cv
149.074 278.027 li
149.012 277.965 li
148.887 278.043 li
148.48 277.574 li
148.48 277.355 li
148.426 277.18 148.402 277.02 148.402 276.871 cv
148.402 276.793 li
148.324 276.027 li
148.434 275.48 li
148.355 275.168 li
148.137 275.527 li
148.012 275.871 li
147.918 275.918 li
147.73 276.215 li
147.402 276.512 li
147.309 276.668 li
147.027 276.918 li
146.965 277.074 li
146.543 277.34 li
146.105 277.84 li
145.855 277.887 li
145.684 278.012 li
145.473 278 145.313 277.922 145.199 277.777 cv
144.801 277.582 144.598 277.305 144.59 276.949 cv
144.652 276.918 li
144.637 276.84 li
144.621 276.684 li
144.543 276.512 li
144.621 276.324 li
144.652 276.059 li
144.746 275.621 li
144.746 275.613 144.746 275.598 144.746 275.574 cv
144.734 275.555 144.73 275.539 144.73 275.527 cv
144.73 275.488 144.734 275.441 144.746 275.387 cv
144.746 275.379 144.746 275.348 144.746 275.293 cv
144.746 275.23 144.77 275.129 144.824 274.98 cv
144.902 274.949 li
144.848 274.91 144.824 274.863 144.824 274.809 cv
144.824 274.77 144.828 274.742 144.84 274.73 cv
144.828 274.699 144.824 274.668 144.824 274.637 cv
144.824 274.535 144.875 274.457 144.98 274.402 cv
145.012 274.32 145.063 274.23 145.137 274.137 cv
145.059 274.043 li
145.215 273.84 li
145.215 273.793 li
145.215 273.629 145.27 273.477 145.387 273.34 cv
145.371 273.105 li
145.434 273.043 li
145.434 273.043 145.434 273.035 145.434 273.012 cv
145.422 272.992 145.418 272.977 145.418 272.965 cv
145.418 272.926 145.434 272.883 145.465 272.84 cv
145.465 272.762 li
145.504 272.68 145.598 272.555 145.746 272.387 cv
145.891 272.211 145.996 272.055 146.059 271.918 cv
146.137 271.98 li
146.277 271.918 li
146.34 271.887 li
146.762 271.699 li
147.762 271.746 li
147.762 271.84 li
148.074 271.902 li
148.281 271.902 148.41 271.973 148.465 272.105 cv
148.465 272.074 148.469 272.043 148.48 272.012 cv
148.48 271.98 148.48 271.965 148.48 271.965 cv
148.762 272.199 li
148.996 272.262 li
149.465 272.137 li
149.637 272.465 li
149.84 272.543 li
cp
f
156.301 272.965 mo
156.191 273.402 li
155.707 273.465 li
155.457 273.637 li
155.285 273.559 li
155.098 273.668 li
154.91 273.746 li
154.77 273.824 li
154.77 273.887 li
154.504 274.012 li
154.316 274.246 li
154.223 274.246 li
154.086 274.395 153.988 274.488 153.926 274.527 cv
153.754 274.824 li
153.691 274.84 li
153.66 274.914 153.629 275.02 153.598 275.152 cv
153.41 275.215 li
153.332 275.371 li
153.223 275.512 li
153.207 275.699 li
153.098 275.746 li
153.098 275.934 li
153.066 275.98 li
153.086 276.023 153.113 276.07 153.145 276.121 cv
152.957 276.199 li
152.926 276.371 li
152.801 276.59 li
152.879 276.762 li
152.707 276.996 li
152.727 277.082 152.738 277.137 152.738 277.168 cv
152.738 277.18 152.738 277.199 152.738 277.23 cv
152.727 277.254 152.723 277.273 152.723 277.293 cv
152.754 277.402 li
152.973 277.637 li
152.801 277.934 li
152.645 278.059 li
152.285 278.23 li
151.801 278.043 li
151.801 277.746 li
151.754 277.621 li
151.785 277.434 li
151.762 277.301 151.754 277.195 151.754 277.121 cv
151.754 277.09 151.758 277.055 151.77 277.012 cv
151.77 276.973 151.77 276.941 151.77 276.918 cv
151.754 276.793 li
151.699 276.73 151.676 276.664 151.676 276.59 cv
151.676 276.52 151.699 276.441 151.754 276.355 cv
151.754 276.316 151.746 276.184 151.738 275.965 cv
151.77 275.918 li
151.738 275.762 li
151.754 275.605 li
151.738 275.512 li
151.77 275.215 li
151.691 275.074 li
151.754 274.934 li
151.691 274.762 li
151.699 274.711 151.707 274.645 151.707 274.559 cv
151.707 274.434 151.691 274.348 151.66 274.293 cv
151.707 274.215 li
151.66 273.98 li
151.535 273.824 li
151.598 273.605 li
151.551 273.527 li
151.504 273.215 li
151.504 273.121 li
151.461 273.07 151.441 273.004 151.441 272.918 cv
151.441 272.754 151.629 272.605 152.004 272.48 cv
152.332 272.543 li
152.395 272.793 li
152.52 272.965 li
152.488 273.309 li
152.508 273.488 152.539 273.68 152.582 273.887 cv
152.613 274.09 li
152.621 274.113 152.633 274.16 152.645 274.23 cv
152.645 274.285 152.621 274.34 152.582 274.402 cv
152.613 274.668 li
152.598 274.949 li
152.535 275.074 li
152.582 275.137 li
152.598 275.262 li
152.648 275.199 152.68 275.133 152.691 275.059 cv
152.754 274.871 li
152.773 274.82 152.809 274.777 152.863 274.746 cv
152.91 274.559 li
153.098 274.449 li
153.129 274.293 li
153.27 274.137 li
153.379 273.949 li
153.48 273.824 153.586 273.746 153.691 273.715 cv
153.723 273.668 li
153.848 273.496 li
153.973 273.465 li
154.004 273.434 li
154.066 273.355 li
154.207 273.277 li
154.285 273.184 li
154.363 273.199 li
154.457 273.137 li
154.52 273.059 li
154.676 272.98 li
154.895 272.84 li
155.207 272.746 li
155.332 272.727 155.395 272.715 155.395 272.715 cv
155.395 272.727 155.395 272.73 155.395 272.73 cv
155.395 272.73 155.395 272.738 155.395 272.746 cv
155.434 272.746 155.488 272.727 155.551 272.684 cv
155.602 272.652 155.664 272.637 155.738 272.637 cv
155.77 272.637 155.832 272.648 155.926 272.668 cv
156.145 272.668 156.27 272.77 156.301 272.965 cv
156.301 272.965 li
cp
f
160.465 273.137 mo
160.465 273.223 160.387 273.293 160.23 273.355 cv
160.188 273.41 160.121 273.449 160.027 273.48 cv
159.91 273.535 159.828 273.574 159.777 273.605 cv
159.496 273.512 li
159.359 273.617 159.184 273.668 158.965 273.668 cv
158.809 273.637 li
158.699 273.746 li
158.34 273.746 li
158.121 273.887 li
158.027 273.848 157.934 273.824 157.84 273.824 cv
157.816 273.848 157.762 273.867 157.668 273.887 cv
157.625 273.887 157.578 273.871 157.527 273.84 cv
157.48 274.34 li
157.496 274.699 li
157.465 275.152 li
157.48 275.652 li
157.527 275.887 li
157.527 276.074 li
157.699 276.449 li
157.676 276.48 157.668 276.512 157.668 276.543 cv
157.668 276.605 157.762 276.652 157.949 276.684 cv
157.98 276.84 li
158.074 276.887 li
158.23 276.996 li
158.324 277.074 li
158.418 277.055 158.48 277.043 158.512 277.043 cv
158.582 277.043 158.66 277.055 158.746 277.074 cv
158.777 277.066 158.848 277.008 158.965 276.902 cv
159.047 276.832 159.121 276.793 159.184 276.793 cv
159.191 276.793 159.207 276.793 159.23 276.793 cv
159.238 276.805 159.25 276.809 159.262 276.809 cv
159.344 276.645 159.484 276.535 159.684 276.48 cv
159.859 276.48 160.012 276.539 160.137 276.652 cv
160.137 276.746 li
160.137 277.039 160.031 277.227 159.824 277.309 cv
159.738 277.488 159.574 277.602 159.324 277.652 cv
159.168 277.793 li
159.012 277.793 li
158.699 277.871 li
158.637 277.891 158.535 277.902 158.402 277.902 cv
158.34 277.902 158.266 277.879 158.184 277.84 cv
158.012 277.84 li
157.559 277.605 li
157.449 277.559 li
157.168 277.199 li
157.012 277.027 li
156.73 276.371 li
156.621 275.762 li
156.652 275.605 li
156.543 275.465 li
156.605 275.293 li
156.543 274.996 li
156.637 274.902 li
156.668 274.746 li
156.621 274.59 li
156.652 274.355 li
156.605 274.137 li
156.668 274.074 li
156.668 273.871 li
156.574 273.824 li
156.324 273.887 li
156.09 273.715 li
156.059 273.715 li
155.801 273.715 155.668 273.574 155.668 273.293 cv
155.668 273.262 li
155.512 273.012 li
155.762 272.777 li
156.074 272.824 li
156.246 272.809 li
156.496 272.871 li
156.762 272.871 li
156.762 272.605 li
156.605 272.246 li
156.762 272.152 li
156.699 271.965 li
156.715 271.559 li
156.605 271.387 li
156.551 271.293 156.527 271.207 156.527 271.121 cv
156.527 271.027 156.547 270.949 156.59 270.887 cv
156.621 270.715 li
156.73 270.605 li
156.957 270.566 157.113 270.543 157.199 270.543 cv
157.469 270.543 157.621 270.668 157.652 270.918 cv
157.605 270.98 li
157.656 271.066 157.684 271.137 157.684 271.199 cv
157.684 271.211 157.684 271.238 157.684 271.277 cv
157.652 271.34 li
157.637 271.434 li
157.684 271.605 li
157.684 271.668 li
157.699 271.855 li
157.59 272.012 li
157.652 272.277 li
157.605 272.59 li
157.699 272.699 li
157.605 272.934 li
157.996 272.887 li
158.715 272.949 li
159.293 272.855 li
159.48 272.871 li
159.543 272.855 li
160.059 272.855 li
160.328 272.855 160.465 272.949 160.465 273.137 cv
160.465 273.137 li
cp
f
164.566 275.918 mo
164.566 276.117 164.527 276.242 164.457 276.293 cv
164.395 276.34 li
164.332 276.527 li
164.113 276.59 li
164.059 276.727 163.973 276.836 163.848 276.918 cv
163.723 276.949 li
163.566 277.137 li
163.41 277.168 li
163.348 277.324 163.223 277.41 163.035 277.418 cv
163.012 277.449 162.973 277.504 162.91 277.574 cv
162.785 277.66 162.648 277.711 162.504 277.73 cv
162.441 277.746 li
162.348 277.855 li
162.098 277.855 li
161.879 278.012 li
161.348 277.621 li
161.098 277.121 li
161.098 276.48 li
161.035 276.324 li
161.191 275.184 li
161.254 275.137 li
161.223 275.004 161.207 274.871 161.207 274.746 cv
161.207 274.676 161.23 274.52 161.285 274.277 cv
161.348 273.98 li
161.336 273.93 161.305 273.871 161.254 273.809 cv
161.332 273.559 li
161.348 273.262 li
161.379 273.215 li
161.348 273.145 161.324 273.059 161.316 272.965 cv
161.324 272.945 161.332 272.918 161.332 272.887 cv
161.34 272.855 161.348 272.836 161.348 272.824 cv
161.324 272.742 161.316 272.664 161.316 272.59 cv
161.316 272.383 161.43 272.289 161.66 272.309 cv
161.816 272.324 li
161.918 272.273 161.988 272.246 162.02 272.246 cv
162.184 272.246 162.301 272.34 162.363 272.527 cv
162.363 272.59 li
162.395 272.695 162.41 272.793 162.41 272.887 cv
162.41 272.961 162.402 273.012 162.395 273.043 cv
162.301 273.699 li
162.395 273.887 li
162.395 274.043 162.34 274.18 162.238 274.293 cv
162.285 274.449 li
162.113 274.949 li
162.102 275.168 162.082 275.336 162.051 275.449 cv
162.051 275.762 li
161.973 275.949 li
161.988 276.074 li
161.957 276.371 li
161.988 276.605 li
162.176 276.762 li
162.332 276.746 li
162.363 276.699 li
162.473 276.715 li
162.645 276.668 li
162.785 276.527 li
162.832 276.449 li
162.926 276.434 li
162.988 276.309 li
163.066 276.371 li
163.191 276.23 li
163.27 276.246 li
163.301 276.152 li
163.332 276.152 li
163.363 276.059 li
163.488 275.996 li
163.723 275.887 li
163.93 275.754 164.129 275.684 164.316 275.684 cv
164.363 275.684 li
164.457 275.738 164.523 275.816 164.566 275.918 cv
164.566 275.918 li
cp
163.238 269.027 mo
163.238 269.133 163.168 269.227 163.035 269.309 cv
163.035 269.34 li
162.867 269.539 162.723 269.648 162.598 269.668 cv
162.41 269.902 li
162.27 270.074 li
161.973 270.152 li
161.848 270.34 li
161.645 270.434 li
161.301 270.73 li
161.098 270.543 li
161.129 270.215 li
161.27 269.98 li
161.277 269.855 161.352 269.754 161.488 269.668 cv
161.488 269.621 li
161.566 269.574 li
161.566 269.371 li
161.785 269.324 li
161.785 269.199 li
161.941 269.184 li
161.973 269.008 162.043 268.879 162.16 268.793 cv
162.191 268.777 li
162.27 268.699 li
162.379 268.387 li
162.949 268.523 163.238 268.738 163.238 269.027 cv
163.238 269.027 li
cp
f
170.098 275.777 mo
169.848 276.012 li
169.848 276.09 li
169.816 276.246 169.738 276.371 169.613 276.465 cv
169.414 276.863 169.129 277.148 168.754 277.324 cv
168.551 277.48 li
168.379 277.512 li
168.176 277.668 li
168.035 277.684 li
167.707 277.887 li
167.504 277.855 li
167.27 277.965 li
167.082 277.918 li
166.988 277.996 li
166.754 277.949 li
166.504 277.996 li
166.41 277.918 li
166.145 277.855 li
165.77 277.574 li
165.566 277.309 li
165.43 277.152 165.363 277.02 165.363 276.902 cv
165.363 276.855 li
165.238 276.668 li
165.238 276.496 li
165.215 276.395 165.207 276.301 165.207 276.215 cv
165.207 276.121 li
165.129 275.902 li
165.207 275.746 li
165.145 275.637 li
165.301 275.387 li
165.27 275.184 li
165.363 274.84 li
165.426 274.762 li
165.473 274.449 li
165.441 274.402 li
165.598 274.23 li
165.629 274.105 li
165.738 273.809 li
165.91 273.434 li
166.145 273.23 li
166.191 273.121 li
166.27 272.965 li
166.301 272.84 li
166.504 272.59 li
166.555 272.582 166.613 272.566 166.676 272.543 cv
166.715 272.379 166.934 272.285 167.332 272.262 cv
167.676 272.324 167.895 272.414 167.988 272.527 cv
168.082 272.551 168.152 272.59 168.207 272.652 cv
168.473 272.668 li
168.66 272.902 li
168.699 272.988 168.73 273.07 168.754 273.152 cv
168.848 273.262 li
168.816 273.449 li
168.824 273.512 168.832 273.613 168.832 273.746 cv
168.895 273.793 li
168.895 273.98 li
168.941 274.387 li
168.762 274.574 168.555 274.68 168.316 274.699 cv
168.199 274.48 168.051 274.316 167.863 274.199 cv
167.848 273.762 li
167.77 273.621 li
167.77 273.512 li
167.629 273.355 li
167.566 273.309 li
167.457 273.355 li
167.285 273.355 li
167.168 273.379 167.059 273.461 166.957 273.605 cv
166.852 273.742 166.746 273.887 166.645 274.043 cv
166.629 274.168 li
166.551 274.23 li
166.551 274.465 li
166.379 274.652 li
166.176 275.215 li
166.191 275.371 li
166.082 275.605 li
166.129 275.902 li
166.051 275.934 li
166.02 276.293 li
166.035 276.371 li
166.191 276.527 li
166.254 276.793 li
166.441 276.84 li
166.441 276.949 li
166.832 277.027 li
166.895 276.996 166.973 276.98 167.066 276.98 cv
167.145 276.98 li
167.246 276.941 167.348 276.918 167.441 276.918 cv
167.504 276.887 167.582 276.863 167.676 276.84 cv
167.777 276.695 167.926 276.621 168.113 276.621 cv
168.191 276.621 li
168.23 276.621 168.262 276.602 168.285 276.559 cv
168.379 276.414 168.527 276.32 168.738 276.277 cv
168.977 276.059 169.117 275.887 169.16 275.762 cv
169.273 275.691 169.352 275.582 169.395 275.434 cv
169.473 275.371 li
169.504 275.074 li
169.898 275.137 170.098 275.34 170.098 275.684 cv
170.098 275.777 li
cp
f
174.496 276.387 mo
174.496 276.48 174.457 276.559 174.387 276.621 cv
174.324 276.727 174.215 276.836 174.059 276.949 cv
173.918 277.043 li
173.809 277.199 li
173.684 277.246 li
173.512 277.371 li
173.371 277.387 li
173.324 277.434 li
173.145 277.488 173.012 277.574 172.918 277.699 cv
172.855 277.742 172.797 277.762 172.746 277.762 cv
172.715 277.762 172.688 277.758 172.668 277.746 cv
172.512 277.828 172.316 277.871 172.09 277.871 cv
171.891 277.871 171.762 277.855 171.699 277.824 cv
171.465 277.699 li
171.387 277.559 li
171.387 277.527 li
171.387 277.414 171.34 277.32 171.246 277.246 cv
171.199 276.996 li
171.09 276.871 li
171.027 276.387 li
171.012 276.105 li
171.027 275.902 li
171.043 275.824 li
171.02 275.773 171.012 275.715 171.012 275.652 cv
171.051 275.289 171.074 275.059 171.074 274.965 cv
170.965 274.73 li
171.074 274.527 li
171.121 274.215 li
171.09 273.98 li
171.168 273.793 li
171.09 273.527 li
171.199 273.355 li
171.215 273.23 li
171.215 272.777 li
171.262 272.684 li
171.246 272.137 li
171.277 271.574 li
171.23 271.48 li
171.215 271.09 li
171.262 270.73 li
171.215 270.605 li
171.293 269.824 li
171.656 269.742 171.816 269.699 171.777 269.699 cv
171.91 269.699 172.027 269.773 172.121 269.918 cv
172.137 270.027 li
172.34 270.215 li
172.23 270.496 li
172.262 270.543 li
172.238 270.711 172.219 270.82 172.199 270.871 cv
172.215 271.137 li
172.277 271.387 li
172.199 271.652 li
172.199 271.809 172.172 271.945 172.121 272.059 cv
172.121 272.102 172.113 272.176 172.105 272.277 cv
172.09 272.355 li
172.199 272.496 li
172.152 272.637 li
172.172 272.711 172.184 272.758 172.184 272.777 cv
172.184 272.832 172.16 272.898 172.121 272.98 cv
172.152 273.105 li
172.074 273.512 li
172.074 273.793 li
171.98 274.059 li
172.043 274.309 li
171.98 274.887 li
172.027 274.949 li
171.965 275.246 li
171.934 275.605 li
171.91 275.66 171.902 275.691 171.902 275.699 cv
171.902 275.848 171.902 275.973 171.902 276.074 cv
171.965 276.246 li
171.934 276.449 li
172.012 276.605 li
171.996 276.684 li
172.047 276.727 172.094 276.793 172.137 276.887 cv
172.262 276.887 li
172.434 276.934 li
172.512 276.84 li
172.621 276.824 li
172.672 276.805 172.715 276.793 172.746 276.793 cv
172.777 276.793 li
172.859 276.773 172.926 276.73 172.98 276.668 cv
173.059 276.621 li
173.121 276.527 173.223 276.465 173.371 276.434 cv
173.41 276.395 173.488 276.32 173.605 276.215 cv
173.605 276.102 173.676 276.012 173.824 275.949 cv
173.957 275.949 174.047 275.93 174.09 275.887 cv
174.266 275.91 174.375 275.957 174.418 276.027 cv
174.469 276.09 174.496 276.211 174.496 276.387 cv
174.496 276.387 li
cp
f
177.938 272.996 mo
177.938 272.977 177.926 272.926 177.906 272.84 cv
177.844 272.824 li
177.813 272.84 li
177.801 272.84 177.785 272.84 177.766 272.84 cv
177.742 272.852 177.723 272.855 177.703 272.855 cv
177.703 272.855 177.691 272.852 177.672 272.84 cv
177.648 272.84 177.633 272.84 177.625 272.84 cv
177.5 272.934 li
177.391 272.949 li
177.313 272.965 li
177.094 273.262 li
176.953 273.355 li
176.75 273.73 li
176.625 273.809 li
176.602 273.957 176.547 274.082 176.453 274.184 cv
176.391 274.277 li
176.484 274.215 176.594 274.184 176.719 274.184 cv
176.813 274.137 li
176.844 274.027 li
177.031 274.043 li
177.141 273.887 li
177.219 273.887 li
177.359 273.934 li
177.422 273.746 li
177.516 273.746 li
177.516 273.59 li
177.688 273.559 li
177.719 273.512 li
177.75 273.402 li
177.922 273.152 li
177.93 273.113 177.938 273.059 177.938 272.996 cv
177.938 272.996 li
cp
179.234 276.746 mo
179.234 276.852 179.156 276.98 179 277.137 cv
178.957 277.273 178.891 277.383 178.797 277.465 cv
178.719 277.48 li
178.578 277.73 li
178.344 277.777 li
178.094 277.918 li
177.969 278.152 li
177.828 278.137 li
177.734 278.176 177.656 278.203 177.594 278.215 cv
177.516 278.324 li
177.484 278.313 177.441 278.309 177.391 278.309 cv
177.285 278.309 177.18 278.387 177.078 278.543 cv
176.891 278.387 li
176.859 278.395 176.805 278.402 176.734 278.402 cv
176.617 278.402 176.523 278.387 176.453 278.355 cv
176.219 278.355 li
176.125 278.293 li
175.789 278.238 175.582 278.113 175.5 277.918 cv
175.5 277.871 li
175.344 277.793 li
175.266 277.574 li
175.109 277.465 li
175.109 277.277 li
174.953 276.699 li
174.984 276.23 li
175.031 276.027 li
175.031 275.762 li
175.094 275.543 li
175.078 275.449 li
175.172 275.293 li
175.141 275.324 li
175.141 275.254 175.164 275.168 175.219 275.074 cv
175.219 275.012 li
175.172 274.699 li
175.172 274.555 175.238 274.426 175.375 274.309 cv
175.375 274.301 175.375 274.273 175.375 274.23 cv
175.375 274.199 175.359 274.133 175.328 274.027 cv
175.305 273.914 175.297 273.836 175.297 273.793 cv
175.297 273.691 175.32 273.582 175.375 273.465 cv
175.438 273.57 175.535 273.621 175.672 273.621 cv
175.703 273.621 li
175.723 273.59 175.766 273.555 175.828 273.512 cv
175.891 273.293 175.984 273.113 176.109 272.965 cv
176.156 272.902 li
176.156 272.871 176.18 272.773 176.234 272.605 cv
176.344 272.605 li
176.375 272.543 li
176.469 272.512 li
176.508 272.449 176.535 272.414 176.547 272.402 cv
176.566 272.383 176.664 272.324 176.844 272.23 cv
176.875 272.168 176.926 272.113 177 272.059 cv
177.031 272.051 177.07 272.035 177.125 272.012 cv
177.172 271.934 li
177.41 271.852 177.563 271.809 177.625 271.809 cv
177.688 271.809 177.75 271.832 177.813 271.871 cv
177.875 271.855 li
177.969 271.902 li
178.07 271.988 178.176 272.055 178.281 272.105 cv
178.5 272.277 li
178.5 272.324 li
178.695 272.48 178.797 272.699 178.797 272.98 cv
178.766 273.121 li
178.797 273.543 li
178.688 273.621 li
178.547 273.965 li
178.313 274.23 li
178.297 274.449 li
178.016 274.648 177.758 274.805 177.531 274.918 cv
177.445 275.043 177.32 275.105 177.156 275.105 cv
177.125 275.105 li
176.875 275.262 li
176.672 275.262 li
176.359 275.387 li
176.125 275.277 li
176.094 275.277 li
176.082 275.34 176.066 275.445 176.047 275.59 cv
175.938 275.668 li
175.922 275.824 li
175.844 276.043 li
175.875 276.254 175.891 276.387 175.891 276.449 cv
175.844 276.48 li
175.844 276.598 175.836 276.68 175.828 276.73 cv
175.828 276.742 175.82 276.754 175.813 276.762 cv
175.813 276.785 175.813 276.801 175.813 276.809 cv
175.813 276.883 175.848 276.941 175.922 276.98 cv
175.941 277.086 175.984 277.148 176.047 277.168 cv
176.141 277.246 li
176.422 277.324 li
176.422 277.371 li
176.531 277.387 li
176.969 277.418 li
177.234 277.387 li
177.359 277.293 li
177.438 277.262 li
177.563 277.074 li
177.625 277.059 li
177.953 276.949 li
177.984 276.887 178.039 276.836 178.125 276.793 cv
178.156 276.73 li
178.332 276.699 178.438 276.605 178.469 276.449 cv
178.582 276.336 178.738 276.277 178.938 276.277 cv
178.984 276.277 li
179.148 276.465 179.234 276.621 179.234 276.746 cv
179.234 276.746 li
cp
f
191.594 272.559 mo
191.531 272.809 li
191.563 272.934 li
191.406 273.434 li
191.375 273.621 li
191.188 273.824 li
191.125 274.059 li
190.984 274.277 li
190.781 274.73 li
190.531 275.137 li
190.156 275.699 li
190.094 275.871 li
189.891 276.215 li
189.672 276.684 li
189.281 277.387 li
189.203 277.699 li
189 277.996 li
188.609 277.855 li
188.391 277.73 li
188.172 277.121 li
187.922 276.684 li
187.922 276.543 li
187.766 276.184 li
187.688 276.105 li
187.156 274.965 li
186.984 274.684 li
186.844 274.902 li
186.625 275.074 li
186.328 275.496 li
186.125 275.715 li
186 276.059 li
185.719 276.402 li
185.688 276.527 li
185.5 276.918 li
185.5 277.121 li
185.375 277.309 li
185.359 277.48 li
185.219 277.527 li
184.938 277.824 li
184.984 277.793 li
184.898 277.844 184.785 277.879 184.641 277.902 cv
184.547 277.793 li
184.359 277.715 li
184.359 277.574 li
184.281 277.465 li
184.203 277.121 li
184.094 276.887 li
184.094 276.715 li
183.891 276.105 li
183.828 275.762 li
183.703 275.605 li
183.734 275.449 li
183.594 275.137 li
183.594 275.012 li
183.5 274.73 li
183.313 274.48 li
183.344 274.199 li
183.328 274.105 li
183.188 273.762 li
183.156 273.559 li
183.078 273.434 li
183.023 273.34 182.988 273.254 182.969 273.168 cv
182.75 272.605 li
182.922 272.371 li
182.973 272.277 183.082 272.223 183.25 272.199 cv
183.516 272.152 li
183.609 272.277 li
183.781 272.355 li
183.906 272.59 li
184 272.684 li
183.969 272.902 li
184.016 273.027 li
183.984 273.137 li
184.109 273.355 li
184.078 273.543 li
184.25 274.137 li
184.219 274.277 li
184.297 274.621 li
184.484 275.043 li
184.563 275.527 li
184.688 275.684 li
184.688 275.996 li
184.781 276.277 li
184.797 276.371 li
184.984 276.262 li
185.281 275.777 li
185.375 275.559 li
185.469 275.371 li
185.469 275.289 185.488 275.227 185.531 275.184 cv
185.609 275.184 li
185.641 274.949 li
185.781 274.918 li
185.801 274.855 185.844 274.805 185.906 274.762 cv
185.906 274.746 li
185.906 274.695 185.93 274.645 185.984 274.59 cv
185.953 274.496 li
186.016 274.465 li
186 274.387 li
186.082 274.254 186.172 274.148 186.266 274.074 cv
186.266 273.824 li
186.453 273.715 li
186.5 273.668 li
186.531 273.652 li
186.477 273.559 186.453 273.461 186.453 273.355 cv
186.453 273.199 186.523 273.051 186.672 272.902 cv
186.742 272.871 186.836 272.855 186.953 272.855 cv
187.023 272.855 187.078 272.863 187.109 272.871 cv
187.359 273.09 li
187.484 273.277 li
187.563 273.59 li
187.688 273.809 li
187.656 273.949 li
187.75 274.23 li
187.75 274.355 li
187.969 274.746 li
187.969 274.777 li
188.016 274.824 li
188.281 275.449 li
188.297 275.605 li
188.422 275.762 li
188.719 276.434 li
189.016 275.84 li
189.172 275.715 li
189.266 275.449 li
189.391 275.371 li
189.391 275.184 li
189.441 275.145 189.516 275.102 189.609 275.059 cv
189.66 275.027 189.688 275.004 189.688 274.98 cv
189.672 274.715 li
189.828 274.559 li
189.891 274.527 li
190.094 274.199 li
190.094 274.152 li
190.102 274.059 190.156 273.949 190.25 273.824 cv
190.234 273.684 li
190.469 273.402 li
190.578 273.121 li
190.484 272.863 190.438 272.637 190.438 272.449 cv
190.438 272.18 190.578 272.027 190.859 271.996 cv
191.203 272.105 li
191.25 272.027 li
191.344 272.137 li
191.484 272.23 li
191.438 272.371 li
191.594 272.559 li
cp
f
194.965 272.996 mo
194.965 272.977 194.953 272.926 194.934 272.84 cv
194.871 272.824 li
194.84 272.84 li
194.828 272.84 194.813 272.84 194.793 272.84 cv
194.77 272.852 194.75 272.855 194.73 272.855 cv
194.73 272.855 194.719 272.852 194.699 272.84 cv
194.676 272.84 194.66 272.84 194.652 272.84 cv
194.527 272.934 li
194.418 272.949 li
194.34 272.965 li
194.121 273.262 li
193.98 273.355 li
193.777 273.73 li
193.652 273.809 li
193.629 273.957 193.574 274.082 193.48 274.184 cv
193.418 274.277 li
193.512 274.215 193.621 274.184 193.746 274.184 cv
193.84 274.137 li
193.871 274.027 li
194.059 274.043 li
194.168 273.887 li
194.246 273.887 li
194.387 273.934 li
194.449 273.746 li
194.543 273.746 li
194.543 273.59 li
194.715 273.559 li
194.746 273.512 li
194.777 273.402 li
194.949 273.152 li
194.957 273.113 194.965 273.059 194.965 272.996 cv
194.965 272.996 li
cp
196.262 276.746 mo
196.262 276.852 196.184 276.98 196.027 277.137 cv
195.984 277.273 195.918 277.383 195.824 277.465 cv
195.746 277.48 li
195.605 277.73 li
195.371 277.777 li
195.121 277.918 li
194.996 278.152 li
194.855 278.137 li
194.762 278.176 194.684 278.203 194.621 278.215 cv
194.543 278.324 li
194.512 278.313 194.469 278.309 194.418 278.309 cv
194.313 278.309 194.207 278.387 194.105 278.543 cv
193.918 278.387 li
193.887 278.395 193.832 278.402 193.762 278.402 cv
193.645 278.402 193.551 278.387 193.48 278.355 cv
193.246 278.355 li
193.152 278.293 li
192.816 278.238 192.609 278.113 192.527 277.918 cv
192.527 277.871 li
192.371 277.793 li
192.293 277.574 li
192.137 277.465 li
192.137 277.277 li
191.98 276.699 li
192.012 276.23 li
192.059 276.027 li
192.059 275.762 li
192.121 275.543 li
192.105 275.449 li
192.199 275.293 li
192.168 275.324 li
192.168 275.254 192.191 275.168 192.246 275.074 cv
192.246 275.012 li
192.199 274.699 li
192.199 274.555 192.266 274.426 192.402 274.309 cv
192.402 274.301 192.402 274.273 192.402 274.23 cv
192.402 274.199 192.387 274.133 192.355 274.027 cv
192.332 273.914 192.324 273.836 192.324 273.793 cv
192.324 273.691 192.348 273.582 192.402 273.465 cv
192.465 273.57 192.563 273.621 192.699 273.621 cv
192.73 273.621 li
192.75 273.59 192.793 273.555 192.855 273.512 cv
192.918 273.293 193.012 273.113 193.137 272.965 cv
193.184 272.902 li
193.184 272.871 193.207 272.773 193.262 272.605 cv
193.371 272.605 li
193.402 272.543 li
193.496 272.512 li
193.535 272.449 193.563 272.414 193.574 272.402 cv
193.594 272.383 193.691 272.324 193.871 272.23 cv
193.902 272.168 193.953 272.113 194.027 272.059 cv
194.059 272.051 194.098 272.035 194.152 272.012 cv
194.199 271.934 li
194.438 271.852 194.59 271.809 194.652 271.809 cv
194.715 271.809 194.777 271.832 194.84 271.871 cv
194.902 271.855 li
194.996 271.902 li
195.098 271.988 195.203 272.055 195.309 272.105 cv
195.527 272.277 li
195.527 272.324 li
195.723 272.48 195.824 272.699 195.824 272.98 cv
195.793 273.121 li
195.824 273.543 li
195.715 273.621 li
195.574 273.965 li
195.34 274.23 li
195.324 274.449 li
195.043 274.648 194.785 274.805 194.559 274.918 cv
194.473 275.043 194.348 275.105 194.184 275.105 cv
194.152 275.105 li
193.902 275.262 li
193.699 275.262 li
193.387 275.387 li
193.152 275.277 li
193.121 275.277 li
193.109 275.34 193.094 275.445 193.074 275.59 cv
192.965 275.668 li
192.949 275.824 li
192.871 276.043 li
192.902 276.254 192.918 276.387 192.918 276.449 cv
192.871 276.48 li
192.871 276.598 192.863 276.68 192.855 276.73 cv
192.855 276.742 192.848 276.754 192.84 276.762 cv
192.84 276.785 192.84 276.801 192.84 276.809 cv
192.84 276.883 192.875 276.941 192.949 276.98 cv
192.969 277.086 193.012 277.148 193.074 277.168 cv
193.168 277.246 li
193.449 277.324 li
193.449 277.371 li
193.559 277.387 li
193.996 277.418 li
194.262 277.387 li
194.387 277.293 li
194.465 277.262 li
194.59 277.074 li
194.652 277.059 li
194.98 276.949 li
195.012 276.887 195.066 276.836 195.152 276.793 cv
195.184 276.73 li
195.359 276.699 195.465 276.605 195.496 276.449 cv
195.609 276.336 195.766 276.277 195.965 276.277 cv
196.012 276.277 li
196.176 276.465 196.262 276.621 196.262 276.746 cv
196.262 276.746 li
cp
f
200.617 275.918 mo
200.617 276.117 200.578 276.242 200.508 276.293 cv
200.445 276.34 li
200.383 276.527 li
200.164 276.59 li
200.109 276.727 200.023 276.836 199.898 276.918 cv
199.773 276.949 li
199.617 277.137 li
199.461 277.168 li
199.398 277.324 199.273 277.41 199.086 277.418 cv
199.063 277.449 199.023 277.504 198.961 277.574 cv
198.836 277.66 198.699 277.711 198.555 277.73 cv
198.492 277.746 li
198.398 277.855 li
198.148 277.855 li
197.93 278.012 li
197.398 277.621 li
197.148 277.121 li
197.148 276.48 li
197.086 276.324 li
197.242 275.184 li
197.305 275.137 li
197.273 275.004 197.258 274.871 197.258 274.746 cv
197.258 274.676 197.281 274.52 197.336 274.277 cv
197.398 273.98 li
197.387 273.93 197.355 273.871 197.305 273.809 cv
197.383 273.559 li
197.398 273.262 li
197.43 273.215 li
197.398 273.145 197.375 273.059 197.367 272.965 cv
197.375 272.945 197.383 272.918 197.383 272.887 cv
197.391 272.855 197.398 272.836 197.398 272.824 cv
197.375 272.742 197.367 272.664 197.367 272.59 cv
197.367 272.383 197.48 272.289 197.711 272.309 cv
197.867 272.324 li
197.969 272.273 198.039 272.246 198.07 272.246 cv
198.234 272.246 198.352 272.34 198.414 272.527 cv
198.414 272.59 li
198.445 272.695 198.461 272.793 198.461 272.887 cv
198.461 272.961 198.453 273.012 198.445 273.043 cv
198.352 273.699 li
198.445 273.887 li
198.445 274.043 198.391 274.18 198.289 274.293 cv
198.336 274.449 li
198.164 274.949 li
198.152 275.168 198.133 275.336 198.102 275.449 cv
198.102 275.762 li
198.023 275.949 li
198.039 276.074 li
198.008 276.371 li
198.039 276.605 li
198.227 276.762 li
198.383 276.746 li
198.414 276.699 li
198.523 276.715 li
198.695 276.668 li
198.836 276.527 li
198.883 276.449 li
198.977 276.434 li
199.039 276.309 li
199.117 276.371 li
199.242 276.23 li
199.32 276.246 li
199.352 276.152 li
199.383 276.152 li
199.414 276.059 li
199.539 275.996 li
199.773 275.887 li
199.98 275.754 200.18 275.684 200.367 275.684 cv
200.414 275.684 li
200.508 275.738 200.574 275.816 200.617 275.918 cv
200.617 275.918 li
cp
199.289 269.027 mo
199.289 269.133 199.219 269.227 199.086 269.309 cv
199.086 269.34 li
198.918 269.539 198.773 269.648 198.648 269.668 cv
198.461 269.902 li
198.32 270.074 li
198.023 270.152 li
197.898 270.34 li
197.695 270.434 li
197.352 270.73 li
197.148 270.543 li
197.18 270.215 li
197.32 269.98 li
197.328 269.855 197.402 269.754 197.539 269.668 cv
197.539 269.621 li
197.617 269.574 li
197.617 269.371 li
197.836 269.324 li
197.836 269.199 li
197.992 269.184 li
198.023 269.008 198.094 268.879 198.211 268.793 cv
198.242 268.777 li
198.32 268.699 li
198.43 268.387 li
199 268.523 199.289 268.738 199.289 269.027 cv
199.289 269.027 li
cp
f
207.598 276.199 mo
207.488 276.684 li
207.52 276.84 li
207.488 276.871 li
207.52 276.957 207.535 277.035 207.535 277.105 cv
207.535 277.16 207.523 277.211 207.504 277.262 cv
207.504 277.293 li
207.504 277.398 207.461 277.816 207.379 278.559 cv
207.363 278.809 li
207.363 278.855 li
207.332 278.918 li
207.316 278.965 li
207.332 279.043 li
207.285 279.09 li
207.254 279.168 li
207.207 279.168 li
207.223 279.23 li
207.191 279.309 li
207.191 279.371 207.168 279.426 207.129 279.48 cv
207.066 279.699 li
207.035 279.793 206.988 279.875 206.926 279.949 cv
206.863 280.063 206.754 280.215 206.598 280.402 cv
206.379 280.574 li
206.129 280.793 li
205.941 280.871 li
205.785 280.996 li
205.676 281.027 li
205.508 281.121 205.316 281.172 205.098 281.184 cv
205.02 281.168 li
204.895 281.23 li
204.895 281.246 li
204.746 281.285 204.621 281.309 204.52 281.309 cv
204.02 281.309 li
203.707 281.246 li
203.426 281.293 li
203.301 281.168 li
202.91 281.137 li
202.645 280.902 li
202.457 280.793 li
202.113 280.668 201.914 280.438 201.863 280.105 cv
201.879 280.059 li
201.848 279.855 li
201.949 279.688 202.043 279.598 202.129 279.59 cv
202.199 279.547 202.273 279.527 202.348 279.527 cv
202.348 279.527 202.426 279.535 202.582 279.559 cv
202.738 279.59 202.902 279.609 203.082 279.621 cv
203.051 279.809 li
203.207 279.918 li
203.207 280.074 li
203.113 280.199 li
203.707 280.387 li
204.004 280.324 li
204.004 280.402 li
204.098 280.387 li
204.113 280.387 li
204.121 280.387 204.18 280.391 204.285 280.402 cv
204.301 280.465 li
204.426 280.402 li
204.527 280.348 204.738 280.324 205.051 280.324 cv
205.102 280.281 205.148 280.246 205.191 280.215 cv
205.199 280.215 205.223 280.219 205.254 280.23 cv
205.285 280.23 205.309 280.23 205.332 280.23 cv
205.383 280.23 205.434 280.176 205.488 280.074 cv
205.496 280.094 205.512 280.105 205.535 280.105 cv
205.555 280.105 205.574 280.094 205.598 280.074 cv
205.629 280.063 205.648 280.059 205.66 280.059 cv
205.676 280.059 li
206.098 279.699 li
206.285 279.402 li
206.301 279.23 li
206.441 279.043 li
206.457 278.871 li
206.535 278.715 li
206.598 278.371 li
206.707 278.043 li
206.695 277.988 206.691 277.91 206.691 277.809 cv
206.691 277.621 206.715 277.43 206.77 277.23 cv
206.723 277.027 li
206.723 276.387 li
206.613 276.168 li
206.613 275.809 li
206.52 275.527 li
206.52 275.059 li
206.426 275.074 li
206.348 275.277 li
206.145 275.449 li
205.91 275.824 li
205.582 276.059 li
205.207 276.434 li
204.996 276.652 204.758 276.84 204.488 276.996 cv
204.348 277.152 li
204.16 277.277 li
203.973 277.371 li
203.816 277.543 li
203.598 277.637 li
203.535 277.711 203.434 277.758 203.301 277.777 cv
203.113 277.91 202.895 277.98 202.645 277.98 cv
202.504 277.98 li
202.461 277.988 202.402 277.996 202.332 277.996 cv
202.258 277.996 202.207 277.988 202.176 277.98 cv
201.941 277.965 li
201.598 277.637 li
201.348 277.309 li
201.254 277.043 li
201.16 276.527 li
201.207 276.152 li
201.332 275.699 li
201.316 275.559 li
201.426 275.152 li
201.551 274.918 li
201.582 274.805 201.598 274.676 201.598 274.527 cv
201.879 273.98 li
201.91 273.918 201.977 273.848 202.082 273.762 cv
202.207 273.543 li
202.363 273.371 li
202.395 273.258 202.461 273.16 202.566 273.074 cv
202.637 273.043 202.691 272.98 202.723 272.887 cv
202.754 272.793 202.914 272.707 203.207 272.621 cv
203.145 272.637 li
203.207 272.605 li
203.238 272.566 203.301 272.48 203.395 272.355 cv
203.551 272.371 li
203.66 272.293 li
203.805 272.18 203.957 272.121 204.113 272.121 cv
204.191 272.121 li
204.535 271.98 li
204.738 272.043 li
204.973 272.043 li
205.113 272.121 li
205.195 272.133 205.262 272.176 205.316 272.246 cv
205.504 272.434 li
205.551 272.449 li
205.582 272.512 li
205.691 272.684 li
205.707 272.746 li
205.66 272.965 li
205.691 273.105 li
205.52 273.355 li
205.145 273.418 li
204.957 273.105 li
204.77 273.043 li
204.676 272.949 li
204.551 272.949 li
204.508 272.961 204.414 273.004 204.27 273.074 cv
204.27 273.184 li
203.941 273.184 li
203.855 273.309 203.762 273.379 203.66 273.387 cv
203.605 273.418 203.555 273.449 203.504 273.48 cv
203.395 273.73 li
203.301 273.746 li
203.285 273.855 li
203.113 273.855 li
202.941 274.137 li
202.801 274.215 li
202.738 274.402 li
202.551 274.668 li
202.52 274.934 li
202.363 275.09 li
202.223 275.652 li
202.113 275.762 li
202.129 275.902 li
201.973 276.387 li
202.02 276.543 li
202.004 276.699 li
202.066 276.793 202.098 276.887 202.098 276.98 cv
202.191 276.996 li
202.223 277.074 li
202.367 277.074 202.461 277.098 202.504 277.137 cv
202.586 277.074 202.801 277.008 203.145 276.934 cv
203.195 276.82 203.27 276.738 203.363 276.684 cv
203.457 276.621 203.652 276.512 203.957 276.355 cv
203.988 276.371 li
203.988 276.301 204.012 276.23 204.066 276.168 cv
204.199 276.117 204.277 276.086 204.301 276.074 cv
204.371 276.023 204.414 275.965 204.426 275.902 cv
204.629 275.84 li
204.754 275.73 li
205.082 275.293 li
205.176 275.34 li
205.184 275.309 205.277 275.191 205.457 274.98 cv
205.77 274.621 li
205.801 274.449 li
205.902 274.355 206.023 274.082 206.16 273.621 cv
206.098 273.355 li
205.988 273.168 li
206.066 272.965 li
205.973 272.824 li
205.941 272.652 li
205.895 272.512 li
206.035 272.277 li
206.168 272.215 206.27 272.184 206.332 272.184 cv
206.402 272.184 206.508 272.223 206.645 272.293 cv
206.738 272.465 li
206.91 272.59 li
206.926 272.887 li
206.957 272.961 206.988 273.074 207.02 273.23 cv
207.059 273.316 207.082 273.41 207.082 273.512 cv
207.082 273.59 li
207.113 273.668 li
207.254 273.887 li
207.223 274.121 li
207.285 274.215 li
207.316 274.277 207.332 274.348 207.332 274.418 cv
207.332 274.48 207.324 274.527 207.316 274.559 cv
207.441 274.59 li
207.348 274.918 li
207.395 275.168 li
207.434 275.254 207.457 275.332 207.457 275.402 cv
207.457 275.477 207.434 275.566 207.395 275.668 cv
207.473 275.73 li
207.598 276.199 li
cp
f
214.633 277.684 mo
214.633 278.027 214.449 278.199 214.086 278.199 cv
213.898 278.199 213.762 278.125 213.68 277.98 cv
213.586 277.855 213.512 277.629 213.461 277.293 cv
213.461 277.105 li
213.48 277.066 213.492 277.023 213.492 276.98 cv
213.492 276.961 213.484 276.941 213.477 276.918 cv
213.305 276.637 li
213.43 276.387 li
213.383 276.121 li
213.43 275.965 li
213.43 275.793 li
213.461 275.637 li
213.398 275.402 li
213.461 275.293 li
213.461 274.293 li
213.383 273.871 li
213.43 273.715 li
213.336 273.387 li
213.242 273.48 li
212.945 273.59 li
212.555 274.09 li
212.398 274.074 li
212.164 274.449 li
212.133 274.605 li
211.992 274.668 li
211.836 274.902 li
211.773 275.043 li
211.633 275.496 li
211.398 275.777 li
211.352 275.965 li
211.227 276.074 li
211.164 276.371 li
210.914 276.605 li
210.867 277.09 li
210.758 277.09 li
210.711 277.168 li
210.477 277.574 li
210.258 277.809 li
210.07 278.074 li
209.852 277.996 li
209.68 277.996 li
209.523 277.793 li
209.383 277.324 li
209.367 276.637 li
209.32 276.418 li
209.367 276.152 li
209.336 275.543 li
209.445 275.527 li
209.508 274.621 li
209.555 274.449 li
209.523 274.184 li
209.586 274.137 li
209.633 273.73 li
209.68 273.59 li
209.633 273.402 li
209.68 273.34 li
209.648 273.293 li
209.68 272.934 li
209.586 272.84 li
209.68 272.668 li
209.664 272.277 li
209.523 271.902 li
209.617 271.793 li
209.523 271.434 li
209.523 271.23 li
209.492 271.137 li
209.43 270.73 li
209.367 270.527 li
209.164 270.152 li
209.305 269.965 li
209.445 269.746 li
209.555 269.746 li
209.742 269.746 209.887 269.816 209.992 269.949 cv
210.164 270.105 li
210.242 270.34 li
210.445 270.496 li
210.398 270.684 li
210.492 270.965 li
210.477 270.98 li
210.508 271.012 li
210.492 271.434 li
210.508 272.012 li
210.602 272.371 li
210.523 272.527 li
210.555 272.746 li
210.492 272.934 li
210.523 273.246 li
210.461 273.512 li
210.492 273.559 li
210.461 274.355 li
210.508 274.527 li
210.43 274.621 li
210.383 275.059 li
210.336 275.246 li
210.383 275.605 li
210.336 275.699 li
210.32 275.965 li
210.414 275.934 210.461 275.883 210.461 275.809 cv
210.57 275.699 li
210.664 275.527 li
210.68 275.293 li
210.836 275.074 li
210.914 274.824 li
211.102 274.605 li
211.148 274.371 li
211.289 274.355 li
211.289 274.23 li
211.305 274.074 li
211.461 273.98 li
211.461 273.887 li
211.586 273.855 li
211.617 273.652 li
211.602 273.543 li
211.836 273.434 li
211.898 273.387 li
211.867 273.262 li
211.992 273.215 li
212.07 272.996 li
212.227 272.996 li
212.383 272.902 li
212.383 272.852 212.383 272.809 212.383 272.777 cv
212.539 272.715 li
212.695 272.582 212.84 272.504 212.977 272.48 cv
212.977 272.449 li
213.203 272.336 213.359 272.277 213.445 272.277 cv
213.57 272.277 213.684 272.34 213.789 272.465 cv
213.883 272.496 213.945 272.566 213.977 272.668 cv
214.086 272.746 li
214.133 272.918 li
214.32 273.215 li
214.32 274.715 li
214.367 274.824 li
214.367 275.793 li
214.32 275.965 li
214.32 276.215 li
214.367 276.512 li
214.32 276.762 li
214.352 276.887 214.371 276.992 214.383 277.074 cv
214.523 277.23 li
214.523 277.324 li
214.57 277.371 li
214.609 277.52 214.633 277.621 214.633 277.684 cv
214.633 277.684 li
cp
f
220.082 273.137 mo
220.082 273.223 220.004 273.293 219.848 273.355 cv
219.805 273.41 219.738 273.449 219.645 273.48 cv
219.527 273.535 219.445 273.574 219.395 273.605 cv
219.113 273.512 li
218.977 273.617 218.801 273.668 218.582 273.668 cv
218.426 273.637 li
218.316 273.746 li
217.957 273.746 li
217.738 273.887 li
217.645 273.848 217.551 273.824 217.457 273.824 cv
217.434 273.848 217.379 273.867 217.285 273.887 cv
217.242 273.887 217.195 273.871 217.145 273.84 cv
217.098 274.34 li
217.113 274.699 li
217.082 275.152 li
217.098 275.652 li
217.145 275.887 li
217.145 276.074 li
217.316 276.449 li
217.293 276.48 217.285 276.512 217.285 276.543 cv
217.285 276.605 217.379 276.652 217.566 276.684 cv
217.598 276.84 li
217.691 276.887 li
217.848 276.996 li
217.941 277.074 li
218.035 277.055 218.098 277.043 218.129 277.043 cv
218.199 277.043 218.277 277.055 218.363 277.074 cv
218.395 277.066 218.465 277.008 218.582 276.902 cv
218.664 276.832 218.738 276.793 218.801 276.793 cv
218.809 276.793 218.824 276.793 218.848 276.793 cv
218.855 276.805 218.867 276.809 218.879 276.809 cv
218.961 276.645 219.102 276.535 219.301 276.48 cv
219.477 276.48 219.629 276.539 219.754 276.652 cv
219.754 276.746 li
219.754 277.039 219.648 277.227 219.441 277.309 cv
219.355 277.488 219.191 277.602 218.941 277.652 cv
218.785 277.793 li
218.629 277.793 li
218.316 277.871 li
218.254 277.891 218.152 277.902 218.02 277.902 cv
217.957 277.902 217.883 277.879 217.801 277.84 cv
217.629 277.84 li
217.176 277.605 li
217.066 277.559 li
216.785 277.199 li
216.629 277.027 li
216.348 276.371 li
216.238 275.762 li
216.27 275.605 li
216.16 275.465 li
216.223 275.293 li
216.16 274.996 li
216.254 274.902 li
216.285 274.746 li
216.238 274.59 li
216.27 274.355 li
216.223 274.137 li
216.285 274.074 li
216.285 273.871 li
216.191 273.824 li
215.941 273.887 li
215.707 273.715 li
215.676 273.715 li
215.418 273.715 215.285 273.574 215.285 273.293 cv
215.285 273.262 li
215.129 273.012 li
215.379 272.777 li
215.691 272.824 li
215.863 272.809 li
216.113 272.871 li
216.379 272.871 li
216.379 272.605 li
216.223 272.246 li
216.379 272.152 li
216.316 271.965 li
216.332 271.559 li
216.223 271.387 li
216.168 271.293 216.145 271.207 216.145 271.121 cv
216.145 271.027 216.164 270.949 216.207 270.887 cv
216.238 270.715 li
216.348 270.605 li
216.574 270.566 216.73 270.543 216.816 270.543 cv
217.086 270.543 217.238 270.668 217.27 270.918 cv
217.223 270.98 li
217.273 271.066 217.301 271.137 217.301 271.199 cv
217.301 271.211 217.301 271.238 217.301 271.277 cv
217.27 271.34 li
217.254 271.434 li
217.301 271.605 li
217.301 271.668 li
217.316 271.855 li
217.207 272.012 li
217.27 272.277 li
217.223 272.59 li
217.316 272.699 li
217.223 272.934 li
217.613 272.887 li
218.332 272.949 li
218.91 272.855 li
219.098 272.871 li
219.16 272.855 li
219.676 272.855 li
219.945 272.855 220.082 272.949 220.082 273.137 cv
220.082 273.137 li
cp
f
225.5 276.746 mo
225.344 276.918 li
225.203 277.262 li
225.094 277.34 li
225 277.527 li
224.75 277.543 li
224.578 277.715 li
224.313 277.715 li
224.156 277.84 li
224.016 277.809 li
223.844 277.84 li
223.844 277.949 li
223.359 277.918 li
223.156 277.918 li
223 277.996 li
222.875 277.918 li
222.957 277.918 223.023 277.918 223.078 277.918 cv
223.004 277.918 222.797 277.934 222.453 277.965 cv
222.422 277.949 li
222.313 277.934 li
222.141 278.027 li
222.086 277.996 221.992 277.957 221.859 277.918 cv
221.672 277.895 221.547 277.887 221.484 277.887 cv
221.375 277.887 li
221.313 277.875 221.25 277.871 221.188 277.871 cv
221.113 277.871 221.039 277.887 220.969 277.918 cv
220.797 277.809 li
220.688 277.777 li
220.656 277.777 220.609 277.77 220.547 277.746 cv
220.223 277.715 220.063 277.445 220.063 276.934 cv
220.063 276.824 li
220.313 276.637 li
220.625 276.527 li
220.859 276.637 li
221.031 276.637 li
221.031 276.684 li
221.125 276.715 221.195 276.785 221.25 276.887 cv
221.344 276.902 li
221.344 277.074 li
221.516 277.105 li
221.563 277.137 li
223.219 277.027 li
223.625 276.965 li
223.656 276.965 li
223.688 276.902 li
223.875 276.871 li
223.891 276.84 li
224.078 276.809 224.25 276.758 224.406 276.684 cv
224.422 276.605 li
224.41 276.605 224.391 276.582 224.359 276.527 cv
224.297 276.527 li
224.125 276.402 li
224.016 276.402 li
223.953 276.309 li
223.984 276.262 li
223.844 276.293 li
223.734 276.168 li
223.711 276.18 223.672 276.184 223.609 276.184 cv
223.492 276.184 223.383 276.164 223.281 276.121 cv
223.156 276.121 li
223.063 276.074 li
222.891 276.152 li
222.781 276.027 li
222.734 276.027 li
222.563 275.887 li
222.156 275.73 li
222.031 275.621 li
221.531 275.527 li
221.484 275.449 li
221.109 275.215 li
220.922 274.777 li
220.766 274.559 li
220.719 273.887 li
220.766 273.809 li
220.785 273.613 220.852 273.434 220.969 273.277 cv
221.102 273.215 221.172 273.117 221.172 272.98 cv
221.359 272.949 li
221.398 272.879 221.473 272.809 221.578 272.746 cv
221.766 272.59 li
222.578 272.277 li
222.734 272.246 li
222.984 272.215 li
223.422 272.105 li
224.234 272.152 li
224.266 272.215 li
224.336 272.246 224.422 272.32 224.516 272.434 cv
224.516 272.496 li
224.734 272.621 li
224.641 272.934 li
224.609 273.043 li
224.555 273.262 224.438 273.371 224.25 273.371 cv
224.094 273.371 223.973 273.301 223.891 273.152 cv
223.891 273.121 li
223.734 273.105 li
223.563 273.152 li
223.391 273.043 li
223.297 273.105 li
223.18 273.105 223.078 273.137 222.984 273.199 cv
222.859 273.199 222.734 273.254 222.609 273.355 cv
222.438 273.355 li
222.328 273.449 li
222.141 273.496 li
222.109 273.512 li
222.031 273.559 li
221.922 273.668 li
221.875 273.684 li
221.766 273.871 li
221.625 273.949 li
221.594 274.066 221.57 274.16 221.563 274.23 cv
221.57 274.355 221.586 274.441 221.609 274.48 cv
221.629 274.512 221.688 274.551 221.781 274.59 cv
221.781 274.668 li
221.953 274.746 li
222.086 274.801 222.191 274.855 222.266 274.918 cv
222.516 274.918 li
222.688 275.059 li
222.984 275.105 li
223.109 275.184 li
223.609 275.324 li
223.672 275.465 li
223.734 275.371 li
223.836 275.371 223.988 275.426 224.188 275.527 cv
224.422 275.574 li
224.438 275.668 li
224.656 275.668 li
225.016 275.871 li
225.055 275.988 225.148 276.09 225.297 276.184 cv
225.438 276.277 li
225.406 276.434 li
225.469 276.52 225.5 276.605 225.5 276.699 cv
225.5 276.746 li
cp
f
199.496 152.277 mo
199.246 152.512 li
199.246 152.59 li
199.215 152.746 199.137 152.871 199.012 152.965 cv
198.813 153.363 198.527 153.648 198.152 153.824 cv
197.949 153.98 li
197.777 154.012 li
197.574 154.168 li
197.434 154.184 li
197.105 154.387 li
196.902 154.355 li
196.668 154.465 li
196.48 154.418 li
196.387 154.496 li
196.152 154.449 li
195.902 154.496 li
195.809 154.418 li
195.543 154.355 li
195.168 154.074 li
194.965 153.809 li
194.828 153.652 194.762 153.52 194.762 153.402 cv
194.762 153.355 li
194.637 153.168 li
194.637 152.996 li
194.613 152.895 194.605 152.801 194.605 152.715 cv
194.605 152.621 li
194.527 152.402 li
194.605 152.246 li
194.543 152.137 li
194.699 151.887 li
194.668 151.684 li
194.762 151.34 li
194.824 151.262 li
194.871 150.949 li
194.84 150.902 li
194.996 150.73 li
195.027 150.605 li
195.137 150.309 li
195.309 149.934 li
195.543 149.73 li
195.59 149.621 li
195.668 149.465 li
195.699 149.34 li
195.902 149.09 li
195.953 149.082 196.012 149.066 196.074 149.043 cv
196.113 148.879 196.332 148.785 196.73 148.762 cv
197.074 148.824 197.293 148.914 197.387 149.027 cv
197.48 149.051 197.551 149.09 197.605 149.152 cv
197.871 149.168 li
198.059 149.402 li
198.098 149.488 198.129 149.57 198.152 149.652 cv
198.246 149.762 li
198.215 149.949 li
198.223 150.012 198.23 150.113 198.23 150.246 cv
198.293 150.293 li
198.293 150.48 li
198.34 150.887 li
198.16 151.074 197.953 151.18 197.715 151.199 cv
197.598 150.98 197.449 150.816 197.262 150.699 cv
197.246 150.262 li
197.168 150.121 li
197.168 150.012 li
197.027 149.855 li
196.965 149.809 li
196.855 149.855 li
196.684 149.855 li
196.566 149.879 196.457 149.961 196.355 150.105 cv
196.25 150.242 196.145 150.387 196.043 150.543 cv
196.027 150.668 li
195.949 150.73 li
195.949 150.965 li
195.777 151.152 li
195.574 151.715 li
195.59 151.871 li
195.48 152.105 li
195.527 152.402 li
195.449 152.434 li
195.418 152.793 li
195.434 152.871 li
195.59 153.027 li
195.652 153.293 li
195.84 153.34 li
195.84 153.449 li
196.23 153.527 li
196.293 153.496 196.371 153.48 196.465 153.48 cv
196.543 153.48 li
196.645 153.441 196.746 153.418 196.84 153.418 cv
196.902 153.387 196.98 153.363 197.074 153.34 cv
197.176 153.195 197.324 153.121 197.512 153.121 cv
197.59 153.121 li
197.629 153.121 197.66 153.102 197.684 153.059 cv
197.777 152.914 197.926 152.82 198.137 152.777 cv
198.375 152.559 198.516 152.387 198.559 152.262 cv
198.672 152.191 198.75 152.082 198.793 151.934 cv
198.871 151.871 li
198.902 151.574 li
199.297 151.637 199.496 151.84 199.496 152.184 cv
199.496 152.277 li
cp
f
207.535 153.559 mo
207.535 153.664 207.457 153.789 207.301 153.934 cv
207.191 153.965 li
207.098 154.09 li
206.863 154.152 li
206.82 154.215 206.777 154.246 206.738 154.246 cv
206.727 154.246 206.715 154.242 206.707 154.23 cv
206.695 154.23 206.684 154.23 206.676 154.23 cv
206.488 154.324 206.258 154.371 205.988 154.371 cv
205.879 154.371 li
205.551 154.309 li
205.332 154.199 li
204.848 153.793 li
204.738 153.434 li
204.535 153.262 li
204.555 153.23 204.566 153.18 204.566 153.105 cv
204.566 153.055 204.535 152.965 204.473 152.84 cv
204.504 152.527 li
204.504 152.48 li
204.504 152.379 204.473 152.242 204.41 152.074 cv
204.488 151.684 li
204.316 152.027 li
204.129 152.043 li
204.098 152.324 li
204.035 152.355 203.949 152.371 203.848 152.371 cv
203.707 152.684 li
203.535 152.871 li
203.473 152.957 203.414 153.004 203.363 153.012 cv
203.316 153.027 li
202.848 153.512 li
202.801 153.512 li
202.551 153.809 li
202.316 153.918 li
202.191 154.09 li
201.895 154.184 li
201.457 154.34 li
201.207 154.215 li
201.027 154.215 200.902 154.137 200.832 153.98 cv
200.723 153.918 li
200.723 153.898 200.727 153.863 200.738 153.809 cv
200.738 153.77 200.738 153.742 200.738 153.73 cv
200.52 153.543 li
200.582 153.465 li
200.426 153.105 li
200.473 153.043 li
200.441 153.027 li
200.441 153.008 200.441 152.98 200.441 152.949 cv
200.441 152.918 200.441 152.895 200.441 152.871 cv
200.441 152.777 200.449 152.691 200.473 152.605 cv
200.488 152.262 li
200.441 151.996 li
200.48 151.926 200.504 151.863 200.504 151.809 cv
200.504 151.746 200.477 151.691 200.426 151.637 cv
200.566 151.543 li
200.566 151.387 li
200.52 150.949 li
200.66 150.121 li
200.66 149.988 200.617 149.785 200.535 149.512 cv
200.566 149.23 200.746 149.082 201.082 149.059 cv
201.191 149.09 li
201.363 149.121 li
201.598 149.387 li
201.52 149.715 li
201.504 150.277 li
201.535 150.715 li
201.457 150.871 li
201.504 150.965 li
201.441 151.168 li
201.441 151.309 li
201.41 151.34 li
201.418 151.371 201.426 151.414 201.426 151.465 cv
201.426 151.582 201.402 151.695 201.363 151.809 cv
201.441 151.902 li
201.379 152.105 li
201.41 152.262 li
201.41 152.434 li
201.449 152.488 201.473 152.555 201.473 152.637 cv
201.473 152.699 201.457 152.77 201.426 152.84 cv
201.426 152.887 li
201.465 153.035 201.488 153.133 201.488 153.184 cv
201.598 153.293 li
201.648 153.262 201.711 153.223 201.785 153.168 cv
201.816 153.074 201.879 153.02 201.973 152.996 cv
201.973 152.871 li
202.023 152.871 202.105 152.855 202.223 152.824 cv
202.238 152.715 li
202.457 152.621 li
202.504 152.574 li
202.566 152.523 202.664 152.473 202.801 152.418 cv
202.801 152.355 li
203.051 152.184 li
203.113 152.02 203.223 151.91 203.379 151.855 cv
203.473 151.762 203.535 151.707 203.566 151.684 cv
203.738 151.465 li
203.738 151.418 li
203.785 151.402 li
203.91 151.34 li
203.973 151.168 li
204.238 151.043 li
204.301 151.027 li
204.301 151.027 204.332 151.004 204.395 150.949 cv
204.395 150.824 li
204.473 150.793 li
204.492 150.66 204.559 150.555 204.676 150.48 cv
204.863 150.043 li
204.926 149.809 li
204.957 149.762 li
205.004 149.762 li
205.098 149.699 li
205.02 149.668 li
205.113 149.512 205.184 149.348 205.238 149.168 cv
205.629 149.168 li
205.926 149.402 li
206.051 149.621 li
205.91 150.168 li
205.707 150.434 li
205.551 150.949 li
205.426 151.027 li
205.426 151.215 li
205.348 151.355 li
205.395 151.59 li
205.285 151.684 li
205.332 152.105 li
205.363 152.684 li
205.426 152.684 li
205.426 153.027 li
205.613 153.246 li
205.785 153.34 li
205.785 153.402 li
205.848 153.414 205.926 153.434 206.02 153.465 cv
206.332 153.496 li
206.535 153.434 li
206.879 153.262 li
206.949 153.23 207.039 153.215 207.145 153.215 cv
207.402 153.215 207.535 153.332 207.535 153.559 cv
207.535 153.559 li
cp
f
219.305 152.777 mo
219.25 152.895 219.195 152.98 219.133 153.043 cv
219.102 153.137 219.059 153.211 219.008 153.262 cv
218.965 153.348 218.914 153.402 218.852 153.434 cv
218.805 153.512 li
218.773 153.566 218.727 153.59 218.664 153.59 cv
218.602 153.73 li
218.508 153.73 li
218.445 153.84 li
218.336 153.887 li
218.195 154.027 li
218.059 154.027 217.949 154.066 217.867 154.137 cv
217.75 154.18 217.637 154.199 217.523 154.199 cv
217.398 154.199 217.273 154.176 217.148 154.121 cv
217.012 154.113 216.945 154.086 216.945 154.043 cv
216.758 154.027 li
216.727 153.98 li
216.648 153.824 li
216.508 153.715 li
216.414 153.602 216.359 153.496 216.352 153.402 cv
216.289 153.309 216.227 153.145 216.164 152.902 cv
216.039 152.699 li
216.039 152.574 li
215.945 152.184 li
215.961 152.027 li
215.883 151.637 li
215.914 151.309 li
215.852 151.215 li
215.727 151.543 li
215.559 151.723 215.461 151.832 215.43 151.871 cv
215.398 151.914 215.359 151.934 215.32 151.934 cv
215.309 151.934 215.293 151.93 215.273 151.918 cv
215.195 152.059 li
215.184 152.07 215.18 152.086 215.18 152.105 cv
215.18 152.16 215.211 152.191 215.273 152.199 cv
215.25 152.223 215.203 152.285 215.133 152.387 cv
215.102 152.461 215.074 152.508 215.055 152.527 cv
215.008 152.465 li
214.977 152.652 li
214.871 152.738 214.793 152.863 214.742 153.027 cv
214.656 153.145 214.527 153.305 214.352 153.512 cv
214.18 153.699 li
214.137 153.699 214.117 153.711 214.117 153.73 cv
214.117 153.746 li
214.063 153.871 213.969 153.973 213.836 154.043 cv
213.68 154.23 li
213.586 154.23 li
213.273 154.34 li
213.012 154.328 212.855 154.223 212.805 154.012 cv
212.789 153.871 li
212.711 153.699 li
212.711 153.559 li
212.602 153.184 li
212.602 153.059 li
212.523 152.934 li
212.586 152.527 li
212.574 152.488 212.57 152.426 212.57 152.34 cv
212.57 152.277 212.574 152.23 212.586 152.199 cv
212.57 152.121 li
212.57 152.074 li
212.508 151.934 li
212.602 151.684 li
212.59 151.613 212.563 151.496 212.523 151.34 cv
212.57 151.23 li
212.602 150.855 li
212.508 150.574 li
212.523 150.355 li
212.492 150.246 li
212.48 150.215 212.449 150.133 212.398 149.996 cv
212.305 150.043 li
212.133 150.246 li
211.977 150.402 li
211.664 150.793 li
211.648 150.934 li
211.414 151.168 li
211.336 151.34 li
211.242 151.449 li
211.211 151.637 211.117 151.773 210.961 151.855 cv
210.945 152.027 li
210.891 152.082 210.836 152.152 210.773 152.246 cv
210.719 152.332 210.684 152.383 210.664 152.402 cv
210.641 152.414 210.605 152.441 210.555 152.48 cv
210.398 152.699 li
210.398 152.848 210.34 152.949 210.227 153.012 cv
210.227 153.09 li
210.172 153.152 210.105 153.223 210.023 153.293 cv
210.008 153.262 li
209.961 153.449 li
209.898 153.449 209.836 153.535 209.773 153.699 cv
209.727 153.746 li
209.715 153.895 209.641 153.996 209.508 154.059 cv
209.336 154.23 li
209.188 154.305 209.094 154.34 209.055 154.34 cv
208.824 154.34 208.68 154.152 208.617 153.777 cv
208.555 153.496 li
208.555 153.477 208.555 153.449 208.555 153.418 cv
208.555 153.355 208.563 153.293 208.586 153.23 cv
208.523 152.98 li
208.555 152.777 li
208.523 152.574 li
208.543 152.387 208.574 152.273 208.617 152.23 cv
208.586 152.043 208.57 151.941 208.57 151.918 cv
208.57 151.684 li
208.609 151.621 208.656 151.543 208.711 151.449 cv
208.633 151.371 li
208.609 151.301 208.602 151.258 208.602 151.246 cv
208.602 151.195 208.652 151.098 208.758 150.949 cv
208.664 150.699 li
208.711 150.543 li
208.633 150.168 li
208.664 149.98 li
208.602 149.699 li
208.617 149.496 li
208.492 149.262 li
208.668 148.93 208.855 148.762 209.055 148.762 cv
209.156 148.762 209.258 148.805 209.352 148.887 cv
209.383 149.012 li
209.527 149.098 209.602 149.215 209.602 149.371 cv
209.602 149.34 209.586 149.43 209.555 149.637 cv
209.508 149.621 li
209.633 149.855 li
209.555 149.949 li
209.539 150.012 li
209.617 150.605 li
209.586 151.105 li
209.555 151.199 li
209.602 151.402 li
209.621 151.445 209.633 151.492 209.633 151.543 cv
209.633 151.605 209.602 151.676 209.539 151.746 cv
209.539 151.871 209.516 151.973 209.477 152.043 cv
209.508 152.434 li
209.508 152.59 li
209.523 152.574 li
209.602 152.449 li
209.789 152.121 li
209.82 152.121 li
209.871 152.121 209.93 152.039 209.992 151.871 cv
210.086 151.637 li
210.094 151.586 210.156 151.504 210.273 151.387 cv
210.336 151.152 li
210.492 150.918 li
210.539 150.73 li
210.578 150.711 210.621 150.68 210.664 150.637 cv
210.68 150.605 li
210.711 150.574 210.805 150.48 210.961 150.324 cv
211.039 150.293 li
211.07 150.168 li
211.133 150.121 li
211.172 149.945 211.281 149.824 211.461 149.762 cv
211.414 149.715 li
211.461 149.699 li
211.449 149.691 211.445 149.676 211.445 149.652 cv
211.445 149.633 211.453 149.605 211.477 149.574 cv
211.68 149.48 li
211.727 149.277 li
211.867 149.277 li
211.867 149.27 211.871 149.238 211.883 149.184 cv
212.148 148.98 li
212.273 148.949 212.355 148.934 212.398 148.934 cv
212.5 148.934 212.641 148.961 212.82 149.012 cv
212.961 149.199 li
213.008 149.23 li
213.07 149.387 li
213.258 149.621 li
213.258 149.793 li
213.367 149.934 li
213.367 150.121 li
213.461 150.332 213.508 150.508 213.508 150.652 cv
213.477 150.809 li
213.555 151.027 li
213.414 151.168 li
213.461 151.465 li
213.445 151.543 li
213.43 151.605 li
213.418 151.691 213.414 151.754 213.414 151.793 cv
213.414 151.848 213.434 151.934 213.477 152.059 cv
213.43 152.199 li
213.477 152.387 li
213.43 152.418 li
213.449 152.543 213.477 152.746 213.508 153.027 cv
213.508 153.09 li
213.914 152.637 li
214.055 152.387 li
214.086 152.336 214.137 152.254 214.211 152.137 cv
214.211 152.105 li
214.25 151.973 214.309 151.879 214.383 151.824 cv
214.383 151.773 214.422 151.711 214.508 151.637 cv
214.617 151.559 li
214.648 151.414 214.742 151.293 214.898 151.199 cv
214.961 151.027 li
215.07 150.871 li
215.211 150.73 li
215.281 150.668 215.34 150.574 215.383 150.449 cv
215.492 150.293 li
215.539 150.09 li
215.68 150.012 li
215.836 149.84 li
215.977 149.527 li
215.934 149.527 215.914 149.52 215.914 149.496 cv
215.914 149.496 215.922 149.48 215.945 149.449 cv
216.039 149.371 li
216.133 149.168 li
216.289 149.117 216.371 149.09 216.383 149.09 cv
216.383 149.09 216.402 149.098 216.445 149.105 cv
216.68 149.121 li
216.883 149.215 li
217.07 149.418 li
217.102 149.605 li
217.086 149.746 li
217.023 149.793 li
216.883 150.074 li
216.836 150.371 li
216.875 150.414 216.898 150.492 216.898 150.605 cv
216.855 150.648 216.836 150.707 216.836 150.777 cv
216.789 150.871 li
216.809 150.926 216.82 150.996 216.82 151.09 cv
216.82 151.164 216.813 151.215 216.805 151.246 cv
216.758 151.324 li
216.805 151.402 li
216.711 151.527 li
216.762 151.527 216.789 151.586 216.789 151.699 cv
216.809 151.754 216.82 151.785 216.82 151.793 cv
216.82 151.824 216.809 151.855 216.789 151.887 cv
216.809 151.98 216.82 152.066 216.82 152.137 cv
216.82 152.168 li
216.82 152.18 216.875 152.355 216.992 152.699 cv
217.008 152.824 li
217.148 152.98 li
217.227 153.168 li
217.305 153.199 li
217.367 153.277 li
217.43 153.293 li
217.539 153.324 li
217.602 153.309 li
217.648 153.309 li
217.73 153.309 217.836 153.273 217.961 153.199 cv
217.992 153.117 218.078 153.027 218.227 152.934 cv
218.234 152.895 218.289 152.809 218.383 152.684 cv
218.617 152.527 li
218.695 152.371 li
218.758 152.332 218.828 152.309 218.914 152.309 cv
219.008 152.309 219.109 152.336 219.227 152.387 cv
219.277 152.473 219.305 152.602 219.305 152.777 cv
219.305 152.777 li
cp
f
227.285 153.559 mo
227.285 153.664 227.207 153.789 227.051 153.934 cv
226.941 153.965 li
226.848 154.09 li
226.613 154.152 li
226.57 154.215 226.527 154.246 226.488 154.246 cv
226.477 154.246 226.465 154.242 226.457 154.23 cv
226.445 154.23 226.434 154.23 226.426 154.23 cv
226.238 154.324 226.008 154.371 225.738 154.371 cv
225.629 154.371 li
225.301 154.309 li
225.082 154.199 li
224.598 153.793 li
224.488 153.434 li
224.285 153.262 li
224.305 153.23 224.316 153.18 224.316 153.105 cv
224.316 153.055 224.285 152.965 224.223 152.84 cv
224.254 152.527 li
224.254 152.48 li
224.254 152.379 224.223 152.242 224.16 152.074 cv
224.238 151.684 li
224.066 152.027 li
223.879 152.043 li
223.848 152.324 li
223.785 152.355 223.699 152.371 223.598 152.371 cv
223.457 152.684 li
223.285 152.871 li
223.223 152.957 223.164 153.004 223.113 153.012 cv
223.066 153.027 li
222.598 153.512 li
222.551 153.512 li
222.301 153.809 li
222.066 153.918 li
221.941 154.09 li
221.645 154.184 li
221.207 154.34 li
220.957 154.215 li
220.777 154.215 220.652 154.137 220.582 153.98 cv
220.473 153.918 li
220.473 153.898 220.477 153.863 220.488 153.809 cv
220.488 153.77 220.488 153.742 220.488 153.73 cv
220.27 153.543 li
220.332 153.465 li
220.176 153.105 li
220.223 153.043 li
220.191 153.027 li
220.191 153.008 220.191 152.98 220.191 152.949 cv
220.191 152.918 220.191 152.895 220.191 152.871 cv
220.191 152.777 220.199 152.691 220.223 152.605 cv
220.238 152.262 li
220.191 151.996 li
220.23 151.926 220.254 151.863 220.254 151.809 cv
220.254 151.746 220.227 151.691 220.176 151.637 cv
220.316 151.543 li
220.316 151.387 li
220.27 150.949 li
220.41 150.121 li
220.41 149.988 220.367 149.785 220.285 149.512 cv
220.316 149.23 220.496 149.082 220.832 149.059 cv
220.941 149.09 li
221.113 149.121 li
221.348 149.387 li
221.27 149.715 li
221.254 150.277 li
221.285 150.715 li
221.207 150.871 li
221.254 150.965 li
221.191 151.168 li
221.191 151.309 li
221.16 151.34 li
221.168 151.371 221.176 151.414 221.176 151.465 cv
221.176 151.582 221.152 151.695 221.113 151.809 cv
221.191 151.902 li
221.129 152.105 li
221.16 152.262 li
221.16 152.434 li
221.199 152.488 221.223 152.555 221.223 152.637 cv
221.223 152.699 221.207 152.77 221.176 152.84 cv
221.176 152.887 li
221.215 153.035 221.238 153.133 221.238 153.184 cv
221.348 153.293 li
221.398 153.262 221.461 153.223 221.535 153.168 cv
221.566 153.074 221.629 153.02 221.723 152.996 cv
221.723 152.871 li
221.773 152.871 221.855 152.855 221.973 152.824 cv
221.988 152.715 li
222.207 152.621 li
222.254 152.574 li
222.316 152.523 222.414 152.473 222.551 152.418 cv
222.551 152.355 li
222.801 152.184 li
222.863 152.02 222.973 151.91 223.129 151.855 cv
223.223 151.762 223.285 151.707 223.316 151.684 cv
223.488 151.465 li
223.488 151.418 li
223.535 151.402 li
223.66 151.34 li
223.723 151.168 li
223.988 151.043 li
224.051 151.027 li
224.051 151.027 224.082 151.004 224.145 150.949 cv
224.145 150.824 li
224.223 150.793 li
224.242 150.66 224.309 150.555 224.426 150.48 cv
224.613 150.043 li
224.676 149.809 li
224.707 149.762 li
224.754 149.762 li
224.848 149.699 li
224.77 149.668 li
224.863 149.512 224.934 149.348 224.988 149.168 cv
225.379 149.168 li
225.676 149.402 li
225.801 149.621 li
225.66 150.168 li
225.457 150.434 li
225.301 150.949 li
225.176 151.027 li
225.176 151.215 li
225.098 151.355 li
225.145 151.59 li
225.035 151.684 li
225.082 152.105 li
225.113 152.684 li
225.176 152.684 li
225.176 153.027 li
225.363 153.246 li
225.535 153.34 li
225.535 153.402 li
225.598 153.414 225.676 153.434 225.77 153.465 cv
226.082 153.496 li
226.285 153.434 li
226.629 153.262 li
226.699 153.23 226.789 153.215 226.895 153.215 cv
227.152 153.215 227.285 153.332 227.285 153.559 cv
227.285 153.559 li
cp
f
231.676 152.887 mo
231.676 152.98 231.637 153.059 231.566 153.121 cv
231.504 153.227 231.395 153.336 231.238 153.449 cv
231.098 153.543 li
230.988 153.699 li
230.863 153.746 li
230.691 153.871 li
230.551 153.887 li
230.504 153.934 li
230.324 153.988 230.191 154.074 230.098 154.199 cv
230.035 154.242 229.977 154.262 229.926 154.262 cv
229.895 154.262 229.867 154.258 229.848 154.246 cv
229.691 154.328 229.496 154.371 229.27 154.371 cv
229.07 154.371 228.941 154.355 228.879 154.324 cv
228.645 154.199 li
228.566 154.059 li
228.566 154.027 li
228.566 153.914 228.52 153.82 228.426 153.746 cv
228.379 153.496 li
228.27 153.371 li
228.207 152.887 li
228.191 152.605 li
228.207 152.402 li
228.223 152.324 li
228.199 152.273 228.191 152.215 228.191 152.152 cv
228.23 151.789 228.254 151.559 228.254 151.465 cv
228.145 151.23 li
228.254 151.027 li
228.301 150.715 li
228.27 150.48 li
228.348 150.293 li
228.27 150.027 li
228.379 149.855 li
228.395 149.73 li
228.395 149.277 li
228.441 149.184 li
228.426 148.637 li
228.457 148.074 li
228.41 147.98 li
228.395 147.59 li
228.441 147.23 li
228.395 147.105 li
228.473 146.324 li
228.836 146.242 228.996 146.199 228.957 146.199 cv
229.09 146.199 229.207 146.273 229.301 146.418 cv
229.316 146.527 li
229.52 146.715 li
229.41 146.996 li
229.441 147.043 li
229.418 147.211 229.398 147.32 229.379 147.371 cv
229.395 147.637 li
229.457 147.887 li
229.379 148.152 li
229.379 148.309 229.352 148.445 229.301 148.559 cv
229.301 148.602 229.293 148.676 229.285 148.777 cv
229.27 148.855 li
229.379 148.996 li
229.332 149.137 li
229.352 149.211 229.363 149.258 229.363 149.277 cv
229.363 149.332 229.34 149.398 229.301 149.48 cv
229.332 149.605 li
229.254 150.012 li
229.254 150.293 li
229.16 150.559 li
229.223 150.809 li
229.16 151.387 li
229.207 151.449 li
229.145 151.746 li
229.113 152.105 li
229.09 152.16 229.082 152.191 229.082 152.199 cv
229.082 152.348 229.082 152.473 229.082 152.574 cv
229.145 152.746 li
229.113 152.949 li
229.191 153.105 li
229.176 153.184 li
229.227 153.227 229.273 153.293 229.316 153.387 cv
229.441 153.387 li
229.613 153.434 li
229.691 153.34 li
229.801 153.324 li
229.852 153.305 229.895 153.293 229.926 153.293 cv
229.957 153.293 li
230.039 153.273 230.105 153.23 230.16 153.168 cv
230.238 153.121 li
230.301 153.027 230.402 152.965 230.551 152.934 cv
230.59 152.895 230.668 152.82 230.785 152.715 cv
230.785 152.602 230.855 152.512 231.004 152.449 cv
231.137 152.449 231.227 152.43 231.27 152.387 cv
231.445 152.41 231.555 152.457 231.598 152.527 cv
231.648 152.59 231.676 152.711 231.676 152.887 cv
231.676 152.887 li
cp
f
236.254 149.715 mo
236.191 149.621 li
236.098 149.605 li
235.691 149.277 li
235.426 149.246 li
235.223 149.246 li
235.191 149.215 li
235.098 149.246 li
234.973 149.184 li
234.645 149.184 li
234.676 149.246 li
234.379 149.34 li
234.332 149.402 li
234.285 149.418 li
234.129 149.555 234.02 149.664 233.957 149.746 cv
233.863 150.059 li
233.816 150.168 li
233.941 150.355 li
233.723 150.527 li
233.754 150.574 li
233.66 150.742 233.613 150.902 233.613 151.059 cv
233.504 151.184 li
233.504 151.418 li
233.395 151.543 li
233.379 151.652 li
233.332 151.684 li
233.332 151.871 li
233.301 151.934 li
233.301 152.039 233.289 152.121 233.27 152.184 cv
233.301 152.246 li
233.176 152.496 li
233.238 152.574 li
233.145 152.699 li
233.238 152.949 li
233.098 153.121 li
233.113 153.371 li
233.113 153.418 li
233.176 153.434 li
233.238 153.418 li
233.277 153.379 233.32 153.34 233.363 153.309 cv
233.332 153.199 li
233.52 153.184 li
233.551 153.09 li
234.332 152.465 li
234.41 152.434 li
234.488 152.215 li
234.539 152.195 234.617 152.16 234.723 152.105 cv
234.801 151.902 li
234.895 151.902 li
234.863 151.684 li
235.035 151.652 li
235.055 151.621 235.082 151.582 235.113 151.527 cv
235.152 151.477 235.199 151.43 235.254 151.387 cv
235.91 150.496 li
236.02 150.309 li
236.004 150.246 li
236.098 150.105 li
236.113 149.965 li
236.238 149.855 li
236.254 149.715 li
cp
237.488 149.043 mo
237.348 149.215 li
237.457 149.527 li
237.285 149.715 li
237.223 149.996 li
237.191 150.059 li
237.207 150.121 li
237.207 150.246 237.176 150.34 237.113 150.402 cv
237.098 150.434 li
237.098 150.48 li
237.117 150.543 237.129 150.602 237.129 150.652 cv
237.129 150.695 237.121 150.727 237.113 150.746 cv
237.129 150.793 li
237.082 150.949 li
237.113 151.09 li
237.02 151.199 li
237.051 151.387 li
237.129 151.48 li
237.02 151.574 li
237.02 151.793 li
236.926 151.996 li
236.988 152.199 li
236.91 152.309 li
237.035 152.402 li
236.863 152.699 li
236.848 152.73 li
236.973 152.762 li
236.879 153.059 li
236.879 153.105 li
236.879 153.168 236.879 153.223 236.879 153.262 cv
236.879 153.293 li
237.098 153.324 li
237.27 153.574 li
237.176 153.777 li
237.316 153.762 li
237.367 153.867 237.398 153.961 237.41 154.043 cv
237.207 154.23 li
237.145 154.293 237.059 154.355 236.957 154.418 cv
236.723 154.527 li
236.66 154.465 li
236.535 154.543 li
236.129 154.074 li
236.129 153.855 li
236.074 153.68 236.051 153.52 236.051 153.371 cv
236.051 153.293 li
235.973 152.527 li
236.082 151.98 li
236.004 151.668 li
235.785 152.027 li
235.66 152.371 li
235.566 152.418 li
235.379 152.715 li
235.051 153.012 li
234.957 153.168 li
234.676 153.418 li
234.613 153.574 li
234.191 153.84 li
233.754 154.34 li
233.504 154.387 li
233.332 154.512 li
233.121 154.5 232.961 154.422 232.848 154.277 cv
232.449 154.082 232.246 153.805 232.238 153.449 cv
232.301 153.418 li
232.285 153.34 li
232.27 153.184 li
232.191 153.012 li
232.27 152.824 li
232.301 152.559 li
232.395 152.121 li
232.395 152.113 232.395 152.098 232.395 152.074 cv
232.383 152.055 232.379 152.039 232.379 152.027 cv
232.379 151.988 232.383 151.941 232.395 151.887 cv
232.395 151.879 232.395 151.848 232.395 151.793 cv
232.395 151.73 232.418 151.629 232.473 151.48 cv
232.551 151.449 li
232.496 151.41 232.473 151.363 232.473 151.309 cv
232.473 151.27 232.477 151.242 232.488 151.23 cv
232.477 151.199 232.473 151.168 232.473 151.137 cv
232.473 151.035 232.523 150.957 232.629 150.902 cv
232.66 150.82 232.711 150.73 232.785 150.637 cv
232.707 150.543 li
232.863 150.34 li
232.863 150.293 li
232.863 150.129 232.918 149.977 233.035 149.84 cv
233.02 149.605 li
233.082 149.543 li
233.082 149.543 233.082 149.535 233.082 149.512 cv
233.07 149.492 233.066 149.477 233.066 149.465 cv
233.066 149.426 233.082 149.383 233.113 149.34 cv
233.113 149.262 li
233.152 149.18 233.246 149.055 233.395 148.887 cv
233.539 148.711 233.645 148.555 233.707 148.418 cv
233.785 148.48 li
233.926 148.418 li
233.988 148.387 li
234.41 148.199 li
235.41 148.246 li
235.41 148.34 li
235.723 148.402 li
235.93 148.402 236.059 148.473 236.113 148.605 cv
236.113 148.574 236.117 148.543 236.129 148.512 cv
236.129 148.48 236.129 148.465 236.129 148.465 cv
236.41 148.699 li
236.645 148.762 li
237.113 148.637 li
237.285 148.965 li
237.488 149.043 li
cp
f
243.031 149.637 mo
243.031 149.723 242.953 149.793 242.797 149.855 cv
242.754 149.91 242.688 149.949 242.594 149.98 cv
242.477 150.035 242.395 150.074 242.344 150.105 cv
242.063 150.012 li
241.926 150.117 241.75 150.168 241.531 150.168 cv
241.375 150.137 li
241.266 150.246 li
240.906 150.246 li
240.688 150.387 li
240.594 150.348 240.5 150.324 240.406 150.324 cv
240.383 150.348 240.328 150.367 240.234 150.387 cv
240.191 150.387 240.145 150.371 240.094 150.34 cv
240.047 150.84 li
240.063 151.199 li
240.031 151.652 li
240.047 152.152 li
240.094 152.387 li
240.094 152.574 li
240.266 152.949 li
240.242 152.98 240.234 153.012 240.234 153.043 cv
240.234 153.105 240.328 153.152 240.516 153.184 cv
240.547 153.34 li
240.641 153.387 li
240.797 153.496 li
240.891 153.574 li
240.984 153.555 241.047 153.543 241.078 153.543 cv
241.148 153.543 241.227 153.555 241.313 153.574 cv
241.344 153.566 241.414 153.508 241.531 153.402 cv
241.613 153.332 241.688 153.293 241.75 153.293 cv
241.758 153.293 241.773 153.293 241.797 153.293 cv
241.805 153.305 241.816 153.309 241.828 153.309 cv
241.91 153.145 242.051 153.035 242.25 152.98 cv
242.426 152.98 242.578 153.039 242.703 153.152 cv
242.703 153.246 li
242.703 153.539 242.598 153.727 242.391 153.809 cv
242.305 153.988 242.141 154.102 241.891 154.152 cv
241.734 154.293 li
241.578 154.293 li
241.266 154.371 li
241.203 154.391 241.102 154.402 240.969 154.402 cv
240.906 154.402 240.832 154.379 240.75 154.34 cv
240.578 154.34 li
240.125 154.105 li
240.016 154.059 li
239.734 153.699 li
239.578 153.527 li
239.297 152.871 li
239.188 152.262 li
239.219 152.105 li
239.109 151.965 li
239.172 151.793 li
239.109 151.496 li
239.203 151.402 li
239.234 151.246 li
239.188 151.09 li
239.219 150.855 li
239.172 150.637 li
239.234 150.574 li
239.234 150.371 li
239.141 150.324 li
238.891 150.387 li
238.656 150.215 li
238.625 150.215 li
238.367 150.215 238.234 150.074 238.234 149.793 cv
238.234 149.762 li
238.078 149.512 li
238.328 149.277 li
238.641 149.324 li
238.813 149.309 li
239.063 149.371 li
239.328 149.371 li
239.328 149.105 li
239.172 148.746 li
239.328 148.652 li
239.266 148.465 li
239.281 148.059 li
239.172 147.887 li
239.117 147.793 239.094 147.707 239.094 147.621 cv
239.094 147.527 239.113 147.449 239.156 147.387 cv
239.188 147.215 li
239.297 147.105 li
239.523 147.066 239.68 147.043 239.766 147.043 cv
240.035 147.043 240.188 147.168 240.219 147.418 cv
240.172 147.48 li
240.223 147.566 240.25 147.637 240.25 147.699 cv
240.25 147.711 240.25 147.738 240.25 147.777 cv
240.219 147.84 li
240.203 147.934 li
240.25 148.105 li
240.25 148.168 li
240.266 148.355 li
240.156 148.512 li
240.219 148.777 li
240.172 149.09 li
240.266 149.199 li
240.172 149.434 li
240.563 149.387 li
241.281 149.449 li
241.859 149.355 li
242.047 149.371 li
242.109 149.355 li
242.625 149.355 li
242.895 149.355 243.031 149.449 243.031 149.637 cv
243.031 149.637 li
cp
f
247.137 152.418 mo
247.137 152.617 247.098 152.742 247.027 152.793 cv
246.965 152.84 li
246.902 153.027 li
246.684 153.09 li
246.629 153.227 246.543 153.336 246.418 153.418 cv
246.293 153.449 li
246.137 153.637 li
245.98 153.668 li
245.918 153.824 245.793 153.91 245.605 153.918 cv
245.582 153.949 245.543 154.004 245.48 154.074 cv
245.355 154.16 245.219 154.211 245.074 154.23 cv
245.012 154.246 li
244.918 154.355 li
244.668 154.355 li
244.449 154.512 li
243.918 154.121 li
243.668 153.621 li
243.668 152.98 li
243.605 152.824 li
243.762 151.684 li
243.824 151.637 li
243.793 151.504 243.777 151.371 243.777 151.246 cv
243.777 151.176 243.801 151.02 243.855 150.777 cv
243.918 150.48 li
243.906 150.43 243.875 150.371 243.824 150.309 cv
243.902 150.059 li
243.918 149.762 li
243.949 149.715 li
243.918 149.645 243.895 149.559 243.887 149.465 cv
243.895 149.445 243.902 149.418 243.902 149.387 cv
243.91 149.355 243.918 149.336 243.918 149.324 cv
243.895 149.242 243.887 149.164 243.887 149.09 cv
243.887 148.883 244 148.789 244.23 148.809 cv
244.387 148.824 li
244.488 148.773 244.559 148.746 244.59 148.746 cv
244.754 148.746 244.871 148.84 244.934 149.027 cv
244.934 149.09 li
244.965 149.195 244.98 149.293 244.98 149.387 cv
244.98 149.461 244.973 149.512 244.965 149.543 cv
244.871 150.199 li
244.965 150.387 li
244.965 150.543 244.91 150.68 244.809 150.793 cv
244.855 150.949 li
244.684 151.449 li
244.672 151.668 244.652 151.836 244.621 151.949 cv
244.621 152.262 li
244.543 152.449 li
244.559 152.574 li
244.527 152.871 li
244.559 153.105 li
244.746 153.262 li
244.902 153.246 li
244.934 153.199 li
245.043 153.215 li
245.215 153.168 li
245.355 153.027 li
245.402 152.949 li
245.496 152.934 li
245.559 152.809 li
245.637 152.871 li
245.762 152.73 li
245.84 152.746 li
245.871 152.652 li
245.902 152.652 li
245.934 152.559 li
246.059 152.496 li
246.293 152.387 li
246.5 152.254 246.699 152.184 246.887 152.184 cv
246.934 152.184 li
247.027 152.238 247.094 152.316 247.137 152.418 cv
247.137 152.418 li
cp
245.809 145.527 mo
245.809 145.633 245.738 145.727 245.605 145.809 cv
245.605 145.84 li
245.438 146.039 245.293 146.148 245.168 146.168 cv
244.98 146.402 li
244.84 146.574 li
244.543 146.652 li
244.418 146.84 li
244.215 146.934 li
243.871 147.23 li
243.668 147.043 li
243.699 146.715 li
243.84 146.48 li
243.848 146.355 243.922 146.254 244.059 146.168 cv
244.059 146.121 li
244.137 146.074 li
244.137 145.871 li
244.355 145.824 li
244.355 145.699 li
244.512 145.684 li
244.543 145.508 244.613 145.379 244.73 145.293 cv
244.762 145.277 li
244.84 145.199 li
244.949 144.887 li
245.52 145.023 245.809 145.238 245.809 145.527 cv
245.809 145.527 li
cp
f
253.949 148.277 mo
253.809 148.496 li
253.855 148.746 li
253.668 148.855 li
253.605 149.137 li
253.496 149.23 li
253.449 149.512 li
253.418 149.512 li
253.387 149.637 253.313 149.73 253.199 149.793 cv
253.074 150.215 li
252.965 150.402 li
252.965 150.457 252.965 150.508 252.965 150.559 cv
252.762 150.746 li
252.465 151.434 li
252.215 151.84 li
252.215 151.965 li
252.215 152.09 252.145 152.195 252.012 152.277 cv
251.98 152.512 li
251.887 152.574 li
251.73 152.777 li
251.699 152.918 li
251.605 152.98 li
251.605 153.012 251.613 153.07 251.637 153.152 cv
251.496 153.262 li
251.262 153.418 li
251.184 153.543 li
250.918 153.809 li
250.645 154.277 250.363 154.512 250.074 154.512 cv
249.832 154.512 249.621 154.391 249.434 154.152 cv
249.48 154.246 li
249.012 153.574 li
248.996 153.418 li
248.918 153.371 li
248.902 153.059 li
248.762 152.918 li
248.762 152.59 li
248.418 151.84 li
248.449 151.715 li
248.34 151.527 li
248.324 151.387 li
248.246 151.293 li
248.168 151.059 li
247.934 150.871 li
247.824 150.449 li
247.637 150.293 li
247.543 150.121 li
247.324 150.051 247.215 149.871 247.215 149.59 cv
247.215 149.352 247.402 149.16 247.777 149.012 cv
248.246 149.324 248.527 149.645 248.621 149.965 cv
248.652 150.262 li
248.691 150.254 248.754 150.238 248.84 150.215 cv
248.84 150.324 li
249.043 150.48 li
248.965 150.699 li
248.996 150.855 li
249.105 151.168 li
249.168 151.23 li
249.184 151.34 li
249.293 151.402 li
249.293 151.621 li
249.434 152.121 li
249.465 152.324 li
249.668 152.73 li
249.84 153.246 li
249.965 153.371 li
249.996 153.371 li
250.027 153.371 250.059 153.336 250.09 153.262 cv
250.184 153.23 li
250.152 153.121 li
250.172 153.07 250.203 153.043 250.246 153.043 cv
250.277 153.043 250.309 153.059 250.34 153.09 cv
250.402 152.914 250.449 152.824 250.48 152.824 cv
250.488 152.824 250.496 152.84 250.496 152.871 cv
250.527 152.77 250.605 152.68 250.73 152.605 cv
250.902 152.355 li
251.012 152.105 li
251.137 151.996 li
251.215 151.824 li
251.262 151.793 li
251.246 151.621 li
251.387 151.559 li
251.418 151.48 li
251.418 151.449 251.438 151.402 251.48 151.34 cv
251.574 151.105 li
251.637 151.184 li
251.684 151.168 li
251.684 151.121 li
251.684 151.008 251.73 150.914 251.824 150.84 cv
251.824 150.809 li
251.918 150.637 li
251.98 150.355 li
252.074 150.324 li
252.246 149.934 li
252.355 149.777 li
252.387 149.645 252.449 149.539 252.543 149.465 cv
252.652 149.105 li
252.746 148.996 li
252.746 148.715 li
252.809 148.715 li
252.91 148.652 253 148.551 253.074 148.402 cv
253.145 148.258 253.199 148.176 253.23 148.152 cv
253.293 148.105 li
253.668 147.887 li
253.949 148.277 li
cp
f
257.07 149.496 mo
257.07 149.477 257.059 149.426 257.039 149.34 cv
256.977 149.324 li
256.945 149.34 li
256.934 149.34 256.918 149.34 256.898 149.34 cv
256.875 149.352 256.855 149.355 256.836 149.355 cv
256.836 149.355 256.824 149.352 256.805 149.34 cv
256.781 149.34 256.766 149.34 256.758 149.34 cv
256.633 149.434 li
256.523 149.449 li
256.445 149.465 li
256.227 149.762 li
256.086 149.855 li
255.883 150.23 li
255.758 150.309 li
255.734 150.457 255.68 150.582 255.586 150.684 cv
255.523 150.777 li
255.617 150.715 255.727 150.684 255.852 150.684 cv
255.945 150.637 li
255.977 150.527 li
256.164 150.543 li
256.273 150.387 li
256.352 150.387 li
256.492 150.434 li
256.555 150.246 li
256.648 150.246 li
256.648 150.09 li
256.82 150.059 li
256.852 150.012 li
256.883 149.902 li
257.055 149.652 li
257.063 149.613 257.07 149.559 257.07 149.496 cv
257.07 149.496 li
cp
258.367 153.246 mo
258.367 153.352 258.289 153.48 258.133 153.637 cv
258.09 153.773 258.023 153.883 257.93 153.965 cv
257.852 153.98 li
257.711 154.23 li
257.477 154.277 li
257.227 154.418 li
257.102 154.652 li
256.961 154.637 li
256.867 154.676 256.789 154.703 256.727 154.715 cv
256.648 154.824 li
256.617 154.813 256.574 154.809 256.523 154.809 cv
256.418 154.809 256.313 154.887 256.211 155.043 cv
256.023 154.887 li
255.992 154.895 255.938 154.902 255.867 154.902 cv
255.75 154.902 255.656 154.887 255.586 154.855 cv
255.352 154.855 li
255.258 154.793 li
254.922 154.738 254.715 154.613 254.633 154.418 cv
254.633 154.371 li
254.477 154.293 li
254.398 154.074 li
254.242 153.965 li
254.242 153.777 li
254.086 153.199 li
254.117 152.73 li
254.164 152.527 li
254.164 152.262 li
254.227 152.043 li
254.211 151.949 li
254.305 151.793 li
254.273 151.824 li
254.273 151.754 254.297 151.668 254.352 151.574 cv
254.352 151.512 li
254.305 151.199 li
254.305 151.055 254.371 150.926 254.508 150.809 cv
254.508 150.801 254.508 150.773 254.508 150.73 cv
254.508 150.699 254.492 150.633 254.461 150.527 cv
254.438 150.414 254.43 150.336 254.43 150.293 cv
254.43 150.191 254.453 150.082 254.508 149.965 cv
254.57 150.07 254.668 150.121 254.805 150.121 cv
254.836 150.121 li
254.855 150.09 254.898 150.055 254.961 150.012 cv
255.023 149.793 255.117 149.613 255.242 149.465 cv
255.289 149.402 li
255.289 149.371 255.313 149.273 255.367 149.105 cv
255.477 149.105 li
255.508 149.043 li
255.602 149.012 li
255.641 148.949 255.668 148.914 255.68 148.902 cv
255.699 148.883 255.797 148.824 255.977 148.73 cv
256.008 148.668 256.059 148.613 256.133 148.559 cv
256.164 148.551 256.203 148.535 256.258 148.512 cv
256.305 148.434 li
256.543 148.352 256.695 148.309 256.758 148.309 cv
256.82 148.309 256.883 148.332 256.945 148.371 cv
257.008 148.355 li
257.102 148.402 li
257.203 148.488 257.309 148.555 257.414 148.605 cv
257.633 148.777 li
257.633 148.824 li
257.828 148.98 257.93 149.199 257.93 149.48 cv
257.898 149.621 li
257.93 150.043 li
257.82 150.121 li
257.68 150.465 li
257.445 150.73 li
257.43 150.949 li
257.148 151.148 256.891 151.305 256.664 151.418 cv
256.578 151.543 256.453 151.605 256.289 151.605 cv
256.258 151.605 li
256.008 151.762 li
255.805 151.762 li
255.492 151.887 li
255.258 151.777 li
255.227 151.777 li
255.215 151.84 255.199 151.945 255.18 152.09 cv
255.07 152.168 li
255.055 152.324 li
254.977 152.543 li
255.008 152.754 255.023 152.887 255.023 152.949 cv
254.977 152.98 li
254.977 153.098 254.969 153.18 254.961 153.23 cv
254.961 153.242 254.953 153.254 254.945 153.262 cv
254.945 153.285 254.945 153.301 254.945 153.309 cv
254.945 153.383 254.98 153.441 255.055 153.48 cv
255.074 153.586 255.117 153.648 255.18 153.668 cv
255.273 153.746 li
255.555 153.824 li
255.555 153.871 li
255.664 153.887 li
256.102 153.918 li
256.367 153.887 li
256.492 153.793 li
256.57 153.762 li
256.695 153.574 li
256.758 153.559 li
257.086 153.449 li
257.117 153.387 257.172 153.336 257.258 153.293 cv
257.289 153.23 li
257.465 153.199 257.57 153.105 257.602 152.949 cv
257.715 152.836 257.871 152.777 258.07 152.777 cv
258.117 152.777 li
258.281 152.965 258.367 153.121 258.367 153.246 cv
258.367 153.246 li
cp
f
198.734 168.574 mo
198.719 168.512 li
198.734 168.465 li
198.656 168.23 li
198.719 168.105 li
198.656 168.012 li
198.641 167.871 li
198.547 167.668 li
198.484 167.527 li
198.297 167.184 li
198.141 167.059 li
198.047 166.84 li
197.938 166.793 li
197.719 166.512 li
197.516 166.543 li
197.359 166.324 li
197.234 166.355 li
197.141 166.184 li
197.094 166.168 li
196.906 166.168 li
196.781 166.246 li
196.672 166.137 li
196.547 166.168 li
196.484 166.074 li
196.25 166.027 li
196.266 166.184 li
196.234 166.434 li
196.297 166.574 li
196.469 166.746 li
196.328 167.059 li
196.344 167.246 li
196.281 167.637 li
196.301 167.805 196.352 167.945 196.438 168.059 cv
196.391 168.199 li
196.391 168.211 196.391 168.223 196.391 168.23 cv
196.391 168.254 196.359 168.289 196.297 168.34 cv
196.391 168.465 li
196.313 168.621 li
196.297 168.793 li
196.328 168.965 li
196.313 169.137 li
196.594 169.137 li
196.625 169.117 196.672 169.105 196.734 169.105 cv
196.816 169.105 196.883 169.133 196.938 169.184 cv
196.945 169.184 196.969 169.184 197 169.184 cv
197.008 169.184 197.02 169.184 197.031 169.184 cv
197.063 169.184 197.109 169.191 197.172 169.199 cv
197.223 169.18 197.273 169.168 197.328 169.168 cv
197.391 169.168 197.453 169.184 197.516 169.215 cv
197.625 169.215 li
197.734 169.246 li
198 169.168 li
198.203 169.293 li
198.285 169.324 198.316 169.34 198.297 169.34 cv
198.547 169.09 li
198.563 168.902 li
198.641 168.871 li
198.594 168.777 li
198.688 168.668 li
198.734 168.574 li
cp
199.719 168.387 mo
199.563 168.777 li
199.656 169.027 li
199.609 169.105 li
199.563 169.324 li
199.453 169.496 li
199.406 169.527 li
199.375 169.777 li
199.141 169.809 li
199.016 169.914 198.891 170.004 198.766 170.074 cv
198.688 170.059 li
198.484 170.121 li
198.375 170.137 li
198.125 170.23 li
197.844 170.105 li
197.797 170.074 li
197.578 170.09 li
197.625 170.121 li
197.266 170.059 li
196.938 170.137 li
196.813 170.027 li
196.547 170.043 li
196.438 169.965 li
196.426 169.965 196.391 169.973 196.328 169.98 cv
196.328 170.059 li
196.328 170.145 196.316 170.223 196.297 170.293 cv
196.328 170.543 li
196.234 170.668 li
196.242 170.863 196.25 171.012 196.25 171.105 cv
196.219 171.434 li
196.266 171.918 li
196.156 172.043 li
196.219 172.246 li
196.172 172.371 li
196.25 172.418 li
196.25 172.605 li
196.27 172.656 196.281 172.699 196.281 172.73 cv
196.281 172.801 196.234 172.863 196.141 172.918 cv
196.188 173.105 li
196.125 173.215 li
196.094 173.73 li
196.07 174.332 195.941 174.637 195.703 174.637 cv
195.648 174.637 195.492 174.598 195.234 174.527 cv
195.281 174.137 li
195.203 173.574 li
195.328 173.34 li
195.344 173.059 li
195.297 172.668 li
195.391 172.496 li
195.281 172.199 li
195.375 172.043 li
195.297 171.777 li
195.391 171.543 li
195.379 171.488 195.348 171.441 195.297 171.402 cv
195.254 171.359 195.234 171.328 195.234 171.309 cv
195.234 171.285 195.258 171.262 195.313 171.23 cv
195.313 171.207 195.313 171.168 195.313 171.105 cv
195.313 170.988 195.336 170.84 195.391 170.652 cv
195.313 170.527 li
195.344 170.355 li
195.25 170.246 li
195.375 170.105 li
195.313 169.73 li
195.391 169.184 li
195.313 169.027 li
195.453 168.777 li
195.297 168.637 li
195.391 168.387 li
195.297 168.324 li
195.313 168.105 li
195.391 167.824 li
195.391 167.574 li
195.406 167.527 li
195.344 167.324 li
195.406 167.09 li
195.344 166.934 li
195.391 166.73 li
195.344 166.684 li
195.391 166.418 li
195.344 166.277 li
195.375 166.152 li
195.328 166.059 li
194.859 166.262 li
194.859 166.184 li
194.766 166.199 li
194.625 166.324 li
194.516 166.324 li
194.359 166.543 li
194.219 166.48 li
194.156 166.621 li
193.742 166.371 193.531 166.168 193.531 166.012 cv
193.531 165.91 193.57 165.824 193.641 165.762 cv
193.625 165.559 li
193.875 165.426 194.102 165.352 194.313 165.34 cv
194.406 165.246 li
194.828 165.09 li
194.922 164.996 li
195.281 165.012 li
195.344 164.996 li
195.469 164.543 li
195.766 164.605 li
195.984 164.934 li
196.094 164.824 li
196.328 164.996 li
196.441 164.996 196.551 165.02 196.656 165.059 cv
196.719 165.168 li
196.813 165.137 li
196.922 165.215 li
196.984 165.215 197.031 165.223 197.063 165.23 cv
197.047 165.309 li
197.328 165.215 li
197.469 165.371 li
197.719 165.449 li
197.891 165.652 li
198.203 165.855 li
198.219 165.871 li
198.469 165.949 li
198.469 166.027 li
198.531 166.082 198.582 166.152 198.625 166.246 cv
198.719 166.309 li
198.797 166.449 li
198.953 166.449 li
198.953 166.715 li
199.047 166.793 li
199.078 166.887 li
199.203 166.918 li
199.223 167.117 199.281 167.285 199.375 167.418 cv
199.375 167.512 li
199.5 167.637 li
199.484 167.855 li
199.578 168.09 li
199.625 168.355 li
199.719 168.387 li
cp
f
204.703 165.715 mo
204.641 165.621 li
204.547 165.605 li
204.141 165.277 li
203.875 165.246 li
203.672 165.246 li
203.641 165.215 li
203.547 165.246 li
203.422 165.184 li
203.094 165.184 li
203.125 165.246 li
202.828 165.34 li
202.781 165.402 li
202.734 165.418 li
202.578 165.555 202.469 165.664 202.406 165.746 cv
202.313 166.059 li
202.266 166.168 li
202.391 166.355 li
202.172 166.527 li
202.203 166.574 li
202.109 166.742 202.063 166.902 202.063 167.059 cv
201.953 167.184 li
201.953 167.418 li
201.844 167.543 li
201.828 167.652 li
201.781 167.684 li
201.781 167.871 li
201.75 167.934 li
201.75 168.039 201.738 168.121 201.719 168.184 cv
201.75 168.246 li
201.625 168.496 li
201.688 168.574 li
201.594 168.699 li
201.688 168.949 li
201.547 169.121 li
201.563 169.371 li
201.563 169.418 li
201.625 169.434 li
201.688 169.418 li
201.727 169.379 201.77 169.34 201.813 169.309 cv
201.781 169.199 li
201.969 169.184 li
202 169.09 li
202.781 168.465 li
202.859 168.434 li
202.938 168.215 li
202.988 168.195 203.066 168.16 203.172 168.105 cv
203.25 167.902 li
203.344 167.902 li
203.313 167.684 li
203.484 167.652 li
203.504 167.621 203.531 167.582 203.563 167.527 cv
203.602 167.477 203.648 167.43 203.703 167.387 cv
204.359 166.496 li
204.469 166.309 li
204.453 166.246 li
204.547 166.105 li
204.563 165.965 li
204.688 165.855 li
204.703 165.715 li
cp
205.938 165.043 mo
205.797 165.215 li
205.906 165.527 li
205.734 165.715 li
205.672 165.996 li
205.641 166.059 li
205.656 166.121 li
205.656 166.246 205.625 166.34 205.563 166.402 cv
205.547 166.434 li
205.547 166.48 li
205.566 166.543 205.578 166.602 205.578 166.652 cv
205.578 166.695 205.57 166.727 205.563 166.746 cv
205.578 166.793 li
205.531 166.949 li
205.563 167.09 li
205.469 167.199 li
205.5 167.387 li
205.578 167.48 li
205.469 167.574 li
205.469 167.793 li
205.375 167.996 li
205.438 168.199 li
205.359 168.309 li
205.484 168.402 li
205.313 168.699 li
205.297 168.73 li
205.422 168.762 li
205.328 169.059 li
205.328 169.105 li
205.328 169.168 205.328 169.223 205.328 169.262 cv
205.328 169.293 li
205.547 169.324 li
205.719 169.574 li
205.625 169.777 li
205.766 169.762 li
205.816 169.867 205.848 169.961 205.859 170.043 cv
205.656 170.23 li
205.594 170.293 205.508 170.355 205.406 170.418 cv
205.172 170.527 li
205.109 170.465 li
204.984 170.543 li
204.578 170.074 li
204.578 169.855 li
204.523 169.68 204.5 169.52 204.5 169.371 cv
204.5 169.293 li
204.422 168.527 li
204.531 167.98 li
204.453 167.668 li
204.234 168.027 li
204.109 168.371 li
204.016 168.418 li
203.828 168.715 li
203.5 169.012 li
203.406 169.168 li
203.125 169.418 li
203.063 169.574 li
202.641 169.84 li
202.203 170.34 li
201.953 170.387 li
201.781 170.512 li
201.57 170.5 201.41 170.422 201.297 170.277 cv
200.898 170.082 200.695 169.805 200.688 169.449 cv
200.75 169.418 li
200.734 169.34 li
200.719 169.184 li
200.641 169.012 li
200.719 168.824 li
200.75 168.559 li
200.844 168.121 li
200.844 168.113 200.844 168.098 200.844 168.074 cv
200.832 168.055 200.828 168.039 200.828 168.027 cv
200.828 167.988 200.832 167.941 200.844 167.887 cv
200.844 167.879 200.844 167.848 200.844 167.793 cv
200.844 167.73 200.867 167.629 200.922 167.48 cv
201 167.449 li
200.945 167.41 200.922 167.363 200.922 167.309 cv
200.922 167.27 200.926 167.242 200.938 167.23 cv
200.926 167.199 200.922 167.168 200.922 167.137 cv
200.922 167.035 200.973 166.957 201.078 166.902 cv
201.109 166.82 201.16 166.73 201.234 166.637 cv
201.156 166.543 li
201.313 166.34 li
201.313 166.293 li
201.313 166.129 201.367 165.977 201.484 165.84 cv
201.469 165.605 li
201.531 165.543 li
201.531 165.543 201.531 165.535 201.531 165.512 cv
201.52 165.492 201.516 165.477 201.516 165.465 cv
201.516 165.426 201.531 165.383 201.563 165.34 cv
201.563 165.262 li
201.602 165.18 201.695 165.055 201.844 164.887 cv
201.988 164.711 202.094 164.555 202.156 164.418 cv
202.234 164.48 li
202.375 164.418 li
202.438 164.387 li
202.859 164.199 li
203.859 164.246 li
203.859 164.34 li
204.172 164.402 li
204.379 164.402 204.508 164.473 204.563 164.605 cv
204.563 164.574 204.566 164.543 204.578 164.512 cv
204.578 164.48 204.578 164.465 204.578 164.465 cv
204.859 164.699 li
205.094 164.762 li
205.563 164.637 li
205.734 164.965 li
205.938 165.043 li
cp
f
212.398 165.465 mo
212.289 165.902 li
211.805 165.965 li
211.555 166.137 li
211.383 166.059 li
211.195 166.168 li
211.008 166.246 li
210.867 166.324 li
210.867 166.387 li
210.602 166.512 li
210.414 166.746 li
210.32 166.746 li
210.184 166.895 210.086 166.988 210.023 167.027 cv
209.852 167.324 li
209.789 167.34 li
209.758 167.414 209.727 167.52 209.695 167.652 cv
209.508 167.715 li
209.43 167.871 li
209.32 168.012 li
209.305 168.199 li
209.195 168.246 li
209.195 168.434 li
209.164 168.48 li
209.184 168.523 209.211 168.57 209.242 168.621 cv
209.055 168.699 li
209.023 168.871 li
208.898 169.09 li
208.977 169.262 li
208.805 169.496 li
208.824 169.582 208.836 169.637 208.836 169.668 cv
208.836 169.68 208.836 169.699 208.836 169.73 cv
208.824 169.754 208.82 169.773 208.82 169.793 cv
208.852 169.902 li
209.07 170.137 li
208.898 170.434 li
208.742 170.559 li
208.383 170.73 li
207.898 170.543 li
207.898 170.246 li
207.852 170.121 li
207.883 169.934 li
207.859 169.801 207.852 169.695 207.852 169.621 cv
207.852 169.59 207.855 169.555 207.867 169.512 cv
207.867 169.473 207.867 169.441 207.867 169.418 cv
207.852 169.293 li
207.797 169.23 207.773 169.164 207.773 169.09 cv
207.773 169.02 207.797 168.941 207.852 168.855 cv
207.852 168.816 207.844 168.684 207.836 168.465 cv
207.867 168.418 li
207.836 168.262 li
207.852 168.105 li
207.836 168.012 li
207.867 167.715 li
207.789 167.574 li
207.852 167.434 li
207.789 167.262 li
207.797 167.211 207.805 167.145 207.805 167.059 cv
207.805 166.934 207.789 166.848 207.758 166.793 cv
207.805 166.715 li
207.758 166.48 li
207.633 166.324 li
207.695 166.105 li
207.648 166.027 li
207.602 165.715 li
207.602 165.621 li
207.559 165.57 207.539 165.504 207.539 165.418 cv
207.539 165.254 207.727 165.105 208.102 164.98 cv
208.43 165.043 li
208.492 165.293 li
208.617 165.465 li
208.586 165.809 li
208.605 165.988 208.637 166.18 208.68 166.387 cv
208.711 166.59 li
208.719 166.613 208.73 166.66 208.742 166.73 cv
208.742 166.785 208.719 166.84 208.68 166.902 cv
208.711 167.168 li
208.695 167.449 li
208.633 167.574 li
208.68 167.637 li
208.695 167.762 li
208.746 167.699 208.777 167.633 208.789 167.559 cv
208.852 167.371 li
208.871 167.32 208.906 167.277 208.961 167.246 cv
209.008 167.059 li
209.195 166.949 li
209.227 166.793 li
209.367 166.637 li
209.477 166.449 li
209.578 166.324 209.684 166.246 209.789 166.215 cv
209.82 166.168 li
209.945 165.996 li
210.07 165.965 li
210.102 165.934 li
210.164 165.855 li
210.305 165.777 li
210.383 165.684 li
210.461 165.699 li
210.555 165.637 li
210.617 165.559 li
210.773 165.48 li
210.992 165.34 li
211.305 165.246 li
211.43 165.227 211.492 165.215 211.492 165.215 cv
211.492 165.227 211.492 165.23 211.492 165.23 cv
211.492 165.23 211.492 165.238 211.492 165.246 cv
211.531 165.246 211.586 165.227 211.648 165.184 cv
211.699 165.152 211.762 165.137 211.836 165.137 cv
211.867 165.137 211.93 165.148 212.023 165.168 cv
212.242 165.168 212.367 165.27 212.398 165.465 cv
212.398 165.465 li
cp
f
216.563 165.637 mo
216.563 165.723 216.484 165.793 216.328 165.855 cv
216.285 165.91 216.219 165.949 216.125 165.98 cv
216.008 166.035 215.926 166.074 215.875 166.105 cv
215.594 166.012 li
215.457 166.117 215.281 166.168 215.063 166.168 cv
214.906 166.137 li
214.797 166.246 li
214.438 166.246 li
214.219 166.387 li
214.125 166.348 214.031 166.324 213.938 166.324 cv
213.914 166.348 213.859 166.367 213.766 166.387 cv
213.723 166.387 213.676 166.371 213.625 166.34 cv
213.578 166.84 li
213.594 167.199 li
213.563 167.652 li
213.578 168.152 li
213.625 168.387 li
213.625 168.574 li
213.797 168.949 li
213.773 168.98 213.766 169.012 213.766 169.043 cv
213.766 169.105 213.859 169.152 214.047 169.184 cv
214.078 169.34 li
214.172 169.387 li
214.328 169.496 li
214.422 169.574 li
214.516 169.555 214.578 169.543 214.609 169.543 cv
214.68 169.543 214.758 169.555 214.844 169.574 cv
214.875 169.566 214.945 169.508 215.063 169.402 cv
215.145 169.332 215.219 169.293 215.281 169.293 cv
215.289 169.293 215.305 169.293 215.328 169.293 cv
215.336 169.305 215.348 169.309 215.359 169.309 cv
215.441 169.145 215.582 169.035 215.781 168.98 cv
215.957 168.98 216.109 169.039 216.234 169.152 cv
216.234 169.246 li
216.234 169.539 216.129 169.727 215.922 169.809 cv
215.836 169.988 215.672 170.102 215.422 170.152 cv
215.266 170.293 li
215.109 170.293 li
214.797 170.371 li
214.734 170.391 214.633 170.402 214.5 170.402 cv
214.438 170.402 214.363 170.379 214.281 170.34 cv
214.109 170.34 li
213.656 170.105 li
213.547 170.059 li
213.266 169.699 li
213.109 169.527 li
212.828 168.871 li
212.719 168.262 li
212.75 168.105 li
212.641 167.965 li
212.703 167.793 li
212.641 167.496 li
212.734 167.402 li
212.766 167.246 li
212.719 167.09 li
212.75 166.855 li
212.703 166.637 li
212.766 166.574 li
212.766 166.371 li
212.672 166.324 li
212.422 166.387 li
212.188 166.215 li
212.156 166.215 li
211.898 166.215 211.766 166.074 211.766 165.793 cv
211.766 165.762 li
211.609 165.512 li
211.859 165.277 li
212.172 165.324 li
212.344 165.309 li
212.594 165.371 li
212.859 165.371 li
212.859 165.105 li
212.703 164.746 li
212.859 164.652 li
212.797 164.465 li
212.813 164.059 li
212.703 163.887 li
212.648 163.793 212.625 163.707 212.625 163.621 cv
212.625 163.527 212.645 163.449 212.688 163.387 cv
212.719 163.215 li
212.828 163.105 li
213.055 163.066 213.211 163.043 213.297 163.043 cv
213.566 163.043 213.719 163.168 213.75 163.418 cv
213.703 163.48 li
213.754 163.566 213.781 163.637 213.781 163.699 cv
213.781 163.711 213.781 163.738 213.781 163.777 cv
213.75 163.84 li
213.734 163.934 li
213.781 164.105 li
213.781 164.168 li
213.797 164.355 li
213.688 164.512 li
213.75 164.777 li
213.703 165.09 li
213.797 165.199 li
213.703 165.434 li
214.094 165.387 li
214.813 165.449 li
215.391 165.355 li
215.578 165.371 li
215.641 165.355 li
216.156 165.355 li
216.426 165.355 216.563 165.449 216.563 165.637 cv
216.563 165.637 li
cp
f
220.668 168.418 mo
220.668 168.617 220.629 168.742 220.559 168.793 cv
220.496 168.84 li
220.434 169.027 li
220.215 169.09 li
220.16 169.227 220.074 169.336 219.949 169.418 cv
219.824 169.449 li
219.668 169.637 li
219.512 169.668 li
219.449 169.824 219.324 169.91 219.137 169.918 cv
219.113 169.949 219.074 170.004 219.012 170.074 cv
218.887 170.16 218.75 170.211 218.605 170.23 cv
218.543 170.246 li
218.449 170.355 li
218.199 170.355 li
217.98 170.512 li
217.449 170.121 li
217.199 169.621 li
217.199 168.98 li
217.137 168.824 li
217.293 167.684 li
217.355 167.637 li
217.324 167.504 217.309 167.371 217.309 167.246 cv
217.309 167.176 217.332 167.02 217.387 166.777 cv
217.449 166.48 li
217.438 166.43 217.406 166.371 217.355 166.309 cv
217.434 166.059 li
217.449 165.762 li
217.48 165.715 li
217.449 165.645 217.426 165.559 217.418 165.465 cv
217.426 165.445 217.434 165.418 217.434 165.387 cv
217.441 165.355 217.449 165.336 217.449 165.324 cv
217.426 165.242 217.418 165.164 217.418 165.09 cv
217.418 164.883 217.531 164.789 217.762 164.809 cv
217.918 164.824 li
218.02 164.773 218.09 164.746 218.121 164.746 cv
218.285 164.746 218.402 164.84 218.465 165.027 cv
218.465 165.09 li
218.496 165.195 218.512 165.293 218.512 165.387 cv
218.512 165.461 218.504 165.512 218.496 165.543 cv
218.402 166.199 li
218.496 166.387 li
218.496 166.543 218.441 166.68 218.34 166.793 cv
218.387 166.949 li
218.215 167.449 li
218.203 167.668 218.184 167.836 218.152 167.949 cv
218.152 168.262 li
218.074 168.449 li
218.09 168.574 li
218.059 168.871 li
218.09 169.105 li
218.277 169.262 li
218.434 169.246 li
218.465 169.199 li
218.574 169.215 li
218.746 169.168 li
218.887 169.027 li
218.934 168.949 li
219.027 168.934 li
219.09 168.809 li
219.168 168.871 li
219.293 168.73 li
219.371 168.746 li
219.402 168.652 li
219.434 168.652 li
219.465 168.559 li
219.59 168.496 li
219.824 168.387 li
220.031 168.254 220.23 168.184 220.418 168.184 cv
220.465 168.184 li
220.559 168.238 220.625 168.316 220.668 168.418 cv
220.668 168.418 li
cp
219.34 161.527 mo
219.34 161.633 219.27 161.727 219.137 161.809 cv
219.137 161.84 li
218.969 162.039 218.824 162.148 218.699 162.168 cv
218.512 162.402 li
218.371 162.574 li
218.074 162.652 li
217.949 162.84 li
217.746 162.934 li
217.402 163.23 li
217.199 163.043 li
217.23 162.715 li
217.371 162.48 li
217.379 162.355 217.453 162.254 217.59 162.168 cv
217.59 162.121 li
217.668 162.074 li
217.668 161.871 li
217.887 161.824 li
217.887 161.699 li
218.043 161.684 li
218.074 161.508 218.145 161.379 218.262 161.293 cv
218.293 161.277 li
218.371 161.199 li
218.48 160.887 li
219.051 161.023 219.34 161.238 219.34 161.527 cv
219.34 161.527 li
cp
f
226.199 168.277 mo
225.949 168.512 li
225.949 168.59 li
225.918 168.746 225.84 168.871 225.715 168.965 cv
225.516 169.363 225.23 169.648 224.855 169.824 cv
224.652 169.98 li
224.48 170.012 li
224.277 170.168 li
224.137 170.184 li
223.809 170.387 li
223.605 170.355 li
223.371 170.465 li
223.184 170.418 li
223.09 170.496 li
222.855 170.449 li
222.605 170.496 li
222.512 170.418 li
222.246 170.355 li
221.871 170.074 li
221.668 169.809 li
221.531 169.652 221.465 169.52 221.465 169.402 cv
221.465 169.355 li
221.34 169.168 li
221.34 168.996 li
221.316 168.895 221.309 168.801 221.309 168.715 cv
221.309 168.621 li
221.23 168.402 li
221.309 168.246 li
221.246 168.137 li
221.402 167.887 li
221.371 167.684 li
221.465 167.34 li
221.527 167.262 li
221.574 166.949 li
221.543 166.902 li
221.699 166.73 li
221.73 166.605 li
221.84 166.309 li
222.012 165.934 li
222.246 165.73 li
222.293 165.621 li
222.371 165.465 li
222.402 165.34 li
222.605 165.09 li
222.656 165.082 222.715 165.066 222.777 165.043 cv
222.816 164.879 223.035 164.785 223.434 164.762 cv
223.777 164.824 223.996 164.914 224.09 165.027 cv
224.184 165.051 224.254 165.09 224.309 165.152 cv
224.574 165.168 li
224.762 165.402 li
224.801 165.488 224.832 165.57 224.855 165.652 cv
224.949 165.762 li
224.918 165.949 li
224.926 166.012 224.934 166.113 224.934 166.246 cv
224.996 166.293 li
224.996 166.48 li
225.043 166.887 li
224.863 167.074 224.656 167.18 224.418 167.199 cv
224.301 166.98 224.152 166.816 223.965 166.699 cv
223.949 166.262 li
223.871 166.121 li
223.871 166.012 li
223.73 165.855 li
223.668 165.809 li
223.559 165.855 li
223.387 165.855 li
223.27 165.879 223.16 165.961 223.059 166.105 cv
222.953 166.242 222.848 166.387 222.746 166.543 cv
222.73 166.668 li
222.652 166.73 li
222.652 166.965 li
222.48 167.152 li
222.277 167.715 li
222.293 167.871 li
222.184 168.105 li
222.23 168.402 li
222.152 168.434 li
222.121 168.793 li
222.137 168.871 li
222.293 169.027 li
222.355 169.293 li
222.543 169.34 li
222.543 169.449 li
222.934 169.527 li
222.996 169.496 223.074 169.48 223.168 169.48 cv
223.246 169.48 li
223.348 169.441 223.449 169.418 223.543 169.418 cv
223.605 169.387 223.684 169.363 223.777 169.34 cv
223.879 169.195 224.027 169.121 224.215 169.121 cv
224.293 169.121 li
224.332 169.121 224.363 169.102 224.387 169.059 cv
224.48 168.914 224.629 168.82 224.84 168.777 cv
225.078 168.559 225.219 168.387 225.262 168.262 cv
225.375 168.191 225.453 168.082 225.496 167.934 cv
225.574 167.871 li
225.605 167.574 li
226 167.637 226.199 167.84 226.199 168.184 cv
226.199 168.277 li
cp
f
230.598 168.887 mo
230.598 168.98 230.559 169.059 230.488 169.121 cv
230.426 169.227 230.316 169.336 230.16 169.449 cv
230.02 169.543 li
229.91 169.699 li
229.785 169.746 li
229.613 169.871 li
229.473 169.887 li
229.426 169.934 li
229.246 169.988 229.113 170.074 229.02 170.199 cv
228.957 170.242 228.898 170.262 228.848 170.262 cv
228.816 170.262 228.789 170.258 228.77 170.246 cv
228.613 170.328 228.418 170.371 228.191 170.371 cv
227.992 170.371 227.863 170.355 227.801 170.324 cv
227.566 170.199 li
227.488 170.059 li
227.488 170.027 li
227.488 169.914 227.441 169.82 227.348 169.746 cv
227.301 169.496 li
227.191 169.371 li
227.129 168.887 li
227.113 168.605 li
227.129 168.402 li
227.145 168.324 li
227.121 168.273 227.113 168.215 227.113 168.152 cv
227.152 167.789 227.176 167.559 227.176 167.465 cv
227.066 167.23 li
227.176 167.027 li
227.223 166.715 li
227.191 166.48 li
227.27 166.293 li
227.191 166.027 li
227.301 165.855 li
227.316 165.73 li
227.316 165.277 li
227.363 165.184 li
227.348 164.637 li
227.379 164.074 li
227.332 163.98 li
227.316 163.59 li
227.363 163.23 li
227.316 163.105 li
227.395 162.324 li
227.758 162.242 227.918 162.199 227.879 162.199 cv
228.012 162.199 228.129 162.273 228.223 162.418 cv
228.238 162.527 li
228.441 162.715 li
228.332 162.996 li
228.363 163.043 li
228.34 163.211 228.32 163.32 228.301 163.371 cv
228.316 163.637 li
228.379 163.887 li
228.301 164.152 li
228.301 164.309 228.273 164.445 228.223 164.559 cv
228.223 164.602 228.215 164.676 228.207 164.777 cv
228.191 164.855 li
228.301 164.996 li
228.254 165.137 li
228.273 165.211 228.285 165.258 228.285 165.277 cv
228.285 165.332 228.262 165.398 228.223 165.48 cv
228.254 165.605 li
228.176 166.012 li
228.176 166.293 li
228.082 166.559 li
228.145 166.809 li
228.082 167.387 li
228.129 167.449 li
228.066 167.746 li
228.035 168.105 li
228.012 168.16 228.004 168.191 228.004 168.199 cv
228.004 168.348 228.004 168.473 228.004 168.574 cv
228.066 168.746 li
228.035 168.949 li
228.113 169.105 li
228.098 169.184 li
228.148 169.227 228.195 169.293 228.238 169.387 cv
228.363 169.387 li
228.535 169.434 li
228.613 169.34 li
228.723 169.324 li
228.773 169.305 228.816 169.293 228.848 169.293 cv
228.879 169.293 li
228.961 169.273 229.027 169.23 229.082 169.168 cv
229.16 169.121 li
229.223 169.027 229.324 168.965 229.473 168.934 cv
229.512 168.895 229.59 168.82 229.707 168.715 cv
229.707 168.602 229.777 168.512 229.926 168.449 cv
230.059 168.449 230.148 168.43 230.191 168.387 cv
230.367 168.41 230.477 168.457 230.52 168.527 cv
230.57 168.59 230.598 168.711 230.598 168.887 cv
230.598 168.887 li
cp
f
234.035 165.496 mo
234.035 165.477 234.023 165.426 234.004 165.34 cv
233.941 165.324 li
233.91 165.34 li
233.898 165.34 233.883 165.34 233.863 165.34 cv
233.84 165.352 233.82 165.355 233.801 165.355 cv
233.801 165.355 233.789 165.352 233.77 165.34 cv
233.746 165.34 233.73 165.34 233.723 165.34 cv
233.598 165.434 li
233.488 165.449 li
233.41 165.465 li
233.191 165.762 li
233.051 165.855 li
232.848 166.23 li
232.723 166.309 li
232.699 166.457 232.645 166.582 232.551 166.684 cv
232.488 166.777 li
232.582 166.715 232.691 166.684 232.816 166.684 cv
232.91 166.637 li
232.941 166.527 li
233.129 166.543 li
233.238 166.387 li
233.316 166.387 li
233.457 166.434 li
233.52 166.246 li
233.613 166.246 li
233.613 166.09 li
233.785 166.059 li
233.816 166.012 li
233.848 165.902 li
234.02 165.652 li
234.027 165.613 234.035 165.559 234.035 165.496 cv
234.035 165.496 li
cp
235.332 169.246 mo
235.332 169.352 235.254 169.48 235.098 169.637 cv
235.055 169.773 234.988 169.883 234.895 169.965 cv
234.816 169.98 li
234.676 170.23 li
234.441 170.277 li
234.191 170.418 li
234.066 170.652 li
233.926 170.637 li
233.832 170.676 233.754 170.703 233.691 170.715 cv
233.613 170.824 li
233.582 170.813 233.539 170.809 233.488 170.809 cv
233.383 170.809 233.277 170.887 233.176 171.043 cv
232.988 170.887 li
232.957 170.895 232.902 170.902 232.832 170.902 cv
232.715 170.902 232.621 170.887 232.551 170.855 cv
232.316 170.855 li
232.223 170.793 li
231.887 170.738 231.68 170.613 231.598 170.418 cv
231.598 170.371 li
231.441 170.293 li
231.363 170.074 li
231.207 169.965 li
231.207 169.777 li
231.051 169.199 li
231.082 168.73 li
231.129 168.527 li
231.129 168.262 li
231.191 168.043 li
231.176 167.949 li
231.27 167.793 li
231.238 167.824 li
231.238 167.754 231.262 167.668 231.316 167.574 cv
231.316 167.512 li
231.27 167.199 li
231.27 167.055 231.336 166.926 231.473 166.809 cv
231.473 166.801 231.473 166.773 231.473 166.73 cv
231.473 166.699 231.457 166.633 231.426 166.527 cv
231.402 166.414 231.395 166.336 231.395 166.293 cv
231.395 166.191 231.418 166.082 231.473 165.965 cv
231.535 166.07 231.633 166.121 231.77 166.121 cv
231.801 166.121 li
231.82 166.09 231.863 166.055 231.926 166.012 cv
231.988 165.793 232.082 165.613 232.207 165.465 cv
232.254 165.402 li
232.254 165.371 232.277 165.273 232.332 165.105 cv
232.441 165.105 li
232.473 165.043 li
232.566 165.012 li
232.605 164.949 232.633 164.914 232.645 164.902 cv
232.664 164.883 232.762 164.824 232.941 164.73 cv
232.973 164.668 233.023 164.613 233.098 164.559 cv
233.129 164.551 233.168 164.535 233.223 164.512 cv
233.27 164.434 li
233.508 164.352 233.66 164.309 233.723 164.309 cv
233.785 164.309 233.848 164.332 233.91 164.371 cv
233.973 164.355 li
234.066 164.402 li
234.168 164.488 234.273 164.555 234.379 164.605 cv
234.598 164.777 li
234.598 164.824 li
234.793 164.98 234.895 165.199 234.895 165.48 cv
234.863 165.621 li
234.895 166.043 li
234.785 166.121 li
234.645 166.465 li
234.41 166.73 li
234.395 166.949 li
234.113 167.148 233.855 167.305 233.629 167.418 cv
233.543 167.543 233.418 167.605 233.254 167.605 cv
233.223 167.605 li
232.973 167.762 li
232.77 167.762 li
232.457 167.887 li
232.223 167.777 li
232.191 167.777 li
232.18 167.84 232.164 167.945 232.145 168.09 cv
232.035 168.168 li
232.02 168.324 li
231.941 168.543 li
231.973 168.754 231.988 168.887 231.988 168.949 cv
231.941 168.98 li
231.941 169.098 231.934 169.18 231.926 169.23 cv
231.926 169.242 231.918 169.254 231.91 169.262 cv
231.91 169.285 231.91 169.301 231.91 169.309 cv
231.91 169.383 231.945 169.441 232.02 169.48 cv
232.039 169.586 232.082 169.648 232.145 169.668 cv
232.238 169.746 li
232.52 169.824 li
232.52 169.871 li
232.629 169.887 li
233.066 169.918 li
233.332 169.887 li
233.457 169.793 li
233.535 169.762 li
233.66 169.574 li
233.723 169.559 li
234.051 169.449 li
234.082 169.387 234.137 169.336 234.223 169.293 cv
234.254 169.23 li
234.43 169.199 234.535 169.105 234.566 168.949 cv
234.68 168.836 234.836 168.777 235.035 168.777 cv
235.082 168.777 li
235.246 168.965 235.332 169.121 235.332 169.246 cv
235.332 169.246 li
cp
f
247.691 165.059 mo
247.629 165.309 li
247.66 165.434 li
247.504 165.934 li
247.473 166.121 li
247.285 166.324 li
247.223 166.559 li
247.082 166.777 li
246.879 167.23 li
246.629 167.637 li
246.254 168.199 li
246.191 168.371 li
245.988 168.715 li
245.77 169.184 li
245.379 169.887 li
245.301 170.199 li
245.098 170.496 li
244.707 170.355 li
244.488 170.23 li
244.27 169.621 li
244.02 169.184 li
244.02 169.043 li
243.863 168.684 li
243.785 168.605 li
243.254 167.465 li
243.082 167.184 li
242.941 167.402 li
242.723 167.574 li
242.426 167.996 li
242.223 168.215 li
242.098 168.559 li
241.816 168.902 li
241.785 169.027 li
241.598 169.418 li
241.598 169.621 li
241.473 169.809 li
241.457 169.98 li
241.316 170.027 li
241.035 170.324 li
241.082 170.293 li
240.996 170.344 240.883 170.379 240.738 170.402 cv
240.645 170.293 li
240.457 170.215 li
240.457 170.074 li
240.379 169.965 li
240.301 169.621 li
240.191 169.387 li
240.191 169.215 li
239.988 168.605 li
239.926 168.262 li
239.801 168.105 li
239.832 167.949 li
239.691 167.637 li
239.691 167.512 li
239.598 167.23 li
239.41 166.98 li
239.441 166.699 li
239.426 166.605 li
239.285 166.262 li
239.254 166.059 li
239.176 165.934 li
239.121 165.84 239.086 165.754 239.066 165.668 cv
238.848 165.105 li
239.02 164.871 li
239.07 164.777 239.18 164.723 239.348 164.699 cv
239.613 164.652 li
239.707 164.777 li
239.879 164.855 li
240.004 165.09 li
240.098 165.184 li
240.066 165.402 li
240.113 165.527 li
240.082 165.637 li
240.207 165.855 li
240.176 166.043 li
240.348 166.637 li
240.316 166.777 li
240.395 167.121 li
240.582 167.543 li
240.66 168.027 li
240.785 168.184 li
240.785 168.496 li
240.879 168.777 li
240.895 168.871 li
241.082 168.762 li
241.379 168.277 li
241.473 168.059 li
241.566 167.871 li
241.566 167.789 241.586 167.727 241.629 167.684 cv
241.707 167.684 li
241.738 167.449 li
241.879 167.418 li
241.898 167.355 241.941 167.305 242.004 167.262 cv
242.004 167.246 li
242.004 167.195 242.027 167.145 242.082 167.09 cv
242.051 166.996 li
242.113 166.965 li
242.098 166.887 li
242.18 166.754 242.27 166.648 242.363 166.574 cv
242.363 166.324 li
242.551 166.215 li
242.598 166.168 li
242.629 166.152 li
242.574 166.059 242.551 165.961 242.551 165.855 cv
242.551 165.699 242.621 165.551 242.77 165.402 cv
242.84 165.371 242.934 165.355 243.051 165.355 cv
243.121 165.355 243.176 165.363 243.207 165.371 cv
243.457 165.59 li
243.582 165.777 li
243.66 166.09 li
243.785 166.309 li
243.754 166.449 li
243.848 166.73 li
243.848 166.855 li
244.066 167.246 li
244.066 167.277 li
244.113 167.324 li
244.379 167.949 li
244.395 168.105 li
244.52 168.262 li
244.816 168.934 li
245.113 168.34 li
245.27 168.215 li
245.363 167.949 li
245.488 167.871 li
245.488 167.684 li
245.539 167.645 245.613 167.602 245.707 167.559 cv
245.758 167.527 245.785 167.504 245.785 167.48 cv
245.77 167.215 li
245.926 167.059 li
245.988 167.027 li
246.191 166.699 li
246.191 166.652 li
246.199 166.559 246.254 166.449 246.348 166.324 cv
246.332 166.184 li
246.566 165.902 li
246.676 165.621 li
246.582 165.363 246.535 165.137 246.535 164.949 cv
246.535 164.68 246.676 164.527 246.957 164.496 cv
247.301 164.605 li
247.348 164.527 li
247.441 164.637 li
247.582 164.73 li
247.535 164.871 li
247.691 165.059 li
cp
f
251.066 165.496 mo
251.066 165.477 251.055 165.426 251.035 165.34 cv
250.973 165.324 li
250.941 165.34 li
250.93 165.34 250.914 165.34 250.895 165.34 cv
250.871 165.352 250.852 165.355 250.832 165.355 cv
250.832 165.355 250.82 165.352 250.801 165.34 cv
250.777 165.34 250.762 165.34 250.754 165.34 cv
250.629 165.434 li
250.52 165.449 li
250.441 165.465 li
250.223 165.762 li
250.082 165.855 li
249.879 166.23 li
249.754 166.309 li
249.73 166.457 249.676 166.582 249.582 166.684 cv
249.52 166.777 li
249.613 166.715 249.723 166.684 249.848 166.684 cv
249.941 166.637 li
249.973 166.527 li
250.16 166.543 li
250.27 166.387 li
250.348 166.387 li
250.488 166.434 li
250.551 166.246 li
250.645 166.246 li
250.645 166.09 li
250.816 166.059 li
250.848 166.012 li
250.879 165.902 li
251.051 165.652 li
251.059 165.613 251.066 165.559 251.066 165.496 cv
251.066 165.496 li
cp
252.363 169.246 mo
252.363 169.352 252.285 169.48 252.129 169.637 cv
252.086 169.773 252.02 169.883 251.926 169.965 cv
251.848 169.98 li
251.707 170.23 li
251.473 170.277 li
251.223 170.418 li
251.098 170.652 li
250.957 170.637 li
250.863 170.676 250.785 170.703 250.723 170.715 cv
250.645 170.824 li
250.613 170.813 250.57 170.809 250.52 170.809 cv
250.414 170.809 250.309 170.887 250.207 171.043 cv
250.02 170.887 li
249.988 170.895 249.934 170.902 249.863 170.902 cv
249.746 170.902 249.652 170.887 249.582 170.855 cv
249.348 170.855 li
249.254 170.793 li
248.918 170.738 248.711 170.613 248.629 170.418 cv
248.629 170.371 li
248.473 170.293 li
248.395 170.074 li
248.238 169.965 li
248.238 169.777 li
248.082 169.199 li
248.113 168.73 li
248.16 168.527 li
248.16 168.262 li
248.223 168.043 li
248.207 167.949 li
248.301 167.793 li
248.27 167.824 li
248.27 167.754 248.293 167.668 248.348 167.574 cv
248.348 167.512 li
248.301 167.199 li
248.301 167.055 248.367 166.926 248.504 166.809 cv
248.504 166.801 248.504 166.773 248.504 166.73 cv
248.504 166.699 248.488 166.633 248.457 166.527 cv
248.434 166.414 248.426 166.336 248.426 166.293 cv
248.426 166.191 248.449 166.082 248.504 165.965 cv
248.566 166.07 248.664 166.121 248.801 166.121 cv
248.832 166.121 li
248.852 166.09 248.895 166.055 248.957 166.012 cv
249.02 165.793 249.113 165.613 249.238 165.465 cv
249.285 165.402 li
249.285 165.371 249.309 165.273 249.363 165.105 cv
249.473 165.105 li
249.504 165.043 li
249.598 165.012 li
249.637 164.949 249.664 164.914 249.676 164.902 cv
249.695 164.883 249.793 164.824 249.973 164.73 cv
250.004 164.668 250.055 164.613 250.129 164.559 cv
250.16 164.551 250.199 164.535 250.254 164.512 cv
250.301 164.434 li
250.539 164.352 250.691 164.309 250.754 164.309 cv
250.816 164.309 250.879 164.332 250.941 164.371 cv
251.004 164.355 li
251.098 164.402 li
251.199 164.488 251.305 164.555 251.41 164.605 cv
251.629 164.777 li
251.629 164.824 li
251.824 164.98 251.926 165.199 251.926 165.48 cv
251.895 165.621 li
251.926 166.043 li
251.816 166.121 li
251.676 166.465 li
251.441 166.73 li
251.426 166.949 li
251.145 167.148 250.887 167.305 250.66 167.418 cv
250.574 167.543 250.449 167.605 250.285 167.605 cv
250.254 167.605 li
250.004 167.762 li
249.801 167.762 li
249.488 167.887 li
249.254 167.777 li
249.223 167.777 li
249.211 167.84 249.195 167.945 249.176 168.09 cv
249.066 168.168 li
249.051 168.324 li
248.973 168.543 li
249.004 168.754 249.02 168.887 249.02 168.949 cv
248.973 168.98 li
248.973 169.098 248.965 169.18 248.957 169.23 cv
248.957 169.242 248.949 169.254 248.941 169.262 cv
248.941 169.285 248.941 169.301 248.941 169.309 cv
248.941 169.383 248.977 169.441 249.051 169.48 cv
249.07 169.586 249.113 169.648 249.176 169.668 cv
249.27 169.746 li
249.551 169.824 li
249.551 169.871 li
249.66 169.887 li
250.098 169.918 li
250.363 169.887 li
250.488 169.793 li
250.566 169.762 li
250.691 169.574 li
250.754 169.559 li
251.082 169.449 li
251.113 169.387 251.168 169.336 251.254 169.293 cv
251.285 169.23 li
251.461 169.199 251.566 169.105 251.598 168.949 cv
251.711 168.836 251.867 168.777 252.066 168.777 cv
252.113 168.777 li
252.277 168.965 252.363 169.121 252.363 169.246 cv
252.363 169.246 li
cp
f
256.719 168.418 mo
256.719 168.617 256.68 168.742 256.609 168.793 cv
256.547 168.84 li
256.484 169.027 li
256.266 169.09 li
256.211 169.227 256.125 169.336 256 169.418 cv
255.875 169.449 li
255.719 169.637 li
255.563 169.668 li
255.5 169.824 255.375 169.91 255.188 169.918 cv
255.164 169.949 255.125 170.004 255.063 170.074 cv
254.938 170.16 254.801 170.211 254.656 170.23 cv
254.594 170.246 li
254.5 170.355 li
254.25 170.355 li
254.031 170.512 li
253.5 170.121 li
253.25 169.621 li
253.25 168.98 li
253.188 168.824 li
253.344 167.684 li
253.406 167.637 li
253.375 167.504 253.359 167.371 253.359 167.246 cv
253.359 167.176 253.383 167.02 253.438 166.777 cv
253.5 166.48 li
253.488 166.43 253.457 166.371 253.406 166.309 cv
253.484 166.059 li
253.5 165.762 li
253.531 165.715 li
253.5 165.645 253.477 165.559 253.469 165.465 cv
253.477 165.445 253.484 165.418 253.484 165.387 cv
253.492 165.355 253.5 165.336 253.5 165.324 cv
253.477 165.242 253.469 165.164 253.469 165.09 cv
253.469 164.883 253.582 164.789 253.813 164.809 cv
253.969 164.824 li
254.07 164.773 254.141 164.746 254.172 164.746 cv
254.336 164.746 254.453 164.84 254.516 165.027 cv
254.516 165.09 li
254.547 165.195 254.563 165.293 254.563 165.387 cv
254.563 165.461 254.555 165.512 254.547 165.543 cv
254.453 166.199 li
254.547 166.387 li
254.547 166.543 254.492 166.68 254.391 166.793 cv
254.438 166.949 li
254.266 167.449 li
254.254 167.668 254.234 167.836 254.203 167.949 cv
254.203 168.262 li
254.125 168.449 li
254.141 168.574 li
254.109 168.871 li
254.141 169.105 li
254.328 169.262 li
254.484 169.246 li
254.516 169.199 li
254.625 169.215 li
254.797 169.168 li
254.938 169.027 li
254.984 168.949 li
255.078 168.934 li
255.141 168.809 li
255.219 168.871 li
255.344 168.73 li
255.422 168.746 li
255.453 168.652 li
255.484 168.652 li
255.516 168.559 li
255.641 168.496 li
255.875 168.387 li
256.082 168.254 256.281 168.184 256.469 168.184 cv
256.516 168.184 li
256.609 168.238 256.676 168.316 256.719 168.418 cv
256.719 168.418 li
cp
255.391 161.527 mo
255.391 161.633 255.32 161.727 255.188 161.809 cv
255.188 161.84 li
255.02 162.039 254.875 162.148 254.75 162.168 cv
254.563 162.402 li
254.422 162.574 li
254.125 162.652 li
254 162.84 li
253.797 162.934 li
253.453 163.23 li
253.25 163.043 li
253.281 162.715 li
253.422 162.48 li
253.43 162.355 253.504 162.254 253.641 162.168 cv
253.641 162.121 li
253.719 162.074 li
253.719 161.871 li
253.938 161.824 li
253.938 161.699 li
254.094 161.684 li
254.125 161.508 254.195 161.379 254.313 161.293 cv
254.344 161.277 li
254.422 161.199 li
254.531 160.887 li
255.102 161.023 255.391 161.238 255.391 161.527 cv
255.391 161.527 li
cp
f
263.699 168.699 mo
263.59 169.184 li
263.621 169.34 li
263.59 169.371 li
263.621 169.457 263.637 169.535 263.637 169.605 cv
263.637 169.66 263.625 169.711 263.605 169.762 cv
263.605 169.793 li
263.605 169.898 263.563 170.316 263.48 171.059 cv
263.465 171.309 li
263.465 171.355 li
263.434 171.418 li
263.418 171.465 li
263.434 171.543 li
263.387 171.59 li
263.355 171.668 li
263.309 171.668 li
263.324 171.73 li
263.293 171.809 li
263.293 171.871 263.27 171.926 263.23 171.98 cv
263.168 172.199 li
263.137 172.293 263.09 172.375 263.027 172.449 cv
262.965 172.563 262.855 172.715 262.699 172.902 cv
262.48 173.074 li
262.23 173.293 li
262.043 173.371 li
261.887 173.496 li
261.777 173.527 li
261.609 173.621 261.418 173.672 261.199 173.684 cv
261.121 173.668 li
260.996 173.73 li
260.996 173.746 li
260.848 173.785 260.723 173.809 260.621 173.809 cv
260.121 173.809 li
259.809 173.746 li
259.527 173.793 li
259.402 173.668 li
259.012 173.637 li
258.746 173.402 li
258.559 173.293 li
258.215 173.168 258.016 172.938 257.965 172.605 cv
257.98 172.559 li
257.949 172.355 li
258.051 172.188 258.145 172.098 258.23 172.09 cv
258.301 172.047 258.375 172.027 258.449 172.027 cv
258.449 172.027 258.527 172.035 258.684 172.059 cv
258.84 172.09 259.004 172.109 259.184 172.121 cv
259.152 172.309 li
259.309 172.418 li
259.309 172.574 li
259.215 172.699 li
259.809 172.887 li
260.105 172.824 li
260.105 172.902 li
260.199 172.887 li
260.215 172.887 li
260.223 172.887 260.281 172.891 260.387 172.902 cv
260.402 172.965 li
260.527 172.902 li
260.629 172.848 260.84 172.824 261.152 172.824 cv
261.203 172.781 261.25 172.746 261.293 172.715 cv
261.301 172.715 261.324 172.719 261.355 172.73 cv
261.387 172.73 261.41 172.73 261.434 172.73 cv
261.484 172.73 261.535 172.676 261.59 172.574 cv
261.598 172.594 261.613 172.605 261.637 172.605 cv
261.656 172.605 261.676 172.594 261.699 172.574 cv
261.73 172.563 261.75 172.559 261.762 172.559 cv
261.777 172.559 li
262.199 172.199 li
262.387 171.902 li
262.402 171.73 li
262.543 171.543 li
262.559 171.371 li
262.637 171.215 li
262.699 170.871 li
262.809 170.543 li
262.797 170.488 262.793 170.41 262.793 170.309 cv
262.793 170.121 262.816 169.93 262.871 169.73 cv
262.824 169.527 li
262.824 168.887 li
262.715 168.668 li
262.715 168.309 li
262.621 168.027 li
262.621 167.559 li
262.527 167.574 li
262.449 167.777 li
262.246 167.949 li
262.012 168.324 li
261.684 168.559 li
261.309 168.934 li
261.098 169.152 260.859 169.34 260.59 169.496 cv
260.449 169.652 li
260.262 169.777 li
260.074 169.871 li
259.918 170.043 li
259.699 170.137 li
259.637 170.211 259.535 170.258 259.402 170.277 cv
259.215 170.41 258.996 170.48 258.746 170.48 cv
258.605 170.48 li
258.563 170.488 258.504 170.496 258.434 170.496 cv
258.359 170.496 258.309 170.488 258.277 170.48 cv
258.043 170.465 li
257.699 170.137 li
257.449 169.809 li
257.355 169.543 li
257.262 169.027 li
257.309 168.652 li
257.434 168.199 li
257.418 168.059 li
257.527 167.652 li
257.652 167.418 li
257.684 167.305 257.699 167.176 257.699 167.027 cv
257.98 166.48 li
258.012 166.418 258.078 166.348 258.184 166.262 cv
258.309 166.043 li
258.465 165.871 li
258.496 165.758 258.563 165.66 258.668 165.574 cv
258.738 165.543 258.793 165.48 258.824 165.387 cv
258.855 165.293 259.016 165.207 259.309 165.121 cv
259.246 165.137 li
259.309 165.105 li
259.34 165.066 259.402 164.98 259.496 164.855 cv
259.652 164.871 li
259.762 164.793 li
259.906 164.68 260.059 164.621 260.215 164.621 cv
260.293 164.621 li
260.637 164.48 li
260.84 164.543 li
261.074 164.543 li
261.215 164.621 li
261.297 164.633 261.363 164.676 261.418 164.746 cv
261.605 164.934 li
261.652 164.949 li
261.684 165.012 li
261.793 165.184 li
261.809 165.246 li
261.762 165.465 li
261.793 165.605 li
261.621 165.855 li
261.246 165.918 li
261.059 165.605 li
260.871 165.543 li
260.777 165.449 li
260.652 165.449 li
260.609 165.461 260.516 165.504 260.371 165.574 cv
260.371 165.684 li
260.043 165.684 li
259.957 165.809 259.863 165.879 259.762 165.887 cv
259.707 165.918 259.656 165.949 259.605 165.98 cv
259.496 166.23 li
259.402 166.246 li
259.387 166.355 li
259.215 166.355 li
259.043 166.637 li
258.902 166.715 li
258.84 166.902 li
258.652 167.168 li
258.621 167.434 li
258.465 167.59 li
258.324 168.152 li
258.215 168.262 li
258.23 168.402 li
258.074 168.887 li
258.121 169.043 li
258.105 169.199 li
258.168 169.293 258.199 169.387 258.199 169.48 cv
258.293 169.496 li
258.324 169.574 li
258.469 169.574 258.563 169.598 258.605 169.637 cv
258.688 169.574 258.902 169.508 259.246 169.434 cv
259.297 169.32 259.371 169.238 259.465 169.184 cv
259.559 169.121 259.754 169.012 260.059 168.855 cv
260.09 168.871 li
260.09 168.801 260.113 168.73 260.168 168.668 cv
260.301 168.617 260.379 168.586 260.402 168.574 cv
260.473 168.523 260.516 168.465 260.527 168.402 cv
260.73 168.34 li
260.855 168.23 li
261.184 167.793 li
261.277 167.84 li
261.285 167.809 261.379 167.691 261.559 167.48 cv
261.871 167.121 li
261.902 166.949 li
262.004 166.855 262.125 166.582 262.262 166.121 cv
262.199 165.855 li
262.09 165.668 li
262.168 165.465 li
262.074 165.324 li
262.043 165.152 li
261.996 165.012 li
262.137 164.777 li
262.27 164.715 262.371 164.684 262.434 164.684 cv
262.504 164.684 262.609 164.723 262.746 164.793 cv
262.84 164.965 li
263.012 165.09 li
263.027 165.387 li
263.059 165.461 263.09 165.574 263.121 165.73 cv
263.16 165.816 263.184 165.91 263.184 166.012 cv
263.184 166.09 li
263.215 166.168 li
263.355 166.387 li
263.324 166.621 li
263.387 166.715 li
263.418 166.777 263.434 166.848 263.434 166.918 cv
263.434 166.98 263.426 167.027 263.418 167.059 cv
263.543 167.09 li
263.449 167.418 li
263.496 167.668 li
263.535 167.754 263.559 167.832 263.559 167.902 cv
263.559 167.977 263.535 168.066 263.496 168.168 cv
263.574 168.23 li
263.699 168.699 li
cp
f
270.734 170.184 mo
270.734 170.527 270.551 170.699 270.188 170.699 cv
270 170.699 269.863 170.625 269.781 170.48 cv
269.688 170.355 269.613 170.129 269.563 169.793 cv
269.563 169.605 li
269.582 169.566 269.594 169.523 269.594 169.48 cv
269.594 169.461 269.586 169.441 269.578 169.418 cv
269.406 169.137 li
269.531 168.887 li
269.484 168.621 li
269.531 168.465 li
269.531 168.293 li
269.563 168.137 li
269.5 167.902 li
269.563 167.793 li
269.563 166.793 li
269.484 166.371 li
269.531 166.215 li
269.438 165.887 li
269.344 165.98 li
269.047 166.09 li
268.656 166.59 li
268.5 166.574 li
268.266 166.949 li
268.234 167.105 li
268.094 167.168 li
267.938 167.402 li
267.875 167.543 li
267.734 167.996 li
267.5 168.277 li
267.453 168.465 li
267.328 168.574 li
267.266 168.871 li
267.016 169.105 li
266.969 169.59 li
266.859 169.59 li
266.813 169.668 li
266.578 170.074 li
266.359 170.309 li
266.172 170.574 li
265.953 170.496 li
265.781 170.496 li
265.625 170.293 li
265.484 169.824 li
265.469 169.137 li
265.422 168.918 li
265.469 168.652 li
265.438 168.043 li
265.547 168.027 li
265.609 167.121 li
265.656 166.949 li
265.625 166.684 li
265.688 166.637 li
265.734 166.23 li
265.781 166.09 li
265.734 165.902 li
265.781 165.84 li
265.75 165.793 li
265.781 165.434 li
265.688 165.34 li
265.781 165.168 li
265.766 164.777 li
265.625 164.402 li
265.719 164.293 li
265.625 163.934 li
265.625 163.73 li
265.594 163.637 li
265.531 163.23 li
265.469 163.027 li
265.266 162.652 li
265.406 162.465 li
265.547 162.246 li
265.656 162.246 li
265.844 162.246 265.988 162.316 266.094 162.449 cv
266.266 162.605 li
266.344 162.84 li
266.547 162.996 li
266.5 163.184 li
266.594 163.465 li
266.578 163.48 li
266.609 163.512 li
266.594 163.934 li
266.609 164.512 li
266.703 164.871 li
266.625 165.027 li
266.656 165.246 li
266.594 165.434 li
266.625 165.746 li
266.563 166.012 li
266.594 166.059 li
266.563 166.855 li
266.609 167.027 li
266.531 167.121 li
266.484 167.559 li
266.438 167.746 li
266.484 168.105 li
266.438 168.199 li
266.422 168.465 li
266.516 168.434 266.563 168.383 266.563 168.309 cv
266.672 168.199 li
266.766 168.027 li
266.781 167.793 li
266.938 167.574 li
267.016 167.324 li
267.203 167.105 li
267.25 166.871 li
267.391 166.855 li
267.391 166.73 li
267.406 166.574 li
267.563 166.48 li
267.563 166.387 li
267.688 166.355 li
267.719 166.152 li
267.703 166.043 li
267.938 165.934 li
268 165.887 li
267.969 165.762 li
268.094 165.715 li
268.172 165.496 li
268.328 165.496 li
268.484 165.402 li
268.484 165.352 268.484 165.309 268.484 165.277 cv
268.641 165.215 li
268.797 165.082 268.941 165.004 269.078 164.98 cv
269.078 164.949 li
269.305 164.836 269.461 164.777 269.547 164.777 cv
269.672 164.777 269.785 164.84 269.891 164.965 cv
269.984 164.996 270.047 165.066 270.078 165.168 cv
270.188 165.246 li
270.234 165.418 li
270.422 165.715 li
270.422 167.215 li
270.469 167.324 li
270.469 168.293 li
270.422 168.465 li
270.422 168.715 li
270.469 169.012 li
270.422 169.262 li
270.453 169.387 270.473 169.492 270.484 169.574 cv
270.625 169.73 li
270.625 169.824 li
270.672 169.871 li
270.711 170.02 270.734 170.121 270.734 170.184 cv
270.734 170.184 li
cp
f
276.18 165.637 mo
276.18 165.723 276.102 165.793 275.945 165.855 cv
275.902 165.91 275.836 165.949 275.742 165.98 cv
275.625 166.035 275.543 166.074 275.492 166.105 cv
275.211 166.012 li
275.074 166.117 274.898 166.168 274.68 166.168 cv
274.523 166.137 li
274.414 166.246 li
274.055 166.246 li
273.836 166.387 li
273.742 166.348 273.648 166.324 273.555 166.324 cv
273.531 166.348 273.477 166.367 273.383 166.387 cv
273.34 166.387 273.293 166.371 273.242 166.34 cv
273.195 166.84 li
273.211 167.199 li
273.18 167.652 li
273.195 168.152 li
273.242 168.387 li
273.242 168.574 li
273.414 168.949 li
273.391 168.98 273.383 169.012 273.383 169.043 cv
273.383 169.105 273.477 169.152 273.664 169.184 cv
273.695 169.34 li
273.789 169.387 li
273.945 169.496 li
274.039 169.574 li
274.133 169.555 274.195 169.543 274.227 169.543 cv
274.297 169.543 274.375 169.555 274.461 169.574 cv
274.492 169.566 274.563 169.508 274.68 169.402 cv
274.762 169.332 274.836 169.293 274.898 169.293 cv
274.906 169.293 274.922 169.293 274.945 169.293 cv
274.953 169.305 274.965 169.309 274.977 169.309 cv
275.059 169.145 275.199 169.035 275.398 168.98 cv
275.574 168.98 275.727 169.039 275.852 169.152 cv
275.852 169.246 li
275.852 169.539 275.746 169.727 275.539 169.809 cv
275.453 169.988 275.289 170.102 275.039 170.152 cv
274.883 170.293 li
274.727 170.293 li
274.414 170.371 li
274.352 170.391 274.25 170.402 274.117 170.402 cv
274.055 170.402 273.98 170.379 273.898 170.34 cv
273.727 170.34 li
273.273 170.105 li
273.164 170.059 li
272.883 169.699 li
272.727 169.527 li
272.445 168.871 li
272.336 168.262 li
272.367 168.105 li
272.258 167.965 li
272.32 167.793 li
272.258 167.496 li
272.352 167.402 li
272.383 167.246 li
272.336 167.09 li
272.367 166.855 li
272.32 166.637 li
272.383 166.574 li
272.383 166.371 li
272.289 166.324 li
272.039 166.387 li
271.805 166.215 li
271.773 166.215 li
271.516 166.215 271.383 166.074 271.383 165.793 cv
271.383 165.762 li
271.227 165.512 li
271.477 165.277 li
271.789 165.324 li
271.961 165.309 li
272.211 165.371 li
272.477 165.371 li
272.477 165.105 li
272.32 164.746 li
272.477 164.652 li
272.414 164.465 li
272.43 164.059 li
272.32 163.887 li
272.266 163.793 272.242 163.707 272.242 163.621 cv
272.242 163.527 272.262 163.449 272.305 163.387 cv
272.336 163.215 li
272.445 163.105 li
272.672 163.066 272.828 163.043 272.914 163.043 cv
273.184 163.043 273.336 163.168 273.367 163.418 cv
273.32 163.48 li
273.371 163.566 273.398 163.637 273.398 163.699 cv
273.398 163.711 273.398 163.738 273.398 163.777 cv
273.367 163.84 li
273.352 163.934 li
273.398 164.105 li
273.398 164.168 li
273.414 164.355 li
273.305 164.512 li
273.367 164.777 li
273.32 165.09 li
273.414 165.199 li
273.32 165.434 li
273.711 165.387 li
274.43 165.449 li
275.008 165.355 li
275.195 165.371 li
275.258 165.355 li
275.773 165.355 li
276.043 165.355 276.18 165.449 276.18 165.637 cv
276.18 165.637 li
cp
f
281.598 169.246 mo
281.441 169.418 li
281.301 169.762 li
281.191 169.84 li
281.098 170.027 li
280.848 170.043 li
280.676 170.215 li
280.41 170.215 li
280.254 170.34 li
280.113 170.309 li
279.941 170.34 li
279.941 170.449 li
279.457 170.418 li
279.254 170.418 li
279.098 170.496 li
278.973 170.418 li
279.055 170.418 279.121 170.418 279.176 170.418 cv
279.102 170.418 278.895 170.434 278.551 170.465 cv
278.52 170.449 li
278.41 170.434 li
278.238 170.527 li
278.184 170.496 278.09 170.457 277.957 170.418 cv
277.77 170.395 277.645 170.387 277.582 170.387 cv
277.473 170.387 li
277.41 170.375 277.348 170.371 277.285 170.371 cv
277.211 170.371 277.137 170.387 277.066 170.418 cv
276.895 170.309 li
276.785 170.277 li
276.754 170.277 276.707 170.27 276.645 170.246 cv
276.32 170.215 276.16 169.945 276.16 169.434 cv
276.16 169.324 li
276.41 169.137 li
276.723 169.027 li
276.957 169.137 li
277.129 169.137 li
277.129 169.184 li
277.223 169.215 277.293 169.285 277.348 169.387 cv
277.441 169.402 li
277.441 169.574 li
277.613 169.605 li
277.66 169.637 li
279.316 169.527 li
279.723 169.465 li
279.754 169.465 li
279.785 169.402 li
279.973 169.371 li
279.988 169.34 li
280.176 169.309 280.348 169.258 280.504 169.184 cv
280.52 169.105 li
280.508 169.105 280.488 169.082 280.457 169.027 cv
280.395 169.027 li
280.223 168.902 li
280.113 168.902 li
280.051 168.809 li
280.082 168.762 li
279.941 168.793 li
279.832 168.668 li
279.809 168.68 279.77 168.684 279.707 168.684 cv
279.59 168.684 279.48 168.664 279.379 168.621 cv
279.254 168.621 li
279.16 168.574 li
278.988 168.652 li
278.879 168.527 li
278.832 168.527 li
278.66 168.387 li
278.254 168.23 li
278.129 168.121 li
277.629 168.027 li
277.582 167.949 li
277.207 167.715 li
277.02 167.277 li
276.863 167.059 li
276.816 166.387 li
276.863 166.309 li
276.883 166.113 276.949 165.934 277.066 165.777 cv
277.199 165.715 277.27 165.617 277.27 165.48 cv
277.457 165.449 li
277.496 165.379 277.57 165.309 277.676 165.246 cv
277.863 165.09 li
278.676 164.777 li
278.832 164.746 li
279.082 164.715 li
279.52 164.605 li
280.332 164.652 li
280.363 164.715 li
280.434 164.746 280.52 164.82 280.613 164.934 cv
280.613 164.996 li
280.832 165.121 li
280.738 165.434 li
280.707 165.543 li
280.652 165.762 280.535 165.871 280.348 165.871 cv
280.191 165.871 280.07 165.801 279.988 165.652 cv
279.988 165.621 li
279.832 165.605 li
279.66 165.652 li
279.488 165.543 li
279.395 165.605 li
279.277 165.605 279.176 165.637 279.082 165.699 cv
278.957 165.699 278.832 165.754 278.707 165.855 cv
278.535 165.855 li
278.426 165.949 li
278.238 165.996 li
278.207 166.012 li
278.129 166.059 li
278.02 166.168 li
277.973 166.184 li
277.863 166.371 li
277.723 166.449 li
277.691 166.566 277.668 166.66 277.66 166.73 cv
277.668 166.855 277.684 166.941 277.707 166.98 cv
277.727 167.012 277.785 167.051 277.879 167.09 cv
277.879 167.168 li
278.051 167.246 li
278.184 167.301 278.289 167.355 278.363 167.418 cv
278.613 167.418 li
278.785 167.559 li
279.082 167.605 li
279.207 167.684 li
279.707 167.824 li
279.77 167.965 li
279.832 167.871 li
279.934 167.871 280.086 167.926 280.285 168.027 cv
280.52 168.074 li
280.535 168.168 li
280.754 168.168 li
281.113 168.371 li
281.152 168.488 281.246 168.59 281.395 168.684 cv
281.535 168.777 li
281.504 168.934 li
281.566 169.02 281.598 169.105 281.598 169.199 cv
281.598 169.246 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig6_pf_resampling.eps)
%%CreationDate: 2/11/2022 1:45 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!Q;B7'KbZflhNc]df_8O<[:oFaJD#mg_?JJ8C/PYbjtpV5n1q<V1GRr$k.Hg]b^m'HKgQ=m#@BUWP/S"%WJ^Db?tPK`kf0iPl+
%,(l-%+,QA:Ie)cbS"%j-:2^m$GY'(t!"Hj&:m;CXX`NgeIS$_d2.f"I\(g7qZ"CF!;tf\Zb4O2UJ1#bDLL)O_J!i'MrbrA(8XG(C
%_JDLSf$(G71Qdog5eiI]0=.9&7aLtnJ7`7;J-Pu?mieX5>6#-uL7cl^iEgd9IVR6A*U"q;$GkNIM]'/\i)fQCrM*+`B%n?Thp'`Q
%0*`#U=`9USB"le8-#D81Q^^En7jEodM4ce@njc(:YP=N($3l9SH,:^X'at4=ScI^q!eI:!8;+Y'5gXEV;gpA;$q.U,6o*2?cKN#P
%V@q],d0rOI1p^uArX0.+$j6ifrQ@@(mh[hP\si$%#Uo=LPU4r1H:0F%)^:*TU5u7+rZfCs>`33dRF"#LpZod>dO8^b#["m,<;M*n
%E+VZO8TdD(Rd1aSXG74R_LROm'+)Y]Ai(&S;'?^-T*g38KRf@&s)Pmu,RB1G&;JY9"#F.mAs:mt`cj/m.l+Gn38J#c'Oh$7@<a$L
%s&&cFY.%g*],eTE]+8!qqh-[6iI,H+XSLBp]3`@2fYXg0^bRFU9oJ[tHRaJ1cN&e"L)U?nU%c2(0?dH.nC8W,m'B6d[b-4f7:s6j
%PZQo<eK=MWBK`"_/UFp21LOrfVX!(EHuYP?LoF*CVEY2;^iuK3[m/V,F9$o41:2md$Jn3Y_7sLTYEAR#oGFZ%&HM]DIe>)%=Don/
%_Ctl<aRn%r2F`5K(B%7*0qegRm)nZjn>$Rc-:/Mu1B\J4bm"^c]nG+\:hV]$*Z7;phbAYAUK=4m!1j'<lTG'>&Wi!eQ\4s?[Ts4?
%nR$sq#(*hSR8nCKG*CTtVl&U&]atLd2W,X5PK`CGGQ'HjKZ6Ui^r(XTn8*TZQq`tIAi^k\_,kk6+B!L:&/PcfeWhg\*sp!uhtT.h
%iL))YRK;BFZE,q<2#ce/L/T4$##(YWd5l%T:@EG9!\2gOf["`J3+)"5#22D@`jEL35JrcjXJH1]fE2H^<ra;&Y%icuc_,mIrOnkT
%f'to+epjgK2cC.WliW()rdM-LEgV7#r?Z<$K/S],0Lf`L&Rh]V5GF#]:$k.BV%3KL_a/kU)U]Q37mdkQqERjk"goR@L'$.Gm503A
%jM1X&^HI*C5N'#c9I+%m14=N^VU6-'#f%W(,L@0+FN:Ta0_mt0i<M1j5RM=(qUDM;(I0"ilnE/Vj8G8_G)-4es+6K!>C<h%pcg"s
%7_j<),ZOh@ai#//R;Hsg:QP_VOHobUeGnKW#JfE8WaXgHbo;tZrXNnc:!^l[!;QhJSIH`fqTRjP&+-:;1GBhL*lh"Ks""s:d(f`a
%+#=l&G;N-MDU^Yj0`D#K0GhTX[2Vkl"2`D8XqbO=Pl[k;a7.FCD^Yk;A,GY.g\\>'Cu\oC2?8K^7,%@\raIN;L(C^B%9HqKF7$Ko
%Co(M=^F.QH]qUK_BsA`)l&d,EnP.j>M?+3!aC?QV$ki%<E#kOtBFG:`Dgk9T31hUp2GoEq@b)VPBL=;fa@uUuB8#<!6L7M.@KEq9
%G;)-!kA\2lXdB%hnb8*MBPcFYp(l/O?l^0KeGkAJ"$6'mld,U6V7[iKoe57lrspCNFtjs8mh+UZE5W]P&g<IB:A5PC_k,;_ajeZU
%'Uo"OjEJDC41,#)A*8?`J;!."hQZu;1p"Il-,]9Y!pj6HhQ[!JNHS5f6fVAL.u";i:1h2j)V8B1"#`W&*q._j!CK4:I-G!J:*;RM
%=RVY$NOIO>*VKV4F8q,H/EpGi":VC?F=)<WB<3=1>%3<NYh&"cJmYgO"\k&HlV.b>/U^`VMF%1qjC?kA1buRhR:bZ3)XUo\R18`[
%*0*oo;hPF2=noDtCpcXKYbRaWa^X56jC[/kUAssdT:,;(8Mdup]$H=/d+s+Uc%^`c4Fo1NQ/kG49@nH/`c%tO`AQpOSR+/)Fg_fs
%VeYPb%/(c+VF8ZDoTR;P,NYYs]]K%:`UKIa\;G3WaN;n3:/AW4+DgnLO[qGIdB^NXbE6^%l^b[oIkfu[:mdT9UWq$+&"*6.\6^j5
%];<]JoR=8-ebe)A%6"RSQse"^1hLqqBu[O:mhW5ED;+EFoj!T)"P0"unJlA6YL^TOGf)@Hj69`aBA5<!))i#_VAIsnPdc[A2Z4*K
%_KNBC02Oc3!MWJ!GP$B0@e"Pkcur*4[GCJk;BPlIH8liEaS>OaL4,XhLN$%ZCCm9C<(+-VM#mbk<gmp\#t#(%8%12tKW@GUTKfC3
%Pf3HlgD971DI]p^AB5k_$VgH4E43OXZbL?*o+Pi<1%^cDrhN7_0K!P4V*C>!B"Pfh63B(\K$@u(gf3OA-@<87?!D5$VXairi]nJl
%40rn\^B`>7++>Xien_/5?d6#X^hW':%T"G/Vb@[eGpqAV?pSK7GGFCR]ia@qZ]iIHe:%!k>-mUT*H>T@hsj*lOAX.7NWuF,O9:Ib
%ks#:_#oj*mK?P;APRpNFJ=m<:;5@_^)DjuVW0iSjUo7nJWtG<&#!H4p7Rt0lQn_f.7#4\sAk_ST@7]QVZiK=NGnqMB:3/Bg)OtEj
%G#4Q;2*J5'=8;VfRb>J^V6/#^_o6Eoj9pp/r<LE1$'=V-3YQ(ej:qkJ/^L%;\]$DhK2E*^Zg6Y.*mOCOPF.=$F_GA8$(-;E+,Qtf
%$+E?TJkZF1iY0"r$E=c=,Rb]3Wt:FqWr(TVBLJDXUm;r]F1CUL-UV4Wlc1R!H+I850,FIf>$qC43:N1$"r.W%[H(3tPQ.'Q/>K:G
%'\h1B4WtG5Z!he(+,]VR&CbN$kRZqMC9jLTRmXnQBH9t;$HsUpe-*5F%V$gFCCRFdhI%&MS^`.+fO*i6'UYK4P>Zf/Lcc:^WmMXr
%8(':,N._::Oq?dg/VZTO0g=!%CP5J[6ReX(+c97b0H;+ihd@]J+Z7urfNP&HOj9\oJY]J1iu3uf[(nJtr!YGn(ARbg6+CU9`9]-L
%]rNHH(q<n;n@0[=1An$5q;PG!#SYAZeS\t#^.;Ui:'8GP2)Css$N?+.pUo?STC]Bg!A]i4T?902\W-u<aon4Q/Klb63V7i0Qd`1^
%U>pg*.0M@5oi%1*:N_MC3bVaZ4HG5sQR$:r'HIlmeY+n&U@>DoS>M65a-![9<Oo9_-PgF=f,@.U$b"V2(CS\7^"C@$"I$8mTbuP*
%+NZU!)YQbPZs&@lN+o^ep'HZb#[n>d<YfE:'17JfTCp"3!A4e"5UZ,_*OLHtqhp/'ZgE.K)1[:`7FEWn@q[Qd/If>5kVNIWhEj&%
%m>&]FqutqM4D%^n44mRLk930L5HG)D\'>,UClmXe^ahg`EMT'5j.4#fB^]i`H]>jTfGi7Vb[<al*7euP7Z;VUjleF,era\9[jf>t
%&^"e9&;"%V(>^47+`)gehUPh%2Ms>AX`;md!D_M>?sZ\d'NNQ>X:`.:9icKELXKXq!>j\FKS`m8a0Pk88t#:ZK@t.qh\^!Dl,4R%
%IDL/pi,tS;^eFuKY_1mrXT?88K%q6ZOr#:GVq@LWH%?T`FYZi:6F#Vh#j1B?q(I1/W&37Jd8*KV5_pdoD._iInMqsBU"X;j%:K:+
%DSn\]7_0UX(;mmE,SAdE\2oEJa;aMs$]i=R<CR:lCsh,W+:$LpCB0jGEpfc*0HEJ$ff3ZRL&%I_GT!o%1N'G9@cSi>$?ibH\A#UT
%:f/(H[Ng),os@Ch.<g4@?!P'46Y=$ZCBIT%%&aQIFps\bX,@bu49p:HX#6a50S#,S/qE2)]_)aVQX40,)_#PHfGrG9aa.Eh[Fc,p
%NU`SgXfV&-k8c-r,U1uV_i31t9lUHnD>+-@Q26bXCC>mo-`pr-JL6!e1`WkLIHt1dP<QDgVU>fTK"tFDlL5@$#kZP;#MOc_nG8k`
%Vp#QRmrf%2qIhHq_,g1<3b0bf5ER"En79e\9%r2f)m;*,L:X;4N+(du//0d:C-"@gWmZu-RFijHdbK]hfpsR_VEb<"@te6*?g?XL
%Zs7O(=qV(JfP4,FC,+Ea't9F@Y@F(&PC..2Q(VaLrG&:M1Me;]?PN9)7t71uqQ#mcBrUG8Tk:BDdSedlgsWLCH5g2>)a+28-Lb&*
%VGDR!X]kUDR/Wng3sFPY(u/S"1."8O@"QdhJ@AE$52JG-riP:6@4g*CWNHWK)Q?=Z78HiQ*"`;D>gcqUGY5d?[rcLN7)<RlepnJQ
%BosFGPr*O?UjN"E(q7*\Zm-\aA-WLldU>'/*qo`E/r[HM)*u8GXGlmh1GTH3ASglO7G/,4.,>%,)fZnV-^^^Zr)2;Q$V+3d8Xr4t
%*u_I:U`OlODiOY\GT8(ZDR\,-s.L5dRMjRA\c$Aij&`N0_a_J"9Rd1n+]MLdma,Y8afo\`?s!^NDSim0[e.C?;I"&5k\+MnCBh"O
%6u2GpUn>G=cSc.l/IRpOiMqN)KiS-qjl2rXFT#9T-H]5h-8JZ\idfD<?Z1+(kY<%+I97"R<V@"G/I[E2&PThT(68*"Apa_/h8ko*
%O^O3(CBm!3gfJDY>`#pO>J/j:5PT/tSkP"j/uPtrb5>'i]C!&nXRFtOLL*XLO>W>M/LI(kpT_l=m4$$@LZ(RkHA^L>JUj".[^i$c
%`(aL7ia&`DQ#LZMWU1ql")(U&MOEF-4mXqfdRtmO#geRtln1<BH+gZ.!NsSD!t^3.Kpu3>]su8aHt<BJ*d;q@Y&(p:mA@$saLX%c
%!nV@YT7uYATZN1MLOgYVlYpqcDS:FFVOL_,9-#P>0(tQ&bR7dWf[dZVjkMflK"X,^"#Pg?L$r>jT,W9nKenY:U)b1cVRu1Or(]j4
%npQuHP*Op(injCK!WnqLB"O8p)LT-pc':e1F2emh\P>(GeeQqrG(6k(BVI_7f.]Dt^=]d@5VJ^"htV+qR:l9'/![NU(:*ShR;>#g
%Vt&`M5DPkCY5GdbAPnYEY9.@gfAEi9pL0:hgt^XHN9bPWXu($Gi;ajspqtSld"LD\Y>fg*Zn5R-:N9`dq0=n,LOIp^5KsV[Uh_"r
%"d$XW_mT^s(Uh`M2a9$Sc*G&IQt5dPcL,]$R74WoAB3&rgn_7;K_6qcNWro\Bs.@GZ6mKBFk;mlNBUh$_"rcC-<E-68BHtB$E)u1
%oG2aU5uK!bF%=<h0kb?%+il>&;pNujg_S,:G6XcJ_$=6K"Z6<oLk2BB5[Rd<6A#*!Gfr=WmBc6Y2[bW1:h@GYD8MQ3k1s#)IWEI0
%HFlhg7mG=*1n-gm!PE.oaJ/d<1(Q\f^;MXcp:EA%70h1X6$"C)6fcP?g\X8"4nLO(2fh3dgt;ArS+$)gf9t"Dod*eRBtpOGfh<tV
%DTmQ.^L&^?C.0JrC%bY\^5#2Hq&\d8AHM7@[?192lXa]n+^]W0]U9J>@j_RrR/@GLl_CkD0[f`%5,P@qk@5[u(d51SiG$Oh!QY>S
%NVCD7hs16I6V<(WrD^G?Z_X'$]D^^HAAlG8_,!Oi1%V%V?j0Q:E'#uX5.[.Yhhh4M;><i\&K`:4'87Fa&Z=BK=\$*pq2u@,T3Qh#
%=SB:tDYJr^E&9PR*\,-Nmt!lSPAkBuhZ`oPd@2Hqc$.<Mh+b+:O]!I3Y=Ii/rH@5B:.+]"hGs(]7",=*TX.,)VNDrd7SSHa[CcZq
%ZT>CUBmq"]%q"Yen2p:iT8-Tad?4L='_<C?+K@7Md5h/m"_c?/Vi_>mRq+@BWH@8prC'GcG/[4$$l2X1,,eu/l&^=:[=Y0^L_k*J
%GKQ1%I_u4tEG/`b_f6il$\gG\:UPmeO-_E*g^%]@pUtQYIWhJtB!H*Qe'2V()SgT>#lll/p\L:-gj6gZl2#X>"0[./AjWZCPS9UJ
%gt5X7Jc;gMX@UREg*L("!t:5t9n+<D\SFQXs.()3VJk_NS)IE%mP\?hIOl[-$Vpgq2c24n1h)+1"-L[Km@.6%;'bOrW.2!4q`%`/
%DS\_"8IY<<qq^_1W-MoL+[b".i<e]jh)K'Zq0'a#gG+fI6YeACmM?u0`qMidHQ#V.V\5i-(Gtr*!I7MPc&hDk?FmC[#/mF<0pHD1
%QXu$l`bsHY_\]>VPIRf.=5iXYhb$#t5#T=oI@1=i7N(3J*2V=a&"U<\ps`&jhtef"2fb'IDa6.(dm!NgUOA<ehu!MI*75]%')+GJ
%JH`tYgCuobq`=NEP@L)$NAhgqTnBQa%LAb2k2\5#mL*qqbXX[r4)CNsmgp2[$&"$R.09gfjiB:2h`,:_>R1dd>tu]>drMOT"@jI4
%NucKc4ne`iY*o?m?LP_&O#0U+K\tW\nUsTK?pnBoqJLZBTlea-E?Q7bCam^!Z'-?##n[VX0(SW9?00di,^E9Z.)ND+^TpOcfE\-7
%m"F)+N(aTt"8do[aZYo:KtN!!7YNu^GiRUb_8dkmb9=RG",'.#?L2VC0mJR`UP=aCl&$;\)`:,QO_F<:K9nQN!XrdeYgpl+p`h6(
%$K86lgIZSELf5Xk>*aOI,hj@O6YXY].hfW$f)a0s#hKSG2mC-'jORl\7.iH"3/l=>fb\")fAe-'&i67ri<IL=%BX?#h%?[XT?r\X
%5hN?q5,C021Ylk1XpQTsh#r2BR)8Md1q`tEF&FH75BUE=ZdT<4)F4mC&`*TY>Q]="2c%+i?RON0\!P5JkJ+L-DSp:Li3&sFmbkO0
%lOCBdcs)][4K,<kM8sV^g4Zl>j&8p'&q>kEVHPm)1csOFhfFj>^DVDiR3%p%YB&/mUWX(=EP"an8LYPoE\1bH`1iUfHl(B)V`p%!
%"$!<_9n);DqD'3QjhY1p1,G<YBP5%)RU!paHIt_Vg2PWrB;CE1GIV2br)`(^7i-mPQo3V.!42jd2:("N<<#Y0N^3aSf^clQF.=$K
%SdR<Hc?*A$GV6Wh-nqY+%ZY\5,p%)N/p]46KpO6.oC.&^kKKgs6O$]',,mt,s6CX8jDXW2=6VO8QjMFG#0.kXP59-0?>dK#aAaK-
%MI]h?<4Ju\\3CjWo]F:\iP%iCk]fAPEDqs*Q,9XlV4"L#4p&.tbEV*cYpX9M#><KU.-))n5r#\O9g4YW!76Pi_-pF0C9BP2Ttrd:
%8\ji9&:ANeMAs_])Kj"$cVh7f'd"c2j+L,]h,pIXi:Y2F3NV+>WRRt/b.4iQ-Oo8s&*O-$W;!h[48h"V5`^7TScuj@@)-(s"Z#Zs
%(N<>gj++@1@aK&WB'.U6=aV@]4:rMa(Bg8.#DjfKaqPKa:TjaE>j-VsXbH[f&!nYd'4"(0rc2BC4sJrojWX4n9@YF\BDKboFl0`$
%^H=GYcm@is]`%Uc19YVQn9dI!&XA?";;>2d7Y[@=ShfZ!7Ld]MS68B;bk*b(H[<:o(uiJ^r#7\I=^iAqQ8.=J9r=-]ln\e/IbgG=
%oC1.%8)oXOiB]9hl^akTD_:EQ0p[Sm_<GnDJEV:]%Zl%E!pZdl..eMA.3,BQPo+UEWOE\qD/AKPb^_U1rZHC)AG&6eUZBN[0[=Ts
%dgl2nS56FbKp=3?Ao&>`U%Bp7M'uu2\!$]!S5O\O@m,Cd(jLu)EH\d]Ki%Q\o)Xf-r,5U?dQfVhKDT*^b+)hYI^5>h>bEDu11G]e
%;S^\ZmF%%9El?8bh;e)T2d/],4:Bjp^n&4fEnQV@<DK-n3U()W#&L[6m4K6N^MdhH<2H$:ZgcO;!49!t[Ko.9id?37I-#_2Rh*mE
%M)k6ul.Q:U2AN_4aPbG<%3S-I%!BoB5OcA4Um;IQh]KqYk>Z\;!Y)*tgXE#Ce`UbtE5J6FoA/])#:u0#PW`MHIcqt>dfFgf"c1%)
%#\tN$q#/cCir8U/='j091;R#GRsoA.-L#j*<IjDtVYCnObfLHL)_e@F\b"q**u-015jG9SOO]2B;YME\gZq>&B>*]n`dhTf7HE0n
%Ha#TuaQ*r0!&?2S2flbP;+l:ah3]["%03e>hr\4icktAYE5"6D9K1M5hX(Hq'emlGF(eW(5c6:LCjJ7-B/VPCr[9*Q(kTn!ES[Ob
%nMiG5]fZ="c^c]L3[L]Pi$@]A/q>;J[JosNC=R?ZT82s:X@\rM3p%jY(42XkB6j7JSHNCW8>[?B_H1`fF4t$6+$nO!n<.o%FN`-t
%2/hnMm:,cLgU`_+#e0QEQp6*mrEBL_Sbg=L7Lg-k"VcE<`r`"6'8:`$Jqa%<$JcGG98VGu&ekdcDBc\nF)Ke.?>!o:lQG-S5W-5I
%QIe`fK]WL0??JEd7%_I_10on$+&h^R"uj`9^*W+p`Y7/q$(X\D^IHP[EV/"PJ#@M"16P+V(g@[+!o6Ut4fpagdA/<<=Ae;JVq?FE
%Xnsln.`o;a?\qFMo5q^7%S,j+T'YRY03bBN=fK71[q%($dpJ;*2DqJ#Y4'GP3pN34Q(+S?5H.\igb0pn401M//mBp,fGctF75dgM
%KeaCij=,itbno<7g=5=g=o1u%,uIo0/R?J;YlsaEmsD\lba'>Ac28?3pg4#^r7n/Qj5qBbSd[dKF5Hc7PDVO'bV@9]r+Um:KiOGn
%\e3N\Djl8^&XarlLQX*j/UUL.qot=o%cA$M<VO%%GIu,1#DIQBEIIEc33r.F=]Ua&6`,.6!-L2L7g;q_Zid!<\,eKme!D"4);l#<
%j!D,JbM05hi_@8eQt!/Q?#I;e]F'$*"aY:MJ=Apn6?[bF(RGa&ha!)C%)]QUkuG62s3(`u31o>jaVu/N*RPE;\K/-8[fY?0_-S1r
%5mR#q8rIkQ:3<0SZ$2$gU9IAQGM4("+;95,`_u=S>pV:Ui/QX?;i0STMD%TY3WbpC5)bTAf)6X^^'=/mT]bhKM@<A`%;LU.g+?,q
%73uLo<*&g'E!9'b]FG*kg!\j!;ZY*0Vj:Yea*&1SJGP<=2&LLE<"Y>HPKOJYC\-+nBZWlVT:6e-"X(bNM&f^DbuL4*mL([u[D%Lq
%YepTbWRBpqDsUdt6SHAu;mDNiT^>8+jD`p<]K]d,!c$pLZO!J3Of-$4Lkaj57+f&*U8&e$N"_.(<]jFQ<,rP<`FAEjoCF\3_c6FS
%59LRsgqMr:L=caq7A#<])HOB$6_s&6atDk[rf24*C;(Lq/^ZK_c#%oC$%2hMa357gOa9T:Jc(i!($&-1a334Ai8+Ed6k`/..X2$c
%47>TO%aer,)Y(;LX(l\V)Kn8Im?17Q4[*0Se-3#gC4Jdhrg$/-$4biVQU>Pe00m%5J$[JskVlBnY2o:>.LJcr3oR%*ln=A/oO+8=
%1M\PXft)R36>tfj!J)+lUr)Lj4rl(iGAne_;m8K2>$:E=\W,(CgEd\Zh1;=rr[s=YM'V`lOHtdLI6'.99J?p,`:*Rr^BBM22%^r!
%Bgs_2f?TlsHUHFq7[sRU*5?$k!K?P<Tob]CAoI%*,CMH[+jV!&!dY/KJ;;u0@&,'>dLCC-bg"):P+Y*'RNLrL]l_3Q[6RYF,\&U&
%T2p%\0HZ9@Xk0aW,^c49AZ$Up$Zs39WPj_0RsTNV=G2*8q.n>P/+dcOWVG'qYXlYb/qS-D%Y;uVT*$r5hPBIqi1!+[pY2[LUM\+9
%5550Q>;I3El,k@SeDA*fhB!^F".EijEg'nPP&TkSB;+Ci1Cr7dkAMM@(ii;!a=9JLn`#ChBj8mGW85&Q;IN3.,pRr3HtC3Td5h;&
%p!%X2,=Y(2UX?:`U\`8>B&Oo&`V+Y*"m0E`&`\@WPNV@A?hjWS:LOH_%674UQ+Io!PCZLhJ^/7IB4UB#]Reac[AR)Ya]=LE&s-C6
%M6nIm[ip=W!d8F)%qsV+!@$rC00\JWm4I.A%6$`H7H^YB$5i^39bQTAPl?+63bq*!dmW2@K*>-b]e[#a1Zt;(L'`(e0p@X-b7NOt
%%#tOo>/<s3UHUn.SEZ@F2HFFWY!/00^?_Qs.7$Q%oO7j4K)UT#hpt$=`V&>BD@64'HC"$.VlrAZGWH3!^I,3TNuq-L<!o7t^^H0.
%I%;@6*5Tj___DP&atGC.Yfjr:0>J?J.bF`&?bbbeS]E&iGk689(797#PB8UiFbY>eqtG<MK=1mN.mZc>$;d7:E8:q3o=Nf0XCK6%
%9`Tk%J"VF[C,#Q=fkG3^ad![q2jkOK:bSHlK)IEVDPsJI]@Rl+,SB[1+<tLF7h+Scc$W>%P7lC6d$Q5@:o'QkVS#Drp]YrkIUXR^
%cc#DQmiQb"F`4Dt^?o8A>SNg@#P4;o43.NmFlVRuW?-r)?O'sqFFgb=!Q/ntj+2^]@VGd%!/=93c6%pH^C4[*"f"4^rlGlYX3]l3
%CT4kh&!J:>lLf=A*IZ1^>Xp/[d$"Z^/&@Ue\!q81LHF/3s%\FhQdX[#*'3K2:kb_DUV'^q;$"n00jQbQ(M5YXEePQa_@MA.*qKI6
%BDWYAYb.=[`LpI3^k6r:YL^T?ZX2(joj96C']"CX8]AQ#,E<./)%-U0^`M/0*j\pI_2NA)L"^i-)f!odn,k'=]PmEB*\LlOE`oQL
%,gC!;V=C[Wb\RU3<7<<&iS2rJM:&3ap8<kFlq)W*q\-Ol.D%Xb*9Pu_#LOE,>h:K8Q*bFD=&V]EB(T!XV4F3[k1XYSYUuI^DZHk8
%H#A-9)nZ)ae7Z-da8)T,VSCdi*O%K#?m1usKhf6/D;s!`9j@&>.aqa'H=bh(s+Do:^G=c2!V3e#^P+n1H,9E(D-k]W(4cU<V83(:
%mnFb*ZqTeNM.W):6Ht+OoOf[V8<4p7RfG5&eJ03uBt&g>L9tZLWp]b]7K7:NNZ8lR=EEhs3SXLO$G0AGj\RtB#_p=,!gCA(]j$Od
%oWtZ6^RE'P;7tWRN[H.R4_/.D4I]Pfl%720*bD2O*KUhDbr>1X;D"1`693WSdEUp)3EYreMle.R!nOY*3Zi"O8Qj3T=Xrk\Lg5g8
%Oh")&UC52lK=+NV(XdXh.i-dr>s@8UQ[KsF#V)d2'&L1N3'7:>E@.(Ph^?cMqV%&WQ+hV[7H(;f'3+\V1%^.&*^NOI*KP=uTLi,X
%Z3FS9L@?Zk7oSl]2+CE=ilC&WPXWb1p)C,8b:Dc_FRDHrF:srDJ$#,a7Am4gou2l-;4-XLooj_QWao#Vb\QPMnAY'8=,-k6Lg@u'
%G"q<Cc]a88AME'lGGkQI1NuiVEfD1+L=HgV!>mgf:1aA@4@;nuOI@OU)8N1s*j!a*Fm=;7r^;(RX9\\EHd/Gh_hk_ObGuej2pfrg
%R*i)0,,\+B8b#[H!K-uG4PVZ1fK2+tJdS\G)_PIHEE#[6!_,AjO8h3,jmi]LA2^"s/`#L(E0ma+/\S7l4CK%;<q&S4LPKb"G);aU
%r\DPnm)<S@nrA3Eo`nqar$UUs1flI-*Hp8J#!ToeHLeT6V`R-@6j42V0u*597JMNW`;TGT>p_Lj(?ZuZrN6Yi\<=^-b&pbr:!F/t
%l-AYcg#*@Lfp/'Tb`:l\W7a>)JS3kMYM$=E29bKdG0]FtSg_I"f<HRu6$(WI'%g+:-d]K\4E+[+:AQaYIjFY->/$bR%houqT+[tA
%%8/\u-@%O@]/S%HWQ43\)(?lg]S6$*TTs.Rhhg-8U!kRJV=0/71EBeAB`-K&%1_ctT^aa1_!Gr]b@XPg'/@+Rh?Fs$"TF]G]6g<G
%feJsLb`5t@"pa>,#8_@2iMR+Ja_)M$,T/1>s+j$oRndp%>P"158(j&kS?/"-[uD*$HY]Sg^(qO'kdH]8#?'519RPT(4r9>O_A?mi
%F;7@NhRmS";_N;U6o2D#&M^<Fj=t"EB?KPD7/!cod<mH>#/V9\f,H4tXBjth2f6X?$DWFln%OFhc4-J'[2XFqWF7A](B`R,1=h-S
%@r#q(:d22EE*r$La]S8s5maSB4q&]9Y_K71f)'MbL)$CJL]a2lU6#[]'sUpL5EY8s5@.:*8ef:_Ot,$e.aZ;Db>ViZJ^0'"(7C3R
%=:;mI<44f;o,:^Qbc>Ruj07*N2M@>a_bI8*C&+V3/)\W;?95J9bZCrIK30.L$l/OEm(BMCAZVBL"&')a+r7G<Sr'sW%I9,?7``"n
%f&s]pqA\-QM-'cs&b4G`aV<7/QL:^eq6#Z6i97]1Mq;T1XHl0p?>M5]N)/j$91B)#aEeMY"Rf?pG'ZPbh/%sNY>>8)J@KiPG?^c=
%YDQG?09MRc=Dp?70/p*1cZqg^GV!f\F)+FZ[h,h9@(<&iP$bNRN>u`1r;=NBm<J!'Z%dm;n%4AjEZ.-spC'o%^4_cVQ7_u)V)+&Y
%@]_9HOt'L_k0a(<E@VPYnDPQ0Q/B81ejk5!;CL=i'sT[?Za,B%cA`NXj!iLU<l:@N>!t<LN4%ZM2FfoC>R;np2QcE'<cto(45JYi
%@=9?V4SK^.XEiE%.`,^.<e*Y'gimtKX,?Sjd]?tYY^V=_YPu"(#qP'nbOb%9*kQ]@.h]DID>.#7Y3C<16k/GqnXZlE&6?_`nl>QZ
%>2$TTZ4^2mH1k?#X964)[Wl%SBAUsDm9=a&&M#Us'':%;pLaegfR8:XH>!9Fk1_>8oo>/MT%LX7k-3.+:)VWPnV:\7YQ?X\VF-ZG
%ZD(+TT0J2EX63;35'qP!PMO>0SBq4[=fhAk]N`;]-+%S0SD$Fb:."c[A(aAO>bkYLOlm72eTZg,FCVlIPY(rAK3<rZ9P(5&KGDa+
%m):Ioma(_^5A.7X^K)g^oa](@1L25R8!L`'=o9_V>FMPDC*7jQ.VWXIC\EgT)s,ZR%^:2@6!EY)"$#:SVXfs/3V&#ASo&G>WSd0#
%9$0r'VhajBrLTt;mfR<#dmRd>(d_"!)MJAuilV*6;0tH%</9SHg=%+jaNf"8VjM&ei?fHpX'+QW%kl=(4k\AW#)QFQY?1O6_G%af
%ZT!ZM#)?*W7'p:FGO/8mMM"\HLt9LcYP,=i]Nn%V!mqJs4;2Y,HrfY-)Y%\SJ#PU0+hl\!:>&R)BV/_mlY#QbH2TNkFC4'W[APIJ
%([=FhT(_(p.d;(>##uT6m:>jYH;]#LY`bF/DF*Z(K7&'O4K&p1\0dj2e4eusOb<#u4PhPP%<bgtG[gEM8i19e1YWl[aO[X!:WHe)
%XR9rZln,&slr1G/Uim,e,4P)sr&!@,7/:9@j@-2eQR`YTf!2,UO0d+lKg<3q2tg+tQ!&$t=\4plgY?2^>Q0i3n=ikD^EJ`\0_aX&
%b."]g$dJQf#<AHfpO'gcINo3QN-CZ6ApfXln60>>^%Ql\JDKb%#Vjh0^Pt,$+-rumoX\1QLdKVc'Ns+>T@r'GIgCkaEC+V\XhNKE
%^]Baq,nHN>=A:!N)%1#fX*Jr&W;7dI"X%7qCN/RO8XS,P=9G,&3`\m^jHF#+C/$re'UkF+'s,2aY0NX8C085.YSKB!W@]g8]sW`"
%R;L0U'sRN\=<jY-HWl9t=GmOnKe7HfCS5YVd"mLGrAWt@`JSn8"Y9(%JR@rHN&AuX@,34NZ%U1k8eijs/QAuA^LAHtKqjbQVU_q@
%SmU4:=J:kO8n!5Sg*o1miP$:*XYo8'n=rc!]>q;5+^r8GN>hp:poG<JkGYZQT\Np<JkAQP:Qd9g_B-5Y[Z;uK$MsE(1(7;G_\6*V
%q^Ktl9"K^@+8jo5L'AGig>EA)gU2Vel<*C*=h@tW%RNh'OhtZD`;^C]\Nt`'PeP8P2%DuRkYVh9QNblr8,.&LKr0a22=U;4LATG<
%k<p+O(=WGG5B:<6CKok/2Va\):+,Wlg`Q:>RO&O2&b*Y?*!>-:XFu<fkqg%&S\'F]%K6O$Gu'[4]-T:2l'"3tB)cfq-*^8jk2N\"
%h]!\#qSS:(\aG>"XI7$>ZJ+nXOM[VNmNX1)+gA_Ro]EBe7rB$mIF_tm`Cj@b&n_!i3CM7\G*$^qOn;Q7Lq$Xn8dqS1Z+Vp=(HWRQ
%rXtWW@q^#a,0$FT@t=F0UdqinTY;JV)I>^L6Ab@4h!!3[.YYP$""D`>D^60QnH87lbn2apLBAu70SE1oUlaUPnYYUBm'q8>4lUbh
%6p:CaOUm.\(!)aACrr"k0#s6D-gMX!%.9^7X;Dco4#cs0,_P\j[0ObOTkiN>jMm>7.$M2D>=.@N76cXh\n/pYbk'XQ6#Yq)g-\3%
%3LhiB#9fW]FMb6*m`!4NR3=6B1b`,oh^)sb;chan2"^4da)R3Vd&[>F#]6eGKr,1a=45M#88\nQi.1Y]0P[H7-hRa1Ns[RM<S!Pa
%hVJHq^aHT6SeUqm5i[<EqV#T/2O0mBhQ+jMr53ZLNIDs)#T077*_J].1Nq7qf($QPk#1Rc1!Y)0</+P(;6nKc)<Q`%SX.([_6hE2
%N4.0`Q9l4l#0,3MWbEqOCJnn>MDJM%M-+qH8i;mm8KJVgrjAk=^o5+D%T7#!(=F^Jet^jQ^olK@jKO8S;471BK6"F(1Jc9HPP3+u
%V*2d81n[MB8a"]oeqR2N,J^3Sa4<=]%ZsHNpKfKTNM(dbQ4bThDN9Gu<A=7i_aW_h['B#-I6"%d(js@4Eu_O$?]JeTl#no2\4@GY
%Ze6XSA_o#(Bm3S=Okasmc"9^m9)C\!8X7&VXfJP095o*QUb1&7lW_be!(32Z0"!f7E"D+$(jF]-17Jpo9^uK1+"Lt98Dc46F#gT6
%eFOT=2e\.><C.Z[<BWdS7dLHMG\D:j:EJ`n"E!,*Hdp_Z;&')0-S.X.r5[HnZHh/M[i4O-aa$9YUV%P"_W-H3K^:GG/MR_FHLt,?
%nt;U6N^4<WOBOPLgQhRO8YWXiI`aEM7-53KG"^8]S^jYeOJVOgXM+196ij=oI`fZ!JbB@n/t:8pYL&[`7hT.SHB<2c?nEi0.J)EN
%F$%g<q'fQVK\Ir0=e3P6UaiN/n;)so^T&9i"X/lS967?gd0i6+ETfc9*P'fKoTHA!0<`qPMgbCD?0j%YS8Kn#IiYjt$jBQdK+?'0
%%9N$QOGda<*jQa,7MPIr#5WmUUnhLrmECC/o"fh5C-JU,%LF*1=GZu<qFd=l#iVSp"$k==T04I1QGk)Xg2T9t<'BTE!o@mX8>:#F
%D1]f^92o@^&$jiJ#")U[6P<9Qq`\'8ainT$rTfGG7XlQp;Ua&XS;5AL;)'t+fLT02rfttC)p59n28/d@oHLJ%[3D=LXQ7X$<%jiQ
%DXLm#*9XOfbKu_K\O&+i`l?[pp0s=;6>T3PBT*Aa-?,\-^cCfP5QdT#$34LFRLf+K:K1@lIO\q^,`l!sl0'FHL:;7>Pb/DX[b@r[
%?199NI^:^#7uaW7p$b>\ET6Bj5-A@3M=3nOd=<.o/I5(,dV>s)"&W5%9m[TnPL+:=OQVAgiQO=K1+4V6L&-=i7s.=ILE-D9?"@3M
%ATJV0O+H_<#r()E&4,oZTiM>knJ8CIEThSSRqHY8@)<+5PBgafWuotKaf^cBSO-=kNc$9j4'?rq6fuE>8N5S]"<B8^#(DIJ0^l)V
%@n"GNBYU,jh9apWKC^Mg?;%j1:^YX19<pO#%gkQ`9"Lu=:b\R05?eK1I=:9)UqgD*KfZ-r!\trp[%X`"cuC:n7)(fI<SnlYltb2n
%cV"M*0SN)>C$d?h4-8rm:Gc=P;%?XgnOj'I78A-R)#2@sA/NJQb(=8;eW"Bt(0eBs8mFZ/T"HEZT]o*S1"N<OFB_3J.[23=-j>L!
%NOI;Q^s#8(-V]t+(H/jT<"4=W-o10=!'3'>JqYDYh:`hD\q#b%1^TR!Wp:6_4"\N*.RuTdC]h8Yk`Y8P^85;SkL&h5=f8M&Fp[L7
%;`tXX1t<'$7fZ94qH$RTC6;^+m6p7^T3'GR]SKbW>FmIBec;B7[1QVjnT8qp''bL'A5AA*V[nS_eW8G,;+]E%(=2OI;+!@`lmTJM
%Xrh0I,Fo7.7)LS>ai@/4$g=BuM5_MqngJ*OG?GM8dINO*9XQH7i(KSR"=rgN+D=9KF4H;E7BRY[d#u%>U4ose;n@mfkq[erD&KTC
%Q*t+@Vm*9@o2a2i;sP+:(=H<_r]3tuj/>Y`j,p;i=Yb`*34,\)f?mJpG\S4_BaWO5EY;p:;gANCW'r%mfo37D*TtOX2AQE1e=)l%
%[XTDV*F:oRQpP@FQJ5p9%XFcncHmRGQno(DA_@U&8t!C1)OrU*o.Nt5e>(.V7E3Z5/7O8cO"!3JVU/9&C2P(hh-RBJ/M:6*?HtUc
%k6o]'<4C4Jf(,c*&"pI,3M/sNQL>/2=ur^S&'rT`XQ@(2O"iVlS56b_mn,-:4Kk7c_l?PVLF4RD<R.LJbBJZ,/tQ"eVd7In25&5C
%kL6Tq]>@2WcRJ&+Y3!9YQ7eb8cDOska/QK<bPAM\q%,o#U7>#kQB*!0ETMSr"DEbr4<].rCuOUrI-Pi^^BXOF,X;dLV3`_3[+;\@
%\[7$[Hl(`%`7p?Ce1dcF#nY^)8*-pilkFp0U]IG.8B'2i*L-@>VQrd`19Gjfc'1H3SO*d!H<FQ(,<Vo,0i5f$G_?<QXtp@@dk4m:
%qh4(/Blm!$d&#-fNQd,@[XRZNZ."C3S"1R="Pp9L[.?pMa2:0"8cG4h5)B;o`clTN$OlIP.N=mu3fe13h6Hc%8oXl6G'A&(q/Akb
%Y<b*>YO'PZIYkZ""LM#s0fd?K5n%V;:s;I^=)pR.AS)+'0OO&Y@N(G;")>"Y9JKfHg:-]*qNIUToQhXR$ec>\7g7USfTOYi&5+2s
%.Y0KlX:ZAeDJ;M8#RQ]]V2UpA,H%^0nFAP+ok9JYSrI_`9jr6q<5FJ^9qfKJ;l[T`)-p@'9>*fT<\;1NS(W+UpI24.qeBDm8F+LY
%'j">4Q[*M^VGJurr<faL5GG#O(A62;#WBdk*L]`WO3rumSodVR$i]?ul5sMT$oIXjO&Lk3;u^nadJW/mPK&O6__NN0<,;l,:AKnn
%1UeV?'e9tMM9FaXl(3Xb:]Z+/7aE/El^ZIieWZ/Z5H'ffCVV%Ih<PcILj$03!8iu00Q)r,+T[\[&dmg3aBVtY]%+lr=0e_Z9=StG
%3nRQ^E7@k1rY3td9FBu]`,Hhc26*f\Y]lc/<9tJ^Uk!8PLKUWT#>D1O^n,&sQ+C>Wa\I]X='2;ceA>0nBV8%[$?.tDF&8c8:IbDa
%QXq0_-_5(OrKL=6^:<;/.A0<`_s:>P`<kS3TCR!,+H6^dkq3P*K*1#[+<Th!kXkVm,ogs*fWCpC2]@*28J[ZO.]qpZQ#P`MZ#1Qu
%]ofp(d^\i':*.*"APqVYD_Opj5+EY,nR'?'f1MX+7+`@K.NXV2hPeHuQ4IUuDnt94G)_^uj7R?qUGl7Xk<P_e\9"E(YSbZH"X-[d
%96r9'^#@P%DQTRXoYs^MOC6a,!Zb8`UmZJdP8VeMI&30)BriIFqGB-5ip)m<ak2Ns7&kPCLDaCsqq&''@TETOSiqs6\uHXdL'Hfp
%b,$MXVTc!"#*U5&b1L)WKJ_8*@Yp_k`+=?mSJ".3's3oTQn?8+Lsm5542D2u(,hF4[+\-<V#pdMBp3JVK&>'<!`'fbhmteX1/I&7
%n\od?Y0>?i]=qBYSh?pHVD=3l%NZ>I*=k]Q1@L$0fQ/P6E#T]GcF\10hP!k]1bnR"aule*/)CQF5\8deI\DtBHG!'c*g_.*0@%1O
%AY.'">e2[da'2Ks(FllEQRMce.ShFAh/MX*!(@g53Xqlk!bg(0U]@'5_n`.9U1o-*>eXO]`^!?1nrQZ"/4P/c0",YA'Os$,d+Lnh
%+=Q#S`3gu$bB$X?[H[e5MOF3n;QPG7Soi-,A,\9b9g^OWd(jtoS9<Jd&F1=joZh\9SdK?3Q*2;41/0V@g@f<l^fA9OcRNL!*6iB'
%$QXAK!9p&.A&Q>TJ<!lqb%e&$OnI@)<K;=J`h;:OTFHoB(t'^gfuR&<^^(G`QJc[O]A5FbBcU/YomCAH1jloKOmLgkMe(]t<$_A:
%H\!ADdc.f2OXpKSR3Gc>kklW-#j!7!ZET9_s.F.Qm\";4)-A:*8&6+d?]q;X5Zr*:*dc,a@5(I/@!-a-k6`XQj[msjO^''o0TCDQ
%f\EDdp_P@$_j2ZOQhQOTjdkgd*`\H&*k]7$;')'7Ti8+>G#@*23Z5B,X]l3[E.b9mN+.cN9J.0_^67V`kb!<R-/9Q>0Zim<P>=@T
%N[*8]iYKtiJS3W?SYFqaMIk8!+/,dN1NB6p.M'_e%.""/SNI;a]+=/A/%&PcrMjX9T4I,Q9A'AB]@K`$'s79?3eKg$+b$,t]m^t[
%];Ik&Gaggs/;=tEpWUq'3,*R!l>Q1Oo`i'R]kMXJdinLc#+K5LT#Y0!n?qFf:-%.4kBNp#pltCX4glOCpH9g6G;UIn;d*'!\$]MF
%nLJ4JAU!jaFa^DrlkaVgC6dUt4fVW3:#md+6WR0UFerF2f@;@_1C)I8_OJUMXF>kM$IoOB'':j,CZSl#FUY>;$9`VqpQ]Ku?Z>:(
%]fA#dV.^mOZF^Dd_g3WBVspa_?L2klpU(3?=Sj"=MaU6RFinJ=-P'6XXQE;okZ*VZDTuWT9;-_`Rp*=>4U=:K`"rUF7u#_tXgBX3
%=KSR!H=o,9P1fTlphAc-e=qdL`ma]O$sn/4ANEjBk,b34HYD3cDO9qlI!H_*UuJ+!p.hfNC7ImV^nQ:U=%`!6CA!N<p#71O.r#Rg
%cP3.,k?Y8=mF,C5i.%`loou?"B\9J"Z^asaM$8]"Er*8I89+qmmWOe$X(NPkGJqaPW[#1)^C*j+U(nmt]M^d"mc:BM6[,UK-+qOr
%'1],C@U'4e)Bon;-WRpH:NQps<nO>2I2j340i6N#j<Z40mER3J;l]+][@pALlr/ccEWP/m(A91Woq?MLftop!p(@#L/m$]'*q$aU
%@@pGD$7;H"<S44=$$hrU5,EZKQ!N0d$N$Xjb#\1LCoj.1fVc$5Hg/C2NJ`uo(A8V/U[-.@4tPSuW9R=<?9P?n:J!RO&ZCU'p*oY@
%htk&`@@pFtT.Hc'&qta+F"",Zb8'_"J`8VH03Hl)<7RmGZ#XGbhoS8JY-:]_BGW/b;l]+EQ=pI0qin,WY#Hmac7&$XZ:V7\<SusU
%p*n*)9M&TkYYSu>L%RS^>1b2+E3&<aSljXC1tV"3.jl/,iNpJkb\671'+=\:Hr!b"S64F!O[H?-YLEs&:+bg2)U]@DEfum)$G1GX
%O3$Gk`3op46h[%Qh4[iI`cpF?N-n%KNB4cL8looO9TDd$ihpF0>j)s<Ur!jqMC+*5;X*$=N3OiOKN,];:Ua<\(`u!YT_7a>FW-a`
%WOhq+:@QlHE_l/,?H#)KVMr<.)-PUHqS[`S7YQg+WBs)\)c`6HIiY*WUb:,KggrN?Cm)i_<.%KprI611c\Z(BeN=e'p:A)`s*.;f
%Sq=:%s'qfDHM@FWXQd@8&`IA.reK0@)Ya7L09oGGr9r8\jGB6'.0h$Xp\u7:06MO8hpoPok=YLKSWH,=e-'rS4^[6CRZsjM4En=S
%O3Q]rc6Po$'72aORcmU1^I(])e?.t6b&BI$],ONCfs_)IWb*.k,f&VMgS^V\@^nN1h:SWh5\DW>%8nQiN1j8?)jBW\3:)Fg1b8uu
%BKh9^G1;6YN9V@b0@NOM#@.dPa3p#?[6bqNAQ#YWf`^JZ)PFX'/1Vs!Ql"CH5u8i(X:bmX"E]S4<)4KdJ50:*#>frC.pY)(=5)]]
%e.5,-Ed>@2g@pB2+&r.:d/(@O`XC.BBLDM=/(f7W8`Tl?du[tTPaO!Y)_4<N"*9)VRp):[^kt3Ifl"(8q.fAF)@@6l&+WRm/<"kf
%kiIi.Qb2&C<E;G+WYB-KO#$-'gaI7\h)RBJ#Xph'oGBh036$IPFP72];Z?q&d`=m=/hIhi'SR0WF#Jr-9m4#f_/BZ,'W2*&:Up-p
%0f'!JqX;AqLk3.q?/Ku&rY[QCcb9(62q:p3r]@FX8*/UB@pRk'n,60]CXT9`c5G5"biZFYqW-#qn,8FRLc)5]:V-;HnF>nbcel(p
%b9./mX&%p>%HH!QUd`\='H$\VC1#D0h#6fd_%]F]g-FJLDBU?6H7sRIVZJUfr6i^N6@d@^p-he[m<O/gn!iImFt'4MO/]iXaP&@j
%MkJ"oOk3JOB'mAhZ<(n&VAKM9b-M,Df3")((/hQf?Br**;m)tFWg4U&8,G8@1[O$%BN#!nM/r&kAU+>jEs'V75Ts,H\bI!34aW-r
%T7>dGW[Oj6h5cYmWG=62_[iDER^H,8>)WQ,j&V0Er-X@]k?t"=#Wi?!\r1o%h/1`DT#rDfKe(iEpDT<2kFAPp8@4:\L,mnD>IgcG
%;+<.,X>ar\O'W^:5d9'#ISm-1DA9[[mp_VlJj*n?11Ic]<a<Ydi6t:1+ZB^m/]1CH=<#3o$pI'@Ygfl`s.mlAU%\SR(hQX9U"<Y.
%?455+.jGu,8Q$eRCrmVc`/5C8H8V7IMFEd\o+I?ne]L!ds6Wgi#D?b'e3na!T1chc:>sbiTj$hhWs\BPPkd8D6H&D86P\o=q9U(\
%@3)>ua8n-PaE+50%9H^X\$\tF[E?-Q.J\>('ZMW'b]@1bJ60VTE>Xi,-rm?:+\Fkt?k$8BlV"7YKGC/2_pp/bZkTqLFf\%+G=r[O
%NOFV?=J/;n''Rl_>-Y&9A[\d6ZP$;hL+PeeI<h9EWMQ@PIe8Jd$qL#>Zo$46]3h]d_FCA9aSOZ9\#[(_K2[g-35l1sF?\//Eth9Q
%YV-M20SMZbY-S8UB-9:"F4_4NPWj+(\TT,$S[!c_dn;>58`Ni8M)hY^Xdd^U),9lggaeR:!\em'm5'ES)SnF:&GSlV@N*.(ViRA9
%%5:o$V)G<58_h`EO)q<^@)nPQWF^Zfaj)"e`)T=iJ>m/j_%GrZ_Ab',"?*ga\hRLkW08jSfkJI;V1(hYZ0Na>SjpnGk:dEJl@:B)
%m`AdgFpUqhYC4^!dE$1F]fRSW-7)jpZ_a4%@rrAHJ!k/JNlQHsGZt(ZLJYj67"-"\W?#eeX<c2,&<mR%Wg4pq*'n>@*mo5gR\!TE
%f?=7O(/L-kU6(/"6NcUTHdme(9ttX5:O:s.(mtd7<Vh-e'.10uds6s9W!gsFj5>DNQug4^rYpd2bTe)&]fP_OUl(:T`?(MD>A"17
%3Y`ZCW1XUSO;o"C9tDPVg*1m33k7;LdVGLs'S@6/@n!;ASXoUS$jKCJM#h`1,sA[h&Xu/@Y,((Q!etJ`F`74=Qp]E*Tm;==/JU%b
%&^5eXE#(:\'&"kp^9qID*R4@_7+87b3f7U;3ZeMj;r%I;M.dfmE<fLfd`pbb9+m5QNHkEH#pkGVjf)RIGboBW`t9VSdS?am,@8L[
%P<Q8td:bZeY6\*U,W-FZ>r8Le[rt/2U5ISbW(0g-fT.FPe5nMBfagT<,cZsuTH6sB5TO'lBZN?$Dm)cgFB%@b:-G>_-XD.#*nNuM
%(#i-L+2"ZdGG>X_)_ZD<TjINQ6C/FEMEkNtS8h]*>c.HeQPFNaePe+*1jW;u&@VIK0.TG\#.sQS?<2kphZ&4p'e4t\@(0ggCIaLm
%c#uVG<%ImT6Qlp,g^=X<<`Qm$nCVP=eI)m`3S!DJ$P-5BGDT8#`![+%b(2<siLtDqi7/!+[6bZN?Jnd5,8VC>X7naR_F'GN8jNt6
%L-Fk=_kcF3LR@+AhM$_T(6kA9iLubnUph?c,f#priM#u'Xu,VA4Q=4FmFr+.@\(PFGc3bNel9E"Knm7]Ya;oi;#=-E:8XS3iM#s#
%(//jr$.Q3r*boIS\Xdp7Knki`Vh<_6(&aV#/j.Y/bJM]1cb&\n5Ujf$/j.Xtm82.gk?`CXj?83p??dlP,/<O70L1$FKnnsXC)i\c
%>^33\+2c4-o.N5UXH$_1eLsq)VLI8CmLbt3iM#s/&$c?kET*U7MRR?]p=K``eV_cDXb\c+/c[^K0d;_]3[GTLeqJlL8:bh74;?FB
%n[?>fR*DTH*bn'Q;SB!tr/qHS[_q]/8R>C[FP1Q<Z.*(^(ER>Scs@%A$OH(gZjRDP:EC)gO#&FO'FMSh/%2YNU*\hG:koi.)N\["
%\F<>l[_q]2Fmd,a$^>-?\a[t%MgL!_%s]SG*qt4h48-NYh(&giKZsf>*blF9I/\0#kP5o8.PdE2gYmE5mEMU"KC=/YFlB%&nUkC;
%S9Nqc88tERi+&O7WYZ]t?]09ZKnkO^"Au7+Z#[d:LSnd,.9q+BC8q1I=!;k_KnkiaG];C\Mrk'W*qE<Rb-rC31@=uI&%.V"=QB)V
%(ER=<pH6hU<d:HggYiaL:+=TO(ET19HQI=gTpe)SD`bU2MIKW`[_jWKdJ>4tGc6&F+_PhcJ)R)EOfl!Q52j@GmFr-Dlnm`k\sg)K
%i^(Yl/j)88Z8pm\6e0jX)aMiRD_5W`(EOL;lTG3a6Z$+[6E5'K615;#2t3<JY2IgJ5oPRk%d#>^@f./9aWn[\2[t&9SaS3`U1?ng
%0Ws-N6=+&OC0=C68G6b'/"?mD5!c-bl<@:lNhcZ>/30\"B,N%!T;?qI`']uP]JV*AdZQsl?r^:MeZAE]o?F3!edS<CAm;`$21+e@
%d]Ric2sO#RlQ'&J2I@-nr/Zo[s*/!@iUJ3''gZ7kWt<7:W/%=9T6it;3M$f4"[+.M:];ci/C.M<lZP<9>/Y;E[(:I.im#rX'CY?j
%#Os[U</GM%4XPJts,QmJ[r'(XPPp2DR(SL5I]h_TSm8Z')J7lbfXJ<Y/[Q2V4'6?7o?9\#C?[`>::7gm-YDQ/9tPQhM(^VC[79]F
%FumCC=JENB]6,j@.0lTVe\P$CQZ2LaM<;Ku'6sLGdt13M!#fpictqPMfCT@H>[&_9'5h\aam4*X$X>2o:Snf@0$**k=H$g%oKpKJ
%6n?!i!e;Kl?fF/pFYM%Ga!D5i@&sB!gQh9_;FD]"Qlugsi<)rY4tjCrDJ0$.C!@X7jDWmt(O?!&I"e0fMQMtf+nDaS&)D_+po:]*
%AqWaBOlS"0Du3FkdUIhB[?5,1Yk>c?Ak1i@@.sA3/Q`4I1LK;h5-s"+9#9C+bcVc*1TUb/L(E^sT!WuXG!EB-B'6?4N4&[)iE2S_
%?^,Rs+aQjDZXb&Kaj0`H&e;%1MHA"1R\3!=HA[5KN=G-D9Tn=4lPI,3KPtbuU=]@qdH-B2ls:e1$72L=qt*6;_&F[*Mf<M0Fg:80
%jPkWFffei*L\k6]E%lf)f]@n[h^IFkQAP6S?.l(shql(t4P3*5IO;rBnGsO1s54B]_4L>'ZZl>RX@IY'A_pe_q$1K'p]/rWP;N<4
%8dZ*?@+&p.KWfX`7))#En7N_f1$]V0j/@lI0;,l1$$=q"$NRInW3>U7*^$Bbkc=a_eI91C;GI6X&(uu!"_n3"CukdH31W?e"j4di
%OKFcR&5H4Z^U:'P7\nj2(PAop#d0A^+CFNRmsAfnrSZKYTYE?mKhktSK6Ko^3Y`0#Zu7#12jjQj]-le--Z3FXQ0ku@a9R/Jq8l7\
%@f$?'DL!%bf>a((00d2rL]oC3Or(C%MiNS69/KNtUhk-/=!$1cH/B8DX\JA&gn\18pW^E[09s_FA'qW'9\/G5KVA-[-6#oIO@jCU
%fC0,pIJ%U85A1_kTMfs+\J]dVX@;IpFK&fX9Wc./^7YE^$6U2@r6FU6U^(UUn?qZDhOT--r26^=Es&(4.nO`+c:<?M=kE$/'mbn$
%8*^!9pP'X3Hl56p`h/+_,B:<\(h]b?68c**=<gpM-X#(TO<S:l`#[ORIUV8jI"[RMmFkkIl]>VE?'c[lABGBGoh#/3L_AGCSQuIF
%h#.@dh1;>h#'[2$dufTE>9:sdiVVjdMA32m[^Q\Z%n0P2bh#q;Q#F''l,P\je^<TNTi$Zgo$aD./9F[oo;f*NC8D@mABk8`q:7Gc
%T&8q*&DbCRXir(6=RV_ka)$kpHWDel:p<ESN`H^74FD>n<q:g\PI@6oa#S''IWA0Z^JNp4(dR3`UmKmF^@l_4K9g=-h=_YB:)>9=
%iE`TadFhZL+`JB39:<QAlpHubN=Hp0SnXqcS$dHH2Y].Na'?]I"u7e1TG/"3hm]1!%p8lrHNe*"b^l]]9*%Rd^=/-\,ep%,#tOUN
%F!\`+;YGI/*_Ab9Kcku"7i90h,iNEiV+;@X^EG9sP:ChNlkDqQ@&r0f('K5Sr=.W]`em\?7"GU;P?D!g"g[2<O:VC@6AFW1l+RX]
%hMY;Jph'I4;;3Gd2PMK+1MI1BdGR*jp?j<efN7GhRP':\0NT:mS&f-ST<6H'Qe:[d(X#rqG<,\hU$J[tPIq&pWCA%G%42J1lhW%,
%ojBAjpCgs(HNQqLXE/$:2[uFG#rM#H_$@\i34W?RG^m>i8A=EU<%S(H)=qK^]lZ'brQLUC1G\Wmp8)ilj_S/B/]\?563M<bhRqT,
%F,);S"pp(X9"]_C6[X^?]$7j!n'cBbou=r7-o4XXp?$)a[oBQlqgFqms$!_^d;f>&,("Llh5nAsd(o-B%\qVso-*BX.d-IOh?psP
%(R^.Fbj3sbB&h7tR%kEuEdqkj3JqK9_(Zs9Fq7764GlJOKbgj?^I$LRV%*c+cSBRRrC'*`d--W3TY?I7DbibAJ%X(C>kM@,GW/DW
%F8k'l#u=Ed%Tt\Toh0>ZcK5S#1,c,h.Z.!4G3=IOPN04OBAloGL?&:1jt;pi'lKF=bLZYeX\2?ccuYPTl09Nk!CR2ukJf103a.bP
%o9V%!N,DZVYWQDKi`mSF"cf=f;1\m,(sSV8m1&W7W8+V'Y;H(hLCT#tdF"T&D?.pYUK8AF5L#R:66Lf<X<$`2WJX]D9MHcp]0pPo
%033TsD,c%lIK,Ze"jII;Uq&rA:R+i*Ht;Hd1Yl.lra&_RMi1X5'/]M-!1K-j]:#BZ8o0:SQG&7I=f:b.fq0R12VDnYDHhPO]OBP1
%9`ei+K?O663<tD<5N]<6*,F6kNELD>JDE-8BL/=g9CfLRbU]B!KD1_$Bf8;`njF8!22B]8R8VnWRY,;!Q1>./q@T5ECA-[bZVKK@
%9c50jm4;1*Ok/==[m%?`)=Sf]Z22Je^s<lU%,33^YqnE-^kr5-:)5Q4d+86iC5!:E+m@uUiFm`hLX+,eR,(a#RJlDiAgk"K1Z*^h
%?j/TAO5PSEJH<+^)e/tEgh'@#e!2tJ"DiJ3HA7#1JN/VsZe<tEb.,pASlRO9j'hgS33FJ/Z-BC+eQV7=O:)9-e'7ZK4]hUg4b+ET
%>>g=TJl`4's,*#uS)15S3B#*jM96'@*-I07[3"eZ?lkd!r-,)#<ALaSEg"Yd\9k]VMNo+RS>l;H[$UC8^R=H`DDa+_fg)VobMm31
%$3aAR0I[H'G9d?Nl#Xa3PleeTXm_HfDKOB@WjST1-l(!Q*e"FGTlGDkUI#nWXRS:(NAt7s?IiOD41gE1i4R`3d\#qs*Q@V@hoNEK
%U6a8a'du*/eF")ZEG3rl6?j>'lJP1!.>/Mn\N0nZ#Z*)@p(Yq6Ma5,FmYr:G08/$W]6RnqBj<<W37K?VZf?BPiPL_jOe4eooq0Yk
%VhtNuHWa;Gnij0AI<.%+I/c8m:T](ohZ/-H*hde2[U$NFBD'NSWfFIjoZ!sm?m'8hf/`66%A3T<_8$KonMQ`7j#QK87K8MiheoOB
%\/kVo%!tT6k;VssN2s99/*S71/9&fo4-A"&9ZY]#B#[XlbN=V'G2a_+dbl`,=L;Vm3@:SR!TT\^A=]8NC4PHFF`uckEDA<qc3u<\
%\@:)d'nZd$FHFgt7;lco?@p>7ANJ.OpP)58LG-u-gq>65OERg;[bQ4<pQ[@b^7S?ajsH[4^'<-_4kY_RXJ:2-GONcQ$dJQf7gp/"
%F&3c.4==70C@)$YQO_Lq)1'Yn^2QKXE%pCpbo+V982$5RmQ^/3,7C"4eh.if:`;BdcLVQ+3P:OZd$tre4>V#)ns7+cXaNMumA*RM
%J/Tb>rj/ql]=9nn`]kBP<H[i-nMKfqGaeU-_[Bse<VWtFPV8f=gj(1t?h'qOhIWVD0A>>ns)i>GLr$'+(O4]@.3iY<!1p$%FN*(f
%SY,0/lVH,oS3rp%gqd*aF_m2_A!9rS<;u,KDn^0+dYn*c0fKGf!e=O0XneQ+EN'\#jRcQGZe;Z@o7o[lQm-Q3bA$I0a*CmLUJ)%F
%e*cZ5=P.G)mlri0r.a8s4SrgWL#Dno2Z%1Q!LeL_p5diQ3bS06e-d."s4HZ[ZVu+gm%^OmL!;hBqe3iDJG:4WI:L:!k3TF/^GO;\
%R%/k'BJt"',FVmn#4EIC-rg5acS$,f]d0Qp32j$u%a:#?YJR04V_H)<)dF15>j++>2Jj'"W`kQiMHBig&HL=P\*dC*#/c_>^<_]A
%.V4Zar8JR?D\c":^;rC@CF;;p3:W;$iC3s#nn]jCT+"3$>tYPZAp18S!jNkM$?e>60E2papi#17,k0#uDR.pfZB^C42_^"=0DZ+r
%:g_rubdRE(o%AT-S_Sia,D6jt$25BeM7hf)&$&J[PMRLqpdiU<^-]=)"K0PpS$S/]JL%=7L].54$Zn7&":n$PJ%JbZh!E9pDSJ39
%rOCsUVkX\C=SWt\=+'Q7N&+GR^#Fj6EBLi-RsRb7?H^YF>$pX(="o,1kfuL?4aU$V98)*/_$3h?3dfq/fRHj(3jb`*E!]H)Fac%D
%!De@cM%Lp.53h],n9X0KG%!k,%aJiX#IZ_gfjB,,Z"KXp,&gYpl\b`]G$=P&i4k;tI4SEK\2rf/5j_,FbeSpeHm4KXc"g[XV#uqG
%I#)mK&$G5j.a6hT@t_KdR(m4f`,h@o%#6_LI/m#+Uj<4RS0QOL"[Jij1*#_'45l;Sc]_a]%1EB!iX/\h.`1\G3tO_&3_s6;ngN@J
%*l.jc\)[7+/d:0t!FTd.j'Z+WfXT`e0T=;5gS4n%-(9KCn:&GeGR_lQ5P8KpErc(2<I#/(I4f<G#upu<MlRA@1dFdcQ-NPkDMj2]
%ZARsaCFMGZ-+J=tZ/,)q+0Y4dn1?)'4#rY+E15@fHm]1B3N)Ze)<D-IpF1+hEnCi)IG_#/JoR6?3-QM1!m!'nq5A?q_/c!jYJ9Er
%J\.h]MhStmK76B>-li?,lPhEb;!rBdiK5VS;eC^R)INr'7VbIA,:8J7&/,$Tk::8(P^\mT!m30BE,9PmC.n>RGA^QgFJ3t%Hd=KR
%msDV[H7ie+PD:7DOpAt#+h%#H\,qkTbIlM2haCB)POHL(>bt;_??)f\mCA#;Pt#XjG_Kn=J:fUG"aFA7gA(,D/Sm9Z?Y9X._;daF
%Nroma'pu;+2>A)2nY%,/YUu75Y[>/R1oa9Uq6(HgDlt:bS!rhh[#\<j8N3pN(*5I*#MGRIHGFRTUDn^V8reRk]_I-$h,nne?k5BO
%jXL5fRB=7NM\Sllp^IDqYnF.@G:5TFi"%_#a>2(*^6\/S5g]S;'WOEIH"LPEjIgiE!.T!n9a2Q">;n2V_0NS'I;nZp)ce):Te$?=
%66NI`*1!Vg.gL:nr]tQnQ^r_$-t-\&c6u122St:$o\s*EMoJKJ*HcI&EM@S-qY!7?UX#G@,Wd1U5k1g?iPQ01!>0Rdb%KNW>d&,o
%P^Ep&Vo)jd3u\9A]Jn&^+mK;d<u-:D$q32MUH)--2iK\o>j2_*Q8b,'WSDigA2ue3X9Q42McYf5[/]?q[2=0Z^N[X;5YL4<$*:U`
%$aMI4mjSP5h$`Zo>>r4(Kj\9VmHYb]Db"$iYBRX\p,bJ7&KV'Or?aIl!B-D82fi"*A^rREn&1Ws%EFahA(fWK@kk2sg5_0r&^KsY
%`=<L=[jNs1Rsg]ZjU*!e0-@g;DlM=g>GZcfrs3Y;ErDEQcHin6/^s:Y<3siQ6>g3LVX)K&>CPL%]g;1Q@&"]?^2/#&$*g062P*t5
%"XS^nh^oX7@2I8=ML2Ht4'=o(mM\i"+,gPIOa)J_:4hBto\[FFqlEJbq`Qnj,s,<G8oNlhXd,D]q)iB];)usX$OL%2U==f*k5`8.
%^$mk?[_SmQF>OHtUk8iCnd/mD1;R%$_fNim_o;sh115m&QX4-3\&\7FcPRRV*Ji_&#O4&.Y.1,jp?:I*!sOuDpQ/JjTRFY7fA&mZ
%$au'o-G&+B@MJp*?X@W'`KU`__'_2e@89-*$QaJ/"p?<IM\R=@EXJWY`"/Z0#[A'L*fcT8rsd2<E$Q&O7=pYXa]I@QBVrqr-F8uZ
%IJ$,.l47759TlT[dCR-?FHc^M0"2niQh5$*MOAkV7^cQ^"EX3S4egmCE6c59K'`)J>f(%\i^]q<;@*pWAocpFEF,s%n+sRLd7MIo
%%;hTs0<AY9EI2X`0R*!gm_Ld)p<qM$^NS8^%N@TsSOLFK1).uU>&uNag#lX:PrIA/7&EHG]32e!Gm1.6e[M(p:mG)L4a0,MhieXj
%`j*0nAA?9F>lNd<eON'FLW@20U1seM9!dJiAC]@V:Yu4t$6S2u3'>ifB(l";]*d*A2mQg7617\`'V?#!AO+ZN-H[G7f=tX@Z9lZV
%fAQjEVVOTXh8?@\i9(l)'m(S"e)ijIfg:"h(nK*oLt8G-87*3H]kHq^Kf=EbEVnMFVuOK=amdJ%@)l$TOKL7<$lcNsOsu1k44jTU
%)8JJS(E)nRn#"$DCi&cQpkpk;pGd-A@(Aj)]YLb(ALEWVh'U5r4BB`BWrs,L0('F2i[]]ij7,JPC;B+hk>lPejgDBaoRl'f9'h_?
%<P7\_(:Lh5YU=4/!j6VXr#*>SD&+a+2_4T,'$>4]Fmt,Q)9o#d5H(>Up$udV4"*C$6SG$od&Ho,i5&r_P<lnqfT+GH>qDIo]o@MS
%Vr>Zj\sZm<Yt&555+GoCq1UAR@9ZQI9u"JShtSH-.W4Uk$hci@6/B^*G*2gK3S7,U98bq56W?u49B+c76E/>q\,l5YS);%-Lt3#J
%)U2X&0\fBSR>]_E"6"&!%t6L\]MDt6>!Vub8j)WQ'&]&.HVbR(J1o86l@]d9M=E&*bA".*E2ME=plLgBHCf;cTCSTb0(ot0oA.?G
%I\SY=='jIKd/1,UaGk,Hcjr_pmb7d9,R\"(!(3g^@cn/_g!)+Ss.f]PMk?.9W/2T3,TPoeggNJT6&=C(LL%E>2c\tWJqW0?'^QZ#
%IULZi3RNjq9bZQab_^KO@d#%1R1ns)Idc!h.<D4(_[",eO.a?Ybe\S$'L)%2$R3@acM)t3%n]IKMDp+Lg^Cm!aLGbbP73YbDhp[f
%UAX9L8c_VrP*\F^a6$!2?PR`]XnXg@47s`N67)2ZC0oPII5qG7\&u-f9=H3pM$4eUA2YQ9#T3#uK#`d:(+d#S-a3$/:\YCCNOo4P
%]Wj8o6V#eBmt[n6Vak(?L,=6ffb\fe=X(S]$bM`G2RS4q\<HAf_A.:?mNjo(SL<.=)g@ARnkBGX3#WasQ\Eih^B,Fe3$$AC1.R+D
%S-YcL3"b'd4&R9l%#r`0T6M.9i;Zo@&M0%E/5Pa)>M2=I$_W-7r<Oue8F9EdE4KdcCc>Rd)2^;6Tg%!D8f[o$.+;:h!s>)+WssSR
%Qd^]:fbdg/=oe=2bKh%sO"gW"H[3KW4O4rP3kLRhSYls.Wm4d;ZQtD9ZV_PhJuU-f<L4raZ0T'R=W\q<i+NU.Hu@4C2RT,]=p[SQ
%4<q67UYH.q^q1!TBA<hJkj;M5+3E5YVo7J31r]bUhk.F"Y5#V2P-q]#T,:aIUrMmA>(Oss"@/3C3^Xe43hHHYFg1iXKs-[#aP9P:
%!11'(S0h#_)Z60SJ3('-912N2b,q565*m726;Fnu,,6,4OO[ZoRY]E$%tlrC!/[5sfiua+qsRRd!@:HW5=HE$>AMrS,VT_R&jSuZ
%&*R@`@d%oCWZlug:2p&!M\q*Bp,oc#XEL>$5#I+FIZ4UUD'_?tS+3[LX$uUPf#jnt65LHlRcBbuMM4(X+3jkFcF-TOo64,!PnJI.
%GY-\>CI>!RA2L*])UDr"ge3>X<TBL/dk2Hb</kN_A"De;1f`S(I&uop+\gL3jqTr>rDFe5eTg5AjQc8V6^k%FbU`Sofs=&7Wprbk
%J+Op.:"=J8,21"&R]>mO@=Rnn+\gL3-C;GcToc-d4;4BML,:^GRFPOH#:hJLQJ@&ne'+DQgUB;<=`X%,>/,"]fF(-6*>;Qmd6>*G
%jreA.f.hkAG<fF<_bN+8UMjiL\3n5Fp0[eqnWX7n35?cZhd&ftMr>2^%4BfTlhE@2+iZR>pUQ6pWD@?JTAT=fP&B"gVWU'&n-"a7
%%d#E-\cg+\Zgu6XF;?lo0u>e47sb@mB^"l=Be5rF3([0ucGYM^+AdaIP:)9lp5![H/pA^^E>!d`qp/UJYTU5nS`1l\5a!;$L`^jo
%MDOZaKU9ImDMl:Uio/I$0>AFagRd?d)t6dYhX*8#8[+PT-aQgLs#82-rBZn)rs8*9r#:Zb81J)CJjJlP#_/rbY5YZ#egAgRWka"b
%ShJ@TEjO_B[U/Wp^J-HT>PkDj>0`OF-FS%-[#UXBTMIrd1^B']BZILcHeQ+.K.s.\TCuX]D]Sg+_EVj<_!cb[rBZhm^o&7fAbsS<
%&uI&*`tr/&?%Id(I5'ZW!Yf4?U(M;hi/a7k=+C!4i((X[ME`_rrb,R8iS6fI<VU2.s#^9<IpMlf6#W-b_J12[?BP;1=C=Ai$.9cO
%;!>B@\&",8V;D='!pINPh[b1?BR&Cl5LYgu8l$@A:B3tiPUOWQ(*l6'E%n@f5bTnMn5A4A'ESOPhInlB8cT!HhB:d<8q3&>b>M+B
%U^loIh2ACU00$hR<:C*d,iJuD`(Q2CBI(AKXZ&L76UV')Llc.,"<U./'H%=KgAOC=;$>tiKE?tr,X<(:_n"oZ>[TdZs-LECkHQ??
%ZGV%kq]EhBS4;U%dpGYS5_B+@=Y218bQnaq=FgEX'os#Jnoi?B_NJ]^(sI2"B3"%Lh@]Q9HLIbPO+5(BiIC]kXFI.orq!mELAmmJ
%nho`^aj;)9rVaXgc!'jC.q]+\-Y(Z$I/$bsTDgQ,s$!(R2pY6H^6\B@=1*Lk+*br7')[qYmF-=Fcea/'r:l<ZqKMi-^O;.7qdo:q
%[U-]!ZZn&'U,C+aIg,k;rU]LJd=;&HdZ`MEj5/p"hp5+;J:/?ohsP/?r[Z'Ns#aWf?=3[jcdBMI'O.VFH^oP5rE$3fmh\_Jf8+k\
%bBh!IY4M-Epl>=?laaIEn)4)(e*N$%a8Lat]^TFdIi@AGA@heNJo9!,In[m?*BtU3l)7s!8r)Vq^PJS'[V5s3G_b+Iq-PG&eoAFH
%R#M87IK9Se$i>>F(.7n_s-7'WJ#coRoC'Bf02,X7#>?THb8Sab]]/m*0tApQG9`Ee`hdqLa8Y<^r;VNZo\Zl's84f]q2a2DR>%8'
%o.T5YpBLYCk#bOZB`.HM?Yo1Dj#5N$goYrelY1%6?odQ=)1D&6q/NA5,4OX[_Yh[rD,aN?huCD_4hXhB[9lZ+4gq[mh8k%MgNrnI
%XV]<03G1ZCp=-kJDUNoQU47I]4CA!=H5uKsj/_UrDYfcLpnqKW?[(5=5'5P4]pCM?ItqA0oC'BjO5.qY<HmFEs%!)m95$ZhC4"J/
%a8[UgOA5FurQQt6?=L).\%=Kj$aGWipc&'u#WXVu^Y@032<%`i+oB=4.;itu3r:4T<WDkWleSME;p<>3gH/T,h""I+C#CY?0,NuC
%Fo:b29E*Mno/245>eosV`j\,H=F8ZaO5AdAcD#iPNu*%J(-goKrmg]%fj_AOmjM1eN>BqUHUaH9?XC9Kk"V.H=%7_B053o#je;5<
%EuR$hg\M)$N8;)D!lpmYG?NU'T:0+_T8)Sh?9l4e^WNiherpne`P/Z4k%RNP"l>N0!A&S!hf#Cs!V4b>)Jb\?O_f,bM[eqL?$AlU
%*bmSjo4pq`DZ>1#lMm.^F`4<F=6o]8m<oIZ@r<9J#L:rMSkY1S-?]*2"Yd][Y9lQUhg@,&moBp)!LpBhgB)4=eoU,>^VB1)53oYG
%#9VYiAi]Pb?IE\YY7G'>UJ953kPVaSrpU0:"=Q)%Y4114rb_]$#&,mI7D@k95\Il^gM;5rZ:u:L!:SJkG2E)b&'#/t3#^8ETH#W>
%SCf[Sa$UfHA!`t8qa+M&/.ho/ibWoK2MCLk(O1$u_u'2B(*/Dep-D3ASc7Zq5:,X*"VbC)J&`@9/bX7*`kZn+?]D#CY9I)WDXZn`
%l*$Y$?MP>45Pg3Uqg@,Nibrc6=!Y"oY5Z%Tje)RM.t>GVY'K8$Tt25^APD=iohYolAcE(2)c==^1u!S"l[s$@X-&D,7?f;612V+/
%Erj#IX_KZlSo.4*PT9I:InJrj[Y\lt@1Ieb*8L;/i"VupPReIs#E2/pLgn%.5T4@GjKS8_^E2XMGALFFWt?\L/3U?t?Nf;oKr5?*
%?R_mZ4/<"r3+mNk%fFZY9)e)2>L0O6anm[jPii+])t*u0HHEt]+o?=rgl9n7jbdbsN)Ap8.jhk&Ng*\QBmBYm*H2l``h]so&:Lc$
%6bJj:anZrkoO*2An-%.A^],g^l>I=9j;YGFkDY#DY@7Sb`c1f:/mSNEX@qs5K)5P-42.Ae8hsp#q!VHqAdHctJ=/-2fkUagf('Gg
%OX7A1H6Rn7c@%<A&DMYP%pn[1Da]Yh58^%H+V)>B?nf.^]"P79rnEKJG?IJN5B]j(>pCA1pX?3nQ&Z4[bpdkPQb`u12Y*1fPHZ\#
%3+"%PA$OlLl2H'mG]9D;kT_0m@TU=kJcFhaN/C28Wm:I$=p0r%&o4[eXt)`TEB&u)&62bUJYuNLg6]/"nSYOSWa;XYR2;"MLe6oP
%,2QVd&&:R[eQ&s'.iY$sNDq)C@oWEPo?%ThdpG8RgmQ1Wha_&$4hD(E`anXm@r;X8f>nNA<P%#s$S_<"k,BNEBt2f3qXo+mM`,mJ
%c^nl(8A0Y%7SU[oa's,TfK2$/MiV+L,D8qVDlW@mJtuh<V*c^>k0goJB"rj9f+3h:Q0;FJNG)abNkIebAsI^S31ZF<C:0IuX?P.1
%_d9M&"L)/n#iHQMV5JED7(5d]p`=^q<HP,FNUZUh4&g;^EJe&pe1I@uho?I^kn(H9DY0sb1?S_kS;V"Q<;i*me2H]pj4dngF\'<9
%#65fH@b^$-JRtRRI*5Q%g+;!]:fF5dZuX3>*JgQe>d*U'f$N"B\#'$cg*6%-!UT"*D;u=;rkQ+6OVn^kX@Nt8&R\70?@r2dO'0Ch
%]</,=5eR.ZEe`t*jDJ=OYp"l]0[Y([2j,C5,Ek("Ed#8R<,B>AZ't0L=>@Y_SS<)kbO7>_ZBl#OhprsW3B6XY6SI%%82lPok:u)N
%hjf47a8h0\q7t?jgN"Z\0N.e4X-j0'LUPlc)2_MmaKT21ni@9^5!@f</3_O:?T,pek'<:\`J-.6Z+%IbF!^ehKXo?O\'+;jIgWl6
%ft*`a[i9[`9N5U]Kki?jS',V[OkJ4&EWG[[E*a??\hRK9N=q9MMP^(`UuC-;q0fsuO[QW4VsH$bqiL.^KAPE0eqe08DAh8TbPPLt
%_(tq@nr2qo7kba9[r;iSD=]GU+:1:SK$k3i[WOpo+u7"sH`AF6VnblOK#]PW0GhOHb)]R!rak2)jgf$8/q<+rq[ae&h'?2*e3pW;
%*LB?;!G@n090/pSJG;9eN5k>Zp$ogUAfJLGDi=&#j)c>[cYVED/jd=D(C<BVlVbZ/!9c8ghmX!='/Suu-M[p`:U1BQLIt?aee?\C
%p5K$1T`d,fIM3RLTtR_^h.G0.HB->BdEX<#BpeS>V>:+%\SN^E>K+q[Wri"J-'-8W(YDXN:.//d1qq\dFWa]YBZoPl[?6dm[E?9H
%W=6;FAQXek-kDV-&sIN(]AC=PO!/7\o,\a)PPF;GW$7D)9sa[Y&(b;th<-'C*BSC?ZTg[i*oQqj?3ZGerAIgDR^8WhB'Aa^mm>.7
%Mr6gt%@,M3Z0]TZ8A,tc(]2"PFMiqP"#piVpVE[Jr3AnCm%d_*;'B1NX*/6_hnS`EGnPf6aCZ7WYXhg3nWia&3;:j2'0##0af[#L
%`7cOt>muoU\YIS3TmT]4rO"67XskaAh5_1@0ufmW)Bigs:[mb+.9[p+Mqi@u,/aY:0=L&=RHceaF>4pc,%'[`VdH*6o+t7i<tLo0
%rF0,epk(%C;R;Xl8u-YMA*i`l0k81=S)q.h&gUIhob"#F&7(<*!XCT`-HZL-:ZP^"!4Rg;ng^97AMdN'kdtQk))s72a;0+f-ut<I
%0nKd0!m:jU-G.BHOiNj_SNB7[<.3g@<"2g*\*mFgU>]^!)<PX.Fge?c!cI=]T+W%=ZF:LAl:rJZ^E"skTYI&2cNF$,/@2J%[-K0&
%""Lo[ai"S$T7/_RR[.Kt<#81q\=rSL0K2D@]?_dp<E[H6_&qrm&<Y4BBUCF@,k-K\c^8S[&\ICF0#G_g_6P0LcS<oV:Q=M'^I@6=
%qRp0/%]K/#85.#$;p?kEpii$TeJPI%AJZ"GVG5CZ$%q"WEu'AJN*0,\iJXXd8-jF&5k!<J)r\DF.Q@aobl?&^RqSW$.2PMd>;5B'
%r,1ZWOHJ1n"=uaFJS)kb5!s!60deT!._'l39p"mN8-#6cT?@]r]n-fZrda3Rb=G?XJ(b=e/N(mDXcjrUb30*KTc4R,Q6]b4jV#*6
%>ShI@"MFI?[ChY!A<dE8hrt@q_Aj4na'5t,@CERtN/6\?+gXE'TS(-Lq.6JhiHD%g!#HqOG\a,h8o^h5GBHG91cjnm%pq8H%I<b^
%cKL"g]or5N9W4q$d7e_hY#k4o$@p\NY\D=eWWlk3m*#,pc+\ZPEC;(%V15+*ZB]Vt?Zp,*PcXah(YER#rqlcH?i'mXlQgJOQ0t?S
%,ZDF@rm"`;Qdg204ht-]C'R)$^45^WSU]-*^N4O0M$?Vs!/#_Ar3]%%#gC#aY;u=^k(0`n[V6MI*'OBWS.Xu6W@nq%fDZO)J^MA"
%_-,g2'BfMsKm<'&EU:1/mF>Pk2t:Qqs8C74T(X,'8h1EaN;H"NNp(O3d9`&%[b>G/]$3VMdS7OG7SAkCKd-KkgZ'=rpY0J5R.=UX
%X1t2G<NQH@'.Mm0%d5VZCVKgr.B(nNj<qSjC,0H0]bLJW(#pU>V0ZMd"(=PC9K>\YGlOH<LXZ8$XW?+N%/nXPCR.)[T9%kWX@Ifp
%,O:*3Ld><u;rjG)Kl46WXpNeBnlg0d`U=C&X+6^:WApljEd^k7qP,j3$E2<!)[RE'TA4=rJ:>+3Q]P;BeH%k3kjRJ+PhcYMB:aPF
%e`bC,ksj8n7_iYq-]d@&="P=YaK<,kJ4Cac+:eca\f*HmNi"JThpf3PL5A&clD8Q>h%F<D0paZmmZJRGaI2HWfeP%jad8JI6F)tf
%`XKXq>@/)([TTAJ0,t(=[t"G1s)]`?SrD"%1F9&9kWi[%s!#BWc2662dt:!Mn9*Dmn=D:;D6$PRnJ_5N:d]""bGO0g$;?47]:%db
%YYTK0:C"VAHV4";;3!o&j2ZtiIuMe;7hpMrnSNX@0?&%30>A@XCHjI`g,)P\@)q_S%9rgJU+Aq<8V[rc?amiZk[<a#>N?T!1+P$/
%JI7=!IkVuaboR3_ac,H4dRtI/:%Dd3GQHI%Z<[`0Q$%M3*J=,i6$^+Q;eB/h%Gdail<0l"E8Q8kOfepm1abjM?MhEXQ"?Q#;mM,L
%X[7j!7PC/&n&=YB!sG=N^_>qC"8tZ=p1+!D\'RBYL,BgqiTg<l>Eh8LZM=?%O0jm$0R7gW-Tq3Glh58EZ/TP_9ucJT7/ep)'\Cg\
%0:S2DK+`7.*F<aEb5#^qW<;]j"3!a)T!);aqPft%%UNQ.2Na?iVQJ*6PQ3o=0kpAr+X6O48bsTamWZF:df4",b8=TG;oJhCk>P\1
%B1nc!qC5iersEm%nfEq]D%mSM71@"q"%UUBd:Ps4gPb]*H"CNS?V;Id:^o)KW`SMfMPuM*OBGa[jP.9Bfdo2araVMla3QJhs#+g4
%Cj%U>]qV\3?k`)PT(hX;5ZcQAgTTJhQ\;;=F%*NChP7Yd,5RRKLJ"2<RHPUd.RGCB:4W'1L$,&lXh%6&"O[+9/@lsdAjHIs@":Fe
%0lQf["4HC[q;=6dG=V;AQ_I_m>Nag#B@s7kh2%3&&,"S-%*!gF[Y+j1kNc1;YTs!50h.,Hc$I)r@fVsPFW]q^g*V67mAV%uC>cK,
%Wj3_e;Tq8u"SbA1TJ-?-Vj]^1A_YlblQ0O+G+iSo3fn:7&3=%FXSA8ubQ*B>dT6[@0"&oSDdPtM?P_?*n(+`'6-\,1_@4gOK,5Cm
%_DoNY(K:##dm.7p6&lu5No_1ff)kIEWVcR--Gf<Upbi3#kYqS`G'F.W?2IdLL+C?LcdeADB0Yi`a"#;O8(%^ss/R+.O0YkBJEU+?
%+%2[*]UEp?di//As6q-0dm*bcs6%u6:>(G-B"(<A[(@J6:dmW8PTgF.iT`(hb6\/9],NX!Y:Onf-8<;_bF"`tPlsg0NE]VU\q8fc
%$KTr&fcKYeB=$g1LCsJ)h=khT:3rjC:QgcN9EiEmO'1si6j)ePHU7l=iF2!=/*eqG9YP9EPoM:Q(%V[/Qo.Ond=q1VjY8g%ol%bT
%RdRLu[SHP;_RU!:Y.S#4O6nYGF<bh-!q?fPTseEFp@@gkPO`*>1O;PVEuM4@)%G>!XP^0F[U`,5!cb65-iRkhY@`HP*$U"GAoJ(J
%dUfY"o9)i&b"os!knbE`U@%&oARF(p:?p#miU]uk-KJ(?@Lp<flde?+@^?("Gc9Qlc&?eVo"(HDi!d!8XbJoZ/Y@WE6bd,InJS%X
%/cP*D;9D?[iqER50OLl.2l9EG3]5c)\,kjMcbm1m1D;`BF,Pk3?kla!hj<.-@gkUk-IAk^qBkOm!!TAL&a51lK:aOkK-pU@$VloI
%"PKM?C4r'@AUZf&EJ;4c6$R,CjMu`Rl1#nTs4]d9L\&RdoKWBG^]13=agq1u1`C7gT\d)\JLLKVTG1(JQf8_k=(dfJ&Rf;\lrRt#
%/M+,7]LuS5nX)rX&?h%g`c2<\"RrPN;APg_]'%ScC\1gP)lDM--=_i4>ltpN9I1$cmTH=*KG?50*$)p1!h^Aq`'="E*TNCdBMb>J
%\C/P(5l+-tUD=_L&k+=$Y\sOb_$tTVf(\[7J1(V/R7dRP.N`k3,_0eB<`HhW2@@6jk7#:F"EmJ"ORQS)[;Z`ja[a2$eEe@,;;YAS
%\`j:!LU%X?5F$f+-:1fTlaFCb_9B[BN5ZuM7lg(@6#7=`)i^/oIAK<BUDVA"[&3uS9d6i])O8Ep^"3:3b(=H/O[[Y)TYZ6'er=;E
%n]imB4U2T9r:hsFH$TL@C4qHj@A;DUMBT3-!F>C!HAK.k@?iF]pml(=:P>?4/g9@R[\W9HG>WMWC:9]r,n*9R+Tpi2;jl:DO32(^
%XWZ[uG,XQ&1LR82CpTjuHdNL?(-Nl1NP3_&T7)#bnF4uRVl"B+rmnqH5bm_OeaKR+^gS\Q<49"C3<aZ/[2?/@2aXBg5(Oc\FCN/^
%]E]Lu`d@eKbHuVOIl885D"OCDbu[k?]3.)q1Wm/20u^6A'F;i^kZbL<P0>%E*@G$29XgGL*KZ(H;`#.<VS<S$9N=ugbJ*qN#glgN
%D*/@u-JHQ;_?,>e+AeSB'I\,]l@(F?eEQT.YcSP);f'@s=0%D:\K<&"WdT_V7Lk4e/RP\'gkkF:^Mp>_/B'n/<8@97`g4]A049E;
%c'5opYpgYHqpVe+AL")`<TR*WX]gHB'Gqn^:Plmd$6EZ12T"g2)[Kq.[1W(6`LJ$fqYk')@5@Po1e\E6PHj_[@5>?I9K^lsA^LXl
%R1mf7(0Hh&2iicec"n,(274`R^b+G9H_]!#C)RI5_QA9E!7`[fWPHf.7IM+I,QSQ)!8(59\3Z+5_[0.UhAY7O95eV,Us<Q$p](4l
%pI0^N!PhBr/kTZLD?m>6VSdq!,5+uDWar'-f2kJ]:79#jcuRf<[aAYi?9*A@,gOqa?4cV]Y't>fam'NPe(c9[:P`"(+<#eoAG]\d
%%1t""DNnC`@,l;A^tJld3HhLI3J#3bg)Qpk[[Wd#TM`O_DP,;VQ4DY$e::L!P7U,*0F[a%EPRR`cdet'k:S8+,/E]GFBs:+@p#K'
%BFq<[Y[P:6R$?L::d2qI6rOUi0!gB?5gPk%Y$p'\HNV=F[[a\_i43"aqj1f@gU;SOH-Qlul6?!>2&XRmM$m5Re@uF!D[F+[<j>@a
%)leQ^0*68s`LeYBm*Ca5FdG+%#r`Jj,H;\J?)Z^_%gQt'WcXAr:&Js/Q\*+6h=/*(Lf'c\YlG1eY>&raX3i-mD/r+(M%e5aa)K;J
%_<?h]QQ3B7o7BRq($qNW,qWUV\gnou\q<HP">!S'8\fn$k1@3m-!gHP-+^YjOs)De-KQ\(I0A-j1cU/?ii!2\OG\l70=s$9HEU<f
%s0`.7j:2B-@5$@u;EA70hc;Ec6GDlS<AajT]@=>?R%/Y6&gngSC_@JWL`@MaYCu+HLouJ^^f7,gS/?1N3K@:D7?,1%.T=a5q8:0b
%3uTS#'&BSUPPn]dr9;o-"+,t@a/?CT)RcQS/A`e=;'RA3&.L6g4cV?n:JQ`gQj8jI1#)C4D,G7k<Cj>;WcK!(G@H>/$_sYh/Ld6k
%k+\uP?`<3hCgnm[!;X(d/@pe0BeY,]k7o'RYlSMr<F'jr`qb';GC"CO9%9Uq;AEF!1#WD2S]HREB>ql;E^NiCp-Q+m*u>YpecIF_
%*72]]2\r,hoZE@,eWHicccSFPMmZDMj.GmR240#JUY(3b1D/(n4R2Z1S3L8O*^G)&E(')])a%5afO52[O&g!V]RVtL"HF=-CPJ4a
%1hW\SFoM!KA-B/dc/^(m[N2/5a062A52!5n,k<#MYBP'(h(>&&eRVdpXM-eL'&W/"*dY:8`!#*fj6e99TA1&%mrE'-j0r0[f8%$#
%,Sia!a/#upLZU`mBXu<IQ7L'\1__GLouL0DR>^DqTo0C*,WC!RG2js;98'*T!TQ!PnB=<gpPAcDYhD0O*le>6^<HTBTMti(6D/pk
%'d1k)>.*8.odo?f*X;bXX!/@Y_&S>7=Sf>2(<"]VNMar*@pgZ2lZ'a=_k8<]:kPaVR@&)P[^W]-^i(0Pmt4?4V7>&F_t1)mM@5q`
%Z1plm[uKZZo=LiUqdOV;HKT(PM<@l?0?1^aTs5QANl7B?35FEc(6fN+#rr6=Hq`758Tfgb<7Lm/*Gd/q/5-pS;DAd*%pSb]S2]H*
%CHaU!d[5;Y&7X1%?'/+n\[CVAne40!0L^hi]iKV$,Y]8s*Tq2t>EkZn`,aoST/B&@s3NNloFjn23+u5,09Ns>>cSj(I9KpA<f%b;
%/L7@.+M;A10])^;:=Cg=l.\$i[Bfih1"sNO>Yjj'Qmp9S$Pj@K-%&-t?Vg11:c^/:n,$!Nglqf(75ZrFCueZ'FVlt2'4Us6@l?&O
%K6Z+J&nZH[jmpO;)%Z2U$3%Nu\5V"RV:=8@RIe<M866])_;mu5ZI:n+4H4+]\R%!gL)N&ULGk5M_+CGM5VenK$$n5nS>d14VF.C*
%-XtNF4(pg?pC<A4I%WhL=u?0u*Faa*qhe<s:][>g(M8+"*!$;h6m3"rYkY;*:]%4FdLS]H=I1XAJcSas@lTfAK1S<":-[XbN*\Gs
%S[\:shTl;p"2hab=[9%U%Ip+TZ_"-B[THEca$khPZq4:nT`3t@5[Y6K!h3Sirh(jU]-(fW#-gXDn0(4[,f+$k/VUpkL,!iL;PW::
%CY<PLh4Ts_%[%N1`[rXNZZ,D:KjCO)1t1/(pASX)acDG)\Gi/dQiSZlSVAD![-`<=CC=Cl,T?I_N)+g`#:klplY_:fjABcl6[eB2
%0%VmojLUhE5S6Xoo=0KbTH.W;`Bpm)7NoQ;#FnJ0j1G:q/-RiiR/8uKSYddVT(<o-LBH<1)2i#:.hYn-655S<G1r*F=$(D\Ok)@s
%Q/?,_hddTd/N&hJF`jS32bWt1nlL>$2saC%;#3VlZ9&U#S&]*EQpYT_3*?]N+>'&j#E)c#N3Pu#OS"R`>.jJ2_$2;FN[KGp?6i)7
%oK\o6j-Q)\TnHUOOe\i2eFNa8'cb@C(&jqX-^T^;Ndl8!]0kRfeDI=;>U-sAlI654"?cre,=ln<(@iA.)d>bj@i#9=LKZm_qLk6#
%?f<a9_k_9-8H!Na`jf'mjmmD>>4X#(m[dZNNB+JDaHc54!SR+To9Z&KWB>'qb&7%g*]FGI>K*9IE!U3e-iBmI(]"S(N$);_mX5GA
%68l5KXEI=/DaH3h9?V$M:[\.dFC$?iMMsbL,"hM%F@1j(\aO=cP7:]AGG^"RDn>M$#t=%Gn`M%Y^=ZrYY?iSV'=P7k38Aee`9e=>
%#[1,KlGLK0:e8J*eR@B:W\0*E9SqF=`@[3i.aYXh#V];Qj<hqX(S$[t#&:Lb-B`oU]hiFW!BWI2UE-=^S];W(#_U/*/_^k/]q4Ru
%aN[TilQL0,fOI";VZGm]o#%kX?I25M,?\-c+)FlOJTGUmK4:MSD+fr;'ajb]KD#R0Popli]4Fq0NH<[pLnhUrfg.GBL%)=52P1Eh
%N5!B8)EOGjm_(0LiYpkZdI5T\KgWbD\E+s5WT8eJ*2(WRKu=Z(PR*!8`h;IU1=FGDbXa^M]SrouY<LlUg"+<.q=i$GF3*a@oTEVu
%?M]tfXkt4keA:"_q!@'ferT!Y6n5KY^Ft)_[\MihhB+i;$)r0-28OA2+1#"qZ_dKI,na6j!\MZ?F5[+]`>(-,0M-GcAepTTY;.8]
%JXNhZTQ3=e]`*KK+!%!j8-gI:`X/9'm\#A;5Oc5<TF@$s(S6)!l'<:TC0d_l^^pYUCUP9n/i$!g_IiEsDO>*(&DU[*M_&K[oPJS<
%'!n!67#oX/GdH[8/Q;jSUmM_fTH=3A&`!`:%$'juPht(4EX5ki#u%\n`g%qk@f6L"ff3@YgNh9$n:DP[/lN4gAUUP_d2kDPUm'r1
%K@N(ph`VNW%b"gP>n590".jj1TQq.Y[=H*G%)Pf!V&ke?:l5LNngrhI;H\$#=2`m2BRL:m]rP'SO`$LVS`T9qKF,_TcbF%Fs0FTQ
%^2K1H8kq$4.G:nm@\a\2SQbN\K##AW8S!.K^kqX.^C5af+"FaA'iK8r!1?c&\C9%PPAfctY8)&*iWI-Jbdq4Ek(YKnCgp'ck9RiR
%k\ONh`W7tpL'+$[F#+)X\YG_Z`$2X4dXe7r%L7$n8tA7+25j4&EK3,IakCjdR<KUb%Q<St],cQaGmPc_5M'imEhJ%eE',@Zmt$_?
%2Sd7?loS>fOZ2I#C$-!%Arpec^f6(J7"djt"p1?PD`DrGBMbK+$$-;6QtsAYit$/MmhC\#p,41;;K0-W>2ja@(b*B+7IB.U+HU2T
%KT&KT:-gHNgAOFWbq4ggb2PmJS]7Pfp+b0ib]hg[NE_e)O>>IYEH8&,lk[N_:p1Dna<8CE!Aj5t?'CqjCS"^`7?43]l&g_,(G)g1
%Jfm;I^OLb;enmJ5Ts_mH4C6FlUb17\Jj9PQeNnc>aXlk.EE5&iq[,)"f>s:n7upS@f@ldg]0<oK]8;7E)NdWMe/gA;1JM^S;o::E
%8B^W'Z7Z=K,2I`hc*O$QrA#6N$Ou(S0*C)tRZSr[IbPlb=)X%W>dj:b7/XJ'D(CUe,YuSLPu%#LE>b/a!sF=;AE>:p-Dfhii0'c-
%eI'b8JKAV`ATEJ(b'VnMD;)gGqPs0CG)*inEp+SoC[a;#6AGA0N/S*j&B%?:J5/6NA.>h=9o'gBoN2d;0,c=ZYcF+t9&8&B:2a(W
%`7u#OA2"I/;A7W0!bm%NR&k1^"G2jNB#nJG-.Oii1p7!9??)Ho"t#UOULui_-!GEgfS7Yk6/-u*V^NB+g?_oP/$>o'$k6p^&3!0f
%R+XS=;2p?n#k6jB.8r(!3Dt!O(ia]f$uDJ(B1aS52p;@\;SCDQ&auR?E(uo"%%O[s7_"JVaUH\jNO].;Fsmg.DEQ<Q`j^<K\1FM:
%T61es,I%CXZm8L;HqI+nd^3]b*Q#'K*HHB'<]-Fs_b([d,"#=biOaF\lZ"/')1M3O&u&UV?^@?*<-m)N0&V@SL-L#nA]b/?&1uDX
%+\5hu#j)/O/W6(Zp5es3CRA<Q)2K(U$0e*\Cd[V^cQ69XTP+1>T7Z<&^si69:6-YH+9YBT/>&>;DRL3E5Uk`tjC?dAk4<<cG8K/]
%0KSF_]&q,f3-fBF1d84J%gBK-@(<7MJ`_*UKWL!L1FKJRB*Ms3d*of9[^uj,9;nkjQ)$3*nj?>SkZA_Gf]3\,Oj)RR^>6=@iRlTH
%ER=O9aP`p"![qIp_.^Ludn'GE'+A&tTFEFMG/>sk^"cr@X*KiQ^bi?L?Xsb)d0HreE?@Mj(g(7QP+@0K^fqds,k#tA4\1JPT'8%#
%df5`,ojut&6POlpOAJ29D'<ShW(BY(\f7\L7oj0s^`l20$qNhJpePePIO>*MjcGpC_O<=6C#o5Mj:Nhni\+7F0d\!&\r^Z-3b1\Y
%0uc[lgk9O-4bOK-NMXUJID1NJ/BAe^cn6,E(AVTDb*=FQMr<hs(+EgrO@jR0esAUjluRa'D^$T=e?C`pZJ>01YU*c!nZ:k-gj(k<
%9K7_(BI'M8ZdI9d8Uu3V?X1s4FjJZPj-\<=S\jdDNTEVIF+S<@$p-O<s/[W(8G:;8'o#rofA1-;J=GW*C'j=ndg&CX-k:Y.,epBU
%S/S#LBH,jDW?A(Pr2Q3Il6<(#6U0"Arp'Yki]@i"XLQDPUuY1lrV#VYW]g"'Zn&hHaYc#H<%2&]a#/[[euj`7A"S0!m,f?HUh/<t
%$K@Wu&%^"o"kOMdMnj(#%6]"e_A2FM8^6RRiVB8W(=%:5OnC0]f;W"T/[sc_,D.^M-s-PjBT'*/WAK&Ba6j;?n[@HAKF4%8n_f"2
%C_9Ojj.=h41l?R(AZIg;Q-GXkUldZ'Y0[3!mNXP_+e.5.[4;Mo+%Cj,GXO)>I:U]@4DD>,A'l?q:mdj]g!Qfc`F.M=Fog_ZAk7+O
%busd5>r)@eHLetU+N:<fiKh)_Gr=DZ%^em;!n)sH8B%,,/t=HM^P/=Q2(86j&,KV&^LeE$e*&)1"T,+p0g?BcT[]hsF$>3F^>/'<
%,"(E^=P\3B[@\'++I,X`U$9X*;X?O/C/eK(N8O$oOkLR%Cr<=GO$CM@VSBB.YefQINaOK%MtO/i<ssUNKUn-;aW@VTqUT@7lU(@\
%Z35)_l^/7co2GsN=>+r(F!XY8>`;^+k]PSY:jQ,>'Z<`>c19q<N-I%g;;J2,+J%e$@D;p\KW0[4U`au!jfe@."BS!n[+dr&$+V",
%U/<_K4`BeUI3A`2H_t,tNKRQt6ocH1",_^DM=)C=5UITX]8=JE.l6bT+=JE#*@G^VWF)4'@AhD&@"Ua3e8]gV7K&n4,dU%O0IAfj
%NmejQ+3iY]Zr6O.P#->=m$V<_^+gr%PN8:S*+<BWV]BRu2XPe3hN0f"7NC)Vj.fg9*&Q&T-gtUh<(hgPni,dd,'2a=s',?,_BlOl
%EE'G;e'*0SL%[A5n]kK-?@&+-9kI%5R"k$]o5mM.4R`h#;BkVQP;2m=/g`@q/(u:7FXQO=lnSdnYX>(K7+4<_Aa6D/Qlru%Ec4V7
%PLsaD\Q2eWaF(/L.lWT:+N>EC[lI2:3%9B<gAqQ^l>N=bnMuf**oGVuboJ!]cHCT%%Bt$)gqa49E122kqqm3"aBkNNJm?AJlN?[M
%T'Vjr%hYTD5<1QtlZ&e"$+>4">6@VhV/cBo48R:hj#[sXQkr@`U0$bU[R.le3Z1[qQ:$%(B$-'QdGnQdk[]Cf4BY&]+)s2S+:C-\
%l6_U7!rqU_e`$BaIDYW<?hK@N&",$uaNZtj)#j@3/X6.#`\O>8K!F3I#I\BTA$B;E@iM(;f.7I9?t%Wd_.>**2N:j;1[s`H_8$0V
%XELmImd%$X9-r_^KY,E;>)aF`l"7f#&+)l22X6^%3'_p/(65,!-HSo[C-VUtC3L"*5-HFeTW]Kt`T>)b-+.cal1Xq4iA.jGDr_,O
%@5$q'huIE7Q=g"0E+R2mPLE04gLH;^'L@q=g.[PB26RZ+lJjl7JqTLO>V[$FNh3FOV*jAtDujSkW8Up2'Z1L>%.1ZAk(KA]oD?![
%MnQiP@b_atf7fprL`k'"bae^KjO1kX"Yql'VsWMZm)W^D_8;\+FCsKBHRU<+Z!3GhGi8tH;bpR<#-(E4Amt`l%^pm"I_.m"?\K(A
%LoGAi38#3$"#us2`)f=sF)(e:G"`<h_QK6E0(^!uh-tEk'37Zb^cV_]kSE-&HEt.1:oDN%ZMR3'#>Bm]G'MUg0nGpWoC7[XpJ8"`
%33RqYMidGu.57.[8ZD2hjEgH?B,]rX>W%.:Pl[7F))GDn!0`,eGGDp^B+65pNM3M5m!)"L1.T)V2L$%4$c>]+WUb2heVb+Eq?#_O
%"_!:"!Z3Mu.?$FO@^T5d@TJc$Ro-M/[1KYhk'u=HBkZb!V45E2K43KU@O*KdoJoS(ia1<^0`ljY"^6AJ&8EKS>*eUjcCI\BYeud6
%Y8qaJn55aY$G[3fG'M^221L8$,0VPUKltd,/]dQPiZ<c9_34^5(0V/h8Oi$KR1%*8-d].;"aU%.ZX_Q0]R$E.-$m.?G&YN/G%&io
%0`t'3c,Zr6V0SHG8d5t7,je\97!TCcNJ&d>f[kt'hhmhd"Yb(.6qsckXE5/H5S!WU/7lSM'5&o@WhX![^g>9:6O%?:5&DOLVYut1
%%fTAdCr0]4;lC1hbrj2tj>$m:X@(-&,<HCuS?`YZfGrmEMq&06b2#-BPX=J7Ln7/jD8rM-%&6!L5ODd16+4U;U20q&80f/d_*A\H
%Ml5pT$pl'A9[>n?_#b`4$qMh*P-;>E>T]]]pFkOJhb,OPTU/+K0\$@!;H%lI(3kBim/iSnEnU\"0FaI([oE,NHPHAk0QJ'h7UH_!
%Z=Xh;?a2:P,Z'\#5hF._o%-dT4Bf<)9#7*;YsVkL,a=\co!h1Qo2,VuaWa-*o%4`$bT_TZ2t?a?fB6N`2qg2<a-(*3j@?^k#[d3r
%o,Y*+Z4S(>UAI\o/l0gu6h.JQK(uM?$mn<nRS4iR2(ZL^lj4UcN1Hqf)FpZ\S!?]D-33`6(e^!+k@$t_D+?Ea'!L]O1s"@V5m%>U
%#+j)TJldnSP0n=qqeHhtgmJbB'Q$5$S.WW6lN,UZd]&%1SIm*LMqO3b:Fd5&[%rl;$B&4^0o7o+iEqPgqN0;_a*9AU+h@BA=sP:i
%49pXd_s2?l73"doP=>s:0$.OPF4U=iSe/P23(C,sQi3[AiG1@7]3LF&;'mQM;Z-/1pp_#kbPGTLJV-#-nT%9oXl*g6&5lPFZ;T,H
%USY/Y-CKKc,@-*pXb]miE;pJg"bcV'[Z,eKB?^T,L^VFqp;K9fp4Bi."5a,F&!=h`9c8;m7./"cc)i8AV&Tqg;0n+=;'`[;g`jta
%S1l_s#liGJ/mUB*U9OM$M!9^o,Xg7ZA$KMW8fI]eY[dlidcLgn^gSZf"?(5:#`E(%#mRh,KnR?oDIGbj>?EP^oZ<g\0&duJm_UW(
%,)GFCM9+0&k]$@)nJMgUn:=mEFLklkpt?ibl(g)&Emb731aU!0)_jK)L-A">]K!cSZ<=-2oT9^);Wp3h"abR)%S1-FW)%rf(N%?n
%ZUcf0R96,@//!V6]1PU0'!`^%#'II^9[.Vjnade[WC2U1-+]YA?S5c`9]5n[7<W5cL4%e8:FhRodp4=N:WgG\^iHq-,W0clfSMsI
%MDup@Y`:*KdqUMVJkMM$O(^lnOZFn*8P>=\()h167NV7'+X5*f<g^lYP1iq18!+)Y3/Dn*3^d.16P(nf@94EuE4kb!(]RLW&DBor
%Z;NFM)8;ubk>g!pP%K]B1D40k&#%TdjkkaM93>Mg%5Y]_lifFQ9S6]]$!R\AiPf)j$uTZ>\J$[?D$\TAAElO^Eg8]p&W,GsA%DFH
%g$rL-Pq*$sgC9FHbR@Fkfq$4'BZ)8F'itQ5-o2!'F+>&^ml<<EdCj'2,;QumG.taQ*o^RoWsOAKLtk<!ncUh>??F!*r<NDTHEbGP
%K<tt:EiX%sak4[A)=XK28D8Q++)*d`N8hIo,ZHfbksHsep]<q`Vh)SKj;l!#&2sglE;"D1qr-la=tOSMV.Zoeclbs$cnaoZ_)Uhe
%`]^(F65Ih3`$%bI,fVACBat$FLp\\h#."U\.=Ll"2J1n\"IW%\@X=pGKi,%\9[aA^$Ff*lN7)FV,'-pi7-Yp)KHs"RXu@P:/4GDe
%$&jd'<$;@!e"UpqktQJ::Z$ELH:uRXhb`Zs)f?1c]^_CWl8UuFm\XYh:1OOIZT-.9Sl:QK:6_;#YVJs,-EH;1rhhm8D@rORIc76>
%au7<0-(-%slL7%YEO`t]__T9(0YIeI>\gUf7ue<jZiV3'`%<9e'R+m?4%CNdj*C,ac=S]JaJHs&K?(s!%$?K7Mgm2Y[@d@PSt#f*
%rWZFNE#\BYl_<9EXU)caJggrtg9_lq(]0Yud"iU"b^6g?T#(aQKJaA<DLd%N$J]e+4D!C09IVN=Z&$a8**nm*$)A7!VV3`L(&&f-
%k&HQkHF#r=jg9t_[AAM9$t>/9MX%]Ha[*e3D9C:h*#_/gL!YYVBVD#VB^-'N4_+MtDuI/ZOUY<F<^Q5L%RV()3\rNBcm9.96SLk)
%iZpjtrT4d5nWIH+g,_$4M;aV2?Uber8K'B5>?<$SPK.<C+u'@p@)3sPa0$6s'GrYR`+gTJMPRN"V5Fm(;Pp$'-`J@uO:#X""l#l8
%e4EaO:FWAM-*5*0<DO,++YspCIdC\s%d*/op!r")JF)I-@H4%*+a,PTFj(/t4o[L.EZsuaKL<](AYQXTUp<+s[APBW0U&qa%TqAk
%&=st!0cmtm#hZltcn&SV.(ek!M8)5>XViZ\Ym;VRIP.<_]Ljb>:S)_X5Y-(\BR>jQ6,P6*+Gs>+X/uQaelf=O5`]Jnal[BT\OtUn
%I?<Yue)=+FKYl@%2t]Ja*<`"ca#UG90kt@%?fS'jG*@Hql`l4$YW`>pX`eQT,2K;bgV'Z\nUgI"r,%QW)9ogQVT2aDngs5oN.3-o
%gaNRt^u=-l59L3]8H!Em6"8WjC_C^HdXu5qD@lI"7J^]s7H>t`iuB/6GGA,1&VVs7Cm60I*d]6cBlEn.2UgCg`*.WE1N%mWZ$OkW
%a>ZVVD2N;L+#e&G:G?8$MRYU9oV=)_:=/^nnrbNcgI$bi#0E\iTP^0\_U?FB%cSrWP/6(E.O[.dgP\?Bf**dI\3OUHMO-:n#05ZI
%meKp5/V-3iZ_Pj`7;F'Q1AtNE.JE4aS\(!r!sT;o6C:3e$8>kudg.`q;"lDQjN]^jb6=5=T#en7j[Ois&a"ZJDXeZ@MPEh&r+9De
%pGQW6hO3Ki#,*H$Z,kWA'ag%n[W:t/b*lPX-*S2r2jj21g=airUUH<J%@)q?\Su^%[PihN#WRoH(9/[3Y&p;;hsR$5J-YEtad.Rc
%[n-W^5&!);qT5I!.;']4I3LOBOQJ_;=2GQZ.gQ_6[lu$I6V%rt`nYo\:pkJq%Qe"`bHo11aWrU1ZhjT>Ba6t9S,6tPQEB/P`IX10
%6CY$h'hRDBL%56^9rL9k2E;]k41_DV"a&T6ND9]I#e'K`BR-(]ha_O^d&-*g,Gj&HA:n#f9)7T@&m".%WSt5W)HhZ:or5#DV(DG'
%.j?p6A:OikgHB\H=?`7,N.eJ\+:^]Ie$A(mN?qs$e@8!8I*\m9]SWjhW+;B-:&r@p-kfL?T;>;%SSk?N-8<WKiGDsrb1]^rALum.
%`MGhj2;JtTgk4`$]4[4/L4),(H$)ANDU9in\/7EdQlPK=pUS'FOEp1T7"pV/.e?6j2F=9oeG-YmGIQu!jP)`'ZZ>\0Q=iSNag7M!
%FiY8M7$nJ!.kNFXC->$TU4Td5dXlf=$rFT%Za8SadfGYo,'R2A$Stk!!X5)HJRjOe'k_"o)`jM\q#%DWAA`]Fr490Zne%Q-$P_,Y
%F9D1+Bm)\=jOZqU?n_^5Tu%l._40`*loS+JG*YB&A_R_$<):ThOO.J&#3hlk^S$$-bmZqH`b3MsJG\m>ag"9?CLd0,a#kLT*+,AT
%g*nG&7jA1+MA/'4[j@<DfT<Loj([M"\*HL`T_@?f&M0a!TU^!Z&QE&e\4idpTpU9.VQKfb-1c5AS-,d"qQCE'l:39'(2-_j6*.Y/
%(1pNp!d7a<^B%OEP='b[p>hm0cg=ChObrE4qSL,20Yn`72F8sn+:f])NsF:gi5#`SR_Jf/]U@#!Fi2Bh0N,rPIXNK&Urp-L*SGfm
%P34qM]'CQn^7X#R*4_H)2WKuMa'i:98=*\$1'mEk4]88?c+"6`\\s%NSqt-3Vf&0ZQW\P2=m]8Cqo@I"o=hT\L:!5R!(h?kqPVL'
%qI_juck.P5Q_/A1h%E\0_)c%c;YU/00Oec`P+kcdfi.ZjLo-9<ZG;hJ'\H4'Li@=Z%0Xa*/@kRR5#:/30.6A;XGHT)WFbs#lWBr'
%[rX$Th%uPL5X37CInf_![-3oD+I&CXTjB9N"NOfPlEM(k^",HoBPY#c=G"1RXb!NL=T&Ug6-b?q!f!ch>(3M$'SK8VeMLilXgM/"
%X2L8+Hr.s853*l90[r$17d$j'UuiJ00O*XH$H.;64(qF\nE^U8&6`;b^Rihk%==<:JF12F9VO!aV`[.Akl@Ss%h_2Mqg+o$B+9:j
%+YcH*Z!V=0I!F\AF?1*t3ZW[\C)380ju8ZD;Ncf=9gOqbVqdAW^G&ZLX1#/a=SS$oXV?_%"KDjG$-hT"\h]tuXNbm]L*rg7f*/1#
%]e$a]F$sE'RHhrn(M4upZ2\h_<r)fZmLbg.R^r<*G6j#$$o:hQ@$0M<&MS!WK4@VP&iu*_L2BJsq_6V>g/P6*KIpSD"GD:ZfPnks
%>e&[o)_l3$Y`BC,&eJ-"RG(O`C`Psh"TbHT<*[J1li&mt",Crqpfet'C."#N&`[On>O)-,0d.b-A<%!Zah]#F#R[WS_JbRjd;qoH
%kXp$[6'ETbIUGUd6b]4s/n2MXN'T7DQJ7$_nrUmH`M$87YBjj0.g/Ed8$Z$BDR?BKXr,:Rf,+'c5/gBH2$TFM&7n#2Y!)<Ah%W+_
%E0Um>Z*2*Z$<q=@&d?TS-i2EanU)X6(+<%(VBf9<XH5A&%!_rg'#qs,o-!Q\$3l\E<9WTo>Cp?;6r-@f46aB3+?"De9`=Sb6PL`k
%K&6]F?H(*fJCL,`-1lQc+\XYp#l@/U2g[<F5ZedK%cg2SZ72q0i[4MiVWe4Tm\h;X/nRmd0!_heC`2g3:jmHUh4`HD/C]oHE+(G6
%92Q5WXJqN$PA3SXN^IQ?RSnhs[fQFq(Gf"j;IeD_ZA)sC4?VA.)ateJ4UG%o,=+?,:g1B#(<L,a\Oe&a.2&Q>)!(q,-CY>oA?`hB
%+=AaWN3iU=0KMRE[M1GhT%7:K/^/=TdTV2K5g6DHP#5i6KDqR,C20g6A>phLL5Rt)NZ4ma/hje,n9!jMn5RM1_%_VcR71Qg>mMZr
%WsF+I;U:696_iMl!:h`PP()ROL:A*GBNkhi'VUe$2Y$)@`$l<J*EQa>;Nl.5mgqdXXWerbT]USTjl)O"fS14l\cJ0pMUN#=34=>6
%$>4tqRh?9U)8[r*0OMOK]+#h/P<)k4OO,lli#Rb?=K?+.nU]%sHM04W7us8&`q`Tk9_J9_Xh3)sPCXk8Q=nPq+73TY.<E\AKCBiN
%br7C&RQjQ/!gB7D.,3&49B#_^4!R-\mVCPZ.9Jgg):"ZuINucU?1VnV>)$;RD0`34H03jJ'IZ*8D<617-4I8kmtX$s%2T,/@pZD!
%0/LXrM`;)hg`)tBa=lG:MnRW];Hr&iDp'BEdOF&b/5/8'2Y/gXo?"K+!Vc)k\![=.cW?T5B/s.@c9h0=CM/epre9@;pnZCqYD.h'
%[LFM'^`i_%:9WT<D^00JKC=GteCY#nJc($u;^$RgNN<:!!X44u^NtPG"hgWAX?:_P",ug+#072t,3@6%h[o.p9H`?k##CQ(Xcc>K
%0KU\":k\pQh_t&bJ.R&[E)YYUm).imd(I9e/EA5NaL@<+p>sl=_"5stM#\c>PqZm7O=]aYbDqn%WqiJ2iK\=+apse;?@\uPV&",A
%@%q;XSFUN-"TgiLNRH7=1lX&=@r?SFPV0nA"^UgW!f4`EhZgC.de5P+r%i8nr'&J$IEK%VOV%NeL7!=3a1$lILLj9l>[6"rh4>M/
%)(HYZ-:>3Z.<O^3(Z;=9jY-3=7lmg"K*V3s,<c[h^V]-d-99tCVpDRiRQ%t*]H2iB;Qqe:*A];<k)C2BL7[MPRY\\"GJ!p;Mg`lO
%hNO/_d`T-n-A`+^qk2.\06A$c\)EPf0T)!HGds8:_^F@$E]X!MgWJMWKm5lt0oKWO_9,@R>$P?&T(s-\W0(jZfc[if>MMgOf6l=%
%UR5h')!uB8C2l-p0PcTVDh(E_G.Lf"6(`NH%XLTBp=sX7;IJ7D8NGe2/$C\NL/DhAbaL:"P_3'h8)V+i,fVnIO3KuJ_Q4"(=On$b
%Y6C+nRFS)CHK"!,(L3o6:GtaK&JVR^o)=tMV^c/4_q*1">!Kg4s+U8u]JEW&-8W4u-k)su#\ARDcCFNY+F,2rG9KK_Z%e:o:lpOI
%oPNXu4=>D^"@`V@_q!!aB-`SE2n^^&6NYM(hkID9SFf*Ea[a[E]''<Jf=[hVI_a#pIt>3*(b+BkKHuILYW,uWY_'FMErsHXhaY2s
%bt[(D--NA1\O>\ZD_nD8L6l3p1Wk"*.:k3OX-qL'H!_Rsj#U)VY&QZq8T?f>SO/uPR6d+m2lInql'!6QUV8<NB+LWa_Vsg<+@4M2
%J;p=cIX8i)7P<-k"IfX-MJK<;;r?fEXPB(LMhA(Em<$.2M77=/qM28g*>1!b5b>(;@f2D>0UFU[[C,J\<4G07=5Oe-:X8eE<,[1h
%aWYLc#ne%)_IkHZ#OJm\dM'+UV&^g6dY&-9&9d=hFZo-4#JBt\n4^<n]BO(L<H^OIW7tqJTh+P]2gqI,p[S21$]rG;s$$';n@+=d
%iuZ@qPUfC#-21PFAt2Hea'D`GQ(_H/m`^OeYRt_ahRp.p'V8PQKVh5QFb.\jQ+]W#-lhpVC><d%NqrrAlc73.k1%nU6P:V>I7dK'
%WL"L]1?]i,=2+W-9%H/q\2#W&J1L&'r!c;gj@Z,>'7#F>s--Yf/k9*/@%_(,I9TQF+@ODO<UWDZcSP@pgVNfOI.b7F>.3/WlFC2*
%H]p`oT*2D-3>C@u&Q>..puVb>!;Brl.;Eepi`CIpmEHHPa;6<qg!Q=*Dt`0&Md1\:(Um%Yp!*KGCR(r=p;`pk\bp&h:`GVh+oC<i
%:6[`jOl=)ILE/+6>_#bglEs$>giQes*<eG"j48W"1LlM8V:,Ue94Q0K#/c]\2ba7oQ2u^P[6Iu,P7)?l4JDgg8#f0\i-^Yj:i4[,
%Tj[.^i!Q!b;H/9If!K`$c=$:X;YeSmH76Q(@u#O5[VahkfjPlE6<8c5r+6Id/';c;nfT[t_eKIDV#m1#q99Nl:XC&D)Q3_8JDf[X
%:tHZa-]fm*'IUs''#!;a)\Q(q`>GNTB<SgC.4]@\1&H;cJT7Y1'c'Vs1J[2U$Cl]nXJ9L\!`XZn";X#<pfnNklijO:']A=WTAJ.t
%8*Lj?^aWLHTX6jQX_aG^LB'^-"eg\[7T^<=i07`,a8,MKj812pC-[:>U-:b)[^k(P+s2./U82%S-VIU0Lau#LALjZi,fD;>9pZQ)
%]6Df*E68t9mUh.EQfD@1m0RC&aaQk?h"-)'A6I3Nh%+ZeYr)GH#TZ7T&5m]!6*rK#Os"Y=1@?I(r%p&q/(EM$IWuH""sR-R;hSXW
%=RQ5fN%P5c+8VR'3qpdoR#t3G)760k+4Sq$^O(J.++m1)$MBD!BMV']K\850`!3!LAhTRj&X=>hdNZRTRX):T<8j'o<F"=>)H[eX
%Otf%L6Q+2-\\efQ0p$HPT_2J"pnB>p2;asI34#gSAdN,f!aC8Jb1]M.LRQO_VII/&\<7HC+UMA3O:NS]'[k>9=\P:/Rbb)%:l80_
%'^H/rNPR<r#N$N]qEdSs?]rRLFUp]@L.tX%=1t7:IjgZpe''5'aKmqCC;TMp,M+6bng46HITDt9Ndf5_Pk[i'WFk$4:9I+O+!+ts
%*@3Y#E%@_@KRoge!?`l+.3Q4??jo2_r"o!Pq'\WYR4;4tm.C`f0UkJ]OAUaYSAO[V+p;pP5nSY*#U)I++K#PaDXt)bS=d[?pFcTk
%hod`*[>tPM"8u]W^C6'so&uFIFR'-!(iC.mY\[s,b9q4hEW(HM0K`[7.<5qW?:3j+(!2D<IM_4f*QFsWM3+;qiijjO%gl:dXBHpC
%)=)#e[hf=L@A']0%JR"jE%$ID*UQHIRj/Q;9?+1ABGJ``877%K,NOU'L0\igNsC-CP"4[:9fGQg\q9>ATJg#r]8oE\2(M6$"Dlq+
%UZPEqe.YW(A/CO_+4(O7T-@bsCZb9tOXSTf2W0d:Q6(bD*`>t3PhZp9efIs]:[Z$4@3U3bgql5':YGmHp9W?K7MS4*&Hu%NX2?_:
%8=\J;[>=ZNES57\PS"*s+tRC?<;V^8PoZIoIb`E/m=n%,rjKigK(MdWY3rcoaC7AR)EQ"RF)OnW^Jb0%NY9MGWQE&9Mp\%baV`pi
%]t5^qQ;E4<?R-CNNd-UWpCGYR>\u2&M<#[H%8m)rKrDaagoT@&mbO,/_I3j%U(9fC`@Gftn?<Z@C'G$KihH1-]1RuYLOZR0T(M+$
%e7gbkJOgN::hGC,Q?9b4M$d3.WCie&\3W@]@Z/1Ka\JD]=+39-qo4Ve%uH&EL<6BL"7^h&^2nj;HZN!q@r-25bd"ibES0j[/l[:J
%1<cHP)TIi`\0^aO98N7kfIWf-@E2Y.5l:brr.LRU5thr=+OY/S^aEW&'KhXPcj!?q4?U#i:u`p/\:*O2'i\Z43+kjZeK<,J^d5*8
%W6O@/`#b&L:I[tK0^p;[XiKg2I]aB!K+NOZeRWP%R\-e#0&SAeYAf*,O\,73pO[\k":m+lgH=3q)i[tA$O6@K>nE9QM66HLeX='K
%Y[K7W8a[gc^64-fCo*<UGl6>rI\BE?c2GqF4G`enqaOK*-.$m:&9P1)R(@ZA1HRP5ant:c%0];Anp6NcmRahh)am9CQQ$Js]b$M`
%dpi+:UBDI&GBehZ#2`;KR::dEcH9,FAEc1]6M!!9:ch,C79-(h,e0B7!Q!0*c'>#6fVA>dCJ[o.?RPqEd8GDT,qlga'+nP&/[#ib
%U1JbY5#_5u6drs[7H);FU58C;^8Q,>Q/QjqS&ZcY;f1bem<"C_>$FIRW4ioM?*gKs45u2;:""R:LK[\20HVs*de)4LSdF!lY4hkL
%o[%G3.=K/-.p3[q@l5nSYfDdF28j>[PR5rghH8,r4G[:d:Ijg3i13#K/%;I5*(cO7#YE;`64"UFH<*?k_bl3/MQ:h\mb:k.N/r81
%OH;Zs;XE2*H!uM_cf``oD(.OL25cX!%pVE`rgc5.p*b)gV@eTK-#Q/,/S77UgD6O91ZXFiQFK2K%SF)9qZ?2h)CX.-7g4H%Jp;S6
%#h82Qc+1#&)u`Wr?bM%)U7=<fP&3bWMlIW6!#E*E-?JRk;*VGE.rX7(]t?*V.^8mA)1\[_i@_:(nS5nsj5-=`_<n=WT<sc!%VP&g
%:j5)Se2u8GD$Sf5ga9)IVFpH"cJrUgO=6a+h%_R#N[kT?KNN>:0#j(_V:95Unj`?ja3)5(+=cE]%<0-7!lcBMk5%%G!MqArJth'D
%iYPn2MHJoc]406kX=;au1=&F-gXW4Br>H@88(WjC:+)BRSd4fipR0"[;t10C_ViM@qQ-_del5hu6U@DM+o4`Efi%e?&@-7a-`%_q
%Pn8h-lXqEf..og5>_YF3<IB/>Rcu9Q%+KPM,5InYH*W'b_)!3;ERU>pf.b(S22[d!niu^5\.jAr9QCVL/GMKT$r.f\"f`NQ>S.Ka
%#RBed"SMDmQ(Y([RTa^`*g[/CV2m558h8kZqVEi<7L02N1(Suh0D_.3)\ILp995)>??]5V,&t^IgrU.&)P59/C:2Ff;sEW"0o[rS
%a8E4nNLj`]9#Ya[DHU=C74=?kj[RS*bi?++ZHl.L:u#38%bI6PO%p$?`ZXRp0lML;>Z9obpR?(Ln$>s<i[#g>e@@T&%a=_i"XBa!
%-quJN:m5e6)em#3rBD\6`frU\'MIR`1,b]X*I"#!(PsXXp8n<gpD:Y8kNTMmJ^[EMWKJ%%PG-UU.L<Y_&pIS_Z.%*@P4b]Ki'@9N
%*u!0X/#4FV&oc]IEo%;-%Ic&HZ>nk2NX9JT`&WkY9H_4/)'cb1;!casD7S_`9$?Tqfca)+7)dW8ljh`+,#>\1&-01$6Rm-`:q9L"
%ojTh)a%\l_.[TqnA`!.('?D*J;8h,IQ(GKZbf]#0mk>5+VLa3o)Nu<.>6no)7Yk`\AGNsQ(Oqn&j#=0]jn2`SL?&#KrH3\AF6?!q
%G1F7_g`?8Le)<1?IiWDb4f([\UlB9IZ5'81R=)q8c\&AnBS]n$Q@q'3=GUA&"72I`OtFE\'k)bSOacsH_<,(NNm)MO"P+%Cr]5:n
%1f)0j4J<fe_hRa#-,K5_`Q!t)K7"sJ_UtAg*S5KRDW1p^LKgo':J\tS3[(%p1BS6+L84ka0)hR'\G'uS]S@D/&B#B?B]M<HLHt>)
%9M%WTS3*$hSI!mGDPL%:KSpn4Nsp'XiHV2>.)O4RKOb3DiL,]?GBFYt>Xlfbk]q5A/l,85Ed#-/^f!]@&KB#EBU,55DT-]S(kOre
%ne$kW2,TZ2E8_BI/PR>OY%n;eW79(Ll]e=NN[@0R:_FU_a4Q((18[<Z!U';A!T\ui_Sco$L*9rW[:9=T<>EE!,5lcudM'[!k17Za
%'0VterWp$SL[lPiDghhPQH!b1*i>6Kd\p_J=.4#`pn$ZT+b_@XO!liS>K4C[=m%VPP8kho%ulBZ41o1QE:C=;/fM6`^iN54`tpqk
%'\Q)N-mpU.SH+ZfQ'RKg<LsF$l`1h.[#_']!6m8%cr*b)9%+g52$5MLj#S*$L/+=1<Dih_5YNA/EZo6(Ts!YTDa$DWTs<N<$5d;-
%65NCOd`(7u6F;sd\YWATgD;FZ-l%kchX\CrS@&&&n$\OI//G^J]rh>$-Uk.K9<.lNSY&uMHB]:Mfm+qbA;Sq57R-b)V.dsr1KpY/
%^1F:oCH4_\P-Is3#@_?`JK$tr1Au(fM2B[74MZf@Q8me3XG<;Q8c>X@L%#D5<FB_,*kOuOhD6-%VjtOb\8`nk]GOPJD/N#K;^09,
%A8H'Zai/+uTfEF8;M73$l%X/=gU]`bA;R"4nPS@W13/8"eAXe`7\%R$[X3WEg)+@^5g)4!&63un#rdU[",Ihre=!7JCj?pDF)'J`
%3FEW['L9NCn>;VqS.hWWB/lUUP\MM#K8cs-lq_@SOYH-6]86N]SN5-8mk@QsiCjMk0N;gkLj(`KN0*OsZn0:-48#;4p![sc"/I[u
%!`%&bcNCF-+=qcgqX%rLMJW1cb"`Y0>)$H\5fCI+fkcaA`a]9Uau<b>)2mLXilD]kBdg\bjF!.)JGOj5G^LrGn@@=hR"+i7s)ah"
%(S-P.]%KD3="aL(NL9rZ_FK@1oi^mlcnM!sLo=oA#L&VQk*e/-nd]%Fa4?jt_$nC;S2FeSc,MVV(l0E'?#h,s7#9B`-%/Os3_6l5
%X[.Kr_o)1:Ar#c8(9_J_$T@^cjLr&DT<Z$F)"^Is"s9i?^-lEIh@DEKc+FKC_P:aWp%2Lj],de@2l;>AC-JV*foD>uZOS1+eL3DL
%n4Q/IS4FjnmtI,b_`gGA-0>jV_iWOABejhOB>ueLYj;SCR:06l0NT.4Z!)$WOic"fDL3NJgWZ$2HKMlVIm2mb>-\f;13sWQs+ED&
%LQEgm+5.6&J3*s)(RSD>^?/8&1KaC4#c+t$*V%f=mdA=hDJ>sAjK7@53<HedgoM@!A=@C,]*LG'>I!=HiHFs0-RHo6X7IHp:+"gI
%jq5Y].'CVo&4tOHP\4a#UH(*aL8S*'K(TI:CIZTBpG-i2l5uqJ5qTs*c9rt[0><Js9]H\"KKS5mgUR$?_*$ZW2Xes#`N=DPhMg/p
%/HZQ\DgnU]?,\8KNrU$!pGGV3T^5+h18NiL1I=tmm(P7(_$DeE)K%GXgtlh6l@uD9qjU/][!<c&TGHg?dUU0/,l5J-."Wg5Eh*dg
%96Y61;Mh):XPPr4c3X1_-h%(0Nd9PR-bn@p\2lgMk&;N'1mpuuGj7UVO+riDa1*UeX[OW)cmeUW]`'5e!o>#bbn!sc6[tslVJL^;
%gs`Lf2YiStG.M]m@#&rqD0-A7G([I>(348t@7J,:b#g1pb0hCU`BgECFQqp1O$!rk,@RQT[1!pm"?[4bc<ilo!#7d@McM?3VA\CO
%:`U/siOq8'f(E+mh308S1(Z@!^p)ijo(bA!/dQM;qFQTu7r]TJY#"WdfPBDof.#[J7)b%VOc1bsW"a_<s#stTK1eTSk,FqHm#C'^
%pn!=?O7$eM%)@X@9%_!8,;\e=6Tq*qDEYQCp]q]nA`Z8.=`>N\J@oBt/jtj"#a7]2+(d9n@#Lpm:P@F`T*Xe?9o^ljoe#<Z*HV%n
%I>M(RntA7mf_:)Q;g0QX9ZSdL!6dXX/:<[%,-D!^>@q.E!^loBDbFaKLbJa,+hiG'.pO%h7GG>:&_$ufW*_OEk-cfV5,6%.'d8ub
%G?Uaf\)1VQR9kLi!ukSmD[jVkR],1h@g/3],a4/'b%+)9'6SQ1-%WU51M_W`i+@EcYs0jNqaA[HC,1rrb66.Zfu!huTQ+![e2fF\
%$bsq-2?sj&>Gd>dLaunS0I%nrGOE7H%Q1fl*1?bAT:]QBBpPsl!h1Q,5MAuW<.l0T"FJ^-GE!tbCc51ME-FUCe'k(uROBo(LaOeh
%T=EX+XrS=[e:"fHk?i>(AY#IWGfr\':"&TeoH4eV20Bp="P/+W*]naPG9.oIZXoYeZ!o_+O\O[K!>JX'=>8UbHt(/Y,JESNEq1K`
%][eqZb'a,3RR%e2-gliTk]"ij+28'8Q_`Lh)8lMA=G!W)F]?m;?gm?$SPTSsmh(B1"*01B(iZ^/_;[@O#5;b[Ae]njE_Eh90B.O,
%#d+1[%+uX3$Wh>P^:J:Ya@eKiLbQ6oKnS9";VbS\)_'ckB9[&t(R;quK_$ZB*J74JO-3<%r2%>XP.r&Yp5Bpq1/_J`ip**=Xi_@<
%rXK<tR58V973'PtLO:pO#J/ICR(.:4VrX-8QMg)9(`gdO2<]LCY]Pi*4O4-_#0%eNgF!^SH.cDHbCi!P<d]-[B$UPL\P><2kbn6P
%B/-p#HO<oU-j*3)At^\f8@/Ht\7[0nY)@l`M#C&kjX<iBHiGefdIN<O'[=LmJXUt<i%@]%3"r!;Jo]:JqgN4k=_#6he;fV,=RThp
%:u43hB$VEn;CEL;1<$_):Jr0ciC5ijSb/T8ZA;4f1MR-T`egafq=+X/'rhZ&@GcN0[0S=n6m=7n^;,gC<d$P`;I!hN!bN:?1D3hs
%3EW?2^A,*)VOE-Bq/>^m>\E/X,/j\]]TO+XmA9906E]Vk/lW)%l'tVW2.pu^f[0\2?JWa7(\lo?`G<p#+g-V0\elY+OgrCN`Vsp[
%+>n;%SAmCCO.<V>W<[<'=`eUM<a)kb,OaY`'6d7YEk.&9KtF6LBBd^!f#;q+/Cu.#\4DPh<a>=Z3a7BW!`d-iUJ`gSDIr@.ZY(u2
%d*O3:SdfIu`NI,>1L]J6;:45%b,"X=#U@c!)5ND8[1nmdm"9bSSTREO1G7(B<%9m2\:N*d=l,2(qlp:/EQ5]PIbaLV/;sp'-`80k
%eYHu+-ArQ,+6P)jPp<HpY:j/=bhPB77#5NL37_47<9OAX;IGus8;N93+nh-\bF+e\lhZu$3d6Guaf]jCT9s/4VmMZaH/,RNh&dCn
%U<>Re1QLas6pgGAe1<h!Yc2:/V39CMe6qSPB&G=p&Rns=A/3HB$rVUC;N:nMMEfYN`<FB34%8H`[O",KBiS3`'.-6aAlHUL+C%6'
%'>4S1Z9qgYY,usaACBif@)PFELIj3MW$E,&"j6t?a!.i)N9Z-f6W=649'gRoTKtXNXb!9MgmrUBQFg%5HmDp6o.aLRgfamNm`\^1
%Rgp>5)$TbV`hLnUf<Eb]<F6:i$P:67(*ctmR_\jfZA^O>0rp..]RbU-1?q'-)ZED$@h^n/QPr,cqZq^`60*a%Z*,p;BUImiQd=-p
%DFRIZgX`om1>5>A\p>TU9856n]P\i.IFTO(D*M+X9P"V>Eihbn?2M/^[;+60!OE:3p1(G$e0e),]'Vhl,CMA\(r&t^c2r#,BcZ8m
%j`]HD)k2^1`]i0W?DRDa7L&9FU>2dNaqP$,'=LR/nX:Ds?i@lRdUn5%!PI9n>$prHj?YtS;g$\`2clpX`jeiK9Ks<'Qs'\e+_?hm
%rQHu/X]6e(A=""?Ub7t8?^=9G6:f"l3YS4BF/bho`ObA5&?DQJ<(a#O^>O\\FciVSP0qEXY#7u/^Q<T!l;b7VDl^gE^TUO?a0@#'
%$7K]4'e>1i+IBQ82-b=3V]tpO_Ld$@jC<K"ML`0XG8BKK[iEZ5A.sC+<>g*6O&<AE4m8+">]nhdI*"(Q0V2cJ`Vm#;[1AtVdq:H#
%geg#rB1%[Vq#o4_Xrt0O(e&RUe>O[?<o6=l&u7e_n9%jANQ#h0#M+bk+1:#5d.9*T;/^`a0Pc&d"6>p>cINJ*C>E95LTWMOq-Snp
%(ti9AR5\!2?RY14AR(I"g<:_;[/%ge`]X"g&cXWBY:!9RS9sAH7N^6n-r5B8(6<?X@8?@0A%R)uI\7(E7sHUbk!.u@&&dYg(]m._
%2bPU*:MqCeb6/b[gm"?D]g@#B&-u;h2hkfD$tpI^k^-\$RBk!@,mLD/o2Oek;E+`oBu@US!E#9ZH?S"V?@ITo+M-[dU1,&b+RLGP
%HMVb=(C1ngGa9j.C-YgfcY@_>;[<Nr!\_MBXXbb/JmM-DfA1(bEokJOA9i#\4bBtJ1Y]/o?05EDV;H+K%i'8f-<Mc#=3WVa=LbS<
%ZH\oG:N=utjPRo6c_>&m/9P%R?==&oG[X*L!39'\S.;R/MK,B;Q@`*0bBV:+g^fXe;L(.*o#+gZ%#f#7OFOs(N@2gOK$663$b`$p
%Nb2VK8kuGh<.RHt3Wi>l],[AtD=m]k/^^8D.nXMire2QHb@dBjLaQ$arXSGDJ&k$%"]&/0;<_Q;/T"BRX1Q:h-)_S+A6ib9@KDZK
%\b/HYUph8[O@*UgP*)]:6_Hk!jngt_Y--nD1l-f`2*GMJ"G=KUAHr;/9QYTSYFsXfor(_cXfhk!]TQu5L;!!$G>5qW=(MKkS,9?&
%Ku&'*l@a&0U-Ol6hsk)*mdr*NAI)nn<$)"+@oM9P!!TaSdel9,=V51M$<XMD0s6Y.,'@)8_Ys[dT90m8WS_r5<"Kp,a*_F0k02[#
%Ap:OG@>8+L,S%(h-8+B$DQ+hKM6:';;s:tWi+=i/Y0IV[[%a6<b7S5e/It:9.3d+YD\n"geVVN:"XkYiNR`:)1DcIjSrFIT#N50u
%SpXXMb3i8?d*h%YM2EX=6t&@cpW%?PT3b')<W^N#WJL"`]7MP[:Ua%)BI@[2D2G_B.Q,Se>h6>F/$tgZZUV2pM9n9ekb]0BYgGfZ
%4gW7R5)BN(:7Z0sJ7[O?>>Wmk]13^nEdN<?jb(4!W9QTJZI!Nn;oL0qC.h.R8SrNO$sI;QfEY@F0_4YpNqHC$#,IJk([>.Yc;J=X
%rQ@9#l/:6"MKBq3m2]J]Y*Pq7E:lbJRd20:;MUE,(md[3H@7F2@,a+S!E%E=&@3cl8=7p5loon>ifhts`^F+%M0d1\38/CRO@Q]+
%Hc^\1?ujjoHA-3oSd37&MIRnj."bQU&d3</,fMa2O"s8,*I<9:P8.Uinac64N.e-c]gGCcmhY^;!eVW\[8k.;(3n72/7ea_*?<1c
%mLBOn(mbct"Lj:e>m0;=)]%?u-J%-&bU?$Mj\&:[cY?:a3D%@&4^r04=N)D6,\6<D'!ZF`JsWOh"g4p)62Yh;Faq7TQ*#=dK3WZ!
%^guYM1,4`?C2"?.o&Smm.4?/l[u`^lU0^h233JJ)D!V^c@PI+aqO/J2%QW.U&+7Af?%lT8hFJiU.gG1"]hFeV=iEq+gOfY/M`5[X
%O=XuWYTK0U2(ZOZ&'#q_e'u<&!<L`HG*n7o<]$X_5?D\P4^)ZAn[_K)Oio]P%hN82bOoO7>_Ok-)n*Y9.Q(O_7Hq9];;4:$DS't,
%@DXG%o3KaP/fOQ$4NNdjC`.r'jjP]RmcS5RXd^F#UpjSR35CdG[Y:UDDP<LN\s>sjZfk*%?K3eH[PRVWI*2il?-b$7i%O$"HKbW[
%b&]upjNC05@*[k/H.j,KVAq(O<O59ecW.jEibQ%d:lb.ubt\nmj>/0s5:/'tSa#06)RWV(gNTBDlZg2KWE"<ZF[p<Yhk.Ns5I4P7
%V`EZBk4E3PO;e-SYRZgT2''OcF:ZeV1s6270J^<eAAl!C3pE]7Wc^"E?]CrE`EYk.Lbh4V3uT@0lI/!FKSHVIbX[s,#"Q48=rfpq
%,hdo4@0'J$WX/fr2X#Vpq@q,.rWG+M9sp+>'_?)T'Vk`e!eWm1)8Un8d.3B\)$_AX=uh&1;][U*>[atCWsA&D>j4>`Y^@RLcT^[M
%c0@X%l4N3UUJ6DI4n+5%2t9OSGfP%[&Xj<h#nl8-gBm%s`%#<gnjtP^o*PuP3<dW^7VsS7')+Qegj'\%Z$apA3N.cP^'UnuQ6l`Z
%:[A]0"S1j_V[*19;X?>p=fZ%B%S0&#E'>@%$]-LiQ.-e\[%WVd/M1fj7%-!kan;N%f&!WG9)=G&f%6gXa=)5.q>4U'oSa@='dp>>
%I6nGWmC-Z_?H1:l?QV5-0Tg*i?ib(nSZJitPDEb_!3f0T!?Jq4E5O)W6CrbhSI,cLF1[`n%Ct/M9a-M7B\UC7Bq2aY"YoYo\Q+kf
%*#lh5B0Nk1d5TTf(f!^KS3o*e?'NTmVIfS,]!W`U"jU9p`E$D]\`nCOH9Jp@C9Y`sHVOZ/BKNDV:md]mLJ6s*Pl@?%+l+t2guK*@
%"W=lrh$XrO&r"@CUu_*e]2fJ$UqqdX"]Q*V*[c"@&2,II2VLA)<;-7s"sqIh+4ITDZf^6KRpi,AQ[OC,bV[@S1o?Io9N)k/2ruS&
%R#+9W)+]nk!Y;[Yd#53"a2%J[)T[FB%B?BMoD"'WeL?'&5DMNX/jQU\ObCH9#D=/BRT9Q3Bd]h-k8K&8Q\7^(OOFdL6QHqVX(oe0
%nC["Oj-N&N9cJIGoSQ2h6XMb-WY+\6cR6+/D'Lj\L:QJE2IGc,]9dTZh)7kX`H26Z<ssqri?]sNH#9VZrEa#;j`IM4APrfu63DPG
%aR3#RUOtl!XGl9##3g489%Rd:q@js'&MC$0EE&!+6][2Z93KemAl*:nQ(g"+i?(FX'\tD_2;piF_kf.OB%])AVZ;;?a/schV$@fS
%((4o8\n@f]T#TQ[W0e5.#_1.QgV3!s!49E;i>;'=$.eZ.>WPEu^`_1u.a)Dr(qEd.?t'u_"qXDGC`bF:^8k]DelDBXT1,Cs&2HCo
%]V`1XJIDUS]1Io2>\M=BHECuE^1knJW]8E_XdH'MFVEX.A]m*M@]Dj3#:3D]3/u0->nEnJbt8UqT>ok[=m:B79.B,mb+_W>>/<Ws
%E&1'0]Dd&C\V(**:::#f&uU^o>dG!t%N2_9p</+lC74^m7+@QKUiB\&&SXCa1%]mD(3J7Ca@alLY@GWZ%2)d+iaPce$<g?0==dj:
%osZRcN4@>2>.$tWhTqN_geJODho^=P85KBi/_WI:iT=LJ:Ft<=Mp*#_&2Z2(2*/DA)VXC.),'PZE\3oiPB+>kg]G.AS9#B*\A_t0
%.V.Grd6/O.QH+O9aQ3-[IcG&&E0eR#S1#')":7BDlh.5M@41^bLct=NX#VYBBnV.po)`oFD6M(&D*VFH9daUd2k8ckX)su[3<_/-
%it#!FQ(kGf.[7NV_@<8)Z;]'33t_2Z-]`sUT6`q`7qu.h?$(*U%:;F5&&jpT0_=VDpacUM^Xb?)CrMZG'nIb<,&`24CT#5mPa<@'
%%!(1@?V!i^DI<=Zj]NA\.Y9E>5j07.=3$j94j8e1GYu1ZMeo7Qh?n*%.l\s5p+jX\0unA76:FR"X//XVM>f(1[O=u&ErTYV6bfkX
%ggH`EBr`mK8kgWU@gFj]Zc7R!NRrub<%jE>+mjOq@YdaJDJqkL=Uoc-N6_#\NHtqh\Ib?2AZ)AO!VPiW?n^*iV,>*MrQR)AHOIAq
%dPc?^'NF5Bh4>nuWl-07=O@M8$=*qNoi':eC[[G<+,`t-h1RtjDOnlt6D:>;X-p[#(0%3#V?)!JX;<,Tg?iWXO)eIBNESZ=WLg5/
%498/A(`l%I@F#3^^QR:1<@7,l-9LV)giN8,!bM)'%TX]$eT;+:QV3P8/Q2"o]]06b-'2jJ2p>.a%08Y:H/dJ_dh6k&F[?,c5]ZNF
%<q`5%+#=4CWX/24F_.FE.a9(LG#U50c*UL4=e+G]p)QeuY\Qf`KSi>'F)c[R1,NfKPA"r,][;RaX]i*m"cAUC'R-E9)&;o+aXBt!
%-I+I/0NcbhiPn0pX%$%'&CFG_KTt[HUV`>';8[dDOY"QqK/)K2lt!r=<a,J"i]OF#VFV7_!aW5+HmT4'5009^L_k2C675Kcb(=p6
%A3J*>%2T1h2U%P&_cWn`ZL'M_E*@Hn27sdJ[N&f\6X(#=6e2E0[M/+oOZ/[DSi"cJU_AZtPMpK>*RjD!U#Nm-L4_f^TbhO9^bd48
%6h2*R1;[A&/cRL1ELO$6J`AYIg^k4Vnm*Bn`MnT/IE,X7#^;<A#!kR`Ks,(_N=$r8Sn'Ib$,%S"30Jf_,k[Rjq]tjQ3>A)T8G6<E
%$M#e#"uJ3..;F7m\Z.df)El]r8-Yu0L$dE'CekCiU;;CKi71(6^uK]Nr:]DUL_9t^fW4AoqtPCkf(S$>Wtg:E+1Og!XSKLA!IDK>
%nV"A"q/p'qAIU8>4GTqJ;Th?0\3cbQlj]CuU-7/G(fh!'KVW;a"&6p6,Hq`^$[L<aEOluUDt5Cck_!-S.@Q[r1LIP0+TW`X<Z0*`
%PF)ZP^3Ln\<?,bO,&/c:Gi;*41*GP^gNOC1E,JNU,ksr`SI%:3aMLB-S=O4>On]XL\=W?[0Pb<$M'ou^%'GnXH8]3K17O&D5@OFu
%Vkm0VPT)$:"<K[(9B]C=Wt.4E23XZff**52SQ-)h95U]^6)KuD^=ims<MoK,1'(UV<`_]]0YS*7S*LL&.XJF9M9!`E`V3\Ab4#Wd
%Z6CiKM>d-SU%$Npmgn:5T:TcoMqalA!nN"N%a#u'd'<r.j.X<1,$5AMV'q70*\2K5@,t!'6tK1cniVa#TIb\?@)bO7Yor_^,+'(Z
%+!aIoF_)0/8A.;)_)r>!SB:;/7?KAK#dSF`WLm;ro,rDf=Tn>(`K<SCGNLtt70^[6E>HCG#eZl_Jn[Ne<u-?dJN+`S"ES.I@-21,
%>emH;ZB@3BfN(J'H_:Ba;;%:$YBq2V7i$XuoeVM6\l&;fBEX'MaIm)Vn-aXJ(X`F8MdTF*>?4bnbJ,ZZ`ghkAfj'ddP6!*'Ipm;&
%11;A8G@u[131j=VF(X2OeJ<t/iW;M&2QO&>&XIquJf0,pjIFR`31j=V;@h`6Ae@^/(go$QJ$O%;aEL*6KoU5u8%*c-)J'N)bS\DN
%DcSIaas)r42!`:.d-=e9(;\59r2_V?628hf_CUUQ7Z]X9#\M7IOi;)BN:L82fH+O5AhU13^8Ou^11[KJ(c/?JK[>I=VG\foF00Ht
%)71<uJOD%),>^f]E.:"5Clsk4X9;"<ZZ<3"K'YX3&I@#QZO$,=PXV5s%C./p%>XlB3[I,Y'VHo&1RrJ5HfgMdR\a%XqoBshCf1G5
%]'cLg=ni95N/BOp,)\]m2m4caksaI3/;!Y3A.cn`%VHAI:R^5n!]`=?1Q)6emOm%'qJF6=%7s=T]'Y*u95Ij9"LFlHce\0fa<KQ?
%PFqSSlJ6nuah`;#FXM=q?6]MS"LI8`RSn8O;<3g(/"kHj^&hF?0i?P7U7Q@e\k"70H??u0EaKKIgpQ<2nM8NU%uQ&q1Qi]A6&X%k
%!C[biNg'8eK=oq"as%Cm?!.:H'&kS<%ZC<,rpm!@"cIE2\7a+n;oC\3H(caH!-NpQEVY\srQHHnOS;tt'1>Pb$g3@eVjr/H<Veci
%2CXPlNgSNSW!X:A$'g[3S3tIDO=F+hl!4W,I[XCBN,^SO81d@j3KQ%T/-77q[&tq]@JKLOMdTGgJN46>T(":_3Kq69Y.obI8hOG7
%@+I8rU]`:q3.E")M$9Ya5;DV^/![YS5Sgo@>aRqqJ]Mm1,E%)Ve9k?KU*,<E@UC=;@)?Fl=Tm2HA7&IB'D5]\LhB2g!G)kejg"ND
%0JGX8r=dub1Q,Z+4joih0I(uH=TgAjL-:TN?9X^?750/UZ6aDVlu9+p>H]^K_;(7lQVSi-N/K`b=EsARSb+h,Ohd4KO@c]*MdUF`
%Gc**E\WNH+U,pdDVSkQ[DRa-%^gFm"oeI/!ZU!I2i;2e;7etM<L-4i3#u_<K96Ik3ih*9)%h_N&!'7*6j`I+?OND,F1lR]GB7q[f
%12L[;PXY)AiDG]Z>-[Lu-Arra^-?goDD(_/*,q;R3i9bSd9dug8ZIB8,a1hZJn00g_Tit''U?]qCY!llAgLTu_8?,a3jr:NjK!hI
%;=s!c+M8C0[@3Aj^Oe[OUC:qBf[[9WiG3eVW0UjYiG+U!X\<]AXIKiVY19cV@?Xe.dD=;Bm]&f[R@,t<C?0;'X2l0_fUGmia:`*I
%(S']U7E;R0.01s<Wi"O4NFGnsY\0_oqOhQ@X&(YVYi-B,%5CnV@,5Hb`Ej[ID1]:18e@J).gN@PjpXZq`[]'DUP$#_1q#*DX:jMX
%Y&?lP./X;!0PJ<Q.Cb)&@$ME.c+_<go@$6$'RO!eHBHt18h)r(dY*aU0_-ioWSpM4L-1YccpJfD.H+`0d]W%#INb1dY6,Su@%UF]
%jc<#_&Jhs4X;P!+OG@9gG>2/:JBF>E``']I!GcEENmG)n/btfX9b&(Z>$Xosm+4k@pSHn\(0!ls]9a8[mWCS<eV#kr<F(OJfFep7
%d6hjeXSCtq/@MRTJ9P2&MUBl^8#tcC+iJ'3D1bp1X*har:sBBu$=\qGY*4kPb%7Nc$rii^+0K=[A^G8KMo+*t"=luLM>%Qp(2]Hs
%YH2>5.0=<Rd_WlhUe5+W@M_oaG_VZ&esf.j>q7a#ONE*/-:/d`d+E&dLKMD"bI,87APMGX;O3d:F?"mjN'lh'6'sbBU01D/%S8N]
%Z?ZPAOCQ2)TbEJtKJhkm9qAXS]o[0-#XTg1quHL?\:moD=TV9N+s>m!U0%6d?9R(ln8.N->24_<e9$VZ9MlCPjq5@Jrmj]f9:RM_
%rj#'c%08*7.Z'=hB%`KG.lDAc/Ts0WH$1JH<"V#@Qre*]%FHT#eE@5CTW>`8)KnG^kGsaA^J`Jd/$O<N?Goc>@EhS^M#;)k@V;':
%;'`+I?feOOL$:_bB/8]6]nKL*lHjPQf+?Hq;I0L6=Fg/2kq]T,eR^'\G+gJjY:Zp[Vda86%<QqHXS7jl[A&b7LL=G/XTc*0&:a6.
%Vfh-or^Kq#=]u:o1d5(3^C1L^?>*F^m!M6VJ@/b8^AWRMPU)#'V7hQIJ=*i-I9AW<1FF(TE=3nQ);,O:O\[<ACm569V=F](\b0qQ
%;q#t?(`P&16FOmfo__%-C?ng:j#sH7Epd*:L\r:=#9I,rBtNmh![c:`,P$(DC"rt<&K_U291/B-_p4JX]!;f@5?Z57KJ>!rk_$_^
%3t89qb2/lX8R#,ga2?5gin?t&>$*Tsjg_5$:1-t,"snGM!OEVL88'dfd[EFp$gO]aCH<M2@8QmC^t;GGo,,NFTEi*+F$FBuZoCh6
%KuNX\&=neJ^_ngFl2+L-b]\Q8Fh9\V_WMY#hLWA!mam1ZmAedNU=R+RD>%@5;(^l4l)nZD=&eWg+7;2SR^Wh_7T0"+0_il;/]"!4
%nLeDB"+m(fEikmS5*Z?iTfB,?NTk>#Kd@@Dg<53Y&Kn`Z$Ei<J0Pb+OR*?s4nF"pol48R9+2$?Nk0&a@!n^Q`mPUcH?[,T&FAaA[
%]Q9&l@/6d')6?-8H,u8l4&d$^elEM35:nBrNSdDOjMQt>%Q=,F$*FfdBTS90\j*tr_s!QHfHbnU\'.Z(!FqSb8Uq!A0b?\/aI!qT
%-WhVFhGOn;AEB=='\[QMbK(f*994r@;IC;N)I("m\@S):A.4lV2)7"6q-0T3:WiXp'O]mHA0k%g8a'<XeTrD.?86*onVXh,e5b%]
%B)N!3iF]6\d]8=31GEmM!]6h'U=<A+<EK@"D4W;P+<WKV(Bm<@<Q#"m\/cN:&7o^1p5LWs_qR2eTN6__/BK=f;*C?npn"Vn2;Z3@
%-K(e:2P[-RFFt^*#m02[r/3LkBN,E@?&6l>,l/'C(ipNnml8#;Z=MQ\a7#h<#8l$%!E&@@icncTWdXa^S$)'UMOALY@g]gU\C4,r
%Wiu;0[QZQ/)rb?1$\g?4go)Q*JpU$>"@5@O$ZoG_Dg$_@Z=blc_037:h[,]`HO:EO@r=Ic=$NYkI)IcoB]7g*/:3Y>W53QZfI=]@
%B]7JX,)cAkX]^U5AMHk59.S]+R;ujU6,NNuWAL!F;?$>\HZKW4Ps"l/G86AL__n78E;6Qp%/AAV\,?eZRKTFO#sEpWps<ISNXo^E
%j\j*0'3m^Q+5$G[nWi7Xg_MEa/\*B4W^nBLA?gO:i%&SlWR6!'"gP9d:F\RE$upRo4`[a*OW,`.4_`)ki?j7.a;g\l(dS'S*QG'M
%\1I"_kWjefLIl@^Is&FtX"I&.*B4l!5MSg>FU@g3k>6aK#R&t9Si=dUUfq_UQ,kFQoY9j3DRO@5s7Xakg$ADLiSb;o5?N/oX!aQF
%afOo!3gX)/99c6F,Ha)DkVa<[)+P4ZT_oAfHn[8+ZORFaYp89AoOltH6+7r\qh$%_\p1G*nZKu!g6)Z*%>lnRD`?qlTWDP3S:UE]
%Y(72-4!UQK5-S_6q1HII7A`:)\899B+S%k.2eD%?E=\qrTUGD,8sjZl/_J%)*Arm?=aNnu8r#9C12nH_6o!4Bb2t+1rB#a+T0-6@
%(iH/6%hd/o5;Fb^O:qXO(R9/IE>HHDK)I=3Bf:o>MbXqSNMP]C(L9.r<4Z$"=]4pFo^o[.jCHf%.!o)J:j':;E'%'LrZP:VbXfYK
%O(Ho9T-'`XMHZRq;bi\?(#<GB-:e%%N,nEtPi]$T19'#Ydtu;$icb;REs>of>Wljh\kgh+p+ELFr9fdY;N(<b&1,]mrjZO&d+Y,j
%NN=_!3g[=@oeJ.<53R)!]=,l;-?uA=rfN8/F^BIY'..Q`I`i.-qm56QklWeE$Bg8:=/Wae6/3+C7cFJU(I(SLS_&fS"Pl2#)g3CZ
%)M2u,mV1(p,;n3J7PuO#?+k5'oTnUBiL^8:=l&CINWa'WH"2Pn^)GYN>jDYcq8#liDZlpR_7U^p0&8qO(#+<Q>&lBY'jZ&;rHGq+
%H(lD>B3q.J.gt1WlcW&t3"LZr6,B(1G`*Lo)q.b_:#HC08;tBXF@YD5hIn^2IZP:MEt<L.NE0O(4O;R&;a7,@STurRD%460W4M*!
%._e%(?@\+.)KPXD%)=@7YHe5)]/#Zd&9e)G+kWsYAuiagM5"R)kEBn:<^`pqMkH_VBH3a[#3nE/WPXJAo?-S'"TujC/RZJ7R7cEB
%jR-;(h#N)\GNMT/a^IVJa:m[n-L6EX1LqEK3sEK7)"]5ji54IX8OA5a:Y6/lB'\oAWcTIBSFrVjg5t=pihjUo=KGa5Yq$BVjb/<J
%]_)2f)SmEOBZCK&PGKe'i_(Te`jDDO)sO]M(+Bmf\PQU'U2Eb6Y4^b@>a[mc73/D,bXAMC%ceq>=AfHI4=XG=!^&!#OLbKITd>uF
%o%gN_>`Vjp?GW<WhSOt4Rs0^qFE+#fFoU#;:8)]sKRRB5#/K7p<oKO#%4>'%eobE3$-9u9]`W2Od-&gW?Vho>gg:Zq#TX[<\:(oR
%+eSNSGT?ckmn.LQ7onS`'o]n*$pHS0i_]o+GiP2)mVkiFe"]ZC<'nPS""`Y:JJZ^M$@8T8Jh)2%5P6/5Q*7Fk3-"8LXi+Mmi0B"J
%0Qtd59iU1JHSigSNW/1G1=e.2@F1JsFFi_rnUAs0ZX0dC]imr4Ytsuu]\\5k,"V?EKE`!.)jC2J.XK1nY`A%&<2f=;I&%_V)<8d1
%U/HMJrY"B;eT-!n$8_4"kDQB#QsQ(n+\BafQ:o6?O^4j:EU&I<VRR[]-8n?A@G/_9G0"lR5GAb[k=DKV2n$/&QXULrnl(&5ooi;4
%)Te&_`heWe<To<0[srjW?;>)U2ps\#F5I^,&\B`(_=A.^X',mf$6^Nad[nFaE1@YK86;R,0Ro-3/X$,"NS/t[8$gJcNcC`4<]-;`
%7,,X,-ZPeYNJ*t,&OjSSXL4-`W1dO5E&tXKaA+Rc%_ENg*Eptg=;-G7lZ7oZG98+tTO-HIZk6V#WoS95KENN\T:Z"%5j7dLKH4N;
%#2OJo+OcfsFpaT"F)"h6]%iu3(Mofpi=L=K4ESkh.YaRG4E"O_khEB?p![''1VOrf4'?Gi<UApnL1CB9\(,?fKq+'k'l>+VcLXPV
%./f`td^>oC?K"GpMYfPFq`k[R?9?q?XEh=O2.=q!NE1@(KU%7?JahVNYP%-7[ms\*;42[G*Y=ZYc7D2i(,In?Up)k`VgGM!QGi"k
%>g#pm7/(`6a=&n0+aPXH02(T<JLL=eR;KsNV&Sqk6er\SY:F>da<1#^`4^l0q8/p5K43taP':KAiW\ei@+S_fs2^4Q?7X8#[+>_W
%?]Y]_<m[nYY<`8\B,DL!2+P_gj%HSCS3_LXS&Z!^]Bg#p47$@"el+cMMFRI"-qC!8gD-^+JZgSX,8lc%5d.+SIsK:LPR!Rr(2i0I
%!")hAMkY#!muM605h^8R2KuRoS@jN4,$AW6?jMp&kKYB2'CK_m_o3++\qs2!oqJu+mPD&N['En.8AGK##imI4:RS4._h'g9]]cm\
%83fcPqZR`j]BjA"7U`OM''=fDP7*tDQV_&KnaVE"I;0ZrUl"b5nONJ`bmETGQ:^DE8&<iqO:t[:B5f53XdYopiik?QC?;E&AH9rs
%`=L1']u`sf-E,WL>Cc#IZ:!k&Iai<4EK6:9/)+J8Ms,MNX^%+\%CX,2os+[4@,AuDFOETqi&"X5e<44ec3Isb;@5gMhj=Gf`]h1/
%q2Gc1c6YSiAKtLf%Q4m[.k.3(e+sRdXar9aA\ft"hP=\KC@0fk8+-GEZ8N(U*4)C`CJ@+1mIAKoe#6C,d`<"@?sc&kW]rq4?U'>i
%s&_<Z!IQ9&Xk>S_^pjc;T=kKQf61W%ELUR#4kQnWN9^kpD"a*9pL(PRA?J!$qL)a)Lo+sIL;7#5@R\"]Ju8%I]jFl`A/CHMm\Bt7
%gg?_nX=3"9l%Qp4\jKfJ(t*Y2P`j_Ll+XrjG2t+(.@:l#K&L)m"HH*PVdD]F1lDBD]DWe+TBk'[Y:.fNc)WHg8a7rW:FiGW)"rcF
%otk+%hdT=R-67i68OV8j^VIAH6@F#uF^A@H?W_kQ$[;2k.:IfVlo,Tu]S"%Li>2q`c&e.n1CRdF1iC=3/-66tknfKdIJ<j9pT+gW
%?*;f^E<9re!U2P.S:@R!]8/]_>-eTng;>![QFTZ#A7-:9;LtJj/_,&2$%&YT[L:Lq,p`9oN*sMnQKDJYncJ"LJDj/OLG(@#]jt4a
%*Jc!?C-SEX8J(\e0C]dJNXQ5*\O9?1,2&2P_6<1UcEJi?kUOG=cgW67=7]W>\f$Z"Z<b&s"m(<Q'cTAZSo10ba1*5tjpBbV$R7N\
%IMZ[p%l82?9I$L,W`Yr/\9B+X8R4AQRMqQ;N>rI@g`$rs8@i#Fb9UACfBh!SZ:HO3)Vu!]lSK/VX*tH+T.7%i[e+m2f]B1)Oa32t
%^0lp$*X'oO$g*2:l[6^6n!A]]lgQYGR\(e+)hOm%N#8_<"$i6*aj`!IDdZC@77B];c@usqUAreDRZk\$V)PTYe2s,b8cai%SU!4$
%&sZ,V(P3dtrDI1u![=+.1L(LJ0,R*3^$V-f;sMA0`&`3pM:6$K%ZY'JlmBqpOq1Q+^$rrW"u=+1f0\)W;ZCmG\SN)UPh7]@(_F[+
%h77+4ijfTV'TEn%ob@R96+O'onB^EsQqTJ*0?k1nG<OU=7Z(>Z-3Q9B',l+!!J8d9aI#O%&9W3u3sj^fJqtB.MX^Wuns.\=/u%#R
%RslMU]1'@2_FB9BDGDM3+%qKfJlP4DPVO!/)$5(gpj;r$iMD;iUeFkS`S;'IAKpK_bbR't_qqX'FD*H&O\)@=4O('D/c6q=6a6PU
%EYcdnI>X9:1g9Y:#C*bE+k_S;*+_LCKd$rl"t!J7b5FWQ6,q_Vc\'C<1V&g&R8XA_cG6Bkb-Vlc=VWYTeA-l1(_CBi9BU?\:O=mY
%JOajhn:50:mOV9kggP=:]HM=rGIIMj68CHNbJ$4t3>p6gj`pl&6dY!Mbp=;e:Dr8f&RcD4+=^Z@de&M&(>J@cW'36dWR6gkDW;=q
%Hh!jei-d8gd;r.V<lldAFtq28WkHcND$ZaE$h@FTONn`0I`#FUR-<fKlB<C=\q4WdMNQ4[3=1(!p52On^d`%/.0VgK,`TnajC23C
%fbmOrKZTO<PZe6dlnt3f$#dqWltMaIL7OS\[k:dkRG\Abct`n+ZA2P*FuIS!N5rKE`TcJgoog']5^Pk+`U^TaHa:dXcgV,+O'uqp
%]+>gp(%`\Z>MCVLs4X%qrLa'!"!`-9le3<YnVo/;#m0:K@\3U:8<8;`PIna^WH^S$Rd18CfPt6<U:t##p=[N]0F"6c2L-u.GG.F"
%)Z7u=@bn@Z#F0pafD@J!T\iQ#U4mVcapJsNSPstQ0Z;M,Fph*h2?<CN1WXPh[`T_.>$SBrm#+Sa1*"`Xlp'HLcse@HhoMlS?S;aD
%^bjjSD)BFG$7_jq/37/"J>&4pWc:HQR3L359>jJ/LQ1/jjR*s.qbS[NK&0!sj#<Fm<O&c]U[,GVQd^14d%'bU2CammM2+MWF;Yke
%h-GXnXKCGQ+\<Udbcca@7a<F8-AR<7X5!aP4K(I[BetP=Q<4NNh$+@j=qud^+R%Bbnq_%+>_mn]J8g,K62K:1+ds36ig,^0pZr;V
%dJ,!iZWdIiB$R<]-:A+^*XT-"<XVVAg_Xm%^V`V1;1l<8"6T<B_Ee<_7:.h1mlc91]\CZUhS*4D(`]D%*CTJjc:oCFZ1)9@!k)od
%,k=2aPK[pLroaMl-GVuQ&8CPaIJ24Op.=!/AD^*0*n!o/#kuL(Z&L"Q.uOX&",WM*P"-_\Ra?i;!gqo)KZukQ,Cn9Bac`enf>c8P
%FRSs_q!pFR318t[WLCGNVgtck",p%fnk4Q\Qs9pDhAqbp315i<(Xo.mfg'QX'?C'9/npCDOoZ[RQDWTZAqH7%'MO@!Z0sZuen3h3
%Zj:Qk;jW%E-1OpJal;NIjdn=!Z<D,Mpd2e\j:1Z`f*dM534?_W^g,k@n3"2l)%:nsXA,T<!G7t":c[XTpC;a?o.lh0='dXO,2UEG
%a`cR%EeHLVGP4n8;VXrl>,$pUAsK<Tk*61cWH,b&ddR0CC>E#Vk'9;h;p]PZ%alLYS7?2&G$%>b^h0d:+kfaNBV?;^9:\U$10Zlm
%!@5e=2n0C5OF+.5JRCQ$NWas+\]mHjpI#YMH2?FYKV;=I:1>CcNX0r4l*Ra7i5Oq(UX@pL?",RBF/,A>`Y\!d4tip6APX*\#T*A3
%Ak]4ULlcadOgOI8Gt+dSSO+"Kl8&ucdE3*-YMi?,cdQ[j`LPhWRIsat4`,hl;V=h(9_&B:A2.NHQ=ZffZ-\RKmht!gbBiULmidD6
%L^Sq8++Y:O5_2Q06-aJ.[o8HTIQif`;bo<BC][)IUg(.sWZ@Q%rC6e_l'hUf7&h?tYe!S6NQ/p^dZsiSn-!Y>M$O!r>h:'OIW5Hc
%8ELI,5CY9Z][[R2L3+Cmn;39%*dMdp7_.CC;<(%/e[?B9q:7RfBEScajJTVIET:*ZL5q$T=KQhVaH3N>k,G`r0gu%V-)MmN<NUM#
%^lU(t^Ae-\R6qVG^-L:3L,<"I:C)A9c;K!OK_9Za'7mSQa`k@Z7d'A44/3t,$f;u(6%^J5hsGaZOL2Y:>s86,ioqS?S.'F*N_hnb
%nVuHi]*(:[`K697@uE5)BbcO-<Ejt)3*VHg+&>Aj)0T!1&]"GPq-#^m.<HQ'r&_;_K?j#Til<tH/8j>oP.Wk[GkRtL(-e,?>T7p@
%KeBc=n7G^E+d,1'6.7"3MY$RN-ln#h'hQYL6+<9Cl55,<n-dZG"t1C5-8-N!L7N$M%*Z=.0V_FtY7*O(UUr8VMt'2uG7Vlq+eE!C
%jLfR<Z.*2WIB?6%Oga/$kmuK^?8SME6OrhtV6c)UpT?J/>nZ&O=B#BJ,$1;Ce)65gGH=aV,/.<^:YEhBmfS[_'U=JMA:"'0\it<(
%:'T7:i:9_t\a./]$h,?5f6Y>_&P$-/*VF5%"IapoY%#%?l3oZfFPee-FK(\&fY5Cr/.)8:03)E2[OXT1NJm4.@4o]aMIuFk,knih
%6TdYIl:rTc[jYt\jtM:VP[ig5V5/\Oh"'I_8G1][TMJIKJrc.R*]c'e>e[,mPOr4s<1alSKAE+dNo-J[kIo`9,En++Ur;Hf7I=D+
%N-reZ,Emr*^o?MqlpP@SCu3:_6jM=^7V7GS)M5#Agn+m2h;nR[@#Iphp77<PqZ4EUA7!%hUjGXI_&)=W0D=5[Zu8p-IaQ'LOT%HC
%>JC7AUlgpMO!&F0%a>uU6XY^S0s(Vsb9-S)FaAYsLd&98$HII1;a!2%kb43m=.ZbKWEFUWE=TS8PSn)?dH,>_ZXVaT^6(Pt$$he_
%IZJ:t1C^1#Z"ZRMgklO"e$Y&1eiCqc58`(f^1Tr!;Lh9'l*8GRj8F[b+PKs+jP:AWH^^:!2!UF;'^O+!%N(B>d)<*mS*Q51$fTk@
%cq_J`cK\B2g4SjW2m`hUf-rPDKSVXd$>?a+N['a*a]=!(g;sDY1_;lI'9(&<GYrdI#W<:NM]?K\pmMGOkIj'"Ea6Bg_Dd#apPPSJ
%+R1l\O:nFqIfuXXg][Eg5DS4<YSdQi/OU'4X@D/Lrn*G+XL6Es;)..Q9@eUYE5GR'R-5no]"1RR3Cm%s;c*C"]X$tHo)5<RPi6DZ
%Q/pYI;m$%\Z:2360&]83VE_97Q0^URR7;a^m+>0(&!<J_&!;uYSf*4G^!9BO%<%+se;Ju-fu_u'0PS$G7X1`/<OoLTk1?2$@q<1n
%*\2^76XgS#A%)iQT$$-sD5#):5F@KcRYDsG+RQ];:.-aO3pgUIjR;X/2GaZO`tun%A'lRf///0!JuON1]Q!IP/r^#nXN;.I>$%,&
%OIu8JbofF<kN"dOj`A'SdHPN!6NK;=NU_aO5?5gOdGL1NaMA&PjJE<97S#pH*eMG6IV,k_&tGU*=ct6C;1@.dc%T+dXtRQ0+lq)%
%91Oa#GjY;:AQhBt!9b0BitAe_F/jV'bGCnY70t!s(8LKrkmCe3&(\''Q;`;=nacaV4nik5gjLs;eG?`TG-:?)ZS9khW01bbiuN%l
%To[(]kREfF#:f?`Ef>1ZHi")XA-3sl;M:)sBfsNEFP)$t(cC\/j^Pm5jE^;8T7(e4P(=f/d^IS[Fc8W=-TCa^%#V<V6r^IK$k*c=
%7A38(lV2tTgau^E@'?S&Q>c3]LX])qM7$S8^PMP#4Y(J136<hIAUuOYU&D28O"ME"iM^tCEXaXKeHm-<L5'7'.d0=2%>!m7CV>1P
%jIWrg@3E6T.5)6aIm`JVi$8PXGi9sY0;Q]/&j0;)k=IaKm`A1gR:S">r[q@/U:`q:$pPLjY,/5uP*F\9K;8RkGJ)O_k&6GZ-n)EQ
%r1b28\utKr\k@<eJ\Oc:b!t4]Q!]`t%[j)Mi)0rg/^aY_/0k]Sc`EUF>X6BqMEpR?5hQfU<_=#5Z:MOW&@@/c1)6I&I7TNB0>VKr
%K*Con"rcKZqIH*;msl=B(W_/s9+Tq`4KKiA24Z]k'Q+_CnT/!kT\5B^OV=/oD6I:`D:JC[$&ZL>^`(_X_laI=Kfc;<rgEGg'?Mhn
%4:RhH`*JK83"5mj.\9B@93!g<M(c!*Ce]-^=K8b<BZ^t"gIBDK_X`5C/NdNr)kcEDd[?6@ej0CraM/bn7S<Wf#0f\$='qW4*,U%C
%3Xm@uZ-qC/7A7U2^'-l;A4L63Hc'8Q,(-N+iC,sp'pJ8ne:S]oQ+*5!:=@I9a\b(qQZn2$p</N[@_U>hdM@AB<*D\+^.F<I;(-Zu
%Z4uh2NXJFF:DAIC,&;RADS;Cd\<&/?#&2dcSb]'?C2`]l05Cu'i2Q`q+oS"rS(W6,G&dWn3=^?soeW0R-B+9'+0G@ra]Mk?LXElt
%qO&/W^(AqZ(%gM?#O,&+AipFS7+st<Ph4dC-TRl$?uVqToX\^j9PF7aRr44oJ.2'c%@=^rmHoY2[4l`pMZ?a,4VTd__FB^$W(mS;
%ir_qX7E?ut)rR47U\)"N7[T>o.De=eA^XIgf,,h]R0PHR$q4!BgH^7f=5UI$S[S2>s*5ann%?GGA^mW)GgRZe+'(kIdYupa`3bnO
%bt3Be4mBId%>T5Mbs9n7&_1l\*2[l*MZnPQYsf)k2PU#%@?KPE%k2+P4S@V%:6O!7IOdSXN;*LNAfr3l_?;q@,4;*H1Vgo8T(k(E
%^2:qo\A@Yt_7]L8!P1M:A^b1tP4Y`HfA=4QeD>),o2d@l(Kfd`SD0]-3O-T'!.SYiQOR_b#8"J^T+7aC44S2;/1dX1!>?4e.=fl\
%$.iHSp#6&Ef?1br*Z`pAo-JGr=HjaUp%.:9k4BfJI)<>9,LNJ/a`38Fl9*iI#,duG+g<OsL$2*D-kCO,(VTWrFPG19eT#&pf,hnk
%FpTQg7_PHjMrM)d[KKp*HRQ"p"]3#4r^MVh<%aRg:#%2_]_"cE80-BAHOd$1"t4bBMb71b*Y+@1dBm]Mca_^]mC3R'BrQT'h&7#N
%?8N.fL=`A5:l]7KOK%+l=Ze)Q>s:-"1_0+rWt>ZQ#FUh'cAIAhMi9jO<_BpU(63<R>fahEgYl4dFOF7tBE&%<8A(Z;%%p'9J;13<
%,8+e<4e/2[UnR,_XKh5>is+n>(KfOTK/@8]k)i$1p_!0-%t`]1-o_=glt<,G&Y:?YU;:\:"?dTBWX6'6as[u8S+nFX\0d3F<3T<O
%&b@emBG56--?"?$W<7]K<UD-`J#L3I#<K!lUY[52$IZkb%XL+9]c(\D;(u)7e'X"ImH2)Na_2u>?XRjkJcr58fIUScH:l09#.Qqf
%rr-B9`3[hJ85rF/H%2Scr<MOHf-Y+$9Y(-ljJ<I0UCnF'C@Fm@Tq`!iqX&X^_%-fX@c3*l3+UJTJg#T:hb^+qKlH_53n5_`NgK$H
%YE>TQ,dUR"ReVCAoXtla:TrCO+c6Whh)=c@A.E=0dZKfE[!Bh(l;7Q(WMdl&L:G.7ZA`J#&J1r6e3IAC0p2/2792rW0+g'&Ud9s!
%I):W-pW^JeloVi[`<"gLfQb?_KnN1s_N)9U+\1Kg,bqj@I@e#XLi5b>N400$:!bRY5=M^kRT+&*+;[G_>C/Y8K/?No"a>tu/[[h@
%3B4BT49`gBeMtPIcrZ@rpl#XUJ4H^2[j;H^(Qt[]5jq0fO>&+(n]:dGjFu$eJhD@VaO/Hi,a8Xa+-aF0ELThek9+kMS-pf;B"2*=
%hqEHW%:]EG=IC4WJYt8$IqZah!,=mX/l(@%ZY@n:J\2<[L1D;cP!n9&\UcU!+k]HoLsLJ1fZ?[4qh2T6h153'^R9"nMCOce-GbLO
%P39<YU);<+]ucn]]068u8["52G4C\"`3rsP'g,eB\G`*:X=m38Q$_M%_+YAY1AF8lOV*#i/jrHJ@dXQ1mr7F9_dE1]XWpk[0LYXC
%$pKc!gVHW5k3+qqd<I0eH[m185<@i,D<0a";=M73eT#Dr5SH;=!$!t1ibA7aZ2@Ca3"jQ?1aGDoNXSGceh1]0nAKM6K08d&-^!O8
%:?&*\;92_cE-=FFIX"]a89'p\c`?OTY7WKqEWn,RF+-3!K"Oj(er.TWb3NYj&@$YK2Br16C6Tkd^+@0DN);hsTQF0_?)<"ud5bB8
%<@/SKOQ,HSaQM)uSmL[FE]9sh.M/!&QUdaId8t,C&VR:ANs_AQGS*Z[6;S[Kb*ULqj>nps&s7N8W.R@(Ngl&P,suGBRS;r2.+NeD
%$dlB*9"_eljK1)6Ii%\H7\'^j*LPoG.?V/!?<==UCIhd_(&"1+r'&?-agY]VNl$M&9E-&bGt,@??8Z'eI"'GU:;sc=es_.;<pU4a
%)IEcY40$(8O%O2kJM<JRY`01fo\&(Ep%8_"0P.$<nRbG^SX*>9;h%_DIf6(Q\D$PL7WW9+44U@t/gQfC([@KuhNMR/2adVdh)?Ma
%&1?0j"8=pe^$i<iOaqB84`2,*$RYQQ.l(WY'GkM):S2&/[dL]5BAa(kko'=80s6g%0_kBfdYoB\QejV<lc7Hn72A(kN528J2WI//
%oEje=8un/+N/S7iR^@f8?]3eNL(Sc^Tfs;\9\tCSF8ud?mWoc=gW(=M&ALlLQ@:mtiV0"^6jl:!(AR4<&F"S%"Ha']?8GPojBI5I
%6u'A^DE-6c,eV9WKs36ZS&a'MLs_EJ*s:Kj-0:R(o$K$`^H/d(o]h;iZqgnnKJ5&cj^\1rPR[g3Tg5bh.tX!>-mUfuc9c\QQ8:6L
%I$`]tThe-OGs0A6oS$-gQ;\G4YESb0;5$'n"M$Q>F-o"GAB:D[\n;'_ILs8?TeLedJ;u/m=R$BJrCYh8?"X\3/s)^#)Ykd,(29Qh
%:%;0u3CTEg>])Ui)1G[iAP,6pDugo,l[:*SO*0lqi8#n7!b51;T,j)*`Xb5[?DqLua<T/99SuL=<PfXeRnUMj/2^k,J"fPI8(F7E
%<E.:ijIa2OZH3Y2dWqF$``==+8AQMOR@Mh>!YV3:P/Pe(,jV9`1%;#.KTX*q8umF0FBd3`dV8*G)V/?ak.<^mJ14`Gg+H;JP_$L.
%l0il]">OkK!6h4$o8u![bbp<)QEO?*Z]hVWQ3]J2ZSOk5g0DZi;EiT[#B*5PZsedO,1p90$.'uhG]Ri_6on=E`Gu2%W*:'B,l4.3
%(TaM:VdEdDeo"&<k\*YgR0C:qR6Q:L!b0-((d5iF8u@?gM=<H5A8s7HcYbpEME@=1FOkGdX;$(elu1'/PJ:fA,3H"]c;P_PieTbo
%1la"I57cM]2E.e\]WPQX*G9I0Z?tbL@T:/0"0j[]R;-t_3@NeK_US(Mc0c9oE)EPTTH3Gc"$Aqu5pqVRMBK-(6$K&1LeIZ'+:<o<
%;lM*]nJ#7YIlsmq,5C`\3#1\,1cgD&TfhK-jrnKlT\G#s@5&<oKrc7c>LTAQ=/D&ObGOcnR;H6l\EK=A'j:/XF6!O2\A:_,%T(].
%%\`mM+b'B_=$Rf%Y&:0rEWU`O%_UJ%83s^8=;9LPIlm6ZNo9W!:$-eR3!4s5T,g;fifRj='l)Ea5B\0C+dh&,Wi(kG%WDifB+^tJ
%\$>cIcV'EVU0=jRSBD!BMH&+JW/<^5o^.GQEk$mU=c(A-BTKJ.<6Q_nh>n.DMdipR(%--1rVI7*\_$f!MSZfHG^QT!IP<J?)f9Ek
%'Qt<kX\ZcDosS++#Acpe'eWqEZ`#5eZQHtOOlL[7r[\>CL2DE>Z57D@'_ONlp#"X%OD7,dZ#SW385Gd\(;:g7?U(+639\EO'oo)'
%1*htU(kMeT6tMsOKO^Y/&Z:K36=JeLjm9WWf6Ko]YDFt[`;V#<j$g1S#t)`uXn@85-mr,9h]@DIl-;j%1SRG4@,%o3]OKCr,$K+W
%M7=c>+(a%f)NSt"!:ORB9`BU'H3<PjD.@t!W,sajb$?N'fI]9eL[C0DX6L;TceiVs+#)tD%-=fkCG)H\"?0/G?.61>hRUJcp[D!*
%m6<e5(oN]IIa"O'!`fO)U>Ed&127VRIsCeV;YQ4d^4F`!3%tS_i.O6/!(G=hWh>^9NER#dLct_X"'4&GPK!*&gI6!f+RoG_6dS0P
%j<T&=+d,ql37$S0k6j\b4Nm]XjbM3&?4_BEA6Ri.BR$qWb@[WH]\a9uiJra&8@e'!0+=d)WL,tV.7IY#d2.+ZWD(JUD??WK/[5nQ
%*`$0ja=#hdka^pZ$)NZ""@->9aEFh'812<CSJNc1=FAEj.AdUY[+0#?1+X9m#^=57NY*(qoMNFk/fZ.=7q<&(X#k,MJ."$'G92>b
%-5DO+feBLHY3k?Q>KpiRi%`%fEY(DTGD?^9Bb3M!@CRCnb-ElTT3dkH.9IYGJ!SjF#[u7J8<6$pXRAYU'O<K:HG(JF[,+[e(^mlr
%Ng-W/A'og.=C.6Yk+\(BH$Q]q*R#gPP**I&jqWte.gIS%%o#cMp?r>M@EM0,?^Zqd&a^77O,U4IR[A0U0d7hoF[967-WZUd)u:q0
%Jg7!XdOfJVI7u$u#@sQ<$Q\H\SiNF`YP)0im*uBa\jH0#_b2dn:$%'?;I18KO,*[$&Gc!)2Yi+@b9`QpnuHRhA7ApSO??@U]^aBo
%&.;eLg-9#L%.QB0UU&&3O_!M5GV$T9]P`o)lAf@dgdLj?(hi(iMD3ZHN'f(\RDLr$,*h>367dCmS^Ck;F&p:OM1RM!^r_bp,GU?L
%`Li)q0G!kDDG)%;*oA04=cE@!>BF,s6$XU,#@,_lE2uTcdkUn"[H5Y!p\>D4g'l*Xm@d[?UtJR1I;P':\aPAHUB(Hi6tU\jfuZG]
%TfNcCMIaPK"Y!A->U-7^16."qI4OY6V>/PZrM>p4r>]]h$=EVN'&."+=:tClA/!cK0"0+nk\LZO)X1jui\dKBSA:Hh"Req"(r?t>
%+#/gDQRDL"KbCS/rZ.:)T%K(B&9i#`7-3JML>M@?<lVl^q#.Ji*!^933FGrM0%NPsn>mc9ik%`kG($]r39_G7.5T<h'/GOjhKe8=
%W$=W'>V24.-LP9&`^M+%^ZP:?@sEkBPVg@K)9_cY.uj$f@RGb,#O8%TgNdK&N!q1(_Bc8KN,9PJH$]k.dI;6KD%jh8.I*W;RfAB2
%*-NKimjD.l#sO5DG)s@g6Rn5NPXe,u\.SKIf5Lk=0[,=ob4$1d9;B-d$P/3`5S#$^K>26g7YGKO`G_DFa,jIs"3m0f,Z?3aP!8fl
%87]Yp/g2.mA#<O".I"X0ibl!s:?OnPIC_q3Wu\ho@3=a(5)29'S#>/&aGtt0G+d)P#b1@r$kAFN(@.hV3Pe4(D/;Rs.NKL(U>1n?
%8DpRt+6$EP$hj#l[8RS&6>Su"@#YK1h?_f`\+lFmk)1!6&t(_RH]>UI"]O9f+dP$3?6&@Z%F,/D-M<UtZ\aT**4uV%PuhGA:$L&j
%A'hUA.cTC)+CIJj.+md8=J6F=P)r7,Kb5no?(u4cTgSO5Ul%OJ@-#G,$K54!;D6#u-!l$<%_WLh7ml&U<u?i$3N813VNo<q&'(L4
%7Vfek+2(#&:4I<'1729%!hqJVI3:hj7YQgFp$/'FT`$8o@3?H5p(@9eU3j;&Zt2YZR6c_80=4alCaj1M9"U1IIuo7^8tP/eKT?a'
%AefDc3)aXSFZ76#K^#YbQW6]7F>mPYc!ecS'_>Yn1=,]=#pZZCQr1]aEjO%^<]OK&#Y23jPK6V2Y1#_sU2WZ/L0:@O.S.CW]LD8Z
%SnZX]):Xa=j%abP9DIftG1?QsAtPNPL:#%Qcbj7#(1+ta#f:q_]p'[bFKi\dn<$M2R[hd%&WUr8b39TGjS\F3Qs1&I^`QFO?p9YS
%*a4$T"&GBX5+W9C>o_i?#b"3o'nGJb^^.]?o-()*]?P`=L*^HN%,X-qRi\:!+Jb^R(-gH`8g./(-=8I2L#*,?di!u$7`X5YcZ:J?
%+t7RN#RcIC[g\\')!NtKOL45r#74Ea]dGj==1$Q)qJ9CROc!u9]S%XQV@S%trh]*l@#<7G.e?4c*>Jd=Lt#,+P?TNIX7Ka`DX)<W
%(0bqkPP7a#idB(b<[^Hjg#gmiPDjYOBETS4gf)iBURpg4rpVl2oaV]_LD:f'KsOX\,A`NZfGj9P#!^Q^-bcce@K@7P9>g8$E1>+Z
%hT^!J(fCG*d,S95PuFi7i>Q\h$MHe1!;Q.O5tjS*GHu/Y8@K2^B<K$X\?pio^h9NM&RF+fB@E[&3IVd"<*GFK/9I:X&R+a:'iD]U
%:)VoVKU%A+2o-/.AcMmEa&B.3mM*EX(*ka@='%e;"nP?t&*ZX58P.ktCm=g<SCAA7;%u*o%0Rt#D_+^_77cRo7T---:Xj-!Olf-o
%;?6>k:IRCX8!/c)j4rqGF*lsud[t\WGb_E<P+!$.I4/kF"OT_I+"q,t8Y1.->V"N8jJ*0u+U*dglA[`tE#P]L@=F>/$^/bU/m2op
%rngj,4j1BlS,p"dR["MnB0@+F&VY1QcUt/d"mT5njR&%W6XH.(]rX="V+OU-U6/DY\Y^4%K6u3+kKCpm=PWf]V'53-8$6nNXPVqY
%XMQ$P@8`igD@O(F+ZltE\X>*[c!u2m"SH#UlKpB$F:HtW9Ig;V3#mr%73u9$gA*'4j+eEf;YEmaoHe(Pe83L2;_bI"4AfHJPs4LN
%K6*Z).MH*A#'(DR]C\)FmVY,bD-WW)_mEhu6T`+S-UOu4[+/m>'7qL_rM4NA$a-lHJrH)2#./;2?kVW7L8>+`+QKMoB[^\o+n5UT
%W'R[I4bD'enmJ@gVZC^,d,'9D1ggi^1qegF:M!i+YV`8)X"(IY4e2tt_D*hu?K*W4O6=@WL@j\<4J&Ls0RJ7j-9KJZ2TdFd"jT,M
%e5^sbX"ZUS2NU"D>js,c(pbB!jb[r_fat"Y6pfLA33TDWVANn2-:`V?a=phUF"J6?oWSlX"3Y:DfS[2sAd`o3*j74JATeDY!iDsA
%5S/YaRMmJcns8EYnZ-F?$pk<:/*L]`L:BJ[0$p"mJ6/,.Jr>hNGO!cajL'7!G;$8Q:[K6.Fd-%gl+On20e=`(,)@+6d.?++bENYN
%:R_fNE>'hTk_&TiGFRhd3^tV9O?AM!8.s<-HUKH$:8\J>C>ciYH?7BOoM;q#c)@/[`88k6\Vc[&5if,ZRG<md"V"qcDprej/adm0
%%F#sWZK'g637/A&0g!?>.[L3kg7<E3%_geP!H]5gB4mkA`LkEjb6-UpSkFM,$%L!O=<mur&`IJl#h'e1:%HkM)6RCI.YBO;e&&%&
%Wk\.9Fd)tIEA%Oe_pB%koHR\7)T'9I%b'K)L<n>,CDg\Ybp#(p/DEO&[)'m[_+(1^Pis]eBf$[A@j'buEnH!3l?^6r$#58s2>GG\
%4sVA;1/u7Jj."i91+2`B:QCi@W@H(f=[P;&=V^Y"+=Yi'NBo>1R!cY9BdH$X,on8j<6KiP7r2XgoQ&295E3Cd3Dnp8m/?WlnN[`F
%$/tlCaAlI9#R_$NH,+UHK('HIC9LQXR!X'r]G]lP\8AE#j'_QU=0>HfSg4NpBqO9*Vi^Adnah=eQO`0L!?roED751XLmdd*h1gUY
%.Dr#p(Mtao.>C8NL+oR9Mj<GQL(C=q>$9&sj9e1.9Lg0oYqX!,V&Kkpj2-4X,b]q^M&5C<Q58VKLo>:niLR06h?8lq<KR<*-O@7,
%_%OC3;p!eqJgD,_aUD8'YrJ@.S4W#YVNDh98gAK\TMJIFmD!k%)uY:bOQngWC6-[*8gTrRb`QXkNq:_%.(Ka9X?<m^qBWJ0e?=\)
%@8[O"E]pZ1mesBeq@6K*3ib*:;'s>Ue6=OGie9Q';Ns!2I)hZ:p%1@Y8mrF=3MZu#0[:E6fh#,u3HJ&Rb_rtJ2\G?CqX?4fWb0"p
%:tP]._Kol`In8i,>u&47GKLJ-8p`io6P0$Zr\NR])42lL9q5pSAM?`5ZtQW_AdD;rM$uh%61p,nK&i":+<_YF%RpM1n'/`nGI`2_
%-_LD4(keiISA]e>reBf6-Pc!L?bF$;ro0Uk?nN)Z@H,.aA^f-.oPaG>nR;$.G"Fhl6X+1kM]3.PZFWtoLh^(&UJ,/3$T1\4rhEbW
%GMPC-7SMqNR%"shE^+AmO]$<sa\)sF;M&AS<+C/k9P"LoGk%BqNLmL]OGXm0Uhm#XrrXs-C+)bI0_@A;nS3r[.:c"aZ?'/tb93"%
%:mKHT8\&?i;#.b]^OEbdIn2H)T.[>$C%d1-MZ-%o#$@"mQX*c:OBOZ[qdF=0,@INY.7W\02J5U:gu@9a9"gk('Bf0p)g4Sg)Qc`U
%.1abYTZpA*Ci-GQJO-D,i?3O_?XOQu9XF%Oq`JFdCV`UrcGGjt.gZ>`1G"1lo=$'+2>j!/ZG'ilXEc\A\04DF.qrC&!8P`g.:0h:
%;I`Uj2:C:*QfJU?AD3;*6p14E6][Per@?u!.CHZH(.TQh=2U#[Ae_;nkFK?!Q,X`nRT,5]f#/*5q&[Tj.IsT1qi\Z?m`WLX\mVY6
%8SGen@!Olab)j$6>jV-Xn>G>dY;^.]orJA<HEJ$gZoG1S#;JqJl_X?CC[d5U301.kHr&iMi&MC-FW-fO"ih=tb,S?i*4MSmV!,3#
%0MP!:@fQ($=6`iAX"#:l%ptPZ*1_H))4c*oI%f,l_I=k!bJ5$iQEJ<1M@tgZY'CR\+s8;;67T1>'?YDh`@Hl/KrTLV\<-0!9"D#Q
%/nK:%<lTMX)YAXU61j;>5q9jQ\6b&%ahnO?8A_G-o&Fuf?`:6XI)SRl<]#'@?nTlOdm;XX[kECKrGcjqIa/m9oh/VshN0Wt`co,S
%:==L*/g,tCIUIaQdOuB<?E\M[JOIO11#1pUC:KUh6kV7SjiB=#s6oX%"?hoWA`9CCZ=d5P<X7St[Ffm6HsTrl=<+0<Oa@H&%-dTt
%Oa&_rI5am%N`5OIEP9._MP$P3`>O9;0!>VfH8:r=s&XsYgFi1s+E3Ig-2WeFf9Ks'L:c+N$0"#5l7h$Qg8u)8OV_G-R9%@4@@pZ$
%fLjK;eJUjEiF70UJl!1R08G-sX'Y$3l!Z)I*Eia%8/E<0Qs3Vr>!g84U)p+jZN^_@%SJkHJWD-*`%=_7i.;*f)5sk!QBH9#.lD@0
%QBt.c.8[0hLe/&b25n3aAPKub1)/c)3e]/;3@-DsEP'[2WN6IS4CrLGhGgeE.8n?^R$^`KWPa19FahCt$\qMb]H@b8@1_oCBf%r%
%D^850+TnA"5%kU=K.s))H7]p+p%fDXXJg1(af()mi<U(dH[S5hf-"p'EEY]=.!R9"<\Q1'L2DYp+Hh,B%muLqAD!K)DqJlIOZ%Uk
%'Iu+)^L@ATO`?'7lu*_X:_\r2T[?4pcT1(H#8VQ>_fS^XgCL'+;J+Sp6^I(]BCqi"QL-&s4*Wj\_l;_Mq52cS;Y[$$GNjaNYp/GB
%=4$=Y]<``QHgZ)j\Y\rRmge"WT)5(E8b]i50qY=]Cc?'+"VG^_e>#oBgrX*GDnd5s`8GgN;)?B?\)2:@F+I]<MRq\oVn<#E]clWm
%L>RGYY"u*s@Hks"If#[U(i[Rb#hBQjrQ^#Q1?_/ERp3=F#[65ph_.<>P<\IbIf/642ros2]/P1?IW7EiG(l&OL.+!f:8'Ek!Sh7a
%kUJdnS^KHFp:H!?*%q,Z2,W><hZ\Cn/pkQ8Ol&T&!MAhF>kFpG_,2X_.%!\E(PWl[C@+@acF[-hKHra."d<Tc6Cerkn4$*EE.XY>
%J$1J*ps45m&otNq(KMY4^SF#i/Q()/oa!0F/75=tS"TY>%7(k4pY##ZlP?,k%IT9c5m%gP+%8J^K5=b#BQU0N/nr9tTD^CD9&Mo1
%?)SOM%:9_"n.g#Rr@Y1:E;]E6'%]^E$G/7.hgQA$PMs".jhjY35@!,FP:&<Sm)!a\#eZ=&pDr.]DYm^J4ZlL:?)aC6eYtOXijRa0
%;4ji@.HkfJ?"%9r\_Gu&N-jEol04p<=_Us?=<@$*_fm"fNLIAL"cdpsi0&<)rN9\08sl?u0g,2"Wkp(KNdE!jn5o4+V#hWsHNQ;G
%\1cR:5'kZ:!oLQsj+b(:!mggo6/TV%^L&aBRS-unDt)R%Ma.R;!3Ml<g(9R3ad>(>ebnI>2f8hF+f4ngpt9A0,Vp.lrGMNaGM_d>
%%1MFucL-/@]\f]WM@i0@d]A0sH[,#$rSbIl,XkQ,@JKInE8s2e'm?ANIEB:+Z'n/.h.TTa.S\i`UrP'WU2]&F_L&X-eE!1/#C>lV
%Viggt>kl=g>@]V%%tD@(HK)j*=V;f?&$ItZGM;(pOEuRN!VoFW;#S5>^U$-/h"WtSFMj*Qdqg@[r*?^G:;t+;r=i&AOY`@n)C\&Y
%:^8q[#Q[Inj,pS1?QTfQN0ka#pq%Yu'jge`W8b`sm.g&Z5R-0MK?XCI["VcCET/K(_#FN\Rj;*f[q4#"GN*]B`/VO\IL%n3Q?l5B
%oAC,+OhWE:$gG[g'p])EjBl:%=I!39SuS-N\o?aMd=\0d"#DY]-(5WT<1Nc[L#U<(3>?-*DCM3#]r2g\m\cpn#&2-Z:&O^H!ua%b
%9<UTOHIAX[Yl"!8PE`mGPmpVBI/1CZ/VY3l9a)I#h%*5:dUcb*N1beZ?T#*M2*Mb`?U&7EIu$>H(,%8PnE40:n`LjCC@gl>hi5@g
%oP<o3O=C0VnfmVe)i3M=mO1#i^gmTOP[<7OAm29fBnk7C)qKHoNB]"#LM'q%!;dM/5Q(>#^_!B1PK;/Q6o)8Lk*99$Mo3T(jhZ<^
%iCF1F1;?:3!%dE849_>nGQ+a%S^B`-Od:Hdq%TI<S"KPGptlPXE4,++GIRJ?mD8;?\hDqfQ0*F=<k@[t:KR6cV1S?F3GL=#(P^Zf
%K]BbOnS`0jmT!';D:5mPUD\NtdPshO8t86Qin]i&;s"_!dVcFtd^7A_hN9"m>VNX*ICk9LI_)&!Lbo(/RsQ#kZF6]rk#=%aW.f%K
%'^,B\4:>D/F"3JWGW?j8@Esk4k,?J6kO80bN!DN)UaYEOK'ZC"F/'YgeE#DVNl^s-4]X#P\Hd0&-!bO]Im.HZ)WK:L,pdOAc6T_f
%%=I1tK=k`95*Y*_g$hp(<O!6&ZQ-0uj!6#V3B)6n83K_adX8X4e?%0[bgf'@:'4a?6Tr^J`6/Cj*2c(S*_#s/mZ,fWgh;;B'fkZ;
%Gio`>jOD*0`NHqGa^77Q<*1M,980,dVd`tro*`Zj3NpP=#b%iihV/h^V9Gb_kKY[t&mFc.Apn_uKaglra`\VO0iFP2s%SUtr@_+u
%=_pN%RYYjj/B2B8"gPBtnL-'/R?s%Y3"6c<T,K3OM@$!ck=.rBWPZ2YS1#*1glo;<Sjg4</&P:RSg`tXKfD"`e5NiH^XqpNe5DJ[
%S9r1-oqKCi^7UKZpuD*e%GS?KhW0Cc]#<f,`0DFLY4-ZQd)-5*jpsa+:C67H2g8k7U&O2J)A3h[MdP.Tg61ggAGL(sVWA4qk#-SJ
%B?sCc;Z:p++L5Wn^PH,Ccc9C'O.$a]`P[N:])^;b,f;b=R<+2,RgN\XU4M!0.&gj8:9E`PE8g#]6N<2dH-o>TW-0MTet>;6aml4r
%O[\5e/EY6M:%BB_bS\XLU*VW'C2Rb"Sb3q\Lq\;p_h',,mcMf4,?"!q!gE%CF)(HFDg#,DH+!3%(S-p0h)#,[];M@fK2Ka(95E.;
%e>'E%`@_2ISh[Lp.(X-YJEG1C$jN&M(6o2H.j57HMV[=c's$Q]&=V*Z=\^GO$*(*JbckD,Ls<$1bQ5FD5+EiD+aZjl)1>;$PD^c^
%*29SbRO>!LF\h^S9Uc?eZa(rOFq+&a,E*pAq+q]-r5K.ngJ[$dhmbp,eX;P::*aJ#9;N`QAIBT/KCRn5i4$%K]gUU#Vj*(.?ecBI
%2'HCFaD337C!7MJXg8FtZ$Eu>rP'fmKG]m/=VT]iPVmpg+Fj<!YscOupDJd^Ncq[W3nUcXCWu+'XDtV?(LJEGe%/#?<$2:)RGanN
%'nQ>Q##Bcj1\0aT=.n_U^'Z,:=Z>P6RL:WH(#ho0JA9hg)KI<'*_0`Xbn#&rp]WuI]tod>%VQR_%?(HT=RgB-Q`kD&0cK2>Ym`-f
%berNN%,pJZk2H-SN\/s'#K6j#n2ShlcKfO[8)&O1X'gaM/2Q@H2*c@1"-;uOYG;4)4.F\D5iY.a;=!m_lY:qbPqW3G!ko]r2GEF(
%FQAc9MNIO.AIS&QBMG;>=(:+`eP*s"+KH:0-QJt;S:Z?@b2I,5pX`R[`MGH=m3I+Wb\j(\[#T*o-^%iC'A!?,Jg#,L%sX+YTA1'4
%e63BXg_'cPV?5klUX7]sQb9^eZE5oni!j)l#*oWZ:TI>Pp3K/e>+pB85+qbV:)]Dc4%ml3%r*QJqM!@5TGJ<k`CH>`*b?`A$[=YG
%1su8lLkhJG>OH(i:Zj<W"km&M-.aYHK6%A1973JlMY4hA"8S@:T/T;@#.a'bFQg#12.X_1D!MODGT5_3o7anj/*?boW2XEcc1LHg
%bX:"OcEi<s]s_YCB,m`*L[^rXn:Vq:-d(kf]/#h8I:=dhI`5Koe>6aF=/r[kPW\rQO:E"PE_#'pr:k9GjoYL+#'c6Ih+l.tm0D2m
%>@(D+`K=@BZ=%(CZVJNBOnQRsr=ulgmLQO+LBU'hAcl=jb2./n"E?FGRJjg+;OdG]Srk-]%29O/kmRTX)Bart?g2+nJQ))*hUm5S
%To0mObi>9i2nS3NkTHc/H8sifdi3P]@3\sr_MKdc&.iG[12H@25DRKKpa@*_I:JB.T[rN)\3/r_T"e((3=u+%`hr<)GFgL/O\WX2
%m70%lMk<F$:1]k7<+lZQn'O5m$\WasQ85%r)\:sp+HeiB)r,]JSV+Ghn,"9D86S^2NN,d@E\4.,+(U*;`.QFioRqUjZ\U\]?"^S9
%Ut:3\L1J4SK?".CY78SddS6*D\oqLO5F`M&QQ`aYArA-+,=tNqiR',.P+pTjmgWf--kj5=*RBJ!a/!Uk!R`6pb(kqkSI'T?OJ!1[
%@5r+<4MtI.)6C5mo"mL0/,<L?%rQJYIk"n@UXCBT-pmWV.;e4(.EntU`Y1+-+Mi*(np9!2oO,@ij-XgKaB!XCB]tRI.PUG7YRJ.e
%7qMK9S\u0nC+-;M5HW8LD4p[oA8U/8;%Il*kOIMfi#Y)KI6[l(A8?cKi^"VjrUiDba5id%:1Jr9aJX^]lU&\kUX`,OG2arZ,</^A
%"0t:<&+QE*L[J,2EnqZFS2;\R_3@D5hNBlX^I.rK=]q0r\faQgMB3TG7G%.8"[/QAja^2Hgnj``_V,8np.4D38hF3-?#L'?DFeQr
%V^gu;b@QNdR=h/s3he7Q^$FnR,*t4#QpW1PBVHJDbNHV6Le%jRrftocq%7Ou(QPlJ*f7dQqiECbcnP`cEs#.IYkp!PdD+"[%A0`7
%1s"_)BEo;4f0Z4MMpTUO'@Pb`[>[O9S2W?uML#As@p='GD/nY%YM\-V`XImU#j+-l<rSJ(_Ygh:]5tO$8_ruR?@:`;LpilrCM"Oe
%a4/FqM446p]G(F]\INP>2T9D6bB0[dPtCbR?LdCT/1#MUa=939So\Z,Y.Bp.aE)PHQNL%`\(llggJ^ru]86`VSE0rP6sk)FNCVQa
%JI6`a4JKnCeQd#&9OXXX&M.`b5m'Pa4i5b3LE7jE9PA%5?92UT';CkXc(Kqlb7`@MaVIL'_`7J7L1q5RF!8]^:q)t'JAP'$'S?b:
%EsSmB@Vi`KK%d!`3cY@.8,W-^lpPs8((qOn.R@-E5!:c3cN/R+kf<.kdf-37LKW:l,gXUMUI,fM/63q#YOjWNUk7%UBY+Cj#DsT+
%>m9,S[gh#tmRVY1AeB@aIk#rC?Iq%*$CgirjaKSL8d,f>-[n&R377<l#",G3[2OBt-/3,":f-`'NT#d]#9$O@gu)eU=-$l<*iNn"
%_j!muoD2bPEX%`:k(YOulj"=\.=5$NWrAhudm\^I4-#+P:klKn0Fkca.&-G]K=nN"&utMcm&2UU<?V&jN-0,8LJu`u6(j8GD.FYr
%WsfBi*i["HSS95WK[8cD6=@Wj(f7O>bnafg>8naI!4;Mg@3C1q(KXS!#cX1_f8TjlYlA3@nVJrir<?hN8\!CL@GDUD'J6kjM'Ogs
%$V8N4f&\u?6`[M`0,I+^#tOlP\I^Z$oH<L//C:4oE"qijY=_elmG2HH+Qhq8Rj,]/+MKEn9GF/583mXDP:'?9Q%R=Rf:1[M_-!S%
%_f*<0+3,DmUVB1p+iPj(qg/!mp0<)rJ4FH8,`@+4/c7rXMN4?#Hq36_N/2@J#I0DfU(+IXAArpY;o0(U;I3HEm,XH>=%:<$UKEC`
%"^uHuNe%4MdQ%J36mk:ignXJ:0Q?e>))A%e7Jnd,E>IgI2A#iNP4@;JFdA7$[]Y`ae.dT'R3,Z%p[CT,_oN@E28s#[NJ8anQT<T/
%UdnkclW^Zc4G#^)I,K+l.oZko`^Zrm$Oj0<Br%-<W/mFA)!HbEV:noVii+?PPqQ\aOWl6&Ppb@Q=a%TRM$G5Sh8!EuhuMl4':#'X
%^nk:Ig(1&41<(.*PQM]K(,pg^MFa*2Mkcb!q%H0W;A,@VPP9lWBReF]m<=f7Z&P-+7q=c-#,K\,J\6mB_IJs>O+j?,`5')84]4ui
%O*'Y\MdBdp114m/G+E%Z!(JJrFe@@S6hjbG;A;;KnKt9^!b"sN@GqWnL6?>G4=s'H;($Bp(ZB--*]KlYhhP(HaSBq?l==FGc7dD&
%Q-(EJ_BBge#-89iY7\U8O1mWY.c23[DdKIX,[arZ'72^BXbigfmYuW+5FTG_md(SZ0/rD*Q]m[7ccJ<o^'/_lPd5</e`XMT132J_
%4H3RQ3LM,n#+i#n7:C7Wp`XnjVjL:=Np+]3\a/G6KH*"TOn1m.;/.OA[]@StDsH4bY^DKQ1]FuN5hqG!I?mT$O"umXpuX`h)9#b+
%bIKnje.065hqr3AaUaY12YO;"P0bL\\Mg2ckrkXk1U!CHF!Kqkf\W:bo+_pl>X'pFVC5N8X@Cl.:jeS134o7m:uks/moWe&([pmg
%l@LOR2mu9;Dgcit<uss;;tM[Qal/<t"U/=[PQO,<D:'YjAc8GA<\o$?7bAfW*/.lYb0e#_;iI5*0R2pn`]<;#g]]gn+uaNV>Xd(b
%@Ics9>fiBhRIH&YcV4MeKfHl1^.l,*ObNUecq#je()+$DCQKV.CEh7nD<dn=R&&8e+HV43>S4lZ#.,mr-;jZN(n'H$i:[\@*],44
%5DUA&28YH3l;=6E:k0@F;I0W74a!@eiWABT-MY_U^0h\%'4/f].F5^mgh?rXpI?!^/rjImhZ5fBT,dg'7.h6QLJ:iR;OU0-9mIUu
%Q'[J4OUm9h&pKhE8goC4@Z,/alBk\fkudK,)uRSg[\"8>94?T3iT/W\L,\_65W:S<El,UY/:#G0,kX"$S4Oj/,aJA7:sKi2hQk!;
%W0Z:,J]jfYb/u?LT'BMq@nr/BDI<V4$R7,/<h'q*q9&>aMQeHFi+Bk,cEjAq^E"kJU5<n1@Vd[Gdp[06i'Wc#%X]dS?6tcLZ]'ke
%*D]%%oDtXJjUYYU*,$'`1(:kD:M!pW+SJ_Q6#=om%Zlm3KJiqUnb=!ZJ9Xus;hC4DfgoI3nL!hi@bKn%lEqlDP3iZ/Eu!+^^pP?k
%5e\)Dg'd.$QN5Yu.C+-dS_H%FJV$s:K\'-I1eZC'0%WV3i>9DA*K.#)SR5ttV.28.Oo?JJbAfe5kqV?$i\76\)hX4eP)m^A<K`p^
%bYEf0UfkV8MeAZ!_@6pO9t3kiQD"eL!UikIcPj6#Y/$^$KG4D%8q3+ZFiUt%U3:M1kt+=#`,-%NAFZsGL8<9Bl,N&<X;?"N$Wijo
%k\B9FZt1eN`g16_I[D6r\pt7)Sa]LHUq6.eS:r0Y:QFE==ef>;L?YaShh^DYSAo)bd:@M9?Z9FV4G\0Jl)EVH4CWNV4IrhYk<tUA
%h9ZfI6nX7Si(,8:H>&m'p2a)oS=&.W?^UGYO;9"f%//;#9?4NI'<6Vo>oEB8H<c0I>gear+l5$XOb_2jG>B>Ck*qSQHMGM1i["\P
%ffN57NC9=o5s-b[,I%Dn7Ok:ubJh?6B<%=Oi/g`q_ph(Xb0p=4QC=_<gnqXE\Se$IkXDGn>8gihS2l^,CT:jS%1Run;e7Ni[(2+>
%X@Y/?r02qBENDi^5.U`YQ,mV;#jNRh,p1V_3H>C\laU.d7*Oj7DkN][Gif]GVSf8b6[hAO$@5&iOKfT/L?6'pdB$h9E.P#V7@58(
%jJeWSRsAN+[0.Y-:.Y*p:`#FSj6\K?\b]78CcH;dB^h!6A0I&PB"F-bjP!GF*:SeZE30-j*nI,+8b[acIe5;S/CT<KE[4R^Bd^'j
%Qs'4UE=jgTDuMfD#PI%Am>WJW?S;%3/r]Shprn3/?TGF81hU-I,/S+).6_60N57Ugs2918a<Z(?(?jU<18okX4'eZ@EY86n%dBm[
%n`qRY"$4U93f3,Q[092A/6$;ULY.V<&oLeeaA+KiUL`':c.Mq45os2@r2jmnM\>qi?g/_iMcF*u8%QMfI@#ns7W"a?b[)e."?KGr
%gq?mt1jFJE<7hj8^F!)aNI\mlJ][#udoE^Y[K-)/gg\0m&1Mu<,]*XDq5b>mplJO&^_2q.pdp0TQfkp!I\k(=^`YWCd]<W/l,V>n
%qIEaLS89H+]DQ/:@teRBOL#f>V)9>mcjF,+^cqn=A<0huUS_RZ>_Z5-N'o8#"%'-9@F8p]-?7+e:B'Q+jMI)CD-!JYbM6ng3SiPu
%=Z#`G.$`'G7XDCl5u&J?ps%s$IQ/%`(`W_$UGpao*LK]3i!O0M43K8<_"t9qkg(A&lF*:/UsIbV#Z^F<Dsg<02`6Ep`&7ct`2_H*
%o`s*(`K3taX3l7P&l*6(2lF/^-._8]Z^bc*WT('Q?D)l;^*kp+6,=r#Sa+B/GO%VE&PXJ'DLHLB`NaYW:=YnNP`%YnB@b<'Aik^*
%s/f/&m+UFp@ZT1!60R28B!nk%NNV`ZC?n2"CPq9iD$V!B?_agr_9V#B'gr%k<MatZ/r?t6bu((lGb/g$9s"iS8hl;^=M4138q#&K
%<j5i-#I>1HTN>l`mnt\eh300#^-')F24J2Z\l3A;FqMJWdQYcQW)"0V:!9MuV\7PTQ0Lb2`[_,[p/?/#*'(<1P\`XRnA9K@(0\Xp
%3Ai'blkJB:-m6a7k5?AM'R64K84I4@-VKkOq:^cQGK&.aA;6$XQg.u[l(jmC_)I4t<XVQ%VKeGs.;D=@?gAkn>]D3J:n9PF>`1X@
%UU%l;lPIr@B_K;9%]`l`6.\SL^qRXL(Kaas-RbDa>f*Ci&_u,/9'TgjG",eFf%0PY8NISWbTqit)>7GkI*Y@hU[$:2M`CFr$K;`/
%RT\"?bApW[3VeC:U3?Rj%H7@V5RLqb)r%?le<5C3/s5:Q5d!p8\Vb)sY=039dWWn#[9[Zd$;=`K&2f3]3_mO7DVA95[i'-d+0_D]
%nQk#29!T)BY$IC:DiWL&cCmAEe*jl;W6%b:$WooEfOmXaq$GDMrh(.$ouOfV$dfpVTKXo?mj+_nCk[uXY6sEi,B[&S30ZVa#_B%t
%W^e!;6XGklPX"+jP-D])V#5\:(4[GDf5^\$o0L[@P0h)'`0aQXTVn^sn]"Z"I\G_Vqb:f@-`n2C%n]_;1rN$m\Th71:U!<kcXVUC
%968f-F(fE,@-D'1D7G5@VAnDb$JQ]`8CCb&3cXRA0KuY>@gG&OjE:FN0LIYp8b3A8oRHeJs88Mgl+d5lrdXt>^]$Itj"LGi?iTh,
%rlZ,I:]KTbroL?`fAHSu5QCNEhu<4sqNl^3bMW?rgL'sQ?iTLXrph.\rEiq3p"R7ZmB?Qh+92&D^]*rqs6m`$DaWk]q1F1nVgn\1
%^7PB)",fOd^&~>
%AI9_PrivateDataEnd
