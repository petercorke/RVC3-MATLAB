%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig9_motor_components.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 3/12/2022
%%BoundingBox: 0 0 385 153
%%HiResBoundingBox: 0 0 385 153
%%CropBox: 0 0 385 153
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-03-12T16:46:29-05:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7B+Uvm/XdbF5da7KsUd3&#xA;9V+qxu6bX08Ut1PaQUpX6vamFSgqQySFt+WKp1ov5laNrWqW2maa0VzePKwvYUmBe2g9Kd1kdAvL&#xA;mGhSOVGC8HfjyJFCqlqfnd5Rm/MKDyLb2+oSavJ6vqyvaSwxIIYmkbaUJK9eFAVjK960xVm/6Ttv&#xA;5J/+kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+&#xA;kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/&#xA;AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/AJox&#xA;Vr9J238k+/8Ay7z/APNGKr4b+3mmEK+oshUuBJFJHVVIBoXVR+0MVRGKuxV2KvlH8zvPlz571u4Q&#xA;TFvKdnI8Ol2I2huOB4tdzL/uz1CD6QbZUptyZs57tPtCXFwQNVzL6N7Mez2M4hnzR4jL6QeVd5Hn&#xA;9zz06LpdjdofqcL2Vy/Aq8asYpT9mhI+w/SnY0p1zA/M5Jx+o8UfPmP1j7nfns3T4Mg/dwOOZreI&#xA;PDLp/my5V0lVc0f+hdH/AOWC3/5FJ/TKPzOT+dL5l2H8m6b/AFLH/pY/qd+hdH/5YLf/AJFJ/TH8&#xA;zk/nS+ZX+TNN/qWP/Sx/U9O/Jb8wL3y7r9l5avJy/lrVJPq9rHIS31O8lIEIiO5EUz/uzH0DsrCl&#xA;Wru+y9cZHgmd+jwvtV2DDFHx8IqP8Q6DzfSebx4R2KuxV2KuxV2KoafTbGdrZpIQTZzG4twKqFlK&#xA;unLiKBtpW699+oBxVXWKJCSiKpNakADqSx+8muKrZLW2lmimkiR5oCxglZQWQsOLFGO61XY0xVUx&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoWT/jq2/wDxgn/4nDiqKxV2KsL/ADk8wzaF+XGsXNs/&#xA;p3t1GthZsG4ust64g9RCN+USyNJ/scqz5OCBl3BytDpznzQxj+KQD5ciiSKJIoxxjjUKijoABQDO&#xA;IlIk2X3WEBCIiNgNlO+tvrVnLBXizqQj/wArjdWH+q1DksU+GQLXqsPi45Q5WNvI9D8Du6yuPrNn&#xA;DcEcTKisy+BI3H0HbHJDhkR3Lps3iY4z/nAFXytvUbuAz20kQYozL8Ei7MjDdWB7FW3GWYshhISH&#xA;RxtXpo58UscuUgQ+vvIvmMeZPJ2j64ePq39pFLcoleKXHHjPGK/yShl+jO5jKxYfCckDCRieYKeY&#xA;WDsVSjVvNeiaVqFtp13JMb273ggt7a4uWIPIivoRy8aiNz8VNlY9jiqYWt/Y3ZmFrcRXBtpWguBE&#xA;6v6cqAFo34k8XAYVU74qr4q7FXYq7FXYq+YNM8naRaeXNN1+HTbHUJ9Qa1S+s9RhSVZZbudIBKk7&#xA;JLLC3KQFtmU/ygmucln1M5ZZQMpCrog92/Lr+N3d48MRASoG65sj/wAHw/8AUleW/wDkYP8AvH5i&#xA;fmT/AKpk/H+e3eF/Rj+P81tPLOr2kq3WiaLpugajH/dX2l3z20njSRVsPSmTb7EqMvtluHXyxm+O&#xA;Z94v/fMMmmEhXDEe4/semfln5g8yavpWoQ+YxanVdKvfqMs1lz9KVfq0FyslHCkNxuKNQAVGwA2z&#xA;q9LqBmxiY6umzYuCRiy/MhqdirsVdirsVdirsVdirsVQsn/HVt/+ME//ABOHFUVirsVeLf8AOS2o&#xA;kWnlrSANp7u4v2b2tIfRp/wV6D9GaztafDhrvL1Pshg49aJfzIk/o/S8UzlH1l2KoLTPgW5g/wB8&#xA;3Eg+iQiYfhLl+bej3xH2bfocLRbCcP5s5f7L1/75G5Q5rsVfQP8Azjjfyz+Q7qxcfBpeqXVvF0+z&#xA;OEve3+VdkZ2PZ8+LDE+VfJ8Y9osHha7IO83/AKbf9L1PM10jsVQV9p0ct1DqCRiW+sY5hZRvI0cX&#xA;OYKDzKq9PsceXE0BO2KoPyhoTaHoFvYSFTclpLi7ZGZ0NxcSNNNxZwGK+pIaEgbdsVTnFXYq7FXY&#xA;q7FXgNh/5LnQf+YjSf8AuoQZxOX/ABif+f8A7kvQQ/uo/wCb94Zvmucp2KoTQ9efRNJ82XcQBnn8&#xA;wWdlb1Kikl5Y6bbo/wAXw0Qyc2r+yDnadkf4tH4/eXQa7+9Pw+5nukea/LGszyW+katZ6hPEokkj&#xA;tZ45mVGpxYhGb4TUUPfNm4jC/wAyfN2pPqY8q6LctZuIVuNa1KFgJoopeSxW8Lb8JZeJZn6olKbu&#xA;rKq8x1TyBolyPrFvH6epJutzO8lwJCO1wJWYyhqULE86dGGKr9I0DyvqFik7aTDDMC0VzbkVMc0b&#xA;FJEr3ow2PcUPfFUavlLy9GweC0FtMu6T2zyQSofFJImR1PuDir0D8tPOGpNqUvlTXLhru5SE3Wja&#xA;jJT1J7aMqksMxAAaaBnX4+rowJ+JWJVZhqHm7y1p+oLp97qMMF43DlE7fY9U8Y/Ub7MfqNsnMjkd&#xA;hXFU0mmhgheaZ1ihiUvJI5CqqqKlmJ2AAxV8w+bvPesed72W6kuJ7Xy49V0zSY5HhV4K/DNdqhX1&#xA;JJR8XBvhQUFOVWKrBrrRdO02dbv0hJYSMqXMchZzEXPESozEkLWnNelN9qGqr078tvzD1LytrNpp&#xA;2oXct15Y1CZLZhcyNI1jLK3CKWOSQlhCzsFkQniteS0owZV9GYq+eP8AnIu+km88aRYE/u7LTHnQ&#xA;bbNeXHBu1f8AjzXqf45o+25emI83uvYfF+9yT7ogfM/seZZzr6Q7FUFa/DqV6n83pTf8EpT/AJlZ&#xA;dPeET7x+n9LhYNs2Qd/DL5jh/wB6jcpc12KvYv8AnGi4k+tearMk+kpsLpV7cplniY/dbLnUdjyv&#xA;DXcXyv2zxCOsB/nQB+8foevWXmry1fai+m2eqWtxfxlw1tHKjPWI0kAAO5Q7PT7PfNs8igvzB8uS&#xA;eZfJWsaFHeGwk1C3aJbwKXMZqDy4hkJ6fzYq+YNU/wCcYv0UkMmo/mLJaxTyGOKWWzdUqsbzNzc3&#xA;fBB6cLmrEDbrirel/wDOMQ1WN5NO/MdrqOJ/TlMVozFHoDxdfrYKmlT8VNqf5XBV9f4q7FWA2Pnn&#xA;zTcfmBfaAdGnOk2punivvqk8aypbwWxjijnkZYTLJPPL8RITgq/tE0VT7/E2tf8AUp6r/wAjdK/7&#xA;LsVYn+Zn5meePLvl+G/0PyXfXV893DB9XuBbTh0kryVFsbqebmafCeBHjirzzytqOoX35Z6M97pk&#xA;umsl5pSRrK8biRBqEFJF4HkK+DqpzjdTADUSo3tP/cl32KROIWK5feEx82ectcsPOWl+XNKFqG1C&#xA;3dnmu4pGSOdywtg0iSxgBxFKePGrFOII5clp0+mhLFKcr2PT7enu91s8uWQmIjqzG0uEljKevFPP&#xA;DSO5aLYCUD4hx5OU/wBUkkZhSFdHIBWeTdM1+9u/NAsrvT4rRNZicRXlhLduJk0yxYSK6XVsFptx&#xA;+GoO9c7Lsj/Fo/H7y6HXf3p+H3Jl5e/LfVfLlw1xot5pVnI8KWzBdPvmUxx0C1R9TZSQFUcqVoAK&#xA;0zZuI8I81ad+aGs6pLqug6xbR3F3q17LdXSxPbxtHbt9Ut2dHe55oYbdOKcDx7k9cVZxosGrwadD&#xA;Fq91FeX6j97cQxGFG/2BZ9/fb5DFUFbutlrusrQ+jJBBflagVk4yQyU5EL9i3j798Va8s+bLPzFA&#xA;LmxtblLQori5mVFjJbogKu1WA3an2eho22KphdX36K1XQtaUMW0/U7YMI43lcxXj/UZlWOMM7n07&#xA;kkKoJJAoK0xV6a3mzyY0V5C2mX5i1Dkb9P0FqfGcugiYyj6p8dY1Cnl2FMFhjxBgmt+a5778pdS8&#xA;u6bb6teaoHl0dCdM1FnexW8+rMzyNAF9T6h8Tcjy5V/axsLxB5hqEV7pdobrUdN1CxskKo9zcWN3&#xA;DCnMhV5yPEqICSBViBjaRIKdzbxXFvLbyjlFMjRyL4qwoR9xwpQNon6S8vxw3J5NcW/pXDd+ZXg5&#xA;/wCCrir6O8m/mfpeoeUtFvb2PUpb64sbeS8eHSdSljM7RL63F4rZo2HqV3UkYLRxB5V+cEWp+YfP&#xA;S6po+j6tdWI0u1tjN+jL+P8Aex3F07rxkgRtlmQ1pTfNP2rpp5THgF1fd5PZeyfa+m0gyeNPh4uG&#xA;tieV9wPewLUrDVdLgW41PTL+wtndYhcXVncwxc5DxRTJJGqAsdhU5p5dn5ogkx2HmP1vaYfabQZZ&#xA;iEclykaG0h94UcwneoOL/jsXX/MPb/8AE5sul/dj+tL7ouHD/GZ/1If7rIhWub5/Mgs456WsduLi&#xA;dOKk1ZuCIG7V4knLRCIw8RHqug4hzZTrfCjL92IcUth30BfnRKbZiO3el/kHr+naRrHmYXkd3J69&#xA;tpvD6pZXd79h72vP6rFNw+1typXt0OdL2Kf3Z/rfoD5h7cEDUw/4X/vi9B80+YPK/wDhNrfSdP1C&#xA;2udGjF1oSJouqRRw3FopaFVP1UKiNT037FGYHY5uLDxXEE8P5i+XrvT/AFYINVdZ4ucVNH1RgQ61&#xA;G62/E9ezU98bC8QYxrl35S123jtdY0fUr+2gmW4jil0fVGX1UDBWp9WXt/Doaek2F4gl9xrmj6b5&#xA;o0W9sbDULdLlW0q5hTSNRiQwRQvcWxVBbJyMBt2WNVX4VdjQAfA2F4gz6L8xPKr6jZadJLd2l1qM&#xA;hgsRe6ff2ccsoUv6ay3MEUfMqp4ryqe2NpBBZLhS7FXYq7FXgNh/5LnQf+YjSf8AuoQZxOX/ABif&#xA;+f8A7kvQQ/uo/wCb94ZLd+WtBu7iW5ubGKW4nMLSysPiY25JhJP/ABWSSvgcw45pgUDt+vm3nHE7&#xA;kKHlfynpnlu2nt7B5pFuJFlkadg7ckiSEbgL+zGCa7k1PfJZ9RLKQT0/tRjxCHJN/KHmXy95et/N&#xA;l9rupW2mWg1laTXUqRKxGk2J4ryI5NQfZG+db2R/i0fj95dJrv70/D7nolrdW93aw3Vs4lt7hFlh&#xA;lXoyOAysPmDmzcR4JokTQWtxauQZLS+v7aQruC8F5LExFaGhK7YqmGKsb1jTX1fU9X0yO4NqZ9Lh&#xA;gkuFAZlW4lnU8Qdq8Ub5VGKoBvJ/mTTrZbLy9qyWVgssk0cHAARc5I2MScln/dkeoR/Kx7rsFU+u&#xA;La8ay0SznunS+k1HR4XvIQhkEv1+35yoJEaMkULfElPFabYqXo9gmn6hcahbWf5i381zpLyR6nAP&#xA;0MJLcxGjmVDYBlUfzHbI8IYeGGIaxb+bfL/5aSeatP8AM+oxzXV8l0IJ7fTirW2o6gI4nZTZqySe&#xA;hPG7CtA1RQdjwheAMF1fzT501nTZ9M1PzBd3Gn3S8Lm3EdnD6iVqUZ4IIpOLdGAYVG3THhCiAS7C&#xA;zQGhMDpFvL0WVTMP9WVi4/BsVe8/ll5O1Zvy88uzR+atTtUurCC6W2gi00xxi5QTBF9aylkIXnT4&#xA;nJwcIYmALCvzQ80+ffKnnBdF0/zTeS2p0+3vOc9vprSepNPcRsKpaIOPGBabeOavtLVywcPCBvfN&#xA;6n2a9n8GuGTxDIcHDXCR1vvB7mC675z856/pzaZrWtz3mnSMjy2vpWsKuY2DqGaCGJyAwBpypmpn&#xA;2rllEioi/wAd712m9jNHiyRmDMmJuiRX2RCUZrHrUpvGv11C5NiqtMIrTkrb1j9WbnxqVHLj0qcy&#xA;8YhwDi5XL7oup1BzDNPwgDLhx8+7iyXW43rvKGkTUbG31fWGVEu5+LQwt8fGKFeKKeJ3Zt+hpU5Y&#xA;DCZhj/hHXzPNxZxzYIZ9SQBklVDnUYigNup35GrPNZc61qlq0zTmERW09vHKyxuR+9CtItQx+wjb&#xA;Gm5oKYYaeEqq7Il1HTl8z8mObtLPiMjLh4YTgD6T/FRkOf8ADE7HqaFPY/yT0y3ur3zXfXGr3mjw&#xA;adZ2E009pIkY9MG9Z2lWSOVWCqlR8O2+bXsYfuz/AFv0B5H24AOph/wv/fF6Frum2s/ku81TRfOu&#xA;pamt1EbbTHguLKWGe7uP3VvEHit/2pXUGhqM3HCHiuAJ4n5fXFjpiww+adZVLWEJGA9mFAjWg2Nv&#xA;028fpx4QvAErl0O+haNZvN2qxPM4jhV5LNSzkFgig2wLMQv2QK7dOweELwBJtU0PUbjzToWmx+Zt&#xA;WkngebUZiWtSYYFge2Dclt+KvI90Ata1XlQH4eTwhPAGbRfl3ZtqNhfajq+pat+jZhdWlreSw+gJ&#xA;1VlSRkhhh5MnIleRoDv1xAURAZZhZOxV2KuxV4DYf+S50H/mI0n/ALqEGcTl/wAYn/n/AO5L0EP7&#xA;qP8Am/eGb5rnKdirF7b8l/y//MCfzVN5hsGbUI9TSC31K3kaK4jQaZZMAKExtQsSOaMN87Tsj/Fo&#xA;/H7y6DXf3p+H3PSLD8sfy/srG2s18vabMttEkImms7Z5HEaheTt6YqxpUnxzZuI8p82eQvLGh+d7&#xA;u1fRbFdO1oC90k/VouCyIix3VstVNCpQTAeDtTZTRVUih03TLJhFHDZWUAZ2CKsUSD7TMQKKPE4q&#xA;gfLiyzx3OrTI0b6nL6sUbghkt0URwKQdwWVfUIPQsRiqb4qifJumya557tOCh9O8uE3l9Id1N3LE&#xA;0drB7sqyNMf5aJ/MMVTqbS/JaeaNQttU0OCwsopPX1DUbu/WKG5a/nnmQT26P6U/OZGKxzmoUrt2&#xA;xVleuWmheePKWraTZ39vdW95C9r9btnS4WGcoHjf4GI5xlkkAJ8MVfMsJulaW2vYvq+o2cjW9/bH&#xA;rFPHs6+4rup/aWhGxxVCaxcult9Wgal7eVhtqdQSPik+Ua/Efu7jFUbY6FPrF5YeVtNqlxqRFqjI&#xA;KmC2UATzmtNoYqn3ai9SMVfWtpaW1naQ2lrGIra2jWKCJeiogCqo9gBTFXz7/wA5F2MkXnjSL8/3&#xA;d7pkkCHb7Vncc271/wCPteo/jmj7bj6Ynze69h8v73JDviD8j+15lnOvpDsVQVr8WpXr/wAvpQ/8&#xA;Cpf/AJm5dPaER7z+j9DhYN82Q93DH5Di/wB8jcpc12KvVvyC0q1v7HzyNQqumXkFrp9zJy4gIsVw&#xA;8vxdiEuhvnUdjxrDfeXyv2zyiWsA/mwA+8/pek6BofkG21uzOmWMkV86T3kNs0k7QWcixwCUfVmk&#xA;aC2m9O7QfAgPEkdOu2eRZVq15a2WmXN1dzpbW0UbNJPKwREFOrMdhirzzU/M35c6pZPY32taXPbS&#xA;UJRr2AEMh5K4ZXqrqy8lZd1O4r8IkVU9I178ttKMptNd0/1Llw9xcT6ilxNKRWnqTTzSyMq8jxBc&#xA;gVPixdV6lirsVdirsVdir5/tH9HybZaVOph1LSdQ0yz1G0ccZIpk1CDZh4MpDIw2ZSCCRnG6nFKG&#xA;olY5iR/2Jd9imJYhXl94Zzmqcx2Kpj+WP975r/7bKf8AdKsM7Tsj/Fo/H7y6DXf3p+H3M2zZuIlv&#xA;mHy5o3mLTW03V7YXNqXWRRyZHSSM1SSORCrxup6MpBxVgt5+ROkXqxJdeY9aligdZI4WawKck3Xm&#xA;v1P95xIBHqct9+uKoz/lT1t/1M2sfdpn/ZFiq1/ybtHUo3mbWuLbMFOnKSP9ZbIMPmDXFWZaD5e0&#xA;bQNPXT9ItVtbVWLlVLMzu32pJJHLPI7d3dix7nFW9Q0LSdQQrdWytWaC5ZlqjGa1dZIHZkKseDoC&#xA;KnFVHy/5X0Ty/DLDpMBt4pvR9RDJJIP9HgjtYqCRm48YYEXbwxVIPOX5S+VfNN+NTna403VuKxy6&#xA;hYOiSSxoCFSVJUmhk412Zo+Q6A0xVi0P/ONXlaK4kuR5g1t7mUBWld7BiFH7K1s6KveigDFWaeSv&#xA;y38s+UBNLpyS3GoXKhLnU7txLcyICWCcgEREBP2I1Ve9K4qynFXi3/OS+nf6H5a1cN/cXc+nsv8A&#xA;k3kHrcv+CslH05rO1sfFhJ7i9R7IZ+DWiP8APiR+n9DxTOUfWnYqgtM+Jbmf/f8AcSH/AJFkQj8I&#xA;svzbUO6I+3f9LhaLcTn/ADpy/wBj6P8Aeo3KHNdir3//AJx30un5f3tzcKslvrGpXcqxsAymOJUs&#xA;WBBrsTaNsc7Hs+HDgiPK/m+Me0efxddkPca/0u36GUP+VXkYWf1S20yO2RpreeR0Ad3a2kSQBjL6&#xA;lRJ6YEndx1zNdIhoPyj8tReUdX8p+tcnSdaWJbpQYkdfStobbkjJGvxOtsrOWBq1TirAP+hNvyj/&#xA;AN/ar/0kxf8AVHFXf9CbflH/AL+1X/pJi/6o4q91xV2KuxV2KuxVh3nz8t7TzPJa39pdforW7SSB&#xA;0vlj9VJoredbhYLmEPF6sfNKr8asp+yRVg1GfTxyipef27NmPKYGwgf8B+d/+ph0z/uE3H/eRzVf&#xA;yDh75fZ+pzP5Sn3B3+A/O/8A1MOmf9wm4/7yOP8AIOHvl9n6l/lKfcE98l+V73QINS+vX0d/d6ne&#xA;fXJZYYGto1pbQ2wRY2luG+zbAkl+pza6bTjDAQHIOHlymcuIsiy9rdirsVdirsVdirsVdirsVdir&#xA;sVdirC/zj8vTa7+XOsW1tH6t7axrf2SAcmaWzcThE/ypVjMf+yyrNj44GPeHK0WoODNDIP4ZAvly&#xA;KWOWJJY2DRyKGRh0IYVBziJRINF91xzE4iUdwRYU765+rWcs4HJkUlE/mc7Kv+yagyWKHFIBr1Wb&#xA;wscp8yBt5noPidnWVv8AVrOG3J5GJFVm8SBufpO+OSfFInvXTYfDxxh/NACvlbeo3c5gtpJQpdlX&#xA;4I13Z2OyqB3LNsMsxYzOQiOrjavUxwYpZJcogl9feRfLg8t+TtH0M8fVsLSKK5dK8XuOPKeQV/nl&#xA;LN9OdzGNCg+E5JmcjI8yU8wsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq+U/zO8g3XkbWrqVIGHlK6kafTr4CsVt6jVa0nYf3fB2/dFtilBUspznu0+z5GXHAX&#xA;fMPovsx7Q4xiGDPLhMfpJ5V3E+X3POzrWl314n+lwJZWzcizyKvqyj7NAT9hOte7Up0zA/LZIR+k&#xA;8UvLkP1n7noD2lp8+QfvIDHA3vIDil0ofzY876yquSP/AE1o/wDy32//ACNT+uUflsn82XyLsP5S&#xA;03+q4/8ATR/W79NaP/y32/8AyNT+uP5bJ/Nl8iv8p6b/AFXH/po/renfkt5AvvMPmCy8yXluU8ta&#xA;XJ9ZtZZKr9cvIzWH0hsTFA/7wydC6qorR6bvsvQmJ8SY36PC+1Xb0MsfAwm4/wAR6Hy/Hk+k83jw&#xA;jsVdirsVdirsVdirsVdiqC1vWtO0TS7jVNRkaKytl5zSKjyFV8eMYZvwxVKrj8wvKFusDSX443EZ&#xA;mRlilYBFZ1PqEIRGeUTij0Pwt/KcVU9X/MjybpMHrXeoKUJlQekrykvDOLd0ogPxeo1AO4BI2BxV&#xA;NdL8xaNqs1xDp9wLh7RmjueKvxjkRijIzFQoeq/ZrWm/Qg4qmOKuxV2KpBc+fvJ9reXFncanFFc2&#xA;iu9xG4cFFSRYjX4abu4Cj9rtWhxVR1v8wvLWkX31C4mkkvRNDBJBDDLIVMxTfkqFTwWVGZQajku3&#xA;xLVVfJ+YXk+OZ4ZdQEUkcghKyRTJWUo78F5IOTfumUhejjh9v4cVZBFIssSSpXi6hl5KVahFRVWA&#xA;YH2IxVdiqT615t0HRb6xsdRufSutRMn1WIIzkrCheRzxBoqgbk4qpSeefKiadd6j+kUks7GYW9zJ&#xA;ErylZWCsECorMxo4rxBpvXocVW3XnryxbXFxatdNJdWxQPBFDNI7NIYwqxcUIkYesnIITxqOVMVS&#xA;zTPzV8q3EFoby5FpPdwPeKnGRkS1E/oRyyPxHASVB+KlO9MVZVYX9rf2cd5asXt5gTG7KycgCRUK&#xA;4VqGmxpuNxtiqIxV2KpDp/nzylqMkMVlqKTSXDQrAgWQFzcRNNGAGUf7rRif5aENQimKoVfzJ8qy&#xA;avBpkE8k80zyxtIkM3BDCyoWJKCqMzUEi1TY77Yqr2X5g+UL2SCK1v8A1JrpuNvB6Uwlc0Vto2QP&#xA;ThIr1pTgQ32d8VZDirsVdiqQR+ffKMl09qmpRm4SWOBouL19WWY26Rj4d2MgpQdqN9kg4qoXv5i+&#xA;V7TVY9LM0s121w1rIkME8gR1ikkNCqESUMJQ8K0br0NFVQfmH5PMjRDUKyiR4VjEUxZ3jbiREOFZ&#xA;an7JSoah41oaKsixV2KuxV2KpJ54SKTyXr0UsqwRy6ddRvM9eKh4WXkQoLGlegFcVYjZwflM8qyN&#xA;cTRm9L2Rs76W8BkneWaCTmtyfUeUPPKpZieNSduuKqj2H5TNcWdla3S2d1fvFJYz2kksRY2qvYR8&#xA;JlHFftsg+IFmNR8VDiqP0fzToGk6P9ddoNN0uS0fWZ0nlJnM1/PJLQM4VG5MHC/FyOwAAG6rtJ/M&#xA;qwGhzazr1zZW1qkkMKfUpJbr95PGJBGSIxycBqEID0J9gqyfTNe0jVHmTT7pLlrZuFwEr8DgkFG2&#xA;2YEbr1xVH4qxy9/LvybfTTT3empNLPLNcTOWcFpJ4xE7VDA/ZUcf5TutDviqxfy68sL6x9O4LSlW&#xA;Rzczl4WVo35xSc+auzwIzNXk1NzTbFVWy8h+XbS4S4SKWSaO5N3E00ry8H5SvReZNF53Dv7samtB&#xA;irIcVdiqTa15S0jWLyK7vPWDxxPbukUrxLJDJuY5OBBK136/PFUG/wCXHlA+i0Vm9tLbxJDBNbTz&#xA;wuix7AqY3WjkbM/2mHU4qpf8qy8olXQ28piZ+ccQuJlWNa1aOMKw4o/7Y/aGx2Aoq2Py08qqXWKK&#xA;aK1kj9KSySaQQFQ5dax1oQvIhV+yB0HTFWU4q7FXYq850rQfyyGm6I95HaW11Pa2sGmpDcXEf7q6&#xA;lkkt1hZjFITMzPyNAz78ttsVWiP8qLaW60ttQkS50uRLS5m9e5Vw0kTcLT1VIDrwiI9JSQWFCCx3&#xA;VVPLOoeTIp7fWdNJjt7fT72e8ur0zG69ONoFd91ZGAWJBs2yhVUU6Ks10XXNP1mza7sWcxJI8Eiy&#xA;xyQuksR4ujJIqsCrbHFUfirsVeTwSflde6/dRFNP/R1pNILe+gu5WuZL6d4rtpIvRPXm5VHD8wV4&#xA;rscVRcY/L7S9Jt7y/mkW8uUn1WyW0nuzIkaevOUt5D6RTkkktQePP4uw2VRehDyRp8n6VjkpZaVH&#xA;bm0uZmuJbkNcq1ukZVl6cKJGiVO5P7VSqy+z80eXby7itLTUYJ7qdDJDCjhmZFVHLADtxkU/I4qm&#xA;eKuxV2KoPWNJtNX0y4028DfVrleEnpsUcb1BVloQQRUYqkH/ACq7ySbX6qdP/ciOSGNfUcFI5phO&#xA;4Rgar+8WvIb++KqEn5baKNTslgiki0eBbqWS2S4mVRNLNbyRoiBqLD+6clFote2Kt3v5aaQNJ1C3&#xA;05547y506bTrd57meWJA8UkUVUZmFIxKVXb4R0GKozUfIGiajeyahM9zBfTTx3ckkE7qFljt/q1Y&#xA;1NVQtFRSyqG2BqCBiqcaPo9jpFmbSyUrCZZp25GrF55Wlck9/ic/RiqNxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVikH5YeT4UUC3meSO1Syine4maWOON/UQxuW5RurAcWWlKACgxVV0z8vPL2mzwyW/&#xA;rmK1uzfWtq8peGOYxyxkqpG/+9DGrEt9neigYq1cfl15cuF4TG7ZAk8cafW5wqJcUqqgNsqU+Beg&#xA;xVNtB8v6ZoOn/o/TI2itBI8qxs7PRpG5N8TEncmu5xVMcVdiqQWPlaJL03V5xlkt9Rn1CwKbcfrE&#xA;JiPMEbsObfh8sVQkH5aeVoVEYS5eH0Vt5YZLmZkljjLmJZFLfEIvUbgOg8NhRV035b6BLKk/r3q3&#xA;KenxuBdSM49KoB+MsORBpypUCnHjiqpb/lt5Ot2LQWJiYzRT8kllU/uIvRjjLBgTEI9vTPwmp2xV&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-03-12T16:46:29-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-03-12T16:46:29-05:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>391.666992</stDim:w>
            <stDim:h>156.666504</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:58DC25E04DA2EC11BB4C9C9FCBED3FE1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:58DC25E04DA2EC11BB4C9C9FCBED3FE1</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:58DC25E04DA2EC11BB4C9C9FCBED3FE1</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:58DC25E04DA2EC11BB4C9C9FCBED3FE1</stEvt:instanceID>
                  <stEvt:when>2022-03-12T16:46:29-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -153 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 153 li
385 153 li
385 0 li
cp
clp
238.168 59.3281 mo
244.949 59.3281 li
244.949 64.7808 li
238.168 64.7808 li
238.168 59.3281 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.909804 .901961 1 rgb
f
134.301 133.719 mo
134.246 133.855 134.184 133.953 134.113 134.016 cv
134.082 134.121 134.039 134.195 133.988 134.234 cv
133.934 134.328 133.879 134.398 133.816 134.438 cv
133.754 134.516 li
133.723 134.578 133.676 134.609 133.613 134.609 cv
133.535 134.75 li
133.441 134.75 li
133.363 134.875 li
133.254 134.906 li
133.176 135.016 li
133.098 135.063 li
132.961 135.063 132.848 135.105 132.754 135.188 cv
132.629 135.242 132.504 135.266 132.379 135.266 cv
132.242 135.266 132.113 135.234 131.988 135.172 cv
131.832 135.164 131.754 135.137 131.754 135.094 cv
131.566 135.063 li
131.52 135.031 li
131.441 134.859 li
131.285 134.734 li
131.18 134.609 131.121 134.496 131.113 134.391 cv
131.051 134.297 130.988 134.121 130.926 133.859 cv
130.785 133.641 li
130.785 133.516 li
130.676 133.094 li
130.691 132.922 li
130.613 132.484 li
130.66 132.141 li
130.582 132.047 li
130.441 132.391 li
130.262 132.59 130.16 132.711 130.129 132.75 cv
130.098 132.793 130.055 132.813 130.004 132.813 cv
129.992 132.813 129.977 132.809 129.957 132.797 cv
129.863 132.953 li
129.863 132.965 129.863 132.984 129.863 133.016 cv
129.863 133.07 129.895 133.102 129.957 133.109 cv
129.934 133.133 129.887 133.195 129.816 133.297 cv
129.773 133.383 129.742 133.434 129.723 133.453 cv
129.676 133.391 li
129.645 133.578 li
129.52 133.672 129.434 133.813 129.395 134 cv
129.301 134.125 129.152 134.297 128.957 134.516 cv
128.785 134.719 li
128.73 134.719 128.707 134.73 128.707 134.75 cv
128.707 134.766 li
128.652 134.902 128.555 135.008 128.41 135.078 cv
128.238 135.297 li
128.145 135.297 li
127.816 135.422 li
127.535 135.398 127.363 135.277 127.301 135.047 cv
127.285 134.906 li
127.191 134.719 li
127.191 134.563 li
127.082 134.156 li
127.082 134.031 li
127.004 133.891 li
127.051 133.453 li
127.039 133.414 127.035 133.352 127.035 133.266 cv
127.035 133.195 127.039 133.141 127.051 133.109 cv
127.035 133.016 li
127.035 132.969 li
126.973 132.813 li
127.082 132.547 li
127.059 132.477 127.035 132.355 127.004 132.188 cv
127.035 132.063 li
127.082 131.656 li
126.973 131.359 li
127.004 131.125 li
126.957 131 li
126.945 130.969 126.914 130.883 126.863 130.734 cv
126.754 130.781 li
126.582 131 li
126.41 131.156 li
126.082 131.578 li
126.051 131.734 li
125.816 131.984 li
125.707 132.188 li
125.613 132.297 li
125.582 132.508 125.477 132.652 125.301 132.734 cv
125.285 132.922 li
125.23 132.984 125.176 133.063 125.113 133.156 cv
125.051 133.242 125.008 133.293 124.988 133.313 cv
124.965 133.324 124.93 133.354 124.879 133.406 cv
124.707 133.641 li
124.707 133.797 124.645 133.906 124.52 133.969 cv
124.52 134.063 li
124.465 134.137 124.395 134.211 124.301 134.281 cv
124.285 134.25 li
124.238 134.453 li
124.164 134.453 124.098 134.543 124.035 134.719 cv
123.988 134.766 li
123.977 134.922 123.898 135.039 123.754 135.109 cv
123.551 135.297 li
123.402 135.371 123.305 135.406 123.254 135.406 cv
123.012 135.406 122.855 135.203 122.785 134.797 cv
122.723 134.5 li
122.723 134.479 122.723 134.449 122.723 134.406 cv
122.723 134.344 122.73 134.281 122.754 134.219 cv
122.691 133.953 li
122.723 133.719 li
122.691 133.5 li
122.711 133.305 122.742 133.184 122.785 133.141 cv
122.754 132.945 122.738 132.828 122.738 132.797 cv
122.738 132.547 li
122.777 132.484 122.824 132.402 122.879 132.297 cv
122.801 132.219 li
122.777 132.137 122.77 132.09 122.77 132.078 cv
122.77 132.016 122.824 131.906 122.941 131.75 cv
122.848 131.484 li
122.895 131.313 li
122.816 130.906 li
122.848 130.719 li
122.77 130.406 li
122.785 130.188 li
122.66 129.938 li
122.848 129.574 123.043 129.391 123.254 129.391 cv
123.367 129.391 123.477 129.438 123.582 129.531 cv
123.613 129.672 li
123.77 129.758 123.848 129.887 123.848 130.063 cv
123.848 130.031 123.832 130.125 123.801 130.344 cv
123.754 130.328 li
123.879 130.578 li
123.801 130.688 li
123.785 130.734 li
123.863 131.391 li
123.832 131.938 li
123.801 132.031 li
123.848 132.25 li
123.879 132.293 123.895 132.34 123.895 132.391 cv
123.895 132.465 123.855 132.539 123.785 132.609 cv
123.785 132.746 123.758 132.855 123.707 132.938 cv
123.754 133.359 li
123.754 133.531 li
123.77 133.5 li
123.848 133.375 li
124.051 133.016 li
124.082 133.016 li
124.145 133.016 124.207 132.93 124.27 132.75 cv
124.363 132.484 li
124.383 132.434 124.457 132.344 124.582 132.219 cv
124.629 131.969 li
124.801 131.719 li
124.863 131.531 li
124.902 131.5 124.949 131.465 125.004 131.422 cv
125.004 131.391 li
125.035 131.352 125.137 131.25 125.316 131.094 cv
125.41 131.047 li
125.426 130.906 li
125.504 130.859 li
125.543 130.672 125.66 130.543 125.848 130.469 cv
125.801 130.438 li
125.848 130.406 li
125.836 130.398 125.832 130.383 125.832 130.359 cv
125.832 130.34 125.84 130.313 125.863 130.281 cv
126.082 130.188 li
126.129 129.953 li
126.285 129.953 li
126.285 129.945 126.293 129.914 126.316 129.859 cv
126.598 129.641 li
126.723 129.602 126.809 129.578 126.863 129.578 cv
126.977 129.578 127.129 129.609 127.316 129.672 cv
127.457 129.875 li
127.52 129.906 li
127.582 130.063 li
127.785 130.328 li
127.785 130.516 li
127.91 130.656 li
127.91 130.859 li
128.012 131.09 128.066 131.281 128.066 131.438 cv
128.02 131.609 li
128.113 131.844 li
127.957 132 li
128.004 132.313 li
127.973 132.469 li
127.961 132.563 127.957 132.633 127.957 132.672 cv
127.957 132.727 127.977 132.82 128.02 132.953 cv
127.973 133.109 li
128.02 133.297 li
127.973 133.344 li
127.992 133.48 128.023 133.699 128.066 134 cv
128.051 134.063 li
128.504 133.563 li
128.645 133.297 li
128.676 133.246 128.73 133.156 128.816 133.031 cv
128.816 133.016 li
128.855 132.859 128.918 132.758 129.004 132.703 cv
129.004 132.641 129.051 132.57 129.145 132.484 cv
129.254 132.422 li
129.293 132.266 129.395 132.137 129.551 132.031 cv
129.613 131.828 li
129.738 131.672 li
129.879 131.531 li
129.961 131.461 130.027 131.355 130.082 131.219 cv
130.191 131.047 li
130.254 130.844 li
130.395 130.75 li
130.551 130.563 li
130.707 130.219 li
130.676 130.219 130.66 130.211 130.66 130.188 cv
130.66 130.188 130.664 130.172 130.676 130.141 cv
130.785 130.063 li
130.895 129.828 li
131.051 129.777 131.137 129.75 131.16 129.75 cv
131.16 129.75 131.176 129.762 131.207 129.781 cv
131.473 129.781 li
131.691 129.891 li
131.879 130.109 li
131.926 130.313 li
131.91 130.469 li
131.848 130.516 li
131.691 130.813 li
131.629 131.141 li
131.68 131.184 131.707 131.266 131.707 131.391 cv
131.664 131.434 131.645 131.492 131.645 131.563 cv
131.598 131.672 li
131.605 131.727 131.613 131.805 131.613 131.906 cv
131.613 131.992 131.613 132.047 131.613 132.078 cv
131.551 132.156 li
131.613 132.25 li
131.504 132.375 li
131.566 132.375 131.598 132.438 131.598 132.563 cv
131.605 132.617 131.613 132.652 131.613 132.672 cv
131.613 132.703 131.605 132.734 131.598 132.766 cv
131.605 132.859 131.613 132.949 131.613 133.031 cv
131.613 133.063 li
131.613 133.086 131.676 133.277 131.801 133.641 cv
131.832 133.781 li
131.988 133.953 li
132.066 134.141 li
132.145 134.188 li
132.207 134.266 li
132.285 134.281 li
132.41 134.313 li
132.473 134.297 li
132.52 134.297 li
132.613 134.297 132.723 134.262 132.848 134.188 cv
132.887 134.094 132.988 133.996 133.145 133.891 cv
133.152 133.852 133.211 133.762 133.316 133.625 cv
133.551 133.453 li
133.629 133.281 li
133.711 133.242 133.793 133.219 133.879 133.219 cv
133.98 133.219 134.09 133.246 134.207 133.297 cv
134.27 133.391 134.301 133.531 134.301 133.719 cv
134.301 133.719 li
cp
.258824 .258824 .258824 rgb
f
139.09 132.438 mo
139.074 132.359 li
139.012 132.297 138.973 132.229 138.965 132.156 cv
138.996 132.078 li
138.871 131.813 li
138.902 131.547 li
138.84 131.484 li
138.723 131.391 138.66 131.32 138.652 131.266 cv
138.566 131.227 138.527 131.133 138.527 130.984 cv
138.434 130.969 li
138.277 130.688 li
138.152 130.594 li
137.855 130.469 li
137.746 130.453 li
137.684 130.453 137.641 130.434 137.621 130.391 cv
137.355 130.703 li
137.168 131.094 li
136.871 131.25 li
136.824 131.406 li
136.684 131.469 li
136.637 131.828 li
136.465 131.922 li
136.434 132.047 136.418 132.168 136.418 132.281 cv
136.184 132.484 li
136.262 132.531 li
136.262 132.648 136.219 132.746 136.137 132.828 cv
136.105 132.914 136.063 133.008 136.012 133.109 cv
136.012 133.219 li
135.98 133.281 li
135.996 133.438 li
135.84 133.828 li
135.871 133.891 li
135.871 134.281 li
135.809 134.484 li
135.824 134.672 li
135.949 134.859 li
136.152 134.922 li
136.215 134.953 li
136.324 134.906 li
136.684 134.922 li
136.746 134.781 li
136.809 134.781 li
136.859 134.781 136.891 134.797 136.902 134.828 cv
137.027 134.781 li
137.137 134.828 li
137.324 134.703 li
137.355 134.656 li
137.48 134.641 li
137.543 134.539 137.691 134.434 137.934 134.328 cv
137.965 134.25 li
138.246 134.063 li
138.402 133.828 li
138.621 133.719 li
138.637 133.656 li
138.699 133.5 li
138.699 133.313 li
138.871 133.172 li
138.934 133.078 li
138.996 133 li
138.965 132.887 138.949 132.805 138.949 132.75 cv
138.949 132.668 138.973 132.578 139.027 132.484 cv
139.09 132.438 li
cp
140.012 132.094 mo
139.918 132.344 li
139.918 132.594 139.906 132.789 139.887 132.922 cv
139.793 133.063 li
139.793 133.219 li
139.73 133.313 li
139.684 133.516 li
139.527 133.672 li
139.434 134.016 li
139.324 134.063 li
139.262 134.219 li
139.105 134.313 li
138.98 134.547 li
138.824 134.641 li
138.809 134.797 li
138.543 134.906 li
138.418 135.074 138.266 135.18 138.09 135.219 cv
138.027 135.234 li
137.902 135.43 137.73 135.531 137.512 135.531 cv
137.418 135.582 137.313 135.609 137.199 135.609 cv
137.059 135.719 li
136.918 135.75 li
136.73 135.891 li
136.559 135.875 li
136.355 135.938 li
136.121 135.844 li
135.512 135.797 li
135.309 135.469 li
134.996 135.156 li
135.074 134.922 li
134.855 134.453 li
134.949 134.266 li
134.887 133.938 li
134.949 133.719 li
134.938 133.594 134.934 133.5 134.934 133.438 cv
134.934 133.262 134.98 133.133 135.074 133.047 cv
135.074 132.953 135.129 132.805 135.246 132.594 cv
135.324 132.594 li
135.293 132.484 li
135.34 132.297 li
135.34 132.078 li
135.41 131.996 135.453 131.945 135.465 131.922 cv
135.418 131.719 li
135.418 131.672 li
135.48 131.539 135.512 131.402 135.512 131.266 cv
135.809 130.859 li
135.809 130.859 135.816 130.852 135.84 130.828 cv
135.859 130.809 135.879 130.789 135.902 130.766 cv
135.887 130.719 li
135.949 130.719 li
136.152 130.469 li
136.168 130.156 li
136.527 130.031 li
136.652 129.949 136.734 129.809 136.777 129.609 cv
136.949 129.609 li
137.051 129.547 137.145 129.516 137.23 129.516 cv
137.313 129.516 137.395 129.539 137.48 129.578 cv
137.621 129.594 li
137.996 129.453 li
138.184 129.641 li
138.34 129.734 li
138.449 129.734 li
138.668 129.844 li
138.777 129.844 li
138.902 129.961 139.043 130.117 139.199 130.313 cv
139.23 130.375 li
139.324 130.438 li
139.621 130.813 li
139.887 131.469 li
139.887 131.609 li
140.012 132.094 li
cp
f
145.379 130.344 mo
145.379 130.43 145.293 130.512 145.129 130.594 cv
145.098 130.637 145.027 130.68 144.926 130.719 cv
144.789 130.773 144.695 130.82 144.645 130.859 cv
144.348 130.75 li
144.199 130.867 144.008 130.922 143.77 130.922 cv
143.598 130.875 li
143.473 131 li
143.098 131 li
142.863 131.141 li
142.758 131.109 142.66 131.094 142.566 131.094 cv
142.543 131.117 142.48 131.133 142.379 131.141 cv
142.324 131.141 142.273 131.133 142.223 131.109 cv
142.176 131.641 li
142.191 132.031 li
142.145 132.516 li
142.176 133.047 li
142.223 133.297 li
142.223 133.5 li
142.41 133.922 li
142.387 133.953 142.379 133.984 142.379 134.016 cv
142.379 134.078 142.477 134.133 142.676 134.172 cv
142.707 134.344 li
142.801 134.375 li
142.973 134.5 li
143.082 134.578 li
143.176 134.559 143.242 134.547 143.285 134.547 cv
143.367 134.547 143.449 134.563 143.535 134.594 cv
143.574 134.574 143.652 134.508 143.77 134.391 cv
143.852 134.32 143.93 134.281 144.004 134.281 cv
144.012 134.281 144.027 134.281 144.051 134.281 cv
144.07 134.293 144.086 134.297 144.098 134.297 cv
144.18 134.121 144.332 134.008 144.551 133.953 cv
144.738 133.953 144.898 134.012 145.035 134.125 cv
145.035 134.234 li
145.035 134.547 144.918 134.746 144.691 134.828 cv
144.605 135.027 144.43 135.152 144.16 135.203 cv
144.004 135.359 li
143.816 135.359 li
143.488 135.438 li
143.414 135.457 143.309 135.469 143.176 135.469 cv
143.102 135.469 143.02 135.453 142.926 135.422 cv
142.754 135.422 li
142.254 135.156 li
142.129 135.109 li
141.848 134.719 li
141.676 134.531 li
141.363 133.828 li
141.254 133.172 li
141.285 133.016 li
141.176 132.859 li
141.238 132.656 li
141.176 132.344 li
141.27 132.25 li
141.301 132.078 li
141.254 131.906 li
141.285 131.656 li
141.223 131.422 li
141.301 131.359 li
141.301 131.141 li
141.191 131.094 li
140.926 131.141 li
140.676 130.969 li
140.645 130.969 li
140.363 130.969 140.223 130.82 140.223 130.516 cv
140.223 130.469 li
140.051 130.203 li
140.316 129.953 li
140.66 130.016 li
140.848 129.984 li
141.113 130.063 li
141.41 130.063 li
141.41 129.781 li
141.223 129.391 li
141.41 129.281 li
141.332 129.078 li
141.348 128.641 li
141.238 128.453 li
141.176 128.359 141.145 128.266 141.145 128.172 cv
141.145 128.078 141.164 127.996 141.207 127.922 cv
141.254 127.734 li
141.363 127.625 li
141.613 127.574 141.777 127.547 141.863 127.547 cv
142.164 127.547 142.332 127.684 142.363 127.953 cv
142.316 128.031 li
142.367 128.117 142.395 128.195 142.395 128.266 cv
142.395 128.277 142.395 128.297 142.395 128.328 cv
142.363 128.422 li
142.348 128.516 li
142.395 128.703 li
142.395 128.766 li
142.41 128.969 li
142.285 129.125 li
142.363 129.406 li
142.301 129.75 li
142.41 129.875 li
142.301 130.125 li
142.738 130.063 li
143.504 130.141 li
144.129 130.047 li
144.332 130.063 li
144.41 130.047 li
144.957 130.047 li
145.238 130.047 145.379 130.148 145.379 130.344 cv
145.379 130.344 li
cp
f
149.996 132.438 mo
149.98 132.359 li
149.918 132.297 149.879 132.229 149.871 132.156 cv
149.902 132.078 li
149.777 131.813 li
149.809 131.547 li
149.746 131.484 li
149.629 131.391 149.566 131.32 149.559 131.266 cv
149.473 131.227 149.434 131.133 149.434 130.984 cv
149.34 130.969 li
149.184 130.688 li
149.059 130.594 li
148.762 130.469 li
148.652 130.453 li
148.59 130.453 148.547 130.434 148.527 130.391 cv
148.262 130.703 li
148.074 131.094 li
147.777 131.25 li
147.73 131.406 li
147.59 131.469 li
147.543 131.828 li
147.371 131.922 li
147.34 132.047 147.324 132.168 147.324 132.281 cv
147.09 132.484 li
147.168 132.531 li
147.168 132.648 147.125 132.746 147.043 132.828 cv
147.012 132.914 146.969 133.008 146.918 133.109 cv
146.918 133.219 li
146.887 133.281 li
146.902 133.438 li
146.746 133.828 li
146.777 133.891 li
146.777 134.281 li
146.715 134.484 li
146.73 134.672 li
146.855 134.859 li
147.059 134.922 li
147.121 134.953 li
147.23 134.906 li
147.59 134.922 li
147.652 134.781 li
147.715 134.781 li
147.766 134.781 147.797 134.797 147.809 134.828 cv
147.934 134.781 li
148.043 134.828 li
148.23 134.703 li
148.262 134.656 li
148.387 134.641 li
148.449 134.539 148.598 134.434 148.84 134.328 cv
148.871 134.25 li
149.152 134.063 li
149.309 133.828 li
149.527 133.719 li
149.543 133.656 li
149.605 133.5 li
149.605 133.313 li
149.777 133.172 li
149.84 133.078 li
149.902 133 li
149.871 132.887 149.855 132.805 149.855 132.75 cv
149.855 132.668 149.879 132.578 149.934 132.484 cv
149.996 132.438 li
cp
150.918 132.094 mo
150.824 132.344 li
150.824 132.594 150.813 132.789 150.793 132.922 cv
150.699 133.063 li
150.699 133.219 li
150.637 133.313 li
150.59 133.516 li
150.434 133.672 li
150.34 134.016 li
150.23 134.063 li
150.168 134.219 li
150.012 134.313 li
149.887 134.547 li
149.73 134.641 li
149.715 134.797 li
149.449 134.906 li
149.324 135.074 149.172 135.18 148.996 135.219 cv
148.934 135.234 li
148.809 135.43 148.637 135.531 148.418 135.531 cv
148.324 135.582 148.219 135.609 148.105 135.609 cv
147.965 135.719 li
147.824 135.75 li
147.637 135.891 li
147.465 135.875 li
147.262 135.938 li
147.027 135.844 li
146.418 135.797 li
146.215 135.469 li
145.902 135.156 li
145.98 134.922 li
145.762 134.453 li
145.855 134.266 li
145.793 133.938 li
145.855 133.719 li
145.844 133.594 145.84 133.5 145.84 133.438 cv
145.84 133.262 145.887 133.133 145.98 133.047 cv
145.98 132.953 146.035 132.805 146.152 132.594 cv
146.23 132.594 li
146.199 132.484 li
146.246 132.297 li
146.246 132.078 li
146.316 131.996 146.359 131.945 146.371 131.922 cv
146.324 131.719 li
146.324 131.672 li
146.387 131.539 146.418 131.402 146.418 131.266 cv
146.715 130.859 li
146.715 130.859 146.723 130.852 146.746 130.828 cv
146.766 130.809 146.785 130.789 146.809 130.766 cv
146.793 130.719 li
146.855 130.719 li
147.059 130.469 li
147.074 130.156 li
147.434 130.031 li
147.559 129.949 147.641 129.809 147.684 129.609 cv
147.855 129.609 li
147.957 129.547 148.051 129.516 148.137 129.516 cv
148.219 129.516 148.301 129.539 148.387 129.578 cv
148.527 129.594 li
148.902 129.453 li
149.09 129.641 li
149.246 129.734 li
149.355 129.734 li
149.574 129.844 li
149.684 129.844 li
149.809 129.961 149.949 130.117 150.105 130.313 cv
150.137 130.375 li
150.23 130.438 li
150.527 130.813 li
150.793 131.469 li
150.793 131.609 li
150.918 132.094 li
cp
f
157.285 130.172 mo
157.176 130.625 li
156.66 130.703 li
156.379 130.875 li
156.191 130.797 li
155.988 130.906 li
155.785 131 li
155.645 131.094 li
155.645 131.141 li
155.348 131.281 li
155.16 131.531 li
155.051 131.531 li
154.902 131.699 154.801 131.797 154.738 131.828 cv
154.535 132.156 li
154.473 132.188 li
154.441 132.262 154.41 132.371 154.379 132.516 cv
154.176 132.594 li
154.098 132.75 li
153.973 132.891 li
153.957 133.109 li
153.832 133.156 li
153.832 133.359 li
153.801 133.406 li
153.82 133.449 153.852 133.5 153.895 133.563 cv
153.691 133.641 li
153.66 133.828 li
153.52 134.063 li
153.598 134.234 li
153.426 134.5 li
153.434 134.594 153.441 134.656 153.441 134.688 cv
153.441 134.699 153.441 134.719 153.441 134.75 cv
153.441 134.773 153.441 134.793 153.441 134.813 cv
153.457 134.938 li
153.707 135.188 li
153.52 135.516 li
153.348 135.641 li
152.957 135.844 li
152.441 135.625 li
152.441 135.313 li
152.379 135.172 li
152.426 134.969 li
152.402 134.824 152.395 134.715 152.395 134.641 cv
152.395 134.609 152.398 134.57 152.41 134.516 cv
152.41 134.477 152.41 134.445 152.41 134.422 cv
152.395 134.281 li
152.332 134.219 152.301 134.148 152.301 134.063 cv
152.301 133.992 152.332 133.906 152.395 133.813 cv
152.395 133.762 152.383 133.621 152.363 133.391 cv
152.41 133.344 li
152.363 133.156 li
152.395 133 li
152.363 132.891 li
152.41 132.578 li
152.332 132.438 li
152.379 132.281 li
152.332 132.094 li
152.34 132.043 152.348 131.969 152.348 131.875 cv
152.348 131.742 152.324 131.648 152.285 131.594 cv
152.348 131.516 li
152.285 131.266 li
152.16 131.078 li
152.223 130.859 li
152.176 130.766 li
152.113 130.438 li
152.113 130.328 li
152.07 130.266 152.051 130.195 152.051 130.109 cv
152.051 129.922 152.254 129.766 152.66 129.641 cv
153.02 129.703 li
153.082 129.969 li
153.223 130.156 li
153.176 130.531 li
153.207 130.719 153.242 130.922 153.285 131.141 cv
153.316 131.375 li
153.324 131.398 153.336 131.449 153.348 131.531 cv
153.348 131.586 153.324 131.641 153.285 131.703 cv
153.316 131.984 li
153.301 132.297 li
153.238 132.438 li
153.285 132.484 li
153.301 132.625 li
153.363 132.563 153.398 132.496 153.41 132.422 cv
153.457 132.219 li
153.488 132.156 153.527 132.109 153.582 132.078 cv
153.645 131.875 li
153.832 131.766 li
153.863 131.594 li
154.02 131.422 li
154.129 131.219 li
154.254 131.086 154.371 131 154.488 130.969 cv
154.504 130.922 li
154.645 130.734 li
154.785 130.703 li
154.816 130.656 li
154.879 130.578 li
155.035 130.484 li
155.113 130.391 li
155.191 130.406 li
155.316 130.344 li
155.363 130.266 li
155.535 130.188 li
155.77 130.031 li
156.113 129.922 li
156.238 129.902 156.305 129.891 156.316 129.891 cv
156.316 129.902 156.316 129.906 156.316 129.906 cv
156.305 129.906 156.301 129.914 156.301 129.922 cv
156.316 129.922 li
156.355 129.922 156.414 129.902 156.488 129.859 cv
156.527 129.82 156.59 129.797 156.676 129.797 cv
156.715 129.797 156.785 129.809 156.879 129.828 cv
157.117 129.84 157.254 129.953 157.285 130.172 cv
157.285 130.172 li
cp
f
gsave
369.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
369.945 83.5508 li
369.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
372.508 86.0078 mo
452.773 5.74219 li
0 0 0 rgb
@
grestore
gsave
368.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
368.945 83.5508 li
368.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
370.914 84.418 mo
451.18 4.15186 li
0 0 0 rgb
@
grestore
gsave
362.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
362.945 83.5508 li
362.945 41.4531 li
cp
clp
362 41 mo
373 41 li
373 84 li
362 84 li
362 41 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
364.547 87.6055 mo
449.59 2.56299 li
0 0 0 rgb
@
grestore
gsave
360.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
360.945 83.5508 li
360.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
362.957 86.0156 mo
448 .96875 li
0 0 0 rgb
@
grestore
gsave
358.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
358.945 83.5508 li
358.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
361.363 84.4219 mo
446.41 -.621094 li
0 0 0 rgb
@
grestore
gsave
352.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
352.945 83.5508 li
352.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
354.996 87.6094 mo
444.816 -2.21094 li
0 0 0 rgb
@
grestore
gsave
350.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
350.945 83.5508 li
350.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
353.406 86.0195 mo
443.227 -3.80078 li
0 0 0 rgb
@
grestore
gsave
349.945 41.4531 mo
372.531 41.4531 li
372.531 83.5508 li
349.945 83.5508 li
349.945 41.4531 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
351.813 84.4297 mo
441.637 -5.39502 li
0 0 0 rgb
@
grestore
gsave
347.059 41.4531 mo
372.532 41.4531 li
372.532 83.5508 li
347.059 83.5508 li
347.059 41.4531 li
cp
clp
347 41 mo
373 41 li
373 84 li
347 84 li
347 41 li
cp
clp
.558943 lw
2 lc
0 lj
2 ml
[] 0 dsh
true sadj
305.652 86.043 mo
419.359 -27.668 li
307.242 87.6328 mo
420.953 -26.0781 li
313.609 84.4453 mo
422.543 -24.4839 li
315.203 86.0391 mo
424.133 -22.895 li
316.793 87.6289 mo
425.727 -21.3052 li
323.16 84.4414 mo
427.316 -19.7109 li
324.754 86.0352 mo
428.906 -18.1211 li
326.344 87.625 mo
430.5 -16.5313 li
332.711 84.4375 mo
432.09 -14.9409 li
334.305 86.0273 mo
433.68 -13.3481 li
335.895 87.6211 mo
435.27 -11.7578 li
342.262 84.4336 mo
436.863 -10.168 li
343.855 86.0234 mo
438.453 -8.57422 li
345.445 87.6133 mo
440.043 -6.98389 li
0 0 0 rgb
@
grestore
346.773 83.1953 mo
372.8 83.1953 li
372.8 88.3467 li
346.773 88.3467 li
346.773 83.1953 li
cp
0 0 0 rgb
f
346.773 36.6758 mo
372.8 36.6758 li
372.8 41.8281 li
346.773 41.8281 li
346.773 36.6758 li
cp
f
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
124.102 37.4258 mo
123.258 37.4492 122.375 37.6211 121.516 37.9219 cv
120.574 38.2539 119.664 38.7461 118.805 39.3711 cv
117.945 39.9922 117.137 40.75 116.398 41.6021 cv
115.656 42.457 114.98 43.4058 114.375 44.4102 cv
113.77 45.4141 113.238 46.4731 112.773 47.5552 cv
112.309 48.6328 111.914 49.7378 111.578 50.832 cv
111.242 51.9258 110.969 53.0161 110.746 54.082 cv
110.523 55.145 110.352 56.188 110.223 57.1909 cv
110.094 58.1948 110.008 59.1641 109.949 60.0938 cv
109.895 61.02 109.871 61.9102 109.871 62.7539 cv
109.871 63.5981 109.895 64.4839 109.949 65.4102 cv
110.008 66.3398 110.094 67.3091 110.223 68.313 cv
110.352 69.3159 110.523 70.3589 110.746 71.4219 cv
110.969 72.4878 111.242 73.5781 111.578 74.6719 cv
111.914 75.77 112.309 76.8711 112.773 77.9531 cv
113.238 79.0313 113.77 80.0938 114.375 81.0977 cv
114.98 82.1016 115.656 83.0469 116.398 83.9023 cv
117.137 84.7539 117.945 85.5117 118.805 86.1367 cv
119.664 86.7617 120.574 87.25 121.516 87.582 cv
122.375 87.8867 123.258 88.0547 124.145 88.082 cv
124.285 88.1406 li
152.137 88.1133 li
152.262 88.1055 li
153.148 88.082 154.035 87.9141 154.891 87.6094 cv
155.832 87.2773 156.742 86.7852 157.602 86.1602 cv
158.461 85.5391 159.27 84.7813 160.008 83.9258 cv
160.75 83.0742 161.426 82.125 162.031 81.1211 cv
162.637 80.1172 163.168 79.0586 163.633 77.9766 cv
164.098 76.8945 164.492 75.7969 164.828 74.6992 cv
165.164 73.605 165.438 72.5161 165.66 71.4492 cv
165.883 70.3828 166.055 69.3438 166.184 68.3398 cv
166.313 67.3359 166.398 66.3672 166.457 65.438 cv
166.512 64.5078 166.535 63.6211 166.539 62.7769 cv
166.535 61.9341 166.512 61.0469 166.457 60.1172 cv
166.398 59.1909 166.313 58.2231 166.184 57.2188 cv
166.055 56.2148 165.883 55.1719 165.66 54.1089 cv
165.438 53.043 165.164 51.9531 164.828 50.8589 cv
164.492 49.7622 164.098 48.6602 163.633 47.5781 cv
163.168 46.5 162.637 45.438 162.031 44.4341 cv
161.426 43.4302 160.75 42.4839 160.008 41.6289 cv
159.27 40.7769 158.461 40.02 157.602 39.395 cv
156.742 38.77 155.832 38.2808 154.891 37.9492 cv
154.035 37.645 153.148 37.4771 152.305 37.4492 cv
152.078 37.457 li
124.406 37.395 li
@
124.102 37.4258 mo
123.258 37.4492 122.375 37.6211 121.516 37.9219 cv
120.574 38.2539 119.664 38.7461 118.805 39.3711 cv
117.945 39.9922 117.137 40.75 116.398 41.6021 cv
115.656 42.457 114.98 43.4058 114.375 44.4102 cv
113.77 45.4141 113.238 46.4731 112.773 47.5552 cv
112.309 48.6328 111.914 49.7378 111.578 50.832 cv
111.242 51.9258 110.969 53.0161 110.746 54.082 cv
110.523 55.145 110.352 56.188 110.223 57.1909 cv
110.094 58.1948 110.008 59.1641 109.949 60.0938 cv
109.895 61.02 109.871 61.9102 109.871 62.7539 cv
109.871 63.5981 109.895 64.4839 109.949 65.4102 cv
110.008 66.3398 110.094 67.3091 110.223 68.313 cv
110.352 69.3159 110.523 70.3589 110.746 71.4219 cv
110.969 72.4878 111.242 73.5781 111.578 74.6719 cv
111.914 75.77 112.309 76.8711 112.773 77.9531 cv
113.238 79.0313 113.77 80.0938 114.375 81.0977 cv
114.98 82.1016 115.656 83.0469 116.398 83.9023 cv
117.137 84.7539 117.945 85.5117 118.805 86.1367 cv
119.664 86.7617 120.574 87.25 121.516 87.582 cv
122.375 87.8867 123.258 88.0547 124.145 88.082 cv
124.285 88.1406 li
152.137 88.1133 li
152.262 88.1055 li
153.148 88.082 154.035 87.9141 154.891 87.6094 cv
155.832 87.2773 156.742 86.7852 157.602 86.1602 cv
158.461 85.5391 159.27 84.7813 160.008 83.9258 cv
160.75 83.0742 161.426 82.125 162.031 81.1211 cv
162.637 80.1172 163.168 79.0586 163.633 77.9766 cv
164.098 76.8945 164.492 75.7969 164.828 74.6992 cv
165.164 73.605 165.438 72.5117 165.66 71.4492 cv
165.883 70.3828 166.055 69.3438 166.184 68.3398 cv
166.313 67.3359 166.398 66.3672 166.457 65.438 cv
166.512 64.5078 166.539 63.6211 166.539 62.7769 cv
166.539 61.9341 166.512 61.0469 166.457 60.1172 cv
166.398 59.1909 166.313 58.2231 166.184 57.2188 cv
166.055 56.2148 165.883 55.1719 165.66 54.1089 cv
165.438 53.043 165.164 51.9531 164.828 50.8589 cv
164.492 49.7622 164.098 48.6602 163.633 47.5781 cv
163.168 46.5 162.637 45.438 162.031 44.4341 cv
161.426 43.4302 160.75 42.4839 160.008 41.6289 cv
159.27 40.7769 158.461 40.02 157.602 39.395 cv
156.742 38.77 155.832 38.2808 154.891 37.9492 cv
154.035 37.645 153.148 37.4771 152.305 37.4492 cv
152.078 37.457 li
124.406 37.395 li
.670588 .670588 .670588 rgb
ef
124.102 37.4258 mo
123.258 37.4492 122.375 37.6211 121.516 37.9219 cv
120.574 38.2539 119.664 38.7461 118.805 39.3711 cv
117.945 39.9922 117.137 40.75 116.398 41.6021 cv
115.656 42.457 114.98 43.4058 114.375 44.4102 cv
113.77 45.4141 113.238 46.4731 112.773 47.5552 cv
112.309 48.6328 111.914 49.7378 111.578 50.832 cv
111.242 51.9258 110.969 53.0161 110.746 54.082 cv
110.523 55.145 110.352 56.188 110.223 57.1909 cv
110.094 58.1948 110.008 59.1641 109.949 60.0938 cv
109.895 61.02 109.871 61.9102 109.871 62.7539 cv
109.871 63.5981 109.895 64.4839 109.949 65.4102 cv
110.008 66.3398 110.094 67.3091 110.223 68.313 cv
110.352 69.3159 110.523 70.3589 110.746 71.4219 cv
110.969 72.4878 111.242 73.5781 111.578 74.6719 cv
111.914 75.77 112.309 76.8711 112.773 77.9531 cv
113.238 79.0313 113.77 80.0938 114.375 81.0977 cv
114.98 82.1016 115.656 83.0469 116.398 83.9023 cv
117.137 84.7539 117.945 85.5117 118.805 86.1367 cv
119.664 86.7617 120.574 87.25 121.516 87.582 cv
122.375 87.8867 123.258 88.0547 124.145 88.082 cv
124.285 88.1406 li
152.137 88.1133 li
152.262 88.1055 li
153.148 88.082 154.035 87.9141 154.891 87.6094 cv
155.832 87.2773 156.742 86.7852 157.602 86.1602 cv
158.461 85.5391 159.27 84.7813 160.008 83.9258 cv
160.75 83.0742 161.426 82.125 162.031 81.1211 cv
162.637 80.1172 163.168 79.0586 163.633 77.9766 cv
164.098 76.8945 164.492 75.7969 164.828 74.6992 cv
165.164 73.605 165.438 72.5161 165.66 71.4492 cv
165.883 70.3828 166.055 69.3438 166.184 68.3398 cv
166.313 67.3359 166.398 66.3672 166.457 65.438 cv
166.512 64.5078 166.535 63.6211 166.539 62.7769 cv
166.535 61.9341 166.512 61.0469 166.457 60.1172 cv
166.398 59.1909 166.313 58.2231 166.184 57.2188 cv
166.055 56.2148 165.883 55.1719 165.66 54.1089 cv
165.438 53.043 165.164 51.9531 164.828 50.8589 cv
164.492 49.7622 164.098 48.6602 163.633 47.5781 cv
163.168 46.5 162.637 45.438 162.031 44.4341 cv
161.426 43.4302 160.75 42.4839 160.008 41.6289 cv
159.27 40.7769 158.461 40.02 157.602 39.395 cv
156.742 38.77 155.832 38.2808 154.891 37.9492 cv
154.035 37.645 153.148 37.4771 152.305 37.4492 cv
152.078 37.457 li
124.406 37.395 li
0 0 0 rgb
@
124.008 37.4341 mo
124.852 37.4609 125.734 37.6289 126.594 37.9341 cv
127.535 38.2622 128.445 38.7539 129.305 39.3789 cv
130.164 40.0039 130.973 40.7622 131.711 41.6128 cv
132.453 42.4648 133.129 43.4141 133.734 44.418 cv
134.34 45.4219 134.871 46.4839 135.336 47.563 cv
135.801 48.645 136.195 49.7461 136.531 50.8398 cv
136.867 51.938 137.141 53.0269 137.363 54.0898 cv
137.586 55.1558 137.758 56.1948 137.887 57.2031 cv
138.016 58.207 138.102 59.1758 138.16 60.1021 cv
138.215 61.0308 138.242 61.918 138.242 62.7617 cv
138.242 63.605 138.215 64.4922 138.16 65.4219 cv
138.102 66.3481 138.016 67.3159 137.887 68.3242 cv
137.758 69.3281 137.586 70.3672 137.363 71.4341 cv
137.141 72.4961 136.867 73.5859 136.531 74.6841 cv
136.195 75.7769 135.801 76.8789 135.336 77.9609 cv
134.871 79.043 134.34 80.1016 133.734 81.1055 cv
133.129 82.1094 132.453 83.0586 131.711 83.9102 cv
130.973 84.7617 130.164 85.5195 129.305 86.1445 cv
128.445 86.7695 127.535 87.2617 126.594 87.5938 cv
125.734 87.8945 124.852 88.0625 123.965 88.0898 cv
.670588 .670588 .670588 rgb
ef
gsave
0 153 mo
385 153 li
385 0 li
0 0 li
0 153 li
cp
clp
314.699 57.7891 mo
379.348 57.7891 li
379.477 57.8008 li
380.801 57.8159 381.914 58.8481 382.09 60.2231 cv
382.289 61.7539 381.266 63.1641 379.805 63.3711 cv
379.465 63.3979 li
314.824 63.1367 li
124.008 37.4341 mo
124.852 37.4609 125.734 37.6289 126.594 37.9341 cv
127.535 38.2622 128.445 38.7539 129.305 39.3789 cv
130.164 40.0039 130.973 40.7622 131.711 41.6128 cv
132.453 42.4648 133.129 43.4141 133.734 44.418 cv
134.34 45.4219 134.871 46.4839 135.336 47.563 cv
135.801 48.645 136.195 49.7461 136.531 50.8398 cv
136.867 51.938 137.141 53.0269 137.363 54.0898 cv
137.586 55.1558 137.758 56.1948 137.887 57.2031 cv
138.016 58.207 138.102 59.1758 138.16 60.1021 cv
138.215 61.0308 138.242 61.918 138.242 62.7617 cv
138.242 63.605 138.215 64.4922 138.16 65.4219 cv
138.102 66.3481 138.016 67.3159 137.887 68.3242 cv
137.758 69.3281 137.586 70.3672 137.363 71.4341 cv
137.141 72.4961 136.867 73.5859 136.531 74.6841 cv
136.195 75.7769 135.801 76.8789 135.336 77.9609 cv
134.871 79.043 134.34 80.1016 133.734 81.1055 cv
133.129 82.1094 132.453 83.0586 131.711 83.9102 cv
130.973 84.7617 130.164 85.5195 129.305 86.1445 cv
128.445 86.7695 127.535 87.2617 126.594 87.5938 cv
125.734 87.8945 124.852 88.0625 123.965 88.0898 cv
0 0 0 rgb
@
314.699 57.7891 mo
379.348 57.7891 li
379.477 57.8008 li
380.801 57.8159 381.914 58.8481 382.09 60.2231 cv
382.289 61.7539 381.266 63.1641 379.805 63.3711 cv
379.465 63.3979 li
314.824 63.1367 li
.901961 .992157 .921569 rgb
f
314.699 57.7891 mo
379.348 57.7891 li
379.477 57.8008 li
380.801 57.8159 381.914 58.8481 382.09 60.2231 cv
382.289 61.7539 381.266 63.1641 379.805 63.3711 cv
379.465 63.3979 li
314.824 63.1367 li
0 0 0 rgb
@
grestore
gsave
230.945 0 mo
332.945 0 li
332.945 134.398 li
230.945 134.398 li
230.945 0 li
cp
clp
264.063 .569824 mo
262.98 .628906 261.848 1.02686 260.75 1.74219 cv
259.547 2.51611 258.379 3.67188 257.277 5.14111 cv
256.176 6.60889 255.145 8.38672 254.191 10.395 cv
253.242 12.3979 252.379 14.625 251.605 16.9839 cv
250.832 19.3481 250.148 21.8359 249.551 24.3789 cv
248.957 26.918 248.449 29.5078 248.02 32.082 cv
247.59 34.6602 247.242 37.2188 246.957 39.7231 cv
246.672 42.2271 246.453 44.6719 246.285 47.0308 cv
246.121 49.395 246.008 51.6719 245.934 53.8521 cv
245.863 56.0308 245.832 58.1172 245.832 60.1021 cv
245.832 62.0859 245.863 64.1719 245.934 66.3521 cv
246.008 68.5308 246.121 70.8091 246.285 73.1719 cv
246.453 75.5308 246.672 77.9766 246.957 80.4805 cv
247.242 82.9844 247.59 85.5469 248.02 88.1211 cv
248.449 90.6953 248.957 93.2852 249.551 95.8242 cv
250.148 98.3672 250.832 100.855 251.605 103.219 cv
252.379 105.578 253.242 107.805 254.191 109.809 cv
255.145 111.813 256.176 113.594 257.277 115.063 cv
258.379 116.531 259.547 117.684 260.75 118.465 cv
261.848 119.176 262.98 119.57 264.117 119.633 cv
264.301 119.777 li
299.973 119.707 li
300.137 119.695 li
301.27 119.633 302.402 119.238 303.504 118.523 cv
304.707 117.746 305.875 116.59 306.973 115.121 cv
308.074 113.656 309.109 111.875 310.059 109.871 cv
311.008 107.867 311.875 105.637 312.648 103.277 cv
313.422 100.918 314.105 98.4258 314.699 95.8867 cv
315.297 93.3477 315.801 90.7578 316.23 88.1797 cv
316.66 85.6055 317.012 83.0469 317.297 80.543 cv
317.582 78.0391 317.801 75.5938 317.965 73.2339 cv
318.133 70.8711 318.246 68.5938 318.316 66.4141 cv
318.387 64.23 318.418 62.1479 318.418 60.1641 cv
318.418 58.1758 318.387 56.0938 318.316 53.9141 cv
318.246 51.73 318.133 49.4531 317.965 47.0938 cv
317.801 44.73 317.582 42.2852 317.297 39.7808 cv
317.012 37.2808 316.66 34.7188 316.23 32.145 cv
315.801 29.5698 315.297 26.9771 314.699 24.438 cv
314.105 21.8979 313.422 19.4058 312.648 17.0469 cv
311.875 14.688 311.008 12.4609 310.059 10.4531 cv
309.109 8.44922 308.074 6.66797 306.973 5.20313 cv
305.875 3.73389 304.707 2.57813 303.504 1.80078 cv
302.402 1.08594 301.27 .690918 300.191 .628906 cv
299.898 .647949 li
264.453 .503906 li
0 0 0 rgb
@
grestore
264.063 .569824 mo
262.98 .628906 261.852 1.02686 260.75 1.74219 cv
259.547 2.51611 258.379 3.67188 257.277 5.14111 cv
256.176 6.60889 255.145 8.38672 254.191 10.395 cv
253.242 12.3979 252.379 14.625 251.605 16.9839 cv
250.832 19.3481 250.148 21.8359 249.551 24.3789 cv
248.957 26.918 248.449 29.5078 248.02 32.082 cv
247.59 34.6602 247.242 37.2188 246.957 39.7231 cv
246.672 42.2271 246.453 44.6719 246.285 47.0308 cv
246.121 49.395 246.008 51.6719 245.934 53.8521 cv
245.863 56.0308 245.832 58.1172 245.832 60.1021 cv
245.832 62.0859 245.863 64.1719 245.934 66.3521 cv
246.008 68.5308 246.121 70.8091 246.285 73.1719 cv
246.453 75.5308 246.672 77.9766 246.957 80.4805 cv
247.242 82.9844 247.59 85.5469 248.02 88.1211 cv
248.449 90.6953 248.957 93.2852 249.551 95.8242 cv
250.148 98.3672 250.832 100.855 251.605 103.219 cv
252.379 105.578 253.242 107.805 254.191 109.809 cv
255.145 111.813 256.176 113.594 257.277 115.063 cv
258.379 116.531 259.547 117.684 260.75 118.465 cv
261.852 119.176 262.98 119.57 264.117 119.633 cv
264.301 119.777 li
299.973 119.707 li
300.137 119.695 li
301.27 119.633 302.402 119.238 303.504 118.523 cv
304.707 117.746 305.875 116.59 306.973 115.121 cv
308.074 113.656 309.109 111.875 310.059 109.871 cv
311.008 107.867 311.875 105.637 312.648 103.277 cv
313.422 100.918 314.105 98.4258 314.699 95.8867 cv
315.297 93.3477 315.801 90.7578 316.23 88.1797 cv
316.66 85.6055 317.012 83.0469 317.297 80.543 cv
317.582 78.0391 317.801 75.5938 317.965 73.2339 cv
318.133 70.8711 318.246 68.5938 318.316 66.4141 cv
318.387 64.23 318.418 62.1479 318.418 60.1641 cv
318.418 58.1758 318.387 56.0938 318.316 53.9141 cv
318.246 51.73 318.133 49.4531 317.965 47.0938 cv
317.801 44.73 317.582 42.2852 317.297 39.7808 cv
317.012 37.2808 316.66 34.7188 316.23 32.145 cv
315.801 29.5698 315.297 26.9771 314.699 24.438 cv
314.105 21.8979 313.422 19.4058 312.648 17.0469 cv
311.875 14.688 311.008 12.4609 310.059 10.4531 cv
309.109 8.44922 308.074 6.66797 306.973 5.20313 cv
305.875 3.73389 304.707 2.57813 303.504 1.80078 cv
302.402 1.08594 301.27 .690918 300.191 .628906 cv
299.898 .647949 li
264.453 .503906 li
1 .129412 0 rgb
ef
gsave
230.945 0 mo
332.945 0 li
332.945 134.398 li
230.945 134.398 li
230.945 0 li
cp
clp
264.063 .569824 mo
262.98 .628906 261.848 1.02686 260.75 1.74219 cv
259.547 2.51611 258.379 3.67188 257.277 5.14111 cv
256.176 6.60889 255.145 8.38672 254.191 10.395 cv
253.242 12.3979 252.379 14.625 251.605 16.9839 cv
250.832 19.3481 250.148 21.8359 249.551 24.3789 cv
248.957 26.918 248.449 29.5078 248.02 32.082 cv
247.59 34.6602 247.242 37.2188 246.957 39.7231 cv
246.672 42.2271 246.453 44.6719 246.285 47.0308 cv
246.121 49.395 246.008 51.6719 245.934 53.8521 cv
245.863 56.0308 245.832 58.1172 245.832 60.1021 cv
245.832 62.0859 245.863 64.1719 245.934 66.3521 cv
246.008 68.5308 246.121 70.8091 246.285 73.1719 cv
246.453 75.5308 246.672 77.9766 246.957 80.4805 cv
247.242 82.9844 247.59 85.5469 248.02 88.1211 cv
248.449 90.6953 248.957 93.2852 249.551 95.8242 cv
250.148 98.3672 250.832 100.855 251.605 103.219 cv
252.379 105.578 253.242 107.805 254.191 109.809 cv
255.145 111.813 256.176 113.594 257.277 115.063 cv
258.379 116.531 259.547 117.684 260.75 118.465 cv
261.848 119.176 262.98 119.57 264.117 119.633 cv
264.301 119.777 li
299.973 119.707 li
300.137 119.695 li
301.27 119.633 302.402 119.238 303.504 118.523 cv
304.707 117.746 305.875 116.59 306.973 115.121 cv
308.074 113.656 309.109 111.875 310.059 109.871 cv
311.008 107.867 311.875 105.637 312.648 103.277 cv
313.422 100.918 314.105 98.4258 314.699 95.8867 cv
315.297 93.3477 315.801 90.7578 316.23 88.1797 cv
316.66 85.6055 317.012 83.0469 317.297 80.543 cv
317.582 78.0391 317.801 75.5938 317.965 73.2339 cv
318.133 70.8711 318.246 68.5938 318.316 66.4141 cv
318.387 64.23 318.418 62.1479 318.418 60.1641 cv
318.418 58.1758 318.387 56.0938 318.316 53.9141 cv
318.246 51.73 318.133 49.4531 317.965 47.0938 cv
317.801 44.73 317.582 42.2852 317.297 39.7808 cv
317.012 37.2808 316.66 34.7188 316.23 32.145 cv
315.801 29.5698 315.297 26.9771 314.699 24.438 cv
314.105 21.8979 313.422 19.4058 312.648 17.0469 cv
311.875 14.688 311.008 12.4609 310.059 10.4531 cv
309.109 8.44922 308.074 6.66797 306.973 5.20313 cv
305.875 3.73389 304.707 2.57813 303.504 1.80078 cv
302.402 1.08594 301.27 .690918 300.191 .628906 cv
299.898 .647949 li
264.453 .503906 li
0 0 0 rgb
@
grestore
gsave
248.945 0 mo
296.945 0 li
296.945 134.398 li
248.945 134.398 li
248.945 0 li
cp
clp
263.941 .589844 mo
265.023 .651855 266.156 1.05078 267.258 1.76172 cv
268.461 2.53906 269.629 3.69482 270.727 5.16406 cv
271.828 6.62891 272.863 8.41016 273.813 10.4141 cv
274.762 12.4219 275.629 14.6479 276.398 17.0078 cv
277.176 19.3672 277.859 21.8589 278.453 24.3979 cv
279.047 26.9409 279.555 29.5308 279.984 32.105 cv
280.414 34.6802 280.766 37.2422 281.051 39.7461 cv
281.336 42.2461 281.555 44.6948 281.719 47.0552 cv
281.887 49.4141 282 51.6948 282.07 53.875 cv
282.141 56.0552 282.172 58.1411 282.172 60.125 cv
282.172 62.1089 282.141 64.1909 282.07 66.375 cv
282 68.5552 281.887 70.832 281.719 73.1948 cv
281.555 75.5552 281.336 78 281.051 80.5039 cv
280.766 83.0078 280.414 85.5664 279.984 88.1445 cv
279.555 90.7188 279.047 93.3086 278.453 95.8477 cv
277.859 98.3867 277.176 100.879 276.398 103.238 cv
275.629 105.598 274.762 107.828 273.813 109.832 cv
272.863 111.836 271.828 113.617 270.727 115.082 cv
269.629 116.555 268.461 117.707 267.258 118.484 cv
266.156 119.199 265.023 119.594 263.891 119.656 cv
0 0 0 rgb
@
grestore
296.477 53.6841 mo
296.664 52.8872 296.711 52.668 298.023 52.668 cv
298.414 52.668 298.664 52.668 298.664 52.2148 cv
298.664 52.0122 298.523 51.9341 298.336 51.9341 cv
297.742 51.9341 296.273 52.0122 295.68 52.0122 cv
294.898 52.0122 292.961 51.9341 292.164 51.9341 cv
291.961 51.9341 291.664 51.9341 291.664 52.418 cv
291.664 52.668 291.852 52.668 292.477 52.668 cv
293.023 52.668 293.273 52.668 293.867 52.73 cv
294.445 52.793 294.602 52.8711 294.602 53.1992 cv
294.602 53.3398 294.555 53.5122 294.508 53.6992 cv
291.758 64.6841 li
291.195 66.9961 289.57 68.2622 288.32 68.2622 cv
287.695 68.2622 286.43 68.0269 286.055 66.7769 cv
286.117 66.8091 286.289 66.8091 286.336 66.8091 cv
287.273 66.8091 287.883 65.9961 287.883 65.2769 cv
287.883 64.5122 287.242 64.2617 286.836 64.2617 cv
286.414 64.2617 285.242 64.5591 285.242 66.1841 cv
285.242 67.668 286.508 68.793 288.398 68.793 cv
290.586 68.793 293.07 67.2148 293.68 64.8398 cv
296.477 53.6841 li
cp
0 0 0 rgb
f
304.063 70.4922 mo
303.969 70.8359 303.828 71.3979 303.828 71.4771 cv
303.828 71.8521 304.125 72.0229 304.391 72.0229 cv
304.703 72.0229 304.969 71.8052 305.047 71.6479 cv
305.125 71.5078 305.266 70.9609 305.344 70.6172 cv
305.438 70.2891 305.609 69.5229 305.719 69.1021 cv
305.813 68.7422 305.922 68.3672 306 67.9922 cv
306.188 67.2729 306.188 67.2271 306.516 66.7109 cv
307.063 65.8979 307.891 64.9448 309.203 64.9448 cv
310.141 64.9448 310.188 65.7109 310.188 66.1172 cv
310.188 67.1172 309.469 68.9771 309.203 69.6802 cv
309.016 70.1479 308.953 70.2891 308.953 70.5859 cv
308.953 71.4609 309.688 72.0229 310.531 72.0229 cv
312.203 72.0229 312.953 69.7109 312.953 69.4609 cv
312.953 69.2422 312.734 69.2422 312.672 69.2422 cv
312.438 69.2422 312.422 69.3359 312.359 69.5229 cv
311.969 70.8672 311.25 71.5552 310.594 71.5552 cv
310.234 71.5552 310.172 71.3198 310.172 70.9609 cv
310.172 70.5859 310.25 70.3672 310.547 69.6021 cv
310.75 69.0859 311.438 67.3198 311.438 66.3828 cv
311.438 66.1172 311.438 65.4141 310.813 64.9302 cv
310.531 64.7109 310.047 64.4771 309.266 64.4771 cv
307.766 64.4771 306.844 65.4609 306.297 66.1641 cv
306.172 64.7422 304.984 64.4771 304.125 64.4771 cv
302.734 64.4771 301.797 65.3198 301.297 65.9922 cv
301.188 64.8359 300.188 64.4771 299.516 64.4771 cv
298.781 64.4771 298.406 64.9922 298.188 65.3828 cv
297.813 65.9922 297.578 66.9448 297.578 67.0391 cv
297.578 67.2422 297.813 67.2422 297.875 67.2422 cv
298.109 67.2422 298.125 67.1948 298.234 66.7422 cv
298.484 65.7578 298.813 64.9448 299.453 64.9448 cv
299.891 64.9448 300.016 65.3052 300.016 65.7578 cv
300.016 66.0859 299.859 66.6948 299.734 67.1479 cv
299.625 67.6021 299.453 68.2891 299.375 68.6479 cv
298.844 70.8052 li
298.766 71.0078 298.672 71.4302 298.672 71.4771 cv
298.672 71.8521 298.969 72.0229 299.234 72.0229 cv
299.547 72.0229 299.813 71.8052 299.891 71.6479 cv
299.969 71.5078 300.109 70.9609 300.188 70.6172 cv
300.281 70.2891 300.469 69.5229 300.563 69.1021 cv
300.656 68.7422 300.766 68.3672 300.844 67.9922 cv
301.031 67.3052 301.063 67.1641 301.547 66.4771 cv
302.016 65.8052 302.797 64.9448 304.063 64.9448 cv
305.031 64.9448 305.047 65.7891 305.047 66.1172 cv
305.047 66.5229 305 66.7422 304.766 67.6802 cv
304.063 70.4922 li
cp
f
324.203 75.2231 mo
324.383 70.625 li
328.629 72.395 li
324.918 71.4648 mo
328.051 76.3672 332.676 75.5161 335.254 69.563 cv
337.832 63.6172 337.387 54.8198 334.254 49.9219 cv
331.676 45.8828 327.984 45.668 325.281 49.395 cv
@
2 lj
58.0938 101.484 mo
49.5898 92.9805 li
49.5898 24.9492 li
58.0938 30.6172 li
87.7461 30.6172 li
87.7461 101.484 li
58.0938 101.484 li
58.0938 30.6172 li
49.5898 24.9492 li
77.938 24.9492 li
87.5591 30.2461 li
@
58.0938 101.484 mo
49.5898 92.9805 li
49.5898 24.9492 li
58.0938 30.6172 li
87.7461 30.6172 li
87.7461 101.484 li
58.0938 101.484 li
58.0938 30.6172 li
49.5898 24.9492 li
77.938 24.9492 li
87.5591 30.2461 li
.992157 .772549 .360784 rgb
f
58.0938 101.484 mo
49.5898 92.9805 li
49.5898 24.9492 li
58.0938 30.6172 li
87.7461 30.6172 li
87.7461 101.484 li
58.0938 101.484 li
58.0938 30.6172 li
49.5898 24.9492 li
77.938 24.9492 li
87.5591 30.2461 li
0 0 0 rgb
@
0 lj
87.938 53.293 mo
115.773 53.293 li
@
123.293 53.293 mo
115.773 56.0308 li
115.773 50.5591 li
123.293 53.293 li
cp
f
96.2852 73.2578 mo
123.293 73.1372 li
123.293 53.293 mo
123.293 53.293 mo
115.773 56.0308 li
115.773 50.5591 li
123.293 53.293 li
cp
@
88.7661 73.293 mo
96.27 70.52 li
96.2969 75.9922 li
88.7661 73.293 li
cp
f
23.582 56.1289 mo
44.9102 56.1289 li
88.7661 73.293 mo
88.7661 73.293 mo
96.27 70.52 li
96.2969 75.9922 li
88.7661 73.293 li
cp
@
52.4258 56.1289 mo
44.9102 58.8628 li
44.9102 53.3911 li
52.4258 56.1289 li
cp
f
52.4258 56.1289 mo
44.9102 58.8628 li
44.9102 53.3911 li
52.4258 56.1289 li
cp
@
95.0859 39.8911 mo
94.7109 39.8911 94.4302 40.2188 94.4302 40.625 cv
94.4302 41.0781 94.6948 41.375 95.1021 41.375 cv
95.4609 41.375 95.7891 41.0469 95.7891 40.6558 cv
95.7891 40.25 95.4609 39.8911 95.0859 39.8911 cv
95.0859 39.8911 li
cp
95.1948 47.4219 mo
94.8672 47.875 94.7729 47.9839 94.6328 48.1411 cv
94.3828 48.375 94.1802 48.5161 94.0552 48.5161 cv
93.9448 48.5161 93.8359 48.4058 93.8359 48.2969 cv
93.8359 48.1719 93.8672 47.9531 93.9771 47.688 cv
93.9771 47.6411 94.0078 47.5469 94.0391 47.438 cv
94.0391 47.4058 li
94.0552 47.3911 li
95.2891 42.8911 li
95.2422 42.8589 li
93.8359 43.125 93.5552 43.1719 93.0078 43.2188 cv
93.0078 43.438 li
93.7422 43.4531 93.8828 43.4839 93.8828 43.7661 cv
93.8828 43.875 93.8521 44.1089 93.7578 44.3911 cv
93.0859 46.8589 li
92.8672 47.6558 92.7891 48.0938 92.7891 48.375 cv
92.7891 48.8911 93.0078 49.1719 93.4302 49.1719 cv
94.0698 49.1719 94.5859 48.75 95.3828 47.5781 cv
95.1948 47.4219 li
cp
f
103.09 49.9058 mo
102.996 50.0308 102.918 50.125 102.887 50.1719 cv
102.59 50.5469 102.371 50.7188 102.215 50.7188 cv
102.137 50.7188 102.09 50.6558 102.09 50.5469 cv
102.09 50.5 102.121 50.3281 102.184 50.0938 cv
102.887 47.5 li
102.902 47.4531 102.918 47.2661 102.918 47.2031 cv
102.918 46.8281 102.668 46.563 102.309 46.563 cv
102.121 46.563 101.902 46.625 101.668 46.7808 cv
101.152 47.1089 100.73 47.6089 100.012 48.75 cv
100.277 47.9531 100.434 47.375 100.434 47.1719 cv
100.434 46.813 100.199 46.563 99.8398 46.563 cv
99.2148 46.563 98.4961 47.2339 97.543 48.7339 cv
98.1372 46.5781 li
98.105 46.563 li
97.5269 46.6719 97.3091 46.7188 96.4492 46.875 cv
96.4492 47.0469 li
96.7148 47.0469 li
96.98 47.0469 97.1211 47.1089 97.1211 47.2661 cv
97.1211 47.375 96.8872 48.3281 96.5122 49.625 cv
96.2769 50.4839 96.2461 50.5781 96.105 51.1089 cv
96.8872 51.1089 li
97.3711 49.4688 97.5269 49.0781 97.8872 48.5469 cv
98.4648 47.6719 99.0742 47.0938 99.4341 47.0938 cv
99.5591 47.0938 99.6372 47.188 99.6372 47.3438 cv
99.6372 47.438 99.3091 48.688 98.6519 51.1089 cv
99.4341 51.1089 li
99.8398 49.5 100.043 48.9839 100.574 48.25 cv
101.09 47.5469 101.605 47.0938 101.902 47.0938 cv
102.012 47.0938 102.105 47.188 102.105 47.313 cv
102.105 47.3589 102.09 47.4839 102.027 47.6719 cv
101.434 50.0469 li
101.34 50.4219 101.293 50.625 101.293 50.7339 cv
101.293 51.0308 101.449 51.2031 101.715 51.2031 cv
102.199 51.2031 102.652 50.8589 103.199 50.0938 cv
103.246 50.0308 li
103.09 49.9058 li
cp
f
20.3052 57.1602 mo
19.5698 58.0659 19.3672 58.2539 19.1479 58.2539 cv
19.0391 58.2539 18.9922 58.1758 18.9922 58.02 cv
18.9922 57.9409 18.9922 57.9409 19.2578 56.9258 cv
20.3521 52.7539 li
19.3198 52.7539 li
18.5229 54.9258 18.4302 55.145 17.7891 56.1602 cv
16.9448 57.4878 16.2729 58.1909 15.8198 58.1909 cv
15.6479 58.1909 15.5229 58.0659 15.5229 57.8481 cv
15.5229 57.8008 15.5229 57.77 15.5391 57.7231 cv
16.8052 52.6602 li
16.7729 52.6289 li
15.9771 52.8159 15.4771 52.9102 14.6802 53.0039 cv
14.6802 53.207 li
15.2109 53.207 15.2422 53.2231 15.3672 53.2852 cv
15.4448 53.3159 15.5078 53.4409 15.5078 53.5352 cv
15.5078 53.645 15.4448 54.0039 15.3198 54.4731 cv
14.8052 56.457 li
14.5552 57.4409 14.4609 57.9258 14.4609 58.1758 cv
14.4609 58.6758 14.7109 58.9409 15.1948 58.9409 cv
16.1802 58.9409 16.9302 58.1909 18.5229 55.4878 cv
18.1172 56.9878 17.8979 57.9409 17.8979 58.2378 cv
17.8979 58.6602 18.1479 58.9102 18.5698 58.9102 cv
19.2271 58.9102 19.5391 58.6289 20.4922 57.2852 cv
20.3052 57.1602 li
cp
f
50.4302 133.516 mo
50.4141 133.438 li
50.4302 133.391 li
50.3521 133.141 li
50.3979 133.016 li
50.3521 132.891 li
50.3359 132.75 li
50.2271 132.531 li
50.1641 132.375 li
49.9609 132.016 li
49.7891 131.875 li
49.6802 131.641 li
49.5552 131.578 li
49.3359 131.281 li
49.1172 131.313 li
48.9448 131.094 li
48.8052 131.125 li
48.7109 130.938 li
48.6479 130.922 li
48.4609 130.922 li
48.3198 131 li
48.2109 130.875 li
48.0698 130.906 li
48.0078 130.813 li
47.7578 130.766 li
47.7729 130.938 li
47.7422 131.203 li
47.8052 131.359 li
47.9922 131.531 li
47.8359 131.875 li
47.8521 132.078 li
47.7891 132.5 li
47.8091 132.68 47.8589 132.828 47.9448 132.953 cv
47.8979 133.109 li
47.9058 133.121 47.9141 133.133 47.9141 133.141 cv
47.9141 133.164 47.875 133.203 47.8052 133.266 cv
47.8979 133.391 li
47.8198 133.563 li
47.8052 133.734 li
47.8359 133.938 li
47.8198 134.109 li
48.1172 134.109 li
48.1563 134.102 48.2109 134.094 48.2729 134.094 cv
48.355 134.094 48.4302 134.121 48.4922 134.172 cv
48.5 134.172 48.5229 134.168 48.5552 134.156 cv
48.5742 134.156 48.5898 134.156 48.6021 134.156 cv
48.6211 134.156 48.668 134.168 48.7422 134.188 cv
48.8052 134.156 48.855 134.141 48.8979 134.141 cv
48.9688 134.141 49.043 134.164 49.1172 134.203 cv
49.2422 134.203 li
49.3521 134.234 li
49.6328 134.141 li
49.8521 134.281 li
49.9341 134.313 49.9688 134.328 49.9609 134.328 cv
50.2271 134.063 li
50.2422 133.859 li
50.3198 133.828 li
50.2729 133.719 li
50.3672 133.609 li
50.4302 133.516 li
cp
51.4771 133.297 mo
51.3052 133.719 li
51.4302 134 li
51.3672 134.094 li
51.3052 134.313 li
51.1948 134.5 li
51.1479 134.531 li
51.1172 134.797 li
50.8672 134.828 li
50.73 134.953 50.5938 135.055 50.4609 135.125 cv
50.3672 135.109 li
50.1641 135.172 li
50.0391 135.188 li
49.7729 135.297 li
49.4609 135.156 li
49.4141 135.125 li
49.1802 135.141 li
49.2422 135.172 li
48.8521 135.109 li
48.4922 135.188 li
48.3521 135.063 li
48.0698 135.094 li
47.9448 135.016 li
47.9341 135.016 47.8979 135.023 47.8359 135.031 cv
47.8359 135.109 li
47.8359 135.195 47.8242 135.277 47.8052 135.359 cv
47.8359 135.625 li
47.7271 135.766 li
47.7461 135.973 47.7578 136.129 47.7578 136.234 cv
47.7109 136.578 li
47.7729 137.109 li
47.6641 137.25 li
47.7109 137.469 li
47.6641 137.594 li
47.7578 137.641 li
47.7578 137.859 li
47.7769 137.91 47.7891 137.953 47.7891 137.984 cv
47.7891 138.066 47.7339 138.133 47.6328 138.188 cv
47.6802 138.391 li
47.6172 138.5 li
47.5859 139.063 li
47.5552 139.707 47.4063 140.031 47.1479 140.031 cv
47.0938 140.031 46.9341 139.992 46.6641 139.922 cv
46.7109 139.5 li
46.6172 138.891 li
46.7578 138.641 li
46.7729 138.328 li
46.7271 137.906 li
46.8359 137.734 li
46.7109 137.406 li
46.8052 137.234 li
46.7271 136.953 li
46.8359 136.703 li
46.813 136.648 46.7769 136.598 46.7271 136.547 cv
46.6719 136.504 46.6479 136.473 46.6479 136.453 cv
46.6479 136.422 46.6802 136.395 46.7422 136.375 cv
46.73 136.344 46.7271 136.297 46.7271 136.234 cv
46.7271 136.109 46.7578 135.945 46.8198 135.75 cv
46.7271 135.609 li
46.7729 135.438 li
46.6802 135.313 li
46.8052 135.156 li
46.7422 134.75 li
46.8359 134.172 li
46.7271 133.984 li
46.8828 133.719 li
46.7271 133.563 li
46.8198 133.297 li
46.7271 133.234 li
46.7271 133 li
46.8198 132.703 li
46.8198 132.641 li
46.8359 132.594 li
46.8359 132.438 li
46.8521 132.375 li
46.7729 132.156 li
46.8521 131.922 li
46.7729 131.734 li
46.8359 131.531 li
46.7729 131.469 li
46.8198 131.188 li
46.7729 131.031 li
46.8052 130.891 li
46.7578 130.797 li
46.2578 131.016 li
46.2578 130.938 li
46.1641 130.953 li
46.0078 131.094 li
45.8828 131.094 li
45.7109 131.313 li
45.5698 131.266 li
45.5078 131.406 li
45.0508 131.137 44.8198 130.918 44.8198 130.75 cv
44.8198 130.648 44.8628 130.555 44.9448 130.469 cv
44.9302 130.266 li
45.1909 130.121 45.4341 130.043 45.6641 130.031 cv
45.7729 129.922 li
46.2109 129.75 li
46.3198 129.656 li
46.7109 129.672 li
46.7729 129.656 li
46.8979 129.156 li
47.2422 129.234 li
47.4609 129.594 li
47.5859 129.469 li
47.8359 129.656 li
47.9609 129.656 48.0781 129.68 48.1948 129.719 cv
48.2578 129.844 li
48.3521 129.797 li
48.4771 129.891 li
48.5391 129.891 48.5859 129.898 48.6172 129.906 cv
48.6021 129.984 li
48.9141 129.891 li
49.0698 130.063 li
49.3359 130.141 li
49.5229 130.359 li
49.8521 130.578 li
49.8672 130.594 li
50.1328 130.688 li
50.1328 130.766 li
50.2031 130.828 50.2622 130.906 50.3052 131 cv
50.4141 131.063 li
50.4922 131.219 li
50.6641 131.219 li
50.6641 131.5 li
50.7578 131.594 li
50.7891 131.688 li
50.9302 131.719 li
50.9492 131.938 51.0122 132.121 51.1172 132.266 cv
51.1172 132.359 li
51.2578 132.5 li
51.2271 132.734 li
51.3359 132.984 li
51.3828 133.281 li
51.4771 133.297 li
cp
.258824 .258824 .258824 rgb
f
56.6211 132.438 mo
56.605 132.359 li
56.543 132.297 56.5039 132.229 56.4961 132.156 cv
56.5269 132.078 li
56.4019 131.813 li
56.4341 131.547 li
56.3711 131.484 li
56.2539 131.391 56.1909 131.32 56.1841 131.266 cv
56.0981 131.227 56.0591 131.133 56.0591 130.984 cv
55.9648 130.969 li
55.8091 130.688 li
55.6841 130.594 li
55.3872 130.469 li
55.2769 130.453 li
55.2148 130.453 55.1719 130.434 55.1519 130.391 cv
54.8872 130.703 li
54.6992 131.094 li
54.4019 131.25 li
54.355 131.406 li
54.2148 131.469 li
54.168 131.828 li
53.9961 131.922 li
53.9648 132.047 53.9492 132.168 53.9492 132.281 cv
53.7148 132.484 li
53.793 132.531 li
53.793 132.648 53.75 132.746 53.668 132.828 cv
53.6372 132.914 53.5938 133.008 53.543 133.109 cv
53.543 133.219 li
53.5122 133.281 li
53.5269 133.438 li
53.3711 133.828 li
53.4019 133.891 li
53.4019 134.281 li
53.3398 134.484 li
53.355 134.672 li
53.48 134.859 li
53.6841 134.922 li
53.7461 134.953 li
53.855 134.906 li
54.2148 134.922 li
54.2769 134.781 li
54.3398 134.781 li
54.3911 134.781 54.4219 134.797 54.4341 134.828 cv
54.5591 134.781 li
54.668 134.828 li
54.855 134.703 li
54.8872 134.656 li
55.0122 134.641 li
55.0742 134.539 55.2231 134.434 55.4648 134.328 cv
55.4961 134.25 li
55.7769 134.063 li
55.9341 133.828 li
56.1519 133.719 li
56.168 133.656 li
56.23 133.5 li
56.23 133.313 li
56.4019 133.172 li
56.4648 133.078 li
56.5269 133 li
56.4961 132.887 56.48 132.805 56.48 132.75 cv
56.48 132.668 56.5039 132.578 56.5591 132.484 cv
56.6211 132.438 li
cp
57.543 132.094 mo
57.4492 132.344 li
57.4492 132.594 57.438 132.789 57.418 132.922 cv
57.3242 133.063 li
57.3242 133.219 li
57.2622 133.313 li
57.2148 133.516 li
57.0591 133.672 li
56.9648 134.016 li
56.855 134.063 li
56.793 134.219 li
56.6372 134.313 li
56.5122 134.547 li
56.355 134.641 li
56.3398 134.797 li
56.0742 134.906 li
55.9492 135.074 55.7969 135.18 55.6211 135.219 cv
55.5591 135.234 li
55.4341 135.43 55.2622 135.531 55.043 135.531 cv
54.9492 135.582 54.8438 135.609 54.73 135.609 cv
54.5898 135.719 li
54.4492 135.75 li
54.2622 135.891 li
54.0898 135.875 li
53.8872 135.938 li
53.6519 135.844 li
53.043 135.797 li
52.8398 135.469 li
52.5269 135.156 li
52.605 134.922 li
52.3872 134.453 li
52.48 134.266 li
52.418 133.938 li
52.48 133.719 li
52.4688 133.594 52.4648 133.5 52.4648 133.438 cv
52.4648 133.262 52.5122 133.133 52.605 133.047 cv
52.605 132.953 52.6602 132.805 52.7769 132.594 cv
52.855 132.594 li
52.8242 132.484 li
52.8711 132.297 li
52.8711 132.078 li
52.9409 131.996 52.9839 131.945 52.9961 131.922 cv
52.9492 131.719 li
52.9492 131.672 li
53.0122 131.539 53.043 131.402 53.043 131.266 cv
53.3398 130.859 li
53.3398 130.859 53.3481 130.852 53.3711 130.828 cv
53.3911 130.809 53.4102 130.789 53.4341 130.766 cv
53.418 130.719 li
53.48 130.719 li
53.6841 130.469 li
53.6992 130.156 li
54.0591 130.031 li
54.1841 129.949 54.2661 129.809 54.3091 129.609 cv
54.48 129.609 li
54.582 129.547 54.6758 129.516 54.7622 129.516 cv
54.8438 129.516 54.9258 129.539 55.0122 129.578 cv
55.1519 129.594 li
55.5269 129.453 li
55.7148 129.641 li
55.8711 129.734 li
55.98 129.734 li
56.1992 129.844 li
56.3091 129.844 li
56.4341 129.961 56.5742 130.117 56.73 130.313 cv
56.7622 130.375 li
56.855 130.438 li
57.1519 130.813 li
57.418 131.469 li
57.418 131.609 li
57.543 132.094 li
cp
f
67.4609 129.719 mo
67.3979 129.984 li
67.4302 130.125 li
67.2578 130.672 li
67.2271 130.859 li
67.0391 131.078 li
66.9609 131.344 li
66.8052 131.563 li
66.5859 132.063 li
66.3198 132.5 li
65.9141 133.109 li
65.8521 133.281 li
65.6328 133.672 li
65.3979 134.156 li
64.9771 134.906 li
64.8979 135.25 li
64.6641 135.578 li
64.2422 135.438 li
64.0078 135.297 li
63.7891 134.641 li
63.5078 134.156 li
63.5078 134.016 li
63.3359 133.625 li
63.2729 133.547 li
62.6802 132.313 li
62.4922 132.016 li
62.3521 132.25 li
62.1172 132.438 li
61.8052 132.891 li
61.5698 133.125 li
61.4448 133.484 li
61.1328 133.859 li
61.1172 133.984 li
60.8979 134.422 li
60.8979 134.641 li
60.7578 134.828 li
60.7422 135.031 li
60.6021 135.063 li
60.3052 135.391 li
60.3521 135.359 li
60.2578 135.41 60.1328 135.445 59.9771 135.469 cv
59.8828 135.359 li
59.6641 135.281 li
59.6641 135.125 li
59.5859 135.016 li
59.5078 134.641 li
59.3828 134.375 li
59.3828 134.141 li
59.1641 133.547 li
59.1172 133.156 li
58.9771 133.016 li
58.9922 132.828 li
58.8521 132.484 li
58.8521 132.359 li
58.7422 132.063 li
58.5552 131.797 li
58.5859 131.484 li
58.5698 131.391 li
58.4141 131.016 li
58.3828 130.797 li
58.3052 130.656 li
58.2422 130.563 58.1992 130.469 58.1802 130.375 cv
57.9302 129.781 li
58.1328 129.516 li
58.1841 129.422 58.2969 129.359 58.4771 129.328 cv
58.7729 129.281 li
58.8672 129.422 li
59.0552 129.516 li
59.1802 129.766 li
59.2891 129.859 li
59.2578 130.078 li
59.3052 130.219 li
59.2578 130.344 li
59.3979 130.578 li
59.3828 130.781 li
59.5552 131.406 li
59.5229 131.563 li
59.6172 131.938 li
59.8052 132.391 li
59.8979 132.922 li
60.0391 133.094 li
60.0391 133.422 li
60.1328 133.719 li
60.1479 133.828 li
60.3359 133.703 li
60.6641 133.188 li
60.7578 132.953 li
60.8672 132.75 li
60.8672 132.656 60.8872 132.59 60.9302 132.547 cv
61.0078 132.547 li
61.0552 132.297 li
61.2109 132.266 li
61.23 132.195 61.2729 132.137 61.3359 132.094 cv
61.3359 132.078 li
61.3359 132.016 61.3589 131.961 61.4141 131.906 cv
61.3979 131.813 li
61.4609 131.781 li
61.4448 131.688 li
61.5269 131.543 61.6211 131.434 61.7271 131.359 cv
61.7271 131.078 li
61.9302 130.969 li
62.0078 130.891 li
61.9648 130.797 61.9448 130.699 61.9448 130.594 cv
61.9448 130.418 62.0161 130.25 62.1641 130.094 cv
62.2461 130.063 62.3521 130.047 62.4771 130.047 cv
62.5469 130.047 62.6021 130.055 62.6328 130.063 cv
62.8979 130.297 li
63.0391 130.5 li
63.1328 130.844 li
63.2578 131.063 li
63.2271 131.219 li
63.3198 131.531 li
63.3198 131.656 li
63.5698 132.078 li
63.5698 132.109 li
63.6172 132.156 li
63.8979 132.828 li
63.9141 133.016 li
64.0552 133.156 li
64.3672 133.891 li
64.4448 133.766 li
64.6948 133.25 li
64.8521 133.125 li
64.9609 132.828 li
65.1021 132.75 li
65.1021 132.547 li
65.1519 132.508 65.2271 132.461 65.3198 132.406 cv
65.3828 132.375 65.4141 132.355 65.4141 132.344 cv
65.3979 132.047 li
65.5698 131.875 li
65.6328 131.828 li
65.8521 131.484 li
65.8521 131.438 li
65.8589 131.336 65.918 131.219 66.0229 131.094 cv
65.9922 130.938 li
66.2578 130.625 li
66.3828 130.328 li
66.2769 130.047 66.2271 129.809 66.2271 129.609 cv
66.2271 129.32 66.3711 129.152 66.6641 129.109 cv
67.0552 129.234 li
67.1021 129.141 li
67.1948 129.266 li
67.3359 129.375 li
67.3052 129.516 li
67.4609 129.719 li
cp
f
71.105 130.188 mo
71.105 130.168 71.0898 130.117 71.0591 130.031 cv
70.9961 130.016 li
70.9648 130.031 li
70.9531 130.031 70.9341 130.031 70.9019 130.031 cv
70.8911 130.043 70.875 130.047 70.855 130.047 cv
70.8438 130.047 70.8281 130.043 70.8091 130.031 cv
70.7852 130.031 70.77 130.031 70.7622 130.031 cv
70.6211 130.125 li
70.4961 130.141 li
70.4341 130.172 li
70.1992 130.469 li
70.043 130.594 li
69.8242 130.984 li
69.6841 131.063 li
69.6602 131.219 69.5981 131.355 69.4961 131.469 cv
69.4341 131.563 li
69.5352 131.5 69.6558 131.469 69.793 131.469 cv
69.8872 131.422 li
69.9341 131.297 li
70.1211 131.313 li
70.23 131.141 li
70.3242 131.141 li
70.48 131.203 li
70.543 131 li
70.6372 131 li
70.6372 130.844 li
70.8242 130.797 li
70.8711 130.75 li
70.9019 130.625 li
71.0742 130.359 li
71.0938 130.32 71.105 130.262 71.105 130.188 cv
71.105 130.188 li
cp
72.4961 134.234 mo
72.4961 134.34 72.4102 134.477 72.2461 134.641 cv
72.1909 134.797 72.1211 134.922 72.0269 135.016 cv
71.9492 135.031 li
71.793 135.297 li
71.543 135.328 li
71.2769 135.5 li
71.1372 135.75 li
70.98 135.719 li
70.875 135.77 70.793 135.801 70.73 135.813 cv
70.6372 135.938 li
70.6128 135.926 70.5742 135.922 70.5122 135.922 cv
70.395 135.922 70.2808 136.004 70.168 136.172 cv
69.9648 136 li
69.9341 136.008 69.8789 136.016 69.8091 136.016 cv
69.6841 136.016 69.5781 136 69.4961 135.969 cv
69.2622 135.969 li
69.1519 135.891 li
68.7852 135.836 68.563 135.703 68.48 135.484 cv
68.48 135.438 li
68.3091 135.359 li
68.2148 135.125 li
68.0591 135.016 li
68.0591 134.797 li
67.8872 134.188 li
67.918 133.688 li
67.9648 133.453 li
67.9648 133.156 li
68.043 132.938 li
68.0269 132.844 li
68.1211 132.672 li
68.0898 132.703 li
68.0898 132.621 68.1128 132.531 68.168 132.438 cv
68.168 132.359 li
68.1211 132.031 li
68.1211 131.875 68.1909 131.734 68.3398 131.609 cv
68.3398 131.59 68.3398 131.563 68.3398 131.531 cv
68.3398 131.492 68.3242 131.414 68.293 131.297 cv
68.2622 131.184 68.2461 131.102 68.2461 131.047 cv
68.2461 130.934 68.2769 130.82 68.3398 130.703 cv
68.4102 130.809 68.5161 130.859 68.6519 130.859 cv
68.6992 130.859 li
68.7188 130.828 68.7622 130.789 68.8242 130.734 cv
68.895 130.508 69 130.313 69.1372 130.156 cv
69.1841 130.094 li
69.1841 130.063 69.2148 129.961 69.2769 129.781 cv
69.3872 129.781 li
69.418 129.703 li
69.5269 129.672 li
69.5659 129.602 69.5938 129.559 69.605 129.547 cv
69.625 129.527 69.73 129.469 69.918 129.375 cv
69.9492 129.305 70.0039 129.242 70.0898 129.188 cv
70.1211 129.168 70.168 129.148 70.23 129.125 cv
70.2769 129.047 li
70.5269 128.965 70.688 128.922 70.7622 128.922 cv
70.832 128.922 70.9019 128.945 70.9648 128.984 cv
71.0269 128.969 li
71.1372 129.016 li
71.25 129.102 71.3589 129.172 71.4648 129.234 cv
71.6992 129.406 li
71.6992 129.469 li
71.918 129.637 72.0269 129.875 72.0269 130.188 cv
71.98 130.328 li
72.0269 130.781 li
71.9019 130.859 li
71.7622 131.234 li
71.4961 131.531 li
71.48 131.75 li
71.1758 131.969 70.9019 132.141 70.6519 132.266 cv
70.5659 132.402 70.438 132.469 70.2622 132.469 cv
70.23 132.469 li
69.9492 132.625 li
69.73 132.625 li
69.4019 132.766 li
69.1519 132.641 li
69.1211 132.641 li
69.0981 132.715 69.0781 132.828 69.0591 132.984 cv
68.9492 133.063 li
68.9341 133.234 li
68.855 133.469 li
68.875 133.699 68.8872 133.844 68.8872 133.906 cv
68.8398 133.953 li
68.8398 134.07 68.832 134.156 68.8242 134.219 cv
68.8242 134.23 68.8159 134.242 68.8091 134.25 cv
68.8091 134.273 68.8091 134.289 68.8091 134.297 cv
68.8091 134.371 68.8438 134.434 68.918 134.484 cv
68.9492 134.59 68.9961 134.656 69.0591 134.688 cv
69.1519 134.766 li
69.4648 134.859 li
69.4648 134.906 li
69.5742 134.922 li
70.0591 134.953 li
70.3398 134.906 li
70.48 134.813 li
70.5591 134.781 li
70.6992 134.578 li
70.7622 134.563 li
71.1211 134.453 li
71.1519 134.391 71.2148 134.336 71.3091 134.281 cv
71.3398 134.219 li
71.5269 134.18 71.6372 134.078 71.668 133.922 cv
71.793 133.789 71.957 133.719 72.168 133.719 cv
72.23 133.719 li
72.4058 133.93 72.4961 134.102 72.4961 134.234 cv
72.4961 134.234 li
cp
f
78.6802 130.172 mo
78.5698 130.625 li
78.0552 130.703 li
77.7729 130.875 li
77.5859 130.797 li
77.3828 130.906 li
77.1802 131 li
77.0391 131.094 li
77.0391 131.141 li
76.7422 131.281 li
76.5552 131.531 li
76.4448 131.531 li
76.2969 131.699 76.1948 131.797 76.1328 131.828 cv
75.9302 132.156 li
75.8672 132.188 li
75.8359 132.262 75.8052 132.371 75.7729 132.516 cv
75.5698 132.594 li
75.4922 132.75 li
75.3672 132.891 li
75.3521 133.109 li
75.2271 133.156 li
75.2271 133.359 li
75.1948 133.406 li
75.2148 133.449 75.2461 133.5 75.2891 133.563 cv
75.0859 133.641 li
75.0552 133.828 li
74.9141 134.063 li
74.9922 134.234 li
74.8198 134.5 li
74.8281 134.594 74.8359 134.656 74.8359 134.688 cv
74.8359 134.699 74.8359 134.719 74.8359 134.75 cv
74.8359 134.773 74.8359 134.793 74.8359 134.813 cv
74.8521 134.938 li
75.1021 135.188 li
74.9141 135.516 li
74.7422 135.641 li
74.3521 135.844 li
73.8359 135.625 li
73.8359 135.313 li
73.7729 135.172 li
73.8198 134.969 li
73.7969 134.824 73.7891 134.715 73.7891 134.641 cv
73.7891 134.609 73.793 134.57 73.8052 134.516 cv
73.8052 134.477 73.8052 134.445 73.8052 134.422 cv
73.7891 134.281 li
73.7271 134.219 73.6948 134.148 73.6948 134.063 cv
73.6948 133.992 73.7271 133.906 73.7891 133.813 cv
73.7891 133.762 73.7769 133.621 73.7578 133.391 cv
73.8052 133.344 li
73.7578 133.156 li
73.7891 133 li
73.7578 132.891 li
73.8052 132.578 li
73.7271 132.438 li
73.7729 132.281 li
73.7271 132.094 li
73.7339 132.043 73.7422 131.969 73.7422 131.875 cv
73.7422 131.742 73.7188 131.648 73.6802 131.594 cv
73.7422 131.516 li
73.6802 131.266 li
73.5552 131.078 li
73.6172 130.859 li
73.5698 130.766 li
73.5078 130.438 li
73.5078 130.328 li
73.4648 130.266 73.4448 130.195 73.4448 130.109 cv
73.4448 129.922 73.6479 129.766 74.0552 129.641 cv
74.4141 129.703 li
74.4771 129.969 li
74.6172 130.156 li
74.5698 130.531 li
74.6021 130.719 74.6372 130.922 74.6802 131.141 cv
74.7109 131.375 li
74.7188 131.398 74.73 131.449 74.7422 131.531 cv
74.7422 131.586 74.7188 131.641 74.6802 131.703 cv
74.7109 131.984 li
74.6948 132.297 li
74.6328 132.438 li
74.6802 132.484 li
74.6948 132.625 li
74.7578 132.563 74.793 132.496 74.8052 132.422 cv
74.8521 132.219 li
74.8828 132.156 74.9219 132.109 74.9771 132.078 cv
75.0391 131.875 li
75.2271 131.766 li
75.2578 131.594 li
75.4141 131.422 li
75.5229 131.219 li
75.6479 131.086 75.7661 131 75.8828 130.969 cv
75.8979 130.922 li
76.0391 130.734 li
76.1802 130.703 li
76.2109 130.656 li
76.2729 130.578 li
76.4302 130.484 li
76.5078 130.391 li
76.5859 130.406 li
76.7109 130.344 li
76.7578 130.266 li
76.9302 130.188 li
77.1641 130.031 li
77.5078 129.922 li
77.6328 129.902 77.6992 129.891 77.7109 129.891 cv
77.7109 129.902 77.7109 129.906 77.7109 129.906 cv
77.6992 129.906 77.6948 129.914 77.6948 129.922 cv
77.7109 129.922 li
77.75 129.922 77.8091 129.902 77.8828 129.859 cv
77.9219 129.82 77.9839 129.797 78.0698 129.797 cv
78.1089 129.797 78.1802 129.809 78.2729 129.828 cv
78.5122 129.84 78.6479 129.953 78.6802 130.172 cv
78.6802 130.172 li
cp
f
50.3008 142.766 mo
50.2378 142.656 li
50.1289 142.641 li
49.6909 142.281 li
49.4102 142.25 li
49.1909 142.25 li
49.1602 142.219 li
49.0508 142.25 li
48.9258 142.188 li
48.5659 142.188 li
48.5981 142.25 li
48.2852 142.359 li
48.2231 142.422 li
48.1909 142.438 li
48.0122 142.586 47.895 142.703 47.832 142.797 cv
47.7378 143.125 li
47.6758 143.25 li
47.8159 143.453 li
47.582 143.625 li
47.6128 143.688 li
47.5078 143.867 47.457 144.039 47.457 144.203 cv
47.3481 144.344 li
47.3481 144.594 li
47.2378 144.719 li
47.207 144.844 li
47.1602 144.875 li
47.1602 145.078 li
47.1289 145.141 li
47.1289 145.258 47.1172 145.344 47.0981 145.406 cv
47.1289 145.484 li
46.9878 145.75 li
47.0508 145.828 li
46.957 145.969 li
47.0508 146.234 li
46.895 146.422 li
46.9258 146.688 li
46.9258 146.734 li
46.9878 146.766 li
47.0508 146.75 li
47.1021 146.711 47.1479 146.668 47.1909 146.625 cv
47.1602 146.516 li
47.3628 146.484 li
47.395 146.391 li
48.2231 145.719 li
48.3159 145.688 li
48.4102 145.453 li
48.4609 145.434 48.5391 145.398 48.645 145.344 cv
48.7378 145.109 li
48.8481 145.109 li
48.8008 144.875 li
49.0039 144.844 li
49.0122 144.813 49.0391 144.773 49.082 144.719 cv
49.1211 144.656 49.168 144.602 49.2231 144.547 cv
49.9409 143.594 li
50.0508 143.391 li
50.0352 143.328 li
50.1289 143.188 li
50.1602 143.031 li
50.2852 142.922 li
50.3008 142.766 li
cp
51.6289 142.031 mo
51.4878 142.219 li
51.5981 142.547 li
51.4258 142.766 li
51.3481 143.063 li
51.3008 143.125 li
51.332 143.188 li
51.332 143.324 51.3008 143.422 51.2378 143.484 cv
51.207 143.531 li
51.207 143.594 li
51.2378 143.656 51.2539 143.715 51.2539 143.766 cv
51.2539 143.82 51.2461 143.852 51.2378 143.859 cv
51.2539 143.922 li
51.1909 144.078 li
51.2378 144.25 li
51.1289 144.359 li
51.1602 144.547 li
51.2539 144.656 li
51.1289 144.766 li
51.1289 144.984 li
51.0352 145.219 li
51.0981 145.438 li
51.02 145.547 li
51.1602 145.641 li
50.957 145.969 li
50.9409 146.016 li
51.082 146.031 li
50.9878 146.359 li
50.9878 146.422 li
50.9878 146.484 50.98 146.531 50.9731 146.563 cv
50.9878 146.609 li
51.207 146.641 li
51.395 146.922 li
51.3008 147.125 li
51.4409 147.109 li
51.5039 147.227 51.5391 147.324 51.5508 147.406 cv
51.332 147.625 li
51.27 147.688 51.1758 147.75 51.0508 147.813 cv
50.8159 147.938 li
50.7539 147.875 li
50.6128 147.953 li
50.1758 147.453 li
50.1758 147.219 li
50.1128 147.031 50.082 146.855 50.082 146.688 cv
50.082 146.609 li
50.0039 145.781 li
50.1128 145.203 li
50.0352 144.859 li
49.8008 145.25 li
49.6758 145.609 li
49.5508 145.672 li
49.3628 145.984 li
49.0039 146.297 li
48.9102 146.469 li
48.5981 146.734 li
48.5352 146.922 li
48.082 147.203 li
47.6128 147.734 li
47.3481 147.781 li
47.1602 147.922 li
46.9302 147.91 46.7539 147.82 46.6289 147.656 cv
46.2109 147.461 45.9922 147.168 45.9731 146.781 cv
46.0508 146.734 li
46.0352 146.656 li
46.02 146.484 li
45.9258 146.297 li
46.02 146.109 li
46.0508 145.813 li
46.145 145.344 li
46.145 145.344 46.145 145.328 46.145 145.297 cv
46.1328 145.277 46.1289 145.258 46.1289 145.234 cv
46.1289 145.203 46.1372 145.156 46.1602 145.094 cv
46.1479 145.086 46.145 145.047 46.145 144.984 cv
46.145 144.922 46.168 144.82 46.2231 144.672 cv
46.3159 144.625 li
46.2622 144.574 46.2378 144.523 46.2378 144.469 cv
46.2378 144.43 46.2422 144.402 46.2539 144.391 cv
46.2422 144.359 46.2378 144.324 46.2378 144.281 cv
46.2378 144.18 46.293 144.094 46.4102 144.031 cv
46.4409 143.938 46.4922 143.844 46.5659 143.75 cv
46.4878 143.641 li
46.6602 143.438 li
46.6602 143.375 li
46.6602 143.199 46.7231 143.039 46.8481 142.891 cv
46.832 142.641 li
46.8789 142.578 li
46.8789 142.57 46.8789 142.555 46.8789 142.531 cv
46.8672 142.523 46.8628 142.512 46.8628 142.5 cv
46.8628 142.438 46.8828 142.391 46.9258 142.359 cv
46.9258 142.266 li
46.9648 142.172 47.0659 142.039 47.2231 141.859 cv
47.3789 141.672 47.4922 141.508 47.5659 141.359 cv
47.645 141.438 li
47.8628 141.328 li
48.332 141.125 li
49.4102 141.172 li
49.4102 141.281 li
49.7378 141.344 li
49.957 141.344 50.0981 141.418 50.1602 141.563 cv
50.1602 141.531 50.1641 141.496 50.1758 141.453 cv
50.1758 141.434 50.1758 141.418 50.1758 141.406 cv
50.4731 141.672 li
50.7378 141.719 li
51.2378 141.594 li
51.4258 141.953 li
51.6289 142.031 li
cp
f
65.105 146.047 mo
65.0508 146.184 64.9878 146.281 64.918 146.344 cv
64.8872 146.449 64.8438 146.523 64.793 146.563 cv
64.7378 146.656 64.6841 146.727 64.6211 146.766 cv
64.5591 146.844 li
64.5269 146.906 64.48 146.938 64.418 146.938 cv
64.3398 147.078 li
64.2461 147.078 li
64.168 147.203 li
64.0591 147.234 li
63.98 147.344 li
63.9019 147.391 li
63.7661 147.391 63.6519 147.434 63.5591 147.516 cv
63.4341 147.57 63.3091 147.594 63.1841 147.594 cv
63.0469 147.594 62.918 147.563 62.793 147.5 cv
62.6372 147.492 62.5591 147.465 62.5591 147.422 cv
62.3711 147.391 li
62.3242 147.359 li
62.2461 147.188 li
62.0898 147.063 li
61.9839 146.938 61.9258 146.824 61.918 146.719 cv
61.855 146.625 61.793 146.449 61.73 146.188 cv
61.5898 145.969 li
61.5898 145.844 li
61.48 145.422 li
61.4961 145.25 li
61.418 144.813 li
61.4648 144.469 li
61.3872 144.375 li
61.2461 144.719 li
61.0659 144.918 60.9648 145.039 60.9341 145.078 cv
60.9019 145.121 60.8589 145.141 60.8091 145.141 cv
60.7969 145.141 60.7808 145.137 60.7622 145.125 cv
60.668 145.281 li
60.668 145.293 60.668 145.313 60.668 145.344 cv
60.668 145.398 60.6992 145.43 60.7622 145.438 cv
60.7378 145.461 60.6909 145.523 60.6211 145.625 cv
60.5781 145.711 60.5469 145.762 60.5269 145.781 cv
60.48 145.719 li
60.4492 145.906 li
60.3242 146 60.2378 146.141 60.1992 146.328 cv
60.105 146.453 59.957 146.625 59.7622 146.844 cv
59.5898 147.047 li
59.5352 147.047 59.5122 147.059 59.5122 147.078 cv
59.5122 147.094 li
59.457 147.23 59.3589 147.336 59.2148 147.406 cv
59.043 147.625 li
58.9492 147.625 li
58.6211 147.75 li
58.3398 147.727 58.168 147.605 58.105 147.375 cv
58.0898 147.234 li
57.9961 147.047 li
57.9961 146.891 li
57.8872 146.484 li
57.8872 146.359 li
57.8091 146.219 li
57.855 145.781 li
57.8438 145.742 57.8398 145.68 57.8398 145.594 cv
57.8398 145.523 57.8438 145.469 57.855 145.438 cv
57.8398 145.344 li
57.8398 145.297 li
57.7769 145.141 li
57.8872 144.875 li
57.8628 144.805 57.8398 144.684 57.8091 144.516 cv
57.8398 144.391 li
57.8872 143.984 li
57.7769 143.688 li
57.8091 143.453 li
57.7622 143.328 li
57.75 143.297 57.7188 143.211 57.668 143.063 cv
57.5591 143.109 li
57.3872 143.328 li
57.2148 143.484 li
56.8872 143.906 li
56.855 144.063 li
56.6211 144.313 li
56.5122 144.516 li
56.418 144.625 li
56.3872 144.836 56.2808 144.98 56.105 145.063 cv
56.0898 145.25 li
56.0352 145.313 55.98 145.391 55.918 145.484 cv
55.855 145.57 55.813 145.621 55.793 145.641 cv
55.77 145.652 55.7339 145.684 55.6841 145.734 cv
55.5122 145.969 li
55.5122 146.125 55.4492 146.234 55.3242 146.297 cv
55.3242 146.391 li
55.27 146.465 55.1992 146.539 55.105 146.609 cv
55.0898 146.578 li
55.043 146.781 li
54.9688 146.781 54.9019 146.871 54.8398 147.047 cv
54.793 147.094 li
54.7808 147.25 54.7031 147.367 54.5591 147.438 cv
54.355 147.625 li
54.207 147.699 54.1089 147.734 54.0591 147.734 cv
53.8159 147.734 53.6602 147.531 53.5898 147.125 cv
53.5269 146.828 li
53.5269 146.809 53.5269 146.777 53.5269 146.734 cv
53.5269 146.672 53.5352 146.609 53.5591 146.547 cv
53.4961 146.281 li
53.5269 146.047 li
53.4961 145.828 li
53.5161 145.633 53.5469 145.512 53.5898 145.469 cv
53.5591 145.273 53.543 145.156 53.543 145.125 cv
53.543 144.875 li
53.582 144.813 53.6289 144.73 53.6841 144.625 cv
53.605 144.547 li
53.582 144.465 53.5742 144.418 53.5742 144.406 cv
53.5742 144.344 53.6289 144.234 53.7461 144.078 cv
53.6519 143.813 li
53.6992 143.641 li
53.6211 143.234 li
53.6519 143.047 li
53.5742 142.734 li
53.5898 142.516 li
53.4648 142.266 li
53.6519 141.902 53.8481 141.719 54.0591 141.719 cv
54.1719 141.719 54.2808 141.766 54.3872 141.859 cv
54.418 142 li
54.5742 142.086 54.6519 142.215 54.6519 142.391 cv
54.6519 142.359 54.6372 142.453 54.605 142.672 cv
54.5591 142.656 li
54.6841 142.906 li
54.605 143.016 li
54.5898 143.063 li
54.668 143.719 li
54.6372 144.266 li
54.605 144.359 li
54.6519 144.578 li
54.6841 144.621 54.6992 144.668 54.6992 144.719 cv
54.6992 144.793 54.6602 144.867 54.5898 144.938 cv
54.5898 145.074 54.563 145.184 54.5122 145.266 cv
54.5591 145.688 li
54.5591 145.859 li
54.5742 145.828 li
54.6519 145.703 li
54.855 145.344 li
54.8872 145.344 li
54.9492 145.344 55.0122 145.258 55.0742 145.078 cv
55.168 144.813 li
55.188 144.762 55.2622 144.672 55.3872 144.547 cv
55.4341 144.297 li
55.605 144.047 li
55.668 143.859 li
55.707 143.828 55.7539 143.793 55.8091 143.75 cv
55.8091 143.719 li
55.8398 143.68 55.9409 143.578 56.1211 143.422 cv
56.2148 143.375 li
56.23 143.234 li
56.3091 143.188 li
56.3481 143 56.4648 142.871 56.6519 142.797 cv
56.605 142.766 li
56.6519 142.734 li
56.6411 142.727 56.6372 142.711 56.6372 142.688 cv
56.6372 142.668 56.645 142.641 56.668 142.609 cv
56.8872 142.516 li
56.9341 142.281 li
57.0898 142.281 li
57.0898 142.273 57.0981 142.242 57.1211 142.188 cv
57.4019 141.969 li
57.5269 141.93 57.6128 141.906 57.668 141.906 cv
57.7808 141.906 57.9341 141.938 58.1211 142 cv
58.2622 142.203 li
58.3242 142.234 li
58.3872 142.391 li
58.5898 142.656 li
58.5898 142.844 li
58.7148 142.984 li
58.7148 143.188 li
58.8159 143.418 58.8711 143.609 58.8711 143.766 cv
58.8242 143.938 li
58.918 144.172 li
58.7622 144.328 li
58.8091 144.641 li
58.7769 144.797 li
58.7661 144.891 58.7622 144.961 58.7622 145 cv
58.7622 145.055 58.7808 145.148 58.8242 145.281 cv
58.7769 145.438 li
58.8242 145.625 li
58.7769 145.672 li
58.7969 145.809 58.8281 146.027 58.8711 146.328 cv
58.855 146.391 li
59.3091 145.891 li
59.4492 145.625 li
59.48 145.574 59.5352 145.484 59.6211 145.359 cv
59.6211 145.344 li
59.6602 145.188 59.7231 145.086 59.8091 145.031 cv
59.8091 144.969 59.855 144.898 59.9492 144.813 cv
60.0591 144.75 li
60.0981 144.594 60.1992 144.465 60.355 144.359 cv
60.418 144.156 li
60.543 144 li
60.6841 143.859 li
60.7661 143.789 60.832 143.684 60.8872 143.547 cv
60.9961 143.375 li
61.0591 143.172 li
61.1992 143.078 li
61.355 142.891 li
61.5122 142.547 li
61.48 142.547 61.4648 142.539 61.4648 142.516 cv
61.4648 142.516 61.4688 142.5 61.48 142.469 cv
61.5898 142.391 li
61.6992 142.156 li
61.855 142.105 61.9409 142.078 61.9648 142.078 cv
61.9648 142.078 61.98 142.09 62.0122 142.109 cv
62.2769 142.109 li
62.4961 142.219 li
62.6841 142.438 li
62.73 142.641 li
62.7148 142.797 li
62.6519 142.844 li
62.4961 143.141 li
62.4341 143.469 li
62.4839 143.512 62.5122 143.594 62.5122 143.719 cv
62.4688 143.762 62.4492 143.82 62.4492 143.891 cv
62.4019 144 li
62.4102 144.055 62.418 144.133 62.418 144.234 cv
62.418 144.32 62.418 144.375 62.418 144.406 cv
62.355 144.484 li
62.418 144.578 li
62.3091 144.703 li
62.3711 144.703 62.4019 144.766 62.4019 144.891 cv
62.4102 144.945 62.418 144.98 62.418 145 cv
62.418 145.031 62.4102 145.063 62.4019 145.094 cv
62.4102 145.188 62.418 145.277 62.418 145.359 cv
62.418 145.391 li
62.418 145.414 62.48 145.605 62.605 145.969 cv
62.6372 146.109 li
62.793 146.281 li
62.8711 146.469 li
62.9492 146.516 li
63.0122 146.594 li
63.0898 146.609 li
63.2148 146.641 li
63.2769 146.625 li
63.3242 146.625 li
63.418 146.625 63.5269 146.59 63.6519 146.516 cv
63.6909 146.422 63.793 146.324 63.9492 146.219 cv
63.957 146.18 64.0161 146.09 64.1211 145.953 cv
64.355 145.781 li
64.4341 145.609 li
64.5161 145.57 64.5981 145.547 64.6841 145.547 cv
64.7852 145.547 64.895 145.574 65.0122 145.625 cv
65.0742 145.719 65.105 145.859 65.105 146.047 cv
65.105 146.047 li
cp
f
70.2539 145.844 mo
70.2378 145.766 li
70.2539 145.719 li
70.1758 145.469 li
70.2231 145.344 li
70.1758 145.219 li
70.1602 145.078 li
70.0508 144.859 li
69.9878 144.703 li
69.7852 144.344 li
69.6128 144.203 li
69.5039 143.969 li
69.3789 143.906 li
69.1602 143.609 li
68.9409 143.641 li
68.77 143.422 li
68.6289 143.453 li
68.5352 143.266 li
68.4731 143.25 li
68.2852 143.25 li
68.145 143.328 li
68.0352 143.203 li
67.895 143.234 li
67.832 143.141 li
67.582 143.094 li
67.5981 143.266 li
67.5659 143.531 li
67.6289 143.688 li
67.8159 143.859 li
67.6602 144.203 li
67.6758 144.406 li
67.6128 144.828 li
67.6328 145.008 67.6841 145.156 67.77 145.281 cv
67.7231 145.438 li
67.73 145.449 67.7378 145.461 67.7378 145.469 cv
67.7378 145.492 67.6992 145.531 67.6289 145.594 cv
67.7231 145.719 li
67.645 145.891 li
67.6289 146.063 li
67.6602 146.266 li
67.645 146.438 li
67.9409 146.438 li
67.98 146.43 68.0352 146.422 68.0981 146.422 cv
68.1802 146.422 68.2539 146.449 68.3159 146.5 cv
68.3242 146.5 68.3481 146.496 68.3789 146.484 cv
68.3979 146.484 68.4141 146.484 68.4258 146.484 cv
68.4448 146.484 68.4922 146.496 68.5659 146.516 cv
68.6289 146.484 68.6802 146.469 68.7231 146.469 cv
68.793 146.469 68.8672 146.492 68.9409 146.531 cv
69.0659 146.531 li
69.1758 146.563 li
69.457 146.469 li
69.6758 146.609 li
69.7578 146.641 69.793 146.656 69.7852 146.656 cv
70.0508 146.391 li
70.0659 146.188 li
70.145 146.156 li
70.0981 146.047 li
70.1909 145.938 li
70.2539 145.844 li
cp
71.3008 145.625 mo
71.1289 146.047 li
71.2539 146.328 li
71.1909 146.422 li
71.1289 146.641 li
71.02 146.828 li
70.9731 146.859 li
70.9409 147.125 li
70.6909 147.156 li
70.5552 147.281 70.418 147.383 70.2852 147.453 cv
70.1909 147.438 li
69.9878 147.5 li
69.8628 147.516 li
69.5981 147.625 li
69.2852 147.484 li
69.2378 147.453 li
69.0039 147.469 li
69.0659 147.5 li
68.6758 147.438 li
68.3159 147.516 li
68.1758 147.391 li
67.895 147.422 li
67.77 147.344 li
67.7578 147.344 67.7231 147.352 67.6602 147.359 cv
67.6602 147.438 li
67.6602 147.523 67.6479 147.605 67.6289 147.688 cv
67.6602 147.953 li
67.5508 148.094 li
67.5698 148.301 67.582 148.457 67.582 148.563 cv
67.5352 148.906 li
67.5981 149.438 li
67.4878 149.578 li
67.5352 149.797 li
67.4878 149.922 li
67.582 149.969 li
67.582 150.188 li
67.6021 150.238 67.6128 150.281 67.6128 150.313 cv
67.6128 150.395 67.5591 150.461 67.457 150.516 cv
67.5039 150.719 li
67.4409 150.828 li
67.4102 151.391 li
67.3789 152.035 67.23 152.359 66.9731 152.359 cv
66.918 152.359 66.7578 152.32 66.4878 152.25 cv
66.5352 151.828 li
66.4409 151.219 li
66.582 150.969 li
66.5981 150.656 li
66.5508 150.234 li
66.6602 150.063 li
66.5352 149.734 li
66.6289 149.563 li
66.5508 149.281 li
66.6602 149.031 li
66.6372 148.977 66.6021 148.926 66.5508 148.875 cv
66.4961 148.832 66.4731 148.801 66.4731 148.781 cv
66.4731 148.75 66.5039 148.723 66.5659 148.703 cv
66.5552 148.672 66.5508 148.625 66.5508 148.563 cv
66.5508 148.438 66.582 148.273 66.645 148.078 cv
66.5508 147.938 li
66.5981 147.766 li
66.5039 147.641 li
66.6289 147.484 li
66.5659 147.078 li
66.6602 146.5 li
66.5508 146.313 li
66.707 146.047 li
66.5508 145.891 li
66.645 145.625 li
66.5508 145.563 li
66.5508 145.328 li
66.645 145.031 li
66.645 144.969 li
66.6602 144.922 li
66.6602 144.766 li
66.6758 144.703 li
66.5981 144.484 li
66.6758 144.25 li
66.5981 144.063 li
66.6602 143.859 li
66.5981 143.797 li
66.645 143.516 li
66.5981 143.359 li
66.6289 143.219 li
66.582 143.125 li
66.082 143.344 li
66.082 143.266 li
65.9878 143.281 li
65.832 143.422 li
65.707 143.422 li
65.5352 143.641 li
65.395 143.594 li
65.332 143.734 li
64.875 143.465 64.645 143.246 64.645 143.078 cv
64.645 142.977 64.688 142.883 64.77 142.797 cv
64.7539 142.594 li
65.0161 142.449 65.2578 142.371 65.4878 142.359 cv
65.5981 142.25 li
66.0352 142.078 li
66.145 141.984 li
66.5352 142 li
66.5981 141.984 li
66.7231 141.484 li
67.0659 141.563 li
67.2852 141.922 li
67.4102 141.797 li
67.6602 141.984 li
67.7852 141.984 67.9019 142.008 68.02 142.047 cv
68.082 142.172 li
68.1758 142.125 li
68.3008 142.219 li
68.3628 142.219 68.4102 142.227 68.4409 142.234 cv
68.4258 142.313 li
68.7378 142.219 li
68.895 142.391 li
69.1602 142.469 li
69.3481 142.688 li
69.6758 142.906 li
69.6909 142.922 li
69.957 143.016 li
69.957 143.094 li
70.0269 143.156 70.0859 143.234 70.1289 143.328 cv
70.2378 143.391 li
70.3159 143.547 li
70.4878 143.547 li
70.4878 143.828 li
70.582 143.922 li
70.6128 144.016 li
70.7539 144.047 li
70.7729 144.266 70.8359 144.449 70.9409 144.594 cv
70.9409 144.688 li
71.082 144.828 li
71.0508 145.063 li
71.1602 145.313 li
71.207 145.609 li
71.3008 145.625 li
cp
f
76.3359 146.172 mo
76.3359 146.277 76.293 146.359 76.2109 146.422 cv
76.1372 146.539 76.0161 146.656 75.8521 146.781 cv
75.7109 146.875 li
75.5859 147.047 li
75.4609 147.094 li
75.2578 147.234 li
75.1172 147.234 li
75.0698 147.297 li
74.8828 147.352 74.7339 147.445 74.6328 147.578 cv
74.5698 147.621 74.5078 147.641 74.4448 147.641 cv
74.4141 147.641 74.3828 147.641 74.3521 147.641 cv
74.1948 147.723 73.9922 147.766 73.7422 147.766 cv
73.5229 147.766 73.3828 147.75 73.3198 147.719 cv
73.0698 147.578 li
72.9771 147.438 li
72.9771 147.391 li
72.9771 147.277 72.9302 147.18 72.8359 147.094 cv
72.7729 146.828 li
72.6641 146.688 li
72.5859 146.172 li
72.5698 145.875 li
72.5859 145.641 li
72.6172 145.563 li
72.5859 145.512 72.5698 145.449 72.5698 145.375 cv
72.6211 144.992 72.6479 144.746 72.6479 144.641 cv
72.5229 144.391 li
72.6479 144.172 li
72.6948 143.828 li
72.6641 143.594 li
72.7422 143.375 li
72.6641 143.094 li
72.7891 142.906 li
72.8052 142.781 li
72.8052 142.281 li
72.8359 142.188 li
72.8359 141.594 li
72.8672 141 li
72.8198 140.891 li
72.8052 140.469 li
72.8359 140.094 li
72.8052 139.953 li
72.8828 139.109 li
73.2769 139.016 73.4492 138.969 73.3979 138.969 cv
73.5552 138.969 73.6802 139.047 73.7729 139.203 cv
73.7891 139.313 li
74.0078 139.531 li
73.8979 139.828 li
73.9141 139.875 li
73.9019 140.055 73.8828 140.172 73.8521 140.234 cv
73.8828 140.516 li
73.9448 140.781 li
73.8521 141.078 li
73.8521 141.234 73.8242 141.383 73.7729 141.516 cv
73.7729 141.559 73.7661 141.633 73.7578 141.734 cv
73.7422 141.828 li
73.8672 141.984 li
73.8052 142.125 li
73.8242 142.211 73.8359 142.262 73.8359 142.281 cv
73.8359 142.344 73.813 142.422 73.7729 142.516 cv
73.8052 142.641 li
73.7271 143.078 li
73.7271 143.375 li
73.6328 143.672 li
73.6802 143.938 li
73.6328 144.547 li
73.6641 144.625 li
73.6021 144.938 li
73.5698 145.344 li
73.5469 145.398 73.5391 145.43 73.5391 145.438 cv
73.5391 145.594 73.5308 145.727 73.5229 145.828 cv
73.6021 146.016 li
73.5698 146.234 li
73.6479 146.422 li
73.6328 146.484 li
73.6948 146.539 73.7461 146.609 73.7891 146.703 cv
73.9141 146.703 li
74.1021 146.766 li
74.1802 146.656 li
74.3052 146.641 li
74.3672 146.621 74.4141 146.609 74.4448 146.609 cv
74.4771 146.609 li
74.5698 146.59 74.6479 146.543 74.7109 146.469 cv
74.7891 146.422 li
74.8521 146.328 74.9609 146.262 75.1172 146.219 cv
75.1558 146.18 75.2461 146.105 75.3828 146 cv
75.3828 145.867 75.4609 145.766 75.6172 145.703 cv
75.75 145.703 75.8438 145.68 75.8979 145.625 cv
76.0859 145.656 76.2031 145.711 76.2578 145.781 cv
76.3091 145.855 76.3359 145.984 76.3359 146.172 cv
76.3359 146.172 li
cp
f
80.8359 145.656 mo
80.8359 145.875 80.7969 146.012 80.7271 146.063 cv
80.6479 146.125 li
80.5859 146.313 li
80.3672 146.391 li
80.293 146.539 80.1948 146.652 80.0698 146.734 cv
79.9448 146.781 li
79.7578 146.969 li
79.5859 147.016 li
79.5229 147.184 79.3872 147.273 79.1802 147.281 cv
79.168 147.313 79.125 147.371 79.0552 147.453 cv
78.918 147.547 78.7729 147.605 78.6172 147.625 cv
78.5552 147.641 li
78.4609 147.766 li
78.1802 147.766 li
77.9448 147.922 li
77.3828 147.5 li
77.1172 146.969 li
77.1021 146.281 li
77.0391 146.109 li
77.2109 144.875 li
77.2729 144.813 li
77.2422 144.68 77.2271 144.543 77.2271 144.406 cv
77.2271 144.324 77.25 144.152 77.3052 143.891 cv
77.3828 143.578 li
77.3589 143.516 77.3242 143.453 77.2729 143.391 cv
77.3521 143.125 li
77.3828 142.797 li
77.4141 142.766 li
77.3711 142.684 77.3438 142.59 77.3359 142.484 cv
77.3438 142.465 77.355 142.438 77.3672 142.406 cv
77.375 142.375 77.3828 142.352 77.3828 142.328 cv
77.3521 142.246 77.3359 142.168 77.3359 142.094 cv
77.3359 141.867 77.4609 141.762 77.7109 141.781 cv
77.8828 141.797 li
77.9961 141.746 78.063 141.719 78.0859 141.719 cv
78.2729 141.719 78.4019 141.82 78.4771 142.016 cv
78.4771 142.078 li
78.5078 142.195 78.5229 142.297 78.5229 142.391 cv
78.5229 142.477 78.5122 142.539 78.4922 142.578 cv
78.3979 143.281 li
78.4922 143.469 li
78.4922 143.648 78.438 143.797 78.3359 143.922 cv
78.3828 144.094 li
78.2109 144.625 li
78.188 144.855 78.1641 145.031 78.1328 145.156 cv
78.1328 145.5 li
78.0552 145.703 li
78.0698 145.844 li
78.0391 146.156 li
78.0698 146.422 li
78.2729 146.578 li
78.4448 146.563 li
78.4771 146.516 li
78.5859 146.531 li
78.7578 146.469 li
78.9141 146.313 li
78.9771 146.234 li
79.0698 146.219 li
79.1021 146.156 li
79.1479 146.094 li
79.2271 146.156 li
79.3672 146.016 li
79.4448 146.016 li
79.4771 145.922 li
79.5078 145.922 li
79.5552 145.813 li
79.6802 145.75 li
79.9448 145.625 li
80.1519 145.48 80.3589 145.406 80.5698 145.406 cv
80.6328 145.406 li
80.7271 145.469 80.793 145.555 80.8359 145.656 cv
80.8359 145.656 li
cp
79.4141 138.234 mo
79.4141 138.352 79.3359 138.453 79.1802 138.547 cv
79.1802 138.578 li
79 138.789 78.8521 138.906 78.7271 138.938 cv
78.5078 139.188 li
78.3672 139.375 li
78.0552 139.453 li
77.9141 139.656 li
77.6802 139.766 li
77.3198 140.094 li
77.1021 139.875 li
77.1328 139.531 li
77.2891 139.281 li
77.2969 139.148 77.375 139.031 77.5229 138.938 cv
77.5229 138.891 li
77.6021 138.828 li
77.6172 138.609 li
77.8359 138.563 li
77.8359 138.438 li
78.0078 138.406 li
78.0469 138.219 78.125 138.086 78.2422 138 cv
78.2891 137.969 li
78.3672 137.891 li
78.4922 137.547 li
79.105 137.703 79.4141 137.934 79.4141 138.234 cv
79.4141 138.234 li
cp
f
87.9141 139.344 mo
87.9141 139.531 87.7969 139.719 87.5698 139.906 cv
87.4609 139.828 li
87.2422 139.969 li
86.9609 139.422 li
86.938 139.277 86.9019 139.156 86.8521 139.063 cv
86.7578 139.109 li
86.5229 138.984 li
86.4448 138.969 li
86.2578 139.078 li
85.9609 139 li
85.8672 139.031 li
85.7808 139.125 85.6992 139.172 85.6172 139.172 cv
85.5742 139.172 85.5391 139.168 85.5078 139.156 cv
85.5078 139.297 li
85.4141 139.453 85.2969 139.637 85.1641 139.844 cv
85.1519 139.938 85.1211 140.109 85.0698 140.359 cv
84.9448 140.453 li
84.8828 140.609 li
84.8198 140.734 li
84.8828 141.016 li
84.7109 141.266 li
84.6641 141.469 li
84.6021 141.578 li
84.6172 141.781 li
84.4302 142.281 li
84.4448 142.516 li
84.4341 142.559 84.3828 142.695 84.2891 142.922 cv
84.2729 142.969 li
84.3672 142.938 84.4448 142.918 84.5078 142.906 cv
84.5859 142.922 li
84.605 142.914 84.6479 142.898 84.7109 142.875 cv
84.7578 142.875 li
84.7578 142.875 84.9141 142.887 85.2271 142.906 cv
85.2729 142.875 li
85.3872 142.855 85.4531 142.844 85.4771 142.844 cv
85.5698 142.844 85.668 142.871 85.7729 142.922 cv
85.8872 142.891 85.9839 142.875 86.0698 142.875 cv
86.1411 142.875 86.2109 142.891 86.2729 142.922 cv
86.3979 142.922 li
86.5859 142.953 li
86.918 142.965 87.0859 143.102 87.0859 143.359 cv
87.0859 143.434 87.0698 143.523 87.0391 143.625 cv
86.4141 143.813 li
86.0391 143.75 li
85.9448 143.781 85.7729 143.82 85.5229 143.859 cv
85.4609 143.781 li
85.3979 143.844 85.3091 143.875 85.1948 143.875 cv
85.0391 143.875 li
84.6479 144.063 li
84.4448 143.969 li
84.3828 143.969 li
84.3091 144.063 84.2148 144.121 84.1021 144.141 cv
84.1172 144.234 li
84.0552 144.422 li
84.1479 144.672 li
83.9609 145.031 li
84.0078 145.594 li
83.9302 145.781 li
83.9771 145.984 li
83.8359 146.297 li
83.8828 146.453 li
83.8828 146.465 83.8828 146.492 83.8828 146.531 cv
83.8828 146.543 83.8589 146.641 83.8198 146.828 cv
83.7891 147.016 83.7729 147.203 83.7729 147.391 cv
83.7729 147.516 li
83.7808 147.527 83.8359 147.59 83.9302 147.703 cv
83.8359 147.938 li
83.9302 148.219 li
83.8672 148.438 li
84.0229 149.125 li
84.0552 149.891 li
84.2891 150.172 li
84.1479 150.469 li
84.2622 150.664 84.3198 150.828 84.3198 150.953 cv
84.3198 151 li
84.3198 151.008 84.3242 151.031 84.3359 151.063 cv
84.3359 151.102 84.3359 151.129 84.3359 151.141 cv
84.3359 151.492 84.1328 151.676 83.7271 151.688 cv
83.6172 151.469 li
83.4448 151.375 li
83.4141 151.125 li
83.1328 150.328 li
83.1328 150.188 li
83.1021 150.008 83.0859 149.91 83.0859 149.891 cv
83.0859 149.836 83.0859 149.805 83.0859 149.797 cv
83.0552 149.547 li
83.0859 149.313 li
83.0552 149.156 li
83.0552 148.844 li
82.9141 147.969 li
82.9448 147.938 li
82.9141 147.781 li
82.9448 147.594 li
82.8359 147.406 li
82.9302 147.25 li
82.9302 146.531 li
82.9922 146.438 li
82.9922 145.938 li
83.0391 145.828 li
82.9922 145.391 li
83.0552 145.219 li
83.0742 145.063 83.125 144.711 83.2109 144.156 cv
83.1641 144.156 li
82.9771 144.109 li
82.7729 144.109 li
82.3828 144.156 li
82.1328 144.109 li
81.7271 144.188 li
81.6021 144.156 li
81.5469 144.168 81.4922 144.172 81.4302 144.172 cv
81.0122 143.984 80.7969 143.84 80.7729 143.734 cv
80.6948 143.5 li
80.8198 143.137 80.9839 142.953 81.1948 142.953 cv
81.2031 142.953 81.3672 142.992 81.6802 143.063 cv
82.4922 143.078 li
82.8828 143 li
83.2109 143.016 li
83.3521 143.031 li
83.3828 142.844 li
83.4141 142.438 li
83.4771 142.266 li
83.4448 141.984 li
83.4448 141.891 83.48 141.805 83.5552 141.719 cv
83.5391 141.578 li
83.6948 141.406 li
83.7578 140.984 li
83.8198 140.906 li
83.7729 140.734 li
83.8872 140.602 83.9448 140.492 83.9448 140.406 cv
83.9341 140.355 83.9302 140.328 83.9302 140.328 cv
83.9302 140.402 84 140.188 84.1479 139.688 cv
84.2422 139.609 li
84.2578 139.297 li
84.2891 139.375 li
84.2891 139.328 li
84.2891 139.172 84.3521 139.059 84.4771 138.984 cv
84.5552 138.859 li
84.7271 138.453 li
84.7578 138.453 li
84.8589 138.453 84.9141 138.391 84.9141 138.266 cv
84.9141 138.219 li
85.3052 138.078 li
85.4141 138.078 li
85.5391 138.039 85.6641 138.016 85.7891 138.016 cv
85.8979 138.016 li
85.9609 137.984 li
86.2729 137.922 li
86.6328 138 li
86.6519 138.012 86.688 138.027 86.7422 138.047 cv
86.8359 138.008 86.9019 137.984 86.9448 137.984 cv
87.0698 137.984 87.188 138.086 87.3052 138.281 cv
87.5078 138.422 li
87.6479 138.703 li
87.8521 138.906 li
87.9141 139.297 li
87.9141 139.344 li
cp
f
91.1948 145.656 mo
91.1948 145.875 91.1558 146.012 91.0859 146.063 cv
91.0078 146.125 li
90.9448 146.313 li
90.7271 146.391 li
90.6519 146.539 90.5552 146.652 90.4302 146.734 cv
90.3052 146.781 li
90.1172 146.969 li
89.9448 147.016 li
89.8828 147.184 89.7461 147.273 89.5391 147.281 cv
89.5269 147.313 89.4839 147.371 89.4141 147.453 cv
89.2769 147.547 89.1328 147.605 88.9771 147.625 cv
88.9141 147.641 li
88.8198 147.766 li
88.5391 147.766 li
88.3052 147.922 li
87.7422 147.5 li
87.4771 146.969 li
87.4609 146.281 li
87.3979 146.109 li
87.5698 144.875 li
87.6328 144.813 li
87.6021 144.68 87.5859 144.543 87.5859 144.406 cv
87.5859 144.324 87.6089 144.152 87.6641 143.891 cv
87.7422 143.578 li
87.7188 143.516 87.6841 143.453 87.6328 143.391 cv
87.7109 143.125 li
87.7422 142.797 li
87.7729 142.766 li
87.73 142.684 87.7031 142.59 87.6948 142.484 cv
87.7031 142.465 87.7148 142.438 87.7271 142.406 cv
87.7339 142.375 87.7422 142.352 87.7422 142.328 cv
87.7109 142.246 87.6948 142.168 87.6948 142.094 cv
87.6948 141.867 87.8198 141.762 88.0698 141.781 cv
88.2422 141.797 li
88.355 141.746 88.4219 141.719 88.4448 141.719 cv
88.6328 141.719 88.7622 141.82 88.8359 142.016 cv
88.8359 142.078 li
88.8672 142.195 88.8828 142.297 88.8828 142.391 cv
88.8828 142.477 88.8711 142.539 88.8521 142.578 cv
88.7578 143.281 li
88.8521 143.469 li
88.8521 143.648 88.7969 143.797 88.6948 143.922 cv
88.7422 144.094 li
88.5698 144.625 li
88.5469 144.855 88.5229 145.031 88.4922 145.156 cv
88.4922 145.5 li
88.4141 145.703 li
88.4302 145.844 li
88.3979 146.156 li
88.4302 146.422 li
88.6328 146.578 li
88.8052 146.563 li
88.8359 146.516 li
88.9448 146.531 li
89.1172 146.469 li
89.2729 146.313 li
89.3359 146.234 li
89.4302 146.219 li
89.4609 146.156 li
89.5078 146.094 li
89.5859 146.156 li
89.7271 146.016 li
89.8052 146.016 li
89.8359 145.922 li
89.8672 145.922 li
89.9141 145.813 li
90.0391 145.75 li
90.3052 145.625 li
90.5122 145.48 90.7188 145.406 90.9302 145.406 cv
90.9922 145.406 li
91.0859 145.469 91.1519 145.555 91.1948 145.656 cv
91.1948 145.656 li
cp
89.7729 138.234 mo
89.7729 138.352 89.6948 138.453 89.5391 138.547 cv
89.5391 138.578 li
89.3589 138.789 89.2109 138.906 89.0859 138.938 cv
88.8672 139.188 li
88.7271 139.375 li
88.4141 139.453 li
88.2729 139.656 li
88.0391 139.766 li
87.6802 140.094 li
87.4609 139.875 li
87.4922 139.531 li
87.6479 139.281 li
87.6558 139.148 87.7339 139.031 87.8828 138.938 cv
87.8828 138.891 li
87.9609 138.828 li
87.9771 138.609 li
88.1948 138.563 li
88.1948 138.438 li
88.3672 138.406 li
88.4058 138.219 88.4839 138.086 88.6021 138 cv
88.6479 137.969 li
88.7271 137.891 li
88.8521 137.547 li
89.4648 137.703 89.7729 137.934 89.7729 138.234 cv
89.7729 138.234 li
cp
f
94.9878 142.516 mo
94.9878 142.496 94.9731 142.445 94.9409 142.359 cv
94.8789 142.344 li
94.8481 142.359 li
94.8359 142.359 94.8159 142.359 94.7852 142.359 cv
94.7729 142.371 94.7578 142.375 94.7378 142.375 cv
94.7271 142.375 94.7109 142.371 94.6909 142.359 cv
94.668 142.359 94.6519 142.359 94.645 142.359 cv
94.5039 142.453 li
94.3789 142.469 li
94.3159 142.5 li
94.082 142.797 li
93.9258 142.922 li
93.707 143.313 li
93.5659 143.391 li
93.543 143.547 93.48 143.684 93.3789 143.797 cv
93.3159 143.891 li
93.418 143.828 93.5391 143.797 93.6758 143.797 cv
93.77 143.75 li
93.8159 143.625 li
94.0039 143.641 li
94.1128 143.469 li
94.207 143.469 li
94.3628 143.531 li
94.4258 143.328 li
94.52 143.328 li
94.52 143.172 li
94.707 143.125 li
94.7539 143.078 li
94.7852 142.953 li
94.957 142.688 li
94.9771 142.648 94.9878 142.59 94.9878 142.516 cv
94.9878 142.516 li
cp
96.3789 146.563 mo
96.3789 146.668 96.293 146.805 96.1289 146.969 cv
96.0742 147.125 96.0039 147.25 95.9102 147.344 cv
95.832 147.359 li
95.6758 147.625 li
95.4258 147.656 li
95.1602 147.828 li
95.02 148.078 li
94.8628 148.047 li
94.7578 148.098 94.6758 148.129 94.6128 148.141 cv
94.52 148.266 li
94.4961 148.254 94.457 148.25 94.395 148.25 cv
94.2769 148.25 94.1641 148.332 94.0508 148.5 cv
93.8481 148.328 li
93.8159 148.336 93.7622 148.344 93.6909 148.344 cv
93.5659 148.344 93.4609 148.328 93.3789 148.297 cv
93.145 148.297 li
93.0352 148.219 li
92.668 148.164 92.4448 148.031 92.3628 147.813 cv
92.3628 147.766 li
92.1909 147.688 li
92.0981 147.453 li
91.9409 147.344 li
91.9409 147.125 li
91.77 146.516 li
91.8008 146.016 li
91.8481 145.781 li
91.8481 145.484 li
91.9258 145.266 li
91.9102 145.172 li
92.0039 145 li
91.9731 145.031 li
91.9731 144.949 91.9961 144.859 92.0508 144.766 cv
92.0508 144.688 li
92.0039 144.359 li
92.0039 144.203 92.0742 144.063 92.2231 143.938 cv
92.2231 143.918 92.2231 143.891 92.2231 143.859 cv
92.2231 143.82 92.207 143.742 92.1758 143.625 cv
92.145 143.512 92.1289 143.43 92.1289 143.375 cv
92.1289 143.262 92.1602 143.148 92.2231 143.031 cv
92.293 143.137 92.3979 143.188 92.5352 143.188 cv
92.582 143.188 li
92.6021 143.156 92.645 143.117 92.707 143.063 cv
92.7769 142.836 92.8828 142.641 93.02 142.484 cv
93.0659 142.422 li
93.0659 142.391 93.0981 142.289 93.1602 142.109 cv
93.27 142.109 li
93.3008 142.031 li
93.4102 142 li
93.4492 141.93 93.4771 141.887 93.4878 141.875 cv
93.5078 141.855 93.6128 141.797 93.8008 141.703 cv
93.832 141.633 93.8872 141.57 93.9731 141.516 cv
94.0039 141.496 94.0508 141.477 94.1128 141.453 cv
94.1602 141.375 li
94.4102 141.293 94.5698 141.25 94.645 141.25 cv
94.7148 141.25 94.7852 141.273 94.8481 141.313 cv
94.9102 141.297 li
95.02 141.344 li
95.1328 141.43 95.2422 141.5 95.3481 141.563 cv
95.582 141.734 li
95.582 141.797 li
95.8008 141.965 95.9102 142.203 95.9102 142.516 cv
95.8628 142.656 li
95.9102 143.109 li
95.7852 143.188 li
95.645 143.563 li
95.3789 143.859 li
95.3628 144.078 li
95.0591 144.297 94.7852 144.469 94.5352 144.594 cv
94.4492 144.73 94.3198 144.797 94.145 144.797 cv
94.1128 144.797 li
93.832 144.953 li
93.6128 144.953 li
93.2852 145.094 li
93.0352 144.969 li
93.0039 144.969 li
92.98 145.043 92.9609 145.156 92.9409 145.313 cv
92.832 145.391 li
92.8159 145.563 li
92.7378 145.797 li
92.7578 146.027 92.77 146.172 92.77 146.234 cv
92.7231 146.281 li
92.7231 146.398 92.7148 146.484 92.707 146.547 cv
92.707 146.559 92.6992 146.57 92.6909 146.578 cv
92.6909 146.602 92.6909 146.617 92.6909 146.625 cv
92.6909 146.699 92.7271 146.762 92.8008 146.813 cv
92.832 146.918 92.8789 146.984 92.9409 147.016 cv
93.0352 147.094 li
93.3481 147.188 li
93.3481 147.234 li
93.457 147.25 li
93.9409 147.281 li
94.2231 147.234 li
94.3628 147.141 li
94.4409 147.109 li
94.582 146.906 li
94.645 146.891 li
95.0039 146.781 li
95.0352 146.719 95.0981 146.664 95.1909 146.609 cv
95.2231 146.547 li
95.4102 146.508 95.52 146.406 95.5508 146.25 cv
95.6758 146.117 95.8398 146.047 96.0508 146.047 cv
96.1128 146.047 li
96.2891 146.258 96.3789 146.43 96.3789 146.563 cv
96.3789 146.563 li
cp
f
102.566 142.5 mo
102.457 142.953 li
101.941 143.031 li
101.66 143.203 li
101.473 143.125 li
101.27 143.234 li
101.066 143.328 li
100.926 143.422 li
100.926 143.469 li
100.629 143.609 li
100.441 143.859 li
100.332 143.859 li
100.184 144.027 100.082 144.125 100.02 144.156 cv
99.8159 144.484 li
99.7539 144.516 li
99.7231 144.59 99.6909 144.699 99.6602 144.844 cv
99.457 144.922 li
99.3789 145.078 li
99.2539 145.219 li
99.2378 145.438 li
99.1128 145.484 li
99.1128 145.688 li
99.082 145.734 li
99.1021 145.777 99.1328 145.828 99.1758 145.891 cv
98.9731 145.969 li
98.9409 146.156 li
98.8008 146.391 li
98.8789 146.563 li
98.707 146.828 li
98.7148 146.922 98.7231 146.984 98.7231 147.016 cv
98.7231 147.027 98.7231 147.047 98.7231 147.078 cv
98.7231 147.102 98.7231 147.121 98.7231 147.141 cv
98.7378 147.266 li
98.9878 147.516 li
98.8008 147.844 li
98.6289 147.969 li
98.2378 148.172 li
97.7231 147.953 li
97.7231 147.641 li
97.6602 147.5 li
97.707 147.297 li
97.6841 147.152 97.6758 147.043 97.6758 146.969 cv
97.6758 146.938 97.6802 146.898 97.6909 146.844 cv
97.6909 146.805 97.6909 146.773 97.6909 146.75 cv
97.6758 146.609 li
97.6128 146.547 97.582 146.477 97.582 146.391 cv
97.582 146.32 97.6128 146.234 97.6758 146.141 cv
97.6758 146.09 97.6641 145.949 97.645 145.719 cv
97.6909 145.672 li
97.645 145.484 li
97.6758 145.328 li
97.645 145.219 li
97.6909 144.906 li
97.6128 144.766 li
97.6602 144.609 li
97.6128 144.422 li
97.6211 144.371 97.6289 144.297 97.6289 144.203 cv
97.6289 144.07 97.605 143.977 97.5659 143.922 cv
97.6289 143.844 li
97.5659 143.594 li
97.4409 143.406 li
97.5039 143.188 li
97.457 143.094 li
97.395 142.766 li
97.395 142.656 li
97.3521 142.594 97.332 142.523 97.332 142.438 cv
97.332 142.25 97.5352 142.094 97.9409 141.969 cv
98.3008 142.031 li
98.3628 142.297 li
98.5039 142.484 li
98.457 142.859 li
98.4878 143.047 98.5229 143.25 98.5659 143.469 cv
98.5981 143.703 li
98.605 143.727 98.6172 143.777 98.6289 143.859 cv
98.6289 143.914 98.605 143.969 98.5659 144.031 cv
98.5981 144.313 li
98.582 144.625 li
98.52 144.766 li
98.5659 144.813 li
98.582 144.953 li
98.645 144.891 98.6802 144.824 98.6909 144.75 cv
98.7378 144.547 li
98.77 144.484 98.8091 144.438 98.8628 144.406 cv
98.9258 144.203 li
99.1128 144.094 li
99.145 143.922 li
99.3008 143.75 li
99.4102 143.547 li
99.5352 143.414 99.6519 143.328 99.77 143.297 cv
99.7852 143.25 li
99.9258 143.063 li
100.066 143.031 li
100.098 142.984 li
100.16 142.906 li
100.316 142.813 li
100.395 142.719 li
100.473 142.734 li
100.598 142.672 li
100.645 142.594 li
100.816 142.516 li
101.051 142.359 li
101.395 142.25 li
101.52 142.23 101.586 142.219 101.598 142.219 cv
101.598 142.23 101.598 142.234 101.598 142.234 cv
101.586 142.234 101.582 142.242 101.582 142.25 cv
101.598 142.25 li
101.637 142.25 101.695 142.23 101.77 142.188 cv
101.809 142.148 101.871 142.125 101.957 142.125 cv
101.996 142.125 102.066 142.137 102.16 142.156 cv
102.398 142.168 102.535 142.281 102.566 142.5 cv
102.566 142.5 li
cp
f
151.566 56.1802 mo
148.473 56.1802 li
148.473 56.3979 li
148.629 56.4141 148.785 56.4448 148.848 56.4448 cv
149.176 56.4771 149.316 56.5552 149.316 56.7109 cv
149.316 57.0391 148.551 57.7891 147.301 58.6641 cv
145.191 60.1328 li
145.926 57.4302 li
146.129 56.7422 146.504 56.4609 147.332 56.3979 cv
147.332 56.1802 li
143.52 56.1802 li
143.52 56.3979 li
144.395 56.4922 144.598 56.6021 144.598 57.0078 cv
144.598 57.1948 144.551 57.5229 144.441 57.8672 cv
142.723 64.0391 li
142.473 64.8672 142.41 64.9448 141.582 65.0698 cv
141.582 65.2891 li
145.051 65.2891 li
145.051 65.0698 li
144.16 64.9609 144.035 64.8828 144.035 64.4448 cv
144.035 64.3052 144.066 64.1802 144.16 63.9141 cv
144.238 63.6172 li
145.098 60.4302 li
146.785 63.3359 li
147.129 63.9141 147.316 64.3979 147.316 64.6641 cv
147.316 64.8672 147.129 64.9771 146.676 65.0229 cv
146.613 65.0229 146.457 65.0391 146.27 65.0698 cv
146.27 65.2891 li
150.113 65.2891 li
150.113 65.0698 li
149.238 64.9771 149.145 64.9448 148.754 64.2891 cv
146.332 60.0552 li
150.52 56.8979 li
150.91 56.6172 151.223 56.4609 151.566 56.3979 cv
151.566 56.1802 li
cp
0 0 0 rgb
f
157.551 66.1758 mo
157.457 66.3008 157.379 66.395 157.348 66.4409 cv
157.051 66.8159 156.832 66.9878 156.676 66.9878 cv
156.598 66.9878 156.551 66.9258 156.551 66.8159 cv
156.551 66.77 156.582 66.5981 156.645 66.3628 cv
157.348 63.77 li
157.363 63.7231 157.379 63.5352 157.379 63.4731 cv
157.379 63.0981 157.129 62.832 156.77 62.832 cv
156.582 62.832 156.363 62.895 156.129 63.0508 cv
155.613 63.3789 155.191 63.8789 154.473 65.02 cv
154.738 64.2231 154.895 63.645 154.895 63.4409 cv
154.895 63.082 154.66 62.832 154.301 62.832 cv
153.676 62.832 152.957 63.5039 152.004 65.0039 cv
152.598 62.8481 li
152.566 62.832 li
151.988 62.9409 151.77 62.9878 150.91 63.145 cv
150.91 63.3159 li
151.176 63.3159 li
151.441 63.3159 151.582 63.3789 151.582 63.5352 cv
151.582 63.645 151.348 64.5981 150.973 65.895 cv
150.738 66.7539 150.707 66.8481 150.566 67.3789 cv
151.348 67.3789 li
151.832 65.7378 151.988 65.3481 152.348 64.8159 cv
152.926 63.9409 153.535 63.3628 153.895 63.3628 cv
154.02 63.3628 154.098 63.457 154.098 63.6128 cv
154.098 63.707 153.77 64.957 153.113 67.3789 cv
153.895 67.3789 li
154.301 65.77 154.504 65.2539 155.035 64.52 cv
155.551 63.8159 156.066 63.3628 156.363 63.3628 cv
156.473 63.3628 156.566 63.457 156.566 63.582 cv
156.566 63.6289 156.551 63.7539 156.488 63.9409 cv
155.895 66.3159 li
155.801 66.6909 155.754 66.895 155.754 67.0039 cv
155.754 67.3008 155.91 67.4731 156.176 67.4731 cv
156.66 67.4731 157.113 67.1289 157.66 66.3628 cv
157.707 66.3008 li
157.551 66.1758 li
cp
f
73.4019 52.918 mo
70.3091 52.918 li
70.3091 53.1372 li
70.4648 53.1519 70.6211 53.1841 70.6841 53.1841 cv
71.0122 53.2148 71.1519 53.293 71.1519 53.4492 cv
71.1519 53.7769 70.3872 54.5269 69.1372 55.4019 cv
67.0269 56.8711 li
67.7622 54.168 li
67.9648 53.48 68.3398 53.1992 69.168 53.1372 cv
69.168 52.918 li
65.355 52.918 li
65.355 53.1372 li
66.23 53.23 66.4341 53.3398 66.4341 53.7461 cv
66.4341 53.9341 66.3872 54.2622 66.2769 54.605 cv
64.5591 60.7769 li
64.3091 61.605 64.2461 61.6841 63.418 61.8091 cv
63.418 62.0269 li
66.8872 62.0269 li
66.8872 61.8091 li
65.9961 61.6992 65.8711 61.6211 65.8711 61.1841 cv
65.8711 61.043 65.9019 60.918 65.9961 60.6519 cv
66.0742 60.355 li
66.9341 57.168 li
68.6211 60.0742 li
68.9648 60.6519 69.1519 61.1372 69.1519 61.4019 cv
69.1519 61.605 68.9648 61.7148 68.5122 61.7622 cv
68.4492 61.7622 68.293 61.7769 68.105 61.8091 cv
68.105 62.0269 li
71.9492 62.0269 li
71.9492 61.8091 li
71.0742 61.7148 70.98 61.6841 70.5898 61.0269 cv
68.168 56.793 li
72.355 53.6372 li
72.7461 53.355 73.0591 53.1992 73.4019 53.1372 cv
73.4019 52.918 li
cp
f
75.4648 59.793 mo
75.8242 59.8091 76.043 60.0591 76.043 60.418 cv
76.043 61.293 75.5269 62.5122 74.8242 63.2769 cv
74.5742 63.5591 74.2148 63.73 73.918 63.73 cv
73.5591 63.73 73.3242 63.4341 73.3242 62.9492 cv
73.3242 62.4019 73.7148 61.3398 74.1519 60.6992 cv
74.5742 60.0898 75.0591 59.7617 75.4648 59.793 cv
75.4648 59.793 li
cp
77.0742 62.98 mo
76.918 63.1367 76.855 63.1992 76.7769 63.2769 cv
76.4648 63.5898 76.3398 63.6992 76.2461 63.6992 cv
76.168 63.6992 76.105 63.6372 76.105 63.5591 cv
76.105 63.355 76.5269 61.5898 77.0122 59.8091 cv
77.043 59.7148 77.0591 59.6841 77.0742 59.5898 cv
77.0122 59.5742 li
76.3711 59.6372 li
76.3398 59.668 li
76.23 60.168 li
76.1519 59.7769 75.855 59.5742 75.4019 59.5742 cv
74.043 59.5742 72.4492 61.4492 72.4492 63.0898 cv
72.4492 63.8091 72.8398 64.23 73.5122 64.23 cv
74.23 64.23 74.668 63.8867 75.5898 62.605 cv
75.3711 63.418 75.3398 63.5591 75.3398 63.8091 cv
75.3398 64.105 75.4648 64.23 75.7622 64.23 cv
76.168 64.23 76.4341 64.0269 77.1992 63.0898 cv
77.0742 62.98 li
cp
f
226.41 57.7891 mo
260.426 57.7891 li
260.438 57.9771 li
261.762 57.9961 262.871 59.0269 263.051 60.4019 cv
263.246 61.9341 262.223 63.3438 260.762 63.5508 cv
260.426 63.6328 li
226.41 63.6328 li
@
226.41 57.7891 mo
260.426 57.7891 li
260.438 57.9771 li
261.762 57.9961 262.871 59.0269 263.051 60.4019 cv
263.246 61.9341 262.223 63.3438 260.762 63.5508 cv
260.426 63.6328 li
226.41 63.6328 li
.901961 .992157 .921569 rgb
f
215.418 37.3828 mo
203.758 37.4341 li
203.934 37.4258 li
203.09 37.4492 202.207 37.6211 201.348 37.9219 cv
200.406 38.2539 199.496 38.7461 198.637 39.3711 cv
197.777 39.9922 196.969 40.75 196.23 41.6021 cv
195.488 42.457 194.813 43.4058 194.207 44.4102 cv
193.605 45.4141 193.07 46.4731 192.605 47.5552 cv
192.141 48.6328 191.746 49.7378 191.41 50.832 cv
191.074 51.9258 190.801 53.0161 190.578 54.082 cv
190.355 55.145 190.188 56.188 190.055 57.1909 cv
189.926 58.1948 189.84 59.1641 189.781 60.0938 cv
189.727 61.02 189.703 61.9102 189.703 62.7539 cv
189.703 63.5981 189.727 64.4839 189.781 65.4102 cv
189.84 66.3398 189.926 67.3091 190.055 68.313 cv
190.188 69.3159 190.355 70.3589 190.578 71.4219 cv
190.801 72.4878 191.074 73.5781 191.41 74.6719 cv
191.746 75.77 192.141 76.8711 192.605 77.9531 cv
193.07 79.0313 193.605 80.0938 194.207 81.0977 cv
194.813 82.1016 195.488 83.0469 196.23 83.9023 cv
196.969 84.7539 197.777 85.5117 198.637 86.1367 cv
199.496 86.7617 200.406 87.25 201.348 87.582 cv
202.207 87.8867 203.09 88.0547 203.977 88.082 cv
203.941 88.082 li
215.602 88.0313 li
216.488 88.0039 217.371 87.8359 218.23 87.5313 cv
219.172 87.1992 220.082 86.7109 220.941 86.0859 cv
221.801 85.4609 222.609 84.7031 223.348 83.8516 cv
224.09 82.9961 224.766 82.0508 225.371 81.0469 cv
225.973 80.043 226.508 78.9805 226.973 77.9023 cv
227.438 76.8203 227.832 75.7188 228.168 74.6211 cv
228.504 73.5269 228.777 72.438 229 71.3711 cv
229.223 70.3091 229.391 69.2661 229.523 68.2622 cv
229.652 67.2578 229.742 66.2891 229.797 65.3589 cv
229.852 64.4341 229.875 63.5469 229.875 62.7031 cv
229.875 61.8589 229.852 60.9688 229.797 60.043 cv
229.742 59.1128 229.652 58.145 229.523 57.1411 cv
229.391 56.1372 229.223 55.0981 229 54.0308 cv
228.777 52.9648 228.504 51.875 228.168 50.7808 cv
227.832 49.6841 227.438 48.582 226.973 47.5039 cv
226.508 46.4219 225.973 45.3628 225.371 44.3589 cv
224.766 43.3521 224.09 42.4058 223.348 41.5552 cv
222.609 40.6992 221.801 39.9448 220.941 39.3198 cv
220.082 38.6948 219.172 38.2031 218.23 37.8711 cv
217.371 37.5698 216.488 37.3979 215.645 37.375 cv
226.41 57.7891 mo
260.426 57.7891 li
260.438 57.9771 li
261.762 57.9961 262.871 59.0269 263.051 60.4019 cv
263.246 61.9341 262.223 63.3438 260.762 63.5508 cv
260.426 63.6328 li
226.41 63.6328 li
0 0 0 rgb
@
215.418 37.3828 mo
203.758 37.4341 li
203.934 37.4258 li
203.09 37.4492 202.207 37.6211 201.348 37.9219 cv
200.406 38.2539 199.496 38.7461 198.637 39.3711 cv
197.777 39.9922 196.969 40.75 196.23 41.6021 cv
195.488 42.457 194.813 43.4058 194.207 44.4102 cv
193.605 45.4141 193.07 46.4731 192.605 47.5552 cv
192.141 48.6328 191.746 49.7378 191.41 50.832 cv
191.074 51.9258 190.801 53.0161 190.578 54.082 cv
190.355 55.145 190.188 56.188 190.055 57.1909 cv
189.926 58.1948 189.84 59.1641 189.781 60.0938 cv
189.727 61.02 189.703 61.9102 189.703 62.7539 cv
189.703 63.5981 189.727 64.4839 189.781 65.4102 cv
189.84 66.3398 189.926 67.3091 190.055 68.313 cv
190.188 69.3159 190.355 70.3589 190.578 71.4219 cv
190.801 72.4878 191.074 73.5781 191.41 74.6719 cv
191.746 75.77 192.141 76.8711 192.605 77.9531 cv
193.07 79.0313 193.605 80.0938 194.207 81.0977 cv
194.813 82.1016 195.488 83.0469 196.23 83.9023 cv
196.969 84.7539 197.777 85.5117 198.637 86.1367 cv
199.496 86.7617 200.406 87.25 201.348 87.582 cv
202.207 87.8867 203.09 88.0547 203.977 88.082 cv
203.941 88.082 li
215.602 88.0313 li
216.488 88.0039 217.371 87.8359 218.23 87.5313 cv
219.172 87.1992 220.082 86.7109 220.941 86.0859 cv
221.801 85.4609 222.609 84.7031 223.348 83.8516 cv
224.09 82.9961 224.766 82.0508 225.371 81.0469 cv
225.973 80.043 226.508 78.9805 226.973 77.9023 cv
227.438 76.8203 227.832 75.7188 228.168 74.6211 cv
228.504 73.5269 228.777 72.438 229 71.3711 cv
229.223 70.3091 229.391 69.2661 229.523 68.2622 cv
229.652 67.2578 229.742 66.2891 229.797 65.3589 cv
229.852 64.4341 229.875 63.5469 229.875 62.7031 cv
229.875 61.8589 229.852 60.9688 229.797 60.043 cv
229.742 59.1128 229.652 58.145 229.523 57.1411 cv
229.391 56.1372 229.223 55.0981 229 54.0308 cv
228.777 52.9648 228.504 51.875 228.168 50.7808 cv
227.832 49.6841 227.438 48.582 226.973 47.5039 cv
226.508 46.4219 225.973 45.3628 225.371 44.3589 cv
224.766 43.3521 224.09 42.4058 223.348 41.5552 cv
222.609 40.6992 221.801 39.9448 220.941 39.3198 cv
220.082 38.6948 219.172 38.2031 218.23 37.8711 cv
217.371 37.5698 216.488 37.3979 215.645 37.375 cv
.458824 .458824 .458824 rgb
ef
167.086 57.7891 mo
201.102 57.7891 li
201.113 57.9771 li
202.438 57.9961 203.551 59.0269 203.727 60.4019 cv
203.926 61.9341 202.902 63.3438 201.441 63.5508 cv
201.102 63.6328 li
167.086 63.6328 li
204.02 37.4258 mo
204.859 37.4492 205.746 37.6211 206.605 37.9219 cv
207.543 38.2539 208.457 38.7461 209.313 39.3711 cv
210.176 39.9922 210.98 40.75 211.723 41.6021 cv
212.465 42.457 213.141 43.4058 213.742 44.4102 cv
214.348 45.4141 214.883 46.4731 215.344 47.5552 cv
215.809 48.6328 216.207 49.7378 216.543 50.832 cv
216.875 51.9258 217.148 53.0161 217.371 54.082 cv
217.594 55.145 217.766 56.188 217.895 57.1909 cv
218.023 58.1948 218.113 59.1641 218.168 60.0938 cv
218.227 61.02 218.25 61.9102 218.25 62.7539 cv
218.25 63.5981 218.227 64.4839 218.168 65.4102 cv
218.113 66.3398 218.023 67.3091 217.895 68.313 cv
217.766 69.3159 217.594 70.3589 217.371 71.4219 cv
217.148 72.4878 216.875 73.5781 216.543 74.6719 cv
216.207 75.77 215.809 76.8711 215.344 77.9531 cv
214.883 79.0313 214.348 80.0938 213.742 81.0977 cv
213.141 82.1016 212.465 83.0469 211.723 83.9023 cv
210.98 84.7539 210.176 85.5117 209.313 86.1367 cv
208.457 86.7617 207.543 87.25 206.605 87.582 cv
205.746 87.8867 204.859 88.0547 203.977 88.082 cv
215.418 37.3828 mo
203.758 37.4341 li
203.934 37.4258 li
203.09 37.4492 202.207 37.6211 201.348 37.9219 cv
200.406 38.2539 199.496 38.7461 198.637 39.3711 cv
197.777 39.9922 196.969 40.75 196.23 41.6021 cv
195.488 42.457 194.813 43.4058 194.207 44.4102 cv
193.605 45.4141 193.07 46.4731 192.605 47.5552 cv
192.141 48.6328 191.746 49.7378 191.41 50.832 cv
191.074 51.9258 190.801 53.0161 190.578 54.082 cv
190.355 55.145 190.188 56.188 190.055 57.1909 cv
189.926 58.1948 189.84 59.1641 189.781 60.0938 cv
189.727 61.02 189.703 61.9102 189.703 62.7539 cv
189.703 63.5981 189.727 64.4839 189.781 65.4102 cv
189.84 66.3398 189.926 67.3091 190.055 68.313 cv
190.188 69.3159 190.355 70.3589 190.578 71.4219 cv
190.801 72.4878 191.074 73.5781 191.41 74.6719 cv
191.746 75.77 192.141 76.8711 192.605 77.9531 cv
193.07 79.0313 193.605 80.0938 194.207 81.0977 cv
194.813 82.1016 195.488 83.0469 196.23 83.9023 cv
196.969 84.7539 197.777 85.5117 198.637 86.1367 cv
199.496 86.7617 200.406 87.25 201.348 87.582 cv
202.207 87.8867 203.09 88.0547 203.977 88.082 cv
203.941 88.082 li
215.602 88.0313 li
216.488 88.0039 217.371 87.8359 218.23 87.5313 cv
219.172 87.1992 220.082 86.7109 220.941 86.0859 cv
221.801 85.4609 222.609 84.7031 223.348 83.8516 cv
224.09 82.9961 224.766 82.0508 225.371 81.0469 cv
225.973 80.043 226.508 78.9805 226.973 77.9023 cv
227.438 76.8203 227.832 75.7188 228.168 74.6211 cv
228.504 73.5269 228.777 72.438 229 71.3711 cv
229.223 70.3091 229.391 69.2661 229.523 68.2622 cv
229.652 67.2578 229.742 66.2891 229.797 65.3589 cv
229.852 64.4341 229.875 63.5469 229.875 62.7031 cv
229.875 61.8589 229.852 60.9688 229.797 60.043 cv
229.742 59.1128 229.652 58.145 229.523 57.1411 cv
229.391 56.1372 229.223 55.0981 229 54.0308 cv
228.777 52.9648 228.504 51.875 228.168 50.7808 cv
227.832 49.6841 227.438 48.582 226.973 47.5039 cv
226.508 46.4219 225.973 45.3628 225.371 44.3589 cv
224.766 43.3521 224.09 42.4058 223.348 41.5552 cv
222.609 40.6992 221.801 39.9448 220.941 39.3198 cv
220.082 38.6948 219.172 38.2031 218.23 37.8711 cv
217.371 37.5698 216.488 37.3979 215.645 37.375 cv
0 0 0 rgb
@
167.086 57.7891 mo
201.102 57.7891 li
201.113 57.9771 li
202.438 57.9961 203.551 59.0269 203.727 60.4019 cv
203.926 61.9341 202.902 63.3438 201.441 63.5508 cv
201.102 63.6328 li
167.086 63.6328 li
.901961 .992157 .921569 rgb
f
170.629 74.9019 mo
170.805 70.3008 li
175.055 72.0742 li
171.344 71.145 mo
174.477 76.043 179.102 75.1909 181.68 69.2422 cv
184.258 63.293 183.813 54.5 180.68 49.6021 cv
178.102 45.563 174.41 45.3438 171.703 49.0698 cv
167.086 57.7891 mo
201.102 57.7891 li
201.113 57.9771 li
202.438 57.9961 203.551 59.0269 203.727 60.4019 cv
203.926 61.9341 202.902 63.3438 201.441 63.5508 cv
201.102 63.6328 li
167.086 63.6328 li
0 0 0 rgb
@
189.168 130.188 mo
189.168 130.168 189.152 130.117 189.121 130.031 cv
189.059 130.016 li
189.027 130.031 li
189.016 130.031 188.996 130.031 188.965 130.031 cv
188.953 130.043 188.938 130.047 188.918 130.047 cv
188.906 130.047 188.891 130.043 188.871 130.031 cv
188.848 130.031 188.832 130.031 188.824 130.031 cv
188.684 130.125 li
188.559 130.141 li
188.496 130.172 li
188.262 130.469 li
188.105 130.594 li
187.887 130.984 li
187.746 131.063 li
187.723 131.219 187.66 131.355 187.559 131.469 cv
187.496 131.563 li
187.598 131.5 187.719 131.469 187.855 131.469 cv
187.949 131.422 li
187.996 131.297 li
188.184 131.313 li
188.293 131.141 li
188.387 131.141 li
188.543 131.203 li
188.605 131 li
188.699 131 li
188.699 130.844 li
188.887 130.797 li
188.934 130.75 li
188.965 130.625 li
189.137 130.359 li
189.156 130.32 189.168 130.262 189.168 130.188 cv
189.168 130.188 li
cp
190.559 134.234 mo
190.559 134.34 190.473 134.477 190.309 134.641 cv
190.254 134.797 190.184 134.922 190.09 135.016 cv
190.012 135.031 li
189.855 135.297 li
189.605 135.328 li
189.34 135.5 li
189.199 135.75 li
189.043 135.719 li
188.938 135.77 188.855 135.801 188.793 135.813 cv
188.699 135.938 li
188.676 135.926 188.637 135.922 188.574 135.922 cv
188.457 135.922 188.344 136.004 188.23 136.172 cv
188.027 136 li
187.996 136.008 187.941 136.016 187.871 136.016 cv
187.746 136.016 187.641 136 187.559 135.969 cv
187.324 135.969 li
187.215 135.891 li
186.848 135.836 186.625 135.703 186.543 135.484 cv
186.543 135.438 li
186.371 135.359 li
186.277 135.125 li
186.121 135.016 li
186.121 134.797 li
185.949 134.188 li
185.98 133.688 li
186.027 133.453 li
186.027 133.156 li
186.105 132.938 li
186.09 132.844 li
186.184 132.672 li
186.152 132.703 li
186.152 132.621 186.176 132.531 186.23 132.438 cv
186.23 132.359 li
186.184 132.031 li
186.184 131.875 186.254 131.734 186.402 131.609 cv
186.402 131.59 186.402 131.563 186.402 131.531 cv
186.402 131.492 186.387 131.414 186.355 131.297 cv
186.324 131.184 186.309 131.102 186.309 131.047 cv
186.309 130.934 186.34 130.82 186.402 130.703 cv
186.473 130.809 186.578 130.859 186.715 130.859 cv
186.762 130.859 li
186.781 130.828 186.824 130.789 186.887 130.734 cv
186.957 130.508 187.063 130.313 187.199 130.156 cv
187.246 130.094 li
187.246 130.063 187.277 129.961 187.34 129.781 cv
187.449 129.781 li
187.48 129.703 li
187.59 129.672 li
187.629 129.602 187.656 129.559 187.668 129.547 cv
187.688 129.527 187.793 129.469 187.98 129.375 cv
188.012 129.305 188.066 129.242 188.152 129.188 cv
188.184 129.168 188.23 129.148 188.293 129.125 cv
188.34 129.047 li
188.59 128.965 188.75 128.922 188.824 128.922 cv
188.895 128.922 188.965 128.945 189.027 128.984 cv
189.09 128.969 li
189.199 129.016 li
189.313 129.102 189.422 129.172 189.527 129.234 cv
189.762 129.406 li
189.762 129.469 li
189.98 129.637 190.09 129.875 190.09 130.188 cv
190.043 130.328 li
190.09 130.781 li
189.965 130.859 li
189.824 131.234 li
189.559 131.531 li
189.543 131.75 li
189.238 131.969 188.965 132.141 188.715 132.266 cv
188.629 132.402 188.5 132.469 188.324 132.469 cv
188.293 132.469 li
188.012 132.625 li
187.793 132.625 li
187.465 132.766 li
187.215 132.641 li
187.184 132.641 li
187.16 132.715 187.141 132.828 187.121 132.984 cv
187.012 133.063 li
186.996 133.234 li
186.918 133.469 li
186.938 133.699 186.949 133.844 186.949 133.906 cv
186.902 133.953 li
186.902 134.07 186.895 134.156 186.887 134.219 cv
186.887 134.23 186.879 134.242 186.871 134.25 cv
186.871 134.273 186.871 134.289 186.871 134.297 cv
186.871 134.371 186.906 134.434 186.98 134.484 cv
187.012 134.59 187.059 134.656 187.121 134.688 cv
187.215 134.766 li
187.527 134.859 li
187.527 134.906 li
187.637 134.922 li
188.121 134.953 li
188.402 134.906 li
188.543 134.813 li
188.621 134.781 li
188.762 134.578 li
188.824 134.563 li
189.184 134.453 li
189.215 134.391 189.277 134.336 189.371 134.281 cv
189.402 134.219 li
189.59 134.18 189.699 134.078 189.73 133.922 cv
189.855 133.789 190.02 133.719 190.23 133.719 cv
190.293 133.719 li
190.469 133.93 190.559 134.102 190.559 134.234 cv
190.559 134.234 li
cp
.258824 .258824 .258824 rgb
f
200.352 133.109 mo
200.352 133.184 200.289 133.281 200.164 133.406 cv
200.023 133.641 li
199.961 133.922 li
199.836 133.969 li
199.805 134.047 li
199.656 134.09 199.555 134.203 199.492 134.391 cv
199.387 134.527 199.273 134.621 199.148 134.672 cv
199.105 134.727 199.063 134.758 199.023 134.766 cv
198.945 134.906 li
198.82 134.922 li
198.461 135.125 li
197.992 135.172 li
197.867 135.156 li
197.648 135.188 li
197.57 135.094 li
197.434 135.031 197.34 134.969 197.289 134.906 cv
197.172 134.875 197.09 134.789 197.039 134.641 cv
196.871 134.453 196.789 134.305 196.789 134.188 cv
196.789 134.141 li
196.695 133.969 li
196.664 133.953 li
196.586 133.688 li
196.461 133.422 li
196.492 133.109 li
196.352 132.922 li
196.133 131.719 li
196.109 131.563 196.102 131.43 196.102 131.313 cv
196.07 131.25 li
195.992 131.141 li
195.867 131.313 li
195.367 131.844 li
195.18 132.141 li
195.086 132.344 li
194.93 132.563 li
194.82 132.672 li
194.836 132.75 li
194.648 133.172 li
194.523 133.313 li
194.383 133.344 li
194.258 133.469 li
194.258 133.656 194.168 133.777 193.992 133.828 cv
193.961 133.859 li
193.875 134.07 193.789 134.195 193.695 134.234 cv
193.57 134.438 li
193.359 134.625 193.227 134.742 193.164 134.781 cv
193.133 134.875 193.078 134.961 193.008 135.031 cv
192.984 135.055 192.949 135.09 192.898 135.141 cv
192.875 135.297 192.746 135.406 192.508 135.469 cv
192.352 135.516 li
192.172 135.504 192.023 135.395 191.898 135.188 cv
191.68 134.844 li
191.758 134.5 li
191.727 134.328 li
191.758 134.297 li
191.773 134.109 li
191.617 133.781 li
191.727 133.609 li
191.68 133.422 li
191.773 133.234 li
191.805 132.906 li
191.742 132.859 li
191.852 132.656 li
191.82 132.563 li
191.805 132.344 li
191.852 131.922 li
191.828 131.828 191.82 131.766 191.82 131.734 cv
191.82 131.715 191.824 131.695 191.836 131.672 cv
191.836 131.652 191.836 131.637 191.836 131.625 cv
191.773 131.516 li
191.82 131.063 li
191.805 130.906 li
191.836 130.688 li
191.789 130.313 li
192.039 129.891 li
192.328 129.934 192.527 129.996 192.633 130.078 cv
192.746 130.152 192.805 130.293 192.805 130.5 cv
192.805 130.625 li
192.898 130.797 li
192.867 131.094 li
192.914 131.656 li
192.82 131.922 li
192.867 132.219 li
192.867 132.453 li
192.758 132.609 li
192.836 132.859 li
192.758 133.016 li
192.742 133.156 li
192.82 133.313 li
192.711 133.609 li
192.664 133.734 li
192.664 133.859 li
192.742 134 li
192.977 133.766 li
192.977 133.633 193.023 133.539 193.117 133.484 cv
193.125 133.391 193.164 133.324 193.227 133.281 cv
193.18 133.234 li
193.367 133.063 li
193.414 133.016 li
193.414 132.891 li
193.633 132.719 li
193.695 132.578 li
193.82 132.484 li
194.367 131.875 li
194.313 131.93 194.156 132.102 193.898 132.391 cv
193.898 132.422 li
193.93 132.328 li
194.102 132.109 li
194.242 131.875 li
194.242 131.734 li
194.445 131.672 li
194.477 131.484 li
194.523 131.422 li
194.539 131.359 li
194.539 131.266 li
194.742 131.063 li
194.742 131.043 194.742 131.023 194.742 131 cv
194.73 130.969 194.727 130.949 194.727 130.938 cv
194.727 130.773 194.82 130.68 195.008 130.656 cv
195.09 130.492 195.215 130.391 195.383 130.359 cv
195.461 130.234 li
195.492 130.203 li
195.574 130.09 195.699 130.008 195.867 129.953 cv
195.992 129.797 li
196.336 129.797 li
196.508 130 li
196.664 130.078 li
196.664 130.125 li
196.773 130.156 li
196.789 130.453 li
197.039 130.594 li
196.93 130.891 li
197.086 131.234 li
197.086 131.625 li
197.195 132.156 li
197.227 132.656 li
197.352 132.953 li
197.445 133.313 li
197.496 133.375 197.539 133.461 197.57 133.563 cv
197.82 133.625 li
197.82 133.906 li
197.961 134.063 li
197.961 134.094 li
198.008 134.109 li
198.07 134.203 li
198.133 134.125 li
198.109 134.125 198.133 134.133 198.195 134.141 cv
198.297 134.141 198.406 134.047 198.523 133.859 cv
198.68 133.828 li
198.727 133.75 li
198.758 133.68 198.813 133.621 198.898 133.578 cv
198.992 133.594 li
199.055 133.547 li
199.07 133.469 li
199.102 133.422 li
199.195 133.352 199.258 133.25 199.289 133.125 cv
199.445 132.953 li
199.477 132.828 li
199.57 132.609 li
199.836 132.5 li
200.211 132.625 li
200.336 133.031 li
200.336 133.043 200.34 133.055 200.352 133.063 cv
200.352 133.086 200.352 133.102 200.352 133.109 cv
200.352 133.109 li
cp
f
206 133.188 mo
205.734 133.438 li
205.719 133.531 li
205.688 133.699 205.609 133.836 205.484 133.938 cv
205.254 134.355 204.941 134.664 204.547 134.859 cv
204.328 135.031 li
204.156 135.047 li
203.922 135.219 li
203.766 135.234 li
203.422 135.453 li
203.203 135.438 li
202.953 135.547 li
202.75 135.484 li
202.656 135.578 li
202.391 135.531 li
202.125 135.578 li
202.016 135.484 li
201.734 135.438 li
201.328 135.125 li
201.109 134.844 li
200.973 134.668 200.906 134.516 200.906 134.391 cv
200.906 134.359 li
200.766 134.141 li
200.766 133.969 li
200.734 133.855 200.719 133.75 200.719 133.656 cv
200.719 133.563 li
200.656 133.313 li
200.719 133.156 li
200.656 133.031 li
200.828 132.766 li
200.797 132.547 li
200.906 132.188 li
200.953 132.094 li
201.016 131.766 li
200.984 131.703 li
201.156 131.531 li
201.188 131.391 li
201.297 131.063 li
201.469 130.672 li
201.734 130.453 li
201.781 130.328 li
201.875 130.172 li
201.891 130.031 li
202.125 129.766 li
202.176 129.746 202.238 129.727 202.313 129.703 cv
202.352 129.527 202.586 129.422 203.016 129.391 cv
203.379 129.477 203.613 129.574 203.719 129.688 cv
203.82 129.711 203.898 129.75 203.953 129.813 cv
204.25 129.828 li
204.438 130.078 li
204.488 130.172 204.523 130.266 204.547 130.359 cv
204.656 130.469 li
204.609 130.688 li
204.617 130.75 204.625 130.855 204.625 131 cv
204.703 131.047 li
204.703 131.266 li
204.75 131.688 li
204.551 131.887 204.328 132 204.078 132.031 cv
203.953 131.793 203.789 131.609 203.594 131.484 cv
203.563 131.016 li
203.484 130.859 li
203.484 130.75 li
203.344 130.594 li
203.266 130.531 li
203.141 130.578 li
202.953 130.578 li
202.836 130.602 202.723 130.688 202.609 130.844 cv
202.492 130.992 202.383 131.148 202.281 131.313 cv
202.266 131.453 li
202.172 131.531 li
202.172 131.781 li
202 131.969 li
201.766 132.594 li
201.781 132.75 li
201.672 133.016 li
201.719 133.313 li
201.625 133.359 li
201.594 133.75 li
201.609 133.828 li
201.781 133.984 li
201.859 134.281 li
202.047 134.344 li
202.063 134.453 li
202.297 134.5 li
202.484 134.531 li
202.547 134.5 202.625 134.484 202.719 134.484 cv
202.813 134.484 li
202.926 134.434 203.031 134.406 203.125 134.406 cv
203.188 134.375 203.27 134.352 203.375 134.328 cv
203.488 134.172 203.648 134.094 203.859 134.094 cv
203.938 134.094 li
203.988 134.094 204.02 134.074 204.031 134.031 cv
204.133 133.875 204.301 133.773 204.531 133.719 cv
204.789 133.492 204.938 133.305 204.969 133.156 cv
205.102 133.086 205.191 132.969 205.234 132.813 cv
205.313 132.75 li
205.359 132.438 li
205.785 132.5 206 132.715 206 133.078 cv
206 133.188 li
cp
f
210.844 132.438 mo
210.828 132.359 li
210.766 132.297 210.727 132.229 210.719 132.156 cv
210.75 132.078 li
210.625 131.813 li
210.656 131.547 li
210.594 131.484 li
210.477 131.391 210.414 131.32 210.406 131.266 cv
210.32 131.227 210.281 131.133 210.281 130.984 cv
210.188 130.969 li
210.031 130.688 li
209.906 130.594 li
209.609 130.469 li
209.5 130.453 li
209.438 130.453 209.395 130.434 209.375 130.391 cv
209.109 130.703 li
208.922 131.094 li
208.625 131.25 li
208.578 131.406 li
208.438 131.469 li
208.391 131.828 li
208.219 131.922 li
208.188 132.047 208.172 132.168 208.172 132.281 cv
207.938 132.484 li
208.016 132.531 li
208.016 132.648 207.973 132.746 207.891 132.828 cv
207.859 132.914 207.816 133.008 207.766 133.109 cv
207.766 133.219 li
207.734 133.281 li
207.75 133.438 li
207.594 133.828 li
207.625 133.891 li
207.625 134.281 li
207.563 134.484 li
207.578 134.672 li
207.703 134.859 li
207.906 134.922 li
207.969 134.953 li
208.078 134.906 li
208.438 134.922 li
208.5 134.781 li
208.563 134.781 li
208.613 134.781 208.645 134.797 208.656 134.828 cv
208.781 134.781 li
208.891 134.828 li
209.078 134.703 li
209.109 134.656 li
209.234 134.641 li
209.297 134.539 209.445 134.434 209.688 134.328 cv
209.719 134.25 li
210 134.063 li
210.156 133.828 li
210.375 133.719 li
210.391 133.656 li
210.453 133.5 li
210.453 133.313 li
210.625 133.172 li
210.688 133.078 li
210.75 133 li
210.719 132.887 210.703 132.805 210.703 132.75 cv
210.703 132.668 210.727 132.578 210.781 132.484 cv
210.844 132.438 li
cp
211.766 132.094 mo
211.672 132.344 li
211.672 132.594 211.66 132.789 211.641 132.922 cv
211.547 133.063 li
211.547 133.219 li
211.484 133.313 li
211.438 133.516 li
211.281 133.672 li
211.188 134.016 li
211.078 134.063 li
211.016 134.219 li
210.859 134.313 li
210.734 134.547 li
210.578 134.641 li
210.563 134.797 li
210.297 134.906 li
210.172 135.074 210.02 135.18 209.844 135.219 cv
209.781 135.234 li
209.656 135.43 209.484 135.531 209.266 135.531 cv
209.172 135.582 209.066 135.609 208.953 135.609 cv
208.813 135.719 li
208.672 135.75 li
208.484 135.891 li
208.313 135.875 li
208.109 135.938 li
207.875 135.844 li
207.266 135.797 li
207.063 135.469 li
206.75 135.156 li
206.828 134.922 li
206.609 134.453 li
206.703 134.266 li
206.641 133.938 li
206.703 133.719 li
206.691 133.594 206.688 133.5 206.688 133.438 cv
206.688 133.262 206.734 133.133 206.828 133.047 cv
206.828 132.953 206.883 132.805 207 132.594 cv
207.078 132.594 li
207.047 132.484 li
207.094 132.297 li
207.094 132.078 li
207.164 131.996 207.207 131.945 207.219 131.922 cv
207.172 131.719 li
207.172 131.672 li
207.234 131.539 207.266 131.402 207.266 131.266 cv
207.563 130.859 li
207.563 130.859 207.57 130.852 207.594 130.828 cv
207.613 130.809 207.633 130.789 207.656 130.766 cv
207.641 130.719 li
207.703 130.719 li
207.906 130.469 li
207.922 130.156 li
208.281 130.031 li
208.406 129.949 208.488 129.809 208.531 129.609 cv
208.703 129.609 li
208.805 129.547 208.898 129.516 208.984 129.516 cv
209.066 129.516 209.148 129.539 209.234 129.578 cv
209.375 129.594 li
209.75 129.453 li
209.938 129.641 li
210.094 129.734 li
210.203 129.734 li
210.422 129.844 li
210.531 129.844 li
210.656 129.961 210.797 130.117 210.953 130.313 cv
210.984 130.375 li
211.078 130.438 li
211.375 130.813 li
211.641 131.469 li
211.641 131.609 li
211.766 132.094 li
cp
f
217.262 130.953 mo
217.215 130.922 li
217.141 130.883 217.078 130.82 217.027 130.734 cv
216.984 130.652 216.938 130.57 216.887 130.484 cv
216.793 130.465 216.715 130.406 216.652 130.313 cv
216.574 130.313 li
216.309 130.156 li
215.996 130.078 li
215.684 130.125 li
215.355 130.203 li
215.262 130.125 li
215.152 130.172 li
215.152 130.219 li
215.027 130.25 li
214.941 130.398 214.813 130.527 214.637 130.641 cv
214.527 130.875 li
214.418 130.969 li
214.309 131.188 li
214.277 131.656 li
214.152 131.766 li
214.152 132.016 li
214.012 132.109 li
214.027 132.453 li
213.793 132.906 li
213.746 133.141 li
213.73 133.5 li
213.809 133.656 li
213.715 133.813 li
213.793 133.906 li
213.652 134.156 li
213.73 134.281 li
213.777 134.453 li
213.871 134.5 li
213.965 134.5 li
214.09 134.391 li
214.199 134.406 li
214.434 134.313 li
214.465 134.234 li
214.73 134.125 li
214.762 134.047 li
214.934 133.953 li
214.934 133.922 li
215.277 133.563 li
215.449 133.484 li
215.527 133.297 li
215.715 133.281 li
215.934 133.016 li
215.902 133 li
215.996 132.891 li
216.137 132.609 li
216.262 132.484 li
216.324 132.172 li
216.559 132.094 li
216.715 131.875 li
216.762 131.828 li
216.762 131.578 li
216.98 131.484 li
217.262 130.953 li
cp
219.355 134.359 mo
219.184 134.953 li
219.074 135.125 li
218.926 135.344 218.781 135.453 218.637 135.453 cv
218.52 135.453 218.371 135.375 218.184 135.219 cv
217.918 134.813 li
217.793 134.563 li
217.73 134.313 li
217.605 133.891 li
217.605 133.281 li
217.559 132.75 li
217.605 132.453 li
217.574 132.359 li
217.23 132.859 li
217.184 132.859 li
217.168 132.891 li
216.934 133.281 li
216.543 133.688 li
216.246 134.094 li
215.934 134.391 li
215.848 134.547 215.75 134.68 215.637 134.781 cv
215.355 134.984 li
215.199 135.203 li
214.887 135.313 li
214.762 135.453 li
214.449 135.516 li
214.199 135.672 li
214.152 135.656 li
214.137 135.719 li
213.699 135.672 li
213.184 135.313 li
213.035 135.148 212.949 134.969 212.918 134.781 cv
212.926 134.773 212.941 134.758 212.965 134.734 cv
212.984 134.715 213 134.699 213.012 134.688 cv
213 134.68 212.949 134.656 212.855 134.625 cv
212.73 134.344 li
212.809 134.234 li
212.73 134.078 li
212.809 133.875 li
212.777 133.625 li
212.871 133.219 li
212.871 132.781 li
212.965 132.656 li
212.965 132.359 li
213.074 132.188 li
213.09 131.969 li
213.121 131.938 li
213.121 131.766 li
213.262 131.531 li
213.293 131.344 li
213.371 131.203 li
213.418 131.125 li
213.48 130.781 li
213.574 130.484 li
213.637 130.422 li
213.668 130.234 li
213.855 130.047 li
213.875 129.996 213.918 129.898 213.98 129.75 cv
214.324 129.594 li
214.559 129.359 li
215.199 129.172 li
215.301 129.172 215.379 129.168 215.434 129.156 cv
215.527 129.219 li
215.559 129.109 li
215.887 129.078 li
215.996 129.109 li
216.09 129.109 li
216.168 129.172 li
216.434 129.188 li
216.496 129.141 li
216.574 129.203 li
216.715 129.219 li
216.715 129.313 li
216.762 129.359 li
217.043 129.406 li
217.246 129.656 li
217.527 129.859 li
217.605 130 li
217.621 130.016 li
217.668 129.813 li
217.762 129.641 li
217.73 129.313 li
217.793 128.719 li
217.699 128.5 li
217.809 128.328 li
217.762 128.172 li
217.793 127.781 li
217.762 127.453 li
217.637 127.359 li
217.824 127.125 li
217.824 126.969 li
217.824 126.813 217.766 126.641 217.652 126.453 cv
217.73 126.453 li
217.887 126.234 li
218.02 126.203 218.145 126.188 218.262 126.188 cv
218.395 126.188 218.504 126.219 218.59 126.281 cv
218.734 126.324 218.809 126.547 218.809 126.953 cv
218.73 126.953 li
218.73 127 li
218.855 127.109 li
218.762 127.344 li
218.887 127.609 li
218.824 127.688 li
218.844 127.75 218.855 127.82 218.855 127.891 cv
218.855 127.953 218.844 128.023 218.824 128.094 cv
218.887 128.172 li
218.906 128.215 218.918 128.277 218.918 128.359 cv
218.918 128.465 218.895 128.559 218.855 128.641 cv
218.801 129.227 218.762 129.59 218.73 129.734 cv
218.73 129.766 218.73 129.809 218.73 129.859 cv
218.73 129.934 218.719 130.012 218.699 130.094 cv
218.699 130.188 li
218.699 130.293 218.676 130.418 218.637 130.563 cv
218.59 130.984 li
218.527 131.094 li
218.574 131.219 li
218.496 131.422 li
218.574 131.609 li
218.465 132.047 li
218.527 132.359 li
218.48 132.547 li
218.512 132.828 li
218.543 132.891 218.559 132.953 218.559 133.016 cv
218.559 133.059 218.551 133.094 218.543 133.125 cv
218.621 133.203 li
218.512 133.484 li
218.621 133.781 li
218.59 133.859 li
218.621 133.953 li
218.59 134.031 li
218.621 134.078 li
218.746 134.188 li
218.996 134.219 li
219.355 134.359 li
cp
f
223.777 130.188 mo
223.777 130.168 223.762 130.117 223.73 130.031 cv
223.668 130.016 li
223.637 130.031 li
223.625 130.031 223.605 130.031 223.574 130.031 cv
223.563 130.043 223.547 130.047 223.527 130.047 cv
223.516 130.047 223.5 130.043 223.48 130.031 cv
223.457 130.031 223.441 130.031 223.434 130.031 cv
223.293 130.125 li
223.168 130.141 li
223.105 130.172 li
222.871 130.469 li
222.715 130.594 li
222.496 130.984 li
222.355 131.063 li
222.332 131.219 222.27 131.355 222.168 131.469 cv
222.105 131.563 li
222.207 131.5 222.328 131.469 222.465 131.469 cv
222.559 131.422 li
222.605 131.297 li
222.793 131.313 li
222.902 131.141 li
222.996 131.141 li
223.152 131.203 li
223.215 131 li
223.309 131 li
223.309 130.844 li
223.496 130.797 li
223.543 130.75 li
223.574 130.625 li
223.746 130.359 li
223.766 130.32 223.777 130.262 223.777 130.188 cv
223.777 130.188 li
cp
225.168 134.234 mo
225.168 134.34 225.082 134.477 224.918 134.641 cv
224.863 134.797 224.793 134.922 224.699 135.016 cv
224.621 135.031 li
224.465 135.297 li
224.215 135.328 li
223.949 135.5 li
223.809 135.75 li
223.652 135.719 li
223.547 135.77 223.465 135.801 223.402 135.813 cv
223.309 135.938 li
223.285 135.926 223.246 135.922 223.184 135.922 cv
223.066 135.922 222.953 136.004 222.84 136.172 cv
222.637 136 li
222.605 136.008 222.551 136.016 222.48 136.016 cv
222.355 136.016 222.25 136 222.168 135.969 cv
221.934 135.969 li
221.824 135.891 li
221.457 135.836 221.234 135.703 221.152 135.484 cv
221.152 135.438 li
220.98 135.359 li
220.887 135.125 li
220.73 135.016 li
220.73 134.797 li
220.559 134.188 li
220.59 133.688 li
220.637 133.453 li
220.637 133.156 li
220.715 132.938 li
220.699 132.844 li
220.793 132.672 li
220.762 132.703 li
220.762 132.621 220.785 132.531 220.84 132.438 cv
220.84 132.359 li
220.793 132.031 li
220.793 131.875 220.863 131.734 221.012 131.609 cv
221.012 131.59 221.012 131.563 221.012 131.531 cv
221.012 131.492 220.996 131.414 220.965 131.297 cv
220.934 131.184 220.918 131.102 220.918 131.047 cv
220.918 130.934 220.949 130.82 221.012 130.703 cv
221.082 130.809 221.188 130.859 221.324 130.859 cv
221.371 130.859 li
221.391 130.828 221.434 130.789 221.496 130.734 cv
221.566 130.508 221.672 130.313 221.809 130.156 cv
221.855 130.094 li
221.855 130.063 221.887 129.961 221.949 129.781 cv
222.059 129.781 li
222.09 129.703 li
222.199 129.672 li
222.238 129.602 222.266 129.559 222.277 129.547 cv
222.297 129.527 222.402 129.469 222.59 129.375 cv
222.621 129.305 222.676 129.242 222.762 129.188 cv
222.793 129.168 222.84 129.148 222.902 129.125 cv
222.949 129.047 li
223.199 128.965 223.359 128.922 223.434 128.922 cv
223.504 128.922 223.574 128.945 223.637 128.984 cv
223.699 128.969 li
223.809 129.016 li
223.922 129.102 224.031 129.172 224.137 129.234 cv
224.371 129.406 li
224.371 129.469 li
224.59 129.637 224.699 129.875 224.699 130.188 cv
224.652 130.328 li
224.699 130.781 li
224.574 130.859 li
224.434 131.234 li
224.168 131.531 li
224.152 131.75 li
223.848 131.969 223.574 132.141 223.324 132.266 cv
223.238 132.402 223.109 132.469 222.934 132.469 cv
222.902 132.469 li
222.621 132.625 li
222.402 132.625 li
222.074 132.766 li
221.824 132.641 li
221.793 132.641 li
221.77 132.715 221.75 132.828 221.73 132.984 cv
221.621 133.063 li
221.605 133.234 li
221.527 133.469 li
221.547 133.699 221.559 133.844 221.559 133.906 cv
221.512 133.953 li
221.512 134.07 221.504 134.156 221.496 134.219 cv
221.496 134.23 221.488 134.242 221.48 134.25 cv
221.48 134.273 221.48 134.289 221.48 134.297 cv
221.48 134.371 221.516 134.434 221.59 134.484 cv
221.621 134.59 221.668 134.656 221.73 134.688 cv
221.824 134.766 li
222.137 134.859 li
222.137 134.906 li
222.246 134.922 li
222.73 134.953 li
223.012 134.906 li
223.152 134.813 li
223.23 134.781 li
223.371 134.578 li
223.434 134.563 li
223.793 134.453 li
223.824 134.391 223.887 134.336 223.98 134.281 cv
224.012 134.219 li
224.199 134.18 224.309 134.078 224.34 133.922 cv
224.465 133.789 224.629 133.719 224.84 133.719 cv
224.902 133.719 li
225.078 133.93 225.168 134.102 225.168 134.234 cv
225.168 134.234 li
cp
f
231.352 130.172 mo
231.242 130.625 li
230.727 130.703 li
230.445 130.875 li
230.258 130.797 li
230.055 130.906 li
229.852 131 li
229.711 131.094 li
229.711 131.141 li
229.414 131.281 li
229.227 131.531 li
229.117 131.531 li
228.969 131.699 228.867 131.797 228.805 131.828 cv
228.602 132.156 li
228.539 132.188 li
228.508 132.262 228.477 132.371 228.445 132.516 cv
228.242 132.594 li
228.164 132.75 li
228.039 132.891 li
228.023 133.109 li
227.898 133.156 li
227.898 133.359 li
227.867 133.406 li
227.887 133.449 227.918 133.5 227.961 133.563 cv
227.758 133.641 li
227.727 133.828 li
227.586 134.063 li
227.664 134.234 li
227.492 134.5 li
227.5 134.594 227.508 134.656 227.508 134.688 cv
227.508 134.699 227.508 134.719 227.508 134.75 cv
227.508 134.773 227.508 134.793 227.508 134.813 cv
227.523 134.938 li
227.773 135.188 li
227.586 135.516 li
227.414 135.641 li
227.023 135.844 li
226.508 135.625 li
226.508 135.313 li
226.445 135.172 li
226.492 134.969 li
226.469 134.824 226.461 134.715 226.461 134.641 cv
226.461 134.609 226.465 134.57 226.477 134.516 cv
226.477 134.477 226.477 134.445 226.477 134.422 cv
226.461 134.281 li
226.398 134.219 226.367 134.148 226.367 134.063 cv
226.367 133.992 226.398 133.906 226.461 133.813 cv
226.461 133.762 226.449 133.621 226.43 133.391 cv
226.477 133.344 li
226.43 133.156 li
226.461 133 li
226.43 132.891 li
226.477 132.578 li
226.398 132.438 li
226.445 132.281 li
226.398 132.094 li
226.406 132.043 226.414 131.969 226.414 131.875 cv
226.414 131.742 226.391 131.648 226.352 131.594 cv
226.414 131.516 li
226.352 131.266 li
226.227 131.078 li
226.289 130.859 li
226.242 130.766 li
226.18 130.438 li
226.18 130.328 li
226.137 130.266 226.117 130.195 226.117 130.109 cv
226.117 129.922 226.32 129.766 226.727 129.641 cv
227.086 129.703 li
227.148 129.969 li
227.289 130.156 li
227.242 130.531 li
227.273 130.719 227.309 130.922 227.352 131.141 cv
227.383 131.375 li
227.391 131.398 227.402 131.449 227.414 131.531 cv
227.414 131.586 227.391 131.641 227.352 131.703 cv
227.383 131.984 li
227.367 132.297 li
227.305 132.438 li
227.352 132.484 li
227.367 132.625 li
227.43 132.563 227.465 132.496 227.477 132.422 cv
227.523 132.219 li
227.555 132.156 227.594 132.109 227.648 132.078 cv
227.711 131.875 li
227.898 131.766 li
227.93 131.594 li
228.086 131.422 li
228.195 131.219 li
228.32 131.086 228.438 131 228.555 130.969 cv
228.57 130.922 li
228.711 130.734 li
228.852 130.703 li
228.883 130.656 li
228.945 130.578 li
229.102 130.484 li
229.18 130.391 li
229.258 130.406 li
229.383 130.344 li
229.43 130.266 li
229.602 130.188 li
229.836 130.031 li
230.18 129.922 li
230.305 129.902 230.371 129.891 230.383 129.891 cv
230.383 129.902 230.383 129.906 230.383 129.906 cv
230.371 129.906 230.367 129.914 230.367 129.922 cv
230.383 129.922 li
230.422 129.922 230.48 129.902 230.555 129.859 cv
230.594 129.82 230.656 129.797 230.742 129.797 cv
230.781 129.797 230.852 129.809 230.945 129.828 cv
231.184 129.84 231.32 129.953 231.352 130.172 cv
231.352 130.172 li
cp
f
.5 lw
2 lj
211.227 37.4341 mo
211.563 9.76221 li
32.5591 9.99219 li
0 0 0 rgb
@
25.043 10 mo
32.5552 7.25391 li
32.563 12.7271 li
25.043 10 li
cp
f
25.043 10 mo
32.5552 7.25391 li
32.563 12.7271 li
25.043 10 li
cp
@
4.26611 7.62109 mo
4.10889 8.26221 3.81299 9.44922 3.28076 10.4648 cv
2.79688 11.4019 2.26611 12.0898 1.67188 12.0898 cv
1.20313 12.0898 .90625 11.6841 .90625 10.3867 cv
.90625 9.80908 1 8.99609 1.35889 7.62109 cv
4.26611 7.62109 li
cp
1.46875 7.18408 mo
1.70313 6.29297 1.98389 5.16797 2.54688 4.18408 cv
2.92188 3.49609 3.43799 2.71484 4.06299 2.71484 cv
4.75 2.71484 4.82813 3.60498 4.82813 4.40186 cv
4.82813 5.08984 4.71875 5.79297 4.39111 7.18408 cv
1.46875 7.18408 li
cp
5.75 5.26221 mo
5.75 4.35498 5.5 2.40186 4.07813 2.40186 cv
2.14111 2.40186 0 6.33984 0 9.54297 cv
0 10.855 .391113 12.4019 1.67188 12.4019 cv
3.64111 12.4019 5.75 8.40186 5.75 5.26221 cv
5.75 5.26221 li
cp
f
9.17188 12.23 mo
9.17188 11.3091 8.82813 10.7617 8.28076 10.7617 cv
7.82813 10.7617 7.54688 11.1211 7.54688 11.5117 cv
7.54688 11.8867 7.82813 12.2461 8.28076 12.2461 cv
8.45313 12.2461 8.625 12.1841 8.76611 12.0591 cv
8.81299 12.043 8.82813 12.0269 8.84375 12.0269 cv
8.85889 12.0269 8.875 12.043 8.875 12.23 cv
8.875 13.2617 8.375 14.105 7.92188 14.5591 cv
7.76611 14.7148 7.76611 14.7461 7.76611 14.793 cv
7.76611 14.8872 7.84375 14.9341 7.90576 14.9341 cv
8.06299 14.9341 9.17188 13.8711 9.17188 12.23 cv
9.17188 12.23 li
cp
f
20.9648 7.05908 mo
20.9648 6.43408 20.7148 6.07422 20.418 6.07422 cv
20.043 6.07422 19.668 6.41797 19.668 6.72998 cv
19.668 6.87109 19.7461 7.02686 19.8872 7.15186 cv
20.1211 7.35498 20.3711 7.74609 20.3711 8.32422 cv
20.3711 8.88672 20.105 9.68408 19.668 10.3242 cv
19.2461 10.918 18.73 11.4019 18.0742 11.4019 cv
17.293 11.4019 16.855 10.8872 16.73 10.1372 cv
16.8872 9.77686 17.1992 8.88672 17.1992 8.49609 cv
17.1992 8.32422 17.1372 8.18408 16.9492 8.18408 cv
16.8398 8.18408 16.6841 8.21484 16.5742 8.41797 cv
16.418 8.69922 16.2461 9.60498 16.2461 10.105 cv
15.793 10.7617 15.23 11.4019 14.355 11.4019 cv
13.4341 11.4019 13.1372 10.5742 13.1372 9.79297 cv
13.1372 8.04297 14.5591 6.57422 14.5591 6.40186 cv
14.5591 6.24609 14.4492 6.13672 14.293 6.13672 cv
14.1211 6.13672 14.0269 6.30908 13.9341 6.44922 cv
13.23 7.47998 12.6992 9.13672 12.6992 10.4019 cv
12.6992 11.3711 13.0122 12.4019 14.1519 12.4019 cv
15.1519 12.4019 15.8091 11.6992 16.3091 10.9341 cv
16.4341 11.7461 16.98 12.4019 17.8398 12.4019 cv
18.9341 12.4019 19.605 11.543 20.105 10.4961 cv
20.4341 9.82422 20.9648 7.91797 20.9648 7.05908 cv
20.9648 7.05908 li
cp
f
174.262 79.8672 mo
176.605 79.8672 li
176.777 79.8672 177.277 79.8672 177.277 79.3984 cv
177.277 79.0547 176.996 79.0547 176.73 79.0547 cv
172.824 79.0547 li
172.543 79.0547 171.996 79.0547 171.387 79.7109 cv
170.918 80.2109 170.527 80.8828 170.527 80.9609 cv
170.527 80.9766 170.527 81.1016 170.699 81.1016 cv
170.809 81.1016 170.84 81.0547 170.918 80.9453 cv
171.605 79.8672 172.402 79.8672 172.699 79.8672 cv
173.855 79.8672 li
172.48 84.3516 li
172.434 84.5078 172.34 84.8047 172.34 84.8672 cv
172.34 85.0078 172.434 85.2422 172.746 85.2422 cv
173.215 85.2422 173.277 84.8516 173.324 84.6328 cv
174.262 79.8672 li
cp
f
180.484 86.3672 mo
180.438 86.5703 180.359 86.8984 180.359 86.9453 cv
180.359 87.1641 180.531 87.2578 180.688 87.2578 cv
180.859 87.2578 181.016 87.1328 181.063 87.0391 cv
181.109 86.9609 181.188 86.6484 181.234 86.4453 cv
181.297 86.2578 181.391 85.8047 181.453 85.5547 cv
181.516 85.3516 181.578 85.1328 181.625 84.9141 cv
181.734 84.4922 181.734 84.4609 181.922 84.1641 cv
182.234 83.6797 182.719 83.1328 183.484 83.1328 cv
184.031 83.1328 184.063 83.5859 184.063 83.8203 cv
184.063 84.3984 183.641 85.4766 183.484 85.8984 cv
183.375 86.1641 183.344 86.2578 183.344 86.4141 cv
183.344 86.9453 183.766 87.2578 184.266 87.2578 cv
185.25 87.2578 185.672 85.9141 185.672 85.7734 cv
185.672 85.6328 185.547 85.6328 185.516 85.6328 cv
185.375 85.6328 185.375 85.6953 185.328 85.8047 cv
185.109 86.5859 184.688 86.9922 184.297 86.9922 cv
184.094 86.9922 184.047 86.8516 184.047 86.6484 cv
184.047 86.4141 184.109 86.2891 184.281 85.8516 cv
184.391 85.5547 184.797 84.5234 184.797 83.9766 cv
184.797 83.8203 184.797 83.3984 184.438 83.1172 cv
184.266 82.9922 183.984 82.8516 183.531 82.8516 cv
182.641 82.8516 182.109 83.4297 181.797 83.8359 cv
181.719 83.0078 181.031 82.8516 180.531 82.8516 cv
179.719 82.8516 179.172 83.3516 178.875 83.7422 cv
178.813 83.0703 178.234 82.8516 177.828 82.8516 cv
177.406 82.8516 177.188 83.1641 177.063 83.3828 cv
176.844 83.7422 176.703 84.3047 176.703 84.3516 cv
176.703 84.4766 176.844 84.4766 176.875 84.4766 cv
177.016 84.4766 177.016 84.4453 177.094 84.1797 cv
177.234 83.6016 177.422 83.1328 177.797 83.1328 cv
178.063 83.1328 178.125 83.3516 178.125 83.6016 cv
178.125 83.7891 178.031 84.1484 177.969 84.4141 cv
177.906 84.6797 177.797 85.0859 177.75 85.3047 cv
177.438 86.5547 li
177.406 86.6797 177.344 86.9141 177.344 86.9453 cv
177.344 87.1641 177.516 87.2578 177.672 87.2578 cv
177.859 87.2578 178.016 87.1328 178.063 87.0391 cv
178.109 86.9609 178.188 86.6484 178.234 86.4453 cv
178.281 86.2578 178.391 85.8047 178.453 85.5547 cv
178.5 85.3516 178.563 85.1328 178.609 84.9141 cv
178.719 84.5078 178.734 84.4297 179.031 84.0234 cv
179.297 83.6328 179.75 83.1328 180.484 83.1328 cv
181.063 83.1328 181.063 83.6328 181.063 83.8203 cv
181.063 84.0547 181.031 84.1797 180.906 84.7266 cv
180.484 86.3672 li
cp
f
332.445 81.3984 mo
332.445 80.7734 332.195 80.4141 331.898 80.4141 cv
331.523 80.4141 331.148 80.7578 331.148 81.0703 cv
331.148 81.2109 331.227 81.3672 331.367 81.4922 cv
331.602 81.6953 331.852 82.0859 331.852 82.6641 cv
331.852 83.2266 331.586 84.0234 331.148 84.6641 cv
330.727 85.2578 330.211 85.7422 329.555 85.7422 cv
328.773 85.7422 328.336 85.2266 328.211 84.4766 cv
328.367 84.1172 328.68 83.2266 328.68 82.8359 cv
328.68 82.6641 328.617 82.5234 328.43 82.5234 cv
328.32 82.5234 328.164 82.5547 328.055 82.7578 cv
327.898 83.0391 327.727 83.9453 327.727 84.4453 cv
327.273 85.1016 326.711 85.7422 325.836 85.7422 cv
324.914 85.7422 324.617 84.9141 324.617 84.1328 cv
324.617 82.3828 326.039 80.9141 326.039 80.7422 cv
326.039 80.5859 325.93 80.4766 325.773 80.4766 cv
325.602 80.4766 325.508 80.6484 325.414 80.7891 cv
324.711 81.8203 324.18 83.4766 324.18 84.7422 cv
324.18 85.7109 324.492 86.7422 325.633 86.7422 cv
326.633 86.7422 327.289 86.0391 327.789 85.2734 cv
327.914 86.0859 328.461 86.7422 329.32 86.7422 cv
330.414 86.7422 331.086 85.8828 331.586 84.8359 cv
331.914 84.1641 332.445 82.2578 332.445 81.3984 cv
332.445 81.3984 li
cp
f
336.926 87.8828 mo
336.879 88.0859 336.801 88.4141 336.801 88.4609 cv
336.801 88.6797 336.973 88.7734 337.129 88.7734 cv
337.301 88.7734 337.457 88.6484 337.504 88.5547 cv
337.551 88.4766 337.629 88.1641 337.676 87.9609 cv
337.738 87.7734 337.832 87.3203 337.895 87.0703 cv
337.957 86.8672 338.02 86.6484 338.066 86.4297 cv
338.176 86.0078 338.176 85.9766 338.363 85.6797 cv
338.676 85.1953 339.16 84.6484 339.926 84.6484 cv
340.473 84.6484 340.504 85.1016 340.504 85.3359 cv
340.504 85.9141 340.082 86.9922 339.926 87.4141 cv
339.816 87.6797 339.785 87.7734 339.785 87.9297 cv
339.785 88.4609 340.207 88.7734 340.707 88.7734 cv
341.691 88.7734 342.113 87.4297 342.113 87.2891 cv
342.113 87.1484 341.988 87.1484 341.957 87.1484 cv
341.816 87.1484 341.816 87.2109 341.77 87.3203 cv
341.551 88.1016 341.129 88.5078 340.738 88.5078 cv
340.535 88.5078 340.488 88.3672 340.488 88.1641 cv
340.488 87.9297 340.551 87.8047 340.723 87.3672 cv
340.832 87.0703 341.238 86.0391 341.238 85.4922 cv
341.238 85.3359 341.238 84.9141 340.879 84.6328 cv
340.707 84.5078 340.426 84.3672 339.973 84.3672 cv
339.082 84.3672 338.551 84.9453 338.238 85.3516 cv
338.16 84.5234 337.473 84.3672 336.973 84.3672 cv
336.16 84.3672 335.613 84.8672 335.316 85.2578 cv
335.254 84.5859 334.676 84.3672 334.27 84.3672 cv
333.848 84.3672 333.629 84.6797 333.504 84.8984 cv
333.285 85.2578 333.145 85.8203 333.145 85.8672 cv
333.145 85.9922 333.285 85.9922 333.316 85.9922 cv
333.457 85.9922 333.457 85.9609 333.535 85.6953 cv
333.676 85.1172 333.863 84.6484 334.238 84.6484 cv
334.504 84.6484 334.566 84.8672 334.566 85.1172 cv
334.566 85.3047 334.473 85.6641 334.41 85.9297 cv
334.348 86.1953 334.238 86.6016 334.191 86.8203 cv
333.879 88.0703 li
333.848 88.1953 333.785 88.4297 333.785 88.4609 cv
333.785 88.6797 333.957 88.7734 334.113 88.7734 cv
334.301 88.7734 334.457 88.6484 334.504 88.5547 cv
334.551 88.4766 334.629 88.1641 334.676 87.9609 cv
334.723 87.7734 334.832 87.3203 334.895 87.0703 cv
334.941 86.8672 335.004 86.6484 335.051 86.4297 cv
335.16 86.0234 335.176 85.9453 335.473 85.5391 cv
335.738 85.1484 336.191 84.6484 336.926 84.6484 cv
337.504 84.6484 337.504 85.1484 337.504 85.3359 cv
337.504 85.5703 337.473 85.6953 337.348 86.2422 cv
336.926 87.8828 li
cp
f
357.359 22.2578 mo
359.703 22.2578 li
359.875 22.2578 360.375 22.2578 360.375 21.7891 cv
360.375 21.4448 360.094 21.4448 359.828 21.4448 cv
355.922 21.4448 li
355.641 21.4448 355.094 21.4448 354.484 22.1021 cv
354.016 22.6021 353.625 23.2729 353.625 23.3521 cv
353.625 23.3672 353.625 23.4922 353.797 23.4922 cv
353.906 23.4922 353.938 23.4448 354.016 23.3359 cv
354.703 22.2578 355.5 22.2578 355.797 22.2578 cv
356.953 22.2578 li
355.578 26.7422 li
355.531 26.8979 355.438 27.1948 355.438 27.2578 cv
355.438 27.3979 355.531 27.6328 355.844 27.6328 cv
356.313 27.6328 356.375 27.2422 356.422 27.0229 cv
357.359 22.2578 li
cp
f
363.316 25.6948 mo
364.285 25.6948 li
364.473 25.6948 364.598 25.6948 364.598 25.4771 cv
364.598 25.3521 364.473 25.3521 364.301 25.3521 cv
363.395 25.3521 li
363.613 24.1021 363.691 23.6479 363.77 23.3672 cv
363.816 23.1641 364.035 22.9448 364.27 22.9448 cv
364.285 22.9448 364.551 22.9448 364.723 23.0698 cv
364.332 23.1948 364.301 23.5552 364.301 23.6021 cv
364.301 23.8198 364.473 23.9609 364.691 23.9609 cv
364.957 23.9609 365.254 23.7422 365.254 23.3672 cv
365.254 22.9302 364.77 22.6802 364.27 22.6802 cv
363.848 22.6802 363.363 22.9302 363.098 23.4141 cv
362.91 23.7729 362.832 24.2109 362.613 25.3521 cv
361.848 25.3521 li
361.66 25.3521 361.52 25.3521 361.52 25.5552 cv
361.52 25.6948 361.66 25.6948 361.832 25.6948 cv
362.551 25.6948 li
362.535 25.7578 361.926 29.2729 361.691 30.3198 cv
361.645 30.5391 361.473 31.2729 361.004 31.2729 cv
361.004 31.2729 360.77 31.2729 360.582 31.1641 cv
360.973 31.0229 361.004 30.6802 361.004 30.6172 cv
361.004 30.3979 360.848 30.2578 360.613 30.2578 cv
360.348 30.2578 360.066 30.4771 360.066 30.8521 cv
360.066 31.2891 360.52 31.5552 361.004 31.5552 cv
361.629 31.5552 362.066 30.8979 362.176 30.6948 cv
362.535 30.0391 362.754 28.8359 362.77 28.7109 cv
363.316 25.6948 li
cp
f
1 lw
0 lj
361.637 48.6558 mo
357.293 50.1719 li
357.391 45.5698 li
357.52 71.4341 mo
360.648 76.332 365.277 75.4839 367.855 69.5352 cv
370.434 63.582 369.984 54.7891 366.855 49.8911 cv
364.277 45.8521 360.586 45.6328 357.879 49.3628 cv
@
276.527 133.719 mo
276.473 133.855 276.41 133.953 276.34 134.016 cv
276.309 134.121 276.266 134.195 276.215 134.234 cv
276.16 134.328 276.105 134.398 276.043 134.438 cv
275.98 134.516 li
275.949 134.578 275.902 134.609 275.84 134.609 cv
275.762 134.75 li
275.668 134.75 li
275.59 134.875 li
275.48 134.906 li
275.402 135.016 li
275.324 135.063 li
275.188 135.063 275.074 135.105 274.98 135.188 cv
274.855 135.242 274.73 135.266 274.605 135.266 cv
274.469 135.266 274.34 135.234 274.215 135.172 cv
274.059 135.164 273.98 135.137 273.98 135.094 cv
273.793 135.063 li
273.746 135.031 li
273.668 134.859 li
273.512 134.734 li
273.406 134.609 273.348 134.496 273.34 134.391 cv
273.277 134.297 273.215 134.121 273.152 133.859 cv
273.012 133.641 li
273.012 133.516 li
272.902 133.094 li
272.918 132.922 li
272.84 132.484 li
272.887 132.141 li
272.809 132.047 li
272.668 132.391 li
272.488 132.59 272.387 132.711 272.355 132.75 cv
272.324 132.793 272.281 132.813 272.23 132.813 cv
272.219 132.813 272.203 132.809 272.184 132.797 cv
272.09 132.953 li
272.09 132.965 272.09 132.984 272.09 133.016 cv
272.09 133.07 272.121 133.102 272.184 133.109 cv
272.16 133.133 272.113 133.195 272.043 133.297 cv
272 133.383 271.969 133.434 271.949 133.453 cv
271.902 133.391 li
271.871 133.578 li
271.746 133.672 271.66 133.813 271.621 134 cv
271.527 134.125 271.379 134.297 271.184 134.516 cv
271.012 134.719 li
270.957 134.719 270.934 134.73 270.934 134.75 cv
270.934 134.766 li
270.879 134.902 270.781 135.008 270.637 135.078 cv
270.465 135.297 li
270.371 135.297 li
270.043 135.422 li
269.762 135.398 269.59 135.277 269.527 135.047 cv
269.512 134.906 li
269.418 134.719 li
269.418 134.563 li
269.309 134.156 li
269.309 134.031 li
269.23 133.891 li
269.277 133.453 li
269.266 133.414 269.262 133.352 269.262 133.266 cv
269.262 133.195 269.266 133.141 269.277 133.109 cv
269.262 133.016 li
269.262 132.969 li
269.199 132.813 li
269.309 132.547 li
269.285 132.477 269.262 132.355 269.23 132.188 cv
269.262 132.063 li
269.309 131.656 li
269.199 131.359 li
269.23 131.125 li
269.184 131 li
269.172 130.969 269.141 130.883 269.09 130.734 cv
268.98 130.781 li
268.809 131 li
268.637 131.156 li
268.309 131.578 li
268.277 131.734 li
268.043 131.984 li
267.934 132.188 li
267.84 132.297 li
267.809 132.508 267.703 132.652 267.527 132.734 cv
267.512 132.922 li
267.457 132.984 267.402 133.063 267.34 133.156 cv
267.277 133.242 267.234 133.293 267.215 133.313 cv
267.191 133.324 267.156 133.354 267.105 133.406 cv
266.934 133.641 li
266.934 133.797 266.871 133.906 266.746 133.969 cv
266.746 134.063 li
266.691 134.137 266.621 134.211 266.527 134.281 cv
266.512 134.25 li
266.465 134.453 li
266.391 134.453 266.324 134.543 266.262 134.719 cv
266.215 134.766 li
266.203 134.922 266.125 135.039 265.98 135.109 cv
265.777 135.297 li
265.629 135.371 265.531 135.406 265.48 135.406 cv
265.238 135.406 265.082 135.203 265.012 134.797 cv
264.949 134.5 li
264.949 134.479 264.949 134.449 264.949 134.406 cv
264.949 134.344 264.957 134.281 264.98 134.219 cv
264.918 133.953 li
264.949 133.719 li
264.918 133.5 li
264.938 133.305 264.969 133.184 265.012 133.141 cv
264.98 132.945 264.965 132.828 264.965 132.797 cv
264.965 132.547 li
265.004 132.484 265.051 132.402 265.105 132.297 cv
265.027 132.219 li
265.004 132.137 264.996 132.09 264.996 132.078 cv
264.996 132.016 265.051 131.906 265.168 131.75 cv
265.074 131.484 li
265.121 131.313 li
265.043 130.906 li
265.074 130.719 li
264.996 130.406 li
265.012 130.188 li
264.887 129.938 li
265.074 129.574 265.27 129.391 265.48 129.391 cv
265.594 129.391 265.703 129.438 265.809 129.531 cv
265.84 129.672 li
265.996 129.758 266.074 129.887 266.074 130.063 cv
266.074 130.031 266.059 130.125 266.027 130.344 cv
265.98 130.328 li
266.105 130.578 li
266.027 130.688 li
266.012 130.734 li
266.09 131.391 li
266.059 131.938 li
266.027 132.031 li
266.074 132.25 li
266.105 132.293 266.121 132.34 266.121 132.391 cv
266.121 132.465 266.082 132.539 266.012 132.609 cv
266.012 132.746 265.984 132.855 265.934 132.938 cv
265.98 133.359 li
265.98 133.531 li
265.996 133.5 li
266.074 133.375 li
266.277 133.016 li
266.309 133.016 li
266.371 133.016 266.434 132.93 266.496 132.75 cv
266.59 132.484 li
266.609 132.434 266.684 132.344 266.809 132.219 cv
266.855 131.969 li
267.027 131.719 li
267.09 131.531 li
267.129 131.5 267.176 131.465 267.23 131.422 cv
267.23 131.391 li
267.262 131.352 267.363 131.25 267.543 131.094 cv
267.637 131.047 li
267.652 130.906 li
267.73 130.859 li
267.77 130.672 267.887 130.543 268.074 130.469 cv
268.027 130.438 li
268.074 130.406 li
268.063 130.398 268.059 130.383 268.059 130.359 cv
268.059 130.34 268.066 130.313 268.09 130.281 cv
268.309 130.188 li
268.355 129.953 li
268.512 129.953 li
268.512 129.945 268.52 129.914 268.543 129.859 cv
268.824 129.641 li
268.949 129.602 269.035 129.578 269.09 129.578 cv
269.203 129.578 269.355 129.609 269.543 129.672 cv
269.684 129.875 li
269.746 129.906 li
269.809 130.063 li
270.012 130.328 li
270.012 130.516 li
270.137 130.656 li
270.137 130.859 li
270.238 131.09 270.293 131.281 270.293 131.438 cv
270.246 131.609 li
270.34 131.844 li
270.184 132 li
270.23 132.313 li
270.199 132.469 li
270.188 132.563 270.184 132.633 270.184 132.672 cv
270.184 132.727 270.203 132.82 270.246 132.953 cv
270.199 133.109 li
270.246 133.297 li
270.199 133.344 li
270.219 133.48 270.25 133.699 270.293 134 cv
270.277 134.063 li
270.73 133.563 li
270.871 133.297 li
270.902 133.246 270.957 133.156 271.043 133.031 cv
271.043 133.016 li
271.082 132.859 271.145 132.758 271.23 132.703 cv
271.23 132.641 271.277 132.57 271.371 132.484 cv
271.48 132.422 li
271.52 132.266 271.621 132.137 271.777 132.031 cv
271.84 131.828 li
271.965 131.672 li
272.105 131.531 li
272.188 131.461 272.254 131.355 272.309 131.219 cv
272.418 131.047 li
272.48 130.844 li
272.621 130.75 li
272.777 130.563 li
272.934 130.219 li
272.902 130.219 272.887 130.211 272.887 130.188 cv
272.887 130.188 272.891 130.172 272.902 130.141 cv
273.012 130.063 li
273.121 129.828 li
273.277 129.777 273.363 129.75 273.387 129.75 cv
273.387 129.75 273.402 129.762 273.434 129.781 cv
273.699 129.781 li
273.918 129.891 li
274.105 130.109 li
274.152 130.313 li
274.137 130.469 li
274.074 130.516 li
273.918 130.813 li
273.855 131.141 li
273.906 131.184 273.934 131.266 273.934 131.391 cv
273.891 131.434 273.871 131.492 273.871 131.563 cv
273.824 131.672 li
273.832 131.727 273.84 131.805 273.84 131.906 cv
273.84 131.992 273.84 132.047 273.84 132.078 cv
273.777 132.156 li
273.84 132.25 li
273.73 132.375 li
273.793 132.375 273.824 132.438 273.824 132.563 cv
273.832 132.617 273.84 132.652 273.84 132.672 cv
273.84 132.703 273.832 132.734 273.824 132.766 cv
273.832 132.859 273.84 132.949 273.84 133.031 cv
273.84 133.063 li
273.84 133.086 273.902 133.277 274.027 133.641 cv
274.059 133.781 li
274.215 133.953 li
274.293 134.141 li
274.371 134.188 li
274.434 134.266 li
274.512 134.281 li
274.637 134.313 li
274.699 134.297 li
274.746 134.297 li
274.84 134.297 274.949 134.262 275.074 134.188 cv
275.113 134.094 275.215 133.996 275.371 133.891 cv
275.379 133.852 275.438 133.762 275.543 133.625 cv
275.777 133.453 li
275.855 133.281 li
275.938 133.242 276.02 133.219 276.105 133.219 cv
276.207 133.219 276.316 133.246 276.434 133.297 cv
276.496 133.391 276.527 133.531 276.527 133.719 cv
276.527 133.719 li
cp
.258824 .258824 .258824 rgb
f
281.313 132.438 mo
281.297 132.359 li
281.234 132.297 281.195 132.229 281.188 132.156 cv
281.219 132.078 li
281.094 131.813 li
281.125 131.547 li
281.063 131.484 li
280.945 131.391 280.883 131.32 280.875 131.266 cv
280.789 131.227 280.75 131.133 280.75 130.984 cv
280.656 130.969 li
280.5 130.688 li
280.375 130.594 li
280.078 130.469 li
279.969 130.453 li
279.906 130.453 279.863 130.434 279.844 130.391 cv
279.578 130.703 li
279.391 131.094 li
279.094 131.25 li
279.047 131.406 li
278.906 131.469 li
278.859 131.828 li
278.688 131.922 li
278.656 132.047 278.641 132.168 278.641 132.281 cv
278.406 132.484 li
278.484 132.531 li
278.484 132.648 278.441 132.746 278.359 132.828 cv
278.328 132.914 278.285 133.008 278.234 133.109 cv
278.234 133.219 li
278.203 133.281 li
278.219 133.438 li
278.063 133.828 li
278.094 133.891 li
278.094 134.281 li
278.031 134.484 li
278.047 134.672 li
278.172 134.859 li
278.375 134.922 li
278.438 134.953 li
278.547 134.906 li
278.906 134.922 li
278.969 134.781 li
279.031 134.781 li
279.082 134.781 279.113 134.797 279.125 134.828 cv
279.25 134.781 li
279.359 134.828 li
279.547 134.703 li
279.578 134.656 li
279.703 134.641 li
279.766 134.539 279.914 134.434 280.156 134.328 cv
280.188 134.25 li
280.469 134.063 li
280.625 133.828 li
280.844 133.719 li
280.859 133.656 li
280.922 133.5 li
280.922 133.313 li
281.094 133.172 li
281.156 133.078 li
281.219 133 li
281.188 132.887 281.172 132.805 281.172 132.75 cv
281.172 132.668 281.195 132.578 281.25 132.484 cv
281.313 132.438 li
cp
282.234 132.094 mo
282.141 132.344 li
282.141 132.594 282.129 132.789 282.109 132.922 cv
282.016 133.063 li
282.016 133.219 li
281.953 133.313 li
281.906 133.516 li
281.75 133.672 li
281.656 134.016 li
281.547 134.063 li
281.484 134.219 li
281.328 134.313 li
281.203 134.547 li
281.047 134.641 li
281.031 134.797 li
280.766 134.906 li
280.641 135.074 280.488 135.18 280.313 135.219 cv
280.25 135.234 li
280.125 135.43 279.953 135.531 279.734 135.531 cv
279.641 135.582 279.535 135.609 279.422 135.609 cv
279.281 135.719 li
279.141 135.75 li
278.953 135.891 li
278.781 135.875 li
278.578 135.938 li
278.344 135.844 li
277.734 135.797 li
277.531 135.469 li
277.219 135.156 li
277.297 134.922 li
277.078 134.453 li
277.172 134.266 li
277.109 133.938 li
277.172 133.719 li
277.16 133.594 277.156 133.5 277.156 133.438 cv
277.156 133.262 277.203 133.133 277.297 133.047 cv
277.297 132.953 277.352 132.805 277.469 132.594 cv
277.547 132.594 li
277.516 132.484 li
277.563 132.297 li
277.563 132.078 li
277.633 131.996 277.676 131.945 277.688 131.922 cv
277.641 131.719 li
277.641 131.672 li
277.703 131.539 277.734 131.402 277.734 131.266 cv
278.031 130.859 li
278.031 130.859 278.039 130.852 278.063 130.828 cv
278.082 130.809 278.102 130.789 278.125 130.766 cv
278.109 130.719 li
278.172 130.719 li
278.375 130.469 li
278.391 130.156 li
278.75 130.031 li
278.875 129.949 278.957 129.809 279 129.609 cv
279.172 129.609 li
279.273 129.547 279.367 129.516 279.453 129.516 cv
279.535 129.516 279.617 129.539 279.703 129.578 cv
279.844 129.594 li
280.219 129.453 li
280.406 129.641 li
280.563 129.734 li
280.672 129.734 li
280.891 129.844 li
281 129.844 li
281.125 129.961 281.266 130.117 281.422 130.313 cv
281.453 130.375 li
281.547 130.438 li
281.844 130.813 li
282.109 131.469 li
282.109 131.609 li
282.234 132.094 li
cp
f
287.605 130.344 mo
287.605 130.43 287.52 130.512 287.355 130.594 cv
287.324 130.637 287.254 130.68 287.152 130.719 cv
287.016 130.773 286.922 130.82 286.871 130.859 cv
286.574 130.75 li
286.426 130.867 286.234 130.922 285.996 130.922 cv
285.824 130.875 li
285.699 131 li
285.324 131 li
285.09 131.141 li
284.984 131.109 284.887 131.094 284.793 131.094 cv
284.77 131.117 284.707 131.133 284.605 131.141 cv
284.551 131.141 284.5 131.133 284.449 131.109 cv
284.402 131.641 li
284.418 132.031 li
284.371 132.516 li
284.402 133.047 li
284.449 133.297 li
284.449 133.5 li
284.637 133.922 li
284.613 133.953 284.605 133.984 284.605 134.016 cv
284.605 134.078 284.703 134.133 284.902 134.172 cv
284.934 134.344 li
285.027 134.375 li
285.199 134.5 li
285.309 134.578 li
285.402 134.559 285.469 134.547 285.512 134.547 cv
285.594 134.547 285.676 134.563 285.762 134.594 cv
285.801 134.574 285.879 134.508 285.996 134.391 cv
286.078 134.32 286.156 134.281 286.23 134.281 cv
286.238 134.281 286.254 134.281 286.277 134.281 cv
286.297 134.293 286.313 134.297 286.324 134.297 cv
286.406 134.121 286.559 134.008 286.777 133.953 cv
286.965 133.953 287.125 134.012 287.262 134.125 cv
287.262 134.234 li
287.262 134.547 287.145 134.746 286.918 134.828 cv
286.832 135.027 286.656 135.152 286.387 135.203 cv
286.23 135.359 li
286.043 135.359 li
285.715 135.438 li
285.641 135.457 285.535 135.469 285.402 135.469 cv
285.328 135.469 285.246 135.453 285.152 135.422 cv
284.98 135.422 li
284.48 135.156 li
284.355 135.109 li
284.074 134.719 li
283.902 134.531 li
283.59 133.828 li
283.48 133.172 li
283.512 133.016 li
283.402 132.859 li
283.465 132.656 li
283.402 132.344 li
283.496 132.25 li
283.527 132.078 li
283.48 131.906 li
283.512 131.656 li
283.449 131.422 li
283.527 131.359 li
283.527 131.141 li
283.418 131.094 li
283.152 131.141 li
282.902 130.969 li
282.871 130.969 li
282.59 130.969 282.449 130.82 282.449 130.516 cv
282.449 130.469 li
282.277 130.203 li
282.543 129.953 li
282.887 130.016 li
283.074 129.984 li
283.34 130.063 li
283.637 130.063 li
283.637 129.781 li
283.449 129.391 li
283.637 129.281 li
283.559 129.078 li
283.574 128.641 li
283.465 128.453 li
283.402 128.359 283.371 128.266 283.371 128.172 cv
283.371 128.078 283.391 127.996 283.434 127.922 cv
283.48 127.734 li
283.59 127.625 li
283.84 127.574 284.004 127.547 284.09 127.547 cv
284.391 127.547 284.559 127.684 284.59 127.953 cv
284.543 128.031 li
284.594 128.117 284.621 128.195 284.621 128.266 cv
284.621 128.277 284.621 128.297 284.621 128.328 cv
284.59 128.422 li
284.574 128.516 li
284.621 128.703 li
284.621 128.766 li
284.637 128.969 li
284.512 129.125 li
284.59 129.406 li
284.527 129.75 li
284.637 129.875 li
284.527 130.125 li
284.965 130.063 li
285.73 130.141 li
286.355 130.047 li
286.559 130.063 li
286.637 130.047 li
287.184 130.047 li
287.465 130.047 287.605 130.148 287.605 130.344 cv
287.605 130.344 li
cp
f
292.219 132.438 mo
292.203 132.359 li
292.141 132.297 292.102 132.229 292.094 132.156 cv
292.125 132.078 li
292 131.813 li
292.031 131.547 li
291.969 131.484 li
291.852 131.391 291.789 131.32 291.781 131.266 cv
291.695 131.227 291.656 131.133 291.656 130.984 cv
291.563 130.969 li
291.406 130.688 li
291.281 130.594 li
290.984 130.469 li
290.875 130.453 li
290.813 130.453 290.77 130.434 290.75 130.391 cv
290.484 130.703 li
290.297 131.094 li
290 131.25 li
289.953 131.406 li
289.813 131.469 li
289.766 131.828 li
289.594 131.922 li
289.563 132.047 289.547 132.168 289.547 132.281 cv
289.313 132.484 li
289.391 132.531 li
289.391 132.648 289.348 132.746 289.266 132.828 cv
289.234 132.914 289.191 133.008 289.141 133.109 cv
289.141 133.219 li
289.109 133.281 li
289.125 133.438 li
288.969 133.828 li
289 133.891 li
289 134.281 li
288.938 134.484 li
288.953 134.672 li
289.078 134.859 li
289.281 134.922 li
289.344 134.953 li
289.453 134.906 li
289.813 134.922 li
289.875 134.781 li
289.938 134.781 li
289.988 134.781 290.02 134.797 290.031 134.828 cv
290.156 134.781 li
290.266 134.828 li
290.453 134.703 li
290.484 134.656 li
290.609 134.641 li
290.672 134.539 290.82 134.434 291.063 134.328 cv
291.094 134.25 li
291.375 134.063 li
291.531 133.828 li
291.75 133.719 li
291.766 133.656 li
291.828 133.5 li
291.828 133.313 li
292 133.172 li
292.063 133.078 li
292.125 133 li
292.094 132.887 292.078 132.805 292.078 132.75 cv
292.078 132.668 292.102 132.578 292.156 132.484 cv
292.219 132.438 li
cp
293.141 132.094 mo
293.047 132.344 li
293.047 132.594 293.035 132.789 293.016 132.922 cv
292.922 133.063 li
292.922 133.219 li
292.859 133.313 li
292.813 133.516 li
292.656 133.672 li
292.563 134.016 li
292.453 134.063 li
292.391 134.219 li
292.234 134.313 li
292.109 134.547 li
291.953 134.641 li
291.938 134.797 li
291.672 134.906 li
291.547 135.074 291.395 135.18 291.219 135.219 cv
291.156 135.234 li
291.031 135.43 290.859 135.531 290.641 135.531 cv
290.547 135.582 290.441 135.609 290.328 135.609 cv
290.188 135.719 li
290.047 135.75 li
289.859 135.891 li
289.688 135.875 li
289.484 135.938 li
289.25 135.844 li
288.641 135.797 li
288.438 135.469 li
288.125 135.156 li
288.203 134.922 li
287.984 134.453 li
288.078 134.266 li
288.016 133.938 li
288.078 133.719 li
288.066 133.594 288.063 133.5 288.063 133.438 cv
288.063 133.262 288.109 133.133 288.203 133.047 cv
288.203 132.953 288.258 132.805 288.375 132.594 cv
288.453 132.594 li
288.422 132.484 li
288.469 132.297 li
288.469 132.078 li
288.539 131.996 288.582 131.945 288.594 131.922 cv
288.547 131.719 li
288.547 131.672 li
288.609 131.539 288.641 131.402 288.641 131.266 cv
288.938 130.859 li
288.938 130.859 288.945 130.852 288.969 130.828 cv
288.988 130.809 289.008 130.789 289.031 130.766 cv
289.016 130.719 li
289.078 130.719 li
289.281 130.469 li
289.297 130.156 li
289.656 130.031 li
289.781 129.949 289.863 129.809 289.906 129.609 cv
290.078 129.609 li
290.18 129.547 290.273 129.516 290.359 129.516 cv
290.441 129.516 290.523 129.539 290.609 129.578 cv
290.75 129.594 li
291.125 129.453 li
291.313 129.641 li
291.469 129.734 li
291.578 129.734 li
291.797 129.844 li
291.906 129.844 li
292.031 129.961 292.172 130.117 292.328 130.313 cv
292.359 130.375 li
292.453 130.438 li
292.75 130.813 li
293.016 131.469 li
293.016 131.609 li
293.141 132.094 li
cp
f
299.508 130.172 mo
299.398 130.625 li
298.883 130.703 li
298.602 130.875 li
298.414 130.797 li
298.211 130.906 li
298.008 131 li
297.867 131.094 li
297.867 131.141 li
297.57 131.281 li
297.383 131.531 li
297.273 131.531 li
297.125 131.699 297.023 131.797 296.961 131.828 cv
296.758 132.156 li
296.695 132.188 li
296.664 132.262 296.633 132.371 296.602 132.516 cv
296.398 132.594 li
296.32 132.75 li
296.195 132.891 li
296.18 133.109 li
296.055 133.156 li
296.055 133.359 li
296.023 133.406 li
296.043 133.449 296.074 133.5 296.117 133.563 cv
295.914 133.641 li
295.883 133.828 li
295.742 134.063 li
295.82 134.234 li
295.648 134.5 li
295.656 134.594 295.664 134.656 295.664 134.688 cv
295.664 134.699 295.664 134.719 295.664 134.75 cv
295.664 134.773 295.664 134.793 295.664 134.813 cv
295.68 134.938 li
295.93 135.188 li
295.742 135.516 li
295.57 135.641 li
295.18 135.844 li
294.664 135.625 li
294.664 135.313 li
294.602 135.172 li
294.648 134.969 li
294.625 134.824 294.617 134.715 294.617 134.641 cv
294.617 134.609 294.621 134.57 294.633 134.516 cv
294.633 134.477 294.633 134.445 294.633 134.422 cv
294.617 134.281 li
294.555 134.219 294.523 134.148 294.523 134.063 cv
294.523 133.992 294.555 133.906 294.617 133.813 cv
294.617 133.762 294.605 133.621 294.586 133.391 cv
294.633 133.344 li
294.586 133.156 li
294.617 133 li
294.586 132.891 li
294.633 132.578 li
294.555 132.438 li
294.602 132.281 li
294.555 132.094 li
294.563 132.043 294.57 131.969 294.57 131.875 cv
294.57 131.742 294.547 131.648 294.508 131.594 cv
294.57 131.516 li
294.508 131.266 li
294.383 131.078 li
294.445 130.859 li
294.398 130.766 li
294.336 130.438 li
294.336 130.328 li
294.293 130.266 294.273 130.195 294.273 130.109 cv
294.273 129.922 294.477 129.766 294.883 129.641 cv
295.242 129.703 li
295.305 129.969 li
295.445 130.156 li
295.398 130.531 li
295.43 130.719 295.465 130.922 295.508 131.141 cv
295.539 131.375 li
295.547 131.398 295.559 131.449 295.57 131.531 cv
295.57 131.586 295.547 131.641 295.508 131.703 cv
295.539 131.984 li
295.523 132.297 li
295.461 132.438 li
295.508 132.484 li
295.523 132.625 li
295.586 132.563 295.621 132.496 295.633 132.422 cv
295.68 132.219 li
295.711 132.156 295.75 132.109 295.805 132.078 cv
295.867 131.875 li
296.055 131.766 li
296.086 131.594 li
296.242 131.422 li
296.352 131.219 li
296.477 131.086 296.594 131 296.711 130.969 cv
296.727 130.922 li
296.867 130.734 li
297.008 130.703 li
297.039 130.656 li
297.102 130.578 li
297.258 130.484 li
297.336 130.391 li
297.414 130.406 li
297.539 130.344 li
297.586 130.266 li
297.758 130.188 li
297.992 130.031 li
298.336 129.922 li
298.461 129.902 298.527 129.891 298.539 129.891 cv
298.539 129.902 298.539 129.906 298.539 129.906 cv
298.527 129.906 298.523 129.914 298.523 129.922 cv
298.539 129.922 li
298.578 129.922 298.637 129.902 298.711 129.859 cv
298.75 129.82 298.813 129.797 298.898 129.797 cv
298.938 129.797 299.008 129.809 299.102 129.828 cv
299.34 129.84 299.477 129.953 299.508 130.172 cv
299.508 130.172 li
cp
f
268.512 145.656 mo
268.512 145.875 268.473 146.012 268.402 146.063 cv
268.324 146.125 li
268.262 146.313 li
268.043 146.391 li
267.969 146.539 267.871 146.652 267.746 146.734 cv
267.621 146.781 li
267.434 146.969 li
267.262 147.016 li
267.199 147.184 267.063 147.273 266.855 147.281 cv
266.844 147.313 266.801 147.371 266.73 147.453 cv
266.594 147.547 266.449 147.605 266.293 147.625 cv
266.23 147.641 li
266.137 147.766 li
265.855 147.766 li
265.621 147.922 li
265.059 147.5 li
264.793 146.969 li
264.777 146.281 li
264.715 146.109 li
264.887 144.875 li
264.949 144.813 li
264.918 144.68 264.902 144.543 264.902 144.406 cv
264.902 144.324 264.926 144.152 264.98 143.891 cv
265.059 143.578 li
265.035 143.516 265 143.453 264.949 143.391 cv
265.027 143.125 li
265.059 142.797 li
265.09 142.766 li
265.047 142.684 265.02 142.59 265.012 142.484 cv
265.02 142.465 265.031 142.438 265.043 142.406 cv
265.051 142.375 265.059 142.352 265.059 142.328 cv
265.027 142.246 265.012 142.168 265.012 142.094 cv
265.012 141.867 265.137 141.762 265.387 141.781 cv
265.559 141.797 li
265.672 141.746 265.738 141.719 265.762 141.719 cv
265.949 141.719 266.078 141.82 266.152 142.016 cv
266.152 142.078 li
266.184 142.195 266.199 142.297 266.199 142.391 cv
266.199 142.477 266.188 142.539 266.168 142.578 cv
266.074 143.281 li
266.168 143.469 li
266.168 143.648 266.113 143.797 266.012 143.922 cv
266.059 144.094 li
265.887 144.625 li
265.863 144.855 265.84 145.031 265.809 145.156 cv
265.809 145.5 li
265.73 145.703 li
265.746 145.844 li
265.715 146.156 li
265.746 146.422 li
265.949 146.578 li
266.121 146.563 li
266.152 146.516 li
266.262 146.531 li
266.434 146.469 li
266.59 146.313 li
266.652 146.234 li
266.746 146.219 li
266.777 146.156 li
266.824 146.094 li
266.902 146.156 li
267.043 146.016 li
267.121 146.016 li
267.152 145.922 li
267.184 145.922 li
267.23 145.813 li
267.355 145.75 li
267.621 145.625 li
267.828 145.48 268.035 145.406 268.246 145.406 cv
268.309 145.406 li
268.402 145.469 268.469 145.555 268.512 145.656 cv
268.512 145.656 li
cp
267.09 138.234 mo
267.09 138.352 267.012 138.453 266.855 138.547 cv
266.855 138.578 li
266.676 138.789 266.527 138.906 266.402 138.938 cv
266.184 139.188 li
266.043 139.375 li
265.73 139.453 li
265.59 139.656 li
265.355 139.766 li
264.996 140.094 li
264.777 139.875 li
264.809 139.531 li
264.965 139.281 li
264.973 139.148 265.051 139.031 265.199 138.938 cv
265.199 138.891 li
265.277 138.828 li
265.293 138.609 li
265.512 138.563 li
265.512 138.438 li
265.684 138.406 li
265.723 138.219 265.801 138.086 265.918 138 cv
265.965 137.969 li
266.043 137.891 li
266.168 137.547 li
266.781 137.703 267.09 137.934 267.09 138.234 cv
267.09 138.234 li
cp
f
278.211 145.438 mo
278.211 145.512 278.148 145.609 278.023 145.734 cv
277.883 145.969 li
277.82 146.25 li
277.695 146.297 li
277.664 146.375 li
277.516 146.418 277.414 146.531 277.352 146.719 cv
277.246 146.855 277.133 146.949 277.008 147 cv
276.965 147.055 276.922 147.086 276.883 147.094 cv
276.805 147.234 li
276.68 147.25 li
276.32 147.453 li
275.852 147.5 li
275.727 147.484 li
275.508 147.516 li
275.43 147.422 li
275.293 147.359 275.199 147.297 275.148 147.234 cv
275.031 147.203 274.949 147.117 274.898 146.969 cv
274.73 146.781 274.648 146.633 274.648 146.516 cv
274.648 146.469 li
274.555 146.297 li
274.523 146.281 li
274.445 146.016 li
274.32 145.75 li
274.352 145.438 li
274.211 145.25 li
273.992 144.047 li
273.969 143.891 273.961 143.758 273.961 143.641 cv
273.93 143.578 li
273.852 143.469 li
273.727 143.641 li
273.227 144.172 li
273.039 144.469 li
272.945 144.672 li
272.789 144.891 li
272.68 145 li
272.695 145.078 li
272.508 145.5 li
272.383 145.641 li
272.242 145.672 li
272.117 145.797 li
272.117 145.984 272.027 146.105 271.852 146.156 cv
271.82 146.188 li
271.734 146.398 271.648 146.523 271.555 146.563 cv
271.43 146.766 li
271.219 146.953 271.086 147.07 271.023 147.109 cv
270.992 147.203 270.938 147.289 270.867 147.359 cv
270.844 147.383 270.809 147.418 270.758 147.469 cv
270.734 147.625 270.605 147.734 270.367 147.797 cv
270.211 147.844 li
270.031 147.832 269.883 147.723 269.758 147.516 cv
269.539 147.172 li
269.617 146.828 li
269.586 146.656 li
269.617 146.625 li
269.633 146.438 li
269.477 146.109 li
269.586 145.938 li
269.539 145.75 li
269.633 145.563 li
269.664 145.234 li
269.602 145.188 li
269.711 144.984 li
269.68 144.891 li
269.664 144.672 li
269.711 144.25 li
269.688 144.156 269.68 144.094 269.68 144.063 cv
269.68 144.043 269.684 144.023 269.695 144 cv
269.695 143.98 269.695 143.965 269.695 143.953 cv
269.633 143.844 li
269.68 143.391 li
269.664 143.234 li
269.695 143.016 li
269.648 142.641 li
269.898 142.219 li
270.188 142.262 270.387 142.324 270.492 142.406 cv
270.605 142.48 270.664 142.621 270.664 142.828 cv
270.664 142.953 li
270.758 143.125 li
270.727 143.422 li
270.773 143.984 li
270.68 144.25 li
270.727 144.547 li
270.727 144.781 li
270.617 144.938 li
270.695 145.188 li
270.617 145.344 li
270.602 145.484 li
270.68 145.641 li
270.57 145.938 li
270.523 146.063 li
270.523 146.188 li
270.602 146.328 li
270.836 146.094 li
270.836 145.961 270.883 145.867 270.977 145.813 cv
270.984 145.719 271.023 145.652 271.086 145.609 cv
271.039 145.563 li
271.227 145.391 li
271.273 145.344 li
271.273 145.219 li
271.492 145.047 li
271.555 144.906 li
271.68 144.813 li
272.227 144.203 li
272.172 144.258 272.016 144.43 271.758 144.719 cv
271.758 144.75 li
271.789 144.656 li
271.961 144.438 li
272.102 144.203 li
272.102 144.063 li
272.305 144 li
272.336 143.813 li
272.383 143.75 li
272.398 143.688 li
272.398 143.594 li
272.602 143.391 li
272.602 143.371 272.602 143.352 272.602 143.328 cv
272.59 143.297 272.586 143.277 272.586 143.266 cv
272.586 143.102 272.68 143.008 272.867 142.984 cv
272.949 142.82 273.074 142.719 273.242 142.688 cv
273.32 142.563 li
273.352 142.531 li
273.434 142.418 273.559 142.336 273.727 142.281 cv
273.852 142.125 li
274.195 142.125 li
274.367 142.328 li
274.523 142.406 li
274.523 142.453 li
274.633 142.484 li
274.648 142.781 li
274.898 142.922 li
274.789 143.219 li
274.945 143.563 li
274.945 143.953 li
275.055 144.484 li
275.086 144.984 li
275.211 145.281 li
275.305 145.641 li
275.355 145.703 275.398 145.789 275.43 145.891 cv
275.68 145.953 li
275.68 146.234 li
275.82 146.391 li
275.82 146.422 li
275.867 146.438 li
275.93 146.531 li
275.992 146.453 li
275.969 146.453 275.992 146.461 276.055 146.469 cv
276.156 146.469 276.266 146.375 276.383 146.188 cv
276.539 146.156 li
276.586 146.078 li
276.617 146.008 276.672 145.949 276.758 145.906 cv
276.852 145.922 li
276.914 145.875 li
276.93 145.797 li
276.961 145.75 li
277.055 145.68 277.117 145.578 277.148 145.453 cv
277.305 145.281 li
277.336 145.156 li
277.43 144.938 li
277.695 144.828 li
278.07 144.953 li
278.195 145.359 li
278.195 145.371 278.199 145.383 278.211 145.391 cv
278.211 145.414 278.211 145.43 278.211 145.438 cv
278.211 145.438 li
cp
f
281.688 142.516 mo
281.688 142.496 281.672 142.445 281.641 142.359 cv
281.578 142.344 li
281.547 142.359 li
281.535 142.359 281.516 142.359 281.484 142.359 cv
281.473 142.371 281.457 142.375 281.438 142.375 cv
281.426 142.375 281.41 142.371 281.391 142.359 cv
281.367 142.359 281.352 142.359 281.344 142.359 cv
281.203 142.453 li
281.078 142.469 li
281.016 142.5 li
280.781 142.797 li
280.625 142.922 li
280.406 143.313 li
280.266 143.391 li
280.242 143.547 280.18 143.684 280.078 143.797 cv
280.016 143.891 li
280.117 143.828 280.238 143.797 280.375 143.797 cv
280.469 143.75 li
280.516 143.625 li
280.703 143.641 li
280.813 143.469 li
280.906 143.469 li
281.063 143.531 li
281.125 143.328 li
281.219 143.328 li
281.219 143.172 li
281.406 143.125 li
281.453 143.078 li
281.484 142.953 li
281.656 142.688 li
281.676 142.648 281.688 142.59 281.688 142.516 cv
281.688 142.516 li
cp
283.078 146.563 mo
283.078 146.668 282.992 146.805 282.828 146.969 cv
282.773 147.125 282.703 147.25 282.609 147.344 cv
282.531 147.359 li
282.375 147.625 li
282.125 147.656 li
281.859 147.828 li
281.719 148.078 li
281.563 148.047 li
281.457 148.098 281.375 148.129 281.313 148.141 cv
281.219 148.266 li
281.195 148.254 281.156 148.25 281.094 148.25 cv
280.977 148.25 280.863 148.332 280.75 148.5 cv
280.547 148.328 li
280.516 148.336 280.461 148.344 280.391 148.344 cv
280.266 148.344 280.16 148.328 280.078 148.297 cv
279.844 148.297 li
279.734 148.219 li
279.367 148.164 279.145 148.031 279.063 147.813 cv
279.063 147.766 li
278.891 147.688 li
278.797 147.453 li
278.641 147.344 li
278.641 147.125 li
278.469 146.516 li
278.5 146.016 li
278.547 145.781 li
278.547 145.484 li
278.625 145.266 li
278.609 145.172 li
278.703 145 li
278.672 145.031 li
278.672 144.949 278.695 144.859 278.75 144.766 cv
278.75 144.688 li
278.703 144.359 li
278.703 144.203 278.773 144.063 278.922 143.938 cv
278.922 143.918 278.922 143.891 278.922 143.859 cv
278.922 143.82 278.906 143.742 278.875 143.625 cv
278.844 143.512 278.828 143.43 278.828 143.375 cv
278.828 143.262 278.859 143.148 278.922 143.031 cv
278.992 143.137 279.098 143.188 279.234 143.188 cv
279.281 143.188 li
279.301 143.156 279.344 143.117 279.406 143.063 cv
279.477 142.836 279.582 142.641 279.719 142.484 cv
279.766 142.422 li
279.766 142.391 279.797 142.289 279.859 142.109 cv
279.969 142.109 li
280 142.031 li
280.109 142 li
280.148 141.93 280.176 141.887 280.188 141.875 cv
280.207 141.855 280.313 141.797 280.5 141.703 cv
280.531 141.633 280.586 141.57 280.672 141.516 cv
280.703 141.496 280.75 141.477 280.813 141.453 cv
280.859 141.375 li
281.109 141.293 281.27 141.25 281.344 141.25 cv
281.414 141.25 281.484 141.273 281.547 141.313 cv
281.609 141.297 li
281.719 141.344 li
281.832 141.43 281.941 141.5 282.047 141.563 cv
282.281 141.734 li
282.281 141.797 li
282.5 141.965 282.609 142.203 282.609 142.516 cv
282.563 142.656 li
282.609 143.109 li
282.484 143.188 li
282.344 143.563 li
282.078 143.859 li
282.063 144.078 li
281.758 144.297 281.484 144.469 281.234 144.594 cv
281.148 144.73 281.02 144.797 280.844 144.797 cv
280.813 144.797 li
280.531 144.953 li
280.313 144.953 li
279.984 145.094 li
279.734 144.969 li
279.703 144.969 li
279.68 145.043 279.66 145.156 279.641 145.313 cv
279.531 145.391 li
279.516 145.563 li
279.438 145.797 li
279.457 146.027 279.469 146.172 279.469 146.234 cv
279.422 146.281 li
279.422 146.398 279.414 146.484 279.406 146.547 cv
279.406 146.559 279.398 146.57 279.391 146.578 cv
279.391 146.602 279.391 146.617 279.391 146.625 cv
279.391 146.699 279.426 146.762 279.5 146.813 cv
279.531 146.918 279.578 146.984 279.641 147.016 cv
279.734 147.094 li
280.047 147.188 li
280.047 147.234 li
280.156 147.25 li
280.641 147.281 li
280.922 147.234 li
281.063 147.141 li
281.141 147.109 li
281.281 146.906 li
281.344 146.891 li
281.703 146.781 li
281.734 146.719 281.797 146.664 281.891 146.609 cv
281.922 146.547 li
282.109 146.508 282.219 146.406 282.25 146.25 cv
282.375 146.117 282.539 146.047 282.75 146.047 cv
282.813 146.047 li
282.988 146.258 283.078 146.43 283.078 146.563 cv
283.078 146.563 li
cp
f
289.262 142.5 mo
289.152 142.953 li
288.637 143.031 li
288.355 143.203 li
288.168 143.125 li
287.965 143.234 li
287.762 143.328 li
287.621 143.422 li
287.621 143.469 li
287.324 143.609 li
287.137 143.859 li
287.027 143.859 li
286.879 144.027 286.777 144.125 286.715 144.156 cv
286.512 144.484 li
286.449 144.516 li
286.418 144.59 286.387 144.699 286.355 144.844 cv
286.152 144.922 li
286.074 145.078 li
285.949 145.219 li
285.934 145.438 li
285.809 145.484 li
285.809 145.688 li
285.777 145.734 li
285.797 145.777 285.828 145.828 285.871 145.891 cv
285.668 145.969 li
285.637 146.156 li
285.496 146.391 li
285.574 146.563 li
285.402 146.828 li
285.41 146.922 285.418 146.984 285.418 147.016 cv
285.418 147.027 285.418 147.047 285.418 147.078 cv
285.418 147.102 285.418 147.121 285.418 147.141 cv
285.434 147.266 li
285.684 147.516 li
285.496 147.844 li
285.324 147.969 li
284.934 148.172 li
284.418 147.953 li
284.418 147.641 li
284.355 147.5 li
284.402 147.297 li
284.379 147.152 284.371 147.043 284.371 146.969 cv
284.371 146.938 284.375 146.898 284.387 146.844 cv
284.387 146.805 284.387 146.773 284.387 146.75 cv
284.371 146.609 li
284.309 146.547 284.277 146.477 284.277 146.391 cv
284.277 146.32 284.309 146.234 284.371 146.141 cv
284.371 146.09 284.359 145.949 284.34 145.719 cv
284.387 145.672 li
284.34 145.484 li
284.371 145.328 li
284.34 145.219 li
284.387 144.906 li
284.309 144.766 li
284.355 144.609 li
284.309 144.422 li
284.316 144.371 284.324 144.297 284.324 144.203 cv
284.324 144.07 284.301 143.977 284.262 143.922 cv
284.324 143.844 li
284.262 143.594 li
284.137 143.406 li
284.199 143.188 li
284.152 143.094 li
284.09 142.766 li
284.09 142.656 li
284.047 142.594 284.027 142.523 284.027 142.438 cv
284.027 142.25 284.23 142.094 284.637 141.969 cv
284.996 142.031 li
285.059 142.297 li
285.199 142.484 li
285.152 142.859 li
285.184 143.047 285.219 143.25 285.262 143.469 cv
285.293 143.703 li
285.301 143.727 285.313 143.777 285.324 143.859 cv
285.324 143.914 285.301 143.969 285.262 144.031 cv
285.293 144.313 li
285.277 144.625 li
285.215 144.766 li
285.262 144.813 li
285.277 144.953 li
285.34 144.891 285.375 144.824 285.387 144.75 cv
285.434 144.547 li
285.465 144.484 285.504 144.438 285.559 144.406 cv
285.621 144.203 li
285.809 144.094 li
285.84 143.922 li
285.996 143.75 li
286.105 143.547 li
286.23 143.414 286.348 143.328 286.465 143.297 cv
286.48 143.25 li
286.621 143.063 li
286.762 143.031 li
286.793 142.984 li
286.855 142.906 li
287.012 142.813 li
287.09 142.719 li
287.168 142.734 li
287.293 142.672 li
287.34 142.594 li
287.512 142.516 li
287.746 142.359 li
288.09 142.25 li
288.215 142.23 288.281 142.219 288.293 142.219 cv
288.293 142.23 288.293 142.234 288.293 142.234 cv
288.281 142.234 288.277 142.242 288.277 142.25 cv
288.293 142.25 li
288.332 142.25 288.391 142.23 288.465 142.188 cv
288.504 142.148 288.566 142.125 288.652 142.125 cv
288.691 142.125 288.762 142.137 288.855 142.156 cv
289.094 142.168 289.23 142.281 289.262 142.5 cv
289.262 142.5 li
cp
f
293.738 142.672 mo
293.738 142.758 293.652 142.84 293.488 142.922 cv
293.457 142.965 293.387 143.008 293.285 143.047 cv
293.148 143.102 293.055 143.148 293.004 143.188 cv
292.707 143.078 li
292.559 143.195 292.367 143.25 292.129 143.25 cv
291.957 143.203 li
291.832 143.328 li
291.457 143.328 li
291.223 143.469 li
291.117 143.438 291.02 143.422 290.926 143.422 cv
290.902 143.445 290.84 143.461 290.738 143.469 cv
290.684 143.469 290.633 143.461 290.582 143.438 cv
290.535 143.969 li
290.551 144.359 li
290.504 144.844 li
290.535 145.375 li
290.582 145.625 li
290.582 145.828 li
290.77 146.25 li
290.746 146.281 290.738 146.313 290.738 146.344 cv
290.738 146.406 290.836 146.461 291.035 146.5 cv
291.066 146.672 li
291.16 146.703 li
291.332 146.828 li
291.441 146.906 li
291.535 146.887 291.602 146.875 291.645 146.875 cv
291.727 146.875 291.809 146.891 291.895 146.922 cv
291.934 146.902 292.012 146.836 292.129 146.719 cv
292.211 146.648 292.289 146.609 292.363 146.609 cv
292.371 146.609 292.387 146.609 292.41 146.609 cv
292.43 146.621 292.445 146.625 292.457 146.625 cv
292.539 146.449 292.691 146.336 292.91 146.281 cv
293.098 146.281 293.258 146.34 293.395 146.453 cv
293.395 146.563 li
293.395 146.875 293.277 147.074 293.051 147.156 cv
292.965 147.355 292.789 147.48 292.52 147.531 cv
292.363 147.688 li
292.176 147.688 li
291.848 147.766 li
291.773 147.785 291.668 147.797 291.535 147.797 cv
291.461 147.797 291.379 147.781 291.285 147.75 cv
291.113 147.75 li
290.613 147.484 li
290.488 147.438 li
290.207 147.047 li
290.035 146.859 li
289.723 146.156 li
289.613 145.5 li
289.645 145.344 li
289.535 145.188 li
289.598 144.984 li
289.535 144.672 li
289.629 144.578 li
289.66 144.406 li
289.613 144.234 li
289.645 143.984 li
289.582 143.75 li
289.66 143.688 li
289.66 143.469 li
289.551 143.422 li
289.285 143.469 li
289.035 143.297 li
289.004 143.297 li
288.723 143.297 288.582 143.148 288.582 142.844 cv
288.582 142.797 li
288.41 142.531 li
288.676 142.281 li
289.02 142.344 li
289.207 142.313 li
289.473 142.391 li
289.77 142.391 li
289.77 142.109 li
289.582 141.719 li
289.77 141.609 li
289.691 141.406 li
289.707 140.969 li
289.598 140.781 li
289.535 140.688 289.504 140.594 289.504 140.5 cv
289.504 140.406 289.523 140.324 289.566 140.25 cv
289.613 140.063 li
289.723 139.953 li
289.973 139.902 290.137 139.875 290.223 139.875 cv
290.523 139.875 290.691 140.012 290.723 140.281 cv
290.676 140.359 li
290.727 140.445 290.754 140.523 290.754 140.594 cv
290.754 140.605 290.754 140.625 290.754 140.656 cv
290.723 140.75 li
290.707 140.844 li
290.754 141.031 li
290.754 141.094 li
290.77 141.297 li
290.645 141.453 li
290.723 141.734 li
290.66 142.078 li
290.77 142.203 li
290.66 142.453 li
291.098 142.391 li
291.863 142.469 li
292.488 142.375 li
292.691 142.391 li
292.77 142.375 li
293.316 142.375 li
293.598 142.375 293.738 142.477 293.738 142.672 cv
293.738 142.672 li
cp
f
298.164 145.656 mo
298.164 145.875 298.125 146.012 298.055 146.063 cv
297.977 146.125 li
297.914 146.313 li
297.695 146.391 li
297.621 146.539 297.523 146.652 297.398 146.734 cv
297.273 146.781 li
297.086 146.969 li
296.914 147.016 li
296.852 147.184 296.715 147.273 296.508 147.281 cv
296.496 147.313 296.453 147.371 296.383 147.453 cv
296.246 147.547 296.102 147.605 295.945 147.625 cv
295.883 147.641 li
295.789 147.766 li
295.508 147.766 li
295.273 147.922 li
294.711 147.5 li
294.445 146.969 li
294.43 146.281 li
294.367 146.109 li
294.539 144.875 li
294.602 144.813 li
294.57 144.68 294.555 144.543 294.555 144.406 cv
294.555 144.324 294.578 144.152 294.633 143.891 cv
294.711 143.578 li
294.688 143.516 294.652 143.453 294.602 143.391 cv
294.68 143.125 li
294.711 142.797 li
294.742 142.766 li
294.699 142.684 294.672 142.59 294.664 142.484 cv
294.672 142.465 294.684 142.438 294.695 142.406 cv
294.703 142.375 294.711 142.352 294.711 142.328 cv
294.68 142.246 294.664 142.168 294.664 142.094 cv
294.664 141.867 294.789 141.762 295.039 141.781 cv
295.211 141.797 li
295.324 141.746 295.391 141.719 295.414 141.719 cv
295.602 141.719 295.73 141.82 295.805 142.016 cv
295.805 142.078 li
295.836 142.195 295.852 142.297 295.852 142.391 cv
295.852 142.477 295.84 142.539 295.82 142.578 cv
295.727 143.281 li
295.82 143.469 li
295.82 143.648 295.766 143.797 295.664 143.922 cv
295.711 144.094 li
295.539 144.625 li
295.516 144.855 295.492 145.031 295.461 145.156 cv
295.461 145.5 li
295.383 145.703 li
295.398 145.844 li
295.367 146.156 li
295.398 146.422 li
295.602 146.578 li
295.773 146.563 li
295.805 146.516 li
295.914 146.531 li
296.086 146.469 li
296.242 146.313 li
296.305 146.234 li
296.398 146.219 li
296.43 146.156 li
296.477 146.094 li
296.555 146.156 li
296.695 146.016 li
296.773 146.016 li
296.805 145.922 li
296.836 145.922 li
296.883 145.813 li
297.008 145.75 li
297.273 145.625 li
297.48 145.48 297.688 145.406 297.898 145.406 cv
297.961 145.406 li
298.055 145.469 298.121 145.555 298.164 145.656 cv
298.164 145.656 li
cp
296.742 138.234 mo
296.742 138.352 296.664 138.453 296.508 138.547 cv
296.508 138.578 li
296.328 138.789 296.18 138.906 296.055 138.938 cv
295.836 139.188 li
295.695 139.375 li
295.383 139.453 li
295.242 139.656 li
295.008 139.766 li
294.648 140.094 li
294.43 139.875 li
294.461 139.531 li
294.617 139.281 li
294.625 139.148 294.703 139.031 294.852 138.938 cv
294.852 138.891 li
294.93 138.828 li
294.945 138.609 li
295.164 138.563 li
295.164 138.438 li
295.336 138.406 li
295.375 138.219 295.453 138.086 295.57 138 cv
295.617 137.969 li
295.695 137.891 li
295.82 137.547 li
296.434 137.703 296.742 137.934 296.742 138.234 cv
296.742 138.234 li
cp
f
303.176 142.766 mo
303.113 142.656 li
303.004 142.641 li
302.566 142.281 li
302.285 142.25 li
302.066 142.25 li
302.035 142.219 li
301.926 142.25 li
301.801 142.188 li
301.441 142.188 li
301.473 142.25 li
301.16 142.359 li
301.098 142.422 li
301.066 142.438 li
300.887 142.586 300.77 142.703 300.707 142.797 cv
300.613 143.125 li
300.551 143.25 li
300.691 143.453 li
300.457 143.625 li
300.488 143.688 li
300.383 143.867 300.332 144.039 300.332 144.203 cv
300.223 144.344 li
300.223 144.594 li
300.113 144.719 li
300.082 144.844 li
300.035 144.875 li
300.035 145.078 li
300.004 145.141 li
300.004 145.258 299.992 145.344 299.973 145.406 cv
300.004 145.484 li
299.863 145.75 li
299.926 145.828 li
299.832 145.969 li
299.926 146.234 li
299.77 146.422 li
299.801 146.688 li
299.801 146.734 li
299.863 146.766 li
299.926 146.75 li
299.977 146.711 300.023 146.668 300.066 146.625 cv
300.035 146.516 li
300.238 146.484 li
300.27 146.391 li
301.098 145.719 li
301.191 145.688 li
301.285 145.453 li
301.336 145.434 301.414 145.398 301.52 145.344 cv
301.613 145.109 li
301.723 145.109 li
301.676 144.875 li
301.879 144.844 li
301.887 144.813 301.914 144.773 301.957 144.719 cv
301.996 144.656 302.043 144.602 302.098 144.547 cv
302.816 143.594 li
302.926 143.391 li
302.91 143.328 li
303.004 143.188 li
303.035 143.031 li
303.16 142.922 li
303.176 142.766 li
cp
304.504 142.031 mo
304.363 142.219 li
304.473 142.547 li
304.301 142.766 li
304.223 143.063 li
304.176 143.125 li
304.207 143.188 li
304.207 143.324 304.176 143.422 304.113 143.484 cv
304.082 143.531 li
304.082 143.594 li
304.113 143.656 304.129 143.715 304.129 143.766 cv
304.129 143.82 304.121 143.852 304.113 143.859 cv
304.129 143.922 li
304.066 144.078 li
304.113 144.25 li
304.004 144.359 li
304.035 144.547 li
304.129 144.656 li
304.004 144.766 li
304.004 144.984 li
303.91 145.219 li
303.973 145.438 li
303.895 145.547 li
304.035 145.641 li
303.832 145.969 li
303.816 146.016 li
303.957 146.031 li
303.863 146.359 li
303.863 146.422 li
303.863 146.484 303.855 146.531 303.848 146.563 cv
303.863 146.609 li
304.082 146.641 li
304.27 146.922 li
304.176 147.125 li
304.316 147.109 li
304.379 147.227 304.414 147.324 304.426 147.406 cv
304.207 147.625 li
304.145 147.688 304.051 147.75 303.926 147.813 cv
303.691 147.938 li
303.629 147.875 li
303.488 147.953 li
303.051 147.453 li
303.051 147.219 li
302.988 147.031 302.957 146.855 302.957 146.688 cv
302.957 146.609 li
302.879 145.781 li
302.988 145.203 li
302.91 144.859 li
302.676 145.25 li
302.551 145.609 li
302.426 145.672 li
302.238 145.984 li
301.879 146.297 li
301.785 146.469 li
301.473 146.734 li
301.41 146.922 li
300.957 147.203 li
300.488 147.734 li
300.223 147.781 li
300.035 147.922 li
299.805 147.91 299.629 147.82 299.504 147.656 cv
299.086 147.461 298.867 147.168 298.848 146.781 cv
298.926 146.734 li
298.91 146.656 li
298.895 146.484 li
298.801 146.297 li
298.895 146.109 li
298.926 145.813 li
299.02 145.344 li
299.02 145.344 299.02 145.328 299.02 145.297 cv
299.008 145.277 299.004 145.258 299.004 145.234 cv
299.004 145.203 299.012 145.156 299.035 145.094 cv
299.023 145.086 299.02 145.047 299.02 144.984 cv
299.02 144.922 299.043 144.82 299.098 144.672 cv
299.191 144.625 li
299.137 144.574 299.113 144.523 299.113 144.469 cv
299.113 144.43 299.117 144.402 299.129 144.391 cv
299.117 144.359 299.113 144.324 299.113 144.281 cv
299.113 144.18 299.168 144.094 299.285 144.031 cv
299.316 143.938 299.367 143.844 299.441 143.75 cv
299.363 143.641 li
299.535 143.438 li
299.535 143.375 li
299.535 143.199 299.598 143.039 299.723 142.891 cv
299.707 142.641 li
299.754 142.578 li
299.754 142.57 299.754 142.555 299.754 142.531 cv
299.742 142.523 299.738 142.512 299.738 142.5 cv
299.738 142.438 299.758 142.391 299.801 142.359 cv
299.801 142.266 li
299.84 142.172 299.941 142.039 300.098 141.859 cv
300.254 141.672 300.367 141.508 300.441 141.359 cv
300.52 141.438 li
300.738 141.328 li
301.207 141.125 li
302.285 141.172 li
302.285 141.281 li
302.613 141.344 li
302.832 141.344 302.973 141.418 303.035 141.563 cv
303.035 141.531 303.039 141.496 303.051 141.453 cv
303.051 141.434 303.051 141.418 303.051 141.406 cv
303.348 141.672 li
303.613 141.719 li
304.113 141.594 li
304.301 141.953 li
304.504 142.031 li
cp
f
349.801 133.719 mo
349.746 133.855 349.684 133.953 349.613 134.016 cv
349.582 134.121 349.539 134.195 349.488 134.234 cv
349.434 134.328 349.379 134.398 349.316 134.438 cv
349.254 134.516 li
349.223 134.578 349.176 134.609 349.113 134.609 cv
349.035 134.75 li
348.941 134.75 li
348.863 134.875 li
348.754 134.906 li
348.676 135.016 li
348.598 135.063 li
348.461 135.063 348.348 135.105 348.254 135.188 cv
348.129 135.242 348.004 135.266 347.879 135.266 cv
347.742 135.266 347.613 135.234 347.488 135.172 cv
347.332 135.164 347.254 135.137 347.254 135.094 cv
347.066 135.063 li
347.02 135.031 li
346.941 134.859 li
346.785 134.734 li
346.68 134.609 346.621 134.496 346.613 134.391 cv
346.551 134.297 346.488 134.121 346.426 133.859 cv
346.285 133.641 li
346.285 133.516 li
346.176 133.094 li
346.191 132.922 li
346.113 132.484 li
346.16 132.141 li
346.082 132.047 li
345.941 132.391 li
345.762 132.59 345.66 132.711 345.629 132.75 cv
345.598 132.793 345.555 132.813 345.504 132.813 cv
345.492 132.813 345.477 132.809 345.457 132.797 cv
345.363 132.953 li
345.363 132.965 345.363 132.984 345.363 133.016 cv
345.363 133.07 345.395 133.102 345.457 133.109 cv
345.434 133.133 345.387 133.195 345.316 133.297 cv
345.273 133.383 345.242 133.434 345.223 133.453 cv
345.176 133.391 li
345.145 133.578 li
345.02 133.672 344.934 133.813 344.895 134 cv
344.801 134.125 344.652 134.297 344.457 134.516 cv
344.285 134.719 li
344.23 134.719 344.207 134.73 344.207 134.75 cv
344.207 134.766 li
344.152 134.902 344.055 135.008 343.91 135.078 cv
343.738 135.297 li
343.645 135.297 li
343.316 135.422 li
343.035 135.398 342.863 135.277 342.801 135.047 cv
342.785 134.906 li
342.691 134.719 li
342.691 134.563 li
342.582 134.156 li
342.582 134.031 li
342.504 133.891 li
342.551 133.453 li
342.539 133.414 342.535 133.352 342.535 133.266 cv
342.535 133.195 342.539 133.141 342.551 133.109 cv
342.535 133.016 li
342.535 132.969 li
342.473 132.813 li
342.582 132.547 li
342.559 132.477 342.535 132.355 342.504 132.188 cv
342.535 132.063 li
342.582 131.656 li
342.473 131.359 li
342.504 131.125 li
342.457 131 li
342.445 130.969 342.414 130.883 342.363 130.734 cv
342.254 130.781 li
342.082 131 li
341.91 131.156 li
341.582 131.578 li
341.551 131.734 li
341.316 131.984 li
341.207 132.188 li
341.113 132.297 li
341.082 132.508 340.977 132.652 340.801 132.734 cv
340.785 132.922 li
340.73 132.984 340.676 133.063 340.613 133.156 cv
340.551 133.242 340.508 133.293 340.488 133.313 cv
340.465 133.324 340.43 133.354 340.379 133.406 cv
340.207 133.641 li
340.207 133.797 340.145 133.906 340.02 133.969 cv
340.02 134.063 li
339.965 134.137 339.895 134.211 339.801 134.281 cv
339.785 134.25 li
339.738 134.453 li
339.664 134.453 339.598 134.543 339.535 134.719 cv
339.488 134.766 li
339.477 134.922 339.398 135.039 339.254 135.109 cv
339.051 135.297 li
338.902 135.371 338.805 135.406 338.754 135.406 cv
338.512 135.406 338.355 135.203 338.285 134.797 cv
338.223 134.5 li
338.223 134.479 338.223 134.449 338.223 134.406 cv
338.223 134.344 338.23 134.281 338.254 134.219 cv
338.191 133.953 li
338.223 133.719 li
338.191 133.5 li
338.211 133.305 338.242 133.184 338.285 133.141 cv
338.254 132.945 338.238 132.828 338.238 132.797 cv
338.238 132.547 li
338.277 132.484 338.324 132.402 338.379 132.297 cv
338.301 132.219 li
338.277 132.137 338.27 132.09 338.27 132.078 cv
338.27 132.016 338.324 131.906 338.441 131.75 cv
338.348 131.484 li
338.395 131.313 li
338.316 130.906 li
338.348 130.719 li
338.27 130.406 li
338.285 130.188 li
338.16 129.938 li
338.348 129.574 338.543 129.391 338.754 129.391 cv
338.867 129.391 338.977 129.438 339.082 129.531 cv
339.113 129.672 li
339.27 129.758 339.348 129.887 339.348 130.063 cv
339.348 130.031 339.332 130.125 339.301 130.344 cv
339.254 130.328 li
339.379 130.578 li
339.301 130.688 li
339.285 130.734 li
339.363 131.391 li
339.332 131.938 li
339.301 132.031 li
339.348 132.25 li
339.379 132.293 339.395 132.34 339.395 132.391 cv
339.395 132.465 339.355 132.539 339.285 132.609 cv
339.285 132.746 339.258 132.855 339.207 132.938 cv
339.254 133.359 li
339.254 133.531 li
339.27 133.5 li
339.348 133.375 li
339.551 133.016 li
339.582 133.016 li
339.645 133.016 339.707 132.93 339.77 132.75 cv
339.863 132.484 li
339.883 132.434 339.957 132.344 340.082 132.219 cv
340.129 131.969 li
340.301 131.719 li
340.363 131.531 li
340.402 131.5 340.449 131.465 340.504 131.422 cv
340.504 131.391 li
340.535 131.352 340.637 131.25 340.816 131.094 cv
340.91 131.047 li
340.926 130.906 li
341.004 130.859 li
341.043 130.672 341.16 130.543 341.348 130.469 cv
341.301 130.438 li
341.348 130.406 li
341.336 130.398 341.332 130.383 341.332 130.359 cv
341.332 130.34 341.34 130.313 341.363 130.281 cv
341.582 130.188 li
341.629 129.953 li
341.785 129.953 li
341.785 129.945 341.793 129.914 341.816 129.859 cv
342.098 129.641 li
342.223 129.602 342.309 129.578 342.363 129.578 cv
342.477 129.578 342.629 129.609 342.816 129.672 cv
342.957 129.875 li
343.02 129.906 li
343.082 130.063 li
343.285 130.328 li
343.285 130.516 li
343.41 130.656 li
343.41 130.859 li
343.512 131.09 343.566 131.281 343.566 131.438 cv
343.52 131.609 li
343.613 131.844 li
343.457 132 li
343.504 132.313 li
343.473 132.469 li
343.461 132.563 343.457 132.633 343.457 132.672 cv
343.457 132.727 343.477 132.82 343.52 132.953 cv
343.473 133.109 li
343.52 133.297 li
343.473 133.344 li
343.492 133.48 343.523 133.699 343.566 134 cv
343.551 134.063 li
344.004 133.563 li
344.145 133.297 li
344.176 133.246 344.23 133.156 344.316 133.031 cv
344.316 133.016 li
344.355 132.859 344.418 132.758 344.504 132.703 cv
344.504 132.641 344.551 132.57 344.645 132.484 cv
344.754 132.422 li
344.793 132.266 344.895 132.137 345.051 132.031 cv
345.113 131.828 li
345.238 131.672 li
345.379 131.531 li
345.461 131.461 345.527 131.355 345.582 131.219 cv
345.691 131.047 li
345.754 130.844 li
345.895 130.75 li
346.051 130.563 li
346.207 130.219 li
346.176 130.219 346.16 130.211 346.16 130.188 cv
346.16 130.188 346.164 130.172 346.176 130.141 cv
346.285 130.063 li
346.395 129.828 li
346.551 129.777 346.637 129.75 346.66 129.75 cv
346.66 129.75 346.676 129.762 346.707 129.781 cv
346.973 129.781 li
347.191 129.891 li
347.379 130.109 li
347.426 130.313 li
347.41 130.469 li
347.348 130.516 li
347.191 130.813 li
347.129 131.141 li
347.18 131.184 347.207 131.266 347.207 131.391 cv
347.164 131.434 347.145 131.492 347.145 131.563 cv
347.098 131.672 li
347.105 131.727 347.113 131.805 347.113 131.906 cv
347.113 131.992 347.113 132.047 347.113 132.078 cv
347.051 132.156 li
347.113 132.25 li
347.004 132.375 li
347.066 132.375 347.098 132.438 347.098 132.563 cv
347.105 132.617 347.113 132.652 347.113 132.672 cv
347.113 132.703 347.105 132.734 347.098 132.766 cv
347.105 132.859 347.113 132.949 347.113 133.031 cv
347.113 133.063 li
347.113 133.086 347.176 133.277 347.301 133.641 cv
347.332 133.781 li
347.488 133.953 li
347.566 134.141 li
347.645 134.188 li
347.707 134.266 li
347.785 134.281 li
347.91 134.313 li
347.973 134.297 li
348.02 134.297 li
348.113 134.297 348.223 134.262 348.348 134.188 cv
348.387 134.094 348.488 133.996 348.645 133.891 cv
348.652 133.852 348.711 133.762 348.816 133.625 cv
349.051 133.453 li
349.129 133.281 li
349.211 133.242 349.293 133.219 349.379 133.219 cv
349.48 133.219 349.59 133.246 349.707 133.297 cv
349.77 133.391 349.801 133.531 349.801 133.719 cv
349.801 133.719 li
cp
f
354.59 132.438 mo
354.574 132.359 li
354.512 132.297 354.473 132.229 354.465 132.156 cv
354.496 132.078 li
354.371 131.813 li
354.402 131.547 li
354.34 131.484 li
354.223 131.391 354.16 131.32 354.152 131.266 cv
354.066 131.227 354.027 131.133 354.027 130.984 cv
353.934 130.969 li
353.777 130.688 li
353.652 130.594 li
353.355 130.469 li
353.246 130.453 li
353.184 130.453 353.141 130.434 353.121 130.391 cv
352.855 130.703 li
352.668 131.094 li
352.371 131.25 li
352.324 131.406 li
352.184 131.469 li
352.137 131.828 li
351.965 131.922 li
351.934 132.047 351.918 132.168 351.918 132.281 cv
351.684 132.484 li
351.762 132.531 li
351.762 132.648 351.719 132.746 351.637 132.828 cv
351.605 132.914 351.563 133.008 351.512 133.109 cv
351.512 133.219 li
351.48 133.281 li
351.496 133.438 li
351.34 133.828 li
351.371 133.891 li
351.371 134.281 li
351.309 134.484 li
351.324 134.672 li
351.449 134.859 li
351.652 134.922 li
351.715 134.953 li
351.824 134.906 li
352.184 134.922 li
352.246 134.781 li
352.309 134.781 li
352.359 134.781 352.391 134.797 352.402 134.828 cv
352.527 134.781 li
352.637 134.828 li
352.824 134.703 li
352.855 134.656 li
352.98 134.641 li
353.043 134.539 353.191 134.434 353.434 134.328 cv
353.465 134.25 li
353.746 134.063 li
353.902 133.828 li
354.121 133.719 li
354.137 133.656 li
354.199 133.5 li
354.199 133.313 li
354.371 133.172 li
354.434 133.078 li
354.496 133 li
354.465 132.887 354.449 132.805 354.449 132.75 cv
354.449 132.668 354.473 132.578 354.527 132.484 cv
354.59 132.438 li
cp
355.512 132.094 mo
355.418 132.344 li
355.418 132.594 355.406 132.789 355.387 132.922 cv
355.293 133.063 li
355.293 133.219 li
355.23 133.313 li
355.184 133.516 li
355.027 133.672 li
354.934 134.016 li
354.824 134.063 li
354.762 134.219 li
354.605 134.313 li
354.48 134.547 li
354.324 134.641 li
354.309 134.797 li
354.043 134.906 li
353.918 135.074 353.766 135.18 353.59 135.219 cv
353.527 135.234 li
353.402 135.43 353.23 135.531 353.012 135.531 cv
352.918 135.582 352.813 135.609 352.699 135.609 cv
352.559 135.719 li
352.418 135.75 li
352.23 135.891 li
352.059 135.875 li
351.855 135.938 li
351.621 135.844 li
351.012 135.797 li
350.809 135.469 li
350.496 135.156 li
350.574 134.922 li
350.355 134.453 li
350.449 134.266 li
350.387 133.938 li
350.449 133.719 li
350.438 133.594 350.434 133.5 350.434 133.438 cv
350.434 133.262 350.48 133.133 350.574 133.047 cv
350.574 132.953 350.629 132.805 350.746 132.594 cv
350.824 132.594 li
350.793 132.484 li
350.84 132.297 li
350.84 132.078 li
350.91 131.996 350.953 131.945 350.965 131.922 cv
350.918 131.719 li
350.918 131.672 li
350.98 131.539 351.012 131.402 351.012 131.266 cv
351.309 130.859 li
351.309 130.859 351.316 130.852 351.34 130.828 cv
351.359 130.809 351.379 130.789 351.402 130.766 cv
351.387 130.719 li
351.449 130.719 li
351.652 130.469 li
351.668 130.156 li
352.027 130.031 li
352.152 129.949 352.234 129.809 352.277 129.609 cv
352.449 129.609 li
352.551 129.547 352.645 129.516 352.73 129.516 cv
352.813 129.516 352.895 129.539 352.98 129.578 cv
353.121 129.594 li
353.496 129.453 li
353.684 129.641 li
353.84 129.734 li
353.949 129.734 li
354.168 129.844 li
354.277 129.844 li
354.402 129.961 354.543 130.117 354.699 130.313 cv
354.73 130.375 li
354.824 130.438 li
355.121 130.813 li
355.387 131.469 li
355.387 131.609 li
355.512 132.094 li
cp
f
360.879 130.344 mo
360.879 130.43 360.793 130.512 360.629 130.594 cv
360.598 130.637 360.527 130.68 360.426 130.719 cv
360.289 130.773 360.195 130.82 360.145 130.859 cv
359.848 130.75 li
359.699 130.867 359.508 130.922 359.27 130.922 cv
359.098 130.875 li
358.973 131 li
358.598 131 li
358.363 131.141 li
358.258 131.109 358.16 131.094 358.066 131.094 cv
358.043 131.117 357.98 131.133 357.879 131.141 cv
357.824 131.141 357.773 131.133 357.723 131.109 cv
357.676 131.641 li
357.691 132.031 li
357.645 132.516 li
357.676 133.047 li
357.723 133.297 li
357.723 133.5 li
357.91 133.922 li
357.887 133.953 357.879 133.984 357.879 134.016 cv
357.879 134.078 357.977 134.133 358.176 134.172 cv
358.207 134.344 li
358.301 134.375 li
358.473 134.5 li
358.582 134.578 li
358.676 134.559 358.742 134.547 358.785 134.547 cv
358.867 134.547 358.949 134.563 359.035 134.594 cv
359.074 134.574 359.152 134.508 359.27 134.391 cv
359.352 134.32 359.43 134.281 359.504 134.281 cv
359.512 134.281 359.527 134.281 359.551 134.281 cv
359.57 134.293 359.586 134.297 359.598 134.297 cv
359.68 134.121 359.832 134.008 360.051 133.953 cv
360.238 133.953 360.398 134.012 360.535 134.125 cv
360.535 134.234 li
360.535 134.547 360.418 134.746 360.191 134.828 cv
360.105 135.027 359.93 135.152 359.66 135.203 cv
359.504 135.359 li
359.316 135.359 li
358.988 135.438 li
358.914 135.457 358.809 135.469 358.676 135.469 cv
358.602 135.469 358.52 135.453 358.426 135.422 cv
358.254 135.422 li
357.754 135.156 li
357.629 135.109 li
357.348 134.719 li
357.176 134.531 li
356.863 133.828 li
356.754 133.172 li
356.785 133.016 li
356.676 132.859 li
356.738 132.656 li
356.676 132.344 li
356.77 132.25 li
356.801 132.078 li
356.754 131.906 li
356.785 131.656 li
356.723 131.422 li
356.801 131.359 li
356.801 131.141 li
356.691 131.094 li
356.426 131.141 li
356.176 130.969 li
356.145 130.969 li
355.863 130.969 355.723 130.82 355.723 130.516 cv
355.723 130.469 li
355.551 130.203 li
355.816 129.953 li
356.16 130.016 li
356.348 129.984 li
356.613 130.063 li
356.91 130.063 li
356.91 129.781 li
356.723 129.391 li
356.91 129.281 li
356.832 129.078 li
356.848 128.641 li
356.738 128.453 li
356.676 128.359 356.645 128.266 356.645 128.172 cv
356.645 128.078 356.664 127.996 356.707 127.922 cv
356.754 127.734 li
356.863 127.625 li
357.113 127.574 357.277 127.547 357.363 127.547 cv
357.664 127.547 357.832 127.684 357.863 127.953 cv
357.816 128.031 li
357.867 128.117 357.895 128.195 357.895 128.266 cv
357.895 128.277 357.895 128.297 357.895 128.328 cv
357.863 128.422 li
357.848 128.516 li
357.895 128.703 li
357.895 128.766 li
357.91 128.969 li
357.785 129.125 li
357.863 129.406 li
357.801 129.75 li
357.91 129.875 li
357.801 130.125 li
358.238 130.063 li
359.004 130.141 li
359.629 130.047 li
359.832 130.063 li
359.91 130.047 li
360.457 130.047 li
360.738 130.047 360.879 130.148 360.879 130.344 cv
360.879 130.344 li
cp
f
365.496 132.438 mo
365.48 132.359 li
365.418 132.297 365.379 132.229 365.371 132.156 cv
365.402 132.078 li
365.277 131.813 li
365.309 131.547 li
365.246 131.484 li
365.129 131.391 365.066 131.32 365.059 131.266 cv
364.973 131.227 364.934 131.133 364.934 130.984 cv
364.84 130.969 li
364.684 130.688 li
364.559 130.594 li
364.262 130.469 li
364.152 130.453 li
364.09 130.453 364.047 130.434 364.027 130.391 cv
363.762 130.703 li
363.574 131.094 li
363.277 131.25 li
363.23 131.406 li
363.09 131.469 li
363.043 131.828 li
362.871 131.922 li
362.84 132.047 362.824 132.168 362.824 132.281 cv
362.59 132.484 li
362.668 132.531 li
362.668 132.648 362.625 132.746 362.543 132.828 cv
362.512 132.914 362.469 133.008 362.418 133.109 cv
362.418 133.219 li
362.387 133.281 li
362.402 133.438 li
362.246 133.828 li
362.277 133.891 li
362.277 134.281 li
362.215 134.484 li
362.23 134.672 li
362.355 134.859 li
362.559 134.922 li
362.621 134.953 li
362.73 134.906 li
363.09 134.922 li
363.152 134.781 li
363.215 134.781 li
363.266 134.781 363.297 134.797 363.309 134.828 cv
363.434 134.781 li
363.543 134.828 li
363.73 134.703 li
363.762 134.656 li
363.887 134.641 li
363.949 134.539 364.098 134.434 364.34 134.328 cv
364.371 134.25 li
364.652 134.063 li
364.809 133.828 li
365.027 133.719 li
365.043 133.656 li
365.105 133.5 li
365.105 133.313 li
365.277 133.172 li
365.34 133.078 li
365.402 133 li
365.371 132.887 365.355 132.805 365.355 132.75 cv
365.355 132.668 365.379 132.578 365.434 132.484 cv
365.496 132.438 li
cp
366.418 132.094 mo
366.324 132.344 li
366.324 132.594 366.313 132.789 366.293 132.922 cv
366.199 133.063 li
366.199 133.219 li
366.137 133.313 li
366.09 133.516 li
365.934 133.672 li
365.84 134.016 li
365.73 134.063 li
365.668 134.219 li
365.512 134.313 li
365.387 134.547 li
365.23 134.641 li
365.215 134.797 li
364.949 134.906 li
364.824 135.074 364.672 135.18 364.496 135.219 cv
364.434 135.234 li
364.309 135.43 364.137 135.531 363.918 135.531 cv
363.824 135.582 363.719 135.609 363.605 135.609 cv
363.465 135.719 li
363.324 135.75 li
363.137 135.891 li
362.965 135.875 li
362.762 135.938 li
362.527 135.844 li
361.918 135.797 li
361.715 135.469 li
361.402 135.156 li
361.48 134.922 li
361.262 134.453 li
361.355 134.266 li
361.293 133.938 li
361.355 133.719 li
361.344 133.594 361.34 133.5 361.34 133.438 cv
361.34 133.262 361.387 133.133 361.48 133.047 cv
361.48 132.953 361.535 132.805 361.652 132.594 cv
361.73 132.594 li
361.699 132.484 li
361.746 132.297 li
361.746 132.078 li
361.816 131.996 361.859 131.945 361.871 131.922 cv
361.824 131.719 li
361.824 131.672 li
361.887 131.539 361.918 131.402 361.918 131.266 cv
362.215 130.859 li
362.215 130.859 362.223 130.852 362.246 130.828 cv
362.266 130.809 362.285 130.789 362.309 130.766 cv
362.293 130.719 li
362.355 130.719 li
362.559 130.469 li
362.574 130.156 li
362.934 130.031 li
363.059 129.949 363.141 129.809 363.184 129.609 cv
363.355 129.609 li
363.457 129.547 363.551 129.516 363.637 129.516 cv
363.719 129.516 363.801 129.539 363.887 129.578 cv
364.027 129.594 li
364.402 129.453 li
364.59 129.641 li
364.746 129.734 li
364.855 129.734 li
365.074 129.844 li
365.184 129.844 li
365.309 129.961 365.449 130.117 365.605 130.313 cv
365.637 130.375 li
365.73 130.438 li
366.027 130.813 li
366.293 131.469 li
366.293 131.609 li
366.418 132.094 li
cp
f
372.785 130.172 mo
372.676 130.625 li
372.16 130.703 li
371.879 130.875 li
371.691 130.797 li
371.488 130.906 li
371.285 131 li
371.145 131.094 li
371.145 131.141 li
370.848 131.281 li
370.66 131.531 li
370.551 131.531 li
370.402 131.699 370.301 131.797 370.238 131.828 cv
370.035 132.156 li
369.973 132.188 li
369.941 132.262 369.91 132.371 369.879 132.516 cv
369.676 132.594 li
369.598 132.75 li
369.473 132.891 li
369.457 133.109 li
369.332 133.156 li
369.332 133.359 li
369.301 133.406 li
369.32 133.449 369.352 133.5 369.395 133.563 cv
369.191 133.641 li
369.16 133.828 li
369.02 134.063 li
369.098 134.234 li
368.926 134.5 li
368.934 134.594 368.941 134.656 368.941 134.688 cv
368.941 134.699 368.941 134.719 368.941 134.75 cv
368.941 134.773 368.941 134.793 368.941 134.813 cv
368.957 134.938 li
369.207 135.188 li
369.02 135.516 li
368.848 135.641 li
368.457 135.844 li
367.941 135.625 li
367.941 135.313 li
367.879 135.172 li
367.926 134.969 li
367.902 134.824 367.895 134.715 367.895 134.641 cv
367.895 134.609 367.898 134.57 367.91 134.516 cv
367.91 134.477 367.91 134.445 367.91 134.422 cv
367.895 134.281 li
367.832 134.219 367.801 134.148 367.801 134.063 cv
367.801 133.992 367.832 133.906 367.895 133.813 cv
367.895 133.762 367.883 133.621 367.863 133.391 cv
367.91 133.344 li
367.863 133.156 li
367.895 133 li
367.863 132.891 li
367.91 132.578 li
367.832 132.438 li
367.879 132.281 li
367.832 132.094 li
367.84 132.043 367.848 131.969 367.848 131.875 cv
367.848 131.742 367.824 131.648 367.785 131.594 cv
367.848 131.516 li
367.785 131.266 li
367.66 131.078 li
367.723 130.859 li
367.676 130.766 li
367.613 130.438 li
367.613 130.328 li
367.57 130.266 367.551 130.195 367.551 130.109 cv
367.551 129.922 367.754 129.766 368.16 129.641 cv
368.52 129.703 li
368.582 129.969 li
368.723 130.156 li
368.676 130.531 li
368.707 130.719 368.742 130.922 368.785 131.141 cv
368.816 131.375 li
368.824 131.398 368.836 131.449 368.848 131.531 cv
368.848 131.586 368.824 131.641 368.785 131.703 cv
368.816 131.984 li
368.801 132.297 li
368.738 132.438 li
368.785 132.484 li
368.801 132.625 li
368.863 132.563 368.898 132.496 368.91 132.422 cv
368.957 132.219 li
368.988 132.156 369.027 132.109 369.082 132.078 cv
369.145 131.875 li
369.332 131.766 li
369.363 131.594 li
369.52 131.422 li
369.629 131.219 li
369.754 131.086 369.871 131 369.988 130.969 cv
370.004 130.922 li
370.145 130.734 li
370.285 130.703 li
370.316 130.656 li
370.379 130.578 li
370.535 130.484 li
370.613 130.391 li
370.691 130.406 li
370.816 130.344 li
370.863 130.266 li
371.035 130.188 li
371.27 130.031 li
371.613 129.922 li
371.738 129.902 371.805 129.891 371.816 129.891 cv
371.816 129.902 371.816 129.906 371.816 129.906 cv
371.805 129.906 371.801 129.914 371.801 129.922 cv
371.816 129.922 li
371.855 129.922 371.914 129.902 371.988 129.859 cv
372.027 129.82 372.09 129.797 372.176 129.797 cv
372.215 129.797 372.285 129.809 372.379 129.828 cv
372.617 129.84 372.754 129.953 372.785 130.172 cv
372.785 130.172 li
cp
f
344.273 139.344 mo
344.273 139.531 344.156 139.719 343.93 139.906 cv
343.82 139.828 li
343.602 139.969 li
343.32 139.422 li
343.297 139.277 343.262 139.156 343.211 139.063 cv
343.117 139.109 li
342.883 138.984 li
342.805 138.969 li
342.617 139.078 li
342.32 139 li
342.227 139.031 li
342.141 139.125 342.059 139.172 341.977 139.172 cv
341.934 139.172 341.898 139.168 341.867 139.156 cv
341.867 139.297 li
341.773 139.453 341.656 139.637 341.523 139.844 cv
341.512 139.938 341.48 140.109 341.43 140.359 cv
341.305 140.453 li
341.242 140.609 li
341.18 140.734 li
341.242 141.016 li
341.07 141.266 li
341.023 141.469 li
340.961 141.578 li
340.977 141.781 li
340.789 142.281 li
340.805 142.516 li
340.793 142.559 340.742 142.695 340.648 142.922 cv
340.633 142.969 li
340.727 142.938 340.805 142.918 340.867 142.906 cv
340.945 142.922 li
340.965 142.914 341.008 142.898 341.07 142.875 cv
341.117 142.875 li
341.117 142.875 341.273 142.887 341.586 142.906 cv
341.633 142.875 li
341.746 142.855 341.813 142.844 341.836 142.844 cv
341.93 142.844 342.027 142.871 342.133 142.922 cv
342.246 142.891 342.344 142.875 342.43 142.875 cv
342.5 142.875 342.57 142.891 342.633 142.922 cv
342.758 142.922 li
342.945 142.953 li
343.277 142.965 343.445 143.102 343.445 143.359 cv
343.445 143.434 343.43 143.523 343.398 143.625 cv
342.773 143.813 li
342.398 143.75 li
342.305 143.781 342.133 143.82 341.883 143.859 cv
341.82 143.781 li
341.758 143.844 341.668 143.875 341.555 143.875 cv
341.398 143.875 li
341.008 144.063 li
340.805 143.969 li
340.742 143.969 li
340.668 144.063 340.574 144.121 340.461 144.141 cv
340.477 144.234 li
340.414 144.422 li
340.508 144.672 li
340.32 145.031 li
340.367 145.594 li
340.289 145.781 li
340.336 145.984 li
340.195 146.297 li
340.242 146.453 li
340.242 146.465 340.242 146.492 340.242 146.531 cv
340.242 146.543 340.219 146.641 340.18 146.828 cv
340.148 147.016 340.133 147.203 340.133 147.391 cv
340.133 147.516 li
340.141 147.527 340.195 147.59 340.289 147.703 cv
340.195 147.938 li
340.289 148.219 li
340.227 148.438 li
340.383 149.125 li
340.414 149.891 li
340.648 150.172 li
340.508 150.469 li
340.621 150.664 340.68 150.828 340.68 150.953 cv
340.68 151 li
340.68 151.008 340.684 151.031 340.695 151.063 cv
340.695 151.102 340.695 151.129 340.695 151.141 cv
340.695 151.492 340.492 151.676 340.086 151.688 cv
339.977 151.469 li
339.805 151.375 li
339.773 151.125 li
339.492 150.328 li
339.492 150.188 li
339.461 150.008 339.445 149.91 339.445 149.891 cv
339.445 149.836 339.445 149.805 339.445 149.797 cv
339.414 149.547 li
339.445 149.313 li
339.414 149.156 li
339.414 148.844 li
339.273 147.969 li
339.305 147.938 li
339.273 147.781 li
339.305 147.594 li
339.195 147.406 li
339.289 147.25 li
339.289 146.531 li
339.352 146.438 li
339.352 145.938 li
339.398 145.828 li
339.352 145.391 li
339.414 145.219 li
339.434 145.063 339.484 144.711 339.57 144.156 cv
339.523 144.156 li
339.336 144.109 li
339.133 144.109 li
338.742 144.156 li
338.492 144.109 li
338.086 144.188 li
337.961 144.156 li
337.906 144.168 337.852 144.172 337.789 144.172 cv
337.371 143.984 337.156 143.84 337.133 143.734 cv
337.055 143.5 li
337.18 143.137 337.344 142.953 337.555 142.953 cv
337.563 142.953 337.727 142.992 338.039 143.063 cv
338.852 143.078 li
339.242 143 li
339.57 143.016 li
339.711 143.031 li
339.742 142.844 li
339.773 142.438 li
339.836 142.266 li
339.805 141.984 li
339.805 141.891 339.84 141.805 339.914 141.719 cv
339.898 141.578 li
340.055 141.406 li
340.117 140.984 li
340.18 140.906 li
340.133 140.734 li
340.246 140.602 340.305 140.492 340.305 140.406 cv
340.293 140.355 340.289 140.328 340.289 140.328 cv
340.289 140.402 340.359 140.188 340.508 139.688 cv
340.602 139.609 li
340.617 139.297 li
340.648 139.375 li
340.648 139.328 li
340.648 139.172 340.711 139.059 340.836 138.984 cv
340.914 138.859 li
341.086 138.453 li
341.117 138.453 li
341.219 138.453 341.273 138.391 341.273 138.266 cv
341.273 138.219 li
341.664 138.078 li
341.773 138.078 li
341.898 138.039 342.023 138.016 342.148 138.016 cv
342.258 138.016 li
342.32 137.984 li
342.633 137.922 li
342.992 138 li
343.012 138.012 343.047 138.027 343.102 138.047 cv
343.195 138.008 343.262 137.984 343.305 137.984 cv
343.43 137.984 343.547 138.086 343.664 138.281 cv
343.867 138.422 li
344.008 138.703 li
344.211 138.906 li
344.273 139.297 li
344.273 139.344 li
cp
f
349.055 142.5 mo
348.945 142.953 li
348.43 143.031 li
348.148 143.203 li
347.961 143.125 li
347.758 143.234 li
347.555 143.328 li
347.414 143.422 li
347.414 143.469 li
347.117 143.609 li
346.93 143.859 li
346.82 143.859 li
346.672 144.027 346.57 144.125 346.508 144.156 cv
346.305 144.484 li
346.242 144.516 li
346.211 144.59 346.18 144.699 346.148 144.844 cv
345.945 144.922 li
345.867 145.078 li
345.742 145.219 li
345.727 145.438 li
345.602 145.484 li
345.602 145.688 li
345.57 145.734 li
345.59 145.777 345.621 145.828 345.664 145.891 cv
345.461 145.969 li
345.43 146.156 li
345.289 146.391 li
345.367 146.563 li
345.195 146.828 li
345.203 146.922 345.211 146.984 345.211 147.016 cv
345.211 147.027 345.211 147.047 345.211 147.078 cv
345.211 147.102 345.211 147.121 345.211 147.141 cv
345.227 147.266 li
345.477 147.516 li
345.289 147.844 li
345.117 147.969 li
344.727 148.172 li
344.211 147.953 li
344.211 147.641 li
344.148 147.5 li
344.195 147.297 li
344.172 147.152 344.164 147.043 344.164 146.969 cv
344.164 146.938 344.168 146.898 344.18 146.844 cv
344.18 146.805 344.18 146.773 344.18 146.75 cv
344.164 146.609 li
344.102 146.547 344.07 146.477 344.07 146.391 cv
344.07 146.32 344.102 146.234 344.164 146.141 cv
344.164 146.09 344.152 145.949 344.133 145.719 cv
344.18 145.672 li
344.133 145.484 li
344.164 145.328 li
344.133 145.219 li
344.18 144.906 li
344.102 144.766 li
344.148 144.609 li
344.102 144.422 li
344.109 144.371 344.117 144.297 344.117 144.203 cv
344.117 144.07 344.094 143.977 344.055 143.922 cv
344.117 143.844 li
344.055 143.594 li
343.93 143.406 li
343.992 143.188 li
343.945 143.094 li
343.883 142.766 li
343.883 142.656 li
343.84 142.594 343.82 142.523 343.82 142.438 cv
343.82 142.25 344.023 142.094 344.43 141.969 cv
344.789 142.031 li
344.852 142.297 li
344.992 142.484 li
344.945 142.859 li
344.977 143.047 345.012 143.25 345.055 143.469 cv
345.086 143.703 li
345.094 143.727 345.105 143.777 345.117 143.859 cv
345.117 143.914 345.094 143.969 345.055 144.031 cv
345.086 144.313 li
345.07 144.625 li
345.008 144.766 li
345.055 144.813 li
345.07 144.953 li
345.133 144.891 345.168 144.824 345.18 144.75 cv
345.227 144.547 li
345.258 144.484 345.297 144.438 345.352 144.406 cv
345.414 144.203 li
345.602 144.094 li
345.633 143.922 li
345.789 143.75 li
345.898 143.547 li
346.023 143.414 346.141 143.328 346.258 143.297 cv
346.273 143.25 li
346.414 143.063 li
346.555 143.031 li
346.586 142.984 li
346.648 142.906 li
346.805 142.813 li
346.883 142.719 li
346.961 142.734 li
347.086 142.672 li
347.133 142.594 li
347.305 142.516 li
347.539 142.359 li
347.883 142.25 li
348.008 142.23 348.074 142.219 348.086 142.219 cv
348.086 142.23 348.086 142.234 348.086 142.234 cv
348.074 142.234 348.07 142.242 348.07 142.25 cv
348.086 142.25 li
348.125 142.25 348.184 142.23 348.258 142.188 cv
348.297 142.148 348.359 142.125 348.445 142.125 cv
348.484 142.125 348.555 142.137 348.648 142.156 cv
348.887 142.168 349.023 142.281 349.055 142.5 cv
349.055 142.5 li
cp
f
353.027 145.656 mo
353.027 145.875 352.988 146.012 352.918 146.063 cv
352.84 146.125 li
352.777 146.313 li
352.559 146.391 li
352.484 146.539 352.387 146.652 352.262 146.734 cv
352.137 146.781 li
351.949 146.969 li
351.777 147.016 li
351.715 147.184 351.578 147.273 351.371 147.281 cv
351.359 147.313 351.316 147.371 351.246 147.453 cv
351.109 147.547 350.965 147.605 350.809 147.625 cv
350.746 147.641 li
350.652 147.766 li
350.371 147.766 li
350.137 147.922 li
349.574 147.5 li
349.309 146.969 li
349.293 146.281 li
349.23 146.109 li
349.402 144.875 li
349.465 144.813 li
349.434 144.68 349.418 144.543 349.418 144.406 cv
349.418 144.324 349.441 144.152 349.496 143.891 cv
349.574 143.578 li
349.551 143.516 349.516 143.453 349.465 143.391 cv
349.543 143.125 li
349.574 142.797 li
349.605 142.766 li
349.563 142.684 349.535 142.59 349.527 142.484 cv
349.535 142.465 349.547 142.438 349.559 142.406 cv
349.566 142.375 349.574 142.352 349.574 142.328 cv
349.543 142.246 349.527 142.168 349.527 142.094 cv
349.527 141.867 349.652 141.762 349.902 141.781 cv
350.074 141.797 li
350.188 141.746 350.254 141.719 350.277 141.719 cv
350.465 141.719 350.594 141.82 350.668 142.016 cv
350.668 142.078 li
350.699 142.195 350.715 142.297 350.715 142.391 cv
350.715 142.477 350.703 142.539 350.684 142.578 cv
350.59 143.281 li
350.684 143.469 li
350.684 143.648 350.629 143.797 350.527 143.922 cv
350.574 144.094 li
350.402 144.625 li
350.379 144.855 350.355 145.031 350.324 145.156 cv
350.324 145.5 li
350.246 145.703 li
350.262 145.844 li
350.23 146.156 li
350.262 146.422 li
350.465 146.578 li
350.637 146.563 li
350.668 146.516 li
350.777 146.531 li
350.949 146.469 li
351.105 146.313 li
351.168 146.234 li
351.262 146.219 li
351.293 146.156 li
351.34 146.094 li
351.418 146.156 li
351.559 146.016 li
351.637 146.016 li
351.668 145.922 li
351.699 145.922 li
351.746 145.813 li
351.871 145.75 li
352.137 145.625 li
352.344 145.48 352.551 145.406 352.762 145.406 cv
352.824 145.406 li
352.918 145.469 352.984 145.555 353.027 145.656 cv
353.027 145.656 li
cp
351.605 138.234 mo
351.605 138.352 351.527 138.453 351.371 138.547 cv
351.371 138.578 li
351.191 138.789 351.043 138.906 350.918 138.938 cv
350.699 139.188 li
350.559 139.375 li
350.246 139.453 li
350.105 139.656 li
349.871 139.766 li
349.512 140.094 li
349.293 139.875 li
349.324 139.531 li
349.48 139.281 li
349.488 139.148 349.566 139.031 349.715 138.938 cv
349.715 138.891 li
349.793 138.828 li
349.809 138.609 li
350.027 138.563 li
350.027 138.438 li
350.199 138.406 li
350.238 138.219 350.316 138.086 350.434 138 cv
350.48 137.969 li
350.559 137.891 li
350.684 137.547 li
351.297 137.703 351.605 137.934 351.605 138.234 cv
351.605 138.234 li
cp
f
358.996 145.516 mo
358.73 145.766 li
358.715 145.859 li
358.684 146.027 358.605 146.164 358.48 146.266 cv
358.25 146.684 357.938 146.992 357.543 147.188 cv
357.324 147.359 li
357.152 147.375 li
356.918 147.547 li
356.762 147.563 li
356.418 147.781 li
356.199 147.766 li
355.949 147.875 li
355.746 147.813 li
355.652 147.906 li
355.387 147.859 li
355.121 147.906 li
355.012 147.813 li
354.73 147.766 li
354.324 147.453 li
354.105 147.172 li
353.969 146.996 353.902 146.844 353.902 146.719 cv
353.902 146.688 li
353.762 146.469 li
353.762 146.297 li
353.73 146.184 353.715 146.078 353.715 145.984 cv
353.715 145.891 li
353.652 145.641 li
353.715 145.484 li
353.652 145.359 li
353.824 145.094 li
353.793 144.875 li
353.902 144.516 li
353.949 144.422 li
354.012 144.094 li
353.98 144.031 li
354.152 143.859 li
354.184 143.719 li
354.293 143.391 li
354.465 143 li
354.73 142.781 li
354.777 142.656 li
354.871 142.5 li
354.887 142.359 li
355.121 142.094 li
355.172 142.074 355.234 142.055 355.309 142.031 cv
355.348 141.855 355.582 141.75 356.012 141.719 cv
356.375 141.805 356.609 141.902 356.715 142.016 cv
356.816 142.039 356.895 142.078 356.949 142.141 cv
357.246 142.156 li
357.434 142.406 li
357.484 142.5 357.52 142.594 357.543 142.688 cv
357.652 142.797 li
357.605 143.016 li
357.613 143.078 357.621 143.184 357.621 143.328 cv
357.699 143.375 li
357.699 143.594 li
357.746 144.016 li
357.547 144.215 357.324 144.328 357.074 144.359 cv
356.949 144.121 356.785 143.938 356.59 143.813 cv
356.559 143.344 li
356.48 143.188 li
356.48 143.078 li
356.34 142.922 li
356.262 142.859 li
356.137 142.906 li
355.949 142.906 li
355.832 142.93 355.719 143.016 355.605 143.172 cv
355.488 143.32 355.379 143.477 355.277 143.641 cv
355.262 143.781 li
355.168 143.859 li
355.168 144.109 li
354.996 144.297 li
354.762 144.922 li
354.777 145.078 li
354.668 145.344 li
354.715 145.641 li
354.621 145.688 li
354.59 146.078 li
354.605 146.156 li
354.777 146.313 li
354.855 146.609 li
355.043 146.672 li
355.059 146.781 li
355.293 146.828 li
355.48 146.859 li
355.543 146.828 355.621 146.813 355.715 146.813 cv
355.809 146.813 li
355.922 146.762 356.027 146.734 356.121 146.734 cv
356.184 146.703 356.266 146.68 356.371 146.656 cv
356.484 146.5 356.645 146.422 356.855 146.422 cv
356.934 146.422 li
356.984 146.422 357.016 146.402 357.027 146.359 cv
357.129 146.203 357.297 146.102 357.527 146.047 cv
357.785 145.82 357.934 145.633 357.965 145.484 cv
358.098 145.414 358.188 145.297 358.23 145.141 cv
358.309 145.078 li
358.355 144.766 li
358.781 144.828 358.996 145.043 358.996 145.406 cv
358.996 145.516 li
cp
f
364.156 142.672 mo
364.156 142.758 364.07 142.84 363.906 142.922 cv
363.875 142.965 363.805 143.008 363.703 143.047 cv
363.566 143.102 363.473 143.148 363.422 143.188 cv
363.125 143.078 li
362.977 143.195 362.785 143.25 362.547 143.25 cv
362.375 143.203 li
362.25 143.328 li
361.875 143.328 li
361.641 143.469 li
361.535 143.438 361.438 143.422 361.344 143.422 cv
361.32 143.445 361.258 143.461 361.156 143.469 cv
361.102 143.469 361.051 143.461 361 143.438 cv
360.953 143.969 li
360.969 144.359 li
360.922 144.844 li
360.953 145.375 li
361 145.625 li
361 145.828 li
361.188 146.25 li
361.164 146.281 361.156 146.313 361.156 146.344 cv
361.156 146.406 361.254 146.461 361.453 146.5 cv
361.484 146.672 li
361.578 146.703 li
361.75 146.828 li
361.859 146.906 li
361.953 146.887 362.02 146.875 362.063 146.875 cv
362.145 146.875 362.227 146.891 362.313 146.922 cv
362.352 146.902 362.43 146.836 362.547 146.719 cv
362.629 146.648 362.707 146.609 362.781 146.609 cv
362.789 146.609 362.805 146.609 362.828 146.609 cv
362.848 146.621 362.863 146.625 362.875 146.625 cv
362.957 146.449 363.109 146.336 363.328 146.281 cv
363.516 146.281 363.676 146.34 363.813 146.453 cv
363.813 146.563 li
363.813 146.875 363.695 147.074 363.469 147.156 cv
363.383 147.355 363.207 147.48 362.938 147.531 cv
362.781 147.688 li
362.594 147.688 li
362.266 147.766 li
362.191 147.785 362.086 147.797 361.953 147.797 cv
361.879 147.797 361.797 147.781 361.703 147.75 cv
361.531 147.75 li
361.031 147.484 li
360.906 147.438 li
360.625 147.047 li
360.453 146.859 li
360.141 146.156 li
360.031 145.5 li
360.063 145.344 li
359.953 145.188 li
360.016 144.984 li
359.953 144.672 li
360.047 144.578 li
360.078 144.406 li
360.031 144.234 li
360.063 143.984 li
360 143.75 li
360.078 143.688 li
360.078 143.469 li
359.969 143.422 li
359.703 143.469 li
359.453 143.297 li
359.422 143.297 li
359.141 143.297 359 143.148 359 142.844 cv
359 142.797 li
358.828 142.531 li
359.094 142.281 li
359.438 142.344 li
359.625 142.313 li
359.891 142.391 li
360.188 142.391 li
360.188 142.109 li
360 141.719 li
360.188 141.609 li
360.109 141.406 li
360.125 140.969 li
360.016 140.781 li
359.953 140.688 359.922 140.594 359.922 140.5 cv
359.922 140.406 359.941 140.324 359.984 140.25 cv
360.031 140.063 li
360.141 139.953 li
360.391 139.902 360.555 139.875 360.641 139.875 cv
360.941 139.875 361.109 140.012 361.141 140.281 cv
361.094 140.359 li
361.145 140.445 361.172 140.523 361.172 140.594 cv
361.172 140.605 361.172 140.625 361.172 140.656 cv
361.141 140.75 li
361.125 140.844 li
361.172 141.031 li
361.172 141.094 li
361.188 141.297 li
361.063 141.453 li
361.141 141.734 li
361.078 142.078 li
361.188 142.203 li
361.078 142.453 li
361.516 142.391 li
362.281 142.469 li
362.906 142.375 li
363.109 142.391 li
363.188 142.375 li
363.734 142.375 li
364.016 142.375 364.156 142.477 364.156 142.672 cv
364.156 142.672 li
cp
f
368.582 145.656 mo
368.582 145.875 368.543 146.012 368.473 146.063 cv
368.395 146.125 li
368.332 146.313 li
368.113 146.391 li
368.039 146.539 367.941 146.652 367.816 146.734 cv
367.691 146.781 li
367.504 146.969 li
367.332 147.016 li
367.27 147.184 367.133 147.273 366.926 147.281 cv
366.914 147.313 366.871 147.371 366.801 147.453 cv
366.664 147.547 366.52 147.605 366.363 147.625 cv
366.301 147.641 li
366.207 147.766 li
365.926 147.766 li
365.691 147.922 li
365.129 147.5 li
364.863 146.969 li
364.848 146.281 li
364.785 146.109 li
364.957 144.875 li
365.02 144.813 li
364.988 144.68 364.973 144.543 364.973 144.406 cv
364.973 144.324 364.996 144.152 365.051 143.891 cv
365.129 143.578 li
365.105 143.516 365.07 143.453 365.02 143.391 cv
365.098 143.125 li
365.129 142.797 li
365.16 142.766 li
365.117 142.684 365.09 142.59 365.082 142.484 cv
365.09 142.465 365.102 142.438 365.113 142.406 cv
365.121 142.375 365.129 142.352 365.129 142.328 cv
365.098 142.246 365.082 142.168 365.082 142.094 cv
365.082 141.867 365.207 141.762 365.457 141.781 cv
365.629 141.797 li
365.742 141.746 365.809 141.719 365.832 141.719 cv
366.02 141.719 366.148 141.82 366.223 142.016 cv
366.223 142.078 li
366.254 142.195 366.27 142.297 366.27 142.391 cv
366.27 142.477 366.258 142.539 366.238 142.578 cv
366.145 143.281 li
366.238 143.469 li
366.238 143.648 366.184 143.797 366.082 143.922 cv
366.129 144.094 li
365.957 144.625 li
365.934 144.855 365.91 145.031 365.879 145.156 cv
365.879 145.5 li
365.801 145.703 li
365.816 145.844 li
365.785 146.156 li
365.816 146.422 li
366.02 146.578 li
366.191 146.563 li
366.223 146.516 li
366.332 146.531 li
366.504 146.469 li
366.66 146.313 li
366.723 146.234 li
366.816 146.219 li
366.848 146.156 li
366.895 146.094 li
366.973 146.156 li
367.113 146.016 li
367.191 146.016 li
367.223 145.922 li
367.254 145.922 li
367.301 145.813 li
367.426 145.75 li
367.691 145.625 li
367.898 145.48 368.105 145.406 368.316 145.406 cv
368.379 145.406 li
368.473 145.469 368.539 145.555 368.582 145.656 cv
368.582 145.656 li
cp
367.16 138.234 mo
367.16 138.352 367.082 138.453 366.926 138.547 cv
366.926 138.578 li
366.746 138.789 366.598 138.906 366.473 138.938 cv
366.254 139.188 li
366.113 139.375 li
365.801 139.453 li
365.66 139.656 li
365.426 139.766 li
365.066 140.094 li
364.848 139.875 li
364.879 139.531 li
365.035 139.281 li
365.043 139.148 365.121 139.031 365.27 138.938 cv
365.27 138.891 li
365.348 138.828 li
365.363 138.609 li
365.582 138.563 li
365.582 138.438 li
365.754 138.406 li
365.793 138.219 365.871 138.086 365.988 138 cv
366.035 137.969 li
366.113 137.891 li
366.238 137.547 li
366.852 137.703 367.16 137.934 367.16 138.234 cv
367.16 138.234 li
cp
f
373.363 144.766 mo
373.348 144.688 li
373.285 144.625 373.246 144.559 373.238 144.484 cv
373.27 144.406 li
373.145 144.141 li
373.176 143.875 li
373.113 143.813 li
372.996 143.719 372.934 143.648 372.926 143.594 cv
372.84 143.555 372.801 143.461 372.801 143.313 cv
372.707 143.297 li
372.551 143.016 li
372.426 142.922 li
372.129 142.797 li
372.02 142.781 li
371.957 142.781 371.914 142.762 371.895 142.719 cv
371.629 143.031 li
371.441 143.422 li
371.145 143.578 li
371.098 143.734 li
370.957 143.797 li
370.91 144.156 li
370.738 144.25 li
370.707 144.375 370.691 144.496 370.691 144.609 cv
370.457 144.813 li
370.535 144.859 li
370.535 144.977 370.492 145.074 370.41 145.156 cv
370.379 145.242 370.336 145.336 370.285 145.438 cv
370.285 145.547 li
370.254 145.609 li
370.27 145.766 li
370.113 146.156 li
370.145 146.219 li
370.145 146.609 li
370.082 146.813 li
370.098 147 li
370.223 147.188 li
370.426 147.25 li
370.488 147.281 li
370.598 147.234 li
370.957 147.25 li
371.02 147.109 li
371.082 147.109 li
371.133 147.109 371.164 147.125 371.176 147.156 cv
371.301 147.109 li
371.41 147.156 li
371.598 147.031 li
371.629 146.984 li
371.754 146.969 li
371.816 146.867 371.965 146.762 372.207 146.656 cv
372.238 146.578 li
372.52 146.391 li
372.676 146.156 li
372.895 146.047 li
372.91 145.984 li
372.973 145.828 li
372.973 145.641 li
373.145 145.5 li
373.207 145.406 li
373.27 145.328 li
373.238 145.215 373.223 145.133 373.223 145.078 cv
373.223 144.996 373.246 144.906 373.301 144.813 cv
373.363 144.766 li
cp
374.285 144.422 mo
374.191 144.672 li
374.191 144.922 374.18 145.117 374.16 145.25 cv
374.066 145.391 li
374.066 145.547 li
374.004 145.641 li
373.957 145.844 li
373.801 146 li
373.707 146.344 li
373.598 146.391 li
373.535 146.547 li
373.379 146.641 li
373.254 146.875 li
373.098 146.969 li
373.082 147.125 li
372.816 147.234 li
372.691 147.402 372.539 147.508 372.363 147.547 cv
372.301 147.563 li
372.176 147.758 372.004 147.859 371.785 147.859 cv
371.691 147.91 371.586 147.938 371.473 147.938 cv
371.332 148.047 li
371.191 148.078 li
371.004 148.219 li
370.832 148.203 li
370.629 148.266 li
370.395 148.172 li
369.785 148.125 li
369.582 147.797 li
369.27 147.484 li
369.348 147.25 li
369.129 146.781 li
369.223 146.594 li
369.16 146.266 li
369.223 146.047 li
369.211 145.922 369.207 145.828 369.207 145.766 cv
369.207 145.59 369.254 145.461 369.348 145.375 cv
369.348 145.281 369.402 145.133 369.52 144.922 cv
369.598 144.922 li
369.566 144.813 li
369.613 144.625 li
369.613 144.406 li
369.684 144.324 369.727 144.273 369.738 144.25 cv
369.691 144.047 li
369.691 144 li
369.754 143.867 369.785 143.73 369.785 143.594 cv
370.082 143.188 li
370.082 143.188 370.09 143.18 370.113 143.156 cv
370.133 143.137 370.152 143.117 370.176 143.094 cv
370.16 143.047 li
370.223 143.047 li
370.426 142.797 li
370.441 142.484 li
370.801 142.359 li
370.926 142.277 371.008 142.137 371.051 141.938 cv
371.223 141.938 li
371.324 141.875 371.418 141.844 371.504 141.844 cv
371.586 141.844 371.668 141.867 371.754 141.906 cv
371.895 141.922 li
372.27 141.781 li
372.457 141.969 li
372.613 142.063 li
372.723 142.063 li
372.941 142.172 li
373.051 142.172 li
373.176 142.289 373.316 142.445 373.473 142.641 cv
373.504 142.703 li
373.598 142.766 li
373.895 143.141 li
374.16 143.797 li
374.16 143.938 li
374.285 144.422 li
cp
f
384.262 145.438 mo
384.262 145.512 384.199 145.609 384.074 145.734 cv
383.934 145.969 li
383.871 146.25 li
383.746 146.297 li
383.715 146.375 li
383.566 146.418 383.465 146.531 383.402 146.719 cv
383.297 146.855 383.184 146.949 383.059 147 cv
383.016 147.055 382.973 147.086 382.934 147.094 cv
382.855 147.234 li
382.73 147.25 li
382.371 147.453 li
381.902 147.5 li
381.777 147.484 li
381.559 147.516 li
381.48 147.422 li
381.344 147.359 381.25 147.297 381.199 147.234 cv
381.082 147.203 381 147.117 380.949 146.969 cv
380.781 146.781 380.699 146.633 380.699 146.516 cv
380.699 146.469 li
380.605 146.297 li
380.574 146.281 li
380.496 146.016 li
380.371 145.75 li
380.402 145.438 li
380.262 145.25 li
380.043 144.047 li
380.02 143.891 380.012 143.758 380.012 143.641 cv
379.98 143.578 li
379.902 143.469 li
379.777 143.641 li
379.277 144.172 li
379.09 144.469 li
378.996 144.672 li
378.84 144.891 li
378.73 145 li
378.746 145.078 li
378.559 145.5 li
378.434 145.641 li
378.293 145.672 li
378.168 145.797 li
378.168 145.984 378.078 146.105 377.902 146.156 cv
377.871 146.188 li
377.785 146.398 377.699 146.523 377.605 146.563 cv
377.48 146.766 li
377.27 146.953 377.137 147.07 377.074 147.109 cv
377.043 147.203 376.988 147.289 376.918 147.359 cv
376.895 147.383 376.859 147.418 376.809 147.469 cv
376.785 147.625 376.656 147.734 376.418 147.797 cv
376.262 147.844 li
376.082 147.832 375.934 147.723 375.809 147.516 cv
375.59 147.172 li
375.668 146.828 li
375.637 146.656 li
375.668 146.625 li
375.684 146.438 li
375.527 146.109 li
375.637 145.938 li
375.59 145.75 li
375.684 145.563 li
375.715 145.234 li
375.652 145.188 li
375.762 144.984 li
375.73 144.891 li
375.715 144.672 li
375.762 144.25 li
375.738 144.156 375.73 144.094 375.73 144.063 cv
375.73 144.043 375.734 144.023 375.746 144 cv
375.746 143.98 375.746 143.965 375.746 143.953 cv
375.684 143.844 li
375.73 143.391 li
375.715 143.234 li
375.746 143.016 li
375.699 142.641 li
375.949 142.219 li
376.238 142.262 376.438 142.324 376.543 142.406 cv
376.656 142.48 376.715 142.621 376.715 142.828 cv
376.715 142.953 li
376.809 143.125 li
376.777 143.422 li
376.824 143.984 li
376.73 144.25 li
376.777 144.547 li
376.777 144.781 li
376.668 144.938 li
376.746 145.188 li
376.668 145.344 li
376.652 145.484 li
376.73 145.641 li
376.621 145.938 li
376.574 146.063 li
376.574 146.188 li
376.652 146.328 li
376.887 146.094 li
376.887 145.961 376.934 145.867 377.027 145.813 cv
377.035 145.719 377.074 145.652 377.137 145.609 cv
377.09 145.563 li
377.277 145.391 li
377.324 145.344 li
377.324 145.219 li
377.543 145.047 li
377.605 144.906 li
377.73 144.813 li
378.277 144.203 li
378.223 144.258 378.066 144.43 377.809 144.719 cv
377.809 144.75 li
377.84 144.656 li
378.012 144.438 li
378.152 144.203 li
378.152 144.063 li
378.355 144 li
378.387 143.813 li
378.434 143.75 li
378.449 143.688 li
378.449 143.594 li
378.652 143.391 li
378.652 143.371 378.652 143.352 378.652 143.328 cv
378.641 143.297 378.637 143.277 378.637 143.266 cv
378.637 143.102 378.73 143.008 378.918 142.984 cv
379 142.82 379.125 142.719 379.293 142.688 cv
379.371 142.563 li
379.402 142.531 li
379.484 142.418 379.609 142.336 379.777 142.281 cv
379.902 142.125 li
380.246 142.125 li
380.418 142.328 li
380.574 142.406 li
380.574 142.453 li
380.684 142.484 li
380.699 142.781 li
380.949 142.922 li
380.84 143.219 li
380.996 143.563 li
380.996 143.953 li
381.105 144.484 li
381.137 144.984 li
381.262 145.281 li
381.355 145.641 li
381.406 145.703 381.449 145.789 381.48 145.891 cv
381.73 145.953 li
381.73 146.234 li
381.871 146.391 li
381.871 146.422 li
381.918 146.438 li
381.98 146.531 li
382.043 146.453 li
382.02 146.453 382.043 146.461 382.105 146.469 cv
382.207 146.469 382.316 146.375 382.434 146.188 cv
382.59 146.156 li
382.637 146.078 li
382.668 146.008 382.723 145.949 382.809 145.906 cv
382.902 145.922 li
382.965 145.875 li
382.98 145.797 li
383.012 145.75 li
383.105 145.68 383.168 145.578 383.199 145.453 cv
383.355 145.281 li
383.387 145.156 li
383.48 144.938 li
383.746 144.828 li
384.121 144.953 li
384.246 145.359 li
384.246 145.371 384.25 145.383 384.262 145.391 cv
384.262 145.414 384.262 145.43 384.262 145.438 cv
384.262 145.438 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig9_motor_components.eps)
%%CreationDate: 3/12/2022 4:46 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B6X3`ngOFKhJ;47:m02AVRI+_8Osu2!(e:I;aQIpIEqi,\=`^lEg)J%j`d>FmlKe42R2?]Bf)9U)<pQA]fE17oCXrRq/=bJ
%P!4MZN#;JTYe_FPhY_M?=.Im@SQ;NPAoq-Pl[>&TN2YPbZWV20?.=u3B<X;,%&Vt-^sJd@bKYMFl/c<[!8jSEJUW'^V",IN2:rj=
%YF@dQ8T-hAQnQL`LXhK\UP<007*g:0"LYcBhuI<_)a+`)9.TM1:@7eKK)d>'F&slfn\0OOk^V0E)E")Sp@M`WhlOS/*+XB%>n-#:
%:)I5dn@O=h&/\dTr&5I#>;iG1Fue2RL_)`oi!pTOOWaR'prtZ"K1!mg+g3s1?l2G]-KOdo_3bM;hrb@cK&Npqiq%.7'Z`iD4fA8m
%2&*%+R%d_uV<E>Ur]af[Uu+rZbeNMFg0mS#c1QGp7c6_]+q2"g2IgJ.^(<QjQNKW%oKQ7KQYk+ecr4ZiVL5^45T3'#@3,fDP4INQ
%$I13E,,oCXF^rleSIJ!B5+aJ.rYm]h$tR-q!OM&%)SA@h-0"M780>ZX-A?qPp^e8F`?>Q(RB2"^XjH\(Hl_<p)<r%%q,j$SOOk%U
%r]qcKLU$kL\GrlU#/f?eWAQU9^hoJUN->R%9-%KdXiHjS$I6U#rg<sqZN^iGge?D1_B7t^!--Ys_a"b/Y8cuIHjp,6r:S4F$hp^F
%"*dtA2hu6a4k\WgAPJ.C6d!cM7f*W(Ap8'i%"H&72M2b7[@oks7K<YfRr@=.bdTJ>J7+m(AROAHDpb38^D$BL4l9nO$!<Pr!9S!5
%rAV.>Cb`a'PJMQ]GTY::4i",A_0S?ccjLn<H2]aI1B8[6TF9(fJH];b"[k[!Tf*Mt.LiU`\kik01Eai=om"MEBE"-;Sp@7>AGr.N
%E3l)'<]iYF$3+4Bn+II/Y,n%/dYHZ&d+E0#![3p8lmlM-krnX_^BP#%=:P@Vq<nKY)(_-G.6Z>/js)n]1@KKV$K(..U(O-2*(KHK
%*ng'"s!BiJ'BR5T+T)q>[;)3-Ig5et%#C5n4eUu&``e&E4.3:'ehtqfo0"DDf4MFE<fj"=)f4JCfJ8Mq']92l5XF<8^ua!D%2%_C
%eFEEcQ5%\,T',e/5ATnX+UWPh!CZM:YhX`]%%c(eMD@.WS,+,W,8B$k0N?spJr1i`m/_T4"95ku!Q#4$UcTEN"N*FqKCF3#:cf;#
%d*I0l:;IH3m]V,u?VfV3%s[di@)Egf$m/i0@=//`!jDsN(j(HDh6EHa$m*bop]Cs5O9-Ac2Kc$P,uDVr1Q:TqJ%qhg*MPgrIj!jK
%7UL9@rgssP_rEjrP0*d'BO[!WbVV>D-V/i7aiJo:lMon9"(9QT8f62UF1,Y'YQl.ffCs4p+Q't!k9ENh!W<Q+T`%c;"kKHcl^5Nb
%hpl`V)S!TJUZ]P4ScYq=M&N:*HLQCuba#D?m7&niK@&,:D<3X"8q9n=C\Z6T+".B@C[:qFfDg1_mp][EecCNu<8@39_=GB#L+d]W
%%G,!!ZgHE%m)4DQ?Vd]pAkhN`dW.-I:h*dAigMq.'a#H$OfqID)'n,Xi&\NFdHDDqhY`g9EB-leFe\(E`I'@E;S#n`SsfTXSInU5
%$IQW]MZqc,hnef$S>3u>^KLLC`8;YJdHGHJm4G8(_)g)lWW+?s%Hu0RXZui(/`kgL5Q:farkC^]n!<Rms#X[07YEo^C9U[,EdcF8
%0+lhj^9'8eIrp\6T7=t=a=uj*K"cctY\)C43n#B&q541L!Vum^2]3$>Npf4(nU@?NG\kQQ`TVin8T-M%iu2h/^q;'oP<H5gTPKA(
%+8ot+#p^_\RfbgJd,*Kk_it->mU+A&'t#-BJW4f+c9s;QN-WVO8p'SCef$[q=T!,r0h##n'\[#Xe*GF^(Q(U)L+l2FR9_\WnuJ8U
%HB7o>79b3b^?/7'kI^,%nB]:.?>sCFdJMm75`ZB$.;c6N,LC@H/=8@fEq6&qWj.VpI8F6_TJ"`mAReYKYVY+7DK^*RIIu6OWD7=5
%<WC[H<%=,U>lWJJgT):rE,?.\3<Dj1l3hW"g^_>6JT)$leR5kJ,2[5rHYL+.Em=uM&1?2OgUWdef'K0ZAk<B#OX_5HL],4h)sm84
%gr>OEKn2D)K\;unBZ&u:?d@8f@CN-n$XQ*WX[rW8CkfoT1Ko;^$r\M<Xk%[0gV>CW_[p][Trgatl\Jt2fRbaBk,ZB4787puF\ht&
%,8Ncc#]3?Jf":;LXNJpTTSN+nJG_Wr6sRN^"--/IE:]N.6*K/b<bu=9Jq<El<O;(WVKgdefpLoS9#3amY!Jn],i/dN[WilN)[h':
%K>+RNDp!cP1P>AXK3_bN:MeU_1ps+B^F;MP9F]]!)%>]Oq>MImcp3TdO>,D62O"I4klL3<=#X?BWE]IU3"ea6r[HWmmt3J]J:HXH
%Rgn0lXQR25?o@QW$RkB9Gn"1():F6C%5GA*9P(0a1AB])Z$9:JUc%&SR1\'FK0;`#0H'C!64q!,"QYQe<n)U),4%N#6lK2R+t,aE
%\,\hZJg*k0:aD]tP0at*OcY0`.BUY?J*YTtZQ>b6;1;:/Zk+BM;40/8n+\&33mg'_Zfda3E'2C=&?0`>+V<=0-5C([Q<W=;^F=I:
%pO79(?]:<B/W_V>P4`0)?`$*&o:HS]5et..Ok+RONH.i(_Z:V:Lc:G[?E!DlYVHJu6XRlWL7Eq=oC.m4g)G!@,X?=[)@FJ#C,b0q
%-dkR'3mOuV7%[Egq^kX$)BW,(TUTot0^EV=.ch2a-.g`aQm'fr]]ILb6bjmD&Ng4j^oL)+[(OtOD-Q$8JNt(*L6_.6,RAXE5dbT\
%0VVJ2l&sJ2%N4l:F]bn!0Tc`>',[KkN)fL'-FejlMid+7;Z!fJ@&YG-@%nW29'$'rnq^hP8n1C3;-SMm*:g.e3h/^i(^`.?pdDHj
%*^2k!`I-YSH:aqC_pRHA%>5s7;PgLKX]8Qikq$l57=E]'f4;1^Gb.dnB;bkf_"Z^W_F(FOAmfnL]39m`H(/pg%iop1L>NQT:u&,^
%@R>:ChTlYHfbau\@Xr^1TuYYb`kaBS?8m6$HZ#.l5R)6=;CSY![kWI$2#sgK9h:1h%UC(,jV7'ei*"ua#XQ[""dEF1:ee$AUhqW`
%CJe/TK1*s&Jd2o$ltWC,UBitU*i1#3dUArID+1Hu0oYeAhp`$Q6g(-B*)UpkBhB:aebTS?Krqb]b.uLu<i3,[?,c1F#g5'Q8Qch'
%MObA7X>b_SA!jH^SH>PgI*>!2irrV5K]o#jB/=XJJL^gBdAaK_8*qGa_/cO&Cq#dMLL?b_JTS3bBF5/\8&6h+)GPe/[hMM;l`gmF
%rIFJT:Dq_K_QbiP;hPj7g'hC:S,lMj-cJZlgWp0o*9hW>]B:l'ftH9^hI@Z@EX1,6e!TJ1Kf#8T6!fR^=_\#*F_hooA'!(`daID;
%KOEB*Km/Jj"<6=IEog>r/HZ_q)dGb0J<RE'RTIuI79;<*CJ=-Xdkr2hnZ&k9OGui4_F,t7PPL?S--pkKiI&BYD"TTnG[c]R^80R8
%n@;"%i3!,>fY]D7g43R0?LA51N=$ccPAO'Uh*BT0_A7-99Xa$c#j0fprZ?"i-oB\a;,C945_u=UF_5/'E>]rGU"F/dm:@?-B#DA@
%7_0OUQ_T%0,SAL=Zp'?P8/prI/!%^t'h/M,CcU/5+:$XtD#i>TC>l&@0R5r&iAbS\K@uglGT!o%nmeoCU?<c*$MO))YeJoLJ?1GX
%D9(-/l=l*JP4(LMT_8X]oOb/S#--05:`!=&BIj0c'/'cA%L;W$D+]Lj!#b$-!Y7SHlTIEaXi@k/P1N++3@Z)6oL)2bTdMl>j#rN/
%=d/O84^Mko7&J@tSnuuXiXiQQ*JXJAouYJ0%Li)M9$L*49nm_&32fRJcFp*P")M18TbXp;JZZT6i$$_akbYZkZm?%;%0Z,qSf)_>
%h$hlm;/4U4Xf+DTgX`$I!^1)Q8Xb@o[)%7$DK1KW8''Wmc"L9!cU)V-\YdiNV@!c8Q&0A?aN^j6OP->UBF7_33`bJ2%`Bu[6HdVs
%UaC(XMk/SoUDDn-8`<=apDV$X0ZeN"<!d:t3NP_c4Ms!brC*;r2"V%LBWth7S!W\p&Sf>L-8hX5_C[?Tdp7/:hPh[f21`4l2LJ]o
%n!319c1&2D]i+pVQGtLG3?o4p![\a1$@L#Sio8gieN[e$(tN`6T4tlEN0,U!;RA97a:ZfCcUI54Kr54S@7OlfUGVmILc&Qd6#'p8
%DC(!A3:U>T&]WXU$1/!('%t)`[5=6[I`HnfXU@96D9%aCQ>?Htg5biYB,FkJ6rnI5%n^mD^d`,F\-XLq8q&4,JqYD+bs]jO[L\@#
%(1N=f`O3^6G!(cu&9_?ZoD__3.Rd.3OUrYSp.Uk+=+MEOTkf9qHC90teX[K<X"oVH_5^*%(#!LgqFZ^)M$BN0N;6-X2N@u3HN`ZN
%;2W:hS(Zpg`OR,_fLj%tSrM>fgO-?`1EeYraRj1&1fTiDGZ6=1&dK]PAls0.PFciXQ;g"G.YRt-$M$0&l[Q"kIlQHV&!kk@m<nK\
%='Xu8?!,@Ge$\]pDff/7RJFY3]+$ZV\Y(sOC_dX:rl8^Je+/Zt&#2rbkC!ZoOab'5+ElG1m*nV^-=]3J4W/H]GKJ[If)sAF@q?n0
%[<gQ)Vo?,c1@D(*RJB3ZP]aSidj&,ZE<dTpAb1,n:q*[Trd:R@?'d@Tg6?f\;LLcN,_G/G53ot3:]Dstmf6(*69G]gU"tGIP>LT4
%j"o6,\6I*XnTN<`A:0O>8k+$mPp>V-463MtnH>LNoZD[X.u3KPlTLJ=-C=,`,X'mpAt^h+U<*(WG!qXGPOV/d3s,b1HC*kjHQ2J?
%r\n%"Q],W[puaP8GF@&V-ea4C!MG;I=<40l..Cinbl%EA4E]i!GGJT:hi;6ed`c@&K0@V.1='F)d9m!)boO>dH,cL($-s_^cYpRn
%oA7qU]tA^!\7iqG+]Y]&s2"fhP-LpQ&"j6K>$oD$H=U/=*aW<Id-C42*X[19'46V<Pt8q>9(F)pfr&*`:bH:P6LR*I*1^_)"#.jX
%bCe@,UsdF_FiB<5;nbn:8oaHLc5?r(3mDL*,A9i*17Oj[hAUl3]gMB-Jt#m"JKZ=kFu,YSO5PBSD%0(%82"dF(X&JREL@rabV*,F
%+F]qA3k@.9'8/#b#RY;Jck&QCacHF?,k>sK=8Y5Ubd>\UF5IB_DoZ&`*8Dk\M+#YRbs"lE=?u<cn_!X"[>/@XmkK>o8I%43TN1iF
%n%tF<"k*6DK<6OdH5833Z[G70/@Bis#J7gE;6#cWEF^GgkMP'&@(Au:LX!;!ord+E<ANfRG#Ft4-@`e)n19C&^XMC&"RQE6h-?Ro
%[*nqsWfk^-]_=5RT:dPi=kugDR>II;1e`:P6FH>Q5T$[(Y+ARWZMceU[>gdrl>X+BQ2kHHrRUr0G\dh<R3<l.iB]6MfUGcuVu>S!
%E"_/>Pi*m`9cH)hFg-HI)7[;Il]1G2hXC5LQH4P&I>AEnhsl(0n;,ob88f\8l$S>EMbbra)%?C)c?9F\-TE$7<);UBWrGI2^54q[
%Z1#>Jo'B*`nOD,G]C!S*Sqng.4ObQShKlrEAS/d4,3LAdo)c[YFjSea@8kL3+epC#l<<"r_3o/.kq':O`CA*U.b+.*9BW!P>dd&9
%9nf+\3K2$R94U=OB)nB"j(7QW_Bol:VTYNa>^oULXBhM5RXiA@o+Ko3s5fVrp=6gX\r>aWJZdUe."&q<?=@MT>bakSQOSVr6!'n:
%A<332[[[V=f(6S_VgnF#<I22nD,Q?rq\HtlG45L?3ToPTS%j0$5#Sf1bQ:!*\k`POjV]R0D:scB(^0fnbSZJ0CUK(j6jFR#^Dah6
%Er+.;o):^4oZuAmc+D@uh!R@+CO@\N5>,&t8N/pg5Vtf[bnC[b0<EoR5$fA6R&KK)liWb/5dt-qRj<`DSFtk8?-k]s[ud;cqp6%!
%OK'B[#_+pFV;29qmu]Vl-4e:\<;l\C_nM,+^6A(r`XSAa[t$Rhhl"TaTqA>,)LgWsC(+YlGd9riUZaisAb\UbFQ/@HbW6Ga*ghe^
%rC<#q[]XZ/T5g<E-H@Rtf2LiU!e.Nji7T6059m(?oE@X82]],05$Op&m`Q^Ab8.'4+0hGZ(`5LHZu$kkH`Vd*5?XiigN^o9iB%<L
%iIDK.<E9G/lTY?fdpehY]>O7Ip's@hSNpkUOWomk>IJXEH,`0<j$IG;k>Ef"SX*_:a'%[-Gg'hb*jO%`p6@UNeU.N"I&(^r,5g"u
%Os=N8%3kpAd]V\sK@3C!`._mCZR%iNVbVtW-3Q/3@tCBkkUP?d,JfL76kQ;en0c+1Lj^E2j%_"^7aJH70eg@%OR-3!T9)"YgaKC^
%$?($GAUI_a^Dt]1]g-8lkf!rH&VHha2JUlHQEH$0YYh_`'Sn(V3;A:uaMSR5#@"=SJ3OYjX:QG*[@L^VNA+r'WFa-U5r.g.1$"W/
%]/&>XE#ml<MK&NuEs!AO8o@A#5u_bYK>T[.T7,ZCAj&mFB/(X"(3[J%dEn>:fPSG3pBqE:%YP_#j\ot/g/F!^o/`MN:^u=f9Y@n7
%LnrTeHVVc[n!?d+Dm[-M=sKtS1sB)&Y$5;[A/E@3F*!e<p\N"eB^pGqkVgZ)#jeV7mLF,m38Te0"2-Rsa+LslS[rWuN(mD+fffS9
%-h>:`F0]A^7P_;;Xda`fr_;E?9)#;aD4RdSlTKP"NSA#b7>fJPOD>GV-'nM>lT;kD^@dk0+2C`jD0$q7_ikQk]e7O:,h'YFQEo\2
%K#r]TW2E!NTFG\-I>08>GDBB<^jh%JE+GBo9Gk,'#XI,T5'(R'0=B+?lkhRPJ1Vl,?K/W]n6D%UFeSE$_fOe\6(UqZE,^bG/b5!M
%$c.H%0AU`4SVQ@`Ji0%O:MF@u$D\;"rBKIi+FfmP\;Hp3kB,&P0\D-E\)`<-rH@qC8#A'3<$4O`Ur$CP`;PPNZTDCf#n7$[6,s'?
%O.CmP\eo06bDfJtq$bms/5q9nKq9^g*"5CP_4[?+#DMe*3;l+V!C.m>#KL,H.bV\uNWSP5/IoZ?,Oime05OA#8Al,3^P_!9'muCY
%KbZM"<.10VJBt..jJ_cSnKsaF#j]bolkH,E_QOOkn9,W1bj<dq"[2;J3>VC1K)rTX'M'l`*5GFN:Ak#VM*etNQX4nYN5>sokDADI
%[3X[04c);c?ofCUICa\PTmZ=PDU.Fr#Iln0GEGmmi@jArk9CrbQ(QKCeR[3Gl`=FGXr]WJWOLK*$bGESMt\;89BOJ^&R$0/<MI-K
%0+5B!78$Hub>X#kg8G#jShot0R[uD8d?jStKHWfI`kJ,KQm!f=9F1f-fqs[Aruk*ucK<D#RYQr1.M@)OnLkg[?hZ\%G\]<POu>H<
%o6-VP%n,#2E.FJ=2,IA^I(jMTcJVfQanW*L:;4J'm\;R.I1EVmj9MqO-EE1o*CX''M7.o?S9E+8`a"+0b-,=f1k!R")bf'4Q&&m-
%=tA8R`$s6'1"I#JN.JIJR:PHlGn>ZO>T^b[aSf]r+E^'S0Xu$jTZjrXllun+k9XjU-,[`(-j=FXl9=mr+ihf35!6T?Zf>'(ag%Mh
%"PifC,+C$M)<Kr5(_^d6@),1bhB)erlMI/^8QDj<dS"eD"@29gA;^FE%*mI:paatbh0jhA:Q<KRFO/+1YSkc85R%I3mf5'd-)cHn
%\Y5o_(L&dgIX`IVT2jk3.5[\amk<G,=J%BD6ZHInb4R7%5-S-u;"dS!\WMO>9_kfQ2]rIb_i0#ZiqJk)n]0d?[^;KQU][a-48!3h
%:/eQT,7iDN?/[;u?BAY82ddI+oAI`V50A%^J^dL0+KOOF\aG4lpUBgChgF>':&rDabODViqdd*;Oi\h=!G#M1mhUF0,,X#R[Q]nk
%l3D(3[`^\t_$R:5i-]D=l!CZ<]AN4Yb@$d:`o+S$LJD8=cu?Tbmjpr&oMLFN0R/k@ijpd-P=]k6H$]S#ShlYXG)CIR_26kL)ur_"
%C\.(qeuE9l]oHP:8Wt"AZRo#//c%Mfc#_0)QNUbQ5c3gtr)[=7[p*7P+(!S>nWJ/&FN_jd0lJ+cm6]qmds@64#eTgs)aAjErEB@[
%Sc$IN7MZ]s"r)NAL[Cf6':F,bK8'.A$pNa%Mt-/>*"WNhFs;9F@s1cMhIPcGgAp/MIjMKtPW!Q@K]WL0?=bqH7U@D_10'1nSs-GO
%(,sFi^;[3Gg(cV5$(XbD^;dA08`\WilVdV,#tZ@+[&!e>JR0_3R8rU8BO[:dXXNi)VpKk=XiD'o.Z&qR:QA'lMc?jA$:S^NT'U);
%D`ann)6(IG[qO'";I@n#-981CD]d%u.cOU,jI;t35KQs$1s!_DH`T:o/t5SWkW:XrL:;7HKed5djLdB4RP2HLeX>:!1A7=W9"_BU
%=ZI+g64rLPheoO5c^#)4c.ie`ptl(4r7iZ(PK!V*Sd7M#ZL6H!Q&NHV/256fr6kq?o'6^rFi1E;hinpp7AO!M+,Zr2ZLlA>hD[rB
%b)]Js=?0oM^"k=,*9M<^g[/8[E+J,j]rE=Za%Z):!pXUL70Z_MZiZra^B6B!_ipWJB]'C6P81M?9=qCr_Hl$nS>=ECI<Moih(j?s
%!IAj&K:>6qHtMs5':'6nha!)C"N.^-l'9##s3(df?noh?&pG%o4!Hs;E]\#YG<FY_hHCi46O35s8rIkYMYEbgEGu1I,/6k5ZWh;*
%!$-Ck`_tbC<?]gTi/KrRP4?KAN%[fK3Wd(9*fQ3!cIiXRRf6PAi-Kj),(l+GK3FtOp@@'pXHG@#bNmq3YQh%3DOV'J/?)JE,nK.3
%;b_+,'<;0Q5lKlM&e$9EWebB]`Sgp1[;g-7[:D_]cd%Nu!oW,4`#^Jm`]?P5+7jE$[D%LQW'^fqal<#\C[BhA6SHN";k]C[U?tIr
%jD[4DFe:>h!B'M7?A=WPaO=NU7"]Gk,%No'd8>h5-?5Ir.ita9.GBUMEk2.7q"Yc)@B+^B)\R,uDVqcCK?T8'E^7H(%5Zf++]>^B
%H(T4[I`IrZ[5d[3(?lckjut^Z"i#ScA#/_,E31Or5^nX!130:&PL]UpnEtdXJr(a_'taPBSTCP4LM0WqNS&U';6`(\%=9_8G)7$>
%*hR?OlF^=22*f&hIo"(NGoLXo9;0n$(Ecu+^R<\Yj;TNb7q1)0#_E\H:,o6Yl^P!Y4d]<sg`2<[[P$/]hd:\]5[Xe_a\[>Q98*bc
%4krSPjfM=]<ebFnFtkIm^B115fl5Gth\@n"ObA0';.@pu8;2iR.Ae8Mq!Gd)MSKMQ&@'?.U8<HdA']J*0DI\B`&TNonOl@:^_j9<
%o>rFhpA1I;en3qbnr+/,TU5-LGj*rkN0O*1WpWQ4\XD1'+uG*GF/+AeT*i3c->4k5,tnO8e!`o+(ZTM>ebj096][XEB(dr;5o7b0
%N5,17g#qP.M;NNCIKo2Hr89c*N.!R772gJn&74Pg#RLCs!iY)"2H<rchF/W6cqa"FD,^0(aTo?5SDMC[="XfPg'oq9#C)%4BUX4f
%:'3d\gj/[b#8=lG*,q,.^\N,'`%iVlX*?A<M'l?$m9$!UHLH)LL.ka7Mu\1pPmQ!]RlE7T\$nMe&.sn^a.l,R40Vf89,H80[(G]_
%R%&M-M#T2(?@0RWrql"8K,GXEj?1!(cA!E8#!UuK3ZXWVObq-O%VEIi9s'3"*A?SD+FDr[dY_/`L'VZ)fX8BpTOI!nLq'pHn<W1C
%pJdn*C'`mY/<W5/0_j21.*MuHrV[4Jes=sbM"p9O$`"tmV(M4,eirheim,hj3Ych(+M@S3*"?)Z]UbidI;XX=dk:rBXRmo@GqQs^
%f4bIf_COp#RgJ9cl6A33hu#_Uf9?*BbNC(=H*5bj21b+6F_'3U#Fh!>+'.$Yo:LoUo<s'`P8a[BJb4lF2@lo_D[tj49>fD#^_V1:
%>6%a^G&sf]Gae?@qcjsGb^7WLWfc,jK>5`b`s:Ng>ClM`-cH@:./!nUDMHQX6hY<P0k9Ri"%)E?cp90.(r!K'/3.lb9?YPk`!dd$
%DkH1)of4%IF&VHe2])ih&bI2!,Nd?C%HN8'>X/ja,1Kn39GGMqd`hqo\e,X*6(YHE(lRE1dG3[Wa-g*q)QW[Pl^&D?MU1XQEC'pO
%jFHuOYu7E#$V&mq+W(ZRB5L/SE3.i>,%,p<g4)#2i=h:D#G^E7?!0gO8DfPVEC@V-F#_!>C@#u96kOrahJ[<Wc.p?VAGQd!C!a=5
%N9Rs$WQ&b]LV<Um#pD*&S6M=K#Dq]FA@-fMQHK@[<8#WQ.jrrceAZ/\hrdbq8WDrYE3Nt-]2AURbC#(#Vb?=fkTW&*@6%C@[GjA<
%(BJ)DWr>TIJ]Z]nfBappfJa_*[kaSjl:q]K5%]iC!*s(eQ%B*&(C1lR(b_pOn)Mh5oOL.RlV35u^p$lNr:?pp0>K;4I^%SA;aYeS
%L(78,YSAlA>-46RCYbZH.sNJ4=sXR.(3Ec!;oE!V;8&8Nmgl9p8Q7?dSFXn37B,]dNQNkNj-j$AXf-A0]aRTa2Q`7F0CJI[]hiY5
%7gjuEkLTa#0:CFsD!Uu7H9@kNEo+@(%=587nf=qmAjA*hi4W"b).d4Ih$lI>FtCO\B%5P=)uL.jIBYWfU(XV)_dE]k$]3<eJTG]r
%F,*#4J&T5&fc1FT-2;/[2Ge@`!QYg0")^/eYMfcf(a>jY+QG[l"6(3l)[Kn@)<U.mJ:V,hp]hjn#=\o.(3AWamP(*GmZl@+<!P"*
%@BclMj<$YU2A6,iHtPF?([qbI[r-IMU?>a#!kP6E^]p-8.$,<_R3UGJI*J(,obRkuA[C6PB(T\(AO17&'?ZB!iFU3V:,q9*NT1_+
%[7G#Q'bKA6$quoP\TDle!'?n&LB_'/X@DOX*8Y(!2.hWoE'9RA2>"!nf*$spchV(sj=BR2^,qbiY?,-^jM"*-^nlc)^,@aFokd0s
%P/Ot[_ImeB!B(PHJ0mm5dp`4M5Y'LqTEkLe5u[;d-^%I,nOXFKT:SeSa]GCe'7P6/3TZPjek*V+;;oPFFRe\6.o.0c)h9@OKB<>d
%"Hl)g]@;(NVmHf:H(Bd%ccC`6!qYV?)gYB4W6JB@0WeL2Vtaunm+r*3$)oEQl\?Y]E3nEQTX*$V@kn,#JK;mZFsX3m-9SRFPt,9F
%Y!Q^-rWE#$W\Gq&4bj(gX<3u<+t=.%ooq'L(_mSUeb^LjS.1up0Ehm@1V>Zh^H?[\Z)cP'[t;H\A?H;m-$A"dS%m<4j,`9Edi=4[
%GKB=,)L;[Mj2L,)SF(aoQe*=/Mu*2bDu;9\,3F5gm*jWZUp)89CC^NW_3Ns9H6!O(i65m+'d&AeNs4rj)]ac(gh;'%7Z>XG*5)0?
%\;cM9Zu1!"['N4<n_tiW%im1;+#%;CDuQ;OpB#Z-?2,Klh[*XNljF'1_,V;JH_B;Qn<PKr.9O_Ydtrigb.2qK8j5agM/Y3Km`oa^
%r`5'Ylk7uh^=1.fU`N"$4V_/,BRI:e%1_ctT^gF:hrnnL8k)n7'fJ*BmQ)=h(d?+\Sc*QDBU^Z@7b^*iLP)qlKC_0?n5gP#j>2Jo
%P)'fjItSu]9d_p#Sajmdoi`!*XJD-9ZO7S^O60m^r)m,7j82T;)b>6Ee$32:r`k2M$'2jHcrD2'q!tTT9>4Q2&C(!A7)Z#0P=L+6
%lq+[i*'Q=p"lm9M)$m9m;ld*eYkI:ari@`gb)[lSGk_dHg:)_dem>Rb<Phor08H.%4P%%4@qT\%:d22OE8M]fM.l&38IhdG2Y+m'
%YQiA7<qeHo_2?S^`;WMuaJXY*=feLu:\],#McJlC')BYJW/1-'lgNo%jXDujIqMFh$?SdeXSLbN2q&V\H1c*9k1-bpZ<4.C$c:&Z
%@Ah[H[lcI"'l`:h-_B$&qCC=#6EIV*L@Tiip[4nO*p^90"OdFjL]slr=!D6W_E+E<@BqJGoegA@rrrue!`jh@5eJmkds37@`CKBc
%m)ii2gH(AIZM>u.eW_/k)oEtXnYpqc9.OBZRdU=:^nUt^:7oUG)@Z`5%4WL_&Jo=,m`X+].>tV'(2bR]p"j8%Zh'X_>i\>3`rrk1
%GF#%G#8,^OL0O#J\0W*J9!O[TY?rj3NlrmiCFJ+aG6P(0e*u=>dmSKS(6Z^A1*+6nc6t6%[BcTcMHBnJBD:lG.6h);LP)OlIh2*P
%T7+Cn56#;\`S)`b9*/-R2e'_uQXJiX$#>i?&\Wu_f!<KS)#*DP3NQ'0[!E6E`Sn8,<.Cs%on@X74f/sujrEj30V(L3!?13A]?WlA
%&aPLW;,/WLr<s<GK5ZMb<lf!PfB.Gm]mFnE'"QV0pD'rNW(6/Q$0quhSL\=b<lA_#<SJcnmJU6\%P(8g]$)_VU!G&g4H>4\k@:_+
%9`'El'q$%]A!B1P1'C#34Mk9IYl=?:m3KLD5YEt1FOP68=;MR]"RFn)__aY]!?,mf6^GZrU.43M57.t&lW>dR\i@rufh3cabPepg
%XH1r&;nr_dZtC2B=iLqP6MYMoR:id0U`9p(f+3\fF,Vu$B6rbUMZE(,;1d?^9ikp4/"2skRp.Z'T?T`@_-h\-QHNb1%`nQ(gE:o7
%'Yg[dr2k1X14#_]U#`>KUqMP1UMmg!b(&igJ]3fY:eGY?^_&5@Kt!#_Oc*:]9S4Qah0gEg8Y6g44dPiu8"s78oIIUL&`rP(&A86\
%A/]!7(ZTjEl15ll)3nr/Du2pcZe.q-@[>8oPGkt77YT/QgdEC_@T@^n+I^;W\,>!jOauc[?js:LNhod=BJkb[bZjUpK5[B<f$sAk
%oX7H+haUL+d>f0Y'(<YA7d9Lod5?]nPhuBN?gY"%neNJ(B8H?ZR5bpFs,7N&B$@1F2G*OnrJ8>F528RQh=g#^6A'iSN-otZ']'>E
%AGX$,=*e'uTAN=<b![1caOc,iY428>7Ws6Pn)`F2HL"$O^@*Nac+C"p/[d$;CKZ4d@kER=pF^$!(R#0fX],XRpIf#Os7@Q9eo1FR
%q-i.ERo4kl7m+5[@;dqSH]<.TJTOP$XlG-\^"L(SOt?.-]u-ALgaABL7&RtQ6R%Yi+3D-jB5boQ)ip[&E^6te>hfd[&c#,S4j%<`
%SnA<'XM/71qn?:Ome@WP(i$D'_O0Ua/&iZGDO2Gs&G<\hf,!:W[L^G$!hsiNk8dd5BDsTlJYd&&!G<fa'o?h^jL%*L?(<]MGnJd4
%&2Aqt0XKZUN>m/Er_?Z8X!p:,8?bFg`Zli$NV&\A<a[acjt?f_XPYL0$a,<<()YrdRg#nc0'_*Z=FDBpiM+(M/&sWNKr'UB-7b,,
%?bZbX"N9rkRrg/i76IJu'mQ7aYP=@&lL0*SDA8+57-'V7&M%lR'X:!>@Oto@UCeZHPd,sMhqH4TTol'?@=SR9.=J&O^)]qM3U1/F
%UL,Ra8(H?;@Db!_klU,L/F.(aX"s(8ggE6rE_m`O&hW,@!P%`eNsrW-#.69C$lM(C&Q`*38^c9;Sbt\ogt],g"rg@liX>),Z%arI
%=R7Y;^#-U86;,(b`+9Y$rtMuT6iXqNI@#1o/;=MhUFc$io;ECZnEH&E9bj*snE9`jqp1q+'jL`1:_,D^aHF*;?%J!gY[b[6S]KWl
%s#=@D%"T7VJ.p5F(]YXi6o;hRTD$L-llBVMn6`u!O$lRQ>C7*<4um[Zjr]nb,Sj"j>[3$Q#9AIfs0*_9Y.O$+X%$NNN:o@P,l^XL
%pQ9"K&D5kn>'&=\+?,2F53"Ciih['!nM>U]*2;X>1WYsD7!^;'7*I(\,m7/rfNt04$_=C\IgO?<1:/fd&JNUBd6W2'dN_rr:g],b
%Fg%GT+\-irDRAXSQ9t#aOVI(?[iu7Yp]5Vqk(FVo_1<:S(jr5M;TO$BGZ/U-G+<ou*jIj/U)s9NOq37]A]U58Ce9s@0$!(?-fZ)d
%%.97*0'a>o1H5+(7"]QKeHa.m6WMt:M6/ADPp^XH\q7r(Jpn?PFjH">T'(G\K%_g5eVAfIF$+"H%RN4/mt=K.h$_R'&jp!DBjeBT
%Snl]MYH57mBW-@._f?=7d#8&P$Z3CPKVf"^=46(388aJ(i6_A%A(5P":[A[D*p$hKWh_DDrIY7jJM0c)4N[$YJ]<>TpZmo1gJg?p
%Gcrg%n/o+99_A4L6,3cFnk]J3RC8hR0ocLi2htl"Le5VbTeO^5S"+UJbV2[Hn[/(@O/?J#VU^s'\eGdV2))3,:.\C+>*EDo;OHEp
%7)Uk(;lls?:\)"\%W3je*C^cUEfb<G[#eT+UDCNaL0!t2+bq([bF@ohT&dN&Rs@W7T"%R.2=2j:TFPN78@l<2[5Q64*W\Ha)ReK/
%F,4A\T\mBl1kPRt>&p:'\N(Or=M\Zp$l>I)cmG(9p@X6=@ITgCbXp=<]cPQHdd:S>Z&p^mB!Y;29"\AH]%p;L7oIN50Ul4m.IQZ3
%-s$=^[][9g0#HG8U:O%9X`%>E!XrdO]%6F'_EF:L;qu)V_JDtU0ZA5THS/Yn+DoGdalQ>H:uAB:hOlVB71!tN<:sh9)PJOKj.Y<I
%/U=#B'=<JFmX$T6MkU2:4^f12i]fn^j`T-<Yu=MLEm>o`)Wfa&'HTb\`+P.ID@(<%d%d3GO9^E.ILMt?LY/p.g9$@48.qbQnl(_(
%+qgeMZWj.fmEKrGJL$fLB^M(f,758Vn5Iag$IhSUG?EoqG_=9m3K`f7eq93.r>S$7Lme"bRba2$oM>Gn,M^PVR+8/h5cWbR"-9DM
%q5_RKC_0K/]i5f[*5)mt'SelLf85Dk6ne(&GB7Ln[+JGUil/(Y`bEGeI()t:8QRT72<_8j;K2l$"1`Y'j>"9/9LM/s@%\O]77oU5
%=tYc4XIag#Xi?:Yi/k1jN.q%E,JV/CJIkih497:@c,E&5C0<Z>Wufk+:"@]Y/DtXUM+%1EdO&p:\3qLKo-B1[W%bS]4sV:0ZQGsm
%]u8.g4Z;bf')M3fOK+W?nN:W[:PuC`_FDaQO%iM8Cac]SQ1X&ldYjXh</ZRtY`cKA@_I$K\p8*UfIgTVL7u*&;MD&*N/b/joZ\db
%K\2B>dHDIrSc;A\J90H9OTmp8'EH!@1`u&tQ`.!Yr"R@[80G2"e'L_n%;4qJ-pJ))D73iA]&6Wo4L;2t7uaW7jmYXLIcg&&5-@4p
%L$qLqd=<_*/I7>sd]0Ji*Dou?9mmcAPL+:=OI(^liQTuV&h")KL"_(D-Zqq.LE-D9>\.0MATJG+Q]CL<#r(YU&4(AETN6?4E>Gh(
%G3jC\)]*Eg@)<+5PB^\PWuotKdB8VWSO,b[NpjZ-G-\V+LW#7?PA\1D$.pNO%6TR60^m5!@n";JBK%T1DJ3p<_0M2lY9r'*-lM9h
%-<ZkM#6gck,i'.C-lC>)>q?0;^:sOa;W'O.6CH:Z!U11Dl;3jqka3D_U>6iNU@4-_p5S*`j/&MAR*;?deFo-Z*D#sd7ke2d;%?(W
%ED$Ks7<WCj(jMoj13@)LA\bp@i^U@OMlkeJ,VH8`ce]<>d'P+%&F7gY\h1T%'ljpWO91-]<o*#k@:l:&'.6I&$QDf*MMAki'T)PE
%!F;-o_*Hu8DY9!:9gF#GReY)@`V#%[SJU?&PTq4l[K'T<E(KZ^^f8nDo4[pUN)SAX^P;F]WLO2:R-M9U,ClY+rQ?W[V8t6AG,Fqn
%cRW]:>Xbb(9J>!pCB2`Cg5%2lGe#do$$A`uZ7!f'dfr2il:6!Y-mrh%PO!>hW1k9,<g;DleW3SnM,&dlU1"8ujC?NV"Z0,`K[^K#
%GndY9]<$gWBR*3OVU?5$n0Q@:Jn=W]&@@YQ\RNV+,$,:>W(C;Md=UYi.Gi$DFd^$u[e/4EEndh.;qP-1Gq3Oo.J4!W$ZW7HH_&9h
%ESbfLj-$>i8MZ%'34,D!f25IFG\S4_Ben@];A,e[1MI!hUdZVjfh=/=%Hg<$2AQE1:n*r<[XTDV%:24AR,Uha9_YI;*R[>GS=r"m
%0W,_U_Qk9Oj>)-<1cT,]k$OiH.7]SuMi=,E8]1mA*]&&R9ti:(ea,Dk]"LLC<`ld7rN(9laQ4YUa^2]DW9-o.+$an<E^#7n/`."<
%Zuf/*+.f0K>g%>D+(K7]3M1ULhi1IDGZd$KL/k+:%o60=W16YsQL>#2?+cu':VE&iCd;9&cDP!lGCu57?;f(H?H[O;/mUTSS56ha
%O&]t^Qh.3.nf`b%7QI)e/K['Ce&qL)$.(.*G^TF>hnmhtplt*[IWb9S:Oj:(9.O*AAYX.RZY9_Kkq9d)M74R0Z!m"4,X>VBS<Udk
%Z;^O\'aLP[+;Iu8G#[UFSB<1!b1,\W<E&m-G7%?CBk;Q=N:<cT77Rr^mL^KD\h5+Q?bLEDknBATVU@&u5aP*8[LsPUeG?il`(gga
%Cj'g6&Tkdn=3iO.*=j/>-Flc-pd><#)W/Nm/MO\1ZXe%GkrbDGGGjSiaMe<jg"jc4k2RUrh)a@?Xg1%eq'F1X'@92q`T/R'"YmC@
%68:V0?AYA",;C]FK_\*4&6#5!)L;p__%b^JY6._\UcfU$7B]2o3j2jeGuC:EL+U)R!Feno73U#)N\s-JfI;iZ'Hgh)P*D(:C?1UZ
%*F9ebWu`k*f<R,+W@@0S:+CKcW@8N!A9.?%0V]#6E@KM\;2Re%;DVN-o=gl`H!dQ@&S[4b]O>R_[5.4Df+c@SV;L2Gq'XZ+8tqn\
%*5Nn'-puI^nBouF`fk9hDo&&.9^Q<u:4]:TpMg\j2!TQc,b"07B]=7kF',:fM2EaudO=##A`ac)TjjFa-"5Km/)=-d)[ZSlgh?M9
%BUt?UZ?f]=o*=AtDKY`,qaZY*'>^ge!8r4P#fci-0LPmR4$r'L(Q"'n:U^s>ZqC$+AdLD6Man^:.ZTs,fq7WBPt1pMMWbO<-q;ap
%$MKMPSUs!,LZFd1kr;=9m!u(#&6Q9GZr6X62r2YSr<B=p&mL_1$k8Hc8HB;?D@UF2l=gMHjg(t_jJ9-L[%EN@g)&=&0*O1(V0h%@
%V)VnRp/="((8OjE-Jen-HuS.nlJr'7)EgriDYQRoA\3(_oL>ZQ.*:I0>br4L\`$=(e(:_NU,Pt/8fTd=fLqtuYUo(&kRGOGX/ClN
%2nn%FoiBAe'+#VK?H(CXd2V2W_!:1DkRAB!hl;hpU;%aEBCt=Um2RNR%sMa["r>,PYTW#;GtCdmU,VGMdB"'^No'!"%cT&Z8>).R
%KN&U<4;($XL9'sp.#lbg83\We>hkiI+W5^WQq0ZliAdUUpXfo=-t_"Lm+J_,V5otLXD;c5]j-HSC%@5ZX>:_\X,IK76\o6CB9r=,
%93fL2e0sk9;phVVJser!PrP>+ZkJB`8mtX)6S#9L8NIt*Qknq@/9n&9&U<<&p=@49Q$F!\N@W;dG%I7kg@`uGo/&Jp3gFtaFRZ4g
%mrUh[Q$F`&_d66/LYL0XESe)Ro8]A.]nqk!<T^9W>&d$q'e8fmn-bdtf&N#Fo@V96BlW";/+XJ;k1Z)G)W$q2^/1N2\OPOB<-]DX
%lag"J!@UjDeYsed&jZ%p6OEg^f6(nUadNEY_I`<W2?nbRP_XY+Aha?4G-Np:,9*sTJ1a"e!'t$0,Ha27?(R6XX;)7*QHd(oQ!t3(
%oRpM]*cmqkFW.QrK0%RnkG#k3q,lguU34J6r`!RSYB0s4OD0TOd$A%p"g0>PH:BMkiad4J?0S:t"A%i0*'Go,!d*FJPZMY&X/s@-
%U2n1^2ED:s"DrD3_2o-ubXRaN!Ch<uYQUShluqE&`-"m6`UfMjdd[487C)A`/WtOs;N^>/mhL^j8X&I$7Bup?Fc']QTZ`7(+dB#A
%ahfeom=VR<\V#cNA72+0*!NAnIn?0U"(fIAHL0)sLV[)$K@T'hS1>jdPUB@EH?+_X_pn#.@rnF/i*W0+%pPWA?/?YPaueMT4K0`)
%3I$&(U-(?U6DIfWihF()F>@Z.?+9%ii.a<^)9!H%QsA!>I3m1Lcp%F-L;,lHAs/tq-_Gf4*)!YGfe'"`"4+2]HWduL*6Y3(4[N:u
%BAuCc<$%@Sl.?)94*_YMFq<#P2bLKfg/Zaf5"X$U(UF::G-.A(.Tl:VF9[R16Ms/qC[F#jFO#@#n2>Po=UZrimi1Z?1",:0f&#B)
%lZIIBHGaE7Uk8);'fO;R?-iHLiFsr3XE&X>/FZDUnL<uCH;$aEmX'i6m]%<0VmNB&DJ-N9i)e-[bO2ILgY,!!f["L5<%GTH\J2<C
%S&c>K#0j))lUJG;YGYEEB+-1uKf>.c=FDt!'Ijp7`Jn4Sf?1cQCD^*o'mf@mmMj,S^VJ'bI(+$Z9$o\7ATq'>K(VT\:Z5AP\_-@g
%iFradYRXX:(5SpAlBKjX:7oaf=H/s8?rMp!:=Wf<;nd?,R9I+<>mN[k`>&Ot`k'l(b`jB*=K/:!nmKrJP!8LSphAc-e:NN,`7)4b
%$pJl=,s#'Yk,b-2HYhJ<moRs8HtaSoXQ#rnk"`+^@[p%S^nQ4S=&S`CC?:C,jl.K/.r(+=cX`f'QX-dBmaFIji.%lpp#MuGDqM4-
%0jR\IM$8]"ZJ)diLiN`#mWOe#X/@1YGJ_UNMBfd]^'da&U(og9]TG8bmd-rU?$EC6-+q7j'.9k#@T)oLl66ra-WRmG:N-ZE<nJe_
%I@M4^d8AODk9\3)m4KmTPH3tI[%Yf!m$!>OZ2rs#(A>jMoq?MLh82?9p>PbsY#j8R*:COU@@peN$7;IM<S44;$$i)Y5.Q(_KjEJ,
%$N%d5b#J&5Coj.2fVbs3HgS[6Q&:iB(A?uUU[,e64tPT`YNh>/?G3;A:JNo)&ZD`Gp;ut6htk&b@@pe)T-U2t)MNT[F3(PSlP9-8
%J`8SGY?9F)=4J["Z#X8]hq:CZXftTZBNH\MPH3t1Q"W2cqrFdRDA4S6/h$(MZUo)2<Ss,Zp;tDt9M&TlYYT/CL%.=0>1b2,E3JNc
%Sls\n2qQ1k.q][liNpJibc'cq1CO'oHr!1gS6=L"Ob:+tDj1XPc7SCH)q#1=EfuU!$G1GSO3$Ai7!D/_6e8?9h4[lJ`c^:=KR?2C
%NB4iN8lKUu9TEoDihp@.>j3$=KZk0[Z6k>j;JFtgN3OiGKN,Z::U=#-+!3``TX=.R[Hj<rRBl[S:[hGtE_l#(?J.L_Vi8E/kulZM
%qS[ZQHA.=cWIcK')b$+8G8j\0`%KN&e7C[9Cm)f^'RW]urI8GqcO"#l`B5*1p:APms#<bPT7VtSs'qcC>5/']XQd@:&`FO3reK0@
%.eiu-09oGFr9r,XjI)A7aTiucp]$dd06M[<hp'Q"kAp=sSWQ2>e-'rS4]g[;R$=XL4EnIWO6uO]c6Po$'7IL&Rcmm;^I(Q%e?%nu
%bA]R$],ONC`O>t5.qT\A-,=2#gS^PZU:WMth:SWf5c68,%8nRLO.d<W)\_V2fW<-]1b8tJBg.ZgG1)*WN9]`302kN##@7#'a3maT
%[6bqNF],?gf`[X_)PFX4/1Wl;Qrhp35u9tHX;hW3"E]M2<)+EcJBh>U7o4`..pb.^=5)]]PRg@8F*YI+g@pB.*``+::tiNYq?tZ!
%-scQlbLh4u8`Tl??'es:PaN^QlYAm_*HQipRqeEk^kt3KfkrObq5Wn1l3\;=Nq-&m/<":LolA+8oe(H)8kLMWPle)48]JGq)hm^S
%]>V]#TW"cLSc\*_`u$L\cF`%>m,(&n.bR@jV8\%?,#^gJa_!93ac=stGU??UEDH$&N-kS81K3eDs3=l1(oStAorWB*T2&>`dX2!R
%;dJqY^Cs7i'^ko]e\s]ChEMmc-GK?FP&VM]CehUD:C9hnhEOS^=LHlWXF'th+5^E"r4TVS%'fl;qD:t(csQ05RUf\sStSr\p*EG2
%h(LE'9S#$uFOY_P(1M<\pOYnS/g+H909(oC"R*.+?Nc)1SsNOU^8miBQUKR!Pj8.@X;tTU#`:/PBe@kTeda5UCT;/,feAduSdcOM
%b'H1TOK+<6Wg)&&HnCUe[G4S=g;e6&D?h7KS*A!cP^<'2b7d-FkZFE;$E;b#`P7T)fr*C!r$1)t5tOMIDO$/P9oDjeIK82%Xee)/
%@N7-B[o,'@nMQ?!K8">Ulm-iG0('U"[i)Yq.\@gtDBrlOX&Ps%EiR\FdB7X1k&;\ajXT[fl*Y=_mZ7oAHDC'5_002c7B)0V;<XUc
%X'LGdqP8G[M!hiY@2UEo05F^Dlm.g>2!s,:g*jC;n0ue:V1oHS:X\GD\Y!8d@0Y7"\p`\]/O+[X&u)YG6oB#WNkD+jXGERh=4<SM
%d>30]?JKY+=IDZ$^>6s)J.PH14-e[@k7FenPIYgtY?'th<?_@'')tF!LcB[^.q61>TDBcYXCK3f3Ik]XISJG!iJMF3G30[=<1+OT
%-@Tl7r)b81GrD`Fn:n\@%O:Os<tQsFNtAK%=G,bjg</06_[=c+iMr,,RdrPT1=h'K];:>66<QZ3/C5[p$$<4V/R&pod^s,..#/P1
%@1!U1?`o,sC8hJo+8oXr_j9PI=*iTn%]d!.fI/QcRX][pG"!'T@)d4/X#OOEc=]aYNabQqf%!V#-@_\RFV_1VFC]$i%_KrFdRX!\
%f.LU-1R=ADH>-q8WSGWD15BGEFjo(s]a:=OHY"Bi!%'A&IYNqj,<.1[!oM((9VX];oT@\:!<u3,<%$3FM-F0FEHXbUm'Q=CV+f5T
%aVi%.\E_!P0]fAZ3'tkXGeF92^a<,i2u3m^2:CSg4&'(kP`P#gFkt!#dqIG&*9Z:<*H7Fa4dh5TY2O*UeBcgu)nG>qpQrh8`'hds
%[a\5loPT9DY-UjPELF!A:Wm&(&5$&ca=ZEkV1[%bPpGW(K!HP"`KEWK,=qLX,O2I:e+.6oW]=J`ib@CO'_6KiB^#Cp+15up1WWqN
%P90QoH6u!LQ2\SkK#t.TFIj-Vl2pTU3V]3Sk1hYEs8!onMssbnYDtFdWF2OW0ZW<hf%C(f:-f-K.VQ^X,f^(2PO=*U[dZSW:2V\`
%oGVHa`?9ic(t#<fB;^+kK+:gcA3_/(8PcH]`9'n%.k,hZJF;,hc!,[Xk"mdJBG%+!98.J/"FXeg>Qdd+K_C/8Ds\6P-SrITd57n\
%:*SE"c:7o^'R)gg,+;,8geefmGdI1hP!luq,@5k@7S0>!Gq.DjhT-]:EC*6k\.d$XLc:LoUe`O5e6A!T.0;p[8I<CN(CeOSXdr:O
%W$(eol4N+tp(L%2[8i2ap;9HJM$bLkW^i9j:oBU)l>dE3gT0<WSQ*.q;3.[B8QVAOj#ZM36<jlq_931*2sR?MnTpN:C5!b4FBP<1
%#di^6"d]rrA_J6;XH3mjSpN2bhTH9%YhbqbX:T@im+.fBX:W^js+?XQb(h'H[j]pF8!.*%F@YXr/,ZhC4q6r.$P,6uQ+u_Ue8.4c
%$P1QDe`r)$%i#=nNDls4$P+o5J^T&,Tm?atbnX!]65L\LiD_<j(EVkBpUp:<6\.LC5n>u153p)'K^*E0R,`2>Knh#kPb!0[Tp..I
%[iHM9^moc1U&*\b<:BQDiPItTgC@4mSYob<W'2KH<56;(LRQ>hf=CBIrDG=MVHnZ0U&$P,9m(.Ve>X6*WbXetSTa^\LSFF=UY?8i
%rL7j\4B0YM_U>S?]C8We.EOG"4B0)_OOlFX??g_S4b`'*GUS:j^$Y;K5^_^JLW\jr/=Pm0Gc8=u_of@000E49NaZtYY>q^%I+oh4
%&R9G:U&$q`Z3@CNiLtRT[pnFle-cePMUCpqL^Qj.!&P->,*E!G,o;g"Knh$HJP.UXjOm9$[_nl-c++W3W^F<o]Vk8iOpgWb_okYD
%RYi/tA@G]KC9NX*&(P`7Dtro-q"8mgKnnq@NsLcdKbkg$KjV,#gGaB)P5Z)misQB?aL#_fGc6)GiT6ptHf<oub-CVEGc8[%]u#JY
%*#*[Zqadi[HJtR['nn-Sk)9ZYeI"H'Ip(\#nd>t>R>eoJn1pF*Y1NHbpH:1@n5.s9_6P.8]C8W>\6Nb;WR4#N$P-%:`BEP(6WkhM
%-s!NR3T7imo/!sg/j)8*<<%]TOM(A*6d^3B]'YSFF+ju4\Z.^dgC@ASG56iIl:Fs6EI3BI&(S@?NbDKE]TU%sn:XoAQtXnU&'su5
%:V-$l8KKXr*F:6b0r'3PiJlo3rNe.><57g^2*!;(n5-eh='eIjET*VfD22;<Rf4L:e_:T(+QPs-*hHlpS8mM]ibY=u+S"$l)DmE]
%%s?uV?@Lk,\un:A<N3R&p;aT\Gc%Pm=>b)_7`'q53Qm/E1nu++6l8$bOn\/:ro,+oVN_5DWi[Q-"X^1:&HmVtT@U9eM1Fk)pc>L-
%Bq8[($:%1GPPS75VA$@_d^,!!V9&.Qh.oTLZD\)2l7+h5eH'O"qfLU4@FWA3knRi#pVTeL&PN$k*:[.5j(QXQ)^:XGnIW5Q=-Ucj
%^SRSIaD^3PU@8q<&`qGVT.$li;kgRnAjlU:(Ej]nH&HA(AeUn-m$C,@pM_83>qISSFZ+*Tf?dJ?HG0$*kgt3/inN(n&Do.l2k$Ub
%*d[RkM9uQKh#_9R6U,DC=[Ml0:8mPg[Ah,&*u?HHf>o5jqW^h8pA;IFoemdoVXLPX_UJI"EG%$q4KhfWEcbCR8+%nFT6<,1kDBn3
%#Ns\<qMh?UQ,!DW``0\"\0Gmj0mHsZaGLXSDG\I@D?gPSb=5REj2WdnA8bS/VBtk$`.CB-]LDdL,)9Ob45R<koW-.Y%/4G:ITtP=
%pK<YI55guunrqH7;5h.1G33+M#`EDV/Af>DcLDHpr?+5u^@?rWOF/9nX\^+qIn4f6PZ)%EM3j@g.`62j8r1o)K+kVS?je[]^\:3%
%r7,_-Gq:OL#+RR-B#>[be!<\EB2;";S*:[=!l)SgO%*3n2`<^(g-qe8f*oY[p^OR2c.ju;F[.*r9A214%%t_d#9FKfXe1Q;NAR)s
%I*VU%#/BG-dQ*jF^ou<BErQHl_W41YqedXZ4[E3+*qUhEOB2),%qPuQ'Q"8qM<3@*XIGr:I1is!i1DXqca'0s!T_'\2d6,K#Z%*]
%UfNuU0(o/ArWVB!5/R"L&[D]rcks8/%hK3DDK)(ji8/$M_@(:ngO/'gPWZej@$=;`gkuN]^Z^5?]3>o>_LijlK4s1Q*.&jh'\_TG
%$RIa)\^M%1gSY,R1>BHK]:T1M;'XJ\^;m)_r)lbJGlW8'4!GH=k+/`A*LPba)@70-(W/MHQGYsI<P\N5.ioOiFs:3#rbNdgG%Q=g
%eIS;8V7uGMD]=6+k-u;CFT;j<(#eDA>r^6G3AfW$p4HXPeh`->8#L,q1EXs=Ik^]?8Cp3*%JOa#(RNUjjTm4u^Vbj2XoX\!Z)ESh
%Vsmn9>f\9E<$PTc58ZE<'+D!;EbsP#3jR&C6f(utQ+XP:homiYBAhs.5/<S&=E-VV3<<DQC[buc_fGd]9p!85abJqipd$YNZ"M_\
%-6ac)#5fD7\6i`1K#,b$U4tqEO@BJ)[QWudM[tF:eJ!1F#W-9V+Y:sYfS@0+)1DI2htHU,rI4RU@n3k-"d+W2V8L#dN9](CR9;4N
%8MA!D0G`52j:=nZLm]Ek8%(1&0_%I^_FJkED)[Mu`3RV$8!!m0Ba)6U,kl*@("r\Z>lu>,s7dnrJYSV:p8u!`QAC5u0%3JmqrKG^
%'Wpi<^C(WL"\/R:f2p=]CUK)"k;Hc"d-.R);3"9>e&7q2FAK7A.t<(aV%#(gc2e7IhDX(o]2hsg*hqk!jrtA<Nt%k$^.]ALlaKY<
%=<hiV/+>VASqde#q7tu]=jbr5SMqZUfd;>Y..K>T+L<0<bN]:]p@fPZ(+h5rp(rT]#:hjo?*7Yag"EkYE/W>21k).OLF/i2*B40a
%ds/tjDsuLUn8%HN3fkKoA6SCm/gBY/CqW"SZN,C)"DC-oOf1]A!D$@re'Cc7^S->f8+Z(e,XSVBk'N4/MaVBL+9KGn(rUYGiFr"_
%8/BXg5qkUR$@);[k=92qWo"[0"G2na#&es#`$l=n^k;MU02:ap=`ias#_3U36Z]L,=G&s/bq9<M1]E*$D%dFa_%MKj2#3kRn/YYY
%O4-qtX83H#'n\f>Wt,+J:T(s7c*->&oR<!`B$HRHP^?2)[H+,LhLi;oH9PdJ,k@)Pg,S]sA1kk3;df+,rH&FKF*iHo%A9$Wf<*iE
%#G,-Z\S`a=J%lUf^>%CQ2#$kbojtH-<$TlhbS@1"1ARF1Up?iII$`/3aY[d"pp5%e]\C-*LFcg;$&eIG\:L&:I#QUgb;n_@=fTkq
%Vdi\Z?DQikj"0h,XHdjZJ]42GN_M=:g]3f4JQ[5AS$*5W0Kc)Ikgd_$N;DA"Fh?]&q>UAO9ZEY>2>$u+EG/e)&X+GZ\2R#"7C8^q
%Qk(g]V\OP"7DA4UMcZ!I6$'D<!sGOal%R[a-D1QV1s$2'5K4?1B;1DLhe$<"HF?Xp=JQj<hs\[?pNk:/ZD<-<fAs<P`U,=U/RlIp
%&=len_#ZtPbB(5?r%Dssa*`r-I53V)hp]]5V>Zn='^8B,mjso+Q"dl>Lu?%m:>U.OZm^.<02%TJhlX4mGt-\E\NZ#]S4%G3":&To
%RbOaP4669`Z_P[<h!!'(3YXJu7t1QO!Al0`?>eu@'Q)(bJH.%&G.b;]-rqWL2'-u/j4V>C:^/\_?3\^Kj)_4;0[`4LB'\]O\!W-8
%_BW]RmR;K-DL%d$/6hL;d,]fZBTetCG(p2MZ5kQ%p(GAXSAO;tJ!%\&AhrV)Ac8$>LFbMD$'5=40)J<&*$h!HQnObHN+JbAB#OcQ
%G2(lJ"bf8pM.YY:P=*Rtn#nUt9S?sD$83]@%]QiDV7_gG#LQd+j`RNp'0&_5m&-UjSAOT]14%I(7Ac"pXkBgpD/u7(i+$q?oSp#)
%?SZ@5[Zaj'(NS5l'aN*U/RhPLD=Hjl$RP4nd)h3]d/ZrPSXGg&3kb>jk"hI0m5;I=F*6[MQD"EU$spGW(dP,X0fICsBlo&74g@pV
%^rDFoB?5E5Lst!1RtWkrN'30eAIX8K/uEQ?m5@WL]BhRaW@#CNfg+IWeVO0+Z_``@':9B4.2dWZ]D4__Y:p9Sg"dR4A&E\`LihSO
%;7EK7lhR4Wk+Q5-I0V8Y3V*S(-V8-5LT^GXXPQh3SrA*CqH8%0S'F\KejI-:%E'a$/5A+':b^u4P>\<#7oDUE51aXNaUjuqqECD2
%H:NCW>!'iV;UDM3i>5?3)Rid&.b%>5)NU*<Lsq(FFWGY#]slefcC7fVrV:?\8N`(+NO0(+C,qP]JXjXGh;@6C%df^@#S1E7*W5+V
%RIHq,>Ot0-!Ye;ZRRI!al-C<>rUCPK65Z9.gNR8!`pmYu6&ebsg:eqC2B:Blqj?t\s-15X<tkYfbF%SHpM"d8RnHWA#2cs[ErG>"
%#5E!'#e^nYmDesO<o9FIl53_jCWrd\#/[6[RoL!SE7kb'%,=)[?^7QNNmfUWoP`F)rRMC:lQICfW%U)ODBiN6\@Tbe&hc#]!iN-+
%1HD#NKKMJ8V@PPiCee)FB.bqt%IT[:789Xb@T)J.0[=BYf%HId#&$b8B4h\pk;5?f9]mUPH[Dl%+c%7/#J'2&oOTB:-G6n`FQYOC
%g_.`Ykj:7"I<5U`;U/"dP3qE+?`@N(q_^BJCh#L%CKQEVP-&]S4?hi3O7o(shfoQPKO>r[#K?5M97hkTefI(tm6J@TTa*aF.n;F<
%#?+CQS.R?(e4NKqrcq9X=kKgbG0PhtgsGS5Sj2/oE)%06F(Y4<_T;,t>6`-Vp)3D-ZU/q"C7&u9B4i<1EA]k<58q(4FRd<>2"H6C
%Re?Bl%:a#cph07F?UeqDF%TWIi^jNccce^_Pg78IlX80R"#J!Ss*e?R7[V*o4A/]CML2GX5?!R(:J[=I6biEO_.\jKClukMP#b@X
%ri(9pZ*`[mbJB6'2[]KbJ/nBUnW@RkW>/\!oMhEg=>P$YLJ9Rl,&fT\C%.J4IU@u+9FGdM4kT))YaO"t5<8VrL?'GJI5LVEnG\Kn
%5+6eJjq#f;$/7k7bW_JA5,7G)c2K.RKbqrsRX.HUr5mV^'93.4IrtDW)7QWPcPZZ@5hg:!(+u;Ke8^df<m_c>)k<Tur=:j%?jtV\
%W+Otd^(*4Y6ZTjIPEMNU'_d#`PK.X9B;SAF`:$^67(3jb!,M]:W'0U?o:,r<,BNaL'+@jD2:D"$@mJ@6VSltqF(.(OI/IsC:&4^X
%!!)-6Qi\<8N-;h%iaL'5=A]626*M')9P.Z"1Zn8aa$*&PR:Vq"U$$#;)::5oLFkH2"q@N7>p!\5II=W3_#@[*6(nn-MkBeANP5PP
%E5Y52(RRd4P$EA[j9FM7gO'&YHh,uV^ofr^=1?HNq!eO!l7[Z(UmSn;CMn#"7No7ukhggDF3E%`L+gd+%_EsoCqem;eT%`pU8;_Q
%%drJNig8EldmWM[\b6Bmch#sq$D_;eC1W3_h:7p$$:BSES.:=8$;ZGcQjsUTC1m5Ng,J)K&1'%TA@geB7g-:oRV`k82<eM`7<DqK
%o9f?m<u#f=.3ntQQ+am;TOF]dRh!0eaMPi&on=k'Q3c=LWIl)@d#^b*n[<GtaY@n1e"%##%bBTUm8JQRCfZLVGB)ZPKUXqr;h\XY
%LS50mc@o4NJ:Vcpd]rjde5h=KH"eX2ioPG$%(D7JTMaL;l;^t(SkB;TLd^EOX@8`!S'WB>K&O)-^<X[tlk0;W%=K.R.gR)l;ZVX0
%)0*7K!&-eSE<b81.1E\G)=]$1XB$+Pi3=I8696c2/LR4tJ9,_<@?<OKWOU@obJrf.?j+`k3np&0cP[<IO'QFC]Cs4DgbjI0YIL-f
%9,'?[D-WYg"H\ks4L0od!kWei\HFqZ]%=[Z>V<iPbsP_s&7km<S'sLV900n.R`D>>m#(dtQ]-QJ5pl^t;('!p!f5;aC;fU&0C=Ec
%XJF11&[,CD>6$Kp1ZHqpo#M+l*WU2oP"&1aE4h>q_@q058rB84NQ5]k8,(fp<&+/ObRC@EYYH*_f`@cVLoI96DmeXm/al`[h%4=Q
%EkQ.VXW4?;CUUUP]l88o`N^'k;P@8Ei,HnFCs9nY]G9=6e&2qkEM\<G(Hg(IFP:Y#Ifepm\H.1L*Gcl6.T?d$?-JpJ3ssLV=a[^K
%pbuDceOrYG4u?I^qi#aL8Z]]&(O#^Fk&/8TE8iO>jHtGU`a;C]-9)nFHfqslc+"Rn9MmBE.%:G=1C%5aeT6fH(G>X)2@<UFeT8VM
%FW>WPOFp=EK4W+*Y=odf*;8fFi,9+&a`'m>&c:_MSWR-rVZtJ70EF0@Ag!<s!dP)K&WDS^oRqo[l@+h2*G$Vei2]bD1,?$b)!,J\
%E8t0fbPGMi)6rjt0qre@q!.Vq6&dno7rml*!9DN88/2ITM*Q@1]==URUP"E#s"tPf)I&W6L94Z=Ej__c6:p7I^ee@l@D(NQq2Y!"
%2d:Z;2iHQ2LA#5k-'D^1m&1P)Ik@-rp=J8ua-9ZdCkFqKb<(FNPOAMV5eieAZD[#CGD^7MrFMB^ha3+3J#KWf^MRhZ^UeZdm!!:D
%_nY]I-(45j6YnU:n&>bXR]<3Nm\r?L*DO]0kE<*!K3s'/MkI39PRmb<Y']M?&8oN3mCPHE-k>R0LKW@*hPQpE3kp`("P@)7_&Tjm
%M"]q?S$l?HBoaa3``G@91lYD@`ht+AF=#h<G`"j3_Nj*J[m;?__8OCbrI?:Ml+(G\NKm^105L:)$>!iUBmHZ3;9:JkYsf94L+`j6
%4MBn^N(foLI5ifI.oYP$m1rMm(%$BTkCb[;]NNjA"3Fc]8CW@=gAoPTDKrreS**fkHeM.9mu]hS/5RP#b%c0=(j:']iCWgHYaEj5
%N31YZ=0ic5"0hoA4T7U:-Cn]Q'EHH3[chf/i5n1%2[!faGN1RQOi<K_bCjmDPA*:(_%jm:![,85lj*tj#@)s9E(30qKJ)=kJ:'_9
%Q-b5jLFXNrAZ,o(Q66n;c!i*4>V%P)rYMe,6K)n1&.XB2##FWjV!&.KT?c$mkKRA=S%h(b&kP"5j%Z,BW!;qPI<ID-XJkgK&2e]1
%oh;>!%V2QdAk^#Oi1,:PGk's+)21cd`(rf6AHsDC9P5`8_P1_H4UeV0U6C]$%bc<L#FIST]4#T'O/"irUN8>c_%]0oXA5q9D7-Im
%7D*kBag'Xc93@Fi)dIOGY4)98o^3sD\?KJO#Cu5k(oEhXf;I\NA=!Q<j6uF6VX&0^kg(lDmH-Kir'TaXK^+#I:Ne0WPQm(H>JniZ
%$EgM6JI.A+$2tTjB2qpI_!cV*"kRrgZ135tN'^:V8IJ'm_;#j&is)un:IZs>*]gC<9XjmiWOpg5'):7u5<[dWL8EMg0.Ts?&([L]
%=H@DUU?1Y#1D2#P2d3t6r_!bT*'\k4X_jM27Xck2LkU)%@?oB1acf7^1tYqGn.Ylj*PTh3?\_rcW3F8W+GRWB7<X_$7h(cRp^dfA
%4'6Y-C!d*Hbh?Rf>bOJLETUX>Q7+T'W7DtR2k^QeBm:<q>:a)4\HLLgSrLZ>R;1F"**?WpBEOI(=sMs7-c&#Wph-(I$eERk3GQKJ
%]62jf_kD`qdt+.)dAaW91oHmm+>&Kf%R0++4EBq!I`9t_Rfp/^Rh*n?Wd,]`cHJW$gJfE*IV2Eb8:T9=.%(G\$`!Ec[u#JpPC;JT
%4=iS!6S+T\)MU+.F+-RG1M^KL%88A99FF-\Tu;_hYDBKRd0Tm<(H]CLBn/4JK!C=O9fJ#=P@3Oi(A*2Cm_FOKGHr'1Z%FO!rI6%3
%@PROsb,cPtlj:,_rhMnO=?S!E3@mn<*64Ifs5?7M!pFpPcMYh54uo!;=O6_?++!'DG8rV7GCnXNELEBQmGPgUanTB#cQ#[\ljdE=
%(#H$n9esJq8+rQW?tSn\Y5gHMo7-PaGtpI$-dE+I8*9^VkO5i'J,Tt._@UY.#^-Um')3]KN*s]!dJPFl7^-A66iST67^-A^BAei<
%14gOa`OODnQ,5u6d1N0P)25]j&"Xk*,Z'`[.D58eB&C+h6J<U9D5?Fk@pOm`&>`1#>7=oZ<jDF8HRA]*f9Fr*2<-d!?13tf=-UeF
%.li&kp$EU3_(=8B/`%<6-0DC8OP,/++^hra00Cs/Z=)&\J%>Af*r[%E)eU1_@Ul5PLQ8UM]>rUok=:3Q*]%jEfb\ha=?O$lnJdW3
%-<l/XMj&$L_A.::L*Sf<SKlk1HZ>,WdX;>mckmG*QUJml^H<N_3$$@00h[9S:'AoaS-\W:*&/$bL;rI3Lqa:=n9lk00U<XXQDaWP
%h.]%u!9g(gMa<=?OpAs3=Z/P\gRsjFL-emJW)"^o;?jqt^=:c$^d,rSWWQWai7)1W[Q7HD)?B1:nk028Vf_u9?_6b;cH?EDNoOY=
%kIC\_.C5>s`.u4XW#(2?TP=d\eROGZl8l+l2CAe<31;'/TA.PB9slX><]ncOcU`1LbBF!md$4T=NE[G.[C[iH,>k$!jnKdT7fP^h
%LGKb"%<oKXU:N'o'16Vr<,!uLb26>.!/TW-B-\X(kEG)%%b=u2s&Bc(K%oPUi0(O%e"jN@_r&W?:kt3SM83hO\[=6Bk)uK78;Xd:
%AX!i4Z9H?,'60K/J^EQe+G&!&#Ld7"^M>an:t"4VVZ=VJC!Gq;SAaAT!XL7>+n_m)%#n$+'Ef!!$!,r^&S&?'?,dYtoj1JCB*tp&
%Y9!]iYGAY/f*]dC8^nZp,+$jk]-!>K\"QT'7`>d@b'$Y7;/8NH0.9mDWt;,?:5BOV;2\=Y-U`gR7P.5XSId)6UDB]=:5G(dlqiO:
%?7/-d_]>MP'W&H;Lm!Z(-q5Yh';>VCe>&8[#uTQPno^3Gj`NnS-uDd48pQs=,prj1UQj@:;5-=B>*MotLb^P%/'V[:0[erp`F%m8
%jJ\%uh0*1P6F5b2>.&h<VQLk1/Lr0UGWE[=)[Ana\hOfpo)R9I+Co,J0a=MdTA,B\1AI1tqE*q.AI.d5n?+"pCsh#m[@oPn9q=,9
%+0ntN9R=fVC_*/maNorCbD]#?#X$l2[#<!HAf3`npeJ`^\^D7a(llIfE7ln3+J?%WU9Fb0rifVKNXNH6_#sc>J\oVh4'?6#_u*rP
%m*W@tW?:Q[^Ui)hi,+X86ior7KHbjl\Zk,bm9&u=mL@t7KEo'*h9:=c4iV\$_;dWHW(u^j>LXqF:K,a<\ifbCU2U#T%F"hXn3?\d
%-t4=4@=pKM!.P.0e+3"j0.UdS+Dlig7,.I3k^@V<g<V_D!WA'&MOq4_b0<i8&2c/Dqk/)U?j1s&qOfinAODrcIG!$Jc!Q,I"oi<:
%#Q>+T1r;t?Ld3)!!'e>2O9hLC&afo:#nqd[K8]qA?eY\X$.EMei#haG'DV5&T)H\p&r%4?`tr/$hgh'$S%j=OdS0q`#!_?p#=E%?
%Y_(1fmYF*e'co!tLIB5N-,GWgp9i[3m,Q44?hORAKf9PQHi8]`c!Oe,aR(4.YefK1]=hY$#;O,O?9]83Hq=,4!<[^9LAf=0_B4^j
%:Z+))I%Wu<^Y^_S4s\!OoILsh1T^piKOgYcrXa;e"O0<XGG/CeaF"46qYX#Ce6D\N5sS3O1<;R$"3crocl:n,$jD%&6U0qVP'uQe
%1!oi)(0WC+@$(4/"9U6sFWWbTT`ofEVZ-Vs$d7ud,*GI1+T!T:4S*Ul+<piT]sl\FCrrs"jpfg%gnF+$@`Nu:gh;a2YQ[C_)@6\(
%OOo"+\.--b2p&Hu`ck1CUb3N?e2caX4R:#D?gJ%&s2erD@'O(0[R:+&C+0@qKu_5p1\FfL$F2aJmF)N\Voh?qqo=bA.L*'G/up,T
%_6DJH*u1TRSIdncH`d#rD!86cWP*ARhHtYe_]J//G-g@T)b3E;]Okq<nh+e>F(:7%n_Gj3mlGN.6GDBS^Dd9ZDJkEW%:Ijbc("PR
%[FiLb+t1<FIM]M8.aN?)K$R(<[C78N&FPJ+Z#Kn;+77+SC$Zr1[pqc=(aRa)E8-\/i6b=^0-bboPG$1ir"t-[p4?4-mJPW$LW27=
%N93oG[>oYW^cJNUm,`YT+GK92ai2!((u^u,UnpQ'I%b3;R$ZR\;e7IZ^5*@;&:L_\32^*#?=YX7;`UZn1)=3P$D6&d?`lNQf-_tZ
%nOADaV'A(,Sda2VCtKU4luuR#KE0fU9$[$[F5cleZMapLWoQ:skQML"<=PH%%k]qAq^(oL56saN,4^G4cq,Ijlik#G<B1gKd[D.>
%q7C^J^<Y!;ODb=V(Flln?:HrCcjQ->lr"oU,iE5Xi"s0EOT,20*5F@J@/,))1nK?j@r_e"9,%0W(d.FW2M*?B.O#sqQdl;sUJo4f
%MQTjs*cB9H]_tYiAE8s&iuukeiD>ja[T_/*dnb>;),9VjkG;Y1!+2B%G3<L6aM/cl'+6/]n/T,Gkqqmk/V.(2RK.cPXo.mtK;%qd
%Q*(c5$pK4bj7Fg4.b?>nM+A/3e8eBG-'ge5d:ss;rq3fTmhrB#cT!h%]X74LotG,Y`Y5F"`*4.'4r7?[OGiI(H,8`CK<Gt-_8FDX
%?R"mVs6P0WhtC?5'KK_kCjN6q6:s:*PLN]@ct&YsAc"$C6c[B0YiYW.9K@Gal%8.`#l.?1adsnhb@d%>m>PJ9J@PgQA"ht8D9u3.
%S:s)9FZG;q=R6$XoNdpk+NZ#4>@PB7[4^97>nNl_qs(*=>u"_'S-\[:+<k8oGm#fM;"UQ*JFYdZ["gJ&L*FtTh[_mJ_1gE2i]1Es
%Gm#7jeIsP8aB^4p0*2f+Wfpq1P?Le(<:(OB>ZIZ0(&W7^:#K$s;;tU6D(?+-W&kYBY_#kXd"WH#CpBRt)7@1Cl-mq$"glN\[Yn/9
%a9D60<6a-/dbB$AKo(iQKC-DQmSC*MWbi*k*q7ciMs(N;9`+AF\tr`N?F=s,K-1'5Ob=6VX+41-Z"+`OchQNiABHjj;b5h>j3<=d
%fH^?aWr)?e*E:R4kU,i&*HE9`N4B]HYGfB8;DWRb`h#C6]U3a\@"HW8QE>46G!q8B72`YeMkDk3!S9H-=R+n\3e8G(N!3A2!`s^&
%-=9m>1];/5ImK#LX,`VIV@ZOb#a1R*YVaeG;>jKShsd7>b=@5qo=\SDS?R3Mjb!uIKWL33bI'i5H+qZ0+l.Yb$r/jVG/&p`1BYQ7
%?i@#8U\1ND"]U$\i[4feDk^'7_i+bWAgae6j0ieqTA'm9Z#`e*lLlI$?Vo!^e)SYDQ(m"fj27-riEZK0D0&eM9g3pW$uE7M;k)'2
%>e&1,THf_&6slu$jQ"LOEQ6^e31H/,:T1rjRjY?4%.\InaZi2TmQDYgh$"QQ9Vn+P]n*O@`)K*'?l77]02_k[`"sHDXfaLjok:?0
%UFam8rLn]bR-Y<r,_J7.iEDY-p_U\@<Yl`.:gGqooXWaZJW.Lg>ADTS<.@Sd<S1e6FPH`#6Nu6JeYIaIdPWn*\m3Vgm^_8@;#QB/
%E04+kF>?oo74cDU8"+Dt'E7"^C=MNCNIYK93^:"]JjEc`,#e/$;3jXLC!.'$/raV34"FiOW4BI@XgZp8+8f`gh4h@"j'(/5##Sd>
%aW;@1.1kT&%d%`4A&i!r1UOb2R=8/,07#n6^/;gt^oYold!q044!=YFSGnN0E+LtM)!\2j<us=4KNGa<4A^5#.VN;Y7?0+L7r9/)
%C:4F+]IbV0^uIbP4-79nqs&pM!pM`+cfJ\k*QV#[#V-E!$]\Qos3VM/B^YA9N8eD`eL_>]:U1S+qHnu7o0I#a)=5JX3X,0'P2YV4
%Gesee.fNL<-4&6\RZ)otoEAY[STpJMmBR@7\m9(Udc8)4ZYUs-cOIY:_B=RDo9_i1YEI^!f1H+mo"&II_))S`d5pDFJFDcC-]64M
%QKtaL7!`QrI>jZk'+Z*@"jW()_O7/KI&nK>.j]RtZ,)..et%0g`U/TM\8\($Z@;PO^g*mc[,>FT<!=mnLJ*=&9;t7+3X$Fq.L/;,
%gp;=DmGqY2lbE"Sh@67#bes]R!1p5j9#JDAm/Y=D2!6SV;:H(E`>Mg9e+Mf*\&-C$b,^V9N?<\VOlV,hl6_b7dGVukl3,El2aVTW
%g;T3L3Y.h*T$p:P-]#OjB8GP&h!$l8P@KN?8UC'"Q#Q.D8;Cb/ZPH5adHTpepc&D0_dT%00>0u;K7E_jE\h&BVElf:Bg(_:Q;',1
%=/X-']sPPRk&M(T(;2tMRhK-d"p'CXr0*-*$d@4n*\V12OA*N>=Zr"g31h3TF\3U)jDr(0H3h2lP5[fp\XRoD)W<,p_+ht.g052Q
%d'%^cYQ<gp!-[@q"1R#f(?!U(8cYDS[KJ;p%$i$oGMls5_:Eq,IC0D<o$C^V5lXEeGEdDl`#Y^<%UAcMe&W5DEJ@d%1M19%I$3cC
%T1Js%rCC?GU*a3]B25<38MMIqPsOLj<Q:X.pT"*I@h`$PHBAhg68BY-@#@)N-ltTAS4iJ7CdpqL#VrXjfY.iHqlq?20doCiU<N][
%]0_jI?lV;lb<>#5q2P;b#$p=@SY1O48M<:n5+E`+Gp4/gS0Q3P]n[W['kB^#A=8=VnOigd$a`X;3/X?+amar$d*u"m)Tm/]JB^cd
%>dD5iK=^*D,CD8p\^PlKE4$hd.?5\fXPgrO*/,OJ`+bMBM%)nlj>.7B*:e[*KXf8A4'*Tu24BQGDXa!IikGr9s5RJciICX[/56(9
%-[O+!/\?\u7s/8/qFnc;DN=eD_"j/d&Hl;D\*d%=NbdaS,%3+X">e,5mY*"Z!LuFd$!9pg,oP\2W7;4qAr(ol5<Q##Lp6!PI_.`&
%-MUGSpJs8c7\OU5KrlKUKB.[]`(7;\Ee%dn":C86p$`B0>YIQCX4YTK!Xb>]7KV9K,@mr1HXOO%5Y@YsD#G]ZA;F_'DGbWT]HHA[
%s'Pa@BdeJ#EABq"S/M[)6=aZ)d*r(Z9\3_`B+P^Pjm7B#`39I7XLi!=@8)(r4__qQpr[d-Saj^]jR39pY,$uPQYS/=<Wp8Uo\/@?
%mkjtrcF>&`)q4GAaYt_X_tc.'[3F<d55oXk.=klaMqe@G@\<WpO[B?a1LtZ^fHKcDo4i5BnR/+n[Qh%4<3RSri#Sc9HB.T-n9F"R
%\M(ai\"+7&e-6^Wiu*H1,Nsb%/t.HIFsEn+b5#PN+1+YbZ^d/68T(!^fqR<]`eBXJ?3sVIrs?RI1eQgCm*IJHbOnTM;+XBt#.\9*
%Y`(E2;Rt)4afA&L4dnm;MQG:q!McDo'qg8lBiiueK3K0k54G;qjmWr(e`KcI2BP_.n[`dfrk%Fkb&IT`/cGr9:o9Aq1`-M,;o3-1
%4<lL9on3]D!Yd8ak>i!O*_4=$;m)`U1,!;T-q8bD_3^qfRkct$%<PA9@_O$(`'.30=c4,Ai)/7/Bo6.TfK]reM?L1MA.(#'Z:doF
%Q[Ng.,[<[9E>d3F_:Y2P\SUiLr:*#*'9EmSS0>812n0Z+5eb7f1&5Xs<S!<UQQR&c4:tU/n:6GlOV_00MB22L"XP1gQ`.:i9(<YL
%L<B;%.Q=-L<dbR&_[P[Jj<H89e@eXmkQjMEh"YG'`<+,*d.@B/hD(#$0[diF6?PDVR6FVSjJ+2F<nXO(:9tHf'nV<bCqlB`E<8a7
%K5u)'$YlHpA]>.MPgsncjd4.aO)qkX<qsS0Fd]b_Uc1=cq")=j$(=t:1[mY>3,4N8^YNr]ghYrL&0rXbLF)ZU?lPOiF3M@TR"r>V
%6&X7Gng@h0R5;<Fqu^]1-28HXH;67fi6#k]J#N.3e@srG]7eO)KTLMg&Q_kiKBmi].u%3>L'j=OSLYg+Yth)pjo).^q#On)T$VPN
%08/ib\C%JCW[7?a'\Eg(AB%[ApV+]t8^CD!nmI3d;'Jn3>>9#LMJfZcHmOL=3UKN;%JlL)W$+kfV>G92g*P$TU6Hb/451RX43Xl6
%p/SXM@3lU7,G_FXel9g_A7!%U4Y^RHJd6V]pk!#i_eEhs.8rPhb`%nDf`*;A[`GNm7RPZ-1BO[76`nmC(g+F;"@gW:rL_uh)\Y]e
%?PQ%sKt3<`bi%r^+!Bnd.&6'dgBJd@;F6Eb)sJih]@@-;#l/p*.r'bCd-]kEr##ZFZV-(ue#<>Ilp9&0'h:C<4OfF/>G2drVL$*G
%`fZ&pc%HsuaT,`T:O;MfgHoDuf3.l-5L9<M&\3#Hc56fo$YWSq#Vg).P8A4qklF9T<PNgXh[F8POJ,A-k0N"c7QFrrI4nJU.lBOn
%.G:9f^*)4E:HH%=)3$*75)+gq_Tj5PrQE^ur_AK#A8i*2#AXS9POEIKc=F<FXDd0i"d8-[0$k*M@%,i-"n:;scXN6#K#]Iu.%^1=
%6@Tt;L!2pt3^>a(B0cr%oRF\0MZ/MV]m`h,TAe,^1`?U?7.RQWJR_QaObse2Y_d:lEuO>LR#u)u)1Ne$Q87?Q,WetG?9MDSR<?`/
%dM'NG.-_BGQEi]/;47VC51ABlS;0j043=KLKGS[)4?*#Ba[p)b^LcKLEGoe6g%VUf'7+%_Qq>J]=@&&E-A2Kpj`trc3[?7]3=3Xt
%/@\^r<$GmRc_mREn5Dsu?F>j^%4TS,rSmBr'?E3hq1l?s@408iE6_j(Bh$`4i]?@D_"=LnH[B99V9[.D&FcY@__AR9j+qH+)$q*(
%'r6e1PW]Q(m:B]CXA\S%d-0G'%[l/5Ye"TGJrQc.+n@^E-qe6W'1i5R_:TO@"rtaL\PNdaaC#CHR538$HK<>*)SkSkQubtLV^`'F
%L)eCVGNShb%#0T&.@BAN&?Ag6OXZ5+(05KBR^'l&%nhM'&^8W+E'hFtOMI"8p+Tse>^:.J=lJ*)8E%qJXVR=AT(Y9K`fl%I0A%.&
%r!#h<b#n3QWBkgj8gBVC8>nOc/bG!fKI,kQ!lY((*^sqSMi-_=2oH^M&AfhL#dKCp@#=!Fs)'M/gQU4J,hJ6@KkKKNe!_DVfI8@4
%]e5k7X](eT8N`!"#DN\hchhkpX9uc+JdDtUG.TR;j?pB&EQgGn:n`u$E%iP2@r`H33%"]7:&)*L`LD6"ZSKFr_ph7[MfBl+Q;5_]
%e0[*pr24<IrrP@mb("(k.Bt:UQ2Ei,7q=BIO`hKFIYCrHH5XZ`p%1j(-OiIT7)Cj]*8kBKCipD=0d;'qB3CU)nu]ln/X"dLPiX'l
%fck:d\T.o![kC9,QaqBo?XU^*mUp.?0_TlS1?bkH!FL/dc,(nUGjmdS"hgS\A\$jZ"lYeD@B\@cNac;/XWF;Yo9q7qXnZUM7EuXZ
%#XIIV4(AnZIL$J/]V'&*/tJjEi>D9W80`tqf.7NJnZ^Ve4#hr-V?bimp6olK1[m7HcK9,M=^i-bpmQnS-UtgVUd1JkVtkFY5mi"Q
%i9%XjU0\,[QssFo@4b!f^8@.O'H?75V>3N00>,cS^ETD0meo_^YH];b(qS(+n1r4[Qg?'m4(QJ,E0s/0A0?K15"-Q[4Wh`pMnmq8
%%^Y]q-Nd]n[(r"N)eT/jPWS(kn3r.AYAp:K$gnN!Q_gpQXB5i9MhhXOE`U=B`lqIimf(0/INjsl;H$hgbX9s[QQUD$L*/Wf7`QDo
%0S7s_L8mbX8.6R78jLJ%K/8qU?GeR%)>>$sr7<"a&o\K5+Hdk=?=,AmO/ph/U[[!uO.t5g*uYM1B-g<gKt)u'XrJClls6^-TZ*$V
%lo!V6cEPoB++1asYg"I_]dAq=)>'@DKu#U?--SUbFH1].ccF"/i7^p4ZM>VQ?dh@U.J>VtprUkBUb==?^1INhjtN.k<I@ogb[/V(
%Y$#7;1?duH(AiCiO&_Y.,XUOrD=lJI?k$O>B4$YgY`U&h`KVY!N)W\c,%7`>+4Bsd$@KrH)3sd.Q[gcf8G4j&<D7h12:Z\[e4Yp5
%YO\WY4SOA_plQA$[h*=)=]3r\5.@>pSOua4f`3?0>1?4=M9\,&O9dW22F#P4:K_RM;6S(u(O*LqP+l8L)[pSq(+E^Z+Y&P!$,,k2
%B$)r%ELg*jbGDG0&GF*SR12CNNsL*W'UNkWOW5[,"6I%Z*5g<j(DDSS(Os!.>bIi*9EPrR0(qVUV]57]G-be4T&*ipiJDX_%=;[%
%h+ki%h"0pfNTaXXHR6n1?34):,-$Dg?I_bJ\V!C+e'Js()Xs.ae8$`G-O%0r[PCXUO:=;$"#qapjmqC$K.s,E8%et/f/m7obi4m+
%A.iq44Bu"!ON;a+/f!A@DUd!f3puTn"?mlMJ#++L69hWcAoQnZQm.<JX9V_`Og;Vm*bUA>'l7N?G6uNhfg2?W:I]EWNJilki@`5^
%91^r'd.EO1BaqS33_KfSqP!Z)@[IFd?G*Z41Zd>E.'JH?V1=p%\7b^O*r#kKj2-YoSS>r2W=NU$9/c-haK$oJ,m`fM<;fGi1sL\e
%X=K2/Mfha4bE67>?UW,A'^PTjraa2mZ*OP]m/JoHcpd*?IDRKLjD_tRFUii`M(?]rg;o6?WCUiCf@]jWZcIcg#3H-ggiQX\EK"8/
%0VT7tCe"_]!)jo/<OL%UK4bF%7J0(hSAgRWasDPRc@D^'/doc"1M/F:qA(oS>TEJkdX67E@p@o,%Ipl)#9*NU9Ka`XI[bO+(LYJ0
%N[Y2KqT"PZmLW:UA#DJ#8utNTe6n`oHc^O+qhoa]GAr2Vc9;!-c7ePfjpW:C2Y9CkTgtRT+U`pl,;l:F6[g9(ftP8bq&!^,?09tt
%lLQ`g`En?'E&-?7J-88IR4t48%m(H<9K%8*pW3Q#Mg=d733^<BmX?ngn;P8RYi',miDjj'&Si>Sf3g?7aAJQu;[6kM)=Ru`N1#Gf
%!5t8+P\R'hr?1q>=s&t:;%*%`ghdcj(jo_94Nru@k=Fui9UA>,f7XBbAfU=fG/WmBgM)EFZcmgu2PMt<gkmd\'Dc5Hps-734u,k`
%J)Pd6aX;Q@GOb1'ci57PB*?]Z\n!2Yh2sQggAklt((JBAT<Epu_,YT4!LM]]5OS9e&&oJX,Mh*17kje'^,7)jcI57=Z'lbIbTnj"
%K3j^%#@b&DPh:sH4bdILq$V0UIY;i]aVAkb-\TWDGu',R5Sd_V1;`9<nj+dZ31_oi2D]LUfFW0=nW=Hsbl[C+pG$<^nP0a;T2FTP
%^6)H$/P'A;/]C*DU:W0:W"hbs<E=40BAp7dGnqIm'%#BP\9]kSCcTps]k>[dmdVQEr('t2JKVtB%Q`_Y-g(dDr\M7Q5J5JeJqfFr
%bagm`N%`Ii=m%E(l&&6!$>]eVjI?!7>RCP\.c$-STZ<8Y[NZW*[9]ec=Gj$@.'B@#$9hOE<1``*L.fFNZ]b@5a`g/hHV5j;f9R<'
%>8!1-><AD!-e(@^0LsP;)h0:2l&H$en;e#1Y,ARR;+9)l#Oh/kC\mP<aA57b2Go#I`4Cgd96/RsoD8[1K7U\-nK0IOa[PiVOI<%A
%I3D@Cq/'iSFLgA7+/D6a=^]QSMh-/jrF^+f60RH`L3sh-YL.?&\jn[g>7:\PlZp#;2,n@r3!sD?Q+O)*6C)=,oIm)acgU3:1Od'G
%CLHo7?XauQYOXpXdlUD&cbA1MT@ZF-J,ZBrr6KlWHWXEdHiKd7MtbmZLUje'YSE::mgo@IlX.il[I9==PC/A%hB)8<]hdqZj>8ml
%.tMPUZ]c-Bj55Ianc.W&s7!5lndkc`?iK#6q9)!m5Q8:prf;R#YQ%P8X.b='[cSk3=l"82bG":2IU>=?r-b2;^AG"XGQ*TJl7Ys$
%Xk:rprT>j2B=#K*"4BCg^gHiFQXq>Qe96>PINQ!NeHilbPmQ>#b8Pl^ZLIC&_7tK/(Mj6u@Ss)rX3)N4Ko>Wi(U_$HMqWA^o_Hd^
%rYK_#TN1hoG,E;F2o34)^@LZ8rI"g]^*DPhn,-gJf46V/'&^rcot-O?kf[%C3:"3FRXZC_cL31Nb<,b"h_e+s0bSm#?qJ55=O9C,
%l>cUm]DauTSDV`QQZrH#^T3j`@!)0#qlXfKF^ZY,YC6:NJ"LtQhhd+An,-C;F?]^:55Ga[s8:rQg*Zc:0$TKGknLc*KQV!tqNh!k
%-X\/FGKm]6ogHl29ose.i)JTpKa'P^+:hnuGq=S0g8]sfP]-fG9$)t[ELhc])EN%GLL-*p/*(p+Eq9c).9WW2GZpJ-p7[1>m%$9J
%pMt3;OF@B`.e^6PI2L0B8t-%)[N@8Ym4f\'\<&Ep;ih+j*EgT'mg%eS%\>A(AI;r%Wehambi0>++9kmM]6+=s(oDIrO99`rl'`TM
%:7sM'a&YnS5Z0;_:KL=6a%fRRD%bY?X]_rY5@OZ42V/0\VbBEDJ3(,Ago@!fGF--7]HJ"@A)P&)OS_%A-tu%;PP[=F&r]\nr]FKT
%YCA]@3i.4cnG'KNJ+Rj970mpX5h@D_lhVgu&mudHL]U<?f*/VWZ^VRqHMgu$*ri\UmgX0#r*'[1]"eS(VT6FTj7.WrEUa"&^%<R3
%]!lP^<<<C7]!6kR52&s\_bmN+?cob=gj3\ZhU151BIp@$S$#Iu"@6Zdn[T&GKCH63pfO;#!R5E3:q?8i0(%q&O.#S0M>@a.X9tB/
%`etfJ9aS",b:[GcV6m7Pla5t52,GCC_?$?YlSr2/FQdk7\Q%n!k3'EM\,ME.L;g-<D<U^o]BS;CWN^')+KEf$f!$nbIBM>8OTVCV
%k$!m*.]5ZPW?AcW]iY?M4t!<<15THl*!L$8ZgU=DKA(\%J+T1](*:D(C2impCn2<'-'c(tlqW1:H1aX`)P(XAjBj3,Q;ISq<[3)E
%>7BRYH4li*E1=&aht&BDOSH4rVG6!E*]VMUiXZqN`V2Mi]\e+^(?%Q&8Z^B>/28MQo1Alo\`iE#/)BrZBa7r.IJ[@IMJbW5j`Z;P
%rbsoCPll*P34Z[k7jJD)WnOH99kne%%b@/Wq.bd?:pC>XMd[_"oI#1t^T[hASc_:.oZ-L,m$Nd5:&I8i_AcKl4EnZ*<SH_j31^2?
%hj[,<fXuB$`&X1!Hh"8V3qM1&40.o[iH;0>G`0l'S=ga@&8\78Lug]).#J5B^nrA6dfASKmJ>f89(eLL"6c9[4=U`(U/\pXRS-2b
%Dt6&[@4eVj'4f"d)TBfP[6d9IVL_'8Z$<a\TE`,;bG:Th@WD5J)V2$P2:KT6/[>9&Usk$nFPTkucrXRT]1r!)*@Ud65T])s'%EA9
%\KU%/2-2Fb7>*1V8T[Cn@n9IQnI[CY:`lOpWihhF_D%g$dF@j*NSO8ppdNFB5a@j\9^3"Y#?+FGLrXU`HJ#S:k;mdEL)rm&RCZ4Z
%XiFK!TFW)\h4TO-ITHR3kJ@5+Q>mr<_CD%Brm[#t'O`=hosN0!<qqX\,"3!o;M>4rLC*^<N2Lo#6'j_6]n.Qn1j)h&=]R`VQ^qk$
%6%%P4FZjBi=.u;WEi`5+PV*`YJ5!5@]g3?'G_Z*id_adNfKPQLSW@2B<:gHcECs't,W+ijUJd'=BonV&\j)_O<#En!`2Nf:ekMb;
%$*.1!a!b;kl2ch+8PnBY3(H+a._i$e2\)&p-_3:u"J4S47hq=aF8L3,<M,ARTDXMGg-M_a-W'2@R,;7rL$C<8*%WXs+\p8pi)+JG
%@/#u#?(+Cm-F9HFVtX]Gp&:j@g>T*<rh\i?<kgMjh\t!_%I1D,oim(FX[.XF-%tdf@h%^fs!/'=Pi!D/D[l"#f:`-5e*Zf*<h4]?
%:;9f,hl>.De`jR.o\936>BTeE3rQCU:\]0>Eq#uX>2>mF(>3HIHTP&t6r$>QX%GMM(+sdN'ib%O]!IRRBt@.DF4Y2P?%p.9lOD(<
%Bq_;RhCpOH/\2)p2a(hJ>PC_3bk8f'4FtWobG;8S82f:ClaSr0q.f_CqV3hm;rZ2p8ElVGb(*<T&r&<**mg^O$*0(ZW0C1k\"qcT
%1uhMDAfK+EF@`YJ]fpYAmT#=&&?GLT<Y]3#LM@(9WJ>BESKIEmoS\rpd$*+o4fEW6W_'1M,gBY,4nMQtZRdQ+<NXIpQ*jDh;QOhm
%g9$->Yqo[e#8j%2\Y?0;*ZJ]P@'Q24!t_=UEgP)i#bLB9&m\,;@fO+h\&mX:KU!$an&(P$]2^H)5O^tb-EN0.KCEclr6a+gpq*pm
%jH>B;+H^^+<LJ0;A%F\#9\E\ffL$B8L")*a<p?DbJ^e)m<(SpAK!$-/)8W<QO'T$Xe>ErNi9CP_L+S!WZj(pgUhhNGhWOu\<tVQt
%Q)?t13#,C6*YnG#U`B]a<2sTL3E3[Xno+.d**6(<*kS7`:f4J12P,:rWm[/O2LeT)*aV.5-"<V>1gHnk9hA:j1'7JG9h>,D:m;C$
%hsBSdHhu!YI^>sP.dT_?f9Z*E')L,e>fj*oQV)18Eq#EH>nRtXe5e^>2B59h<VJ\!]tC_Up$DW2Fg.Ors%do:WnuZ"<Seu3C71%m
%YrY85(GuXq&Gi/D)H04SS!*Wk^-[mG5!)u\dcXRoI&*Z?qr@K>=u<r\])GW#Uu1(\3s!Mt**R1Q.aihES,_:Yao@+IkDS*b^Ys,0
%="k$#\1dW[XoJ<1s6NCn5mF-7@_dIk!qfpS6N+59c"kAOpLi2H<k*Z\KXSJ"JaJBi;o3-NW$_HlO.lH4<b@08ht21+XV78fRZ(US
%BsE\AKpN%@TM)e:f8<c-4fK]jlObF%I#:^u8_KV5.<XkrA*.',c(lUSR`C+^[!f_/2V%/??SmKD$%8tE)(>5oB_Mku73inU]&&br
%>]8U_8BF2qda=l:P*l$5=8[(uG1,U&N(L].d]>egk`cck33!n/M+BP01%C+=>>^+(k&8.PGt#]OTJ42]9PLZ63X!KsmK/0<+R0(C
%NC/CQ*`Uf:)MWF\O:Gp'ZdjiW8N4ID<LH\4<hBK]M5$Xr;a_D$TEAd+T`@(G*-aC?4V(gerc99irT?/@=%IQ43DTK$-m[mJM4eEk
%R4j2K<I[i3b+2[?:m%)j@k'A<q9I$\<dea_aQY4cJa+ajUec/-f``hhTS/Z_:f^)4Ba`J*TJIlE3@s</"6IY@;#5A3CbosUF"2(]
%?_Q+:D!Fn5-;@,14NK2A5P2e:f:osC+"c.I/,A*0Ct_J8MWOf02JM`]IVg.g2UFH!-bbRPnm*=>>A+*gU9b=q['>.#(b6_nX)7"9
%K=jfoi6G,,Bs4,-H2\-l9<T*XXI`+2Rb?B2eYQ`j?RZ]D`T\t12OkEQf;`?<q't,8hHR(ZG@N"(+b*cEp,;="E":@k?hAC)-8j/J
%7S]6bO>_2f'(+Ore7C__l>)/F=*BS;1Y\40"]JklkV_8/s0<2#/W&An>q3^7eaoq)P3d`g`$k>DhMSl$[89-C$nWaj$Y&tpVRBck
%l"NcJdPCEl<?kVjqjpi%-RP$7N+/SJ&:=5X/&C>XL.e=<ZbchGT\lK\8.a8/cF0lHqAaB7d"AL0=2WQ+apdXQK$&q:B;h,V#ISeF
%=N`I<TL9BFpV6b4+:P9h6\_9<CV3(Qh>LhpS+@`Jfpnj7_L;p*83t:W;t^UDf%31\80>0,;Dt]O%9HH<I5.Vd$a)6N5i7gOr[5F(
%,$hW+i4d)YK1(5O'r[MJ:mUE<IF/l!,c)\\m3tr(Ld_bs3cXlf]Wcf28Q[9T1!*pAI*cr[Zd@CA9cq90&W(CgQ)CXWbCuQOd1'cT
%nq;l)Tf3t^%',Pbe)a.;>t"?HI1-NM'p\q$\s4->YLCRnn.o"QW94"7-DUj3K#?(o@94e#78"9T44H'')6IIV<^7n1mXP7/J(qX@
%7EalmTl34Zq7!A,,j:n+ppC4bs5$]H>'KZ<6];$:,ld&kG1-BM[r1qE\,3;^rRUA!DC98Z[r1qE\,3;^rRUB8-0]UQpl2?@q9N*A
%IQPc&.oj?LWo$G!Dhm"aV<YNfoinEl(Tpa9f5[1+'CqZZ$))DjeDRdW62_/XM(4@mP(9VA@_rPRS*Fr`@hCn5BrJ>MQJd`h'\2.`
%A>i^B+71"^LILbT/.ks;="08'hu2-/ND@tq(n2$gE9r.1Vo!K@(PTdYKgHE58Vj*Sab'iCj&M)Fgi%;#m?-DF/l/4]$'jh/B_85.
%6uQ'be[c.Q+]=:d10(-<SK9ZP%kj9ulkia`ZsEKcB_-1+[$p!(OEdg=>==E6fU59Qd"(A&r1I_D\u;N2T4DLZW2^G+e,GWmkcLsR
%^nSg$1QnI/1t1G6-980@VXcW>AJ%?'8E#&E*E+)7(U+,;n2>?;PGiK&l*0%Y29p]tGddPbkPGtSkMrUBIs[hGnDdM>n2Y(i`=hIu
%*N8=0BpD2S_2mDKh+a,,h_QdV(k\;p5ISt.fXG4aUoI7e&f%:]MG9V.<-_CUKES4,RpN`n\l@oG7'$M#nl>'OPnK7il2do_ng(0F
%@&6\K?<!i,>brM<Zh=1Wd8T-9p&tu*.P]KfNPud0k@e'P*-G9<E1MW&"BF;XBTm51nn-#g/rWe)$Wd@kn]c)1510Bdj5]#5O5iUb
%Jq&^K8Hu*LFHd\O]t](3(c:?n1p!RWTWbL@Q8i"W"AJo@"JC.Wi,GS[rgkcn<\`Me#PI'_6+",6ANC;_AN9[MVi"*<c18_1*@BHm
%$a[-?8P4tcLEduRb%Xg](rO]j/\Pnp3XPfFe%Z;Y\]Hd$3D:1$0O9Ki&JbTUpEA,ZRJ.U-i1ENT;F6:h3580:=J<db4J`\H9U,p8
%5k2[3%\bKZrSdtE[Rs*.<+>A&4-M(TkP34c[B\f)oHH@gYoLdYOOkukY18KpgRab*N!*n/OB=f#R,?sE]*_>?c@R#:eOIuH;oA>L
%jC;c>W/(_.d2&"?+K.SpS:!X=IPHD3lU.S'W7I[Qa=g`V(D0?kc:JH!nXs.l&]h2Zh"m[r\DpZ>:LX:XAf"!`!'8HGS5p,gPX4,#
%TceMNT&odf?Wk:M\?"ar^6.i`;)TYFVKp2<C$@a6\Whs1<#'@u-r@^TRrA,A$.8=4TD"q1<d[i3?$(3WlWpC?C0@,QDR"e2Hl/aM
%+S32&Wc^U,?\7.9Wn*)2/QCEIk:;jdX'`']X=QJK]_&jM;=IN*20#+=S:YWW^eIs`cjcf6d=/>dY:R2m8CNmTE%8k:e6^L7Nk$T\
%1[>+kG!rBi$_$AHJ_:8taMZ8jZsFf;<'gahCf\q%g_"t=Ki3P3NP@Gmj8p3*qj,$XP>eNm9'#SOBDF2];\3C449b%g2JU3B^9PTo
%dF/9&"2K\H<OGJ#Jf(;rf?,BQc+IXm]kO>R^8g`C'/J;3#9>Y0.)igHci-8T.nKjSJnWRdZd'VX\4^E&aCGE`1<pOr,U?TrRuf;1
%_WSt?blt1,XY^IOX5%jne;P*f7)(usA+D+EG*E*g5&oCGdWRK\pJY5ChYFjU^ZNVAdSG7]K:j)P:gYlZ`j&Zi$OD4->4k'0BG+s*
%TqK"uT'$i)VEQ\)Hs"5P&Gh<.ljs!r1+W2lb2L2gSmGZlS6iUPE2LJ'S3VH9MD18Jle70V9dGaJkBU7lUb*.jWq,B:?S(=f9uCp;
%UFtL-*R)j:n&DDJ@AP?,T`SO(rBNY"&1C1rcp<nfpo?0U&qHC=b9KKA++2;D4Hr0!*Zdi!n$/-jI%uoo,W8NTd!@E*oj(hHXY_dT
%\LafM)pt#P1b\/^*XcmXKdlu)1pg6MF>lC<?_$m6Y7/F`)T>4S-500J_PrVFMoi21fN=p)a%STqY'HtR[.Zs%75tS+>,%PgUaGNI
%\V2P^gj.PLfS"5:29j"GL(&fYD;8onY"m8F\i.(h6Fo'I&XTZF>!Cil[9<HQP-4F?KQM'9eUF'qa(rlcM`PE^LON;cH/?&+[M'"6
%@dmniH+As"WGqGFI@)N5e*7_^P!j*jWG'5l:fYS#\;,2)U8;EamlM9P;pY?>^M)2-`+8:d7uruZ*u*anj2gX6@1-ga"`=nUfg`$-
%'/,RR`aHIf!5GjFh=d4'efLl3`QB^Xm-Wep27#QNd8>p#VqFhXFcmn3RcX+j]Tc>AVtD'[)VE]2!7qg*]r?5qq+!0KXA8`Shu0B&
%gn6&-,A"d]HO?sW&FY/Sb'kX55"A[H5X$ebUH^@'j3NA?,N"(O6i$7j_>O*&^Fj@jg5XVf=(TS(l@upNf:Su/GHo(&\qFh[-EqJr
%_t;'Y8ZtlM\r:Cqh65*JV0C;$PSO(s=o./c(pX"N^W:mdBM0MBLd/#n'$M*.E0gLlm&t`BSbZ6Oh"T,=mf"_h[?stm$_=3D_oD#V
%H"CH*TAA#sbPqFSs7YXUQ)n>MgoI49cPW\=i)t,VrGP_/7&8[$Ht'8D,;\^-gN49tKMn`+a-0W'DdN4j([Ad!YQ+LgJ,T?>dd2iL
%X_,St#qr3]qG7FseiFQ&XSGq(JU?X2?(dSWqq-c#I,%cggXlGTjnf!d'*%s79]BE-Ol/1OC_igj^V$J%e'uOd]5$8(j2YhBVKkIZ
%\-9st,QUVU^>QqNL$#4S!m6N+7J+-INbpKZYqe+KV>NG#M\hjocl1rSS$\o>QG2.uqQ:uDrh*aVqs)1_fUU[D7hG8:FRLAp@E7eD
%8>"C[Me$+%MTU@?$"R4j7biGuhdE]n!J\:+a%'QYOnNgH1-`DZDXqX*WkR;tA>;pd7V[i%E6rcUdf"bE3VmW7<\4,A:;RG2OhPMI
%*]37Nn44oO)!9DR/0bF\?'qctqSjFHJ[g,fgZI].8AeIf%.nV><9F0K?YH(%%p9>SQ.1*;9VA"Gjl@2SdU6Ql#VWCk%/6L]d5f9a
%R$\lI-9e[MRgkBeO=a4;c`'0e/Miu>E7n`GO&,ZEl[F<WaiQ73G!/"uK3BVeUd[4,kkunbnk;%5Zos'b`R5WgfS*7<Z\Fod%kIft
%7n'@ROCml<G\(VU__jsRTJ_&>_]HP7BJC_PBc7e$ZU.D0N+GGb6G00RLGAUb)mD1gVAQ)8"6^i^Xl[A&Yl0;d#V-9:d9930,Q7TH
%Sk(aUM+M_akDrhC4TY<nB$LZoL$b%kU'Fmrj(=(3Im9c1SfN6X=e]JH<ADE2S9ml#)2O8o:mQ%a-quaZ3EPO0GC<TTeoD<ggU_!k
%'i]0.ae_H^7ANMs-uAm=qb,J?2#L>\4k?'#QV"_VH"(oUCaA/j0i),M*#S6nT[R#3dKb"0,k&cKq3i[AOU5[IcMSi623?dLL6HZ#
%SAQ=a:*GN[9Z=kCY(G:]4OGc6h@:*TK7d4LWLB-RJq917VA1JWTX03rOf`@e`Y-b6"E>?:6W@JTjC,CR=D;j)%&dM<cT.s&k/;E)
%9i^kk@L:60=2u<O=$%/J+%FEaW6;Q=ie`?Rg;Z,Sa.U:GXN=]CNZQCeo*h-A+#^>^r7^q8SOt]6D+T@eTr"V1'h?dNNL%kN/O>r(
%Z^FZV1S\E9&'?-52u%Te/n/Yh,O`)$n/*A`"D?](=;t#J%ia:>1a*RdJMES'c6-RT[(])!/>p2q6(`1tZpkRC[lkPXq\<r:QqI+@
%GJODJXt1L,$3GE#OIu6>q_'\*clJ&BaU9gf>_9QK<.0O$HLcf7"P)10hd.;m?T&5`nD.K/3.sIJLhS&H!aOF]?(jZedS^TtEH-%,
%TaF]Bibb"7<(&Gm==uK>(3";BHl/`r<=K(/#S.+fA8i^"g#'6\h%Td!>)3M*UZYtgH5s<.16T]:Y=?,u5roT(R3G8jL7NIK7Wj:*
%;QStWGKL8i5Y&mt*Jf;tG*)0QYI)rO(il."VcY>P]F\YO>TV50ODTn7iIXu+6/.H3]Gd!Sq@#9X'[05Yfj+Er"oV9]:<=am&27GQ
%TO'f0LqD^icG"PMA<88N/AN+r&m,6FF:tB1NT>%HbaV7[.HJ&lC>qb%&b5;\_#u5nkc77B[bLA24R[*=V$F.IUjum=FOuJ?jSX-A
%;r?:^/1!$IDu!+N%(qAn[Cj'fjCNKZb9m1m*kN"`5g*N1(],"<2SJj6o5>p88JF7rIm-$+/.rH>g60-W+PI6,g6LZdFTi.ZW;^c?
%)`jT_7qUOL.,_B>2:W,sDeo+o%D3rL8J"P!CQf'hJmlO;RDZ'VQ*3os2-`CXYmTK"G]?D\Oj=CfT3b7,e!ms'/b'E;%SV^W0m&Hl
%d#(;q+%I*`4jATTV/&OkJC`%ab<\!Z(%c?O4)G!E:-l*mRL0CrFKC;Zh^G4ET+-''5OC`A@tkkc3Y4`ej?sbW.OPoblBj6b[Kb@8
%KDlIDAX`t&;*fg!=Dj;4[[OqVP'S(;:D]b1./\[>TPL6t.qm\jYE,o:igMLdj6Yam=1)ApH<OkWG.0ks:JgXdr3rT;duOB[>ZAXT
%3[5r!M1Nq:[1q#sFq"[FkGHAP%>bI;E#SO0b8'#<fR[g&r*q=:q.2o@D2*(M!C\(D^lhJ4U:>g54I:t"bieH4UuoiK%bDs3Jq]0Q
%RXeN2ML!;tcEqQe1<c&m`Hi&\i\f@A"HAq_9aMs+%XliU>sI/)V/W5mD)\3#h`5MnmWT043tmhe+DEnj=d_1g$$qj6j6L85Di3/j
%$)g0l&6i`Q"0_ELTT\=>APj2Im2oBRVS?fGa"t[LZ[&RiF3R<;hMq#LAPc0#g6lZcPdUeS9'OrP`Z#FrCu;T:4*R=0dtLD19&dMR
%<>)b=fTHt32L^#-iSmDQiQb=SO6eIs[XHC1;34:s6RCpUan%e@!&Gd.hBuE!#4qCN@%8;F_`FB)F_kH8r2Siqq1ADZf^HJGbND"9
%3MFd459ZEbaHI[S%I<,F1]2h^Xe[8\1TGnV`Gu._Re.@L*C;:APK/+5d*M\)[+!m(6s/Xc0ArSk):434gRU!6U`IOc94<@(:9YX;
%(O,tVqZMHl/.8mDD/ME$4XR@>7$ef&WYR*mSsX(2pL<6GJuA]&Lm5[^0Y'a"SB'b-eVb3CX[c++a!tdal3f3s.:E*@8G>[(-seV"
%,F80!)CIt,b/?BJ82Y\BlQppESEYesRGm05WZn7h8ik(l.:RV%Hli3p!eRST<Ei^s<Net//Pq^Z%0Dh^.9.)h(7%]5,5XHAfn?O$
%Bq)kQ(%JsA$^*OYeJtcbW6ja=s'"WM<feR'T(GU^C':'0CfI#&P-ghg[CV^3g<EMXPqlXe9OOf.%2g^;Q:47l198)b^JWNuS9M!j
%VA78\oZr&-UPI)GNCJNu/"f,=a<pI:R"k6bq&=9nSn-/(PhC2T.Z4>%AtLhQ4\K4H*'81*00A9k<ULtSiQR=4o`nutXJ9MXm<V:m
%:d`qpc)o/C1CMMk9!W9;`@M\mcb.&1LN(<Z6h+qK*-NNtL7<JB:,[]b4Gb1bHpmmkIr#sDDHhg&RMG!bqChWIeC_-=DOJk<NQ_O.
%Wi0`ZU?+jQ(!B[`8XZu%),pPH!g=E.p#eg`#R6WKNLX*NX*P)<3EaJs!J5%^hj(B<`g`T8f1?-n+QU[?(5U/TC^dHB3CB#^kt4da
%E2-',,$?%Dk:ZJo$)q:kQ*+A^Cce%&El)e"$:Ia"N7gCnASd,Q_Muq&pIllsF'iP3O\8@^["F/Y@7=kl"=!Jh[fn1PU@4G%HoXV#
%G1EI.,E?l775g33bNm7eo#GO/>u8`<[2F4:?$<mX3%e%nr#.'*JmdeH;8a0[jo0!.;r\pQe%W>2mPn;i,?#0hM#LQIDTRZ5@).],
%HO)17=c8qE3dr4a'5AU"C4hh!f\G*I\_8)O/'hdUCu]SZ`t^RQ,6\N1[5`n@NNLjZ.8eUI"\&ra1M3K$;p#&?;H6iEb[7luXGfhX
%#R2s;@E/=$]4o=&3?jQW(I)2lYf$rong--^)?H%S%+MR9JHu5,%YO)*,l*]FM;O/X*8O^4&lmd2o_57lequn`54tl`Wi/so_%%)M
%=.k((ck3K'oDGUZi[SKc[0*CiT3*"EpB#*uQh5+r>"O"oTtAU&*Z/`?WH=Zc@LJ3Bi,t63?&qDXDkADOVX!+[c$tK22+/?L$+JOX
%TV%(N3*eL[-nOA9PFO-hPZ#bUW*FQ<XA)LF&TA/g1P:Kt-A\M3n1<.0RS4:2%LrJefnrqRL'b(GS?GOcJuf`;j!h3iR0[hq.]2MD
%/*7E>`\K38JfHa%+KR2M)5+BqP(BdZ:]H5Q?UUOYj5$lRrL(,JG?BVIfa&D__le2\Il=E(8VFEUFPBK^Z9P,dL?3KuN]mmmJ.08u
%naRut2&Xn!:S!!O)1[\,jL9=<$1-$dL`7mF:nM/LJq*(\r>E1WA)-JX_<`SAaQf>c`N%4R(S"m3&^gX[k-nC..\_@5"B!4e6opD+
%/:R0+o;U%`0Fmf09&F&`3]X,^^X`RA4tpt)71XH7441#p5o%i^SMY!ar=ao+K$q=t&FK@g$=(Cmgd\L38!R>*8KTg>oWO>\o@u8i
%:qI20P%]&je^<jk=>iiHoj6:=RkQm?_@(R@MWpXk0Pon`*d1hORd<@J!a+-0+;RjW(++)*Y;2E+LFGkp`:dndkGkH+$)fT6gI\Vh
%DL5*uOaXuT^<ULQW3FmL]^6g1DZk/5.X_*r:+T!AZ&sjb/)s^^h/P*Cb)Bpj\VHmh=/CR]"E>[@8k^/cf_6_>J<D\"i=b:bo-p4`
%"7f8`^leC>5d5ts'TTrH>eh"s&h1,XTnp:Xh:IH9">e:-rn&O/C1&;YM'[Oe8SL8Ol36=T=raq\bh$n!rHbQ`>`hb<JY0#rCISJl
%C4&GS/5G]W'8Imn/K9"eJ:?'-Cn8aDZK"nratuD(*S#!5"UZSs2-#@'P5<&HO#d(ZM>3!W5*$>+_B$d_]uM`eGK&PpQaWoTA>c;D
%K@3!*9:3^U/9K,3_3kU)fQbG=_PFnbT^4$k'kQku40FnqR8C>t:E_E5SdI10MJ1"5c*i/UM75i>4-ins#U7:P<hkH`3p][*7r0LF
%lV]Y5r(1YLXqs]c9/E3m"T_oFEH#4PFN#peM//2E`^04;U<9G);HkL.V^n;!F1RP3Hm+(,klnA0\3H>`jN;6B&*uF_Q1QQ?Y<EL3
%SVC!Xe"WF[^Q#[2/E64lB:@^Wb/,Z&+`_;P4-XNI2;7:^Q^VQhdi\pkCm36u5=(d=;Do.GXhMI<#H.;orJmGL[aUbCLE':.qsS?+
%3"bOg_mi%#3A0!h%jJ4.Y(V]!XShnOeR]JGf':N[F]0"moEI>=r"LiO?29KPa`cc@YlJ(157ME;-+N8?7PZ=-eaZs<_OnA"!iePW
%27aU24HKK[P-)Vm_NPD\'2CCY"j*=Z)h-.t^rBb'OI_n>/t=lV"c840^T.Q/Yg7]6qINa,G&(60fl_2oWb&&GE&NXEobe7g[3Fu`
%<"2g%>j3hUda=E,c^KZD>n]i'>L706;7o'"A'Jse\@@l`S2Y8G0]*+@=34IT7Q@2RSGV@,F#q!)a`5!T6@3Q2[E.a^S]6pr-DDOE
%j_7lcpJ4*8e\VL/JrU4tARi4oF#!d,'s=9(5I9N/Y@fS[,!k]GhWYnCY-P1L:rG2c>7c2-[&-LbB97RS";kJW!V$#q)AEm=RQt4N
%G/29]7KS`(@O3Ma*QtkJN9rG5!JF,s27=[LYOHm:n7!QWeTCnCma07EW"DAj06aU152IS0&FN:q*qHqD><Rud)cfiJ/BuYX4U8g2
%#q!ON/U\riVo@;M+GGQBDPSKR$/5NA1^(U/8CgcXfrN4X<l-u+glVcZ;@m+Qr<NTo>r]uA1&SZ3:E[k`e*3f3]QX<-oAb.V+NHf)
%*&Y8>5rs?'VHm]>_C:jA"t-Sg,:OVte>F(.&@l_eX2iCNXB?*6#'cd0oZ1_j#E&J`j:!D8X6&T#44Np3B#`hXad!,44+\9:YrM&l
%*GI6_g3+`W"CF3`(+rCpoFPAa/Aa$\#,2S;6&a+CM*.ZS-HcP.9T9=`QY:Mr4\g7L<]C!?+K\K>p='l&\l^D[lEQHZoR5#X3Z]':
%0m2g3J/<dP,O3\QeO_X?Eg;d:'S:'J:N?G="HU)A*c9.QJ8%88>H2Zq1t_@Q*IcSUr"5M*i^W/N.<:g:SXZg[GHW'E-/)kt6@)hJ
%a?PeLQA+K!HG5.5m>3d,jMP^54Ad8tF[n0B$MCe>Jd8F&9-/iS#]uY;KR!jiMD!iL@EqIQ[(>hGFUl`+E7^'t,+`A1[1b0;n<(h3
%D@2\AY[oD"6MZQ<8mpk4P8TAC;PK[C`(?Po5).-\4?iX?$9c0<1pB<]$-%jK:t7a8s)Wm9#Nil!Qk)eZ1M]NXS8c%i"B6%]m77j,
%G1Lh7QMmniQR^Df"@-FK8E]u/%$I55b/Z#n"EZ(t@_*\YkP?`*NXH_r_&8;PZ4(<BVW$td)DM:78r5MKClFiNp+)uIAJ9[DaE(J8
%$+CMla<@\6Djq@5gLef[ABUNZeSYU'"N`MY]H:T';,2JjBVQHUNhi8TT1H&(^+K$se$SnXRuNQ:kl5,ZRAot`'mNl<,FRR**DJ;f
%@1>X4@cH,9<KKgC87U:sZ]1m[-oQrgh$kRL_[+Y`1OJj1Q6UU8]?!d[NN(am9q&>f]@3f9_5lXCo!Y]of[_7L.s.YT?OXiJiOf0g
%5q?X&NBt'@YOcXRK;Fs'J-AQ[<TEGc5l]nh2u:1!"C\b"$]TL4h3&9$&@2teg`%JY%sFe)&-V)<nc;PAMeMO1+tBAlZ0[X9f"KMP
%Q%iFkE_25IQ%Uhc9&^^!0=pB&Q&I33*-\[MV$cK2hkJFANi8?k]DOocKmPrqjQh_9p6SW&Xf`%$]%`r50V.R.!)mua5N1mJ2/YXu
%K>c9bQj4,#g1AW"L\qY;r(idW6PmI0c-=PfRcm-%8n!6.AMn*sY:e48$Q-JZQoDU<drNJI'$KV&^D^aD+BZ5WN!<rH7i/p;83:0O
%TW,%0U5I-J0_Co%[;$H(!,+lsWp]4>1_D<,'Uo@pDRm\POUg9ZAc-)WoqDFT@dlZUJYL@N-3ZJjFNB95M2%!VD>/Md1-N(q@r4>g
%=OQJ=O*K"E'SQ!,MeMO1:p;&uNe=_$=4IpRq[\a?l+(R[`@Q!qbKc",Y>;C]fuifUWU7<<ARONWD$[p&]2psZ6,_*+[71QZaBD2X
%R:pEK<"V#"q:1BH)Dbk/Pan]SPNst,cj1bWR$HiC##=iVdHbO!WeG_5:gA_>:hi@[TZUT<8I:H[']uM%do?E#&JF'Gp?P9]pfb5*
%,Y['\5V15iDpl9$!Qa6)mHp&=H=KhoFY(nh&B#C'm#W!f[GAZ*o_6Fb.K+Qe9MdgrRVnk3i&2O#Y6\UODlP;^J]T=Cg[>rGI[0f(
%Qi;Z2(Y),\MZY7WIK+:N['VqJ#d/57ntG>Rb9q"**C;8\)?Li+WM(M<Pl7kPM^?u%B-]5^HUmJXj.N]sPN=$Xr32Zg@1BpW'(U]c
%&/7Or=/K'\mXs/,T1J.Xh"V/#S'#">FLdQ"Mq^/^.T9jY!@t17O=/FViTsJ%R",Ug`/6@KE2RV)Shk+>Z2gAKQ'OmN`17#42Ro+0
%P7jOa3.PN)JapBBkFKgHj3&F,CN1%;W+5rs.+F1+O6+eG+M!<f7\!OAP(]'Pg2p4),7[2^A-GV`8D["Q6CJsqi8uGF4^+_Qr4L*Y
%?*rR1[l>iDoO*G(HVBQsIr)UhU"Fo36-=GbH-k%UYkCfd;9mSJkL$#J4t*(f<tB?qPcYuKBdjG,bSXSBlVZ;;C_.moO%Hr.@ag=4
%WOn>"-gZf&L[&hT"<k`ldBlA$V009%n`WGA>A#:t+tOo@*lI?+K#PR85PCc)>N!f!B%bN!CpdV!)+>>*)8TPWr4l:3FilnFea39t
%h#pK,UkFol7gh7XBTLD+T7`#GiKPQth"`<Uo=MBDMRJlkk'"A]mGciZ.8P4gh&l*2^A/nX6h7&66GMi)l=0QDp_Qk6Zr+?/P+g\U
%'?rnd]6sesGdb3F1%h?0\^hQO=W1o*YpSBs3J[E$<0u<\GkR7n2Q!'r9gj;(HCHhm[:18,q%tPn77@g<nGFW/aunW[GOq"*427DR
%`D"HVm>ZD]>lDE<'Y^4R*,+!Q3DY4cqtYFkZs$A+e&4-X%[1sa1n%Oo_]6%O'FlY6<ddC?;4KAa+T4EY5JK4K^JZ'ORtI1N1oIR2
%#IO0%JV/(uSF7p!1o2IpP:BgNclT@q9T*q_E0iS7Q`HeKg\a-"r?U8/`r;N.7,qb7Ur&lETY(%VLiD$7mGZDRp<^-fk`:0:qaKqt
%@dGB,nf:#_0_KWh!Ft/5MD^gkhGF:>H'`l5-T]QBN\GhX5i]&&7qANl0tOX!]6*d)Ba9:g2Of6`UlFiad+:>a'f"U9VESqj[.G7V
%I)`L\<\S!/mLaZ@mU#OVVt:r0=V;Boi/27i+(kFRKY40nmhM\[:i%oH-ROI8!===ic,eMWWbH>gH.EFX=)UOd8bd2Y,G4gd`+mNW
%I9htd&<"(CY95gQr7\(oA&0U,'_-rPRBaP9mS+HN/2LuS@E&UQrm)RKT6S^K/NVP5.l4c9fe_oKiWLM<cJXYK[@.\/U!aGU=.$)W
%?PI7=JX&[i4!>ZS$?2aP7_B'47Jauo2EQK?NrEPng8:?V18)6(:Gb7M7k?c`N77)WEBXS<Ah\krKNda"O:lPb(s[=5GES;*ZB`O_
%68X<._p1u4+1HpR_6l+LeUo-p4enCoK:MbR3"BY5KJI.Ys-(/462tcOc]E$%5L.nt?5EjaI5'p+5`*6"N5Sotqa0)9l!U>(B!PST
%#o.KZ4e<;lBee>4]jWE(4Q<HFptd-Z(#KrSE(09Ifpun<R,3^ChJ"amO!0mVDl-haV[-86!U^m'kR)859=J8%<,qatLN&f]3J:#j
%n^<Z(YSXY=1:aU0A/jDhStqGi/,5X$V`&=FV/g`#Z=$'N;O,*Q>g1taoI7QsoUrN7MeB2Idbu*@;D1-:*]1MS>(3F\9U,mCH:N]`
%9Q616;5(#tMH-5"+59dTf@P3LpVXj4&`!,,NI<#4.>[aedBs5C2]<'1ffu4O0qffbm%j7KKPp#MB.,J^MT(4UVT't!7o!T4m%i*r
%X$$\&h.NSU$udt1lV[DI+C;"@mY17#CQ:aDT0[r\+n(3a#J?[I1Dutofo!d./qc',]e.KPNPpng9>pEIYj4.j&-jae5rDRDfl2V6
%rd;A%*lq,5,.(;@29^-a/.-E"7BJ5`)%_^ZPt$'_Tc,QESQ7$1`K^2oSUCU<`clT%[Ynb<[4W3A/G.`HCE<Y<@Y5.0\Yd:P)6(#A
%2*"[5LP-G@e`?8MDL<(ZXc_'eEOfRR.:<J2nu_4Db6!oG(4'D$h'pIXX'R8Xmc*D3l3c_cUH(t;.?CjA<&O,2;QC63N>Mdqq`k]C
%_FlP+.`r8k#t%41Yca36muKt:J%)IP"j.9<PW/fi>CiEg70i)I]KZng`ZH+5Bm!a/DGKYhU<!Di\GY*K:f?)FWJNV.C5QqFUD*Um
%Oc#X?2CMHSp$4S,Jg5\f!hIA=TR;_BqDV$%H(?F'*rPj(=;2@1?q1!ODRfpn>e:60m$X7.6IVBmpiTOa8>Bt$p?H>>;gT(c.M&ZT
%83HHQd!qi)<0na3/Rg:'@^dKF1@dT2UeB$+Fk#$7$@a"4(<6Rp^b#534jF*):Q4bXg_-OSn\\AiXql/Z-,AosN28E4(2U'.Q/;<5
%BBk<"8@,k`L_j#lY<7mn#r^hnhG*mV?sM278^n26'1\g<66fJB(V?)'aj/#?O@P=1_-,\=]I9`:_u%t)`O?uao)LT6Bf-s'[siJD
%15T>ja`3iXccWQ5+hR2l7<c,mWh<)NaCT5qTk/4h$c""J&T)6"Ah,jDG&7c)2RhQ&;L+&0N@N\qW%lRn;#JCnn;-^?lU*DYE\aN>
%\-2"+r"B8lP*,G=*J_iM-J4<R`e"5+b)O,M):(*%=$+3K$[S\@c=5IZVJW2URJ5Ng'iDl-Z#-4)7>01$Pu];6QZkR$(23k;+;W/;
%W$3h#=+_W[1O?P#Kg_-6$u1GaOH*CFcutq@3c<m=@@!d_?Y*Iq,:cWUK,.E!6k#4#[P@s\h29F$%_NVF%2:N(AsdZ["IqoZHeV'S
%3QZQED*T1innS%mn2j<(NceH?:jfX=:O:</-qu!>Ns8nU7uP=i4j8n:)oSTY@dWtHP1INU[IqHB>@0T\p22fEi[H'V7FR,El3<Kp
%:uV#qn-hcF5kZpp:?C']#8bFMY5)0%,SW=(8RHefGpHeXK5_4Y+52\"Z3Qu%Hgd1Tdo(e!F?\,kP(?s>=A665-hg"uB',<"(_`;6
%kh(%F/_/oRiuAM;!`RKWklQoWX_S"o]IPKU!E*[,bijW>mG_.XDcN&gWtNY_J'\3t/)!W,=RZlJ/\WXBfWG@`nndUj$\ji6BgVa/
%]>Hp5Jq8I?E&cu-WN(pt2B<0fgnlEjCBqWV:6P+c`s":[b.jrSR`)]K`1,La&!H2]dK5;]mGb^Gq\0`bk*+<E&i0s]/>rl@;lRW"
%]718o0(0AVB&VmK2HjE/[a[Yba4'7[lPDNeBQ$?]b4<uUVK\h`bt4sC(hfu$=LkIr^Z+kuLsB#'Y,l_+&t&Q13j0'oH_>nmeCW[d
%CF@@Z6u?ZBk;#)E@6L7R?'#-(NPkT<1WPPKH8)^l6`VBa"?f=B8R7q&g-/<29=ZM?L355V,"L2)pEP;nflA;a\)Rk(/=&rBTR+N%
%.B,tKr'nT(**?guSpZenGbnt-9hH[J:-a3H9^PAj%!%u:63UpI>%<Gg/@?-@],@X93RQ+$9W&3kX0t;fHJhSG%Ys*4=V!Oj!?,l[
%\^_pHrChd-`tYd27;OF^O9r4.;"IJe+H>4+,WDT2^M$c?dcl`pS0r021ncso]8:!$n*ZUj[W`@&c:P?LKq_%ZPH_'WI6G]F^0105
%]+*L2IX\\5gD5M[>CPK;LUDaW/a$5nGt>EeeeKVfpUuB;D%qZOe@iTKX@EOoopQ%SFZ/UjCGbF\3cH5O7-J"&E'\;U7_![YRm)YQ
%lEsd)<(,!?K=>uM]BPdTG=_d@AN<[u%q!<DZ[;e5,a'I`fIa)"0(2\cA`IC&)mb2*]mDJKim!re:^ao?L7uJ&nk4<4,SrO.kq.Hi
%SMQB<<]bZi9r'ue_1S`sUgXA[fi]7VYYY4QQciMK7M$"j9'%)VU^$FMGU#E-Km/%<5k^+B&]M>i&^)1@VRSZZpV<i"3o%<OV`i\7
%7>"Zc$M=KRQ2P2PcdWk):a67SCOAYZT9RaNIP/fu$jPfrZE<U\0=k^mDE'S^7W\lR,%eF\8q!*g'$tDDFa"X6'#INW4(1NlkO?Hd
%23G<sqA8bP."Cp5R/S=(<l;Z[\"gN&<oa8lpK3oLrG(OZ%pKu>'ns%h/ZWlLMUi?VR.m'$KLqb%qV+pH1Z4cM@4G@p;_9L]''A*G
%qN05oet@o);.6$V:eZA>dfo&PW")_QM!(l+<"KM90BU(!%>G+m&%UcT3Yr,dH"f7E_5bbQOrsPk>#LoqgD/I5eno8r(5s00m`HgU
%Hdns<D0NPl:dGafSHXT[JIOoP>2_f<KJMcQk7r;T8+s3Pa:EO#;"_mJN9io;kd?k,W/DP12hhe,?:7tKHUD*RkL/a>1cs(7lI":X
%"D\=Hr?)L?=s!u>WfDLj\1@*ZK>H1W^(Tt(g5[()8mYH49O=I/=HRdjomGJQ"@pe2O`>[^RQJFuNmuk#T?A6V*K8-ShE-pdp%[7f
%a;-@P_6b+,hC"^d.aEE-;LV=]2SUkbDOf^-8Hr#(1KdL/En1bLCKYbaU,fgaXjR*)gLpaFrj#J9pd=#+>Oai:dJ*N(h"thO(E_Ym
%ZI$(ahJH^LQ-c]d@C]bG.7qt*/i0U$:g-,$.*XEO\"7qi&nZOH4?Nu0KKg&V6N:K[G$$+Rkb3+/VCG&LE!IRCPsbV__+)!"5%m%d
%_##a&btAgCCPq6BenB3!W>7>-))YmO]s3+.k8&CE`t(oa$l=)Wp=;$;4/.NSK;#JeMr>(X37:<XN7e#WOUF[kbK\S]QU[Yl/j8c_
%_'eN@+srM/)$S`aXC[.bdiP<2QCIM4#3uFlqR9e<+=ti$!\<MJh@(0Zr,Uk5_5^#X9RHOt@,P'+3KqH%q_9=?Kjg0/f1q+S%/JpL
%Y8Jg:mWKBhH_EJum8C0IUffY_J)lQE%b_?;YT1N=RoItY2spES+oSuAc?mD3@'dS/1R&#`il9TJhFTGiM7OWa&+i[e#1B7=G-PA%
%qdoIr])&3ulN(JXBSG2K=rlT;SW6d&ngA0al@Qc+"7Ch6+FH%\$B$aGW5H1jiU)ut:@13tR5Xs>onCB[E-.mNO69fcAF_;j^&oa&
%;Wc89LNmooIZSXqo\JIO[cB80#"3F)XSl`PL@TM`7HpeX,-^E*LLJmX*^cR7KqbB:Tmc(.dZ+^WNBIC1BWDU.mBB+E_PWr]7Kn:_
%IU9M&cdh1*T$I(YYYY"Y7^?9^k2+p]9Q#*gS-["eledg3W+%rK&qqo1"_mW6nu`*DQH!1j9oC&ks+1uWJH3B+qQajb3K,;T<lgtJ
%*4t30LZ^4>-%.-6H!YnKna5pc<&m/%W8>2X"$ACqE":RH1An0=AXRC%&SDMVqD"3Z$-05l$f;Pi"Gbg,G6C-AS+sQm*.IcKa$JNV
%,dAb%m6SqP.F9"rale4e6%tAHQ(]3*!<hWKr?=?!le$uuOK#bQ6<#>tEN.Em<:X;,LWuACpYDMNh;7Sd"[`1+$&pXTnKSpsiB/gm
%U>DrQ+F=auq1cdH+d'L$6$20ELFcmo$;<j6>b,lboj#We4:3Oc,8VVe\UG&ifHsAsAmjb/rD3!s4KJO3P3:q8*TMc-_SpIbHg'sO
%qVH6/Xp<ZX*eg%h?K/?)<Q%6,&TiJbYE+)N"E^]LOT*SVYg5a4DStXFG`E,7(tWl;;h2F=>"LFmp%9#`F]I5@E?X9jAP$i8(CD_C
%jOSFdiF7.g\roK\_Hr.$N.k<b\loW]RCSDZRU:k'Bn:5@m]&RjY*.R3RY;jTT94R61W[g3e&^T*n:<0@.D8jIJV9Odeb-<H6EK:Y
%g(i%oR%*\)qT2>2h:7_crP9^h\K0XTJJG"%!U5,lDJg=cr<OdGC.]Z7nmMsI</+DjJ`lhF!MZ5V&QkcNn_@T9ISKK%M`&q*V:L)T
%b:IcCB,,PZD)Ibm4$@)L]cLK6;ea-,BTbQ';Jd[5(*kOiO\f]+m&@I%h5QS\X*YL9?Ru;^W>G-jSGp6lrse"P=%?@'#,g=236-3C
%6$RP`%)rZphZq@M9C>>h;'Y%lrfTFiRDZ6R7EqC]kiA%+AVY3:,F!&!hVR%kVL8AS/LaZPI+Yn=hkpqpS]3qlO.%$9YsLO-m^4]$
%"@O6T@K,qa1*@-R?a,Y)@P>6es%L"M:;@&X)6'B>hp<+^n63K_KH[o7M#[SF;lQj\&u:."/<T6bW,`8ZG5LtNGhNh#&3@Y.FdN/)
%>>*W@+!XV&olp1*LEE_h6cQY"<'&*q;Xa2_cN$Y2JfNhZ\\=G<BWYIdDjmRQJG\BBM:*nd1k"^!8`\`i4q)6[hIKc?#m_$)YS;:*
%Aj)L3+?P=I(g#MBeG1U]?fRl+L5nUL)'LRe/KVKqHKoDHcq3=2@fbgPC8ol2PgGZTXGsIKie[;lm_;@2,Fu9UadI^_X)9nX/$M"$
%>C]2We%aJ^!S<:6o"H=M+ol')J.`YMn>Ll:/1Ps%0(N4g6"O+W]DUh3@#=:!`I`p/@ZJb[a'IXQ%.:mW$6]qd6k1$OaZsm=D_dI!
%P4s2]m'eVKF?F_T^F[4dRooR<PL,NCD$"Nb@G[4/IG/!f0Wo;Djk@%J+-/pCDJ.C8e2jLdql!$Wh#EuC5_(V9.cb@nE>6H'6!oJ/
%E3e'n=arXEnYA-]'u<"E07p5u2<[7E5sV-A>"a$h88_(7j5iLg3_CN^Q;Z_OB8uPa/J5jurl^!U>5`?]7jhqF^%OS/4t=:6)qNJu
%4Qbm'8HG<)F:qQKdW;IC.f0N:W\_-n`q0mWOWZq@Fbm:V5s24'CLP\E:MTZ[V#-I8D''I0<^^4.;/`-WE;At$]RQmD[a[q4iAT9Q
%'9M?\;k]aH?E\7$54V9<Cd4L!:l1I<l_0T4<j=m3Z?<Fj\jA_YLu6!iJ^:P(Kj+d2:HC:CKd@Iq5:eEY=)uDJ4(T_/a+k;r\]Dn`
%C^W"@ojWfUJ"sRN_(dPkfiLF!Mg:Q7RilP4C<K]hHU5dP'Xlf-c`O*^k75PQQSsfp_emX-kRVC,,fA<!ZHIA$7dP7=Bgc1oCGbCK
%\T>EuZ_iWmh"C3#T2tCg@f,'0]enTs]L7/;ersj^nJ!Z`#s7<:,4_AB@ILYLQNhcZ)Z:jm[7(Dl@^D0Mi*+<f1*N6>aIu5!jb!BD
%1jWHklY/rR5>fUgq[,E'NOI.\.\f<@8`_CpHMVjYlXlC'eAT\8)sQ4>"0Z&EG;1e@f#KQQ^XC!sN^2aW&"*r8oYCTh7)nX<NfNuC
%bc:h;O]?1(a*"MEO'J=C]rj0LeI#a_qT,4D--eX1<14$:o^l[ciRd+Z>'D'a7](>>$&e6JS"fbnLPFB)A3ko&2e.K.O?lY]BrNPB
%;D>a;Gep\o=`r32Y^?o08Xt>Sp>sRpE.IV67^ltHX.$Qt\=Bi+RBgt<3C0i39H7Q%HY"!6kqgVZggJ/!91o'O3;^7H90m:1PL#L(
%7!QfIpg_Z[Kgt8k/ECKT&(Ui"WBHU7oEpI,ALFN"o'K#l+'64B1^AJ;Z_JI\q144ugm6OTkbRo)Xur91dFe%kUD#n$.e@)pP`eWH
%e.XG?SK6*EY!gt79L#daeW>94q>;C\;e8;H(?saQ9p<80nQalS]d=p=R^lTNJ<hqA[2PKcf$3Uk%3:BEK<UYO37mSogau-fj%C;5
%f5rI%2BB]VDo$6:OB:MOM,8rXeMV9Mat,K.[;IT*qcWet,VGf5LYEe!2-WX[/9U^bm?29.:[O4/9rZ](p7?uUagh8U^OG9&K8h2o
%nid#cQ?]9=(MRDt\R&CbR[`;^^AUa-gO/))O+4.#fUcH!\%;c9?<;bg(r*&i6`?1F[W3nYLSaI-dMKtT'=Fa9`sS,gX+e)eN2J#Z
%06S':G,/`J/eFcC7A1LY<AN<%GVW76m)'ksO_Gop7uJpBEID)"j\#nNka0geOd[pQn05j8@IqG#jaQJ9\B1)Y\Ls!lko.E0L6?IV
%2A7F<A&3/WE.3=C4A;l7rh*$i$*qsd/>eDjpjAs]h?Y(&AC.nb4ctV[:@5b:.:Y).+r`mKbXsX;VRo*Vn8`Y,Dh^D<Y0ZYC"rCs1
%Vr\6jXjGrO#RePFI1CUUjC.J5_6UUq@/TMs]'bnPGPKHB>H=@4o/3]%\99$PG=gH"rp)n<o6ssid/3eZG2R0.?Nen+VdCFdo\fB1
%D%O2/[#mnP6kVXQTpg*lYC#/\BX?e!QBBHf-3"ocbK`:Pr5(%#PI#@4\l&b01f^0<pCd`e*)TQT]Q@DqdcVEAK*G@40)q7O99saT
%M<4QMN*D8=arN4OOYN2PnDI3/3hdp4#0dms=b2P8jCi.IdBZik1QbPG,LKSNV;_qB2)Pu-hFi6#lM>%nNH3=O1jGJYm[_l#WRBB5
%*-eg*mfomiO+=3H(@%CF0t*Gug=_(=XgPMcVKcaV_7-,eh."'.O-X*33W5EgB6dV>*!3Bf\f\;NQ(!lMX9"kNBrGjpArXfdk^sO3
%YjsLJ7;XI!l_ENZn$kJi]u"JAd'r?3&10)e4b99$&a_$o0R?Q$lOfY46"kDoT0.'?:e_[e0*j$F8bX=^R/,e.^t_t2TS6XZmdiu-
%oB#^t,:CEJ9Gin%N?3t0:==j>TJMaLqSD<qC[HL[r\/,2FXb\O0$1no($s.AO!X:H-P,"q,83j2jam4ES];DR1>"d+U`IZjirWBp
%=8s'.hb4j)q/<Xqkh0<EY'FMf9qLI_[W==6KOnDh<SknT&Su;9qDdK7Y*SptZ--StL1Yas9s_O&A<$HKkZCuOFl<#Ieg-[]K!h%*
%e1Xq)6,"o@CV5-l*joo<]Q@Vg'44=3C)WD-9%nE6/`-ooO5EYX*J@i\Gn7^.3/k&WF#>ibcu(1=8YWR4R!`kWk<PIiqS,5GP(7e_
%[pTD+VH0nT'<*g$br`dCDbcf7(I8?q^gs1\i(u/g-flV34GhuHCaY\#4YiCnDF1M%$^R@+E`uJ%9F95NcBNQJbWO8<H91h$lF,uG
%jQL,7UUV4GCdsrD,nQW'"bE(Wab(aVAnid^F%`(=@W&.jhReJJO[ic2<#k#%CI@@U>k!l%nSVn"f5sUqFl1tg1lCAM#$@Ro\(#-A
%Y)^-2TY0ekKB#c7>f1IGHg/[pg]>A(VjHPV@V'MD`JS6SHTSo&kbUDFptSua'oJ@N7bYLL;=,C2m=s&R!q67$.)h;$m"qjT$f0NG
%6^sHjL4:EW3]+<;%:k7`ND8),7cei_mAN![r,H57.ASS2V@.TH1Z<1.9CQ&EF(gE0P]EC\@:qb'?2'n36%5iTI'A%_*WPi:kgNT@
%qT=^?>MKgX6.8)+"S]d-,ZG>M_&)VMKF9&tJRGfH[c8/q2n%'aCj"MW+'i&F;E.)id))sOEFGSc`d]`;ZCE9FQCe\%bXkt%-V7M%
%;s<DIpZN&-nkQDi5G[CdfR,gcjpl_!lI7\n;gq-<b<_q!S!PTX\ir-*Y(%FGDZus+3=i;_D/hJ1="&:6<Q>N.]O\IZ/R0q1.dn*5
%:p9Jq>6P/6,g4*;[9Mf8iTkjcd://_q?e/(0Bf].BLNP&?HeF1:gM+QDI84kkB@UJ8jD`V`L6Vp"4X-Hj&OpPnV,!h;ShV1<:I9Q
%CD>m.Kk`gckR?$bjjW!G2$n4?mA,<m^XHl<UnY"jTa'WL\Wb89=QZ'2;$sI)_l0l0NPk)<eDQJaW1Qn`Z1-D?NnB43NtK+V&T?En
%B7-SbS.bc7#5ZG.+^l"<FF'e6lYB]KPK!dV.:Gcfkq"RBHt3a>f\B-OXiEE*'HOGpWT?f;Y\9Mh1>h.,(V&K=&#f-fHejL.h9/2S
%+:)EZ[7hoZ_"/F"B\?ufmk;"P@<DO'5i5Y@@XRB7*;3h*3MN:+0G>N*g*`M]hWoe/aenSoNU>9e'dD!CcHSIQ@<?2BB2(GX_XkZ<
%DX.W'>omUO9q@)/Ub&a"*hKERXdLrmML1EU<$A.pir+f6/(&\6R[(=Eb^`pr%Q6"j>m@q0q*F/EGBRk"89++QS-+_*jn/]//>Pp[
%9,2OMD#Bt'4M2t]*p+ankQ"neXe!!%o`C[`-s/"'M\i2+MHF[&m7<=2!psG&D[Yr8hp1EN$*Viu-Z9?ba2jLlS3acQ5`fTrmN&@5
%:[.R*!B6cp0#UC&i,jqgCV3?O&n&"TLl(7,]f>u9bm]'"*P$.6]5B":Vh33"HBP_c^%:;ngut16W_`2-p[fK/S@]4^gHk?D)G1=p
%Ok87qN=]WS^9M5A#hsQ%BSYqo-5p5jUNKZ)5p_T(8%QX_U<>dm!c:OcEV`9/rW'JL_3lgu<c<m3!]DfK6oM@UEG.hNaE0=r)5a1;
%jD]0Xe06R]HB`1Ylpu,b[fWerQsUPmTAO?9Im^8.qKmXRW]T08^Ha(K5o,_`AKl`aWh\kP@fh7sL&4A*k^=o3n=X!_lJ9/`;D)Uc
%2#"!M`i1F3FluU$Y=[JXZ<h^<SWf:K)V9a'9!rieV=O.aFINq[r-Qn;Lg(!?lfIL$<rm90+`C+=ZjMZf[-)D;@N&i2Lk],G"`Ojh
%G<(6Bmm"H1JgQF!DF3!(X(Sa@B8nN&!Y2<7eb0;Y[=,R]6kDGrX[Icd=lF6+UM5El0!'pF:/Oe\MNL[qX=FFI#:g=fE7@8rh_*c7
%,+^dO/mb,93==.$S]Dl/j6he(W-LLfrkQ-i<bMQZ"Pn[C_A!_97AUO^8MbJM!t1TI<4bqs'lqgI0*U.X,(_aB%6AB_E1b6<)4Ib"
%QHfuSCGFG`'i<a_V7Bj($ZK3Aj.D8_r1!W3*OVAuI7T%]l6A`r0Ou@0lV#,t4_o2SB87Qa(3W22/T0Ftlt:KLM]GEVo[tu_k`d&d
%I;S=6-Z,:OgnC$rQi<fZE&pLhE(*Bfn2JZNdMk5#KSS[k[9oIK'/eC1Ks!s6X^,CR:n:P6LN?p4lk!^V7[oWE=&rlQ?6)tn<=[&4
%=Z[Xp*EneJRoaPF1(+WLE;=_%.oDj-IQTP4%`H*-%?6PZA3lO35KT<DBEVs"foCD>=#=:uYcraHi]U,N<g#P&b/XjmopPG!V?GPh
%TEdX!*8.8=p]=4U6`K>LEMn3L%t>GDW$?<2%%<$:&Ilcl`"N>-:p%d[G'+5f+5R^PBI'1%Nti]:7;.ZbGPI,M@\:HoV_d&nfG3fD
%l(+^-N7b-,9Cjk3p;b7?e4><jCA(B8qdTb8_]\V(YK<X%bWK1S)K\e.EJ++2fFCN9[XP/E\.C=G8tZj'rV[iN8J&56+.<^up;rNJ
%RfqF[^_\1AoSoX[i#kR&d1V"]Y<-;.i/'4U_lMC(QFjd2XiBI2Jf/WeY2a0c2q#Z\)%;;ejKU:AO\$m&ESWuO8trir[=d(bBLB1d
%`#V<'BH]KpC#hrpi?Q86E3LVrD,@6E5NYLC-=<l31)NFu)([(F&VP"_Oq$";J?mQ\Qp["a\H8;Q_0Qsn$MSKX)(s#K#&?DSd2^,-
%o7Z-7a%HCkUI1$31n.ELqsia)Q'D%Ul*)%IHTaT"(f-*QS]&2Seb'1r`oEVp_Zg"Ne![G=U3C@9.r"RF"d*K3QTW3U[p?D'_r7Y5
%Oo"!j,hVZWHdL5.j2!TUSMKpb7ai4o9#Esr[=d?]"riM4KYo&DTAeBHE0IPZ.1?$sE;YE/S=q^Yl'UH*)jtP>;[d60r$BD%1C3Yj
%rnuZrkK%DZ:+o(Y0,q_\"b"gmnsFj9jYY5J-]^)S>..uhe5Wi%[`pIa,Kf79:7M>A<[kPLgSJ-Whu"!fo]`^Iem2mZ("a6JZ,G'`
%WkTM.fb/?N2cPhQ!N781"']2?3Jc/B2qV1'5!9>Mdbpuo_jhCdkS;j*+hMPT@O#d;Pa@1FqAm0W*>UHjNMS8Sq:13i]X>r0pNTL=
%5sGh'J^nMo0[l(@ZXR*YRPL=)nFe1#b7t&mCqhM2>^>$$D_oc[_bJ1oE<KD5OW_E770SOX8JnsiA9CsG-_i^JbO56B2@2Z8$@bn'
%8H<*dL4Iboj?Z(ZNI[o%\)q!l!Ug<^Y7H[-WUm0/b'[CMqQ)<A<olW,R.LQ^Y?qjF"43>V^?^_LhdE9VMp6PcQkmWm,X4p5GiL#@
%>FuOG,YB<_E?>#p$?gc=!*3]EdE<oq6e;o[/%Y?lI"VFJgHEU7nS;e^0V(*S!n.Kkh?3r0l4pZ6L#E]obr+*JroO>]!S:&!J*h7k
%*jQ>t0)<5uIA.,H!_6EM"HOc_XUFr`*LoA,'rsXKKeB4I?,H>k8sa_#VpFj[KEt;qc<L#]`hjFB+ZB:a8:Q(Y\YOHdqr,N-5hSj8
%R+S.W6BHsdI7enk+*PrlEjgcDcNJQ)HhmuVe-fb9ja1VB"K)Ffe4Qck>DrERl87&*7Tj:;>U(R+(!s:U2)q^r`D61HS;sA5K$t'-
%o^UO/e*YgZLXtt%,#lc(T%4RgGQE>2XWW=#di+jEmIuQI?f)K"53(*a-_?@bLU>!I1Pg/\\Y(=08^MHp)/k@sirMsGC$!sJP1Y5^
%]KO*RXM@d*MA*f>g9S_rp!JbN2"<8)^dt.!#;n\^Dq[#OQ9FF<]X7(SVs_KA;tk!K1)PXR9-`KR:ZNSBr&/;nl'(TE&YW6e?GXiS
%fnl]DA%/CNWtRjMPR@4W6I^c"q?XcaPHl]-k]tF2L.$HJ:g[.TeB/&e2sDh)Tt]Y8p<3[o66.0neB4gdo0n=9`QKOdLWX[`T!X0i
%K('1F/#05Wa/^C`kGbO5[r$9F_lVN3,Lh$g4MVG<lNWnZ8mE%-&SaaJQfu.g8<?FF2+"DN',87JaR2u[>%]o\9"`WoLeqGd1D*g-
%>-+6`)hrH1lS)q-KK(W)L6Gka4')=PMD0#b6JCJ\&Ym(U%h0f'W"l,3P;]"M]Q9I9QFIJ3NNbgjCX5(3acH\=]1Vr1hWSDuPa*.B
%A0`&P_=/"L2:V^n]INC54D?73"FiVMa@!umD*gr#)eijDKOkJ0cb)M=ch(5;,iK\)gl@OcZo`6,6]`BGW1l`L?&_^^Cc@*+i3TE`
%gt?(+/UTjX;>&"*eHInV"#4a(;Ld5!IX\37r!i>];Wpmjs)iF3]"k0_/o%uI1E_3,G%)&:JFH]E_^5Qb2IlQ0o+'RDGGtkXEH<ir
%70r%8O*mW[WssDRd!&`2)li?*!KVDCY/MGWbq$^8"ET^f6<-3bnTUJ--Ue@`V"7YQGUf&<ZP@=\<-;),M[#Z!qa,(Tp4LN3U(ZN3
%i4?8LAH[7jVi!XS#2h8T5M*O(2j=&hTV6)+FVY*C!*WS%)%Bu$(sXJb0*k+Bq,IS"(3FR'MfQ+X[AC2n&<B5ZKE,t52fd-YSdKHF
%o`^)i0VViSF2_mup9>uLY".ZZl(#,1BdY7[=s&-ro9-T,8pX_I(CG<e=^n&=;HZ6Aipl%<"=oncn=/Hccsl=j)8?1`[%PKKK3L>h
%qB?^7Z\n2QYJoL4F`GtF\BLZc4N@^8$;u.HD:kEth";_b3p2KIZo3Q6JIHWf5]rrA2(tkD5nh5lbc(4lU@!V7TNk$VV.6Rr3PU@$
%1kdb2p8D!\=K?:])(SQ>DS+.C*76Nl?)&.i$0+$jR*=6QI3JL*W+I:THdnSXac"D=Mk05(+I`D-k75%iXs;9&2`K6="O;cuH7p+V
%[*32?ZHqQLX",=*bF>70WD7BfidY1o*#`B=@P3JWE[2@PW9WsHRrij;<3p0nfS1S/ECejEnP'1,9<YoV']9u:g9"56_s;-NX1AZD
%J61q=it]M^eV3>Me"sXqYgJfWr?Nn!!W4KsE_sd]Qfk3_+U?5AM%SUt#0-CpHQVC1a%lOF\Zgq)FOdUQ8=BN<-9EaePKJl'mnS2[
%hV66@IXPVg#CRt]Zf+7MOImdD<di$Md92uLjA+45=YZOEe;gD)8OMu:+XO*#NRpIM3j>B?1sD7#4\DAl/KX=n"f'hqY1.ckM9>Jm
%9;1oV]SaD6`$G;W?KFqd_V8@<c02Kr_922>TcLb\?-,_oK:)s(G]2"J`bdm9_O2!(j%T)&0Y<`8<.h3j9ZoVo"\3spM!S/bVAh>g
%_i()6hr1=LdG?%J]``*7Td";E43WgN]PUk4QP1]3'P4h(G>a.MnNO9fE[J"nc;@'PXQRXc[l="C@-KLJ.RfCK(Zih,%i;"1g@rM2
%F4DQfFPm+I&I#amoQ4+H(q/+V9CdIts%9BlU1hcsY#*HQ]AXME?hJMa(PLa<!K#oT;Sq%t8[mB*\YC_`S/47J>r5J.GIiO]7FpUs
%8+IX<[d$1m<r!VL>;O`OF9E"1kZp@pVu8La1tthWLQ<IR^;C%;P/2.*)2"+LbL-H5r\V]FIV5MUMV_/Z#h\?8g$>7PTF3WUP/fU`
%.)K"rO\</SI4*,J$6Y?Sk[i,<M(Z)hKWOLREsb&+"5tM#)3s?S>L=D727XH>4Wd)DSA3*KS`QJR;P[+R^7H`DnpV"\W(sWL(,t4u
%LWErNSb'b,!-XdRgtqLZJ!*i%XY3p.1O;(ckN-PbRgsLte^mOqkmZNPPG..;ek17R2+L,G#^s0p4ArrbbMi'9(7"M&_fLTu:1Yo_
%i(DF9?`QYms'!Od&ulg##_r@S7P@I)DkXD?Q7q]e$2QMCffe8(qP:g5G'GB;:l@Vr6SDq5IHJ$<4HD_A4/BWco?Ofm3'1is+@QQe
%rFngCgjHi48,"gkb"IdRT'YqmTQ`9R\s.)IIWQnMk]&rM.[NU[NeV:-aNZ7f[3;;1.#h+Kl"D`k(7Q0l]Oo>$LsirrSpHaaDu<0[
%=K/+;k]eSM2Zn.X^\C5D:tPpPmoY\/V5=X3kVOaT"ViUl"iK#OrceKj4!f*,PSu.N4LSECO2nnFm@]YMiMH'#[.<365LXKr<.rdT
%G/?n3Y'qE$.O?&EXt,gf.Ed.BV1dR^*(dqAR3Wo?/pG@$''bo<R3ImAVVqZ@1n4q1'$,m7_$cqDQU+7`^CZh+NJpu&`FeN*]oaUL
%8,/`!?]lJUqGO%.EF)LYGmhVk;MXp)^^5,>=`T^K+,8N)h<ld7ZKhbrQ7#q9WqH[Z>dbHI6FAr'FA5CN'VUC!`up$"'$a$JZh6Z)
%Qer1Bi4T;fXpIG&dHp<)GYfi!l:/qb;'pJb>\nE^Nu`WZQ;2\X8i-VA=B^)I>iLtQ`mOH$R#,b$^u,DmYT-`*j"$k=F/"9Zh7B`,
%MP#!=Y:;u[)]7#U]b%bNra5BUAlk097M^?&H&$j#7])tT8UFqUG[oYA%,@s^$NilKb.nkcp-'`HaO#.Vbf3sppSLe83\s!s;W==i
%TRsdq51*p2b-+'aOQU8!hiaP']TcKK.Jk34h5'sBO6%^8IBcQcf([jg:9fa$geq&:5OD!3pgIW?&g1&2@PbI/PH;iQ8k;EpK7gu7
%*XTHD-9-55/`pTHPWRE?.DEE]Dc=YeBo.o<Y/u*&,XotKMZ1mSkYsVRgh9CcAKb<W)5:-Xc_L,(rphh#=Y\AD7.lR`&:.R1"<nXV
%Uhi6`ro)FkP'7P88!*OAR`H@Mc4TIpIbp=U`JN[6/7TiV3l44G8mhq"7sT,f$DESK4f>kkKW!C;bF%s2/B!]C6eZ>`L:q>@Xb+_l
%I"PHoAmahGR,iNNF17$mc$XnBB0/=D0B939DQf/kQ&E"N<4J`'0;#.+=0F3eapK,143M7#771CU[&4R<,,:Jp=h6P+QGjfV8,d[7
%[%sAd8=f_(P-`511F+4'.HVAh)[lIfL&\r"q6WsV",dm?ZR>8@ff@2kM)jV:179D;*i/:N`c)G@e;Y[]6^UZSn/Qa-X+#K'9j1fn
%e<rRlESQVF!2NWn;urU=]\H9h7un@4GUU>@q(1LlI!9+cn&Sb-l`^?Kl`t`QA`F!bT=I';W0e7rr;la$$UC%b#0+r6n(8>7=@/Q%
%*mmNs`r*\IG0hM;+hl/0nUo!enR)iE"?7U6C<uWVOs,t,qHgGqLO2*Y.,>-eX)TAlk')?i?gV/a4)b`Ymf'i4]H0IaI'i%NqbQib
%PMnkZ/8+?)_R9CPb%Z7_`7c;_q%'4Oe_l#jA4/2jYIH5OccU3[PMmlSL:A[?M#/ZN,9jh]!o)Ar!94GoW3:6[Uuf*_IFb"BB]DEK
%^H\eR%h`;[?#]_>T\k`QpO1u7iH+n?#Y+YM9SFNY/g1CH+$8J?q*Mp+4<3&i2nGJdTEglF[[>57=:)7"0BCCXNmA]gK?s0#J)bbO
%RiY,'5QtYHlVXVUZX7g,eu-U'hldlO>Fu3?@b-J?^'Pk(_uKK_$0;D:HYC_)'[3cO2U2n)p4e1$V-lC@]^EVo+FZ0@!-4V!"'G&:
%b)IJAJ?Nl%p3m;l%j]=6'@Bd+lr.5)E9ATWp*o^h7%^Mg_1*sVr"EJ^-Oqa;n2Q%F?e1SH0#d2(q116*m`'X?LJZ\DEn^StW%n>p
%'SsL-qKX'Ijet9di'@4n]TJjudC^E&&'Ye-\ifko:"Ng<(qOk$o_CH0D6X7,1Ib\q7G@KeGj[;Y7F3P>g<;FeSNk;P0PCC,;>Vd-
%$N0aDp9XJ\g/?dCd-k.Codfqk6UHH5@!HARUr[lLi6?1-4PQ4!^Y0Y*s*VFCcgc4.8\qJ\^9M0qN>\Fij1ScJ>@-s3-/`iXlJDT&
%dJEVHn_5+6r>c2W^B')UMJ)mJp$CY!iTD97':;uT)t"q4.s\uO:s:.!GZ<n]%kprb6/Ou/l'*"BX+G[0=NosdqO1ZCBJO8)D''V4
%_KU9WVp^\X2P!Wr$]:=(&O2=`_p\WqjKZtd-u5-J6C1?7cl?'QT*P4aa3sYjT2#u:42qgaL"o"u8O:%%6<i(\)Z9f/@Y/e9Zih1l
%[!t:2Z/SPM?@?2[]Y889^,NJ`%SU,fa'>cFLAX`'Z=9)<Jptr<fHgdfAN)Q5>k[[,G[1@:KS-n,QntInZs*CgBKqjTO+G:i5I*,.
%lsQJ"-Puo-o0?t70P#).(m=f&g^YRIQqNq$$_mjZ]=HmGR0bd#S]FWt(U#iq.p'"Ui:!:[N,#>a'[WbDE\_Ic9&gD]'f;WSW?Cp3
%^l[UXco8"X_b$#</1*m2#'%R.4-<ln,O0dgFMl.'l9%7jB^BjArYi:"6.b*[0&$TjL4o8D&)E@,`1Pq37F*2;%SR!&%a]8Hm9\Q/
%^c#QaM1/CZcA$cBf+m*_9Q&u\pu@4]KZt'35=.,Zdm@F3f'&RT0j23l%`H[7I`5"fqF37dVno4%5C!#DLX#;^btpf?2>QnC%M2u*
%,&[\\-??o:+aX,+i-NeC"meR.8A'moBDi80DG5b&-3&r4h9LE<4#54N/<O0t$CV=o-cH.I2IQ)hZphfi\[=4)C;Rc0bi5SIIrkQ4
%+9W6k!`/IW*UE3P:O+(jl3-aYXXBf@ReKO5ST'9+r9I_:E+KF@?"%me+P-MY_Wgh@`,t_)#Xdcf:d9g(adAeBRoRkY1@SUU5l=d_
%d5Uu=48\[u4h8jbMM`bqLp-.W*@J"F![Ta*MB^kZ+7e[*FuT4L]=uBGUDrm81/k'T^WF2W2$@p7g2>Au.n?n_U,0aDf3`N%#WlXh
%"P`O&J&`L<lO^ml5!sWrHmd.!!cBCU/mp?"WLo8[=-7ntLpgIh#*/+RHpe'GSe9>J.:J0up[MZ:(]FmJlhBP.jBESED$)51f1+J!
%qMd!`/B@Yhk6/P=M'N#R1WPQWT%XS*I3T<#(B03aQ(UoBoSqM1c\%D;h_>&LO4ga_5pV`j':eL6HdM,@E>5)S2TJ)FU]Xj)rp^Jo
%p1Ap8!!FPCOPqc>,8hO=%^)JSBA/C[m-`2fpfR(,L>d()8,:l?Ifa]O+BO]SWK.P@q?*s'`m=duTWR1afoN`'jb37)gg^l>@.KN'
%!]sCALsaW4c9EHQ6>=sbSI]m*:_9F>iO/kp+F>&X)o=OuX"jK9clKN"3C\Aqf]T<D:a8p<0p05"R,$SlK`=7!&5q+es3:Q75C])9
%J,M&#o!LLi"(QTGlcMD<CkDk?"14H1JK?UeE(%`\#Q7V:5#ddV=TK1KTnA+]^[/tLe:!"1k7\(l/pls[c[ISimb]Vojr0`4Ym>I&
%>6t"Bp6u$If7-Id?XGn\qWfnljmBtcC&7^B!7(1XJ*D&n5k9<)VZ6Y1gR\@3ccs4ZZMOUM>&_IIk@1mIqhX9*Hc$fh1'[U+rZ0qb
%r=*_#O(4gr?9.3S8$G2d5YL\\p%<rr+Z<(W]!?sed8ABC:!pJ]f\%e"9Z4-nIN^9Q*W/AWGb3a-hugK.4?SS\k4-2j2iZWj6#O/;
%W,*?CEVMD<(T<UR+.-8$%[,t/*Cm8g/ThFR=;Ua@3=('ZAZ<M39KG:c_?rgX?te/N361M-T-/4qND0.K&*9G5)kXT)ij6"]&LPC^
%Bf'LaIW[Wi2i/e5E0Ze\Z#AFL@HtP/h!K#A4Gppf4N2r_K?%2F;r_:W7uaFuFi(#3"B;E.[Gs?8_FW5G//34/FN$[Ma)YGjEkrCK
%D&;1?604XJZ8fUCW6=))bfTbk*0qDS>qo0oFU$-do*p]E@85%)c[p/6GR=tZadFpP>NX?@s1(*LjkZ:\Dg\S[)B76*q=4:cq'*OZ
%/EZ>.Rp6,FZVl[=V=0O?=Lk=*"sHR@]=p#c>b0^Ge?,=jn&$(3AiO!I<\F!XOPl54_2rG.bR:jQ?Z7`@>P3\fCUs>RG7<g-Mqk*4
%\d$H>gm9D#kAIcD&LaAE0ZX^7PT&B4s#u!Mb9(_W\%P)T7-o+g.kak@$qKW'JF.:2MekR:qRo6Mpo6"Y,?ZCXn(Bsjg)puJ4_0T<
%*!BC5r'"GY/XSS^VgLsd`;&F^=RsKNET?,<Z[B67jjT;32-mG&rDOs(h*=cbo*&Q8c[DRQb?AX_D6tIrACQqeW&sPbBUN+[GY,hC
%qULoY)f78enur!MB%/e#Y-"I=@tAGlm.g^ODjhBaUJX<36Y(_fbI1dI6];d@B=:;XS88;ba3FVb[Xccb+2b-Vn0lTenS%BI^o;m6
%5juS-Q/i5I9U@EHq@hLabEeOkgqGf?3>T0h4sg-;4(]G@`Lom]HKeWDgr-+-epKUoZ;8_<b^t[\cZdL!]%Keq7)8$P-QAsJPhaLf
%o)'W-(OXEdX-rBh2fFUMCDnN48GMjP$[H&>f8/`BKMZ_=%8n8.C,<76)&->?_ol9S!P!<.'*ccbc!_)A4c!$j^XW6aBh.S,;q[;;
%_]@iRS]kl`nQbspn>Wo\bspo546ScYm>0D=2q@p6RHsT5*Z1:"g0kQb;>$^0B]ho3KDZZ/K`<JQkOGW,GKNf4bTOY"qX=IO*ujJe
%)sSLal5pu1*ujJe)sSLal5pu1*ujLLU&O^U6.P2QooJY8O7Dk'naqn4oT/P7O7Dk'naqn4oT/P76NG8]:]9V>pa/Ygk>-V7Gq6>L
%JrVMEB>Z]*j2_#V%(1Le'MFbVe'OK@0R^$NN9='8l!m\FbMP0N+6U"Ko/(lcolR8jID!c#onr!DQ+Oc=eb68B7fRLCq_Y\</)/,>
%&$2)^Y^NV.oieQO5#)kK`UpuCeFGoe<Z+(rP.$)^55>r4n6oCY[![fgbSMR"T5OUg`cIS4etOCt.SZNg`0F8h5+O-.@enYE>6Qu<
%T:#DZHgnLJ4bRM?j<N+8i=Dp0PJ]tU-\n3=:VN6a4SehfoAg=Vd?F1#7LuE/N#mA/Z?`s1eE"HDV8^>j?PX0=aC4UX-'cHeeQ*Fr
%(Zf)rE:&t5_rY/N%sPiuno1Xoai!LF-4b=V@IdfEQGnL4Rg'CHpgNYW%Z&(+=n,j&4C@*F/N!Ae;BDp(luEO].1c12JsDRUqiNuH
%fAMto)[R!JGqe\>f!(r4gb4'VVEEX09RETu=H/f.A5.?jYt9++]u?E1&CLFU2^pH\"4,;S.5:c(^FrMng&gU1n0Tg)!jpSqBLdnT
%bPoi=437jEfUU+/b9r7j`eHpRDJ(5[hNY"Ob':Z"lF=mC3YZ,27bdY#&_);[q2^;@rdm:XJWRh<A&07HK=8i*Zr)>D-U?96@1K&-
%_)(:KfiT%2A=*:"V<VN*[,[+g>uYHYUq-.G>gro8&[NChc`falftD?!#=XH"@:F?*227;Wi\EGigm&@dp*O@1K<>u9OncLtmRm4J
%3XEWn:SARn89YPd4RjS88'b[cO;h`PP`DEV^)M9CO8HeBF#*Z<HJIsopi.*q#<V,(5dme9d,f[g"1jCCDL_KE2d7iJAZf=c!.%YD
%[/Rku[*Am3s'Dhqnkoi'RJG09oM+!fmn2:Cn1bjpV=$a#`JpQboJ.icfDiWYGa#eX^uuB`MZCl7k^_CEU.hnb:I1,#p3MJGPkgP*
%am"Q6mr&g..Rp_ANAPALng#m@W4t$JA.$n*\)G1LU+T8e7/*ES>cmc@>iCk$p!];p<K)).-K3F6Hua:S/f?Y"HaTO<$Y*BHOi-$l
%I_CYs6p\<Y*JpW$d0b<j=<KrR;NOXSramoe,WN[6o,E)c%kuWS'"6o3MCMN?huPnNB>6VA;Oo3Qjmi%Uf,MPYTH,`)?/DXW3=PLJ
%B7?d8pDMs'BV5UpJL%"$JN*EFD'[`FS*LJR25n-3OnZ$B`4bWL0jIgJS,gqtSb]95Jf?ju1I4_,b_V(=OP&]O2nD:tYW&-Q]:'G%
%1k4LnK0.g^fPq-tMub*(`gu0(^)qc5O6X/rJfXU*%N5dn)f0`=m'LT3@US^"'#`6'Y/>!sH*M<Ef6(^K-__=`1<,UW(ZJ'DOZ2\Q
%'<PaPR)bdl=REWAq0QAf`<BB</f8M[H!]O_EeNtP+Nq,]?-eLdc<WA<,=K"f8mTGTr,;MCBS)a(P*NVCO"'8uYBVjhpmVm;+2/hC
%^e,B&X1XD5&`XmS($6]Q<&[/LlfT[TWW-dBOFaP]&V!,0\&%_Ukb-S70pU#6>JG^Mgld-O"Qa:lmENHr<Bm4gRfKqAHk4IaDGfY=
%@BI#Y)6&&G7KVZQ)&W<8*XI?@k(ILb'5V@r"NB-r2-!@shf,PIZLIOXXW1WUqhd:oCJLOPp%X`sJVr5S23f\JfPb'!0&@]<Q\k#2
%)B9QmT1%f/jLoVCOIAVSE:Z"*YqO*E9e1LRg5lN7<nG=L#mHJ`UbF][oTDB$].dA+etGd.)0/@eg3)A*>U53,`fR7rWsU,uRYa[u
%9nUQnjJNm%j<ZiP-O)?Ej(BD)\UhOYR&N=YEa$0Z8U6k_.&mE&88a%ec&H@N+L_Vgg,q.>AAZ)X<9=t)>D2[+B!ta*<A9K1&KA8V
%fd[&0\WJNL@>gN%Kctr%+2BI.IXo$.L8e5?A$J+/Cusg(r`M&3/<qJ;0\:V$Qf6%.DtTE9(6ZB#gdrA,]m>+"Q)AshlFBM`KoEI:
%@iaXcYLp&_GN7prO!U/KRL[G+A'HO&<:+VUmH4H@qO9+b((AW.7*!f2ZT7]g+IkY:ZX4f7R5AE4@ZN&)UJnW#q7q<HCdRg"Z^;p8
%Z-4J<CXQ\V)(>=`lK:?Y[-N2&Fr-kL)a_)@5B.p@2K7eHB5I'eGget[GSc@3]P?j2Hqs%CO'`8b6jMg0EW@r:oY--&g3hHAIQ0><
%-1$Vt9*8C8UIIUI-,06^B$Z<>[_`0MNmHgUR5M%V_7<<8h(@8EiM2GaNYooQ1P8l$2@T)<XbJlO^G>.+n%cm]4+\fO:C<4IY,'Ap
%#BX51XP`,E]J=nD7pX1%oe:bhOSX:kP!O"[?N(8Sp[dkG[J[q><@pRr?J"6:]3P,9VCIKbmX<(8\0"o4IdAN<b^8H!gP`gqfUl%u
%qU=;d.Vh*NGLgSS2U)F&o*LjUA-gJGdIj\)#N5rA4H/)&TIkoIMeh)XhpMA13#?q4<ie&/%C@I:/h1T.hWT=QTW9a+@=3#s*1m!%
%5#_O8BFPC=cW#F!q,YBnI<[#sG<3eKKHUoiDgk%Oa7[IC*5Mf%)`OSO;/GdP^#\nOV]N1EC0(P<#)uM;js7hPQHKg?Q<l_R\hb$o
%J:ioqU-GN-ptu@&^B0HkE;NkI\VFB+rTZ>4Y`=/Xh$F0+qQKg[(Q>gE/Q7!:'htVT6i+8OS_,@<S+55!*'WUG#uYP@_;(t.\*,:r
%O=RM.LlK;9$*P1*\FN7`Cp'&gBO`/cr"`LJK=-&2U1&6KTdiLI&\E8V$RkSC9=LUWa7VB&^qpmPK[[dS5=?IMcQ5bOnUk^bku%LL
%,OXh4@2V"AfQppQ,nMXBM%oW!+^t(l?AI(>6if#GgR!k>#"tG<o%Pa"h(MW*!l>#0+f@A7E4]%WiB,lZrRshRk?pp,fL'Ae)c1=l
%"c@NY_p0g&kN._l)%AFL(N[ZRa)CWl:LEnUjhDLX;rSWIRlXuq>R\7<anWo7o5AM9ADBUqe3FfkhHL1]i"1.Q!49;oF/M0GCW*Fd
%5en-%.h-e!K;E*#YVGl2$!]XR/%5<_ASqWl:3#'Wdq/GH:-)"HK@DW_?D"MW#N?mbZ&(k1nL:WN>ZR;AYUfL5m>3+7Y`EK@jtj'-
%JW*+.Hp2V.-U2j-^;]>E/l1B1^'<>`(TFfp2hJ6@V<"&JbXUB*YlGY>"@`S!D*H=B:%rnC,.VA%%#91/S>+&=+5"Md8<R>2IUmjL
%&QVb>jqj'")jdWB)9)UKp1A*_N8fu/#j-[Ib"*c.@-ePbl!-:dArh4P&S(K&h.B'Eib6\Q[MnN.7S1GPi1Wenh$:f)TI#0k:[TYU
%]nR8kmkF=('%.Ks7B0Y;0]2n]PWc`EDspn87fgdpA_/P=Hb%4i'%40[o?&ANe\h&bB*gGk6Zt7umFY-/WS3XW8&40:nO#;QSgIih
%p)6YWa=_qb?jp%PEg0eA65XX^e@t.@^L_i5ku`f,,qf$e%B1<H`K*[QWI#!o4KrEN_(@2.AHVBQ<^H#;/MW'j'^V$tf+^qc)E&3f
%`^R'OdaV9DGjR/,5]uT\^likZ.Jo:9'.-<.,$&F&Smt?n55C.4a!jgjqU[R97p[k8K#<;382kZ]Z@4pPR4Df'QVuq&K'nFFi'SpR
%Ar?-Fn:_I(7Bk#Kc[%[7N:I>nlRC((P6hiK=jZ3hc?@NBG9O+/9%O>eG_1QJ$R4R%q/BiFHkT.5i<r-?\A^mB39;/>%>.Ye.1U">
%H>JbCST\TY&[p(/qu_noUJ<"MD2Qn?0ZAfeDY<O$SeMd4QqrR)DSm'`fN>KB??<%#aM'V8n-\m[S8RaYFcmjY6u.-"$JP;2U0-5$
%%rXopH??<4s/Ns?Ndm;6[B_NW4)>V61;:]L0>(u@c<BK<QqlF2]2;6G")5F1$MabP#gF1%N"S3*o!Mp4XlHcAn!b3RbQ5?G_9tL8
%hDGAoRtm6"JPVu_Q:'JtqbSBq^f"U[`jubWLq-_e9*54(Z6,mSg%5\n"dq_!6%S=Ri#oe],>eZ$689(C5)X3l]cHPWL#Mj7[0hK3
%VmEnN^r!/6e0#QQ!!3^I7J(g.6,:S1EL+tgF[AH=H<3h"NZOk86jJf\J4r+_ip9pA$G(+:,=$$l,5eI5i,9,]r>7d\!_c-q@,0CT
%%,JM&fr*;A1TJs*bFF-'$I(pZ7q*o#W;h3u:$Ofu17VU=mVI.'dLpKs0XuaJh2hn<n/0&]6kJS''tR<Y^Clbt>;>ldBEVF(Rb't"
%=6.niUJUQuEf$GBX6-+#U=o^R<j4NsbT%B`0*d`M`f9C\%d)+[Qqcat*X=kN3VZHn4JQL5Kuk`OP4"q7Re-<CcYi=XPfH\lGnd4X
%SUr[+m`nCg3)G/E/aTm.meG#>Q;RPS3u,/T6hVAZ<)nHR=_^C.eD1tuS0"E]RG,F;HfdD.$/K`Qq(5Koi'Ym6jHVp&j/UUbHSB1c
%B@7"\mP11]2<o]c=7b]HAPj:(P_WKUL[#qGBp+dYpGmNEj,"]aB9*-8Y"#`VnpT.kI]tcgc$\Wh@')$J]TL_u#.iI/'FqPen[nl5
%]ND^Fb[?W'a0(r6H84LRAEO!A9&I]KnjDt)oVOK1W!I9Eh`gg+NFqu]k4IKdnAq;n0cWb+7[8Orc-:NU&_18e`OAC3V=rq4RIMIk
%5r[+Fea#-_k&Eg\`KrGB'U&OljG5?Al07pIQtH4Ys2Isc+,f-AEE+VO>kuSC5]ggD/?C2fMX:81JNP98GoCWAk$@'ihN1o):c`MR
%_HTN*LOpN0M[6-4UGpme3g^;B8c/dM4O)>E"Y8dK3qYdZ5<js^EIK)inajD+gAPIOZ1CE&Li(,g%kHQ`\np:4Bi4bm;8#=N#ahm(
%)pW*!T0\%?AQ$&:.lM4WOX=%Tc29!#q24<Zl,)W8)#0J-'Fn"1,%C&ZWt$k&FG\3tH"o:<oaJXl:S$A+gn]4bqA6TY4D$,2"FN$i
%a[ODOn6I@#,"d+@1+j9-0$Mjbq;f8(7k6B&@D"6h@ZV]P=W\f!][;/+bnUcS]Rl::S(/[RL]DGinuO?`d/DN0AuUmDb;5Y@qdK)1
%\9G6-F5jn$=g(b.HICJK3(KDgSQkU09N(N[,ItW9$E`^b8FOZ?/]:h1r(cNi(k68U_n]Q?AEcR0S9Q2(jVE11+<2Bcl<ZR\fVbj_
%&EEFER_L?HM)ukD'et/O0;%sBR`\>_SPSgK!3sEeUo[t6A;slKD(IW7^ACCC,HY<m,F5[S^(a7NQE=/J9l(re6,nMk^rG2up-Te,
%C:@H97j@fq0M!LL`]CGHA_+&__,hWZ%=Irp4E<>6cYK_q13\+liEf4^o,K@XZ7q[R^U70MC$b^j2Td:"p00&r4P[V'AFOgkX=Q"O
%I)Jq'e*?kmNiOAZD2"pkq:]-B!L'>h>Vtt,(tif0NiZ*^C+p,Bj"$+hW4s5LCDe^c&qkGi;,\D3mAed:.D@3E?a3$X?'mCA2sk0>
%'AjN&.]1UtdoT&.)k0KIeKF0MabR/PA+(XAi!@$=kMsm1+9d_*MgLeoJXB$C_Q"lU!YGr^A0G+r!JYdJ[f(n?UEu/)f"_=D+Z5(,
%Te<C(klIY9C":cf:*S'_*>Xn@*[YUJrcp,IZ'9*eb=TM'h`R]Te)J4tU]obGX,:G>X-FioeTp8G`HH7Jb9J[oGt;]MpUCWt3qDDR
%iR&1ShGr]WP953e\`nIWP!-WT"3VG7/pR73gh_0H&JV&D6Y$s]NK0AbmJ=gWj2kG5O,]+7[#,CImZ-<UjK:R2QQnD1]BKp9ltp+X
%UFp&NM]qW()S][\d$iLOc#?a!/[iCpjf\5r14Uir@jR.9-O1u?q-FD?H?]a\?IPWVVXm=-\C%A&4N#an!`+0QV5&G<SRRQCa1e[+
%oYk]FF'(&]/-5k<$[o&Ahi]m38o.mNqX=@`8.gu=E9m1a=9aL6H9J2#q9<S@2$.piq:PTCDu)f0B[/O]"KFHm=,NW)LH6T<SV)Km
%Fro7PjA%`/F[m"p5kj%#e'h)!R9@U:M;Y7^)*gamUNKI<M#V4jNdF]+B=^t5XkM[Y)7hLbbjQOkNgEWR+MM!!n_Y'6BT;7?G6M7*
%9mIkZ^[9<lT;bI\e8nW8K?8a0T9$C&6ch,'J-+kpd+$C"T:@+aVCh"WV[DKVBY.q@X$X@2HL:9J'T<T]h&GlI<cFHmYV-<&j!PVE
%jZ&uK.&_/,l#(@M.Zg!jAHeu(B564Dn(RHDl>!=/qN*RW=#ug^m9Jnel1:M@dnsnI=HoQKdLK-^Pl],*65R<Ja`+^\c"*Jc9B!BD
%auq#b^"m/A$5fe)THbMsU!;m/1FMK=h6^D4Vr;ttRD`-9Y,1#*!1]s%WCdX>]Tp$u)J:`e13_Nc5!;ur2fu#tIXUu"SM>Egkl#Gr
%-;FCDKZ08d[mQXr$2B@U]>6q#J^)ch1/s)L4"L?*S;tCO+W&#-YQ4oAWN["m[eHKs^gkbBrpkm?4I+-/8cJZ["0'>o9mo57,p<*:
%\7nuncNS.?/Z^Yg"Eelnmk5L2>ttu:8uYg>GTP\CCDL0V]W>jeIF<$D6@>qbTb9mg697c.Us?k35Q+[PZ!YR^;k]jl8d/]GH.L0B
%F'^6)3Hj4H.9<J>I\Gb*F*!;9,i7YcI'HFE8F7NM4Ja*WQ6irHJZ7aedWd]rI(>43)mtOc5LF79+8QOem\;C`,KXS7X-Q5pgtJdn
%pH3P@;A=N<g,p$KI!Y/0->G\$p$`@5B9p'8j/!M!WV3I5P41iH_r%J^YM7r<4Z0#O<Kj"Cl&+l-1@6bS%(Y!19M"(o,$'.7NY<X?
%`fQO`;G>VVRG'Y5+):=_+ol68\SiIWnW\T+`.sKF7?%'N=o9a3df%$t[AW!]JC(/h#uAX--,&ll<De8OXD*j9clQeBX-QM"M`,j\
%e?M3/J7\J<dQgUG)Hlbj+DkIBMMWsB9*gnT9'p2(N!-g'6to1dd0lA;AKVHPQZ;sUlXh^/'%K(XQ&AS,_i'L2m`I(7O;/aR>o92r
%`C:!h;o**r;5V9b"Tr3Z/_.jOn[a$_'*?Af^2gAX<UQ/:j3`/glF'^U@pr+bPRrd#I`JH6bZYFUIQ$ds9`.9Z;NiuI=OX$Hm],MO
%n:'!0TXTkN"QIKm4s`toQ(!*[XK:$Y$Wn$O="1E^pa@VXRcU-kn#]X'W<^_2$N3dH8?fD7ZUg*#Yuf'DU$"D$['<NVl):Qn7kZ<*
%:Q1@ls3@ZSgOCAlQ<QT%CV'+_UR$C83"C@mjZedi6?_qp>=JnbW?&,a>TESDj'`r,$L0rFb*pCCG`K%:ffcb1N/GjH%Kjha(It)B
%O)2,-m\qa]1Jd`-A\g3;Ns_'uX7Ms(]/l!j^Hf$5gmn+o2Q%[aQq7$NAV:f>^EH'9m23HkT-e-??+KH=\m1Yq-4Pln&=7n7GgZEu
%jO,ME5?Yg\-64/WRIr)s"NjDnOm/%P@a*-8(7&c[S>-FQ8)]%_*I"X\DB3O)29oMs9E#);"XA1fPDCQT1A@n-quMNW,R@/9'TnM)
%LcGFZS:d;$D,PDQe!8jSDjI&/[Wc`rNTg1?B)&kd<O#T+e:nkY;G1I<SbtgU%0`,AT;h5M8mQ,P0p(ZQJ*=,.Ds1BLR;mH0Nqbtf
%H_'9WXN*)H<dUu7+KK14%Zj=-1)15.i5X.%?8Yf_4C=pVC1+*$!55]!-)Xpfk4M@&j&nX=@HB+an#8]l`R"e8V#U]'3DKD5k5CSo
%V<KUu')O*V!+bM<L*iF*&Q*Z2k[,'%KlF7kh%ScA1k^&VA#&\7r>`c0L*us=CEj4PbIQG*4Z>9@'3:V/qm9(_T[DY&esU:E*cb;V
%pe,AE`B8G%I?4TpoS57J]<.M`\a\a3eBUZ_mA6>REgpN8H485=5*BL39R.>tW,0#2;hUR\a(M5?1h"RB@!-K&0!UtKc4t^*n?ufI
%C0[ZD[cLV8dZK[G!X$!Hb5m!SJ#&fH0:22A_sO:uOs-:'glr`;9+$q1_/B7n3dr>T8Y>S@hf=LL)"qosjtZ;(C*f#Q?VY&GaHlFg
%cL$i-n75Da4<3M"#F:u9CP:S.CFPFTFi1`*-15r-ZW:P1CR5'c[cj*:+A3[26s^onY+"mLZW04hX'u8$@`HBsdlub3E9SZ#g0u!S
%el.Q?([m?0!\*^k$Bd0=W`mQ.f)WF5RC_Lcl9]k^Abr<`r%14CT*4?iA6Xl]#S3Y;8D@64i81fCG%N"om$&CcXqfshjF7J$qZ@]G
%.@iDs4s[>BkCO?[`'0)pYIoIr$;qrifSl5,cuXt6E2MWAj?`F6#Enn&T]<nKR>bXl*<&47qu1+/E&&9`=Rq@DQcMrDC\pJ\9S(AB
%fD6qB_\N"=6AB0,hhX82#hT>)aUl5d!TP>U4V(7(+[bT,26^=$M%]g6=:E'"fE\mM0HkU?H>44N;1jM`&LDFL[ckm?r2=:4lIH']
%.43lTE$6-e!PW[73[N6*IVUTVPrU#$F-!>hd`W]s!b/U)3-#(tjL--S5Lh&ia3lV%7)+nD=6X"49$h$74MV5QoNmA\+P#^],K5F_
%J3%9>g"LD\+I;pphp!BEBa,9Nn0&hq>S0Eaa?u*V&g8C?^jAqXJ1[IYRA:*#*K9bcT&4ZM<Yrr!$E.8A4]up3gH+S(dQ5Sq'cWm"
%$Wi&&2!RIg$r5iZ-\G1i:kS:"aX$,'-`M@u3Z'GXMF\i.W)KkS^mW[p)e*HC*KA-Jqc=.<2c_I_*@:scM)#PFg5Nl4&N[i`=`?*M
%<o1_mOg/)o:W;p?BhS/I,Tc\R$mm-l+VSjpA45cXLWt3mP@GDR$B^tV'Er!LreL"oZ6FH]3g(5_5NPR?8EEF_71V2Or(UA5%cV*^
%7I3gp=a?00--;(t8`Gi%LSeWl(%ajH+G_8/_/UST@aCFE:a>\C_J(<eW>(U9Z*R7T\InG7+[`E'k8ML&kQ--+CrI8,bhnu.N(NX!
%jjIO#nJO3W<KNeNl?^"Hf&&$&Wcf;_=KTm8@.DUrHWN_3lj*7eP9)G+Sm3U^Sc^7E9\bY1n1$QBN2j+Gqp<qca'i2X?K>S\6BRXn
%=/tY.fq2@f;ktpCb#mj=^VEf-MS84q"8cX`CF;R#jI+sQqDk;QH1:3,5BpM&P<R,cJ&GC/Uu(H<P*$9FSdU_*56`mA;,N/QP=]@o
%n'IgZZ-(DqSlT7C_PkCpaG3'>M&_@"'W9lHU_llQFdIV$dMtg.c`@49egF+":%p1rqnbhkI).XXo"_DoJWM.GD!$RhD&<<&0f?Mb
%+AN)DjIEA:JK,KWm4XGY4VCP#>>dT[>82hVm%dTC:=%hi.3A<TI*7lP_2IY`TS)1e']!I/R2g@gUVnZXDQM.D8eb=OWb3o7SN[F,
%''h?;.FFa/)mc'M:W\kenTQs$(]+DJR5!I&/3?%C[pMApF%7pDd/sa05G)?(l$8#C,!20cL`mI`]hT&;T4IGh/B]s[\WD,*c5oE3
%4$\6;F)gq!L\5pFkm6<AAa.$j3%m?7P:*7(A)j!?O9T3#L!WfJq\ipoZG;[Q/u@nBdP_QHoqrWG<U+3*0oo"&m*d;_=?*uP/XJ;u
%9.2nRX;t@c"7&N1W!Wgj':-T9A6*m/`WE\KAV9-U4pf92)L&)lW[s!@@gS?$=]N=!Q<s%]^88:hjS`[u35l4uim5BY$%'YL^<12;
%5gEV86*='"7\oQ'mtuhM,H1lXMabYb\"3<[VsScJEIQQP)TT*]Z7%`P$MtJZkYc0>UC2h_-dGM\ShiWI-aXD?6ulV^nf5N@PX[C)
%fdt,+0INbT$KbF^""^8:B#)^iLk[J<[+!6$]YR9?+SVas93p1l,d;",T1>@H<I'<:^fF2?hhF3$Y)EMm&uN14LD&6M:]S9->so'g
%j_hCoZEE!(2SJS#e2fi2Il5+jj"BJf$sK!I/&;DnEsZGRF'iLM%j!bNaPth4Y)^9<?C.R/ShEbUN;REld:Hk$ZFk?PKs\Nf1:jgu
%m0f'f1G9-\S=/+B.7I)3WX/@B!FFBuAXV@[aS4G0SJ?1i'?I,EJII!>==<^^]9$=L<(J@(#=r6ZkY0tt9CYp;7?!Rr7^/&AS*Ng/
%3W#u4/ak?F6rTRg^d`#Q8-2[T>m6WqSOW]*BcAEZ#]oelLhTd5]N7PMMNV>JUrU`1_5o1dn757>jFSYP8:dR*W^j1k9hHVTMX_%@
%:>MjTU0tgX%'7UnYEolj8\MFhK_Z;Yj!'Tgof1puWcsQQcWUeTVhpTnLoeed48YVH(l$']8EqS=g-PVuni&eM"*2d?,1@KP5NnA8
%4(i#b>B7pA2A.m4^TpM?27Xb+=RTa+'!+V*O*1_K?p#SNqubmQ<?q[<$+?jmlUee*7mY,&g.<NgTd3;iXt"hAbrW"R?^:6Y^8:i^
%YY^:jjBYqK(X"m\SsKj4lh3c3ji;bPr._G\;Ie4CU^_^%8MO?5!dq@8MJ=%[UI_`B^gnN\Z\.>$]&7_Y4[7aT>%elYZS?i\kRh@;
%C7h=R.ZlAXLcu[nb=_.i8[<@D#Ib_sfA+As"XL)L-$+*em>E''L"199C9]Us#J%)rojuoYlibJO/F.krOX;'mG0^I`NT2<\a+3V.
%O)qemrj3d3.ZV-d^BY(CLQG;B]',7*<9G@^(;7jK9`+Dn;mT$[Sh_l&q:SZ133<MsigfF;e/.ABNm;!Mo'RMKc9RHP)8bkiWieAf
%djisC_7Hn5Y8@!F>fN\80Th?#%>ca?8?PO4RZ'.?(:!6g]j)EZ^:U1eN@_EZ:EW)cYb6?NODYJ<%@2A)AW*?CEE"^GQBV5%^VV@T
%1Je1+^jhRKNSLINcHNJa4IgAOIe8$eQ#/7PmGhR@YQ+2I1Go.#IrSKhn':,%/'fQ1J]jALU-HrT&)<JZBh\a>F9CNHF;N0HJnQV.
%fCeh/qs2qE7jbk(?r)ae=O4i#II-dZY;mYb20+VXP'S4%2Wp;'<I5Y`r*KCFrV$9amC/paU5+p2P?5N4G%81'1a9CP&@1)ok:c_]
%rn>bLi?lrI,/<K1-[PF+AMt+,m#=5uLMQg&qpPrUHb'qkfptpqM.<hZr"eodQch)*rpf`P*S!@tn]bum<7s+34'%PrdG=A/i0O(M
%J9P8,7p)GO-@:YFNo,SXGD5S[^sGb5>&WKt,!bU\Afm+bh_ntdEfKMkHVE=X!`LEi6'-BhF)HJmf3KO%@S6H6^OCK;/6J[2HJc6b
%:#nM>hUgIF]0:B27LNSNbmFR,ZM(7N;X#kKd4bL4pf/@trn/9oHsT;s3gWBX),beJ;;T5s&<nZa;Bfcem'=fh&,V4p@=lL+"E4&#
%VcWjNVW(rIG0s#n%3+PuM#O0rHUU<e]A<BUGBb=@(\_FN*3k&s3U=^s(Y@7RNLp^!O#_/hJmK'lO0W1s8T"DM&\mjr'ADJ%(SK*7
%ARWBu04o&]EM%a[-bPLd5m+4[THh25M=<Eqro:<[S.EKod@e&^:h:L%SU7!n4g]*i-Q"OXJ/:]bhtTV!<>E(,\,5Uj91SkQ`f&()
%`ofR24b@(/^@(9d>SntPIX`u8?f+qG8u1n`leC-'EeQ)As"o38n-QdQ1RZ2n0/PK'&iUL!(&*EjaGZLZ%et*G48s+PH9pO"^Auk_
%4s9m>?\ip1EA96lZbCn2bGktmQ-s)4)%b]&O<1=u\1b[#k4YT$e9qUV*7?FJ[5\4DnFALm)cMEQQ#0W.3"`pknmd6^aqBN&-T"i)
%N#dtaG\)f*C7DDB!DoBgFL[Pi$f^FP^QtN'glXc&_+mD9\O?4NFrGL.k)H!<=NAi[[^,qmC:l3c5``_8c%8``9A`g_VTh#fhmGT)
%0*99_.lp8Nqk"ocl0Y6o5^Co'GIrJ>;34h*nZ<Z7i@nue4hOLNqE4j&e5-rrLo3WY&mr+/g)GcX.9CfP0Xk:RP/#Claa_YO*sV"o
%@)q>8QTUDh@'>1&,]_'V'1@o/gZp`3N:aDi4<+.Go^Pn!"V("Qhl[po0mb%PLo=V:!><bKq:1,!W2V<,9,%9$jKdu[m4-2k9CBZ$
%(3J`#[0ThTdOM]aVtg,]P>"oCpliMjP`"%g4ORfC27df%Gh_a/h7&4=%W$G15([XXV<j8!qkCj,:SNC-*SI4IHqP&5lJ^WDgNmhY
%:%3@WIS*U!Nc0sskVKV4%/MLNW-dHPhn`f85dX);.%WC05G,`>"^5;%&2kb>9QVQNMiHICUnsEs628/RdMe>l1&Zt^p;bD3)b4+"
%7IYXhr4Y,d[iJiBn[?+=]S(r#-=Y6a/SK#m*:0jHOd-U%k9l'L5k:iibr$;aHk=-0ie4TiHa+XYq89+b\O?n^(k2Fj0P+tu\8&c1
%m;3F9$["%C,l%Phgj^8l1`,Ofj;R$/RKLYB;]n-"(_Xm+$XIKUnM:CO\8Un$>W'l"d@Olelc:"UncL>UDhJe_K<XJ$aGQ+lqenac
%GeYWH8P\7;eF0q8@p^@mn/eNN>]3$WET;-#lhPjH`'Z&`\2[;\:foLT2Rm\F-mnh=/&IuM)Tb<1/&1W5n3K$P8/0m^`?0L'$%_l2
%9\HJi-73\#4B;Ino'eQXB#l<G\9l3gINJ0HT6k'"pjJh,>Rs%].;EXU"aP,t"S?89LmuSn(>q$?9.&l.l_9*WfCd.j+,G\pE*IoW
%V?Mh2-c1q74)HX`TNmbtjT>aQA1f%\Q7Fe)rP],W@O96%N/mBhm/D!-KY_I4`mPO=(HZO\M#QqNL4E%449r9V%LD)XCBsW\2^Bl5
%(V6ILZ9m""`WX[S?4a34$%]B+,)lEg=Z9^XNECu[Gf?$/A'7Cb0$1cmi@D&:=Sqg76+u=(?-',]o%A]=nU(pNqMV0DWQRh]\J>?7
%30a\)b4Qc=XoD_Kd@8lN*sAeDr&mICO3;Rma8WYjo/]22YHU2+Vn%L"+ZJ.B,Jt2RmjT*C]H3ojHj[YK+f0J7J]*!ag#GEY*6k#g
%CE"oDZ0IKR=+.puCNmKNY):_nj#[h91c,>NYliWfBAoB5IP$^PCu?b58=$Y1V/Hk/NDgN]64CN;l*"!W1s5*I54tieI1+s)'S^iL
%^epa'\PENW;6$UK]Y5iFqjUKsIo*0>2l1hM.b4DDV979,P5+c1V0`0;<1Q4S2!XIjBMk^Or3Q*P7V1t4)JOr%7L^Nfl773A5PB-X
%Z@X>4ZH-3Ir?m"S4r7N+r=^T%3`;N'3ElOi]>8qJf9dZ7rqa_d;nMHFPO6i%)Zsm%/8:HeIh!$\U'umR6CW+egYodRG4nJfQeaW?
%jJeKb)>-HgP9;i``/P)7;di3:k&9a^)A39Y)[SF40b3J,%XEJ1I\L>DO_qc6l+MfYE((D"&)L+-\.!+OCW_W1JMSN5hM@_>b^qNo
%3X4@6'(HoZAGakf2d3ZBULFW_j:UqHQhcQo@TY4"N9%bmHm1Wef`Cp[3T:>N$^i/JYY(GlJ'eeWoWlP$>=]G_,a.s=Ot$;uSk,>#
%1J';Vh90Vca$3BE1Sqt0A;#Z^'>kJ\N`kaGC<*E%0e$?T>fL(]PQM0-SLWQXJ(QDD1>TZiUEK5f!kPKl3qTj6Hi%Q4`4%)Q2_M75
%\L\B"9Ea'a1aK@L2HBm6)H1)0h*1&l9Iq^p4=ZJ=9Feisr-(LP_.u1kX2-Sc"RgSe,P+OY,@<?j2a/Y(,<j/ch8aukor,m\-,2F\
%`EJT;S7F;F9g!T4/b6_bKKiGqbNtMHTq>6Nf2&,:K]eD:n[n;GTMPI5Ma#!B!W%(5pQ1'S^]k%%`B-C9.Y@H:!W)`ho=\Q!$OJik
%>S6F"`,9si^T*WG6Ma"R.g$toAbB$$%R(kd0;8[P_<q=>)lXtoYK07pJW\3g7fB!Xs'*R`(T7@0:Lb^RV>PrmLZY&88:S]a7$GG!
%Y@KAO@9sf7NP*/_g13LrA^ca>&G#lmh>$Or:WjXeo*.maa"K?"`0p&@f*n?PYV,735mf#/?EQa$6\]t3?3<e19n%&Gk'S*4;&Ad@
%%#GnYRUe^eS=9YdPjAW<&%,G*&*fZpbm^hsf2W>@4`+<M7j,mK/5gH+bRC`P*/K)W!;OBX_7V7[d.n3qagd:KA$/^'r2<=D@QAN_
%80IgE*A`nG7=CJU).N[S_I/7OQtLnJN+%A[jM0nh9f>rRp'g"7n25,/NV(O2RYACc`$jh"8W[)u#\'XiHM(jI]HJ(IhQTk39GqN]
%R`qg''P+uA>5Gd@9Q0u[gMut@?!riXGe=;6q8'?%7U3C;o#o+Q+[+DoS)0!Q_96Z0(t*MH:ZnK"W`5!cA0#8fp/8Cpb#]A#Y*gF_
%"!aYQm(4'-C(!1K:IKXd_:\#KW'p1sYI%_85,;7+i*4n>g@6;pEcG:i[tQc"ZMTki2Dn`0.GVqEf?VR6I]u"*,&`3F%a_mk6h'nY
%>*uBG[)#[3N<sX$KeCk1YUB?e6R)'DZi`8%]hp7XgJYeI:YY]P=+oMMV`i!CSsEceJGlFJZr+cI'Oa#aVh2=c4;;VVW@6CR58EOP
%T*i#mZRFH\9=j0pSdO&!D[LZL@js;%=CBoX%;SKC8i5m:gn,+*T-YC6m.OH:H6<Q&i1u_GZ#3c/^14=KrKDuL4r7WNI$>hO@0IV[
%[RMjcd.18?\!\#oVmU^#HU!m<hsA%5KOh^K7>'9?ZQW>,i9pY/FbJD7_;P84Gcn@D"cLU:M7sXT1o@kbZ2<Cs4;<=\"8%bJ](]L&
%:O>r[iO7p@0o?dKa9Hei/Y1'@F6mDGGosg`Gai*ToE9,-kLjdFP=5V`7G<u4[UZI@%20si[1;'h1%1_+G5d>jgSI\Pd.A>clUA9f
%ZhiMP+D;o8O*t7bZJe7]bfDOnUP[Jr#l*s[4:35?6R&pn#fc#g8TNM`4!3oTd>L$qpNkt\RJ=3AF^b<WB"p!8W$U%kp1D%COh[.=
%mf7d>-"r+`(&X"QX^Q&Sk\K=*<$Er-'D[?eR@m4BGCXQoKGa?.h_8a"N-K0ik8Vu_Y"1Zl`LA'=?pEr#)E'n5KCQF\&]h.c2WQW[
%mK_`\gE+*+PrDlDXoBNA#B+>+A<p/e8EVm1n6T2F$!XVAk,anEjY<\!1q<rO<#AQBN"i7j8^Ni[G)U3W,5MbE*=1hMpnuB[hJgKq
%;/[_Cqkg7>1S74CoRXP\R?+C/=+K]OHia#h\g.K0:mV==`6!$<_8ZF1i_to9-&;^UO%L\;"TY=<pXfB6KVdh>?O6K?R`3,b+[,#H
%=#9Oj/s?k^eep+q"J>Rk)dSjZ!i:I/Pa=hAPm?>cM>qp-[J;Km*:g>'?VM-dHjYTbS"6m8QS-0G\k<I#1Ac6_qt>cS>W@g,^M\WO
%H1;]^nVYsR1)'L-h7/Wk*dN2C*aO'i*VE(F8%[`W:#p4q=NVj_Nl3dK9SN9p2\4%-K2DN2]LOUR^R26c(VQuQ/F_>Pf_?*tL6F`T
%G3ioJ2.Kq.aY^.9V+ER)ZUBdn?sG2pmM<ljL8>^,`,=An]h_Z9*e4*l/@a=jN*A00C>2#00"2eW*r>3[o#4*13=K\#o!RiE/WeK7
%WrBkXP>s^ScdTKEb9R!F/Wof@8m`(L5e4\F=AUY"@Jh7iW\6J0h4d:M:=poFal5nd-LJf(p:@YiSHGJ'-=tju.A%cmnlOhjYaG=K
%U"T\[6:Xq,T3)WNNK@/_!op'ha`9iQfaT*c2o4dqdTJf_`UK'Wc/Sb6bX@_ZST)=/"%cCX]<EQEa\mKga]Gu`Cn8dt=dm#>M9OXN
%e\_4:73rq;=bM,n;r@n[:Ol:]^1Pd[75:VdPrsZV`^(r2]F<\]S-_h:*jbFX,9#KEbi=<o(h8;W,Tl\'=cC(=1:dhKjEbmeZbk5/
%4!]U'l8S<:fMi/!onB0hB6cAF9!^)$e%EKOMA,coeg/g`o&ZsQcs"Pm,8Kt\ee3@f7ODo!(OLo'WYSg"0En`dcbK^ie)Y.DfmZ;u
%Z.FWMg/Y6;a`X\J^>Xfi4ths;5VngVL&?asgf7F#H]@^SYriK;Q8Pbh2DEl&j^lu^L^l8rg18mj,$>q3\:9![&Yr:Ba^b_j]']ZZ
%,IdtQ5Ff5l*Q*u9@Kquu24,9tK<g5bb^(CX<Y7m)+P4K0f;K1s#jRMYNuXF6c_tDPheQ3+PcW,7UWAIXi&$;l(@teL?[OnFq>?]u
%TK57QqP]]SaUbUF;(j6YdH[Z#ca9NT4bF:g<!8+F+dRU1#$Y@o,1MkET7S,,-%"fZ<P#&K^G4%e<bm/7nU]OHaBbo/$UKD%MXHfC
%TuJO.Mm^XADZj7E"\88@7ti6fcPKV3E7E.O>*X]BEApI].0I]'S>9==3rpuUfekN,,6R*o9$@[!Pq7t'qE4_qg(\R;l)n'/b?6"'
%)C`7@&W>3:$9Q#YT)GlVY<a6IKLdsJ>I9o*[_L)Y&1[5jbd`O]-(d2t<R5.?ZB8Y/8`>M*OnQn*^Db3OKai.[A:YL7`0H<CDZ1(t
%Y"R?a>q]%/r[rfq;KOi9a[g.F\r+*R9<-TDb+uJc<I+b&eX(B>MngAqd.AonG#^JTdT8C9/R_=^!jW=TP([XCI_)[cA[#.d(taOW
%%&/k=4:1l97BY7]aR3%[rSI(_&)QA.I)o&BV*S;MC'?snRE\Lc)]<^<QfQD[quVRLB4fJ'dVTpiDSS6VT=\WSEnqV#>^-"FUiOS*
%5KW.Uck4^lq0/2tJNf"1DMj:A;L%W(!fsqb08*WEK5G9S1$'ejjs&-baP/?ZCjJ2JRYt-U0?Vp[)TAn-QDAJ^bC\(\nOs0c*DtQp
%(ksq3Ak\>!^N1M=PWt6LJq-^)Nu1ZA,6sC*0P>MT78oX*odldEPRD9*lo5m<[r[kK&BD6PeuQ;HC)e2W6%1'21.#G!E_I:c'Yop1
%(UQ%?#uYfLUs?rm[*-seX'.>*[=pdRX+(n)^IP"nKNe<SS`2be0poC1<taOZ#u#Y56g4721A5i`.]0a!/qk(Cm_7$97(0WrY9`^]
%$J%4kPF7pgour/#@U%VRnAekQ\HdrK<KcPh0?^6L6*rUQE<IZ$b?RJaS4q4,>,2<Rc.k1\0OtR%Mi[*&I5)Z2OLEloWrXJgoW<^B
%Url=CT=Kk[0t!G+T&f8C-FGd4gt^H&0+Hq[NjSB#B6I]WcW@@TqO@ZYKfgOG^u65eoRZ)D&MQt:I;DNuQ#Aq5V-j(&S\:*I,(onb
%'P4FFg=KO:)gbglitP1EU&<=b=Rs/Wh_IKsC"%0n)4:4"WV`n3feC`PrY6qrE3luX2p_>B=m%-fl\5LP#^nmmfj0ob'OA+;SQSEn
%2@$h3g:h<]jI@cuE!:0Nr>D-b(XMl[ZMp"\8AXl7Z98F1K?TK%nNJLn#DQ@"26O7Pat:Ac0tTQ(X/K5QZ>h$Za-/pIcb$3l;4NO$
%[83"@dm.fQA77O%ggt,)jDKYjFOrF+ql31V3u!Y6Co3C*'&=KnRlJZ^Z>;s_)AqABM7:gF=T9fe3O*B&S9-k$NOP-:B4][SBmaUf
%3I0P8IEfu\?PtK)n#_=-&3:gGaa%%'!THg*8's+Xf%:V8<Hta1S$X1GAbHBXYGRY*9\HFR7@8D+VNq0+?nJWYWrEHAfauND,+ZK!
%$E\K[Wg!^)k'VC>_'DUZ?]A.$l3Cb*UfOp^kU.^pY29P?o3fP[B-gd?J`J?iLeQta6)VfPjU3cVo]m?KY^+fblNes#Q*7hMJmAaW
%dZBR>Q.-F@V/d=hCXfPX9rj#!eM^J5OTD6Q+<r4Le\t^cOg1m]6<5WRbXaT,Nig9PJq]TiI?ktm&!tLZ$3l'O+VQ=Bg$\426'Zs>
%ZUJ4)AHk5BD[)e'EU+iu4QpeOj-<ZJ]NJ+;lq3EFd8C&-e._0`lAB"+1E(@V#X1B4Of*[!'#O;bhOgOEY$I+u/s<,W4[g&ihjIaT
%L3.[`GVR$l!KW_,iIY$Fj<;e(c&su1PWKNXr\"n[5(lXR7;alWD`.K,NHmd_"^=rU^5++;F5cdm$]rSRbgsD?@k`dV2c7C(D-fo8
%4b]XmGNl3[GU6C&8\>ZdZh.W3bW!/Z<1N5*j'tYGJ!9bQ0tf:<ggJM:U?;kT3EYNpll7%B$&U"7milKFZ&F=(We_rAi!s]Z;NYe=
%E.IbR$k$nfJeaFen#^G.;(B+S:2NnA\&-M;il)hXSeo^3jEU2)Jk.9;e"9!@8s'hf!]F'`njsGNeDG$Z&$;lT"6Dhij%Df%WIhF(
%$=qOX8aD,4h2B=S8O$BkB[Z[^:>7&,YU5UVPiXp+5=8RTdO?ka(Tel0_bBV_0:PVu/pc2`TleV^R$WDMDOT+V),<Kg@NJiN&QF[D
%.[-]Q9A]GQ>q/i^OuTV?pg'sC>O5t@@$7)&6JpnQ>1K%T!pPX+V:(TIXbtCH1q?ISd2/YLXq5*B"rrll<KW>Ig,^6(4ZQ-,$E$/0
%.=@Z/IQNn:N@4K_BGZ.Z`)f9Ok;*sl4T$QloZZ$#h^B=sWuIR*^5o")lD[668VQsD7QadsLk;VkN,^"E6*+7?#$qT#VSq?TI^;Wp
%DR?FhX94":?m@Rq0hI&m4ceLgm%gGlSUo1IQ0mp54j0873`8Eo*UGa=f@-IRB%(aiAIds:)2+WZRqllR*K7bqRbBGChr8>,4i=YC
%$bKV#dtlO``O,!mQdMP`C(,!sm)Eqp0-$?RhhDF)CHS+[kBle[Uh:pm/Nl6pF76_9p?oN]@FM<:j6W8[EeJ=Y?hGHt_3[QUWT(%G
%rC-iU.]\!&O.l3efk`gQOnF.-UQW\k"(Pam)/!8)&RGQb(5m#RV\7=rTCf&r$q\"_)'R=tlP3G@8/B:,eQ_g7;+c3jULP+ppV+-n
%V"):8f]Pfb2]J@GEHJ!a;Ll**3:)PEK6\>V$&<pR*:$.Q#b9!W5og,EQh,aM/U3Lp`kl\Dk;c<`cT@>!5lG&q-3]4jkmWFDa8L3e
%G'"PmP'jPcLZAQ4!I;u\P@,N!aR[(23)MtbZE@bd<u8_W`nohQi'f!=Kni(!-ujAg0F<1a`_j>b6YPSqgXZjtEcgq0,^GA:?>f`q
%,'_h*5ndSuP'e;-W)XBj_^Jk7Lq0"V5^Lfnm`mE;flBEr2b"2g?`I,1fRtb^9gKWR:#sFkr#6`>XVFS(ZU%9hAt.Xjg<B('Pf\Of
%-7Kd$[6T$@`9W;IOU?/7o&U%Vn+3NWInRs5;dMD+U]96o-ngI4N#qFbO,6Z<;/,47F;h>[TpIm<[2YOW;]C1I(&O/<i_3[Vc?oYY
%?qK?lGY7t3P47<Q224A"e5l!VHO&;O(]mbj6tPO>a]<XJ$+$Il\ZMR?N['A9F!p7AbRX==OW'_Cgp0`qrBl+LaMUBZiV:s/^WSjK
%9uNYp](Xs;T0G-NG,m(TKI7r;<O(A.Q`I,AAWc1@h>2PL87[<J2P921-i_WoF&,AY%.N\sRT@pn^1hQR$G.]'$HnOp0$86uNUHFa
%Ukt^oV7%!,Ff(?MFDg.JmCP+Zo!hl>.AAcoCtejbQ<9`G-*`4%3[PC)8_.>7!1_(cdmDQP.9j+.gnt=MW[^,nH$lEM@'7>X9]#*i
%CA>;eZe\;9S&s(K$)4bNbfancZGlJ'C(jcX.\]6O:Vmp=15W,fXK2ApEL'Jg<$[7dh9*r:I1pLBB-F*Sb4H2#*+-^Q1YKWE%HjN,
%LAprA&)Z'G;N8H:`hQ2Hgt@^LB6/s/YE:>LM,TU]Th8UJik1*<3kgIpZ%CC.'VqSf9$"WlW?qm>B>=)g?N0V]Wqe76c[O;0ib_l-
%IJ+@snabiFN1/2\ih=X<Srk1e]oZsF3lm?,;$D#H%,?G9`K6#edTJKt@dcU%he]aRAXhqtX6j8c,OJdmjX:j%:AF3;2h!][9%D^.
%YKA1?Rs-Tm=3]NZ%1f"Nq)@2mJ*/h)7X[2mh<7br^0B_FO>"cpi'*/K2nQ'CI:;'X3"IZ*aoq5X?"s#62D_Vl%6<m7(/,\Zm`I.>
%?%tP)p0@=XX94+GpSXgMV,8tJePeIT!^9#Xqg6H!M5p?P>0(nF`)fGP;TEa,Yt8QLUmut:.EM.+!uZlpTLu*-bd&9kFZ)r>F$qg:
%@V6.dK\G4^A/@r7<FNUXe%M/ZU6gS#`b\XBZJ;-Y`Wb35+,39<<i,7S!b!^(c)T[5r9Tc^/&cLu1]"9Mm/6/,qRl/\bMY_LB,]U_
%jmN#/hOB[b?Y`<K>fP[pY/5a71Y_I2o5iq,GD-S!nB_<ZX"deE4H57(1+`%ei&r%sUH/VseG]*B300Q9N&D<j<8HtY%3*4sS*:[@
%/)+BV+d[NC)LGt&83%#=e#!LWk^(CKYEW/urrgU:W`W.eB==&:A=>j5F6[=r2'9&o(J?@:b0\d=mdeGJcA]X2Q7#<ChE!1@ZU3$8
%\DQ#FAYHi^Al67f^9iZac6<r_<S_S9!A?7sXd3"!+ioop)W")iTo&8>/oFeofdQS-H]J9W'PP+AEk*MLS+B6Y[">,ehE();C67-+
%[4[\R`_2iUe>EX;bRk/^F$CXS.Uk[nkTHPpbq0mEVA]2?,"A!AEa5W:.oYI`Q[5u/8.S5"p.tYtaoQ,!GcP@!]lM8\BZSqg:CD6=
%MpCAjZDLIo7X</!kji>hDPPU#F$u/=8ch>M0`jHAK6VZL42cNgAN(m__B!-?oeeH`F<&dK'+Z.CSJ]6@8l*\M87%$B)E:GGKK#2J
%T(qCFYUU^fmn.'pL[lQH3KOS+.-Ln[#BF6XM3N(D6gKMpatKd7:#94EO+LZ?N2>!7'?s.,8nT>t]LbY%E`]`W?>$CZ]<H,'/^HdB
%KeE1$=_kG@G?O3BWDSKn[r9qh\C*7j@f($D8,bOa@epL!@Ih[Nq"9ic&^JO[I`UKG]QMfE;_\A-7a1\4"*D`&OcEV2./l)W;0D<!
%EBWCcE_6h'&IJWhWMI#ei!l<C$d$2NhBJ^$"sQrPk@+Y8Q4c..^oT!3?UrIR*l!`qO?+0s=.\96Dse`8'KifYn7@-&.a('[!H9Z'
%L_E\I\X4OcZnp1#9-<sE)_01o?94A9S)YX8O?*Q_d?oJF$npbW3hoRaN/".i_P"Jk=fC(qniBhWO2e8?4GUb'Ob#0(^?\,(a6I?^
%5b.T)\H;5GMjiU`%+W1]JNPN[M.G7AqLSURGsFt:@ooN>cZ:fGH&Ps[bU]#R"VX:L/f"_YnFQ/tcG^:?cc,f.GS92rQFoPTM[?n-
%O5JIt2lPgjL=EZM'M+$2a'oOe>H/nRnl0Jk]Y>OcEW[PiN5oCfX>%SEo'*`bSh:TeN9&*[fE'PE7jpAn`G/EB<9ulKh$i(tGLK$(
%0\ah+WL+n=G4S\W_1bqUIaDW+1X_/*/ER46h-0ekPOM5Z=0!IUJnUNub;(DQZlG&#%Us[T9&IGNId(KT^AF;%Q=Jcs[Nq=[K;fM>
%hr/B:$Fd+[R@+^P>b.F-l\)>bLgCj.N]\J+=`j1'S<+VEPJ(.WF\GdsP>O8!*]#KNU7?nIN9,C8(tDW,*9M:2do,,AYDGV%<s1Y1
%$u.n'+q<H"9fMh*[,`B5W?=2H1Q\XlFUbaV*+U$sI@sB<rO\*2>`\FQMP3TH.4*hUrfZIX`)dbDXQ0t]cU@I>`Y"VGp2M?Ai0`>p
%3AH6>WB'!C>p<XsS'BD:s%kiP$>qmpn?gou"-mCZ*cpCNg1&.I+fA`SmJ?,+g%Uaf4a?[(Vdurc\M%`4G/b\JZh"%^QM&s?]+FUg
%c;Fn.fB:Sc1G[iWHp5echgug,E7[Y[WoGhki=AfjSmCnrnWZot9,o4unX+m*BI9,2%j;<aj\n-kOTLJ7)-?q1r6d^jPN/nM%,*m4
%K#.RD0UIGG$qj'@*97EE0Uc=M$>"k?pWA_k3Z^Au.2"Vj/Y,lH<Duh1Y\[2!mOp^?)k_2M#Mir3Wa[PAZIOW+ohgSrduie_BokJW
%LLP-pnX8"<2=PTIO+`t7D],eeXsF<aXu.C^&@S_d4A;dd,Y(`)ZsI9&21</-XXcTAf6XG]WfP'kmU^".QAG`#Sr:.M9^goa&Iph9
%bT5"I.">YZqas(uB',?o+$?0"1?*k\FN3PU6p-GRdcU+a#,)<*$JrFM_V*8Q*18cAL@$?Z9-ojb'?R6+%l-C;GUi]gf_j5M^P/0B
%-af_@k1u-t4fU*BJPhLcDMD$./\Tn[/_mG^W\Yp<#2@7t5B&DS8ZL&EUq%7jo)M9lWIf6_%7D<7X#BPcfU9C7@dI]aq?KRE)pE['
%($+@ll,M$%-p4CUp6jdY_Ncs""(.X'Y#J4Zpa`,*`;KlQm<]nc0kqShT/UVpNN#//rs^%J==f!nXL,nbl\hQjaM>lE@p.))=GFl9
%/<Hr`+S(kO"RhMjcH#qn%LNs[q-,Q?>SmqZN"pGNf7gBta2VF3-H`)1SHt:Q*2+L-9=HnJOA.*C[iA_*^&Sje\T&hND[Wl-"1dP#
%goG$3:7Y)(VnO>k&4s4Rfm"gCJf[t\m`T/#;l_E4q<Mte>K'47OgpAJ=Tgb$AU_n=.@u/emp\58:7b-J=@dC_&[dup5S8+PfAr6b
%Z2k(:.cga=DcMql<ok,j_;ggi.6/$!Hno^iaNbNjhuZu(4c8U;onuI,[X]rQ^)ZKc\UZoe'8MrdJ%k]@n=ElfRl>h+IpAeT@$\GC
%WMoA.[TH;2jNnDN\&GM@C3@OO83-$0k!3t!#o9nDf9@CEIY?&OQNT\:`nCoCA]944ao3l14"?7U+ZE''28.f`isoEm^j"?cUE&re
%+*ShAbRKU'"%hNrQE0FWhFD2]gejGn7mY*PfglJcOJ@XA[Y"N?*+<a8<NfVBA_$+4D8/mea]O<CN,W9OX/:0a?o!ljJh4[5Y9QP.
%NW>WTj?mOT;aG'of1-"2Z&XEIT>r@_]@6p@XG4V.'!dPjc=\1^OPDI'./-^Q4e!]m#)7r0XkIA5MGiANnRND]qp9S,"BhlN+j#B`
%V/HjlrXnH?[.h(@%5Src3sZs0:E@!W3C2!*L:=]5dFcJN31fZ\9EVFRo"EH/M5pgk_LRP4_[W]+bbauW<VCdnj^t"0UeJ=A6ZDi"
%]^(un5Hh@$e+u`Wk%8&(*5abGE-o`iqgsM\MBBXLaLomPhT_?mgsEEV_eO!q6,)eKo5`ON8.;A,-.r=MNJ2bnaFE,'4tUm'I9.[I
%]^5g[MEIIWUWmIWD#4%3j1$'5^3e6F3#LVgk`TrC$tb$X^l]0i/X_(s7'JU'bCD1^Tm,P[De4-^5=0B.05`KiKkH(j^H"'aIe%Bn
%2>Y_ddAjS7oB<-GqXX_7#mZ8dG\E;*+hcJnnc9'u%<A&m<3H#+HLZD,0;An(b9jth',D]ol)i$-GWOQTP$o\)Cob4-\X98BKTdpc
%OR>`M0V7c)4f[OG,9Vm)YU4`O8b+,e"pP9UDaS3C8=l3n4u<#9+$;@dAs.4u,9*"T57:Jj]dah1-DC)^F]\'p.0D4s5?O93gqAmh
%Eb6@2)LjdGNFtU)M\=lqe1l5tU*9!0K1i3TTu,M7;p2&f\aTfMAppi.?U$-rh^H;dBh:[1jZahpZpMGlXP=k?H+L9W%*@5R)d-tD
%.E94Dq-m^`/"jY[@7"H;?hk'tX1/O?3F>>JrC(Gh(SZ;,Tm,69A]Yb:6J?M-o3a+:pa%PoT9c%H5hfg?W3G'QD&dA:O_"Co^8.<W
%Dr1cPjYlg8)o\[8WB2&?7r0ghN$1r]N=F"\C)^:n4IHLgQnSUHO$FYi4]`(o5tob+9N0hY[QeVV\VkYrk:Ln$H]AOSq0)/)r3[di
%CK"e0'O%tKFZAHNCZrXr5V+<=":B*ei"6A(Bo"/)[#$WV,bJjMNEn1eA@2Vf2FKp(68u1,BP>u4b7cC$\[HO<f>DftInlk.[s`XW
%3-0!h\TZgfMp"#a*[d.UPK\3`%.ml!H$"_pCU'r6_-7aC["71$`u9j#5aWZnYIRLCY/Bg(:'ECk]BB5JA=T-:NXY(Yq6Hkq(6RBH
%oF(M<bTVSV=-8\8$#7McZQh,PZ'Zf#8j+iN1gb@NoW@0<JSeHmo`9q2%]sKLmRF]0+Z*<#VT;'G7PO238[@S-XDBNOgTKhZj@<u`
%pQHDrasn)VXS0acM^D,kpe7_$jH?7?9i9iL2Qs'r30Ueq9/="JR;6`?j\YO8XcbdM5AZ?5,W!ON%#HUue8pI[&ORgTs!.(B>P'qW
%Vje$eFF&DgVioetL"(6?c#]lpS`m;;</m<6`b/o:HW%!b\E`dPT_1bn72Dafo-8'D34[Ho'(k:Z\+l6o(aF>;mTV7"'5[Rb`@Jhu
%QBp(lV-Plnk_e%(6gWP3S((/(8pXIcqu!ZINKR_0+H->g'$Rai9N5^ZHanNn.DL>;?2b5$k+J!tGscqT+B?3"4P23sDFlp/,6i&7
%6h=fo5fI>:b5<JTh4DiO^2OcoOAr5M!7mH9<UNAJ]</g_[IrLeEg9ZCI="TK=g^C/?>S.d)/RGXb-1&EPMLnW!G2qK>Ae!I[Hsj(
%q1:ut""=Q2W24DqP[1Z)Oeb'$SY-#Ei.?fX<emrO\><b-E^_c"e&Kc\,JmAr#WpX1CFR\fegdF)F>%05iIHEsIF+Z]1J(UaZNc'9
%B>RlL7H?D5>m5(?VkP'=/GjN:;OmC].dp<S;fufYp\/*</Oh=Q9hu^#G4">lO^a,(CP`iD:dcs1%jXjd"Zm0l5l=@]*#0oSTGPWa
%C1OT1hk@O3/37\S(^4hp<qQO+?b.,B[m*usD'&UhOb$uA8t&@[8^@5qG2Z[%h0L3`6DL^Sc4ej[280;KDkODEH+^fsonS.Lqk6jf
%Y[c_Q*\P%o;0&F&Op7*1h-IUE!j@oULH:BdN_?<aWWr4?,@(bGVJ>EW>2ld*FrP6`0du7?E9h_NQ/!o20q1)RV7e+fa.8#*b>Gje
%N<nQPKSVEr_$=2X\3a=<!%5jW/R7p`Jh=$5ZaCqc3Z'\fiui]mXmRO"nQ8\j7BF;g/g$?;rih.8=<"Oo8KuP'@A%Cl)7mF`CmfRF
%ZiG>"Q>:OsBVk,r4]3,1C.,Jco82q`d/ggI89kWV+;ejE213+rKrMiKc8jT@i0h1HjEC@d0QSW+*p%D"d8D6VXFe_A93tKu@];;(
%iK^n1DtXcE,hR2R8P[O#[3b,a#GA1oo!R(0Q$fJ&R_[5(+ugK@M"$KRLM5Gm[Q=>\`pb's<Z`r"m=JVKSf$;gkEmGrJu<!R[H5[a
%J(?;GkL-UUHkpS@,3ed2^>1?I<!lZbVK6ZL=l$aoF=kkPni\s,F"'?2#GcqjrIE42e4[P+_eF_CY@!C@8o>SrUssWBOBQGmZ4=bf
%1SG[*rKUt_9M]IXgX_=h2%faY0eK2&lkb';r'<dJ*pn:5OR\]*!Gc6VY.@\nJlFGX>\8eNaOTmH)UD$b`EZXM_h'#Q>2qp:)I/0J
%'B0!b+&^LQTH,j[V?g0K8UV)&@"%eTLScYK=5sF]XlIZ6'eH%NN?_CYAF:PT,\gI]hM5K90Npdn1=6!!OPJ#1:2H`aG6B,pM5)7d
%,q35FQV**iVFD*(pb%RF\%*'n!)YJ/&hUs8MtX!$ZnnDqGuqn\fs4"Q)Q:NaP2rYjfiD4C:PP`Q:fTiD#d6mhR(Hn]6k7_'FhUpo
%jKu8&pnS6(X!RClp,nfjn<F\D"b(aPm&e]hiPka).$9r<!AAG]/oEpsOWY<:F"afiKe3oF>Qs.#Im6UfV?@_K-=&Z;mm1iZ@TGu)
%:r4AkPsnp#?9iYmYj0^h@O@=/BGMDa>q*O[k6DU64Y@+Vbd2;8?Z9R$Dj"KcItUnk?L39_<m75+G*ka6Fr>km?gKNLZ,<dGIK"i5
%Q0EpUUoN<WfG_<RE6MN`'tW"WmnmBsdhKu%ggn!3glrR!TP=Y6b#NGB4L;8J".)g6"nRhhSRdIW0CrQrKN;/dSK#flg;snJ;u]q@
%[t64Z*SIY&I/Fnu.<5Y&octPV,!elt)%QLdA*(u7(cscf9DD?JL].#KK?WJWPmIefLESO31@0cCf8.*.NVEJT/D^cc*V;7iccP<)
%V@WA^5^I1^EdHc1X/bXo$38hBmt='3hYP([';l<E$BppNh)*QpDg6/Z,k4ICe%1XLUeBEqeWPSM#'sN)q1`)&?R.'tr9[9PisM,p
%L9Gq\S-8Xk1N#)*&Ak17;@*P^BgRa2R?oO2k%!%'6r!k\KA_j7JoR"#0>b0KL"_0lCBT+l#lh@A,oDIL)f8<I3$%c,UfGYAbVV$h
%XI=!:U%olDhUCu_2.i2.C0YMG?rgcMn5]VX`r#G\&[Y.W0NU)"6^FCnON"_:=WFLlCp+CUgtWo+0;=P.7`q'PBMq`oC`8-$_KT"k
%9L-WTiTC\BQ!d:[+gHmW:!9K[,/h&BNSsk=40OMigjpa:PCgVB5ruE.7dnI9fnsBfhct-$_VL;=WruoV1<d\P"\[R``i-$M.B1At
%%$ARDV2[;U7pIBW<X05Q\dd\_+Ep,A['Q=AAn=\H-M^,BU(=$N/jPe87n[cuEa(5#K.s<&gaTQHX07sKKhr=#Oc<S#.<1h'eSP]O
%'JinuL=Gb.CSc2T2dQ6'UgRQVRta>"cp_i[/G.3r>8KmJ:1WBe+:4Q0iu:s]^!\;LM=R&Bnn*(m4As!CT4u&nr.M]rrB`/ILg9hh
%JIchlkKCT\!r,EV8iZq18K-ekeh8KQ<)[)%!!^_@l4OdV?#Ud@Fo+4U;W%>MdUo`qlq3s\%3?`pR2?*PPi-m9Vp2/TQUV9C>7sSU
%bQH)HI./F+DH.$m;k+,fN&+;M9&,V39$<S2TmZ:*VtSCIo)O)O#t#7SSD$)!JTT;'[M?P48Y8Ccf;>'DK9digo9r:41l#4,'7rif
%.cq@Yo,olFh4s*XfD5NVMRFpWl/W-9*3YVe="p0eO&6f,9)^DV"NC/Y,&80kKOkQ#>=/HO-DeRs;EjUTj6@e?<\$l`6<TF5j@Z_"
%4\/I)U'l_FPVGX,!q[)a)[1lIN<Na>#/B>.`=:!hH/+cp>^mk1fnIqW($79$ZYuNZCTL>Y@:%aHkPB`j-"CRtgo8$8&-fgKB+D=+
%aHYX4@b`dA*h;t5U?2bq;X-&^$t,[4f$0s@[%aW>0M6R(!t[N`&R$bY_tFAj/'gF;3H!#k;ESU`8>e31[0J;$8'&4GL]%L,1AOrZ
%$kg.LNgM"0^l\=X,nXX<5Le7[H.1^DNH0CFNOuF`+)s?/PA!bdk`bjI&CR1gfrq#q[GN?Iop^e![Q=D8J5C,oM_QJ:jEUscFrc-N
%EZ;B6W02qX@*4$@q-=+D\Y&Ua+C<Bd5`Y!(O%aI#WF,@Ca6;!D,O^n(jCr<((i7"Zf.*$)6"NHfOB@V-N?Qq3ZF1"QKJZhQ>sOU3
%]-agj2:%<\[i0!S:A1P)[cs;R!7npdZP5N.ACBt'0'IRZ'<2DVk`f;^1RNbD7Xr.1W6E:+M>,'.##F#I]KCSU;#OiZbGfdO69/C3
%q8*Ft-M59B`?PZ6%L/7K?>^277o1XbF/"@=3+fIe[(s4_0DXtn,r8e"E+27fH<[kQYK_!To@Hc"p@h/Xqe\D:Ug!-8mYgI.+INO<
%V>@9ETPFW@;:Ll/$r-uu*li$@>SP:<lep6NoL50`VZ;XNX!O#k$>*Q[BngIrA6&*;Uu3Q,D-&$dQ9D^n,hckXE["G!,3H8#N&QH0
%T:NbT(qh_`H&Ce"K:(&jpi^3DCm4^cXDI$LB.,(toop.Qo-,K-@qQ:ES7-9CXORH@XZ;4uC&r)^Z3q=%]a/M1/:q_W<?`FVqdRj^
%7*CRDo_luF>?j`44Z4q@N>/N.;%'aYRa.;%V4)sC@*!6>mZ&hUH3gIo,M9qM,sVss"O`kl/C$9j#^0APSsg!+nI19:Yd?_1]kT/F
%M^(6[RhSXDH#`-oR:cGCad^/3jgd0K53W2)[GtY4Ng"U4R:*'A'su<8!GDa?_,.?l/Y>"W1gj`<eFHZp,/f(`(L3*cgWrlDNleBG
%Vmn2qdo#(g$W>An"XCH$O,D;>rh?];-Q&si2p/o$^r$`G&Q]HP^659ol'8Yno-[kl;0$6)Jlr0<'"UZIa?1:j;\8m]Hh3oQ%,8R,
%IpjWtY0:%eRtYBX7DLmffs="J=+6)%1Ln%7P[kNBZ9!T]P5\(WM=VAQqq7Cc[$f_K]l$-P$8B[RAf,'!c`2O%ZRJe-.oV?6ie8VH
%EYg&"bG#$n92ThT7*26NTm#ab]R(7_WR+9=0'5X,P'(L%pu#2tZ1:7P_W_\2e5[SGOt-07n6qU!W3;R8Z%2$U,*0<uIenc8XdCS.
%Tj?VZq'J]2RiMlt`@as!J%E81k2NP4N'o>?0G$H.^cf\uS<@45e$5.-G(XQhpS=1ci<X341?iLcoo`j+Pj4PaL7RuDb,A+uG;6>T
%)Ng=M5cdA>GAfD3Uj_A@9q$(Ec-E&YR6Qf,Re"Uu\Q<QkUZQ;!\T=(,D'=VEWoW:XZa)LU._CdB,u%(XL7b/UFo/H(jsgeSB\dO!
%<liuVV5(Zg[lKtJMer];RNlq/^pA%D8;\irYe2Q=Y?1K0>a1:)d#ja%`;(VfjP."^P^X5aM#U$g2h)iTH08=`o394Dh;efLk9Qjk
%\;*<uZg-^\k;\Z`-G>BRbsCdogr7seG"SlMgJUknT_1ADQ=&N3RGZp:rcE'B#_h:eLC<.g#O!57+o,_IBRR-bU+(<URo'EO@2f4"
%O:6%\=s>gM7=?$^7UhPP-q:MZibZ@PkEZ2oVe*O1GTkmh=RHFR%Ar7-"q=b=[J@9r#_q-n`Za,eG\;u9S6/>W_`8YN%WL+`jCJq\
%L1BDbKFr`;_@aWUEs%'FVO(8/K&*a("-m25<]-n`-TG1R-+W/tET!Zm[[g9n-(H,!]i='Cdm;.BiYK\khkL,.cNr?'5tW@<m#"pp
%j%rcQOh;1mMX%5U8OdOtT4$W?/5<eU@&;<CGCK66S8OD/`PHWm8!m9\KZ8(0b!d.P6Erg?LE?Q=gSc+?)_3)C[faE:OPEkQ/XkEQ
%Bf;`6J1_lZDAG;=TC,'8n\d/[XS552%6_pIGt>>Qs*'A'&K@YB6?(uLB/i4j,a%^gou8OS!8l1&,qU-!PNNoW\0Sn!ON'BsWDB='
%3'B9OXsbl/Sh]D+H>tA$2aWCE:+=L6%rgV+'em?4S'JWUr%,o?P^k:YC0"L57sCB/:fZF6h#<0S)2>BRjP1:)2go(U*?a09amSZk
%`;Ce1ahI%He3!l!?*;[,TEojM'N!k%l2H91E_qLO^MEY>p2p4<6Js.hF?44egkHC/i09Zb#@P)DPufci>:"7J%*S0&0DXKDpX^pS
%=fpaanZ"IRAsF?.\anhW$tlb<U!:`t^NhNC@Q[7\QU=s>%m_,cGjrKphcE(>KS=s-0OZKnW`Nf/HP%C.d\]VL5,lUg0RW$hbN;+1
%`1<X3Y_2,07gVP7V&A,icIT(7f8gXs@LG,#P=#g'W.t`U:V`\d`+8W.T^eUI.d1n]LmNS=o"(OBQ%><\Vr%aV.[gcsQIleAl@+qV
%:lmNh$46+Ma?,)I$YnQXOI<SO=kG;OM;0Ai*B^Z"YlZf1=e":kcoTAf!432E'Qk!7k@XH:[NDb_V<mRpZ+1D:+]OuF,V>K.(pL!-
%n,%Z@U>$!c&3c6P$)HpQTp;S8G>nqSpKeKb=&>9[F1p)+l.F_6C&*2ToHd77k=/JrmTtfo$C>X:WH@E%BY)b"ZQ-Gjq590m@5(JI
%V!`\Bqm=dn2r#=fT)<;9^N:('`q\dir;+OKTMP-2gMs_LRs^RAZZL_9d/PJ_C+!Ha-APgq/=g1oqe!0ncCP$XP1iLgQu&]i3on4p
%DH@1kOu']Rm:oQ$]LZlNU8=UO';?cTUGQ22Q@sGQ5+!,'L+8oDa+DO<M6'E(aEEY(##/SXMG%Jr+Y1gJ#,=i'^9W8],RL3n/g`<r
%(PHJD3D'%7b+KAD.JP(j6&:gHoIR;n&-C0nag36lW6%Pc[iYhc,/2Hd[n'-E+h[QFJKWL+X?Ce:hj<Q1T@PUFqgIL9KpLWs?+AbT
%K@5k3i'bYf=\&`pA"CeXd90.b9]11"9\'7+_+VeDi822OWdF>VQP8R;X+spb7@5XZ,gOo[P)#Lh/5d>5fOn:A^Jc]fF!*$o)6CB\
%MZ-86loGN+s0m9p4Gkl(Z_"YMpe=M:_6t2MeR*rTA?jj#Pf'c+3*9m;dqGp*.O50)2B(GkI5k@V48uBW9@l[*Fji_+:"rei;qB0g
%=#<ne]I[s$#U(_baL5%VY$bHp!!Z^>n0Pn(nlW]9<)g0*fTtSuf>0-;1(>+l7OB?PMkYQI'Zo<J=eI+FKO7Q.PI6*bFQ%H8/>1%X
%S!C>?#&<ZN9?Q^Cg!`N)9HG=pF!eBJ5,N0P`J%CT@%jqA8I"^4:N.p,j,*i0!*bh0T`N"(iK*_u9$Sa7/tGON.i+"6#-(>MBK^[H
%PJ^k=LJ&ImR:TU=KLMnK\I:$Ai*7`IdoMu3-^^rg)RaKPn5`Qb_(u\!<f;L49(GAXZdh=lT5A:UZ`<<$2I9^hhNWNrRk/0'07(jC
%9#`AXZ`6p;eG6+]XR*5DNkG[n<#+MLQ6q*`cn6?sLBSm/9?$h`PTbF2OSQm.g`Gu?=%0HMI'H9)TGem/p,P[epH`HpjcF6<&N,14
%/CA/Yl1rPDY'5lsi2rh,<I4OQ>1g]GS,=/]g&%Ub`Dm[\o?_;)O#tF#ZPm)b/-m%DI?B&UG\+3:]@UURA-24_C\!0IiU@_e,m(ht
%8gH2%E`He."kE`EXOqA#S>j,0qJNY;qT4ip0+=AGS]%VY'48V+!poPbo"3_ah#'"MmQ;m6l$gs9];PCMo2nm)`]Xo.=Milu=K"0l
%0uEO:OA@Gc_`]6B=RtYc/DF+Ec-^OH&=toc62lG>99Om7d@L1li%[86?KA_=@o<%s#.Q0t?Z+1J.Q:S(C:rFh#/^"2g^JiN3O@MD
%h^?7!H/1,@[BFt!2MRNV/HZUQIZIi3ZEZ73m)fgXSR.?c7Shj?2j3kDbE)DGJUZ\)"\d$^JG)0e`5s$QR3Mf"kNmMg2l9N<Mrp-<
%@4_U,r9&qY\t\/Y=(\sp%+Iar/_`q*`,h1gkBD`<Ql1D(D%uM4"IabON,JOM0+Y7dd*P#\)+JbU\66>r7Q#gD.h8(8W`oPgcVIq#
%R*>FsLGDBhBgZSAOSq<Vb?91Z#5O-`PL"_/.!+Q#K=#s9+3$.pge//FZg[E?R/"gA1(Y>?YNuh_d'[<c1N4rf?0)tH7Eo%qlJj*$
%d(t_Y+7_H*MQaW0"D"_Yi5L>#H=SNA36q[\UqUn@/qu5dBDa8t9Zj=oQSVNY1-)nECB/QU>-,^VSu!MhhRcO38fHN.:fa[e2[OeQ
%>33o\8,5NPVDCmtB*nlWVYl#?YP^I7UPefE?m$IH%=Z0C+R*qt\6hEAr.`TMi,0hQdk*88$o/D<d=F_r\3af8g,m*sJdqXAZTdZn
%1Qr7>h/)1"L9+f(M*\lL*MMJLGcr<:P'ql;,M/("K9dCM82ZY*^L$'.r-/o$THG+_:bXs,)Y1oD\'M&T3*W@5/17)$3K.ub8!n)M
%f!SH)a!pQ<Bpi<riuj&*X)n&6Jcbq)X_:Xua&jjN4[X1QZ_a&i%Pc[$IPp-?FGIS_pumEbH)QPC7sa.iJMY_9,,ceY:.HIt7?eP(
%]*iUG1?13:"KYW5X^"%c#rX'O1u%0bFKAn(N9/MLLk[uPfGYAEdgA-!IHAbObEiX4j8@J'!:hZ5@Oo`'OaCV%mOE&cl`+=BE_4(r
%8dVCYQ\_:^CJs%lDCcC,_5udV)L]B(_^$[mQ:j[RU4l0R?7FGg5nAVi#_+OZZnY*_eYPF5=U'8K-4[gc:sJ6D!%]QU9nQ6>ij\P[
%]jI4&E#JWT]]!jp]#`)>h%rj5GNfoo%+q<@YIq"\Q>r2/18n1;\l#N;r0#8Qq#KXme]g$KLrsP!';@6d7u^>Hk9Aego[p_9*%GFS
%G>E3UXZH#L?eh\g8'qLV%U<JbourulFWG903UaC^8#i\IBc5>JHEhr+0YLX`QRUZV^fjFFUjXi,%XVH$S'(6"-u37pGZ;?jFYtE1
%5:H?P5gE$a:nCJN'tLU9(NtV#3'e3FAX;]^mL6KYSMFr#\&uF2%]^(?;LK)Wg\YhMO19T.6S_2e>Wf^@?S;p0H3i'D_P2RDr/V7-
%h-!UQL0ZI1WK&uZ-V2j9gG?)a?[91UApIseNaar!PU!_h(N<U6miK^,Gq0?k*gM[^#3DL55!_.<ZF35fACVkDdT=6q5]5"+2te3'
%RD)eiH&fk[$%!_^@"KijnM1>_b2m?:Bb]8X[:Pq%<NJbeLIe]on'=*jJi$W[o1fm@M3E@FmGH@!oI$'0;5TZfQ!I_r";iSAerA!]
%_jA$1*?8jTK[,u#Rspb[1?5Dp&1V]E0)[]L0/fWEI5jC..=r`%R<P0@39$.WB4YP$JM9?hLsEiX,XC@O+e\gB$cSIp.hOlQ.\?!`
%?aE#3$ADq.pKE=?c.iP<9)LGiVnWsCH#KRq]G6$Fg$FTh+]//okno"RI4Lf]]j]Ca(\ukTNQ'C5!;,qlC_7k?j&PJ$o.k\i\5S.?
%;n^]dlFfNF(hW[$J/XbeB.K/EeU'Sk*UeE]c#Re6NG$k-B@,SinE0+":nU!_:s[JaY_o*kcuF^\3k_+t6iV<L4rKO,17#'d^43a_
%%%g6E;qqofEtLU*9<P:K*/n,FftS&e:hUNU#?g*DdS>84'eVS5417+QP,.YZQOf\@4U^L/f([a<b!QZ`C7G,PY0@tM=J&Tq.moC^
%/3kA1qr4tO08ib]N]2.BiM.PTT*;-q9@<50qEa+lGSIEE<Pmo!h$#UQ@hkP+ni7%kQN",\VLqdomu*J^b_L[Mh;52i`P=HTkfB<6
%,^.^i&q!g)e5pnuc`4CHh^mcB>u#qmOu1p>EsM#>q'J2")RAjunaoD8*];%D`5-GqG'"2ADR%OK.M`]d@BEZjo6h2Glj16F^lqP<
%68Rg)l0DPsCe9ZJp&iN'E5UcKRIQ<6"O(>*!MkGC6K>(3$0W^i-IDqp]un7KgaoI?Zn/7?k@A0mptO%TRcf]]ZuAF*W"]S>rRMSE
%Y(K(\46iF&?kB=K'Th-YXO3\`f$eDe&^ibZ2aU/lp^8$WYiqVZ-RF(/7G.9n"O'PGn'm#MT*@bnf5[BQN,ZQR8i[?^NiMLcbuTjX
%h!meC+t;dlN86$lFbIs2M`_jI_:2fp2m)2u_qV3>BpF`0=fIEVPDXIgI\0\go9Dj"O^>I\^LWgR.PKInV*4JAngbZS#X&OX>M`MC
%I.d<IL1(#Blc0qJk*X1,GNRV^8PNt2*Z]WRMk+_"T6K#[mWmYnX@&0qaPLB9l]B\X\;3,X]ht!_=L;$G*g#VoIB:htB1O"m/^IF:
%!*!$"e0q+@cFVOs.3@OZ3LlN2?Fdo-:bfm=pssGR%1!]]Op1-$55u-r7mfmBAfi*JqB02s/p`0k4Dq0tM0[c?YEZS(^Xt%?D@U;*
%.$N2._.:D#G#'b&`)0?O&;]>)S:5u;=nl8GjJEpl_?&k,n'eUj3pMfQQ;3>Se&B2$qur9k7?kB9LoSI6&jp?SV%>$\9rY(>UZ8@D
%U<8Q7\;Sj_:QnoYoT!?IH<Eqc7)6OOU52_!^9m,dmX[oSqB'V9oY"Lcgd?Z7;D85WcMLrE9>;Zt0)H%BD2Ggo;Sc9XaHaDB0-6"6
%b(IK1nFAb,pu7fWhFU\tqV<bgjX5e&+kIY88GS0]:Y;-!rHeRoN]_k91CV/Mhc:mEVEAI>>9&21S:fQBhMn=/=7?p5j_^BD_oD2M
%hALI-2fY@^p5#Ob(%+TMVf7,/11/Gcq=42_._c^hEh"YRZ\rZtNsXVL1U[/+TNO?\gd24I6l\B$!g%Yk)!rl@D9Uu3OM2aKjd0Mh
%TYk]U_<)"1gVNPq.+*HXLE!_a/TjHf(<0\=M.mo,j2%YNK<IB!4ibT@j^f.$_dh;4e,&Tn+8*L[9-o>rc^B3q;el-a4S$K"G9Y9[
%4@n9P;e6oo&9uGYSbKEq8?Ro%?H?f9M^VQCjV+!g'hOgdQNEcQ'][S(Nm^R8m49!MfNhsk#h\2ej4L/0ald9AWu%d>RVdl)gt7/N
%Mc5G'SaDrH#J`XemB5uu?,_&]1ECr>=7,MO6HI`b6RYfIKJ2%(`am&[OVES%fH,D^27R9m*k5d#W/^.>?b&e@0AD0qjA&'<mP,ZA
%/R:*Hqf&;O,7.CQ7Q&DUJmh09*)4SBn7`K$0l&OG\TrGI:5=1?aALS53Z>a&KP%[E5b+ju:L$uDYKC8Ij8QDJi8M!LOC8X8r1l0.
%%=b.Kg^r,T1i6XK^6_^^EJ>gb<?9$rs!d03XuY$":1Wg\3ik-e4(>KB'0CUjf?5c4S7B7)p>?^&Smp"^(:Nq^H0BNV5!aji3c?5V
%qE7G^)Z*4Pqg:abF!hCk#%C79MF:'9!?"rW;682PEI%cKjr.ZDg"pgV*2327V;9E/,_N*;F"3[OpiRi'gVZ:'&,(VKj=eAkUFI>W
%%C6Pb5S&+ZP`u"pPGfOU&KkF8YnMEQ01VPse6:qX,Gt+n\d+Dqb*D9",35"V+*/[.F"0cKZR%q&k:#mq_TEi,0li[ZhcH.t$7;;T
%hT'/_aK+&5M@$c7O:4`mIDl@B7UK&GSc*OP5]:mpDD=hf*I+\>Y^2sMiiu>C@*teTI>O\c5%4@^>.)DTll)]*'"LX30rNZBH)(V5
%k@)fa!c,ihD3>pK0\m.c67ma4n"UXBo[sbMdLl1)_OBGA;`Ut9lWg`D_3gF0aM-Xo>'<VDW4%J;k"9u&on^gkCkr`,AE`b1qn3S2
%6pSlNJn4lWWoH>A*kr")ZK4QmAhNXD&JT/G5<5ui=+THI0_R2jipXAbGQ/+5]bB5HXTOrLM4=")/\hYk]9?ba!Bk8`"^$n4;CrI]
%Kpm&$5fgU&/,!s260<gjLL*HJ%#!l-!VV(Yf*3:gb]4Rs(]d0k!(`=$53>Lh$BG5]GXJ'dQOtKY8hC"I_kG1HCf_[XV%uMe#K['e
%S4?"%s5jOW7hH=''"/1!b-Tj<WQXdq?7G--Pja<nbIqTHa_.V%9i=A$h4LuB-ee6G*gaGL8O+Tc<>YL3"duFh`?Hb7]Zc)&Iar]E
%Jqut25Y55n4QR\uo0?iYo4,BEa]4:JAHH^S7j16,Bb$+-)J*5:1o0N7M)BnThguT.S"<J(q43>Gcg)]Bq9u/=Yr!Xk?4(;me.W-U
%@OW[V-&KfjV(!X_K%`K5Gif[37%Im^Ta%k&DL`h/U6+7fXU(^:r8N=JbMAF\.uBo0'L5]5=gDQm^+V7?`TaR@$m(U;oV-LgH0eAJ
%H'o2299hZu:.`lIUdl01T.:*6Kk4VSo'sO8r5JP(^<>GA)?,>O>;X1pl6+T+=uh0pl,&6kL3&5I^\>gfQr$nEQ1'X/A)6Sb(^q7!
%4tm=YmW>O<4@IcdJ=62$P"hQ''OIoC0p2F)o'8*oJ6lH0@M,GB@t6YH::_)@]Trgq#'eq4/*UtDXN2]YGgM7g\nBF8W?)-\A]T<=
%@?Vi4*adJ0BD&Re%jYK@^h+H]h[JRn>L0pc27:2/MTA$`7#sg`3hua"dkal(1j\MHXJ-W(2aP^EK3GPjQ:81Ep8ArWC1-,dV42?Z
%4pBgs"s;G?._\ArEuh!VC9[\<nfJef<j+pA#D*)FYcLOnnilY;M<p8da$9IO:J#-o\:=?2b>\TQ0j,qh4R('[&=PP0)g+*)C&>+<
%5QHOk)]r;jlXi_O?+E0gD?d&f1hWUl<pU9PFbIhr@:fa)%_El3.:PgTM!CI,j#M_]K\KV\-VU<LB?ORhB%.,^/&Gb]#1$W2hpE8B
%%b2^gN+;P[*g[nIh%haBK>7U!Z.BP"HGuCfZ"Gn^Cfbogl3:ON?']5E9=7iE0ufe0*#kP`c<Gj^''4bdE;!N(&Vrr1+qA\L9;*:h
%3fSN*nM`b\_AD]2o+/d'HpH]G>_;0N$Vj)@=2tA74CsK8`G7ncieTtWK]lp)-o072c5<f$c#jT.\FF58VtV:c>=l(Tq-k%sjXa`R
%D+K^Igi?U5D=I$SIY;%tp[Zc1K`]\!S1-=FA9Bl)4-(=QSX:POkd/;.7>eJ><nBg:[5e&tJIiJ468fB^'@tlJ-tZ4IR2P!U9Hhh@
%E/-^;km)jJq&l\%&V.ReVluIuBa-UoiA^RQKfD(m>R0N`D*6Qda#)/V+n-YEPNJT\o%[b_NpVrRF.3_;R51@RA`b5Wi;(kClH8-J
%Zm,i3g3[[@2dl\-jNR700DrZ&*C70>LNYL_JK?U/Nl,41QApmLG<]"0B>,pl]d>6,:3;EekUFsDa_7=-1dKYjkq0=t,D&`Xrm$n7
%$*k;<ic6t,5YFZqTG%?bS/I'GM1&S;$PT;f%g^M+j1kcg1b2[+%Ir7,'eB\eQ-j<V^V%&.o?p6q$DXciebNZf`=B_0I:q8mqIXDH
%(;BT$8lU@Qfp8e';o$m3SmnH0r-[0+f>i5Si&\jSlse^!kTf3k4GXYTKF*#_bS,3A`Tf-fmr++qSan*hDd2u9K$dUf0lGY.WYo2m
%L\_n0\kaBZ]<4*r6UThP9F3EC>3JEa'KPCBUU0kR$GdlmQeXAVj>0r:Lq4_>SX0%3BeQIhL02a9+hKnXCPZo(Zjd0fWPoK2]`b>M
%U0N"R#plDE7Ig:"A`hla-$;OeN>c?'Oam<4\p#sJ5]%)R0Ha7H6>e_tPei^u5@J%hTE(LfB3'`qdtRc$SZ^MYdfo5lpq2Dm&t0H%
%-jbJWGs5?)]9WKS=_Jt'bKVS8ct!LHPh=3sg4H\d-^m?URsre5&KcGk2kCS1BD+,K61^*&Z@U&oRkIdALKQg&e=N)81pFrc*G]:O
%1q[+h:=P6_#LDQSfK'$Oip7`__$N8s@X('B&jJLm#,2koNSXCaR?6BXr&?g6!%7&LdVi!e",Vi#:d!B_Uq:h-G!9gRZ;Eo`^Yo7?
%;44'm4&o\O%D;$baJsMiX%,dBYc&r[)r(^9?=cn'c(`UeWgMIA0YKrqO=9:Q5fQ)$s3!lsM5h6&Cd[f=,&U!d"HQfE;*l"Wag84E
%fBWcb[qhi=/2<Hj#$mE9;87lqX-lqY;C,u6qgQ6fMM4V$>[D'9'AH6bq_5fUYp*pCV2d/1F0i*=^cMO.oS(t-q\*""'f3<Yd:(#=
%<)HdWK9^=Tf'1#?:b2]4$H<.tLq_*;OH.CKHN\GZJPQDPN[1m!&$Eb,f/O:#U:`Nk!;Z%C5lN;Q.]E^YIH_'XaF<fr.Kc.JS3(7+
%Rrtre@D6-aP05mi6/7@+ZV^/-.0h<&$KXB_WF7j:-8j-gPF86B0KPciHTjQs1fcQX>ZCT=r/`DoCe^%NlTedXDR&C`aulMe<j-$b
%G-gT@L;IPb/o:[F&Fr*<%;B+TJIp'$ipo1==B\#Q*O[4\+5UQWg&&q96IP>Ve>eQh^C)>5??/1EDA)5:&]Q!t<*-XUj-koIA$Jj_
%k-Cd]Fht@m/rQe9RYN_F3]>u*hh%<Ub]dAqBr"g*\akQF<j&h>USE^oM_3GYGbCIXNTmDInb6=O[hOM?>QVK#)rQKg%7*2=F.5Si
%En^m48tMD>;Oj.(aTfHK+<goJ8NW.2*&Z9aqoHtY'h)Br!;IP1nUh"KQW4X:QB`4]`3*kI6n"57LC63n]aK+)?U3&[i4[Z69]^l+
%EK_J?-g1U^YDeH>H%tJ!R]48m^/3CFYlOqKAG8=A7T-M0b?fW>.Z&;ccbaudR\YZ"3\@a9URs`p1R&\VFC\Y/bhn.A9Wu8]H+u<T
%5JH_Kgg0a,'=g5jSQW2@QHdYmBprrAH7!$;9Su?SD!jiH8\/_UH@^Gc!bS+B5e**D0?tRoKJ[*q(Rr8sW%^NuW!Teu,a76PcBu,?
%q6IPEJ+:Pqo=,\,Ru>hg[-fY:9Cl_9db%612)BrAN7e?!BP,KNABlPYAi#ugadC>sdii3ZdlBq<CbeGG$*uX:(FN_d!CUT.)7)=7
%Kp%DJb[?$5biZ^laHY?_P]r6eUPVPYOtrLI5r)$"c-GBXL9YC7a5@o^n;q2)An)U=k##XRPE&Lu_+0qKRuM-hba@(KOl5>,k(OEe
%R2B_0$*u'X[JoDd,g6tpK\:1iPNe*n`:5Tk7M#m4g"8=I6'7Rd2+a1gRmUge#(c0a*O1cdi7XC:[nV;@m;pL!2O4c`17^/TP8Q/D
%&DO%?B_8\)9d[qK%]Y0*R:0<1b"Mdb[N<If1M/F9As"g;Sal-lR*D;2@)d#+.Hkulf9qaOqP+YYiBqaBfbO-9[+]^.cH*A3(O$)Z
%WU<8eU,-:;1E_a;g!$+;\IN]9N+C-ZC0ZlTRmU(e-PL*T!HiEsUo".>b>JMa=q.R),g9k41F-Be-"k2\M5ZmjbiXkTW4=VrZ?S-V
%/"Co[Nm5NZUL9B_HcGCSa[Bd/<%Gn^VT^CLp.EIY<KO*%9W]IipPQ-F%3t*G_72n*FS7AN0:RmAXN["K#Ur%EQh<"?fe)G23U*i%
%]`)K1/t3\1Hl[WoL=C;_?fQ4.:L>bHQe<j]3mlDf[TJ@H73Dc?4KjBsajc_2S#DfbN,D7"%,kLH+\7XB\cd_rVTWf-iH4AaFNneG
%fhCVCf;<Zm-IZN>P>O,A2C5';:soWoW9H'!N3c*s1VeD61\Ipj.@MnG6*ZNNXAn&4Ni(\uq^3Nr0T.2]13=:;S:$_+$rD)'Q03`h
%g/%<OJpFrO!8*VZ$gO=memt1W8Gd_=C^/E>P@YCR4d%</CoVT3dS4(kB%BIMAZ7+8>V]0BTW'\uoD6`h(\O?GYUk1fBoT(RMRoX0
%X\WtgV!gN0mGI*M5.Ed?(uS)KhR6:M[0h56(K+g#aMXDq1Y%'s)ja1F;u1@E8PUkA]PH@"=lu#YT%#0T0g6l(l\]>L5^)_><Hnmn
%A#H+[oCQZrOq,Due5'.QWq_I]'qVdr9UQ4!Ve]M+,3jR:DHc&\UnOa((D8_]K%TcjR3C5piC9L`-'_Ou-W?lL_)#XY\O.W@p-n*@
%,+5b*oTB!B$bR-$li5MOJX@A4q<EoJjdoS6hC[g]C'`Y/F;.c6qHN>a>:o5%r1,_2.9mT]a+%*B2M?Ku@3h%[A#r:W!sQ#k`7o!l
%2?BB_Zmm"YncUO`Sn[<_b/mr+NN`b8EnmElLd@QRFURuJK(R?c*OcC9Z`3@n&Z2)r!HMR5fGUW81P)5">]1K^g*<Z&H9>2nJNeH/
%_OUr%%*NXg<[$X#(>H%0Ie8j3#*)66je5uA)leNj-nWlr?Jtb+<0\U<BC>%:@F&s\[0o9Gp]^Nb/+(oeY$O%!fB83?3qkrlpS1"%
%'c@kT2sIq,2!0g6b9T/LL0>@KQE/B3Y;_bMh"13sV`Bo*Z'9#sppj;*fp-foBoX(PH4(+GXG<#RcB,5#p)I>q$"b^s5,^2$kBo:9
%"1\.1FM=%K3?IO@^k:0EUd0/[U#mZmlOg.kA)\o"D<_76l5.2A]H-p`,mu;tpBmu,IEE_U%tZo>R[QmT`^:LuYN3OET@fbg;CV*3
%dUWtL+$hkU\J=fsDf(CDIan)`77[IG\J.L'TF#dV#7cn_"fst$O"rbj+66:\.l/ld*X_itccWmqb.!-uXm!ffEREC$@!9Sn-h=p9
%ml;g,6]_?>T`0Y\cm;eg:1HFtBINj[_Y(]CKG:7gQ5V^Qo>`Z,3IU_5gaOluQ\t6kjN:+MkDB*f,$?SVnrd5!aATaKQV6SVhM-:L
%pB,!sauUa?H%DlY8\`FF54pP64]LkoF(X`LShe2np2OV,]A.?\%/''QSmq<QU%0B26X5$+i;$S1cPWM*Rj8.$e#^c'LWOMr4Na5-
%OCf4?m3+#jl4S9$BF+*+E!Hc5`FU]qV)n36/$gO_gg4DYfDE^N<T:E]DR?4qL2?^dbf-CXZD<R26U#*MAY^rfE+Pkn)We#K6g(_;
%-/k+(X)^6C)MDgHdWe=jKic3-AJUY2"EVVQ0F=+lMK5^*p+=Y3i\UlW=X2..28f4Y';=+O+A!l@JmUclON>Ipr$*i3[tXfqN:"1-
%I3H-Ep"SPF1H61`*d"f9)mSftI'>XVKq9nU";/I(Rkap]8:3,.^N*IC*ml4.X()5GZ+#'RM/6T_*e+@!df]#F4I@5J\M`dgII$="
%4(MXc1WJZkiLkdodcnUIHcCV_(\L&l94<Tl*uJ:_IEr#'-mHNf9Ft8TR:*Pt"k8)*$'Tt<r.0=6,!7q3VC^A2aZn-\Mc?Bmlep0j
%(VO-M-;C%Gj;!-!Gu=*7_<%C-oY>Z&_<7"f=p83l%2E]5bLNp5>V6D@lfm1,$p7J:]EtMFF;)h46tX[[o8Iea`r@AqPETW-bI<+D
%acHe`L-e+\YOa.@&q>fPGVmE&YE=0cetQT)m<]H5`KcL'-oC,*3<KJcJ:?5c5rAS-&VC/,KTrQbO3e#1bfCKFY?)5/,OJ!#`h$TO
%YLCt]gkb6sN\TQQae=4Zk@3B1^)2$&G2L;dQ/=FCG5r`-Z/ta[bl57(!Bl9B2G%(]GY:^@jh!;ObQ/0:8+rR..ji9G+]*4sAR_n&
%\W>YHZ@"(rW2DdNE\4]_=Mj.lK4%<GDDE"B]F89BI/S'iQoEo3^061P0ehZ.acl%Lq`7t;q;&nuH!Shhc/;77GJBEl4o"0O/4],K
%`4emmk75^19bpu"G\.'e$E&He%lW;i'n'=.>HR;DI*L6]rL"H;6GCF5nQk!$k-iqEjW"@_bW.nN-`>pW/2$@IQ5^C0,%_NAh/djG
%Z>j?_.T&j1LNO[X5B8\BL4&hO8Y(f.8LE\Z.?d\Tr@6qZ8kd2hd+!8"?l_0sVNVqH^F4.]L9K8-\)a&KdCW0>Z7C"Kilb\Y0u/pg
%]5jbo7B(lHg*6(j^LnadY>_[;coO+N6f$$nba:_bG/kck>WsGcW6-SJ:BPO2+CoO,:kbla`=c*9jO"nPZh(R^iPUf$84](K<hXZ8
%ToFuSlL$[0K>h#!Ea_8-.&XHuqr#/09amqKI79]got8$UoT4Zd&rC"FOoPB1Nk&VJmfRUGM@#o9fJWecGYuCAQQ)&#OC2soR+hC]
%!KE;_SUL>g>hF*]L+;"!Y4a7W?AKr%r@Rf(S%C@?&sj=QgD=e(5X^nTi24RG%"\VaM"*s)rDO8*Fr'KL;Kg3J6_=E]P#+-S.bmE\
%L24uUW]>o2hH!rS5p9<-U_FjP;U#pt(uAghr?<ugGdU*M-$=<Kge<bhG#rB)EM`4ok,8k55n'#,(okrX'#TKR"@6tOqPFj/0]%4a
%0/k0='GJ2G\gW@GcLp]D47'[:G.3RDoUJ+G+--QK!KZpP?uGRhJc<HNPeN@\7-:PCYGDJPgJNOImIsEdPPt<n\D*gJ"?04]+R=>e
%m^VT7+6ZrU?OLVZlS@1dIe)A5V1lam5Q(2m1J2Pg(MJp.4'(i_[`jTnaq:'XZQ>/6Mc4h0g5.ZZ+^h=UE!mNF)eQ)"LIZcB)?5,p
%U0%6O,6T=,'IfEpETcf(<AiQt8$>#_H2031M>7rMLfKriaB]u^TRA<f?>u]+cde,Is%qfY?dK$Z1ld;A'rLFD6G1b4VDhQ?kc+gG
%b0WHTe>1#0?XJD)-7[)g,5ZQm]<ek`]&D99$ItW8F2aF06cNTjT\D.#l,V9\G$dPVbcbE3XTmMJ._@lMkSoID<5IMKiJps+8NdJ0
%+RiX+QaU5=rXhq>=#e'fOkO]f_s%_rOtsOOC@jS*E[lADR1UimICZE&=;[`%%)`F-Lo3)NX+@t;AAR2lk[co,nUsUgXFp7<K$o5F
%7(mgOh#jTRJo<@jh`=b4Qis"FWppQr7;2#!d+,&A9+Q\ecoA\q3-<0)"YYh1+><*?--\'A3B1`uBY`ORO]L\>CQt`04OBcp)MAe=
%P.gA?QQ4fj2gSb.Hd[%8d*'&E`9,^HKr5RnVTV?7S:g1)7]>LkHPlh6U]17CDU!)J04^FZnM`ER(9k"C;@(bg66S+uc?LI9bba@I
%?-mB8,%i`q:DbXqD#qb:^$lqpaR9ko@Kq/&EP^]X0^r.[oeOGm"mr.H[55%?F%,+ud7i#/1uV)N+g>5D&2,A*3t"&4q&o\93sYH^
%d]S-a"D9h8O],/%+\C'3@*\Egi_Hs,SaRi:Z6kGLZ\g@OERC4TT$Q'aC.h>RH50e(o%+bJ&Wf,oPFaB%?t!?uI'@NO:5ep.:-)O*
%P+;SY7TV#%Tt[2AYpK&#g_>N*:P+19`X(SS()PE6r#A/C%,$-#rg5nan\C/>0S7Ys=)\AsCjqW[.FVYb3XZeSa!aA.0l$A(DY=Pp
%bOUd+k."a>':_9A_uc&O.2=1@O(si&OAA6,+HsNbHh1-<kFeHhSK=Mq*9<VWSqmZIDh8r+^#uPYMi_]TotUjoUsS:UO=TQ9%VgSJ
%Ut7?A;e@!fLlgY_O%0UtbF9)?=g)m_Z.Bq+IOBn"/#!0u$-%Ls(p=f'(5Esa%?0I29,Xk0=#&[0m-D$ue*_"lUirXkS;:`-9"^Nm
%^A\hAeEDbNXXn^W92(YjPmhtTe5;N#jhYNP#ciIf_O%H`Bh3Lgo3u<,#F;WOKi?12k'\u*>"%lB=2*R?>%b^KT,hh#b$j=:$.Thf
%)9:Ea[$PYf"+/fp:Yg,uH=^RT`^5VMa2T[MAuE<4J]#SM]F_ndQPC+%LCs'4a.LhEpU@CDF3N6*Zne_jA)F(ZQbfGVn4h1Bm[Mds
%E^-JlV_]-WAeEdT$)Kc*S!bHQg6ONFbgp3_DJ9`4Y[dCOG`7jl$+M%DH]eRP6/d7:E#oO>SHC`*"a(aJ&)q$n%DLD[[mD!."nR@7
%4s&`+EERa[;\$Q9EH)U=Og!Z6GD[YGbl.2-)u]_ee;k7-`h)!`3+ir;a6bc1^8XER/H1)$^j&]\CgqYPb=*d'grnC&:'=TG0qF6_
%p1Ac$nS`kJ[bBL#\NHVIq5XEpJ,KK[n2Nlr,lDN-DcO6-?XPeBA"^+&H6@G(MY-E0P+'f!+n1F[^`p//'jV%Q9T0ChP`'T>b1V[a
%18(_H(5g%mX=(3u/:`hLD;%HNm#<;[-nCID\6SsO6*sn$;[RcGUJTlf&pm]45-f_"3@hog>(mZcT_Q8/LLEVG<MfSc@$`efXj:"7
%m#k>Eij>FN.33f!W]$qU4MFq\>b`WAJ]pT#6<i)=gsNnfSi\Uf_11:65JGm[f]iQQjPd0=lR20)`t#L[%-[EC$+P<k83Uh])OZj`
%$:*c02!\7/IpVg07`Ve&AErg,*ja=dCV<7!"V])>B>&*65bYUWDA)^^!QNA@iRC+OEbV2qDf3H6hrZm1GtL`A3!D[:[2:idCp#)(
%adi%poR#V/e^7b@K/OnkC!Go56-<RM/rb8;i6YKUbdNB*$r'K1jo$YGmn(B,G0X>_^pC@Gqo%L`c,Jp*O%)^_:VVrBG93^r9bK5\
%gb=4=0qiWVp.6)c:/-1`]1U9VPeY\]&^1J3)K:Sa:Cq-Xa*^(^;RGUsb1t\OAu;lL(0fSL3d(rZLr[2%jgACFU/li+e"LPK%:.u?
%WL#:G1C_VA1,'iU?kDl/Mc<Pk41WT,fd"FZq@3Epb;HW?1mb$BdgtMO6X)"&*/&R\9re!$/SNc>3(,hWYejj1n%mb`*mij^1^QRD
%;=*c0ms6U4mB^F8fRqO2fTdX\EKD'Q81OHUasi[JGB.TFM0i&8Z"6&1@)=D\R^Hs*Lp)mYa]g8$GD^nl6Pr,2EYdEK>c+a7&/&&4
%e<KthY?VmoG_/4`$9l=Y&Y]BWKBauuW<&\2Y<9Ro&\Z8k`"4&SQD:\E+@k%M+VpJrT.H$YKMAd>W[l\I($QnNl7)`Nrl%3nim8Em
%;Gbn-,-"%@]i%/D8?()[8qn@8WiE@jJLX-l)t-Z2>p2N03$=;:/Xe3:6H%[rVSZ<OQ&g0@_dbc#`u;Sa"t*I2Q)AVCY:,BZBFT+j
%N@Z62ku;3[/f:!;5S4&#(.)mEiIH&L!\A+3T''&Y[I+,#DCahhGG`R`a/$8eF0&7`T)<DW?QJe$<I=;t%s`/@LU?Tc3,]fgFt^d]
%pUo<jKj1g-g%Bf-3KGlsC8bW'*CY<QS0*OpgdWZ+4ubo(=9'BF$6,!$*Nr>b`Jm<"EXIDS5V"5eW-p:N@GqnWlLI@_6s7FV"sLf%
%BR&mdoR]@iroqQ2-FJc>3u16QB_#`]ELAeQ:&+-C0_rno:;#mB#8-#)U"U&SagYp**Mr#GA"Mrm:!f`SRN0sJ*V<oqgIdmL\_#7V
%#3g>o5!HZCN6QAh@h+.3NUgXKOffO7q95"o9)<iCko,Dh0@d_Ld@"-qb`#>hFNpg'#[O:F`%Dpo3!5f_0)O+8fWo3=7/+D4NC/A9
%1)ae1@!pddd]bVFneW6d;-$@F0Z6BlkV3WUr=OD4q^in'aI(M$XHpb"(YNH/:qV(072R7#LD/&-8J7Nd""f`Xr>?o5<sL_pIP=rc
%1ha*qKGuk.JX(gB%.S`XZ"4?@]3m[j5oIU9;70OY@<?b.jC/31M!-Gt^<eBcU)>>qN#J>mnX,,1eqGU6-s=M[p$k:Bc0K#[?Cp$#
%+jr4R"UoZa'kQ&Qh^6KWPJ4=*\!/%MZ"8!SJZcN7`L@b!6.-/K._B.Ynpm0U_n<K^4$ua29<dP*;"/RA(6$Q[@:A:**I3Z&,7W[j
%(sQ3ETY1cGE5B$fqa&V4@LMq2_o**)?ak%mTBapBT[JjCUl`R^,gCj<)N9T7*9If>s.oSBd7Kb0VUu,r&O\R\9PlF\kF4.1pl%&U
%3.bAOYZ+XGagiT4.h+s;Ynl^6I;Q[>KkL5Z=h=&i?fKEugm\ZpL46,mo;(PMgf4I@&RmA*YMo?rL"R%)*Kd=WW;E>Rr`'Prk[MPK
%`dPEpJAT5h_@<\'RjRMjf(_7:MV\).:2V+aE!LBWZ%nC(kBg[`U8d](>h]k&mZG1AiIMN&aUR(FVp&SqYj.sUZ\!$VJic?`2r7pm
%0Q;`jk`2gBAY5X/0!Inr_dDULg#`M8/"3s?C9#;&:Tsdd>.u@'Y<X#j?gQgWX1u!10=r.iD9/1Dq?cd3Y&d4)c)L*#"*LB]5WSi)
%DZ_"(LR8K!+X[O6E2Ah(%jPtuO^qp)Xs$P;1u(r%!?<3R*/ARAF='2(J[JGE+!U7cQ*QK91%Lt$?^*"Lg&DcDSS@l:WV7,HaJ(+>
%@`3\Hb38="i[83-K>8&>&-$$+@8dDl?fpEsb3WrGZmG6b6T0FFpppX.\9sAsF?Y=3>M=9V/$/4hc:`kIR6obr+!4JKmK+_bc_huQ
%fl1>Fo):J3<!<)E5$nTX)bD5S!Sr5gYH#/6aB-o<PRo,AA;[N(jtidQ?"f<p\bRPpP@`-(PdJ%@?:+r(:_/!c6]1?BB+tEPj^&3e
%>SL?&*kCJPmS"B]@B6-Hh$qZ_=aT7I!SlYn,u%&P0:fIWLEll2c;2SeM8\R(WjqW*37`tOomZ_0\,VfYpcZ]4aY&&!SH#\Rhsm\p
%>$iI9E=VdX07EWU71Dt/)$ghQN<umA-Up';%&pZ(68Q!P?om'MqW\JGPr,_e#0X&K:=["8keq14h/&<]O#tK*GF9I+KI/O\q<".X
%il/q:%#0WT-egQ.aZc9r6!M(b4<rXs'UJX'YqopBf1@WbY!j:#`u8K39*VHZ67/?b"qMh3X];<V-BrDug#c+h(K_a.=/8S*.#?P7
%.t.^(b#r_q`*tPIBF(LmfOonP0j0LO/!URH7\OhLnJKf;@AZ!Oqmja!`%<S:TkH=MT>#-`iX/4f;BV*uJ9D\X;SBA%TT_[M:ie+R
%[3(cAU"WPY):!PXb*'sbk?Vd*$Yk$al.CHuL/FV%K6.H'fV4!]A+A1P0Ia^>3IjCn$.hUGq)fn^I.]cB=M460Q(W%0lZeL]nVpG!
%[*iSq*(&m+5.2SR<"s=0Q&K.fgiALOPWfXRnaLBqQ/0*Yl^l=Q(#uX9l!VCm]\T?9n-]#@!)WZD(Us`"cMD"]8Aice,%i,-R!nL$
%i]^]3V:jjJ)1+6=@dZR9*B?F3U0bq=%&BDY>GD283\$D;I.e-j?Nl.G3VSGp0DdK,cUD%Y5Q(lLD8X3'Bps+<:,+9i9)[%3?FnHM
%H$f+DbaE0iVa*rcWLk5PFElb4BIpCpR2D>]2?,g-nAS&qnX\tGQfB$Oio2,/^^_a"3!stTF$7@(K2S5M6!Pb53#@scI=j9oV)WOK
%<=cJs`pE#eH;^.d2mSZGN&*D)P8@dK%PAnN9jSZh;_AF"Qo-,-3(^Z]`Ahpjs%S4p9[IrS23*+=W<oC>-g<9]N&)%sc!hZf\b+9&
%qT&`$8Mrl1;N51ZF!XC8c:#`QMK&dbo"nkMNRZr)\@!$k?7QA`]G/EK%sX46_[=Ah9.:?P84ml</\TM$E[rr'g/s6MNJCE%0Dk@]
%GFLKK4%Qri&kB/N=7,IRFZ9c8\?lf[L&BCd*5cNb*u(),XOc@3luGK7:(dV?*R;M%'9)uDbY$>4QLU>*iC57bT\kZliN+Cb:R9t@
%8"/Uh&0=TFQJi\U7Z0QWGT/(3Pi5;0$dpf#M((2_L1<aNNI(p7Z=BY%)3//#1:#O"[*82Vk3XWX?sSu9(JNOcKk%"qhMj9rV\@"t
%3Y@L91)sfMmSU@8@hXlu<8l&X_CegH,W@[)E"l]=8AHo@,Z#GT]G=u]=bssCPsUui(#ZnpT*<do`8U)V+c_*p7:RVRImIqqkTdek
%ETSIU9;H*"0N2O/c9\6q*l!T5]Fa6g5h+CULh>UZ8KlBDUf1TRHZ`>2+dr#Ea$_56gt&M"D/t5;?s/4oo(e\OKjtIdcasJ'p8:\3
%H`ksZ_)522"&VjNlC&T9"jM"SLimad]F#Zr=bC33kO9$tMX(=4(Iq"#<B,_la@h6M+UGQ6J74.Jegh!Y1h=7"iCloJdjc>D\SfE:
%J.W@GP3^'"q'&BBcJ2N?8Z8*9Lsml3E2-[`1Q7&.0#=X*3@\rm1S#0Y-htgAcl/F2).Zp'A':I<7BDT8rU_3kUJtti]hf!akddus
%KJRg%-^lBORR:GggI8-^-75*o&^K1E9c[9!!gF4[a]#1U0s(MjW][;\03*#R;dS2%Db3Q=eq<pJK,(GL@X1+Fl*1_Rg@\q??/V=D
%G`ZY3-OR385r?99KhXjD?uCiI5"nlVKfE[]e6qD.6Cc@[b)^K-QN,a1\P2bU!m^@g?QG)L.H(pDK6^93i-_]J_OPdBSqI]/RI&)4
%TjV&E#!T:EA4mt`#*gccjN56qLj9K@`nc9jVA]a!GPTpC7Hi@LB%T*m,mVB'g/'#I8Y_-oZ/qH/@!C<DScN%9X4h#2Wj*thb"6fu
%5aXQWHBY;4"T-stF7be8Y3b,ToTa:1!nkNY3NP%f8^kO25'68-!?7SeeNu)l#5Au1,Dm$AXG.Z+Sc[s>N)*5X&rkOd'e[f>P?Af7
%NTS`_V",guf[`cAl3hH116.Z>Hq6,)m&Z#3dm>Z2&;?#7Kq+W!g6u+6>nlqs%\/Pe$.$n4!HQDH?uG0F!9*#7%R,E@A:@bo'n_,K
%H2J>07m=I0Bk23ij+D>&,\=`r0Nh(I,Fim"9C8XEZHPf^*c+YW0D*]'a'_FIqj')1"6)`+@Y":1mUMPrlBAmm?LEN/K=[q?-RES_
%]sqNNSC-2froIg[hu0jV\FDI)6Vp,bEj"F"/K/p>qIYl;dmg'9,3u49kS:@^%<V>^?[TC-lD/*.<B)h/EW+7Xn&t/;R6mr_P!eRp
%"#(4$Zj/bQgd^C@%JHD=,+bb*cL>hr%DBtUd(n!c$%rZUjFoDl>:2_'nMnN:4(+`DM<npl;quQ_^b$c93Xh&ggj#BS,Qkd-%E;jp
%B7Mul!L6s,>G'%'/KEXMVU602jA\8$ig@a>@DHmn`oMU-/eF+;oN=cc,"&EtAk*i`o7Od^f]&E&;.02WcAXn_LkaU@L>\`%ULi?h
%8]"t%@$=B3Uqq*q^RBrE'cjj4*>2oFR*M"`]-/K7N!DG6Rhfh6N['.G\0<q=C`tM_)3`V(Gs\"*o5Nt!rT_Y1bR$p"jD&,-"@dk&
%Z8#ISYtQj"[+3e\TS1i='-p;:6WMW[\+:(G>T(3Q?IgE7_I!ntYZ3@P%-WPh_N>1jniBn&"j$o;MRfgT.KL3-OYKN:3gIKQ7R%=U
%1^(NmH;[<mIVd4Go3XaZl.P-n/dJpZHn`C6neq9^6_FY[L6jB3.Z8bh\BO`K[?I84Ve`)W]bjk9T9MdVe5jb+)^,_.[;1@h#Tbib
%YljdSL/$E5bY4cH.p0giK'C"37H?l3%"K5<ok?6bougejS%QDR42*].@@V=4!&Vf/H8iF$WGjb!:u\GHYcjkND0<oZEKX$1^iQBf
%crk5$]C+[VG)Cm1!q<?SS6%/+;,H).fJ/0lXHA72MVR!Q*,UfNHUKUU)K^;C'GQ3V$5*c^lV[u(<'RUQ3YLV^_YHVi<dgm*eDK&F
%9h%-P;8KTD%=->Oj5h\9U*+\7f"D<hr,Q02J[fb:,^hpTL+GIh><2hYBm5lFp#BBr^ojOJhD+(a]>>Vj;tRTH*\>6O&t(ng]G-up
%/7"1.p76OTFN-WE!?2Kmh,0"X-[g1sC>c'QgJ9W%[2YPC&EDWqNgkddc;l;93ndt@09,71B?aX[bo%/%+<CsHNEn-(Ib>Dq?KrE!
%\8G^CqPeE.I&+'4a`ZppL;4j1Sr2T>+pBcWAKV>9\L4[#:I=rjU6S_F907KI1H)TjIBZD/D<\'i$$kpCGWpj*Y3qQa#=6&snaR>c
%,BO`DI>BbbdFYA&d9X!%1>$@YP_r7?`4Nf`Re$!8R=u%Vm2+p;A=d[O'A(ICdGpO4K)K/260*G:ahc-sH_^Lb>X/'S20kWJJiSbA
%IZ]g)H/823QD2l0qk:5bQ+J+B>^\ZYIUlZRdYId?qrI+NrNIt<%>UK'[2tj8qdBlB'.`HdGA%s[A75&'q%6aKBqbf-L#$?D7D1I<
%g70>X+D?m%;U#3K[:d&7g'eh/HP#:%-cg=#cBn1)ja<0VK+Ra_[I\LpZ?uq#b-A;1%*;`3#dGYZP9.$;Z<`\uFKt(n@q^*qH@^u[
%Jt+-o=@,aj-,3;ZKpNG;IK%50n[QPE#23CA]jS50QLmk`]FkH=#(bl[C(OE00#%kM4_>DMf/Z:MKk,L5_(umDTp-gYV@MT5GND?S
%D\lJ6EftAXJg<#,RP9?`#,L@>O1h\tRGUS+D6Y%MQB_$qcle[N;Ts4;;SqQ^X.>e\N6gYffEgh:,?W0C'83-!"O*Sm*]dn)m6\m)
%3d;VBJl6;r=(8SOHrrA/'Vn[=F792(p81gOp=s!oFj=3A>5NV-C;t.7n*'598nE*6_!B$f#\_r$)f:4j(*Y_I`q\8p"PjsJO0GN5
%$>;(N.7*#BOuG]S,+Su;>.Y3++HO3-G4[iW#2Tm&mIM>JR+lYVH#JKZOD72i!)4Q3I)+;fc%q)!TXo\.lDGR102aCN)+0J-o6iU;
%J5n:q/p2N`=Sk.$T$kW(&Knc*-,Ej\SK0K]FjZbmXs[uj"n<CVKY1@:.[VCVrF-Fs:q=A?MK0jfjaSF5aSTNr8/SZdoYcXFl\-Ic
%YFtX)cmhBBN*0+u#RSH'6?IKJI[B-mMTlM-(MWXA^a_B^\MH#^+N;"*82odQDFuasQDhV3)c;?Oe!f&@\9=,Y<amYP-]]niC2%Is
%^iW8'ItMWp0Ra_@a4X7VDFe>HO=.+bbfFuQi$3-eMfYdk:e1Xbf"6c)T=<=k`'N-8`ZSfHru`oK=taB]9-n\mk)hs>l5aJ042&?t
%o9Hpn5]tPk'ZG.Ji&aKHJ+r;gjP!0!Mq8!o<C[&X:0NZ7.6#-tT$#n1O`gE/%;9DtbT="Eg$kDLQed@.,JAo)-=<:BbQWO/e\#I8
%l=CaJr+``Vgd7PPJgk1j?BI8f+>F\iD_U5?'jQKH.eWVp"sBe*eSfeRj)?pd8Auau5Hn'SM)2@Z'AtHeibDS/0eLBHFe>(t$Zrp=
%s+Ih=j#Uje-4>+%+O95?]F`[MT*%5`50.I$haW;DC@pupoq29KO8n>!qZ$KF^\k9bs61Uis7S,GncA[Y^]3rhTDurM5Q.3]IfA`,
%s67jZqs!jIs7"KErpn[Us7H&Xs6n"Crp]+.IfA*Zs8(KrJ,%durp,%N@NW`'r:,jJqVOKNs8N+U)_!l~>
%AI9_PrivateDataEnd
