%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: fig5_planner_arch.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Remo Pillat
%%CreationDate: 1/10/2022
%%BoundingBox: 0 0 519 423
%%HiResBoundingBox: 0 0 519 423
%%CropBox: 0 0 519 423
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.3 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-01-10T23:52:13-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-01-10T23:52:14-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-01-10T23:52:14-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXkv/ADkL5q1zy9pOkyWGpT6XZXEt0L6eyktI7tnitXktljN3RPT9VQZePxce&#xA;nfFWJ6Pq358TnRr6FdUujLp2n3CqEsxYS2jaOJLr1GlX1RftqBHHlt7ccVX/AJZ2H5u3/nby7f8A&#xA;nC1vpbXTZ76SO7vY1V447zTo1KsVWPb11YD4RTwAoMVfQeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpXr1zHGtlA1guovdXIjhhfgFV0iknDkvUfC&#xA;ITTvXFWv0jr3/Vo/6eI/6Yqqadqtxc3tzZXNobWe3jhm+2siskzSKtCvcGE1xVMcVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSrWf+OjoP/Mc//UDc&#xA;4qmuKpVbf8pVqP8AzA2P/J67xVNcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdiqAu/MOgWc7W93qVrbzpTnDLPGjioqKqzA7g4qll5rmi3+r6HDY6hbXcq&#xA;3kjtHBNHIwUWVyORCkmlSMVZFirH5dY0nT/Nd8L+9t7QyWFkYxPKkZYCa7rTmRWlcVR0HmXy5PMk&#xA;MGq2cs0hCxxJcRMzMegChqk4qmWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5x/i3zD/wAtf/JO&#xA;L/mnFXf4t8w/8tf/ACTi/wCacVd/i3zD/wAtf/JOL/mnFXf4t8w/8tf/ACTi/wCacVd/i3zD/wAt&#xA;f/JOL/mnFU/8o61qWoXNwl3N6qogKjii0JNP2QMVZRirsVdUffiriQoJJoBuSegGKpV/izyr/wBX&#xA;mx/6SYf+asVd/izyr/1ebH/pJh/5qxV3+LPKv/V5sf8ApJh/5qxVL9Rv/IWoSJPPqlil5GKQ3sN3&#xA;HDcIPBZY3V+PiteJ7g4qhP8AFaabUrrWn65aDfibq2t70DwB5JbzEnx9Kg7k4qqr+afkH0DJJrEE&#xA;UynibNz/AKSSOvCEVeQD+ZAV96Yqpf4yj1Koh1TT9FtTt609zbz3jDvwiWRoYj3VnaT/ACkxVEWN&#xA;35DtLkXjavZ3eogEfX7q7imnAb7QRmakSt3SIKvtiqZ/4s8q/wDV5sf+kmH/AJqxV3+LPKv/AFeb&#xA;H/pJh/5qxV3+LPKv/V5sf+kmH/mrFUzhmimiSaF1kikUPHIhDKysKhlI2IIxVdirsVdirsVdirsV&#xA;dirsVdirsVeQ4q7FXYq7FXYqyfyLLFHd3RkdUBjUAsQO/virMfrln/v+P/g1/rirvrln/v8Aj/4N&#xA;f64qkvmzUFi06KW1nX1450ZSjAkUDdhiqrDrEOqeXruVaLMsEizR/wArcD+B7YqmOk/8cqy/4wRf&#xA;8QGKorFXYq7FXYq7FXYq7FXYq7FXYqlXlP8A5RXRv+YG2/5Mriqa4q7FVI3VqLpbQzILp0Mq2/Ie&#xA;oY1IVnCV5cQzAE++KquKrLi4gt4JLi4kWG3hVpJppGCoiKKszMaAAAVJOKrndERndgqKCWYmgAG5&#xA;JJxVyOjorowZGAKsDUEHcEEYq3iqgt/ZPfyaes6G9hiSeW3BHNYpGZUcjwZo2A+WKq+KvIcVY955&#xA;1HWbDQ1l0chb2W6tbdZDH6wRJ50jdylRXirE9cVebHz5+ZlrYM1w3rSXEIMcyWDfuGj1B7N2YLy+&#xA;3FH6lSppXZaYq35f/Mzz3qOraZBIAJmNgt1pi2UjGQXEskVzI8w/3n9NIvU+L9QxV7Tiq8f3Lf6y&#xA;/qbFVmKuxV2Komxu7q3eQW9T6sbxyp1BRlPKvyG+KvS9J/45Vl/xgi/4gMVRWKvnqy/P/wA0a1qU&#xA;Volrb2pivbCSW0sneW6SKa9kt5NPulmRQs/GGrcR+0KYql2of85E+bryHSru2k0nTQt5atcTtPKd&#xA;P43lhdTfUL2Vo+aT27wp6nD9ogfDiqpr3/OSvmG7hvtNs7KDS7qbQZL+GVZC11bXY0tNQHKOVVqv&#xA;xkL8BBAryryVVWefmh+cWqeT/ONhoVpaWVxHcWsF20dxLIl1cGa9FobezRFKvLRuYDdgcVYdY/8A&#xA;OQ2u6bqGj6NdR2uoSXIuTdTzSenc8jPeiCiARqVUWqL8Cv1+IqePJVEP+f8A59ULZ/ofSxqskK3y&#xA;1luDAtq+kPqwQkDmZQkLIf2Sadt8VQ17/wA5PeZI7u+jt/LtvwhtIpoY5bgiVWkjtpBLKo+L0ZPr&#xA;XFGCDoNzuAq9+0s6odOtjqogGpemv1wWpcwCWnxemZAHK16chXFUViqU+VQT5T0cDr9Qtqf8iV8M&#xA;VeeeXvKf57aZdWE155istUijWGW+tZ3lVHma2e2lRHETv6cFEkAP969WbgcVY5B5L/OTSH0mJvME&#xA;p1q8vGMEY1C5lsgE07nI1yJop+dbqMu6hVVuTBeFVoqzHzt5G87av5s8t6tbXsTwaazpOYJJbAoH&#xA;uLaYO6hp/rChLdwY+SgsVqKA4qxrTvIH532dorS6nFdXcl1Bd3EB1TUFgYxw8ZE5qUlVZJWMremV&#xA;QGimN1xVR1r8tfzf1vT9R0y51GQ2+ozalLdyXGpzLE3rLCtvFFb2yJS2MaSQiJ34jmZGUlVQqsk8&#xA;76T501Pz6lloWoyRQz6Qx1CynuWWxCSSGFqQiGTm5UtRqoQaGtAVKqWXHkb85Jb9by1v7fTEttMm&#xA;sLC1t7+6dEf9GzQ2zyIYooWMd2yOzGNiaim0Y5KpvL5X/Ot/Qsx5ks0t5L/6ze6oisbhbeeyeOe3&#xA;ggMaxqkNw3K35O5+yX+wQ6qyTQfzykExXUdLtruW30yEXccs8iq9pcubiT0XhQMZopCz7josfQc8&#xA;VY559tfzV07SodOuddAlt4bsaLe2U179cvJIWU27XEdtFBHLcyKyxCEyCOrM59TjQKptirsVdiqH&#xA;isbOK7nvI4US6ulRbicAB3WKvphj348zT54qiMVT3yppVpqU1xFdBiiKrLxNN6kfxxVkn+CtD/lk&#xA;/wCDOKu/wVof8sn/AAZxVKfM3lzTdP04T2yv6pkVN2rsQe30YqiNL8v/AFDQ7y6uF/0yW3koD/ut&#xA;Sh2+Z74qyHSf+OVZf8YIv+IDFUViqQeW/IflLy1dXV1omnLaXF4As8vOSRuAYuI09Rn4RhnJCJRa&#xA;npiqemKIoyFFKNXkpAoa9ajFWwiBiwUBmoGam5A6VP04qgW0HSG1wa61sp1Zbf6mt2SSwg5+pwAr&#xA;x+3vWlcVR3BOfPiOdKcqb060rireKtBEDlwo5kAFqbkCpAr7VOKt4q7FUq8p/wDKK6N/zA23/Jlc&#xA;VTXFXEAkEjcdDirsVdirsVdQVrTfpXvTFXYq7FXYq7FXnf8Ag7Xv98r/AMGn9cVd/g7Xv98r/wAG&#xA;n9cVd/g7Xv8AfK/8Gn9cVd/g7Xv98r/waf1xV3+Dte/3yv8Awaf1xVPvKeh6jp1xO93GEWRAqkMG&#xA;3Br2OKsmxV2Kqc9tDP6fqqHEbiRAenIVoforirc8KTwSQyfYlUo1NjRhQ4qlUOg30MSRR65fLHGo&#xA;RF4WRoFFAN7bFV/6G1H/AKv19/wFj/2TYq79Daj/ANX6+/4Cx/7JsVd+htR/6v19/wABY/8AZNiq&#xA;W6vp2tR3OlwQeY9QhF3dNDM6x6eW4Lazy0HO0YfaiXtiqv8A4Z1r/qbNV/5FaV/2Q4qh7LTdbXW7&#xA;yxk8yahNDFbW08ZeLTgwaaSdW3S0TakK4qmLaVeoVVvMF6rOaICtiCTStB/o2+KubSr1WVG8wXoZ&#xA;6hFK2ILECpoPq2+2KtvpN+iM76/eqiglmKWIAA3JJNtirho+oMARr18QdwQljQj/AKRsVR2nWUVh&#xA;p9tYwlmitIkgjZ6FisahQWoAK0Hhiqskkb8uDBuJKtQg0YdQad8VXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlWs/8AHR0H/mOf/qBucVTXFWKeZbrUbQea7rTJI4dS&#xA;t9CjlsppiojSdPrrRs5f4eIcAmu2Kvn3ytqf5l+cJTe6FdX2szaLexS6ZdajJZzrBdy6HdhyZLYm&#xA;39P65KgArspXlTfFUyv9G/OO8l0m/u4PMclppt3JJYTj6gdZhll0t4bk7fufQa7YKnLfhyp2xVV1&#xA;m2/5yG1C5vNN1W2vp9Ou/L11Y6hAgt3tZLqXQXA4ekFo76h8J679whAxVPvzMv8A8wLK58o6B5bm&#xA;1WDUZPL93Itlpf1fkb62S3S3Nz9ZHD0UleklN6HFWPeatM/P3XL3zPp15BqZ02eGQWsMBgEDSW13&#xA;bPEbZ14U5xJIQDv2LFuirLvy98ueftH8+te11KPQdX1fWZNSs7r0zCIDDC9lckKKrLJJyVmrvSm2&#xA;Kva8VdirsVdirsVdirsVdirsVY7/AMrF8if9X6x/5Hp/XNj/ACTqv9Tn8nE/P4P58fm7/lYvkT/q&#xA;/WP/ACPT+uP8k6r/AFOfyX8/g/nx+bv+Vi+RP+r9Y/8AI9P64/yTqv8AU5/Jfz+D+fH5u/5WL5E/&#xA;6v1j/wAj0/rj/JOq/wBTn8l/P4P58fm7/lYvkT/q/WP/ACPT+uP8k6r/AFOfyX8/g/nx+aP0nzP5&#xA;e1iSSLStRt72SIBpFgkVyoJoCaZj59FmwgHJGUb7w24tTjyGoSB9yZ5jNzsVdirsVdirsVdiqQa5&#xA;5mvtJvAj6RNLYEAjUkdTCppUiULyeMDeruoQd2xV0U+oavdaVdpbRpY28zXP1lLhJldWt5oQE4Vr&#xA;8Uo74qn+KpJenUrLWbrUYrVJ7SW0gjeRpli4G3ed3LcxTjxmG9cVQWieZ57y6itNN0Rv0bUmTUYZ&#xA;IhZpU8qo3w+tyJP9yGFftEYqyjFXYqtMcZkEhUGRQQr0FQD1AP0YquxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV8R57U+bJfNr+jwuEe7iH7z0XbmtEfiWo5r8P2SN++YOTtPTwNGcedcxsaJ37uXzcmGiyyFi&#xA;J5X7x5Lpdd0iKQRtdx8y/pEBgeLULfFT7P2T1wz7RwRNGcbuufI78+7kiOjykWInla2bzBo0UBmN&#xA;3E68GkVUdWZlSvLioNTShwZO09PGPFxxOxOxFmudJhossjXCedfNFQXlpcPKkEySvCeMqowYq3g1&#xA;OnTMnHnhMkRkCY866NM8UogGQIvk9n/5xv8A+O3rH/MNH/yczlva7+6h/WP3O99n/rl7nvecG9S7&#xA;FUt8w+YdN8v6adS1JmSzSSOOSRV5cfUYIGIG9ATvTMnSaSeonwQ+qj9jTnzxxR4pckQupWcumnUb&#xA;aVbm0MRmjliYMroBWqkbHplOTHKEjGQohsjMSFg2EBb6vrc8Ec6aQeEqq61uI60YVFdsgyVP0jr3&#xA;/Vo/6eI/6Yq79I69/wBWj/p4j/pirv0jr3/Vo/6eI/6YqlNzpd+08t3Y6XJpd/MeUt1Z3MKeo5/a&#xA;miZWhmam3KRCR2IxVoah+ZSx+h+ibGWQ9L83BRVHibUcuRHgJhX/ACcVWx6Tqs0gn1jTn1acEOq3&#xA;FxELZGG49O2UemOJ+yzhnH8xxVOf0jr3/Vo/6eI/6Yq79I69/wBWj/p4j/pirv0jr3/Vo/6eI/6Y&#xA;q79I69/1aP8Ap4j/AKYqi9Kv11DS7O/VDEt5BHOsbULKJUD8TTaoriqKxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KviPPanzZILjy3oYlCSXLxSvyMaGVQwjpJyVQR9n989f15pMvZWmEqMiCbr1Dl6rA8vVL9bs4&#xA;a/NViII9x57c/P0hSXQPLRdzFecWuWMyhJk6BZEJWnUUdt/xyodm6Ozwz+vfaQ7pDb5y3+3Zmdbq&#xA;K3j9O30nyP6A1H5d8tLD6aXh9O4RwQJko6jlVthQ8ObdMEOy9GI0J7SB/iG/Pf4WVlrtQTZjvEjo&#xA;duX30E00nSNNs3nubI8xdnmXBDLTkWopHarHNlotFhxGU8e/Hv3952+bh6nU5MgEZ/ws98h3/nez&#xA;e9k8orM16wjW4EEKTt6XxHdXVwBypvlXaeLSzERqK4d6skb/AAIbNFPPG/Bvi8hbLv8AEv8AzkR/&#xA;vm+/7h8H/VHNR+T7H74f6eX/ABTn/mO0O6X+lH6nf4l/5yI/3zff9w+D/qjj+T7H74f6eX/FL+Y7&#xA;Q7pf6UfqSbzdrX5w3WhTQ+ZY7pdIZkMxltIoU5BgUq6RoR8VO+Zmg0/Z0coOAx8TpUifstx9Vm1k&#xA;oEZb4P6oH6HflVqvnmOe6stFQ3WjtG51GGYkW8alTWQP+w9OnH7Xge1XtFg0px8WU8OT+Ej6j5V1&#xA;H3d7PsjLnE+GG8et8n0jpP8AxyrL/jBF/wAQGecvYorFXYq7FXYq7FXYq7FXYq7FXYqlXlP/AJRX&#xA;Rv8AmBtv+TK4qmuKuxV2KuxV2KuxV2KuxV2KuxV8R57U+bJVq3lyz1O6S4nklQpG0RWMqoKsCDU0&#xA;J/a8c1mt7Kx6iYnIyFAjbuN+Xm5um108MTGIHO90KvkzTgvEyyHYAseFeshJ+zTf1T2zGHYOKquX&#xA;2f0vL+k3HtXJ3D7fLz/otJ5K09Y1T15iApU1KGu7Ff2ajiZDsCPfBHsDEABxS5eXnXTauI8vik9r&#xA;ZCbqP2+Xn5J5bwJBBHAmyRKEXtsBTtm6xYxCIiOQFOtnMykSer2X/nG//jt6x/zDR/8AJzOU9rv7&#xA;qH9Y/c772f8Arl7nvecG9S7FUm83eWLXzNor6RdyvDbSyRPK0dOZWNw/EE7CtKVpmZoNbLTZfEiL&#xA;IB+0OPqtMM0OA8m00XS9F8tXGn6XbJa2kVvLxjQdTwNWYndmPcnfKtRqcmaZnM8Uizw4Y448MRQR&#xA;2k/8cqy/4wRf8QGUNqKxV2KuxV2KuxV2KuxV2KuxV2KpV5T/AOUV0b/mBtv+TK4qmuKuxVYbiATi&#xA;3Mii4ZTIsPIcyikAsF60BYCuKr8Vdiq2SSOKNpJGCRoCzuxAVVAqSSegGKuililiSWJ1kikUNHIp&#xA;DKysKggjYgjFXSSRxRtJIwSNAWd2ICqoFSST0AxVtHSRFkjYOjgMjqagg7ggjFW8VebyaZ+REUjR&#xA;yDSUkQlXUygEEGhB+LMs+02Yf5b7Q2x9k8hFjTyo/wBErfqP5CeOk/8AI0f81YP9E+X/AFf7Qy/0&#xA;JZf+UeX+lLvqP5CeOk/8jR/zVj/ony/6v9oX/Qll/wCUeX+lLvqP5CeOk/8AI0f81Y/6J8v+r/aF&#xA;/wBCWX/lHl/pS76j+QnjpP8AyNH/ADVj/ony/wCr/aF/0JZf+UeX+lKe+UF/LWC+lj8rPYi9ljrK&#xA;lq4ZzGpHUVOwJyrL2vLVVGWTjpEuw8mkHGcRxg7XVMtyppdirsVQurf8cq9/4wS/8QOKu0n/AI5V&#xA;l/xgi/4gMVSfzn5rfy6NDK263A1fVrXSnLPw9NbnnWUbGvHh0xVI7P8APX8srqK+nXVHitrC2e+a&#xA;4ntrmKKa1ikELz2zPGBOglbh8FST0GKqM/59/lxBo41SS5uwgmmgmtfqN0bmFrZEknM0Pp8o1jjl&#xA;VyzbUO2Kpj5W/Mmz12881fu1TTPLrwmK9jYyevBNaLd+rx4inwvsBXFWNap/zkZ5NbyvqWr+XfU1&#xA;C809LS4SyuoZ7P1ra7vIrP14nlj+NEealV/aFPfFU5uvzz/Li1vtTs576aN9KhmuJ5WtbhYpEtpB&#xA;FP8AV3KBZvTdqHhXxFRiqmv59fl02mNf/WLwBb2DTfqhsbr601xdQtPbBbf0/UImijLIab4q6X8+&#xA;/wAsotP07UDqEzWuoxG4EiWtw/1eBZzbNLdcUPoIJ1MdX79MVT7y1+YnljzLrWq6Ro8s1xdaLLJb&#xA;6jIYJUhSaKUxNGJXUI7clr8JO2+KslxVKvKf/KK6N/zA23/JlcVedapbfnd+kdPniu55rU6tfPLZ&#xA;QR2KKLK2uiunxzyM0bencwMzyupZgqooQOWYqpd5d07/AJyCt7Syh1GS49Z7wyXEv1nT5uMRtrMK&#xA;szyIxEZka7LiKNisgQJWP4sVRPlvSPzh0e0gH1WS9vbPStPhmuryXTTLcTWE0n1m0SWNfVaO4jb9&#xA;y8z1BYs7BqqVU88mWn5nw+d55PMks76Q9iWSGMwNZJdXEizvxk9T6wzQktbxr6QXgvMmrUKqTyD/&#xA;AJyF/QMsVxb213fX8VmP9HuLe1ksvTmKXarJwKySzxcXDfZjPKgNFVlVKbRPzwufKM+h3sq3M8+m&#xA;yzSXztaGT65HFNGlgqV4SxzyiCTnNsULo/UDFUJrHm78zG85mwsHgsr5Q8Vn5ZF3Zy8g+lSTQgxo&#xA;rTArc/E80jJGAFVVYEsVVBfKP52jT7w3l3eXs1xp+qWdvYmXTZ4laaGF7UXP1pWWYMwkR/8AL2HG&#xA;IlsVZFez/npcanf3GmWsdjByt47Swuns5LZFZrXk6SRj134J9ZM3Kn7CxAkFsVZp5LbzeNLa380R&#xA;xm+tHMCX0boTeIm31poo1VIfU68B09umKvlfXP8Ajtah/wAxM3/Jw5wuX6z7y+9aT+5h/VH3ILK3&#xA;IdirsVdir0n8gf8AlOZP+YKb/icebbsf++/zS8l7Z/4kP64+4vovOofKnYqk3nDzGnlvy7da08Bu&#xA;EtWi5wq3ElZJkiNCQdwHrlGpz+FAzq6/W5/ZehOrzxwg8Jle/uiT+hRsvM+i+YvLN1f6VcCaIwSC&#xA;ROkkbcD8Ei9VP+Yw4NRDLHiiWOu7PzaXJwZRR+w+YKa6T/xyrL/jBF/xAZc4SV+bfKNp5lj0qO6m&#xA;aJNL1G31NVUAiRrcMBG1f2W574q8/i/5xt8ttp8um6hrWpX9hDZPpuhxSGBG0+B50uqxukSmSQSx&#xA;LR3r8Pw0xVU80f8AOP6+aNNtLbXvNmp6lcwNdPNcXSW0qMbuNIj6VuY/SgMYj/dsg5KWYg1Ioqnn&#xA;lz8rYvLOheYrSwvHvbnW7WKH98qxgPbWC2SUpX7fphj4Yqw3y5/zjnJL5NisvM2t3UusPpdlpahR&#xA;A0Vlb2t5FftBDwRTIDNABzck8du2Kq17/wA4w6Hdajql62u3Xqaql9FMzQ27S8b9xIecwVZJWjIo&#xA;pcmg2AHdVlLfk7ph80v5gOoTes+p6bqvocE489LsJLBEr1o6y8yfHFWMT/8AOLvlSa4hnk1KdpAJ&#xA;47r1bWyuBJDPdyXnGMXUM/oyK8xX1E347eOKvRvJXkqz8p2+rQWk7zR6rql3qzBwF9NrxgxiWnVU&#xA;pQHFWRYqlXlP/lFdG/5gbb/kyuKprirsVdirsVdirsVW+lF6vq8F9Xjx9Sg5ca1pXrSuKrsVdirs&#xA;VfHGuf8AHa1D/mJm/wCThzhcv1n3l960n9zD+qPuSXWb2Wx0q7vIgrSQRNIitUqSorvQjJafGJ5I&#xA;xPIlq7R1MsGnnkjzhEnfySOPzD5iaSAfUeSO1OQgnX1F9UoWFf7rinxfH17ZnHSYaPq+0bbfbvts&#xA;6KHa2sJiPD2J/mTHEOKr/oVH1ern0UbbzL5ok+rc9N/vJikrejMoKj09lqSV+03xNtt065OejwC6&#xA;n07x5/s2He04e2dfLgvFzlR9Ext6eXdzl6jttyFFl+ah7BkHkjSvM+qay1t5buXtdRELuZY5mtz6&#xA;YKhhzUg9SNsytJjyTnWM1Ku+nV9ranTYcPFqIiUL6x4t/cz3/AP55/8AV6uf+4lN/wA1Zsfyes/n&#xA;H/TF5r+Wexv9Sj/yqj+p3+Afzz/6vVz/ANxKb/mrH8nrP5x/0xX+Wexv9Sj/AMqo/qSjzb5Q/NbT&#xA;/L91ea7qc9xpUXp/WYXvpJlblIqpWNiQaOVOU6nTamMCZyJj/Wtzuze0+zMueMMEIxyG6PAB0N7+&#xA;60t/Ljy/5zu7mfUdEkaysYY3W9vXB9F0CktFx6SEjt261GxyHZ2HNKfFA8I6np+1t9pNdo8eEwzj&#xA;jkeURz99/wAPv+wvpXSP+OVZV6+hF/xAZ1j5Gi8VdirsVdirsVdirsVdirsVdiqVeU/+UV0b/mBt&#xA;v+TK4qmuKuxV2KuxV2KuxV2KuxV2KuxV8ca5/wAdrUP+Ymb/AJOHOFy/WfeX3rSf3MP6o+5ASRxy&#xA;I0cih0YUZGAIIPYg5AEg2G6cBIURYK7AydirsVek/kD/AMpzJ/zBTf8AE4823Y/99/ml5L2z/wAS&#xA;H9cfcX0XnUPlTsVQGvaHp+u6XLpeoo0lnO0ZmRWKlhFIsgFRvQlBWmVZsUckeGXIuVo9Xk02QZMe&#xA;0xdfEEfpau7O1stBuLW0hSC2htpFihjUKqqEOwAycYiIobBpy5ZZJGUiZSPMlW0n/jlWX/GCL/iA&#xA;yTWisVdirsVdirsVdirsVdirsVdiqVeU/wDlFdG/5gbb/kyuKprirsVdirsVdirsVdirsVdirsVY&#xA;1L+WvkSWV5ZNFt2kkYs7EGpZjUnrmIdDhJvhDt49va2IAGWVBZ/yrDyB/wBWO2+4/wBcH5DB/NCf&#xA;9EGu/wBVk7/lWHkD/qx233H+uP5DB/NC/wCiDXf6rJ3/ACrDyB/1Y7b7j/XH8hg/mhf9EGu/1WTv&#xA;+VYeQP8Aqx233H+uP5DB/NC/6INd/qskdo/kvyto12bvS9NhtLkqYzLGCDxYgkbn2yzFpceM3GIB&#xA;cfVdq6nPHgyTMo86KdZkOvdirsVWTwpPBJDJ9iVSjU2NGFDiqVQ6DfQxJFHrl8scahEXhZGgUUA3&#xA;tsVX/obUf+r9ff8AAWP/AGTYq79Daj/1fr7/AICx/wCybFXfobUf+r9ff8BY/wDZNiqW6vp2tR3O&#xA;lwQeY9QhF3dNDM6x6eW4Lazy0HO0YfaiXtiqv/hnWv8AqbNV/wCRWlf9kOKoey03W11u8sZPMmoT&#xA;QxW1tPGXi04MGmknVt0tE2pCuKpn+htR/wCr9ff8BY/9k2Ku/Q2o/wDV+vv+Asf+ybFXfobUf+r9&#xA;ff8AAWP/AGTYq79Daj/1fr7/AICx/wCybFUbp1lFYafbWMJZorSJII2ehYrGoUFqACtB4YqiMVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqVaz/AMdHQf8AmOf/AKgb&#xA;nFU1xVKrb/lKtR/5gbH/AJPXeKvCPzE81fndc65500PTBqEenRWk76RLp1jOjxiExPGUufTjYySj&#xA;mtYpZOVdlQjFVmpfmR/zkLDq2vJpWly39jaQSmwMunzxloB6X1e9X/RkUyyozuYfUY8qr6a8d1VG&#xA;fzH+eev+WtUt9SM9vaw6DqF0Eh0+VJdQkEzw2yh2itZoXZGDDgilgoIUcjiqYan56/OzSV1K9tg9&#xA;zaK+r2tlYT2IRYEsIIpbWf16B5DIXZVDGjkUG+Kst/Jj8zrnXY7vTtb1GbUdQk1W9tdIuJbH6k8l&#xA;tY2tpK5miRQsT8rqtG3NdumKsc8yecfz7s7rzXa6favLF5ecLbXgsw/1qG/u0aCWJUik9Q2lnzEg&#xA;jRvi3YGlCqkul+afzmSSfWdQt722u7u20u31G/h0+eYwWn1y/El1DYvEnKURLDzX0ujcuNKDFU70&#xA;zzx+cd7eaNb6xb3mnrcWsJa2i0eSRb0SXFxHPJczVT6i8dvHDJw5VBfo2y4qxTRvN35p+S9An124&#xA;lv2srG10CV9FvoJWie3mtTb3K28k4JWVLl0Lqrczvy8cVfSPlZNcTy3pa69MJ9b+qxHUpVVUU3BQ&#xA;GUKqAKAGqBQYqmmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIdc8yahpV2EOjz3Fg&#xA;VB/SMTK0aHusiLylSm5LleAHVhiqy3ur3WrjSb2KCIafBM9yLqO4jnR1NvNCAhjqD8Uo74qyHFUk&#xA;vTqNjrN1qMdsk9pLaW8byNMkXAwSTuxbmKUpMN64qhtJ8232qXqRWmkSyWJ/vNVWVDaih/Yc8TNX&#xA;sYgy+JGKskxV2KqV3aWt5ay2l3DHc2s6GOe3lUPG6MKMrowIZSOoOKoTSvL2gaRDDBpWm2thDbh1&#xA;gjtYY4VQSlTIFCKtOZRS1OtBXFUwxV2KuxVC6jpOlanHFHqVlBex28qXECXESShJo90lQOG4uv7L&#xA;DcYqisVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqB1XUpLL6okNubme8mMEUYZUAIi&#xA;kmJLN24xHFVD9I69/wBWj/p4j/piqU3emX8tw95aaVJpt/IeUl3Z3UUbSNSlZoyrRTbbD1EanamK&#xA;rRf/AJlrGYP0XYySH7GoNMVCj/KtATzPynWvt0xVqLSdTklS41XTpNWuUPJPrNzD6EbdQY7ZVWFS&#xA;p+y5UuBtyOKpz+kde/6tH/TxH/TFURpOovfwSvJAbeWGV4JYiwejIezLsQcVRuKuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpVrP/AB0dB/5jn/6gbnFU1xV2KuxV&#xA;2KuxVKtA/wCll/zHTf8AGuKprirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqVaz/x0dB/5jn/AOoG5xVLvOX5heXvKElkNaMsUN9HeSR3KIGiX6jbtdSI7FhR3jRv&#xA;TFPiIpirBdd/5yW8m2trqEGnRzvrNtYS3dtBdII4muIrUXjWshV2dZFjPxfDxrVQxbbFV8X/ADkH&#xA;pUr6R6tnLpqvLImvx6jG8UtvGmnHURLEqeoGVohyHIg8e1cVRdz+fGjxzaPcPp95p2k3b3jahNql&#xA;vJbSpb22myahHNAvxCUSLGAADXtSuKso/L78yvLfnywu7zRPWQWMwt7mG5RUkVmQSKfgaRSrK23x&#xA;fOmKproH/Sy/5jpv+NcVTXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FUq1n/AI6Og/8AMc//AFA3OKoTzv5E8t+dtIj0nzBbm4soriO7RFYoRLFUDcdirspHcHFU&#xA;l1b8lvI2qalqt/cRXSNrKSrfW8NzLHbtJPD9XlmEIPp+o0QAqR705b4q66/JbyHd35vbq2mmdyvq&#xA;RNM3puF08aZxYChobYcTv13xVTh/JDyGtpBazx3l7FALhAbu7mnZo7mzawMZZ2JCJbSFEC049eu+&#xA;Kp/5O8k6N5S0+Wy0t7mVJn9SWW8uJLmQkKFUcpCeKqoAAWg+mpxVFaB/0sv+Y6b/AI1xVNcVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSrWf+OjoP/Mc/wD1A3OK&#xA;prirsVdirsVdiqVaB/0sv+Y6b/jXFU1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxVB6p+h/q6/pX6v8AV+Y4fWuHDnQ0p6m3KlcVSv8A50D/ALVX/Ttirv8AnQP+&#xA;1V/07Yq7/nQP+1V/07Yq7/nQP+1V/wBO2Ku/50D/ALVX/Ttiqbab+i/qo/RnofVKnj9W4enyr8VO&#xA;Hw1r1xVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>519.000000</stDim:w>
            <stDim:h>423.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">fig5_planner_arch</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:A4768C3E9A72EC11B276A592F4853D2D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:A4768C3E9A72EC11B276A592F4853D2D</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:440416cf-3862-4e33-ba1a-0f93e6162532</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e2ba5352-739f-4d50-8b8f-da246bf90ae2</stRef:instanceID>
            <stRef:documentID>uuid:440416cf-3862-4e33-ba1a-0f93e6162532</stRef:documentID>
            <stRef:originalDocumentID>uuid:440416cf-3862-4e33-ba1a-0f93e6162532</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A4768C3E9A72EC11B276A592F4853D2D</stEvt:instanceID>
                  <stEvt:when>2022-01-10T23:52:14-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -423 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 423 li
519 423 li
519 0 li
cp
clp
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
162.258 80.5 mo
342.258 80.5 li
342.258 134.5 li
162.258 134.5 li
162.258 80.5 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
198.727 104.234 mo
199.172 104.234 199.57 104.305 199.914 104.438 cv
200.484 104.68 200.949 105.117 201.305 105.75 cv
201.305 104.453 li
203.602 104.453 li
203.602 113.031 li
203.602 114.195 203.402 115.078 203.008 115.672 cv
202.328 116.691 201.039 117.203 199.133 117.203 cv
197.977 117.203 197.027 116.973 196.289 116.516 cv
195.559 116.066 195.156 115.391 195.086 114.484 cv
197.664 114.484 li
197.727 114.766 197.828 114.961 197.977 115.078 cv
198.234 115.297 198.668 115.406 199.273 115.406 cv
200.117 115.406 200.684 115.117 200.977 114.547 cv
201.164 114.18 201.258 113.57 201.258 112.719 cv
201.258 112.125 li
201.027 112.523 200.781 112.813 200.523 113 cv
200.055 113.367 199.445 113.547 198.695 113.547 cv
197.527 113.547 196.594 113.141 195.898 112.328 cv
195.211 111.508 194.867 110.398 194.867 109 cv
194.867 107.656 195.199 106.527 195.867 105.609 cv
196.543 104.695 197.496 104.234 198.727 104.234 cv
198.727 104.234 li
cp
199.305 111.563 mo
199.855 111.563 200.324 111.355 200.711 110.938 cv
201.094 110.512 201.289 109.844 201.289 108.938 cv
201.289 108.074 201.105 107.418 200.742 106.969 cv
200.375 106.523 199.891 106.297 199.289 106.297 cv
198.453 106.297 197.883 106.688 197.57 107.469 cv
197.402 107.887 197.32 108.402 197.32 109.016 cv
197.32 109.539 197.406 110 197.586 110.406 cv
197.906 111.18 198.48 111.563 199.305 111.563 cv
199.305 111.563 li
cp
f
205.859 101.266 mo
208.218 101.266 li
208.218 113.5 li
205.859 113.5 li
205.859 101.266 li
cp
f
219.223 109 mo
219.223 110.324 218.836 111.461 218.066 112.406 cv
217.305 113.344 216.148 113.813 214.598 113.813 cv
213.043 113.813 211.883 113.344 211.113 112.406 cv
210.352 111.461 209.973 110.324 209.973 109 cv
209.973 107.688 210.352 106.555 211.113 105.594 cv
211.883 104.637 213.043 104.156 214.598 104.156 cv
216.148 104.156 217.305 104.637 218.066 105.594 cv
218.836 106.555 219.223 107.688 219.223 109 cv
219.223 109 li
cp
214.582 111.828 mo
215.277 111.828 215.809 111.586 216.176 111.094 cv
216.551 110.605 216.738 109.906 216.738 109 cv
216.738 108.086 216.551 107.383 216.176 106.891 cv
215.809 106.402 215.277 106.156 214.582 106.156 cv
213.895 106.156 213.363 106.402 212.988 106.891 cv
212.613 107.383 212.426 108.086 212.426 109 cv
212.426 109.906 212.613 110.605 212.988 111.094 cv
213.363 111.586 213.895 111.828 214.582 111.828 cv
214.582 111.828 li
cp
f
225.203 111.797 mo
225.805 111.797 226.273 111.555 226.609 111.063 cv
226.953 110.563 227.125 109.914 227.125 109.109 cv
227.125 108.465 227.039 107.934 226.875 107.516 cv
226.563 106.715 225.984 106.313 225.141 106.313 cv
224.273 106.313 223.68 106.703 223.359 107.484 cv
223.191 107.902 223.109 108.438 223.109 109.094 cv
223.109 109.875 223.281 110.523 223.625 111.031 cv
223.969 111.543 224.492 111.797 225.203 111.797 cv
225.203 111.797 li
cp
225.813 104.25 mo
227 104.25 227.926 104.684 228.594 105.547 cv
229.27 106.402 229.609 107.508 229.609 108.859 cv
229.609 110.266 229.273 111.434 228.609 112.359 cv
227.941 113.277 227.016 113.734 225.828 113.734 cv
225.078 113.734 224.477 113.586 224.031 113.297 cv
223.758 113.121 223.469 112.809 223.156 112.359 cv
223.156 113.5 li
220.828 113.5 li
220.828 101.281 li
223.188 101.281 li
223.188 105.625 li
223.488 105.211 223.816 104.891 224.172 104.672 cv
224.598 104.391 225.145 104.25 225.813 104.25 cv
225.813 104.25 li
cp
f
234.852 108 mo
235.289 107.938 235.602 107.867 235.789 107.781 cv
236.121 107.648 236.289 107.422 236.289 107.109 cv
236.289 106.746 236.156 106.496 235.898 106.359 cv
235.648 106.215 235.273 106.141 234.773 106.141 cv
234.219 106.141 233.824 106.277 233.586 106.547 cv
233.418 106.758 233.309 107.031 233.258 107.375 cv
230.977 107.375 li
231.027 106.586 231.246 105.938 231.633 105.438 cv
232.258 104.637 233.336 104.234 234.867 104.234 cv
235.855 104.234 236.734 104.434 237.508 104.828 cv
238.266 105.227 238.648 105.965 238.648 107.047 cv
238.648 111.203 li
238.648 111.484 238.652 111.836 238.664 112.25 cv
238.684 112.563 238.73 112.777 238.805 112.891 cv
238.887 112.996 239.008 113.086 239.164 113.156 cv
239.164 113.5 li
236.586 113.5 li
236.512 113.313 236.461 113.141 236.43 112.984 cv
236.406 112.828 236.387 112.648 236.367 112.438 cv
236.043 112.793 235.668 113.094 235.242 113.344 cv
234.73 113.633 234.156 113.781 233.523 113.781 cv
232.699 113.781 232.016 113.547 231.477 113.078 cv
230.945 112.609 230.68 111.949 230.68 111.094 cv
230.68 109.98 231.109 109.172 231.977 108.672 cv
232.445 108.402 233.137 108.211 234.055 108.094 cv
234.852 108 li
cp
236.289 109.094 mo
236.141 109.188 235.992 109.266 235.836 109.328 cv
235.68 109.391 235.469 109.445 235.211 109.484 cv
234.68 109.594 li
234.18 109.68 233.82 109.781 233.602 109.906 cv
233.234 110.125 233.055 110.465 233.055 110.922 cv
233.055 111.328 233.164 111.621 233.383 111.797 cv
233.609 111.977 233.887 112.063 234.211 112.063 cv
234.719 112.063 235.188 111.918 235.617 111.625 cv
236.043 111.324 236.266 110.777 236.289 109.984 cv
236.289 109.094 li
cp
f
240.805 101.266 mo
243.164 101.266 li
243.164 113.5 li
240.805 113.5 li
240.805 101.266 li
cp
f
255.098 104.25 mo
256.148 104.25 257.039 104.641 257.77 105.422 cv
258.508 106.203 258.879 107.352 258.879 108.859 cv
258.879 110.453 258.52 111.668 257.801 112.5 cv
257.082 113.336 256.16 113.75 255.035 113.75 cv
254.316 113.75 253.715 113.57 253.238 113.219 cv
252.977 113.023 252.723 112.73 252.473 112.344 cv
252.473 117.063 li
250.129 117.063 li
250.129 104.453 li
252.395 104.453 li
252.395 105.781 li
252.652 105.398 252.93 105.09 253.223 104.859 cv
253.742 104.453 254.367 104.25 255.098 104.25 cv
255.098 104.25 li
cp
256.441 108.969 mo
256.441 108.281 256.277 107.668 255.957 107.125 cv
255.645 106.586 255.129 106.313 254.41 106.313 cv
253.555 106.313 252.965 106.727 252.645 107.547 cv
252.477 107.977 252.395 108.523 252.395 109.188 cv
252.395 110.242 252.676 110.98 253.238 111.406 cv
253.559 111.648 253.949 111.766 254.41 111.766 cv
255.066 111.766 255.566 111.516 255.91 111.016 cv
256.262 110.508 256.441 109.824 256.441 108.969 cv
256.441 108.969 li
cp
f
260.637 101.266 mo
262.996 101.266 li
262.996 113.5 li
260.637 113.5 li
260.637 101.266 li
cp
f
268.859 108 mo
269.297 107.938 269.609 107.867 269.797 107.781 cv
270.129 107.648 270.297 107.422 270.297 107.109 cv
270.297 106.746 270.164 106.496 269.906 106.359 cv
269.656 106.215 269.281 106.141 268.781 106.141 cv
268.227 106.141 267.832 106.277 267.594 106.547 cv
267.426 106.758 267.316 107.031 267.266 107.375 cv
264.984 107.375 li
265.035 106.586 265.254 105.938 265.641 105.438 cv
266.266 104.637 267.344 104.234 268.875 104.234 cv
269.863 104.234 270.742 104.434 271.516 104.828 cv
272.273 105.227 272.656 105.965 272.656 107.047 cv
272.656 111.203 li
272.656 111.484 272.66 111.836 272.672 112.25 cv
272.691 112.563 272.738 112.777 272.813 112.891 cv
272.895 112.996 273.016 113.086 273.172 113.156 cv
273.172 113.5 li
270.594 113.5 li
270.52 113.313 270.469 113.141 270.438 112.984 cv
270.414 112.828 270.395 112.648 270.375 112.438 cv
270.051 112.793 269.676 113.094 269.25 113.344 cv
268.738 113.633 268.164 113.781 267.531 113.781 cv
266.707 113.781 266.023 113.547 265.484 113.078 cv
264.953 112.609 264.688 111.949 264.688 111.094 cv
264.688 109.98 265.117 109.172 265.984 108.672 cv
266.453 108.402 267.145 108.211 268.063 108.094 cv
268.859 108 li
cp
270.297 109.094 mo
270.148 109.188 270 109.266 269.844 109.328 cv
269.688 109.391 269.477 109.445 269.219 109.484 cv
268.688 109.594 li
268.188 109.68 267.828 109.781 267.609 109.906 cv
267.242 110.125 267.063 110.465 267.063 110.922 cv
267.063 111.328 267.172 111.621 267.391 111.797 cv
267.617 111.977 267.895 112.063 268.219 112.063 cv
268.727 112.063 269.195 111.918 269.625 111.625 cv
270.051 111.324 270.273 110.777 270.297 109.984 cv
270.297 109.094 li
cp
f
279.781 104.234 mo
280.707 104.234 281.469 104.48 282.063 104.969 cv
282.664 105.461 282.969 106.273 282.969 107.406 cv
282.969 113.5 li
280.531 113.5 li
280.531 108 li
280.531 107.523 280.469 107.156 280.344 106.906 cv
280.113 106.438 279.672 106.203 279.016 106.203 cv
278.211 106.203 277.66 106.543 277.359 107.219 cv
277.211 107.586 277.141 108.047 277.141 108.609 cv
277.141 113.5 li
274.781 113.5 li
274.781 104.469 li
277.063 104.469 li
277.063 105.781 li
277.363 105.324 277.648 104.992 277.922 104.781 cv
278.41 104.418 279.031 104.234 279.781 104.234 cv
279.781 104.234 li
cp
f
290.168 104.234 mo
291.094 104.234 291.855 104.48 292.449 104.969 cv
293.051 105.461 293.355 106.273 293.355 107.406 cv
293.355 113.5 li
290.918 113.5 li
290.918 108 li
290.918 107.523 290.855 107.156 290.73 106.906 cv
290.5 106.438 290.059 106.203 289.402 106.203 cv
288.598 106.203 288.047 106.543 287.746 107.219 cv
287.598 107.586 287.527 108.047 287.527 108.609 cv
287.527 113.5 li
285.168 113.5 li
285.168 104.469 li
287.449 104.469 li
287.449 105.781 li
287.75 105.324 288.035 104.992 288.309 104.781 cv
288.797 104.418 289.418 104.234 290.168 104.234 cv
290.168 104.234 li
cp
f
299.098 104.219 mo
299.848 104.219 300.523 104.359 301.129 104.641 cv
301.73 104.922 302.23 105.367 302.629 105.969 cv
302.98 106.512 303.211 107.137 303.316 107.844 cv
303.379 108.262 303.402 108.855 303.395 109.625 cv
297.191 109.625 li
297.23 110.543 297.52 111.184 298.051 111.547 cv
298.383 111.766 298.777 111.875 299.238 111.875 cv
299.715 111.875 300.113 111.742 300.426 111.469 cv
300.59 111.313 300.738 111.105 300.863 110.844 cv
303.27 110.844 li
303.207 111.387 302.93 111.934 302.441 112.484 cv
301.66 113.359 300.57 113.797 299.176 113.797 cv
298.027 113.797 297.012 113.43 296.129 112.688 cv
295.254 111.949 294.816 110.742 294.816 109.063 cv
294.816 107.5 295.211 106.305 296.004 105.469 cv
296.793 104.637 297.824 104.219 299.098 104.219 cv
299.098 104.219 li
cp
299.098 106.156 mo
298.555 106.156 298.133 106.328 297.832 106.672 cv
297.527 107.016 297.336 107.484 297.254 108.078 cv
300.941 108.078 li
300.898 107.453 300.707 106.98 300.363 106.656 cv
300.02 106.324 299.598 106.156 299.098 106.156 cv
299.098 106.156 li
cp
f
309.898 104.234 mo
309.938 104.234 309.977 104.242 310.008 104.25 cv
310.039 104.25 310.105 104.25 310.211 104.25 cv
310.211 106.672 li
310.063 106.664 309.934 106.656 309.82 106.656 cv
309.703 106.648 309.609 106.641 309.539 106.641 cv
308.578 106.641 307.938 106.949 307.617 107.563 cv
307.438 107.918 307.352 108.453 307.352 109.172 cv
307.352 113.5 li
304.961 113.5 li
304.961 104.453 li
307.227 104.453 li
307.227 106.031 li
307.59 105.43 307.906 105.016 308.18 104.797 cv
308.617 104.422 309.188 104.234 309.898 104.234 cv
309.898 104.234 li
cp
f
162.258 188.5 mo
342.258 188.5 li
342.258 296.5 li
162.258 296.5 li
162.258 188.5 li
cp
@
189.063 234.891 mo
191.985 234.891 li
191.985 250 li
189.063 250 li
189.063 234.891 li
cp
f
205.566 244.438 mo
205.566 246.074 205.09 247.477 204.145 248.641 cv
203.207 249.809 201.777 250.391 199.863 250.391 cv
197.934 250.391 196.496 249.809 195.551 248.641 cv
194.613 247.477 194.145 246.074 194.145 244.438 cv
194.145 242.824 194.613 241.43 195.551 240.25 cv
196.496 239.063 197.934 238.469 199.863 238.469 cv
201.777 238.469 203.207 239.063 204.145 240.25 cv
205.09 241.43 205.566 242.824 205.566 244.438 cv
205.566 244.438 li
cp
199.848 247.938 mo
200.699 247.938 201.355 247.637 201.816 247.031 cv
202.273 246.418 202.504 245.555 202.504 244.438 cv
202.504 243.313 202.273 242.449 201.816 241.844 cv
201.355 241.242 200.699 240.938 199.848 240.938 cv
198.992 240.938 198.336 241.242 197.879 241.844 cv
197.418 242.449 197.191 243.313 197.191 244.438 cv
197.191 245.555 197.418 246.418 197.879 247.031 cv
198.336 247.637 198.992 247.938 199.848 247.938 cv
199.848 247.938 li
cp
f
214.348 242.828 mo
214.285 242.414 214.145 242.039 213.926 241.703 cv
213.59 241.258 213.082 241.031 212.395 241.031 cv
211.402 241.031 210.73 241.523 210.379 242.5 cv
210.18 243.012 210.082 243.699 210.082 244.563 cv
210.082 245.387 210.18 246.047 210.379 246.547 cv
210.723 247.477 211.379 247.938 212.348 247.938 cv
213.023 247.938 213.504 247.758 213.785 247.391 cv
214.074 247.016 214.254 246.539 214.316 245.953 cv
217.301 245.953 li
217.238 246.84 216.914 247.68 216.332 248.469 cv
215.426 249.75 214.07 250.391 212.27 250.391 cv
210.465 250.391 209.145 249.859 208.301 248.797 cv
207.457 247.727 207.035 246.34 207.035 244.641 cv
207.035 242.715 207.496 241.219 208.426 240.156 cv
209.363 239.094 210.66 238.563 212.316 238.563 cv
213.711 238.563 214.852 238.875 215.738 239.5 cv
216.633 240.125 217.164 241.234 217.332 242.828 cv
214.348 242.828 li
cp
f
223.73 243.203 mo
224.27 243.133 224.656 243.043 224.887 242.938 cv
225.301 242.762 225.512 242.484 225.512 242.109 cv
225.512 241.652 225.348 241.34 225.027 241.172 cv
224.715 240.996 224.25 240.906 223.637 240.906 cv
222.949 240.906 222.457 241.078 222.168 241.422 cv
221.969 241.672 221.832 242.012 221.762 242.438 cv
218.949 242.438 li
219.012 241.461 219.281 240.656 219.762 240.031 cv
220.531 239.055 221.859 238.563 223.746 238.563 cv
224.965 238.563 226.051 238.805 227.012 239.281 cv
227.957 239.773 228.434 240.688 228.434 242.031 cv
228.434 247.156 li
228.434 247.512 228.438 247.945 228.449 248.453 cv
228.469 248.84 228.527 249.102 228.621 249.234 cv
228.715 249.371 228.859 249.48 229.059 249.563 cv
229.059 250 li
225.871 250 li
225.785 249.773 225.723 249.559 225.684 249.359 cv
225.652 249.164 225.625 248.938 225.605 248.688 cv
225.207 249.125 224.746 249.5 224.215 249.813 cv
223.59 250.164 222.879 250.344 222.09 250.344 cv
221.066 250.344 220.23 250.055 219.574 249.484 cv
218.918 248.902 218.59 248.086 218.59 247.031 cv
218.59 245.656 219.113 244.664 220.168 244.047 cv
220.75 243.715 221.609 243.477 222.746 243.328 cv
223.73 243.203 li
cp
225.512 244.563 mo
225.324 244.68 225.137 244.773 224.949 244.844 cv
224.762 244.918 224.5 244.984 224.168 245.047 cv
223.512 245.172 li
222.895 245.277 222.457 245.406 222.199 245.563 cv
221.738 245.836 221.512 246.25 221.512 246.813 cv
221.512 247.313 221.652 247.672 221.934 247.891 cv
222.215 248.109 222.551 248.219 222.949 248.219 cv
223.574 248.219 224.152 248.039 224.684 247.672 cv
225.215 247.309 225.488 246.637 225.512 245.656 cv
225.512 244.563 li
cp
f
231.082 234.891 mo
234.004 234.891 li
234.004 250 li
231.082 250 li
231.082 234.891 li
cp
f
248.734 238.578 mo
250.035 238.578 251.141 239.063 252.047 240.031 cv
252.953 240.992 253.406 242.402 253.406 244.266 cv
253.406 246.234 252.961 247.734 252.078 248.766 cv
251.191 249.797 250.051 250.313 248.656 250.313 cv
247.77 250.313 247.031 250.094 246.438 249.656 cv
246.125 249.406 245.813 249.047 245.5 248.578 cv
245.5 254.406 li
242.609 254.406 li
242.609 238.828 li
245.406 238.828 li
245.406 240.469 li
245.719 239.992 246.055 239.609 246.422 239.328 cv
247.066 238.828 247.836 238.578 248.734 238.578 cv
248.734 238.578 li
cp
250.391 244.406 mo
250.391 243.555 250.191 242.793 249.797 242.125 cv
249.41 241.461 248.773 241.125 247.891 241.125 cv
246.828 241.125 246.098 241.633 245.703 242.641 cv
245.504 243.172 245.406 243.852 245.406 244.672 cv
245.406 245.965 245.75 246.875 246.438 247.406 cv
246.844 247.711 247.328 247.859 247.891 247.859 cv
248.703 247.859 249.32 247.547 249.75 246.922 cv
250.176 246.297 250.391 245.461 250.391 244.406 cv
250.391 244.406 li
cp
f
255.578 234.891 mo
258.5 234.891 li
258.5 250 li
255.578 250 li
255.578 234.891 li
cp
f
265.742 243.203 mo
266.281 243.133 266.668 243.043 266.898 242.938 cv
267.313 242.762 267.523 242.484 267.523 242.109 cv
267.523 241.652 267.359 241.34 267.039 241.172 cv
266.727 240.996 266.262 240.906 265.648 240.906 cv
264.961 240.906 264.469 241.078 264.18 241.422 cv
263.98 241.672 263.844 242.012 263.773 242.438 cv
260.961 242.438 li
261.023 241.461 261.293 240.656 261.773 240.031 cv
262.543 239.055 263.871 238.563 265.758 238.563 cv
266.977 238.563 268.063 238.805 269.023 239.281 cv
269.969 239.773 270.445 240.688 270.445 242.031 cv
270.445 247.156 li
270.445 247.512 270.449 247.945 270.461 248.453 cv
270.48 248.84 270.539 249.102 270.633 249.234 cv
270.727 249.371 270.871 249.48 271.07 249.563 cv
271.07 250 li
267.883 250 li
267.797 249.773 267.734 249.559 267.695 249.359 cv
267.664 249.164 267.637 248.938 267.617 248.688 cv
267.219 249.125 266.758 249.5 266.227 249.813 cv
265.602 250.164 264.891 250.344 264.102 250.344 cv
263.078 250.344 262.242 250.055 261.586 249.484 cv
260.93 248.902 260.602 248.086 260.602 247.031 cv
260.602 245.656 261.125 244.664 262.18 244.047 cv
262.762 243.715 263.621 243.477 264.758 243.328 cv
265.742 243.203 li
cp
267.523 244.563 mo
267.336 244.68 267.148 244.773 266.961 244.844 cv
266.773 244.918 266.512 244.984 266.18 245.047 cv
265.523 245.172 li
264.906 245.277 264.469 245.406 264.211 245.563 cv
263.75 245.836 263.523 246.25 263.523 246.813 cv
263.523 247.313 263.664 247.672 263.945 247.891 cv
264.227 248.109 264.563 248.219 264.961 248.219 cv
265.586 248.219 266.164 248.039 266.695 247.672 cv
267.227 247.309 267.5 246.637 267.523 245.656 cv
267.523 244.563 li
cp
f
279.23 238.563 mo
280.387 238.563 281.328 238.867 282.059 239.469 cv
282.797 240.074 283.168 241.074 283.168 242.469 cv
283.168 250 li
280.168 250 li
280.168 243.203 li
280.168 242.609 280.09 242.156 279.934 241.844 cv
279.641 241.273 279.094 240.984 278.293 240.984 cv
277.301 240.984 276.621 241.406 276.246 242.25 cv
276.059 242.699 275.965 243.266 275.965 243.953 cv
275.965 250 li
273.059 250 li
273.059 238.844 li
275.871 238.844 li
275.871 240.469 li
276.246 239.898 276.598 239.484 276.934 239.234 cv
277.535 238.789 278.301 238.563 279.23 238.563 cv
279.23 238.563 li
cp
f
292.059 238.563 mo
293.215 238.563 294.156 238.867 294.887 239.469 cv
295.625 240.074 295.996 241.074 295.996 242.469 cv
295.996 250 li
292.996 250 li
292.996 243.203 li
292.996 242.609 292.918 242.156 292.762 241.844 cv
292.469 241.273 291.922 240.984 291.121 240.984 cv
290.129 240.984 289.449 241.406 289.074 242.25 cv
288.887 242.699 288.793 243.266 288.793 243.953 cv
288.793 250 li
285.887 250 li
285.887 238.844 li
288.699 238.844 li
288.699 240.469 li
289.074 239.898 289.426 239.484 289.762 239.234 cv
290.363 238.789 291.129 238.563 292.059 238.563 cv
292.059 238.563 li
cp
f
303.09 238.531 mo
304.027 238.531 304.863 238.711 305.605 239.063 cv
306.355 239.406 306.969 239.953 307.449 240.703 cv
307.887 241.359 308.172 242.125 308.309 243 cv
308.379 243.523 308.41 244.262 308.402 245.219 cv
300.746 245.219 li
300.785 246.344 301.141 247.133 301.809 247.578 cv
302.215 247.859 302.699 248 303.262 248 cv
303.863 248 304.355 247.828 304.73 247.484 cv
304.938 247.297 305.121 247.043 305.277 246.719 cv
308.262 246.719 li
308.176 247.387 307.828 248.059 307.215 248.734 cv
306.254 249.828 304.918 250.375 303.199 250.375 cv
301.781 250.375 300.527 249.918 299.434 249 cv
298.348 248.086 297.809 246.594 297.809 244.531 cv
297.809 242.594 298.297 241.109 299.277 240.078 cv
300.254 239.047 301.527 238.531 303.09 238.531 cv
303.09 238.531 li
cp
303.09 240.938 mo
302.422 240.938 301.902 241.152 301.527 241.578 cv
301.152 241.996 300.918 242.57 300.824 243.297 cv
305.371 243.297 li
305.316 242.527 305.078 241.945 304.652 241.547 cv
304.234 241.141 303.715 240.938 303.09 240.938 cv
303.09 240.938 li
cp
f
316.441 238.563 mo
316.492 238.563 316.535 238.563 316.566 238.563 cv
316.605 238.563 316.695 238.57 316.832 238.578 cv
316.832 241.578 li
316.645 241.559 316.477 241.543 316.332 241.531 cv
316.184 241.523 316.07 241.516 315.988 241.516 cv
314.809 241.516 314.02 241.902 313.613 242.672 cv
313.395 243.102 313.285 243.762 313.285 244.656 cv
313.285 250 li
310.332 250 li
310.332 238.828 li
313.129 238.828 li
313.129 240.766 li
313.574 240.027 313.965 239.523 314.301 239.25 cv
314.852 238.793 315.566 238.563 316.441 238.563 cv
316.441 238.563 li
cp
f
gsave
0 423 mo
519 423 li
519 0 li
0 0 li
0 423 li
cp
clp
205.906 350.5 mo
295.906 350.5 li
295.906 422.5 li
205.906 422.5 li
205.906 350.5 li
cp
@
grestore
226.313 383.891 mo
229.156 383.891 li
225.5 394 li
222.719 394 li
219.078 383.891 li
222.047 383.891 li
224.156 391.344 li
226.313 383.891 li
cp
f
234.629 383.625 mo
235.473 383.625 236.227 383.781 236.895 384.094 cv
237.57 384.406 238.133 384.902 238.582 385.578 cv
238.977 386.184 239.23 386.883 239.348 387.672 cv
239.41 388.141 239.434 388.809 239.426 389.672 cv
232.504 389.672 li
232.543 390.695 232.863 391.406 233.457 391.813 cv
233.832 392.063 234.273 392.188 234.785 392.188 cv
235.324 392.188 235.77 392.039 236.113 391.734 cv
236.301 391.559 236.461 391.324 236.598 391.031 cv
239.301 391.031 li
239.227 391.637 238.914 392.246 238.363 392.859 cv
237.496 393.84 236.285 394.328 234.723 394.328 cv
233.441 394.328 232.305 393.918 231.316 393.094 cv
230.336 392.262 229.848 390.914 229.848 389.047 cv
229.848 387.297 230.289 385.961 231.176 385.031 cv
232.059 384.094 233.211 383.625 234.629 383.625 cv
234.629 383.625 li
cp
234.629 385.797 mo
234.023 385.797 233.551 385.992 233.207 386.375 cv
232.871 386.762 232.66 387.281 232.566 387.938 cv
236.691 387.938 li
236.637 387.242 236.418 386.711 236.035 386.344 cv
235.66 385.98 235.191 385.797 234.629 385.797 cv
234.629 385.797 li
cp
f
246.789 383.625 mo
247.414 383.625 247.98 383.734 248.492 383.953 cv
249 384.172 249.418 384.5 249.742 384.938 cv
250.023 385.324 250.195 385.715 250.258 386.109 cv
250.32 386.508 250.352 387.156 250.352 388.063 cv
250.352 394 li
247.648 394 li
247.648 387.844 li
247.648 387.305 247.555 386.867 247.367 386.531 cv
247.125 386.063 246.668 385.828 245.992 385.828 cv
245.293 385.828 244.762 386.063 244.398 386.531 cv
244.043 387 243.867 387.668 243.867 388.531 cv
243.867 394 li
241.227 394 li
241.227 380.375 li
243.867 380.375 li
243.867 385.203 li
244.25 384.621 244.695 384.215 245.195 383.984 cv
245.695 383.746 246.227 383.625 246.789 383.625 cv
246.789 383.625 li
cp
f
252.848 383.891 mo
255.535 383.891 li
255.535 394 li
252.848 394 li
252.848 383.891 li
cp
255.535 382.688 mo
252.848 382.688 li
252.848 380.234 li
255.535 380.234 li
255.535 382.688 li
cp
f
264.141 387.516 mo
264.086 387.141 263.957 386.805 263.75 386.5 cv
263.457 386.086 263 385.875 262.375 385.875 cv
261.477 385.875 260.867 386.32 260.547 387.203 cv
260.367 387.672 260.281 388.297 260.281 389.078 cv
260.281 389.828 260.367 390.43 260.547 390.875 cv
260.859 391.719 261.453 392.141 262.328 392.141 cv
262.941 392.141 263.379 391.977 263.641 391.641 cv
263.898 391.309 264.055 390.871 264.109 390.328 cv
266.813 390.328 li
266.75 391.141 266.457 391.906 265.938 392.625 cv
265.113 393.781 263.891 394.359 262.266 394.359 cv
260.629 394.359 259.426 393.875 258.656 392.906 cv
257.895 391.938 257.516 390.684 257.516 389.141 cv
257.516 387.414 257.938 386.063 258.781 385.094 cv
259.633 384.125 260.805 383.641 262.297 383.641 cv
263.566 383.641 264.602 383.93 265.406 384.5 cv
266.219 385.074 266.695 386.078 266.844 387.516 cv
264.141 387.516 li
cp
f
268.723 380.328 mo
271.364 380.328 li
271.364 394 li
268.723 394 li
268.723 380.328 li
cp
f
277.926 383.625 mo
278.77 383.625 279.523 383.781 280.191 384.094 cv
280.867 384.406 281.43 384.902 281.879 385.578 cv
282.273 386.184 282.527 386.883 282.645 387.672 cv
282.707 388.141 282.73 388.809 282.723 389.672 cv
275.801 389.672 li
275.84 390.695 276.16 391.406 276.754 391.813 cv
277.129 392.063 277.57 392.188 278.082 392.188 cv
278.621 392.188 279.066 392.039 279.41 391.734 cv
279.598 391.559 279.758 391.324 279.895 391.031 cv
282.598 391.031 li
282.523 391.637 282.211 392.246 281.66 392.859 cv
280.793 393.84 279.582 394.328 278.02 394.328 cv
276.738 394.328 275.602 393.918 274.613 393.094 cv
273.633 392.262 273.145 390.914 273.145 389.047 cv
273.145 387.297 273.586 385.961 274.473 385.031 cv
275.355 384.094 276.508 383.625 277.926 383.625 cv
277.926 383.625 li
cp
277.926 385.797 mo
277.32 385.797 276.848 385.992 276.504 386.375 cv
276.168 386.762 275.957 387.281 275.863 387.938 cv
279.988 387.938 li
279.934 387.242 279.715 386.711 279.332 386.344 cv
278.957 385.98 278.488 385.797 277.926 385.797 cv
277.926 385.797 li
cp
f
237.859 26.5 mo
266.656 26.5 li
266.656 64.3008 li
288.258 64.3008 li
252.258 80.5 li
216.258 64.3008 li
237.859 64.3008 li
237.859 26.5 li
cp
237.859 296.5 mo
237.859 296.5 mo
266.656 296.5 li
266.656 334.301 li
288.258 334.301 li
252.258 350.5 li
216.258 334.301 li
237.859 334.301 li
237.859 296.5 li
cp
237.859 134.5 mo
237.859 134.5 mo
266.656 134.5 li
266.656 172.301 li
288.258 172.301 li
252.258 188.5 li
216.258 172.301 li
237.859 172.301 li
237.859 134.5 li
cp
@
.194824 69.063 mo
90.1948 69.063 li
90.1948 141.063 li
.194824 141.063 li
.194824 69.063 li
cp
.721569 .721569 .721569 rgb
f
38.7148 102.266 mo
39.1289 102.266 39.543 102.352 39.9492 102.516 cv
40.3628 102.684 40.7378 102.969 41.0742 103.375 cv
41.3438 103.711 41.5269 104.121 41.6211 104.609 cv
41.6841 104.934 41.7148 105.406 41.7148 106.031 cv
41.6992 112.063 li
39.1211 112.063 li
39.1211 105.969 li
39.1211 105.605 39.063 105.305 38.9492 105.063 cv
38.73 104.617 38.3159 104.391 37.7148 104.391 cv
37.0269 104.391 36.5508 104.684 36.293 105.266 cv
36.1563 105.57 36.0898 105.934 36.0898 106.359 cv
36.0898 112.063 li
33.5591 112.063 li
33.5591 106.359 li
33.5591 105.789 33.5 105.375 33.3872 105.125 cv
33.1758 104.656 32.7661 104.422 32.1519 104.422 cv
31.4341 104.422 30.9531 104.656 30.7148 105.125 cv
30.5781 105.387 30.5122 105.777 30.5122 106.297 cv
30.5122 112.063 li
27.9648 112.063 li
27.9648 102.5 li
30.4019 102.5 li
30.4019 103.891 li
30.7148 103.402 31.0039 103.047 31.2769 102.828 cv
31.7661 102.453 32.395 102.266 33.168 102.266 cv
33.895 102.266 34.4878 102.43 34.9492 102.75 cv
35.313 103.055 35.5898 103.438 35.7769 103.906 cv
36.0981 103.344 36.5039 102.934 36.9961 102.672 cv
37.5039 102.402 38.0781 102.266 38.7148 102.266 cv
38.7148 102.266 li
cp
0 0 0 rgb
f
47.7813 106.234 mo
48.2378 106.172 48.5659 106.102 48.7661 106.016 cv
49.1172 105.859 49.2969 105.621 49.2969 105.297 cv
49.2969 104.914 49.1602 104.648 48.8911 104.5 cv
48.6172 104.344 48.2231 104.266 47.7031 104.266 cv
47.1089 104.266 46.688 104.414 46.438 104.703 cv
46.2578 104.922 46.145 105.215 46.0938 105.578 cv
43.6719 105.578 li
43.7231 104.746 43.957 104.059 44.375 103.516 cv
45.0308 102.672 46.1641 102.25 47.7813 102.25 cv
48.832 102.25 49.7661 102.461 50.5781 102.875 cv
51.3911 103.293 51.7969 104.078 51.7969 105.234 cv
51.7969 109.625 li
51.7969 109.93 51.8008 110.297 51.813 110.734 cv
51.832 111.07 51.8828 111.293 51.9688 111.406 cv
52.0508 111.523 52.1758 111.617 52.3438 111.688 cv
52.3438 112.063 li
49.6089 112.063 li
49.5352 111.867 49.4839 111.684 49.4531 111.516 cv
49.4219 111.352 49.3979 111.156 49.3911 110.938 cv
49.0352 111.313 48.6328 111.633 48.188 111.891 cv
47.645 112.203 47.0352 112.359 46.3589 112.359 cv
45.4922 112.359 44.7729 112.113 44.2031 111.625 cv
43.6411 111.125 43.3589 110.422 43.3589 109.516 cv
43.3589 108.34 43.813 107.484 44.7188 106.953 cv
45.2188 106.672 45.9531 106.469 46.9219 106.344 cv
47.7813 106.234 li
cp
49.2969 107.406 mo
49.1411 107.5 48.9771 107.578 48.813 107.641 cv
48.6558 107.703 48.438 107.762 48.1563 107.813 cv
47.5938 107.922 li
47.063 108.016 46.6802 108.133 46.4531 108.266 cv
46.0659 108.496 45.875 108.852 45.875 109.328 cv
45.875 109.758 45.9922 110.07 46.2339 110.266 cv
46.4731 110.453 46.7578 110.547 47.0938 110.547 cv
47.6328 110.547 48.1289 110.391 48.5781 110.078 cv
49.0352 109.758 49.2729 109.172 49.2969 108.328 cv
49.2969 107.406 li
cp
f
59.1992 102.266 mo
60.3242 102.266 61.27 102.684 62.043 103.516 cv
62.8242 104.34 63.2148 105.555 63.2148 107.156 cv
63.2148 108.844 62.832 110.133 62.0742 111.016 cv
61.313 111.891 60.332 112.328 59.1372 112.328 cv
58.375 112.328 57.7461 112.141 57.2461 111.766 cv
56.9648 111.559 56.6909 111.25 56.4341 110.844 cv
56.4341 115.828 li
53.9492 115.828 li
53.9492 102.484 li
56.355 102.484 li
56.355 103.891 li
56.625 103.477 56.9102 103.148 57.2148 102.906 cv
57.7661 102.48 58.4258 102.266 59.1992 102.266 cv
59.1992 102.266 li
cp
60.6211 107.266 mo
60.6211 106.539 60.4531 105.887 60.1211 105.313 cv
59.7852 104.742 59.2378 104.453 58.48 104.453 cv
57.5742 104.453 56.9492 104.887 56.605 105.75 cv
56.4258 106.211 56.3398 106.789 56.3398 107.484 cv
56.3398 108.602 56.6372 109.387 57.23 109.844 cv
57.582 110.105 58 110.234 58.48 110.234 cv
59.1758 110.234 59.707 109.965 60.0742 109.422 cv
60.438 108.883 60.6211 108.164 60.6211 107.266 cv
60.6211 107.266 li
cp
f
90.2578 96.7148 mo
140.656 96.7148 li
140.656 80.5 li
162.258 107.527 li
140.656 134.551 li
140.656 118.336 li
90.2578 118.336 li
90.2578 96.7148 li
cp
.721569 .721569 .721569 rgb
f
0 175.957 mo
90 175.957 li
90 229.957 li
0 229.957 li
0 175.957 li
cp
0 .407843 1 rgb
f
24.813 196.238 mo
24.813 197.332 24.5 198.27 23.875 199.051 cv
23.25 199.832 22.2969 200.223 21.0161 200.223 cv
19.7339 200.223 18.7729 199.832 18.1411 199.051 cv
17.5161 198.27 17.2031 197.332 17.2031 196.238 cv
17.2031 195.168 17.5161 194.238 18.1411 193.457 cv
18.7729 192.668 19.7339 192.27 21.0161 192.27 cv
22.2969 192.27 23.25 192.668 23.875 193.457 cv
24.5 194.238 24.813 195.168 24.813 196.238 cv
24.813 196.238 li
cp
21 198.582 mo
21.5698 198.582 22.0078 198.379 22.313 197.973 cv
22.6128 197.566 22.7661 196.988 22.7661 196.238 cv
22.7661 195.5 22.6128 194.926 22.313 194.52 cv
22.0078 194.113 21.5698 193.91 21 193.91 cv
20.4258 193.91 19.9839 194.113 19.6719 194.52 cv
19.3672 194.926 19.2188 195.5 19.2188 196.238 cv
19.2188 196.988 19.3672 197.566 19.6719 197.973 cv
19.9839 198.379 20.4258 198.582 21 198.582 cv
21 198.582 li
cp
0 0 0 rgb
f
29.7378 198.551 mo
30.2378 198.551 30.6211 198.348 30.895 197.941 cv
31.1758 197.535 31.3159 197.004 31.3159 196.348 cv
31.3159 195.816 31.2461 195.379 31.1128 195.035 cv
30.8521 194.379 30.3711 194.051 29.6758 194.051 cv
28.9771 194.051 28.4922 194.371 28.2231 195.004 cv
28.0859 195.348 28.02 195.793 28.02 196.332 cv
28.02 196.969 28.1602 197.5 28.4409 197.926 cv
28.7231 198.344 29.1519 198.551 29.7378 198.551 cv
29.7378 198.551 li
cp
30.2378 192.348 mo
31.2148 192.348 31.98 192.703 32.5352 193.41 cv
33.0859 194.109 33.3628 195.016 33.3628 196.129 cv
33.3628 197.297 33.0859 198.262 32.5352 199.02 cv
31.9922 199.781 31.23 200.16 30.2539 200.16 cv
29.6372 200.16 29.145 200.035 28.77 199.785 cv
28.5508 199.641 28.3091 199.387 28.0508 199.02 cv
28.0508 199.957 li
26.145 199.957 li
26.145 189.895 li
28.082 189.895 li
28.082 193.473 li
28.332 193.129 28.6021 192.863 28.895 192.676 cv
29.2461 192.457 29.6948 192.348 30.2378 192.348 cv
30.2378 192.348 li
cp
f
36.2769 197.582 mo
36.3159 197.926 36.4058 198.172 36.543 198.316 cv
36.793 198.578 37.2378 198.707 37.8872 198.707 cv
38.27 198.707 38.5742 198.652 38.793 198.535 cv
39.02 198.422 39.1372 198.25 39.1372 198.02 cv
39.1372 197.801 39.0469 197.637 38.8711 197.52 cv
38.6841 197.406 38.0039 197.215 36.8398 196.941 cv
35.9961 196.723 35.4019 196.457 35.0591 196.145 cv
34.7031 195.844 34.5269 195.402 34.5269 194.816 cv
34.5269 194.121 34.7969 193.527 35.3398 193.035 cv
35.8789 192.547 36.6411 192.301 37.6211 192.301 cv
38.5469 192.301 39.3008 192.488 39.8872 192.863 cv
40.48 193.23 40.8159 193.863 40.9019 194.77 cv
38.9492 194.77 li
38.9258 194.52 38.8589 194.324 38.7461 194.176 cv
38.5269 193.918 38.1602 193.785 37.6519 193.785 cv
37.2231 193.785 36.9219 193.855 36.7461 193.988 cv
36.5659 194.113 36.48 194.266 36.48 194.441 cv
36.48 194.672 36.5742 194.832 36.7622 194.926 cv
36.9492 195.031 37.625 195.215 38.793 195.473 cv
39.563 195.652 40.1411 195.926 40.5269 196.301 cv
40.9102 196.676 41.105 197.145 41.105 197.707 cv
41.105 198.438 40.8281 199.035 40.2769 199.504 cv
39.7339 199.973 38.8911 200.207 37.7461 200.207 cv
36.5659 200.207 35.6992 199.961 35.1372 199.473 cv
34.582 198.973 34.3091 198.344 34.3091 197.582 cv
36.2769 197.582 li
cp
f
41.7813 193.957 mo
41.7813 192.566 li
42.8281 192.566 li
42.8281 190.488 li
44.75 190.488 li
44.75 192.566 li
45.9688 192.566 li
45.9688 193.957 li
44.75 193.957 li
44.75 197.895 li
44.75 198.207 44.7852 198.402 44.8589 198.473 cv
44.9409 198.547 45.1802 198.582 45.5781 198.582 cv
45.6411 198.582 45.7031 198.582 45.7661 198.582 cv
45.8281 198.582 45.895 198.578 45.9688 198.566 cv
45.9688 200.02 li
45.0308 200.066 li
44.1128 200.098 43.4878 199.938 43.1558 199.582 cv
42.938 199.355 42.8281 199.012 42.8281 198.551 cv
42.8281 193.957 li
41.7813 193.957 li
cp
f
50.1289 195.426 mo
50.4922 195.387 50.7539 195.328 50.9102 195.254 cv
51.1909 195.141 51.332 194.957 51.332 194.707 cv
51.332 194.395 51.2231 194.184 51.0039 194.066 cv
50.793 193.953 50.4878 193.895 50.082 193.895 cv
49.6128 193.895 49.2852 194.012 49.0981 194.238 cv
48.9609 194.406 48.8672 194.637 48.8159 194.926 cv
46.9409 194.926 li
46.98 194.27 47.1641 193.734 47.4878 193.316 cv
48.0078 192.66 48.895 192.332 50.145 192.332 cv
50.957 192.332 51.6802 192.496 52.3159 192.816 cv
52.9492 193.141 53.27 193.75 53.27 194.645 cv
53.27 198.066 li
53.27 198.309 53.2729 198.594 53.2852 198.926 cv
53.293 199.176 53.332 199.348 53.395 199.441 cv
53.457 199.535 53.5552 199.613 53.6909 199.676 cv
53.6909 199.957 li
51.5659 199.957 li
51.5039 199.813 51.4609 199.672 51.4409 199.535 cv
51.418 199.402 51.4019 199.25 51.395 199.082 cv
51.1211 199.375 50.8091 199.625 50.457 199.832 cv
50.0391 200.07 49.5659 200.191 49.0352 200.191 cv
48.355 200.191 47.8008 199.996 47.3628 199.613 cv
46.9258 199.23 46.707 198.684 46.707 197.973 cv
46.707 197.059 47.0591 196.395 47.77 195.988 cv
48.1519 195.762 48.7231 195.598 49.4731 195.504 cv
50.1289 195.426 li
cp
51.3159 196.332 mo
51.1909 196.418 51.0659 196.484 50.9409 196.535 cv
50.8159 196.578 50.645 196.621 50.4258 196.66 cv
49.9878 196.738 li
49.582 196.813 49.2891 196.902 49.1128 197.004 cv
48.8091 197.184 48.6602 197.457 48.6602 197.832 cv
48.6602 198.168 48.7461 198.406 48.9258 198.551 cv
49.1128 198.699 49.3398 198.77 49.6128 198.77 cv
50.0269 198.77 50.4141 198.652 50.77 198.41 cv
51.1211 198.16 51.3052 197.707 51.3159 197.051 cv
51.3159 196.332 li
cp
f
59.4448 195.176 mo
59.4141 194.895 59.3198 194.645 59.1641 194.426 cv
58.9448 194.125 58.605 193.973 58.1479 193.973 cv
57.4922 193.973 57.043 194.301 56.8052 194.957 cv
56.668 195.301 56.6021 195.762 56.6021 196.332 cv
56.6021 196.887 56.668 197.328 56.8052 197.66 cv
57.0308 198.277 57.4688 198.582 58.1172 198.582 cv
58.563 198.582 58.8828 198.465 59.0698 198.223 cv
59.2661 197.973 59.3872 197.652 59.4302 197.254 cv
61.4141 197.254 li
61.3711 197.848 61.1558 198.41 60.7729 198.941 cv
60.168 199.797 59.2661 200.223 58.0698 200.223 cv
56.8711 200.223 55.9839 199.871 55.4141 199.16 cv
54.8521 198.441 54.5698 197.516 54.5698 196.379 cv
54.5698 195.098 54.8828 194.105 55.5078 193.395 cv
56.1328 192.688 56.9922 192.332 58.0859 192.332 cv
59.0229 192.332 59.7891 192.543 60.3828 192.957 cv
60.9771 193.375 61.3281 194.113 61.4448 195.176 cv
59.4448 195.176 li
cp
f
62.8281 189.879 mo
64.7808 189.879 li
64.7808 199.957 li
62.8281 199.957 li
62.8281 189.879 li
cp
f
69.605 192.301 mo
70.23 192.301 70.7852 192.422 71.2769 192.66 cv
71.7769 192.891 72.188 193.254 72.5122 193.754 cv
72.8008 194.203 72.9961 194.719 73.0898 195.301 cv
73.1289 195.637 73.1519 196.125 73.1519 196.77 cv
68.043 196.77 li
68.0742 197.52 68.3091 198.047 68.7461 198.348 cv
69.0161 198.535 69.3398 198.629 69.7148 198.629 cv
70.1211 198.629 70.4492 198.516 70.6992 198.285 cv
70.832 198.16 70.9531 197.988 71.0591 197.77 cv
73.043 197.77 li
73 198.207 72.77 198.656 72.355 199.113 cv
71.7188 199.844 70.8281 200.207 69.6841 200.207 cv
68.7339 200.207 67.895 199.902 67.168 199.285 cv
66.4492 198.672 66.0898 197.676 66.0898 196.301 cv
66.0898 195.02 66.4102 194.035 67.0591 193.348 cv
67.7148 192.652 68.563 192.301 69.605 192.301 cv
69.605 192.301 li
cp
69.605 193.91 mo
69.1558 193.91 68.8091 194.051 68.5591 194.332 cv
68.3091 194.613 68.1519 195 68.0898 195.488 cv
71.1211 195.488 li
71.0898 194.969 70.9341 194.578 70.6519 194.316 cv
70.3711 194.047 70.02 193.91 69.605 193.91 cv
69.605 193.91 li
cp
f
24.6172 214.582 mo
24.6558 214.926 24.7461 215.172 24.8828 215.316 cv
25.1328 215.578 25.5781 215.707 26.2271 215.707 cv
26.6089 215.707 26.9141 215.652 27.1328 215.535 cv
27.3589 215.422 27.4771 215.25 27.4771 215.02 cv
27.4771 214.801 27.3872 214.637 27.2109 214.52 cv
27.0229 214.406 26.3438 214.215 25.1802 213.941 cv
24.3359 213.723 23.7422 213.457 23.3979 213.145 cv
23.043 212.844 22.8672 212.402 22.8672 211.816 cv
22.8672 211.121 23.1372 210.527 23.6802 210.035 cv
24.2188 209.547 24.98 209.301 25.9609 209.301 cv
26.8872 209.301 27.6411 209.488 28.2271 209.863 cv
28.8198 210.23 29.1558 210.863 29.2422 211.77 cv
27.2891 211.77 li
27.2661 211.52 27.1992 211.324 27.0859 211.176 cv
26.8672 210.918 26.5 210.785 25.9922 210.785 cv
25.563 210.785 25.2622 210.855 25.0859 210.988 cv
24.9063 211.113 24.8198 211.266 24.8198 211.441 cv
24.8198 211.672 24.9141 211.832 25.1021 211.926 cv
25.2891 212.031 25.9648 212.215 27.1328 212.473 cv
27.9019 212.652 28.48 212.926 28.8672 213.301 cv
29.25 213.676 29.4448 214.145 29.4448 214.707 cv
29.4448 215.438 29.168 216.035 28.6172 216.504 cv
28.0742 216.973 27.23 217.207 26.0859 217.207 cv
24.9063 217.207 24.0391 216.961 23.4771 216.473 cv
22.9219 215.973 22.6479 215.344 22.6479 214.582 cv
24.6172 214.582 li
cp
f
33.8242 209.301 mo
34.4492 209.301 35.0039 209.422 35.4961 209.66 cv
35.9961 209.891 36.4058 210.254 36.73 210.754 cv
37.02 211.203 37.2148 211.719 37.3091 212.301 cv
37.3481 212.637 37.3711 213.125 37.3711 213.77 cv
32.2622 213.77 li
32.293 214.52 32.5269 215.047 32.9648 215.348 cv
33.2339 215.535 33.5591 215.629 33.9341 215.629 cv
34.3398 215.629 34.668 215.516 34.918 215.285 cv
35.0508 215.16 35.1719 214.988 35.2769 214.77 cv
37.2622 214.77 li
37.2188 215.207 36.9878 215.656 36.5742 216.113 cv
35.938 216.844 35.0469 217.207 33.9019 217.207 cv
32.9531 217.207 32.1128 216.902 31.3872 216.285 cv
30.668 215.672 30.3091 214.676 30.3091 213.301 cv
30.3091 212.02 30.6289 211.035 31.2769 210.348 cv
31.9341 209.652 32.7813 209.301 33.8242 209.301 cv
33.8242 209.301 li
cp
33.8242 210.91 mo
33.375 210.91 33.0269 211.051 32.7769 211.332 cv
32.5269 211.613 32.3711 212 32.3091 212.488 cv
35.3398 212.488 li
35.3091 211.969 35.1519 211.578 34.8711 211.316 cv
34.5898 211.047 34.2378 210.91 33.8242 210.91 cv
33.8242 210.91 li
cp
f
42.7969 209.332 mo
43.5659 209.332 44.1948 209.535 44.688 209.941 cv
45.1758 210.34 45.4219 211.004 45.4219 211.941 cv
45.4219 216.957 li
43.438 216.957 li
43.438 212.426 li
43.438 212.031 43.3828 211.73 43.2813 211.52 cv
43.082 211.137 42.7188 210.941 42.188 210.941 cv
41.52 210.941 41.0659 211.223 40.8281 211.785 cv
40.6909 212.09 40.625 212.469 40.625 212.926 cv
40.625 216.957 li
38.688 216.957 li
38.688 209.52 li
40.563 209.52 li
40.563 210.613 li
40.813 210.23 41.0508 209.953 41.2808 209.785 cv
41.6758 209.484 42.1802 209.332 42.7969 209.332 cv
42.7969 209.332 li
cp
f
48.7422 214.582 mo
48.7808 214.926 48.8711 215.172 49.0078 215.316 cv
49.2578 215.578 49.7031 215.707 50.3521 215.707 cv
50.7339 215.707 51.0391 215.652 51.2578 215.535 cv
51.4839 215.422 51.6021 215.25 51.6021 215.02 cv
51.6021 214.801 51.5122 214.637 51.3359 214.52 cv
51.1479 214.406 50.4688 214.215 49.3052 213.941 cv
48.4609 213.723 47.8672 213.457 47.5229 213.145 cv
47.168 212.844 46.9922 212.402 46.9922 211.816 cv
46.9922 211.121 47.2622 210.527 47.8052 210.035 cv
48.3438 209.547 49.105 209.301 50.0859 209.301 cv
51.0122 209.301 51.7661 209.488 52.3521 209.863 cv
52.9448 210.23 53.2808 210.863 53.3672 211.77 cv
51.4141 211.77 li
51.3911 211.52 51.3242 211.324 51.2109 211.176 cv
50.9922 210.918 50.625 210.785 50.1172 210.785 cv
49.688 210.785 49.3872 210.855 49.2109 210.988 cv
49.0308 211.113 48.9448 211.266 48.9448 211.441 cv
48.9448 211.672 49.0391 211.832 49.2271 211.926 cv
49.4141 212.031 50.0898 212.215 51.2578 212.473 cv
52.0269 212.652 52.605 212.926 52.9922 213.301 cv
53.375 213.676 53.5698 214.145 53.5698 214.707 cv
53.5698 215.438 53.293 216.035 52.7422 216.504 cv
52.1992 216.973 51.355 217.207 50.2109 217.207 cv
49.0308 217.207 48.1641 216.961 47.6021 216.473 cv
47.0469 215.973 46.7729 215.344 46.7729 214.582 cv
48.7422 214.582 li
cp
f
62.168 213.238 mo
62.168 214.332 61.855 215.27 61.23 216.051 cv
60.605 216.832 59.6519 217.223 58.3711 217.223 cv
57.0898 217.223 56.1289 216.832 55.4961 216.051 cv
54.8711 215.27 54.5591 214.332 54.5591 213.238 cv
54.5591 212.168 54.8711 211.238 55.4961 210.457 cv
56.1289 209.668 57.0898 209.27 58.3711 209.27 cv
59.6519 209.27 60.605 209.668 61.23 210.457 cv
61.855 211.238 62.168 212.168 62.168 213.238 cv
62.168 213.238 li
cp
58.355 215.582 mo
58.9258 215.582 59.3628 215.379 59.668 214.973 cv
59.9688 214.566 60.1211 213.988 60.1211 213.238 cv
60.1211 212.5 59.9688 211.926 59.668 211.52 cv
59.3628 211.113 58.9258 210.91 58.355 210.91 cv
57.7808 210.91 57.3398 211.113 57.0269 211.52 cv
56.7231 211.926 56.5742 212.5 56.5742 213.238 cv
56.5742 213.988 56.7231 214.566 57.0269 214.973 cv
57.3398 215.379 57.7808 215.582 58.355 215.582 cv
58.355 215.582 li
cp
f
67.6089 209.332 mo
67.6479 209.332 67.6802 209.332 67.7031 209.332 cv
67.7339 209.332 67.7891 209.34 67.875 209.348 cv
67.875 211.332 li
67.75 211.324 67.6411 211.316 67.5469 211.316 cv
67.4531 211.309 67.375 211.301 67.313 211.301 cv
66.5308 211.301 66.0039 211.559 65.7339 212.066 cv
65.5781 212.359 65.5 212.801 65.5 213.395 cv
65.5 216.957 li
63.5469 216.957 li
63.5469 209.504 li
65.4058 209.504 li
65.4058 210.801 li
65.707 210.313 65.9688 209.973 66.188 209.785 cv
66.5508 209.484 67.0229 209.332 67.6089 209.332 cv
67.6089 209.332 li
cp
f
90.2578 199.18 mo
141.414 199.18 li
141.414 188.5 li
161.656 203.617 li
141.414 218.73 li
141.414 208.051 li
90.2578 208.051 li
90.2578 199.18 li
cp
0 .407843 1 rgb
f
1.35498 240.813 mo
91.355 240.813 li
91.355 294.813 li
1.35498 294.813 li
1.35498 240.813 li
cp
1 .129412 0 rgb
f
34.2813 265.656 mo
35.2188 265.656 36.0078 266 36.6558 266.688 cv
37.3008 267.375 37.625 268.387 37.625 269.719 cv
37.625 271.125 37.3052 272.199 36.6719 272.938 cv
36.0469 273.68 35.2339 274.047 34.2339 274.047 cv
33.5981 274.047 33.0698 273.883 32.6558 273.563 cv
32.4258 273.387 32.2031 273.133 31.9839 272.797 cv
31.9839 276.953 li
29.9219 276.953 li
29.9219 265.828 li
31.9219 265.828 li
31.9219 267.016 li
32.1411 266.664 32.3789 266.387 32.6411 266.188 cv
33.0981 265.836 33.645 265.656 34.2813 265.656 cv
34.2813 265.656 li
cp
35.4688 269.828 mo
35.4688 269.203 35.3281 268.656 35.0469 268.188 cv
34.7661 267.719 34.313 267.484 33.688 267.484 cv
32.9258 267.484 32.4063 267.84 32.125 268.547 cv
31.9771 268.934 31.9058 269.418 31.9058 270 cv
31.9058 270.93 32.1479 271.578 32.6411 271.953 cv
32.9409 272.172 33.2891 272.281 33.688 272.281 cv
34.27 272.281 34.7109 272.059 35.0161 271.609 cv
35.3159 271.164 35.4688 270.57 35.4688 269.828 cv
35.4688 269.828 li
cp
0 0 0 rgb
f
46.8052 269.828 mo
46.8052 271.008 46.4648 272.012 45.7891 272.844 cv
45.1211 273.68 44.1021 274.094 42.7271 274.094 cv
41.3521 274.094 40.3242 273.68 39.6479 272.844 cv
38.98 272.012 38.6479 271.008 38.6479 269.828 cv
38.6479 268.684 38.98 267.688 39.6479 266.844 cv
40.3242 266 41.3521 265.578 42.7271 265.578 cv
44.1021 265.578 45.1211 266 45.7891 266.844 cv
46.4648 267.688 46.8052 268.684 46.8052 269.828 cv
46.8052 269.828 li
cp
42.7271 272.344 mo
43.3281 272.344 43.793 272.125 44.1172 271.688 cv
44.4492 271.25 44.6172 270.633 44.6172 269.828 cv
44.6172 269.039 44.4492 268.43 44.1172 268 cv
43.793 267.563 43.3281 267.344 42.7271 267.344 cv
42.1089 267.344 41.6372 267.563 41.3052 268 cv
40.98 268.43 40.8198 269.039 40.8198 269.828 cv
40.8198 270.633 40.98 271.25 41.3052 271.688 cv
41.6372 272.125 42.1089 272.344 42.7271 272.344 cv
42.7271 272.344 li
cp
f
49.918 271.266 mo
49.9688 271.633 50.0659 271.891 50.2148 272.047 cv
50.4731 272.328 50.9531 272.469 51.6519 272.469 cv
52.0591 272.469 52.3789 272.414 52.6211 272.297 cv
52.8589 272.172 52.98 271.984 52.98 271.734 cv
52.98 271.508 52.8872 271.328 52.6992 271.203 cv
52.5 271.078 51.77 270.871 50.5122 270.578 cv
49.6128 270.352 48.98 270.07 48.605 269.734 cv
48.23 269.402 48.043 268.922 48.043 268.297 cv
48.043 267.559 48.332 266.93 48.918 266.406 cv
49.5 265.875 50.313 265.609 51.355 265.609 cv
52.355 265.609 53.168 265.809 53.793 266.203 cv
54.418 266.602 54.7769 267.289 54.8711 268.266 cv
52.793 268.266 li
52.7622 267.996 52.6841 267.781 52.5591 267.625 cv
52.3281 267.344 51.938 267.203 51.3872 267.203 cv
50.938 267.203 50.6128 267.277 50.418 267.422 cv
50.23 267.559 50.1372 267.719 50.1372 267.906 cv
50.1372 268.148 50.2339 268.32 50.4341 268.422 cv
50.6411 268.539 51.3628 268.73 52.605 269 cv
53.438 269.199 54.063 269.496 54.48 269.891 cv
54.8872 270.297 55.0898 270.797 55.0898 271.391 cv
55.0898 272.184 54.793 272.828 54.1992 273.328 cv
53.6128 273.828 52.707 274.078 51.48 274.078 cv
50.23 274.078 49.3008 273.816 48.6992 273.297 cv
48.105 272.766 47.8091 272.09 47.8091 271.266 cv
49.918 271.266 li
cp
f
59.793 265.609 mo
60.457 265.609 61.0591 265.734 61.5898 265.984 cv
62.1211 266.234 62.5591 266.633 62.9019 267.172 cv
63.2148 267.641 63.418 268.188 63.5122 268.813 cv
63.563 269.18 63.582 269.711 63.5742 270.406 cv
58.1211 270.406 li
58.1411 271.199 58.3911 271.758 58.8711 272.078 cv
59.1602 272.289 59.5039 272.391 59.9019 272.391 cv
60.3398 272.391 60.688 272.266 60.9492 272.016 cv
61.105 271.883 61.2339 271.699 61.3398 271.469 cv
63.48 271.469 li
63.4258 271.938 63.1758 272.418 62.73 272.906 cv
62.0508 273.688 61.0981 274.078 59.8711 274.078 cv
58.8481 274.078 57.9492 273.75 57.168 273.094 cv
56.395 272.438 56.0122 271.375 56.0122 269.906 cv
56.0122 268.523 56.3589 267.461 57.0591 266.719 cv
57.7661 265.98 58.6758 265.609 59.793 265.609 cv
59.793 265.609 li
cp
59.793 267.344 mo
59.313 267.344 58.938 267.496 58.668 267.797 cv
58.395 268.102 58.23 268.508 58.168 269.016 cv
61.418 269.016 li
61.375 268.465 61.2031 268.047 60.9019 267.766 cv
60.6089 267.484 60.2378 267.344 59.793 267.344 cv
59.793 267.344 li
cp
f
91.188 261.711 mo
142.344 261.711 li
142.344 251.031 li
162.586 266.145 li
142.344 281.262 li
142.344 270.578 li
91.188 270.578 li
91.188 261.711 li
cp
1 .129412 0 rgb
f
239.992 3.22314 mo
240.469 3.22314 240.891 3.29688 241.258 3.44092 cv
241.859 3.69092 242.352 4.15625 242.727 4.83203 cv
242.727 3.45703 li
245.164 3.45703 li
245.164 12.5352 li
245.164 13.7729 244.953 14.707 244.539 15.332 cv
243.82 16.4141 242.449 16.957 240.43 16.957 cv
239.199 16.957 238.199 16.7148 237.43 16.2378 cv
236.656 15.7578 236.23 15.0391 236.148 14.082 cv
238.867 14.082 li
238.938 14.3711 239.055 14.582 239.211 14.707 cv
239.48 14.9341 239.934 15.0508 240.57 15.0508 cv
241.477 15.0508 242.078 14.7461 242.383 14.145 cv
242.578 13.7578 242.68 13.1128 242.68 12.207 cv
242.68 11.582 li
242.438 12 242.184 12.3091 241.914 12.5039 cv
241.414 12.8911 240.762 13.082 239.961 13.082 cv
238.73 13.082 237.746 12.6519 237.008 11.7852 cv
236.277 10.9219 235.914 9.75 235.914 8.27002 cv
235.914 6.84375 236.266 5.64502 236.977 4.67578 cv
237.684 3.70703 238.688 3.22314 239.992 3.22314 cv
239.992 3.22314 li
cp
240.617 10.9731 mo
241.199 10.9731 241.695 10.7539 242.102 10.3159 cv
242.508 9.87109 242.711 9.16797 242.711 8.20703 cv
242.711 7.29297 242.516 6.59814 242.133 6.12891 cv
241.746 5.65186 241.23 5.41016 240.586 5.41016 cv
239.711 5.41016 239.105 5.82813 238.773 6.66016 cv
238.594 7.09814 238.508 7.64111 238.508 8.28516 cv
238.508 8.83984 238.602 9.33203 238.789 9.77002 cv
239.133 10.5742 239.742 10.9731 240.617 10.9731 cv
240.617 10.9731 li
cp
0 0 0 rgb
f
256.707 8.27002 mo
256.707 9.67578 256.301 10.8789 255.488 11.8789 cv
254.684 12.8711 253.457 13.3628 251.801 13.3628 cv
250.152 13.3628 248.926 12.8711 248.113 11.8789 cv
247.309 10.8789 246.91 9.67578 246.91 8.27002 cv
246.91 6.88672 247.309 5.68799 248.113 4.67578 cv
248.926 3.65625 250.152 3.14502 251.801 3.14502 cv
253.457 3.14502 254.684 3.65625 255.488 4.67578 cv
256.301 5.68799 256.707 6.88672 256.707 8.27002 cv
256.707 8.27002 li
cp
251.801 11.27 mo
252.527 11.27 253.09 11.0117 253.488 10.4878 cv
253.883 9.96875 254.082 9.22998 254.082 8.27002 cv
254.082 7.30078 253.883 6.56299 253.488 6.05078 cv
253.09 5.53125 252.527 5.27002 251.801 5.27002 cv
251.07 5.27002 250.508 5.53125 250.113 6.05078 cv
249.715 6.56299 249.52 7.30078 249.52 8.27002 cv
249.52 9.22998 249.715 9.96875 250.113 10.4878 cv
250.508 11.0117 251.07 11.27 251.801 11.27 cv
251.801 11.27 li
cp
f
262.266 7.20703 mo
262.723 7.14502 263.051 7.07422 263.25 6.98779 cv
263.602 6.83203 263.781 6.59375 263.781 6.27002 cv
263.781 5.88672 263.645 5.62109 263.375 5.47314 cv
263.102 5.31592 262.707 5.23779 262.188 5.23779 cv
261.594 5.23779 261.172 5.38672 260.922 5.67578 cv
260.742 5.89502 260.629 6.18799 260.578 6.55078 cv
258.156 6.55078 li
258.207 5.71875 258.441 5.03125 258.859 4.48779 cv
259.516 3.64502 260.648 3.22314 262.266 3.22314 cv
263.316 3.22314 264.25 3.43408 265.063 3.84814 cv
265.875 4.26611 266.281 5.05078 266.281 6.20703 cv
266.281 10.5981 li
266.281 10.9019 266.285 11.27 266.297 11.707 cv
266.316 12.043 266.367 12.2661 266.453 12.3789 cv
266.535 12.4961 266.66 12.5898 266.828 12.6602 cv
266.828 13.0352 li
264.094 13.0352 li
264.02 12.8398 263.969 12.6563 263.938 12.4878 cv
263.906 12.3242 263.883 12.1289 263.875 11.9102 cv
263.52 12.2852 263.117 12.605 262.672 12.8628 cv
262.129 13.1758 261.52 13.332 260.844 13.332 cv
259.977 13.332 259.258 13.0859 258.688 12.5981 cv
258.125 12.0981 257.844 11.395 257.844 10.4878 cv
257.844 9.31299 258.297 8.45703 259.203 7.92578 cv
259.703 7.64502 260.438 7.44092 261.406 7.31592 cv
262.266 7.20703 li
cp
263.781 8.37891 mo
263.625 8.47314 263.461 8.55078 263.297 8.61279 cv
263.141 8.67578 262.922 8.73389 262.641 8.78516 cv
262.078 8.89502 li
261.547 8.98779 261.164 9.10498 260.938 9.23779 cv
260.551 9.46875 260.359 9.82422 260.359 10.3008 cv
260.359 10.73 260.477 11.043 260.719 11.2378 cv
260.957 11.4258 261.242 11.52 261.578 11.52 cv
262.117 11.52 262.613 11.3628 263.063 11.0508 cv
263.52 10.73 263.758 10.145 263.781 9.30078 cv
263.781 8.37891 li
cp
f
268.555 .0820313 mo
271.071 .0820313 li
271.071 13.0352 li
268.555 13.0352 li
268.555 .0820313 li
cp
f
277.867 149.016 mo
278.344 149.016 278.766 149.09 279.133 149.234 cv
279.734 149.484 280.227 149.949 280.602 150.625 cv
280.602 149.25 li
283.039 149.25 li
283.039 158.328 li
283.039 159.566 282.828 160.5 282.414 161.125 cv
281.695 162.207 280.324 162.75 278.305 162.75 cv
277.074 162.75 276.074 162.508 275.305 162.031 cv
274.531 161.551 274.105 160.832 274.023 159.875 cv
276.742 159.875 li
276.813 160.164 276.93 160.375 277.086 160.5 cv
277.355 160.727 277.809 160.844 278.445 160.844 cv
279.352 160.844 279.953 160.539 280.258 159.938 cv
280.453 159.551 280.555 158.906 280.555 158 cv
280.555 157.375 li
280.313 157.793 280.059 158.102 279.789 158.297 cv
279.289 158.684 278.637 158.875 277.836 158.875 cv
276.605 158.875 275.621 158.445 274.883 157.578 cv
274.152 156.715 273.789 155.543 273.789 154.063 cv
273.789 152.637 274.141 151.438 274.852 150.469 cv
275.559 149.5 276.563 149.016 277.867 149.016 cv
277.867 149.016 li
cp
278.492 156.766 mo
279.074 156.766 279.57 156.547 279.977 156.109 cv
280.383 155.664 280.586 154.961 280.586 154 cv
280.586 153.086 280.391 152.391 280.008 151.922 cv
279.621 151.445 279.105 151.203 278.461 151.203 cv
277.586 151.203 276.98 151.621 276.648 152.453 cv
276.469 152.891 276.383 153.434 276.383 154.078 cv
276.383 154.633 276.477 155.125 276.664 155.563 cv
277.008 156.367 277.617 156.766 278.492 156.766 cv
278.492 156.766 li
cp
f
285.422 145.875 mo
287.938 145.875 li
287.938 158.828 li
285.422 158.828 li
285.422 145.875 li
cp
f
299.582 154.063 mo
299.582 155.469 299.176 156.672 298.363 157.672 cv
297.559 158.664 296.332 159.156 294.676 159.156 cv
293.027 159.156 291.801 158.664 290.988 157.672 cv
290.184 156.672 289.785 155.469 289.785 154.063 cv
289.785 152.68 290.184 151.48 290.988 150.469 cv
291.801 149.449 293.027 148.938 294.676 148.938 cv
296.332 148.938 297.559 149.449 298.363 150.469 cv
299.176 151.48 299.582 152.68 299.582 154.063 cv
299.582 154.063 li
cp
294.676 157.063 mo
295.402 157.063 295.965 156.805 296.363 156.281 cv
296.758 155.762 296.957 155.023 296.957 154.063 cv
296.957 153.094 296.758 152.355 296.363 151.844 cv
295.965 151.324 295.402 151.063 294.676 151.063 cv
293.945 151.063 293.383 151.324 292.988 151.844 cv
292.59 152.355 292.395 153.094 292.395 154.063 cv
292.395 155.023 292.59 155.762 292.988 156.281 cv
293.383 156.805 293.945 157.063 294.676 157.063 cv
294.676 157.063 li
cp
f
305.902 157.016 mo
306.547 157.016 307.047 156.758 307.402 156.234 cv
307.766 155.715 307.949 155.027 307.949 154.172 cv
307.949 153.496 307.859 152.934 307.684 152.484 cv
307.348 151.641 306.734 151.219 305.84 151.219 cv
304.922 151.219 304.297 151.637 303.965 152.469 cv
303.785 152.906 303.699 153.477 303.699 154.172 cv
303.699 154.996 303.879 155.68 304.246 156.219 cv
304.609 156.75 305.16 157.016 305.902 157.016 cv
305.902 157.016 li
cp
306.543 149.031 mo
307.801 149.031 308.785 149.492 309.496 150.406 cv
310.215 151.313 310.574 152.484 310.574 153.922 cv
310.574 155.402 310.219 156.633 309.512 157.609 cv
308.813 158.59 307.832 159.078 306.574 159.078 cv
305.781 159.078 305.145 158.922 304.668 158.609 cv
304.375 158.422 304.063 158.094 303.73 157.625 cv
303.73 158.828 li
301.277 158.828 li
301.277 145.891 li
303.777 145.891 li
303.777 150.5 li
304.09 150.055 304.438 149.711 304.824 149.469 cv
305.27 149.18 305.844 149.031 306.543 149.031 cv
306.543 149.031 li
cp
f
316.133 153 mo
316.59 152.938 316.918 152.867 317.117 152.781 cv
317.469 152.625 317.648 152.387 317.648 152.063 cv
317.648 151.68 317.512 151.414 317.242 151.266 cv
316.969 151.109 316.574 151.031 316.055 151.031 cv
315.461 151.031 315.039 151.18 314.789 151.469 cv
314.609 151.688 314.496 151.98 314.445 152.344 cv
312.023 152.344 li
312.074 151.512 312.309 150.824 312.727 150.281 cv
313.383 149.438 314.516 149.016 316.133 149.016 cv
317.184 149.016 318.117 149.227 318.93 149.641 cv
319.742 150.059 320.148 150.844 320.148 152 cv
320.148 156.391 li
320.148 156.695 320.152 157.063 320.164 157.5 cv
320.184 157.836 320.234 158.059 320.32 158.172 cv
320.402 158.289 320.527 158.383 320.695 158.453 cv
320.695 158.828 li
317.961 158.828 li
317.887 158.633 317.836 158.449 317.805 158.281 cv
317.773 158.117 317.75 157.922 317.742 157.703 cv
317.387 158.078 316.984 158.398 316.539 158.656 cv
315.996 158.969 315.387 159.125 314.711 159.125 cv
313.844 159.125 313.125 158.879 312.555 158.391 cv
311.992 157.891 311.711 157.188 311.711 156.281 cv
311.711 155.105 312.164 154.25 313.07 153.719 cv
313.57 153.438 314.305 153.234 315.273 153.109 cv
316.133 153 li
cp
317.648 154.172 mo
317.492 154.266 317.328 154.344 317.164 154.406 cv
317.008 154.469 316.789 154.527 316.508 154.578 cv
315.945 154.688 li
315.414 154.781 315.031 154.898 314.805 155.031 cv
314.418 155.262 314.227 155.617 314.227 156.094 cv
314.227 156.523 314.344 156.836 314.586 157.031 cv
314.824 157.219 315.109 157.313 315.445 157.313 cv
315.984 157.313 316.48 157.156 316.93 156.844 cv
317.387 156.523 317.625 155.938 317.648 155.094 cv
317.648 154.172 li
cp
f
322.426 145.875 mo
324.942 145.875 li
324.942 158.828 li
322.426 158.828 li
322.426 145.875 li
cp
f
337.551 149.031 mo
338.676 149.031 339.621 149.449 340.395 150.281 cv
341.176 151.105 341.566 152.32 341.566 153.922 cv
341.566 155.609 341.184 156.898 340.426 157.781 cv
339.664 158.656 338.684 159.094 337.488 159.094 cv
336.727 159.094 336.098 158.906 335.598 158.531 cv
335.316 158.324 335.043 158.016 334.785 157.609 cv
334.785 162.594 li
332.301 162.594 li
332.301 149.25 li
334.707 149.25 li
334.707 150.656 li
334.977 150.242 335.262 149.914 335.566 149.672 cv
336.117 149.246 336.777 149.031 337.551 149.031 cv
337.551 149.031 li
cp
338.973 154.031 mo
338.973 153.305 338.805 152.652 338.473 152.078 cv
338.137 151.508 337.59 151.219 336.832 151.219 cv
335.926 151.219 335.301 151.652 334.957 152.516 cv
334.777 152.977 334.691 153.555 334.691 154.25 cv
334.691 155.367 334.988 156.152 335.582 156.609 cv
335.934 156.871 336.352 157 336.832 157 cv
337.527 157 338.059 156.73 338.426 156.188 cv
338.789 155.648 338.973 154.93 338.973 154.031 cv
338.973 154.031 li
cp
f
347.141 153 mo
347.598 152.938 347.926 152.867 348.125 152.781 cv
348.477 152.625 348.656 152.387 348.656 152.063 cv
348.656 151.68 348.52 151.414 348.25 151.266 cv
347.977 151.109 347.582 151.031 347.063 151.031 cv
346.469 151.031 346.047 151.18 345.797 151.469 cv
345.617 151.688 345.504 151.98 345.453 152.344 cv
343.031 152.344 li
343.082 151.512 343.316 150.824 343.734 150.281 cv
344.391 149.438 345.523 149.016 347.141 149.016 cv
348.191 149.016 349.125 149.227 349.938 149.641 cv
350.75 150.059 351.156 150.844 351.156 152 cv
351.156 156.391 li
351.156 156.695 351.16 157.063 351.172 157.5 cv
351.191 157.836 351.242 158.059 351.328 158.172 cv
351.41 158.289 351.535 158.383 351.703 158.453 cv
351.703 158.828 li
348.969 158.828 li
348.895 158.633 348.844 158.449 348.813 158.281 cv
348.781 158.117 348.758 157.922 348.75 157.703 cv
348.395 158.078 347.992 158.398 347.547 158.656 cv
347.004 158.969 346.395 159.125 345.719 159.125 cv
344.852 159.125 344.133 158.879 343.563 158.391 cv
343 157.891 342.719 157.188 342.719 156.281 cv
342.719 155.105 343.172 154.25 344.078 153.719 cv
344.578 153.438 345.313 153.234 346.281 153.109 cv
347.141 153 li
cp
348.656 154.172 mo
348.5 154.266 348.336 154.344 348.172 154.406 cv
348.016 154.469 347.797 154.527 347.516 154.578 cv
346.953 154.688 li
346.422 154.781 346.039 154.898 345.813 155.031 cv
345.426 155.262 345.234 155.617 345.234 156.094 cv
345.234 156.523 345.352 156.836 345.594 157.031 cv
345.832 157.219 346.117 157.313 346.453 157.313 cv
346.992 157.313 347.488 157.156 347.938 156.844 cv
348.395 156.523 348.633 155.938 348.656 155.094 cv
348.656 154.172 li
cp
f
352.402 151.125 mo
352.402 149.328 li
353.73 149.328 li
353.73 146.656 li
356.215 146.656 li
356.215 149.328 li
357.777 149.328 li
357.777 151.125 li
356.215 151.125 li
356.215 156.188 li
356.215 156.574 356.262 156.82 356.355 156.922 cv
356.457 157.016 356.766 157.063 357.277 157.063 cv
357.348 157.063 357.426 157.063 357.512 157.063 cv
357.605 157.055 357.691 157.047 357.777 157.047 cv
357.777 158.922 li
356.59 158.953 li
355.402 158.992 354.59 158.793 354.152 158.344 cv
353.871 158.055 353.73 157.609 353.73 157.016 cv
353.73 151.125 li
352.402 151.125 li
cp
f
364.66 149 mo
365.254 149 365.789 149.105 366.27 149.313 cv
366.758 149.512 367.152 149.824 367.457 150.25 cv
367.727 150.605 367.887 150.977 367.941 151.359 cv
368.004 151.734 368.035 152.352 368.035 153.203 cv
368.035 158.828 li
365.473 158.828 li
365.473 153 li
365.473 152.492 365.383 152.074 365.207 151.75 cv
364.977 151.305 364.543 151.078 363.91 151.078 cv
363.254 151.078 362.754 151.305 362.41 151.75 cv
362.066 152.188 361.895 152.82 361.895 153.641 cv
361.895 158.828 li
359.395 158.828 li
359.395 145.922 li
361.895 145.922 li
361.895 150.5 li
362.258 149.938 362.676 149.547 363.145 149.328 cv
363.621 149.109 364.129 149 364.66 149 cv
364.66 149 li
cp
f
280.945 319.438 mo
280.996 319.887 281.109 320.203 281.289 320.391 cv
281.59 320.727 282.164 320.891 283.008 320.891 cv
283.496 320.891 283.887 320.82 284.18 320.672 cv
284.469 320.527 284.617 320.309 284.617 320.016 cv
284.617 319.734 284.496 319.523 284.258 319.375 cv
284.027 319.23 283.156 318.977 281.648 318.609 cv
280.563 318.34 279.797 318.008 279.352 317.609 cv
278.914 317.203 278.695 316.625 278.695 315.875 cv
278.695 314.992 279.039 314.23 279.727 313.594 cv
280.422 312.961 281.402 312.641 282.664 312.641 cv
283.859 312.641 284.836 312.883 285.586 313.359 cv
286.336 313.84 286.766 314.668 286.883 315.844 cv
284.383 315.844 li
284.34 315.523 284.246 315.266 284.102 315.078 cv
283.828 314.734 283.359 314.563 282.695 314.563 cv
282.152 314.563 281.762 314.652 281.523 314.828 cv
281.293 314.996 281.18 315.195 281.18 315.422 cv
281.18 315.703 281.305 315.914 281.555 316.047 cv
281.805 316.172 282.672 316.402 284.164 316.734 cv
285.164 316.965 285.914 317.32 286.414 317.797 cv
286.902 318.277 287.148 318.875 287.148 319.594 cv
287.148 320.543 286.793 321.32 286.086 321.922 cv
285.375 322.523 284.289 322.828 282.82 322.828 cv
281.309 322.828 280.195 322.508 279.477 321.875 cv
278.758 321.242 278.398 320.43 278.398 319.438 cv
280.945 319.438 li
cp
f
288.02 314.797 mo
288.02 313 li
289.348 313 li
289.348 310.328 li
291.832 310.328 li
291.832 313 li
293.395 313 li
293.395 314.797 li
291.832 314.797 li
291.832 319.859 li
291.832 320.246 291.879 320.492 291.973 320.594 cv
292.074 320.688 292.383 320.734 292.895 320.734 cv
292.965 320.734 293.043 320.734 293.129 320.734 cv
293.223 320.727 293.309 320.719 293.395 320.719 cv
293.395 322.594 li
292.207 322.625 li
291.02 322.664 290.207 322.465 289.77 322.016 cv
289.488 321.727 289.348 321.281 289.348 320.688 cv
289.348 314.797 li
288.02 314.797 li
cp
f
298.781 312.672 mo
299.57 312.672 300.285 312.824 300.922 313.125 cv
301.566 313.418 302.098 313.887 302.516 314.531 cv
302.891 315.094 303.129 315.75 303.234 316.5 cv
303.305 316.949 303.336 317.586 303.328 318.406 cv
296.766 318.406 li
296.797 319.367 297.098 320.039 297.672 320.422 cv
298.016 320.664 298.43 320.781 298.922 320.781 cv
299.43 320.781 299.848 320.637 300.172 320.344 cv
300.348 320.188 300.504 319.969 300.641 319.688 cv
303.203 319.688 li
303.129 320.262 302.832 320.84 302.313 321.422 cv
301.488 322.352 300.336 322.813 298.859 322.813 cv
297.641 322.813 296.563 322.422 295.625 321.641 cv
294.695 320.852 294.234 319.574 294.234 317.813 cv
294.234 316.148 294.656 314.875 295.5 314 cv
296.344 313.117 297.438 312.672 298.781 312.672 cv
298.781 312.672 li
cp
298.781 314.734 mo
298.195 314.734 297.742 314.918 297.422 315.281 cv
297.109 315.637 296.91 316.125 296.828 316.75 cv
300.719 316.75 li
300.676 316.094 300.473 315.594 300.109 315.25 cv
299.754 314.906 299.313 314.734 298.781 314.734 cv
298.781 314.734 li
cp
f
308.789 312.672 mo
309.578 312.672 310.293 312.824 310.93 313.125 cv
311.574 313.418 312.105 313.887 312.523 314.531 cv
312.898 315.094 313.137 315.75 313.242 316.5 cv
313.313 316.949 313.344 317.586 313.336 318.406 cv
306.773 318.406 li
306.805 319.367 307.105 320.039 307.68 320.422 cv
308.023 320.664 308.438 320.781 308.93 320.781 cv
309.438 320.781 309.855 320.637 310.18 320.344 cv
310.355 320.188 310.512 319.969 310.648 319.688 cv
313.211 319.688 li
313.137 320.262 312.84 320.84 312.32 321.422 cv
311.496 322.352 310.344 322.813 308.867 322.813 cv
307.648 322.813 306.57 322.422 305.633 321.641 cv
304.703 320.852 304.242 319.574 304.242 317.813 cv
304.242 316.148 304.664 314.875 305.508 314 cv
306.352 313.117 307.445 312.672 308.789 312.672 cv
308.789 312.672 li
cp
308.789 314.734 mo
308.203 314.734 307.75 314.918 307.43 315.281 cv
307.117 315.637 306.918 316.125 306.836 316.75 cv
310.727 316.75 li
310.684 316.094 310.48 315.594 310.117 315.25 cv
309.762 314.906 309.32 314.734 308.789 314.734 cv
308.789 314.734 li
cp
f
320.223 312.688 mo
320.262 312.688 320.301 312.695 320.332 312.703 cv
320.371 312.703 320.445 312.703 320.551 312.703 cv
320.551 315.281 li
320.395 315.262 320.254 315.25 320.129 315.25 cv
320.004 315.242 319.902 315.234 319.832 315.234 cv
318.82 315.234 318.145 315.563 317.801 316.219 cv
317.613 316.586 317.52 317.152 317.52 317.922 cv
317.52 322.5 li
314.988 322.5 li
314.988 312.922 li
317.379 312.922 li
317.379 314.594 li
317.762 313.949 318.102 313.512 318.395 313.281 cv
318.863 312.887 319.473 312.688 320.223 312.688 cv
320.223 312.688 li
cp
f
322.055 312.922 mo
324.602 312.922 li
324.602 322.5 li
322.055 322.5 li
322.055 312.922 li
cp
324.602 311.781 mo
322.055 311.781 li
322.055 309.469 li
324.602 309.469 li
324.602 311.781 li
cp
f
332.34 312.688 mo
333.328 312.688 334.137 312.949 334.762 313.469 cv
335.395 313.992 335.715 314.852 335.715 316.047 cv
335.715 322.5 li
333.137 322.5 li
333.137 316.672 li
333.137 316.172 333.066 315.789 332.934 315.516 cv
332.691 315.027 332.223 314.781 331.527 314.781 cv
330.684 314.781 330.098 315.141 329.777 315.859 cv
329.621 316.234 329.543 316.719 329.543 317.313 cv
329.543 322.5 li
327.043 322.5 li
327.043 312.938 li
329.465 312.938 li
329.465 314.328 li
329.785 313.84 330.09 313.484 330.371 313.266 cv
330.891 312.883 331.547 312.688 332.34 312.688 cv
332.34 312.688 li
cp
f
341.504 312.688 mo
341.98 312.688 342.402 312.762 342.77 312.906 cv
343.371 313.156 343.863 313.621 344.238 314.297 cv
344.238 312.922 li
346.676 312.922 li
346.676 322 li
346.676 323.238 346.465 324.172 346.051 324.797 cv
345.332 325.879 343.961 326.422 341.941 326.422 cv
340.711 326.422 339.711 326.18 338.941 325.703 cv
338.168 325.223 337.742 324.504 337.66 323.547 cv
340.379 323.547 li
340.449 323.836 340.566 324.047 340.723 324.172 cv
340.992 324.398 341.445 324.516 342.082 324.516 cv
342.988 324.516 343.59 324.211 343.895 323.609 cv
344.09 323.223 344.191 322.578 344.191 321.672 cv
344.191 321.047 li
343.949 321.465 343.695 321.773 343.426 321.969 cv
342.926 322.355 342.273 322.547 341.473 322.547 cv
340.242 322.547 339.258 322.117 338.52 321.25 cv
337.789 320.387 337.426 319.215 337.426 317.734 cv
337.426 316.309 337.777 315.109 338.488 314.141 cv
339.195 313.172 340.199 312.688 341.504 312.688 cv
341.504 312.688 li
cp
342.129 320.438 mo
342.711 320.438 343.207 320.219 343.613 319.781 cv
344.02 319.336 344.223 318.633 344.223 317.672 cv
344.223 316.758 344.027 316.063 343.645 315.594 cv
343.258 315.117 342.742 314.875 342.098 314.875 cv
341.223 314.875 340.617 315.293 340.285 316.125 cv
340.105 316.563 340.02 317.105 340.02 317.75 cv
340.02 318.305 340.113 318.797 340.301 319.234 cv
340.645 320.039 341.254 320.438 342.129 320.438 cv
342.129 320.438 li
cp
f
348.875 324.578 mo
349.383 324.441 349.754 324.207 349.984 323.875 cv
350.223 323.551 350.363 323.094 350.406 322.5 cv
348.875 322.5 li
348.875 319.875 li
351.594 319.875 li
351.594 322.141 li
351.594 322.547 351.535 322.961 351.422 323.391 cv
351.316 323.828 351.125 324.203 350.844 324.516 cv
350.531 324.859 350.164 325.113 349.75 325.281 cv
349.332 325.457 349.039 325.547 348.875 325.547 cv
348.875 324.578 li
cp
f
364.926 312.922 mo
367.613 312.922 li
364.16 322.5 li
361.52 322.5 li
358.082 312.922 li
360.895 312.922 li
362.879 319.984 li
364.926 312.922 li
cp
f
372.809 312.672 mo
373.598 312.672 374.313 312.824 374.949 313.125 cv
375.594 313.418 376.125 313.887 376.543 314.531 cv
376.918 315.094 377.156 315.75 377.262 316.5 cv
377.332 316.949 377.363 317.586 377.355 318.406 cv
370.793 318.406 li
370.824 319.367 371.125 320.039 371.699 320.422 cv
372.043 320.664 372.457 320.781 372.949 320.781 cv
373.457 320.781 373.875 320.637 374.199 320.344 cv
374.375 320.188 374.531 319.969 374.668 319.688 cv
377.23 319.688 li
377.156 320.262 376.859 320.84 376.34 321.422 cv
375.516 322.352 374.363 322.813 372.887 322.813 cv
371.668 322.813 370.59 322.422 369.652 321.641 cv
368.723 320.852 368.262 319.574 368.262 317.813 cv
368.262 316.148 368.684 314.875 369.527 314 cv
370.371 313.117 371.465 312.672 372.809 312.672 cv
372.809 312.672 li
cp
372.809 314.734 mo
372.223 314.734 371.77 314.918 371.449 315.281 cv
371.137 315.637 370.938 316.125 370.855 316.75 cv
374.746 316.75 li
374.703 316.094 374.5 315.594 374.137 315.25 cv
373.781 314.906 373.34 314.734 372.809 314.734 cv
372.809 314.734 li
cp
f
379.086 309.547 mo
381.602 309.547 li
381.602 322.5 li
379.086 322.5 li
379.086 309.547 li
cp
f
393.242 317.734 mo
393.242 319.141 392.836 320.344 392.023 321.344 cv
391.219 322.336 389.992 322.828 388.336 322.828 cv
386.688 322.828 385.461 322.336 384.648 321.344 cv
383.844 320.344 383.445 319.141 383.445 317.734 cv
383.445 316.352 383.844 315.152 384.648 314.141 cv
385.461 313.121 386.688 312.609 388.336 312.609 cv
389.992 312.609 391.219 313.121 392.023 314.141 cv
392.836 315.152 393.242 316.352 393.242 317.734 cv
393.242 317.734 li
cp
388.336 320.734 mo
389.063 320.734 389.625 320.477 390.023 319.953 cv
390.418 319.434 390.617 318.695 390.617 317.734 cv
390.617 316.766 390.418 316.027 390.023 315.516 cv
389.625 314.996 389.063 314.734 388.336 314.734 cv
387.605 314.734 387.043 314.996 386.648 315.516 cv
386.25 316.027 386.055 316.766 386.055 317.734 cv
386.055 318.695 386.25 319.434 386.648 319.953 cv
387.043 320.477 387.605 320.734 388.336 320.734 cv
388.336 320.734 li
cp
f
400.754 316.359 mo
400.711 315.996 400.59 315.672 400.395 315.391 cv
400.113 315.008 399.676 314.813 399.082 314.813 cv
398.238 314.813 397.66 315.23 397.348 316.063 cv
397.191 316.512 397.113 317.105 397.113 317.844 cv
397.113 318.543 397.191 319.105 397.348 319.531 cv
397.648 320.336 398.211 320.734 399.035 320.734 cv
399.629 320.734 400.043 320.578 400.285 320.266 cv
400.535 319.945 400.684 319.531 400.738 319.031 cv
403.301 319.031 li
403.238 319.793 402.961 320.512 402.473 321.188 cv
401.68 322.281 400.512 322.828 398.973 322.828 cv
397.43 322.828 396.293 322.375 395.566 321.469 cv
394.848 320.555 394.488 319.367 394.488 317.906 cv
394.488 316.262 394.887 314.98 395.691 314.063 cv
396.492 313.148 397.602 312.688 399.02 312.688 cv
400.215 312.688 401.195 312.961 401.957 313.5 cv
402.727 314.043 403.18 314.996 403.316 316.359 cv
400.754 316.359 li
cp
f
405.078 312.922 mo
407.625 312.922 li
407.625 322.5 li
405.078 322.5 li
405.078 312.922 li
cp
407.625 311.781 mo
405.078 311.781 li
405.078 309.469 li
407.625 309.469 li
407.625 311.781 li
cp
f
409.063 314.797 mo
409.063 313 li
410.391 313 li
410.391 310.328 li
412.875 310.328 li
412.875 313 li
414.438 313 li
414.438 314.797 li
412.875 314.797 li
412.875 319.859 li
412.875 320.246 412.922 320.492 413.016 320.594 cv
413.117 320.688 413.426 320.734 413.938 320.734 cv
414.008 320.734 414.086 320.734 414.172 320.734 cv
414.266 320.727 414.352 320.719 414.438 320.719 cv
414.438 322.594 li
413.25 322.625 li
412.063 322.664 411.25 322.465 410.813 322.016 cv
410.531 321.727 410.391 321.281 410.391 320.688 cv
410.391 314.797 li
409.063 314.797 li
cp
f
416.434 324.344 mo
416.746 324.359 li
416.984 324.367 417.215 324.359 417.434 324.328 cv
417.66 324.297 417.855 324.227 418.012 324.125 cv
418.156 324.031 418.293 323.82 418.418 323.5 cv
418.543 323.188 418.594 322.992 418.574 322.922 cv
415.059 312.922 li
417.84 312.922 li
419.934 319.984 li
421.918 312.922 li
424.574 312.922 li
421.293 322.344 li
420.656 324.156 420.152 325.281 419.777 325.719 cv
419.41 326.156 418.676 326.375 417.574 326.375 cv
417.344 326.375 417.16 326.375 417.027 326.375 cv
416.891 326.375 416.691 326.363 416.434 326.344 cv
416.434 324.344 li
cp
f
371.715 105.508 mo
371.652 105.676 371.574 105.801 371.48 105.883 cv
371.449 106.02 371.395 106.117 371.324 106.18 cv
371.262 106.297 371.188 106.379 371.105 106.43 cv
371.027 106.539 li
370.984 106.613 370.922 106.648 370.84 106.648 cv
370.746 106.82 li
370.621 106.82 li
370.527 106.992 li
370.387 107.039 li
370.277 107.164 li
370.184 107.242 li
370.004 107.242 369.855 107.297 369.73 107.398 cv
369.574 107.461 369.41 107.492 369.246 107.492 cv
369.078 107.492 368.91 107.453 368.746 107.367 cv
368.559 107.359 368.465 107.328 368.465 107.273 cv
368.199 107.242 li
368.152 107.18 li
368.043 106.961 li
367.84 106.805 li
367.715 106.648 367.645 106.504 367.637 106.367 cv
367.551 106.254 367.465 106.031 367.371 105.695 cv
367.199 105.398 li
367.199 105.242 li
367.074 104.695 li
367.09 104.477 li
366.98 103.93 li
367.043 103.477 li
366.949 103.352 li
366.762 103.805 li
366.531 104.055 366.395 104.207 366.355 104.258 cv
366.313 104.313 366.266 104.336 366.215 104.336 cv
366.191 104.336 366.168 104.332 366.137 104.32 cv
366.027 104.523 li
366.016 104.535 366.012 104.555 366.012 104.586 cv
366.012 104.66 366.051 104.703 366.137 104.711 cv
366.113 104.742 366.051 104.832 365.949 104.977 cv
365.906 105.07 365.863 105.133 365.824 105.164 cv
365.777 105.07 li
365.746 105.336 li
365.59 105.453 365.48 105.629 365.418 105.867 cv
365.293 106.023 365.105 106.25 364.855 106.539 cv
364.621 106.789 li
364.559 106.789 364.527 106.801 364.527 106.82 cv
364.527 106.852 li
364.465 107.031 364.34 107.164 364.152 107.258 cv
363.934 107.523 li
363.809 107.523 li
363.387 107.68 li
363.02 107.656 362.797 107.508 362.715 107.227 cv
362.699 107.023 li
362.59 106.789 li
362.59 106.586 li
362.449 106.07 li
362.449 105.898 li
362.34 105.727 li
362.418 105.164 li
362.395 105.102 362.387 105.02 362.387 104.914 cv
362.387 104.82 362.395 104.754 362.418 104.711 cv
362.387 104.602 li
362.387 104.539 li
362.309 104.336 li
362.449 103.992 li
362.426 103.898 362.391 103.742 362.34 103.523 cv
362.387 103.367 li
362.449 102.852 li
362.309 102.461 li
362.34 102.164 li
362.277 101.992 li
362.266 101.961 362.223 101.852 362.152 101.664 cv
362.027 101.727 li
361.793 102.023 li
361.59 102.211 li
361.152 102.758 li
361.121 102.945 li
360.809 103.273 li
360.684 103.523 li
360.559 103.68 li
360.516 103.941 360.387 104.125 360.168 104.227 cv
360.137 104.477 li
360.063 104.551 359.988 104.648 359.918 104.773 cv
359.844 104.891 359.793 104.957 359.762 104.977 cv
359.73 105 359.676 105.039 359.605 105.102 cv
359.387 105.398 li
359.387 105.609 359.309 105.754 359.152 105.836 cv
359.152 105.945 li
359.078 106.039 358.984 106.133 358.871 106.227 cv
358.84 106.195 li
358.793 106.445 li
358.699 106.445 358.609 106.563 358.527 106.789 cv
358.465 106.852 li
358.453 107.051 358.355 107.195 358.168 107.289 cv
357.918 107.523 li
357.719 107.617 357.59 107.664 357.527 107.664 cv
357.215 107.664 357.012 107.41 356.918 106.898 cv
356.855 106.492 li
356.832 106.473 356.824 106.441 356.824 106.398 cv
356.824 106.305 356.844 106.219 356.887 106.133 cv
356.793 105.789 li
356.824 105.508 li
356.793 105.227 li
356.813 104.969 356.855 104.813 356.918 104.758 cv
356.887 104.5 356.871 104.352 356.871 104.32 cv
356.871 103.992 li
356.91 103.91 356.969 103.805 357.043 103.68 cv
356.934 103.57 li
356.91 103.469 356.902 103.41 356.902 103.398 cv
356.902 103.316 356.973 103.176 357.121 102.977 cv
356.996 102.633 li
357.059 102.414 li
356.949 101.898 li
356.996 101.633 li
356.902 101.242 li
356.918 100.977 li
356.762 100.648 li
357 100.18 357.254 99.9448 357.527 99.9448 cv
357.672 99.9448 357.813 100.008 357.949 100.133 cv
357.98 100.305 li
358.188 100.422 358.293 100.582 358.293 100.789 cv
358.293 100.758 358.27 100.883 358.23 101.164 cv
358.168 101.148 li
358.324 101.461 li
358.215 101.602 li
358.199 101.68 li
358.309 102.508 li
358.277 103.211 li
358.215 103.336 li
358.293 103.617 li
358.324 103.672 358.34 103.734 358.34 103.805 cv
358.34 103.898 358.293 103.992 358.199 104.086 cv
358.199 104.254 358.168 104.395 358.105 104.508 cv
358.168 105.039 li
358.168 105.258 li
358.184 105.227 li
358.293 105.055 li
358.543 104.602 li
358.59 104.602 li
358.66 104.602 358.738 104.492 358.824 104.273 cv
358.949 103.93 li
358.98 103.859 359.074 103.742 359.23 103.586 cv
359.293 103.258 li
359.512 102.93 li
359.59 102.68 li
359.641 102.648 359.699 102.609 359.762 102.555 cv
359.777 102.508 li
359.816 102.457 359.953 102.328 360.184 102.117 cv
360.293 102.07 li
360.324 101.898 li
360.418 101.836 li
360.469 101.586 360.613 101.422 360.855 101.336 cv
360.793 101.273 li
360.855 101.242 li
360.844 101.234 360.84 101.219 360.84 101.195 cv
360.84 101.164 360.855 101.129 360.887 101.086 cv
361.168 100.961 li
361.23 100.664 li
361.418 100.664 li
361.418 100.656 361.426 100.613 361.449 100.539 cv
361.824 100.258 li
361.988 100.207 362.098 100.18 362.152 100.18 cv
362.297 100.18 362.496 100.223 362.746 100.305 cv
362.934 100.555 li
363.012 100.602 li
363.09 100.805 li
363.34 101.148 li
363.34 101.383 li
363.512 101.57 li
363.512 101.836 li
363.637 102.129 363.699 102.375 363.699 102.57 cv
363.652 102.789 li
363.762 103.102 li
363.559 103.289 li
363.637 103.695 li
363.621 103.805 li
363.605 103.883 li
363.574 104.008 363.559 104.102 363.559 104.164 cv
363.559 104.219 363.59 104.336 363.652 104.523 cv
363.605 104.711 li
363.652 104.977 li
363.605 105.023 li
363.625 105.191 363.656 105.473 363.699 105.867 cv
363.684 105.945 li
364.262 105.305 li
364.449 104.977 li
364.488 104.906 364.566 104.789 364.684 104.633 cv
364.684 104.586 li
364.723 104.398 364.801 104.27 364.918 104.195 cv
364.918 104.125 364.973 104.035 365.09 103.93 cv
365.23 103.836 li
365.281 103.629 365.41 103.461 365.621 103.336 cv
365.699 103.086 li
365.871 102.867 li
366.043 102.68 li
366.156 102.598 366.238 102.469 366.293 102.289 cv
366.449 102.07 li
366.512 101.805 li
366.715 101.695 li
366.918 101.445 li
367.105 101.008 li
367.063 101.008 367.043 101 367.043 100.977 cv
367.043 100.977 367.051 100.953 367.074 100.898 cv
367.199 100.789 li
367.34 100.508 li
367.547 100.438 367.66 100.398 367.684 100.398 cv
367.684 100.398 367.707 100.41 367.762 100.43 cv
368.074 100.445 li
368.371 100.57 li
368.621 100.867 li
368.668 101.117 li
368.652 101.32 li
368.574 101.383 li
368.371 101.758 li
368.293 102.18 li
368.355 102.242 368.387 102.352 368.387 102.508 cv
368.332 102.563 368.309 102.641 368.309 102.742 cv
368.246 102.883 li
368.266 102.945 368.277 103.039 368.277 103.164 cv
368.277 103.281 368.27 103.359 368.262 103.398 cv
368.184 103.492 li
368.262 103.617 li
368.137 103.773 li
368.207 103.773 368.246 103.852 368.246 104.008 cv
368.266 104.082 368.277 104.133 368.277 104.164 cv
368.277 104.195 368.266 104.238 368.246 104.289 cv
368.266 104.406 368.277 104.52 368.277 104.633 cv
368.277 104.664 li
368.277 104.688 368.355 104.93 368.512 105.398 cv
368.543 105.586 li
368.746 105.789 li
368.855 106.055 li
368.965 106.102 li
369.027 106.211 li
369.121 106.227 li
369.293 106.258 li
369.371 106.242 li
369.434 106.242 li
369.547 106.242 369.688 106.195 369.855 106.102 cv
369.906 105.988 370.035 105.863 370.246 105.727 cv
370.254 105.664 370.324 105.551 370.449 105.383 cv
370.762 105.164 li
370.871 104.945 li
370.965 104.895 371.066 104.867 371.184 104.867 cv
371.309 104.867 371.449 104.906 371.605 104.977 cv
371.676 105.094 371.715 105.27 371.715 105.508 cv
371.715 105.508 li
cp
f
378.18 101.273 mo
378.102 101.148 li
377.961 101.117 li
377.398 100.664 li
377.039 100.617 li
376.758 100.617 li
376.711 100.57 li
376.57 100.633 li
376.414 100.539 li
375.945 100.539 li
375.992 100.617 li
375.586 100.758 li
375.508 100.852 li
375.461 100.867 li
375.242 101.047 375.09 101.195 375.008 101.32 cv
374.883 101.742 li
374.805 101.914 li
374.992 102.164 li
374.68 102.398 li
374.727 102.461 li
374.59 102.691 374.523 102.914 374.523 103.133 cv
374.383 103.32 li
374.383 103.633 li
374.227 103.805 li
374.195 103.961 li
374.148 103.992 li
374.148 104.242 li
374.086 104.336 li
374.086 104.484 374.074 104.598 374.055 104.68 cv
374.086 104.773 li
373.93 105.117 li
373.992 105.227 li
373.867 105.398 li
373.992 105.742 li
373.805 105.992 li
373.836 106.336 li
373.836 106.398 li
373.914 106.43 li
373.992 106.414 li
374.055 106.352 374.117 106.297 374.18 106.242 cv
374.148 106.102 li
374.398 106.07 li
374.445 105.945 li
375.508 105.07 li
375.617 105.039 li
375.742 104.742 li
375.813 104.711 375.918 104.66 376.055 104.586 cv
376.164 104.305 li
376.305 104.305 li
376.242 103.992 li
376.508 103.961 li
376.527 103.91 376.563 103.852 376.617 103.789 cv
376.668 103.719 376.727 103.648 376.789 103.586 cv
377.711 102.352 li
377.852 102.086 li
377.836 102.023 li
377.961 101.82 li
377.992 101.617 li
378.164 101.477 li
378.18 101.273 li
cp
379.883 100.336 mo
379.711 100.57 li
379.852 101.008 li
379.617 101.273 li
379.523 101.664 li
379.477 101.742 li
379.508 101.836 li
379.508 102.004 379.465 102.129 379.383 102.211 cv
379.352 102.273 li
379.352 102.336 li
379.383 102.422 379.398 102.5 379.398 102.57 cv
379.398 102.633 379.391 102.676 379.383 102.695 cv
379.398 102.773 li
379.32 102.977 li
379.383 103.18 li
379.242 103.336 li
379.289 103.586 li
379.398 103.711 li
379.242 103.852 li
379.242 104.148 li
379.117 104.43 li
379.195 104.711 li
379.086 104.867 li
379.273 104.992 li
379.023 105.398 li
379.008 105.461 li
379.18 105.492 li
379.055 105.898 li
379.055 105.977 li
379.055 106.063 379.047 106.129 379.039 106.18 cv
379.055 106.227 li
379.352 106.258 li
379.586 106.617 li
379.461 106.898 li
379.648 106.883 li
379.719 107.02 379.762 107.145 379.773 107.258 cv
379.508 107.523 li
379.422 107.609 379.305 107.688 379.148 107.773 cv
378.836 107.945 li
378.758 107.852 li
378.57 107.961 li
378.008 107.305 li
378.008 107.008 li
377.934 106.77 377.898 106.547 377.898 106.336 cv
377.898 106.227 li
377.805 105.164 li
377.945 104.414 li
377.836 103.977 li
377.523 104.477 li
377.367 104.945 li
377.227 105.023 li
376.977 105.414 li
376.523 105.836 li
376.398 106.055 li
375.992 106.398 li
375.914 106.617 li
375.336 106.992 li
374.727 107.664 li
374.383 107.742 li
374.148 107.914 li
373.844 107.902 373.617 107.793 373.461 107.586 cv
372.918 107.316 372.637 106.938 372.617 106.445 cv
372.711 106.398 li
372.68 106.289 li
372.664 106.07 li
372.555 105.836 li
372.664 105.586 li
372.711 105.195 li
372.836 104.602 li
372.836 104.594 372.836 104.57 372.836 104.539 cv
372.813 104.52 372.805 104.492 372.805 104.461 cv
372.805 104.422 372.82 104.363 372.852 104.289 cv
372.84 104.258 372.836 104.211 372.836 104.148 cv
372.836 104.055 372.871 103.914 372.945 103.727 cv
373.07 103.68 li
372.996 103.617 372.961 103.551 372.961 103.477 cv
372.961 103.426 372.965 103.391 372.977 103.367 cv
372.965 103.336 372.961 103.297 372.961 103.242 cv
372.961 103.098 373.027 102.988 373.164 102.914 cv
373.203 102.801 373.273 102.68 373.367 102.555 cv
373.273 102.414 li
373.492 102.148 li
373.492 102.07 li
373.492 101.844 373.57 101.633 373.727 101.445 cv
373.711 101.117 li
373.789 101.039 li
373.789 101.031 373.789 101.016 373.789 100.992 cv
373.777 100.973 373.773 100.953 373.773 100.93 cv
373.773 100.867 373.793 100.813 373.836 100.758 cv
373.836 100.648 li
373.887 100.535 374.012 100.359 374.211 100.117 cv
374.418 99.8672 374.57 99.6563 374.664 99.4771 cv
374.758 99.5698 li
374.961 99.4771 li
375.039 99.4448 li
375.633 99.1802 li
377.023 99.2422 li
377.023 99.3672 li
377.461 99.4609 li
377.73 99.4609 377.906 99.5508 377.992 99.7271 cv
377.992 99.6948 377.996 99.6563 378.008 99.6021 cv
378.008 99.5698 378.008 99.5508 378.008 99.5391 cv
378.398 99.8672 li
378.727 99.9448 li
379.383 99.7891 li
379.617 100.242 li
379.883 100.336 li
cp
f
387.605 105.242 mo
387.59 105.148 li
387.605 105.07 li
387.496 104.758 li
387.574 104.586 li
387.496 104.445 li
387.48 104.273 li
387.34 103.977 li
387.262 103.773 li
386.996 103.32 li
386.777 103.133 li
386.652 102.82 li
386.496 102.758 li
386.199 102.383 li
385.918 102.414 li
385.699 102.117 li
385.512 102.164 li
385.387 101.93 li
385.324 101.914 li
385.074 101.914 li
384.887 101.992 li
384.746 101.852 li
384.559 101.898 li
384.496 101.758 li
384.168 101.711 li
384.184 101.93 li
384.152 102.273 li
384.23 102.461 li
384.48 102.695 li
384.277 103.133 li
384.293 103.398 li
384.199 103.945 li
384.238 104.176 384.313 104.367 384.418 104.523 cv
384.355 104.711 li
384.363 104.734 384.371 104.75 384.371 104.758 cv
384.371 104.789 384.324 104.844 384.23 104.914 cv
384.355 105.07 li
384.262 105.289 li
384.23 105.523 li
384.277 105.773 li
384.262 106.008 li
384.637 106.008 li
384.688 105.988 384.754 105.977 384.84 105.977 cv
384.941 105.977 385.035 106.016 385.121 106.086 cv
385.129 106.086 385.156 106.082 385.199 106.07 cv
385.219 106.07 385.234 106.07 385.246 106.07 cv
385.285 106.07 385.355 106.082 385.449 106.102 cv
385.52 106.07 385.59 106.055 385.652 106.055 cv
385.746 106.055 385.832 106.078 385.918 106.117 cv
386.074 106.117 li
386.215 106.164 li
386.574 106.055 li
386.871 106.227 li
386.973 106.27 387.016 106.289 386.996 106.289 cv
387.34 105.945 li
387.371 105.695 li
387.465 105.648 li
387.402 105.508 li
387.543 105.367 li
387.605 105.242 li
cp
388.965 104.977 mo
388.746 105.508 li
388.887 105.867 li
388.809 105.977 li
388.746 106.258 li
388.59 106.523 li
388.527 106.555 li
388.496 106.898 li
388.168 106.93 li
388 107.086 387.824 107.211 387.637 107.305 cv
387.543 107.289 li
387.262 107.383 li
387.105 107.398 li
386.762 107.523 li
386.371 107.352 li
386.309 107.305 li
386.012 107.32 li
386.074 107.367 li
385.574 107.289 li
385.121 107.398 li
384.949 107.242 li
384.559 107.273 li
384.418 107.164 li
384.406 107.164 384.359 107.172 384.277 107.18 cv
384.277 107.289 li
384.277 107.395 384.262 107.504 384.23 107.617 cv
384.277 107.961 li
384.137 108.133 li
384.156 108.402 384.168 108.602 384.168 108.727 cv
384.121 109.18 li
384.184 109.867 li
384.043 110.039 li
384.121 110.32 li
384.059 110.492 li
384.168 110.555 li
384.168 110.82 li
384.188 110.891 384.199 110.945 384.199 110.977 cv
384.199 111.09 384.137 111.184 384.012 111.258 cv
384.074 111.508 li
383.996 111.648 li
383.949 112.367 li
383.918 113.211 383.734 113.633 383.402 113.633 cv
383.328 113.633 383.113 113.578 382.762 113.477 cv
382.824 112.945 li
382.715 112.148 li
382.887 111.82 li
382.902 111.43 li
382.84 110.898 li
382.98 110.664 li
382.824 110.242 li
382.949 110.023 li
382.84 109.664 li
382.98 109.336 li
382.957 109.273 382.91 109.211 382.84 109.148 cv
382.777 109.086 382.746 109.043 382.746 109.023 cv
382.746 108.98 382.785 108.945 382.871 108.914 cv
382.859 108.871 382.855 108.809 382.855 108.727 cv
382.855 108.57 382.891 108.367 382.965 108.117 cv
382.855 107.945 li
382.902 107.711 li
382.777 107.539 li
382.949 107.352 li
382.871 106.82 li
382.98 106.086 li
382.855 105.852 li
383.059 105.508 li
382.84 105.305 li
382.965 104.977 li
382.84 104.883 li
382.855 104.57 li
382.965 104.195 li
382.965 104.117 li
382.98 104.055 li
382.98 103.852 li
382.996 103.773 li
382.902 103.492 li
382.996 103.18 li
382.902 102.945 li
382.98 102.68 li
382.902 102.617 li
382.965 102.258 li
382.902 102.055 li
382.949 101.867 li
382.887 101.742 li
382.246 102.039 li
382.246 101.93 li
382.121 101.945 li
381.918 102.117 li
381.762 102.117 li
381.543 102.414 li
381.355 102.336 li
381.277 102.523 li
380.684 102.172 380.387 101.895 380.387 101.695 cv
380.387 101.551 380.445 101.43 380.559 101.336 cv
380.527 101.07 li
380.871 100.875 381.188 100.77 381.48 100.758 cv
381.605 100.633 li
382.184 100.398 li
382.309 100.273 li
382.824 100.305 li
382.902 100.273 li
383.074 99.6479 li
383.496 99.7271 li
383.793 100.195 li
383.949 100.039 li
384.277 100.273 li
384.434 100.273 384.582 100.305 384.73 100.367 cv
384.824 100.523 li
384.949 100.477 li
385.09 100.57 li
385.172 100.57 385.238 100.582 385.293 100.602 cv
385.262 100.695 li
385.668 100.57 li
385.855 100.789 li
386.199 100.898 li
386.434 101.195 li
386.871 101.461 li
386.887 101.492 li
387.23 101.602 li
387.23 101.711 li
387.324 101.785 387.395 101.879 387.449 101.992 cv
387.59 102.086 li
387.699 102.289 li
387.918 102.289 li
387.918 102.648 li
388.043 102.773 li
388.074 102.898 li
388.262 102.93 li
388.281 103.211 388.359 103.445 388.496 103.633 cv
388.496 103.758 li
388.668 103.945 li
388.637 104.227 li
388.777 104.555 li
388.824 104.93 li
388.965 104.977 li
cp
f
395.578 103.945 mo
395.188 104.227 li
394.688 104.18 li
394.453 104.211 li
393.969 104.273 li
393.344 104.227 li
393.25 104.258 393.113 104.273 392.938 104.273 cv
392.703 104.273 li
392.266 104.32 li
392.141 104.289 li
391.484 104.352 li
391.41 104.313 391.348 104.289 391.297 104.289 cv
391.223 104.289 391.141 104.316 391.047 104.367 cv
390.734 104.32 li
390.406 104.32 li
390.094 103.93 li
390.094 103.57 li
390.328 103.539 li
390.5 103.32 li
390.953 103.492 li
391.125 103.445 li
391.176 103.457 391.258 103.461 391.375 103.461 cv
391.469 103.461 li
391.563 103.414 li
391.563 103.492 li
391.75 103.539 li
391.875 103.461 li
392.109 103.492 li
392.484 103.492 li
393.313 103.461 li
393.344 103.539 li
393.422 103.523 li
393.5 103.586 li
393.734 103.508 li
393.828 103.563 393.945 103.586 394.094 103.586 cv
394.188 103.586 394.285 103.566 394.391 103.523 cv
394.688 103.602 li
394.906 103.602 li
395.313 103.602 395.535 103.719 395.578 103.945 cv
395.578 103.945 li
cp
f
402.695 103.477 mo
402.664 103.148 li
402.664 102.852 li
402.539 102.023 li
402.367 101.43 li
402.133 100.898 li
401.742 100.273 li
401.648 100.305 li
401.586 100.398 li
401.492 100.398 li
401.438 100.617 401.305 100.734 401.086 100.742 cv
400.992 100.867 400.867 101.047 400.711 101.273 cv
400.492 101.477 li
400.43 101.742 li
400.242 101.961 li
400.07 102.414 li
400.07 102.625 399.992 102.848 399.836 103.086 cv
399.727 103.242 li
399.742 103.523 li
399.461 103.93 li
399.305 104.555 li
399.18 104.633 li
399.18 104.645 399.184 104.664 399.195 104.695 cv
399.195 104.738 399.195 104.77 399.195 104.789 cv
399.195 105.008 399.141 105.223 399.039 105.43 cv
399.148 105.758 li
398.93 105.852 li
398.898 105.93 li
398.758 106.07 li
399.148 106.164 li
399.383 106.289 li
399.742 106.227 li
400.07 106.367 li
400.07 106.617 li
400.133 106.695 li
400.57 106.695 li
400.852 106.648 li
400.922 106.535 401.031 106.477 401.18 106.477 cv
401.242 106.477 li
401.383 106.43 li
401.305 106.211 li
401.805 106.211 li
401.918 105.898 402.121 105.625 402.414 105.383 cv
402.414 105.195 li
402.617 104.805 li
402.617 104.398 li
402.68 103.93 li
402.633 103.633 li
402.695 103.477 li
cp
403.898 104.82 mo
403.742 104.992 li
403.789 105.414 li
403.383 105.93 li
403.383 106.133 li
403.227 106.289 li
403.336 106.445 li
402.977 106.789 li
402.742 107.18 li
402.367 107.398 li
402.219 107.547 402.063 107.625 401.898 107.633 cv
401.758 107.961 li
401.586 107.789 li
401.398 108.023 li
401.398 107.969 401.352 107.891 401.258 107.789 cv
401.133 107.727 li
400.977 107.883 li
400.93 107.883 li
400.789 108.07 li
400.555 107.914 li
400.18 108.086 li
399.945 107.867 li
399.902 107.875 399.844 107.883 399.773 107.883 cv
399.586 107.883 399.344 107.828 399.055 107.727 cv
398.805 107.602 li
398.711 107.508 li
398.43 107.398 li
398.305 107.023 li
398.094 107.016 397.887 106.969 397.68 106.883 cv
397.289 106.07 li
397.352 105.945 li
397.258 105.789 li
397.258 105.477 li
397.148 105.289 li
397.227 105.07 li
397.184 104.945 397.164 104.836 397.164 104.742 cv
397.164 104.711 397.168 104.688 397.18 104.664 cv
397.18 104.625 397.18 104.598 397.18 104.586 cv
397.18 104.039 li
397.258 103.852 li
397.273 102.789 li
397.336 102.539 li
397.242 102.43 li
397.398 101.93 li
397.352 101.758 li
397.352 101.367 li
397.445 101.258 li
397.414 101.008 li
397.352 100.836 li
397.508 100.258 li
397.383 99.5391 li
397.445 99.4771 li
397.445 99.2422 li
397.453 99.1802 397.461 99.0859 397.461 98.9609 cv
397.461 98.7969 397.445 98.6602 397.414 98.5552 cv
397.461 98.4302 li
397.305 97.9141 li
397.336 97.832 397.383 97.77 397.445 97.7271 cv
397.414 97.6948 397.383 97.6558 397.352 97.6021 cv
397.383 97.5308 397.398 97.4609 397.398 97.3979 cv
397.398 97.2969 397.355 97.188 397.273 97.0698 cv
397.273 96.957 397.293 96.8589 397.336 96.7729 cv
397.258 96.6021 li
397.352 96.3979 li
397.055 95.7891 li
397.352 95.7422 li
397.352 95.6948 li
397.977 95.3672 li
398.305 95.7578 li
398.336 95.9302 li
398.602 96.1328 li
398.586 96.3979 li
398.586 96.4922 398.574 96.6289 398.555 96.8052 cv
398.637 96.8911 398.68 96.9609 398.68 97.0229 cv
398.68 97.0659 398.668 97.1128 398.648 97.1641 cv
398.711 97.2271 li
398.648 97.5229 li
398.773 97.8359 li
398.758 97.9609 li
398.992 98.0698 li
398.867 98.3052 li
398.758 98.7729 li
398.734 98.8481 398.711 98.957 398.68 99.1021 cv
398.711 99.1758 398.727 99.3359 398.727 99.5859 cv
398.695 99.7271 li
398.758 99.8672 li
398.664 100.164 li
398.664 100.27 398.641 100.379 398.602 100.492 cv
398.586 100.539 li
398.648 100.602 398.715 100.68 398.789 100.773 cv
398.586 101.148 li
398.648 101.367 li
398.602 101.477 li
398.602 101.57 398.586 101.688 398.555 101.82 cv
398.57 101.898 li
398.555 102.086 li
398.539 102.352 li
398.477 102.93 li
398.711 102.992 li
398.758 102.43 li
398.883 102.055 li
398.945 102.086 li
399.055 101.82 li
399.105 101.602 399.203 101.398 399.352 101.211 cv
399.371 101.16 399.406 101.113 399.461 101.07 cv
399.508 101.008 li
399.508 101.039 li
399.586 100.836 li
399.789 100.602 li
399.93 100.477 li
399.945 100.398 li
400.055 100.258 li
400.055 100.102 400.105 99.9878 400.211 99.9141 cv
400.242 99.7729 li
400.477 99.6948 li
400.57 99.6479 li
400.602 99.5391 li
400.586 99.2729 li
400.852 99.2271 li
401.008 99.1802 li
400.883 99.0391 li
401.164 98.9771 li
401.477 98.7422 li
402.023 98.7422 li
402.367 98.9448 li
402.477 98.9609 li
402.789 99.3828 li
402.805 99.5698 li
402.945 99.5859 li
403.008 99.9609 li
403.18 100.102 li
403.18 100.383 li
403.289 100.508 li
403.414 100.57 li
403.492 101.148 li
403.492 101.211 li
403.492 101.266 403.523 101.344 403.586 101.445 cv
403.656 101.551 403.695 101.641 403.695 101.711 cv
403.695 101.785 403.68 101.859 403.648 101.93 cv
403.867 102.023 li
403.844 102.191 403.805 102.32 403.742 102.414 cv
403.789 102.805 li
403.84 102.93 403.867 103.023 403.867 103.086 cv
403.867 103.117 403.855 103.18 403.836 103.273 cv
403.805 104.055 li
403.883 104.211 li
403.805 104.508 li
403.898 104.82 li
cp
f
411.051 101.273 mo
410.973 101.148 li
410.832 101.117 li
410.27 100.664 li
409.91 100.617 li
409.629 100.617 li
409.582 100.57 li
409.441 100.633 li
409.285 100.539 li
408.816 100.539 li
408.863 100.617 li
408.457 100.758 li
408.379 100.852 li
408.332 100.867 li
408.113 101.047 407.961 101.195 407.879 101.32 cv
407.754 101.742 li
407.676 101.914 li
407.863 102.164 li
407.551 102.398 li
407.598 102.461 li
407.461 102.691 407.395 102.914 407.395 103.133 cv
407.254 103.32 li
407.254 103.633 li
407.098 103.805 li
407.066 103.961 li
407.02 103.992 li
407.02 104.242 li
406.957 104.336 li
406.957 104.484 406.945 104.598 406.926 104.68 cv
406.957 104.773 li
406.801 105.117 li
406.863 105.227 li
406.738 105.398 li
406.863 105.742 li
406.676 105.992 li
406.707 106.336 li
406.707 106.398 li
406.785 106.43 li
406.863 106.414 li
406.926 106.352 406.988 106.297 407.051 106.242 cv
407.02 106.102 li
407.27 106.07 li
407.316 105.945 li
408.379 105.07 li
408.488 105.039 li
408.613 104.742 li
408.684 104.711 408.789 104.66 408.926 104.586 cv
409.035 104.305 li
409.176 104.305 li
409.113 103.992 li
409.379 103.961 li
409.398 103.91 409.434 103.852 409.488 103.789 cv
409.539 103.719 409.598 103.648 409.66 103.586 cv
410.582 102.352 li
410.723 102.086 li
410.707 102.023 li
410.832 101.82 li
410.863 101.617 li
411.035 101.477 li
411.051 101.273 li
cp
412.754 100.336 mo
412.582 100.57 li
412.723 101.008 li
412.488 101.273 li
412.395 101.664 li
412.348 101.742 li
412.379 101.836 li
412.379 102.004 412.336 102.129 412.254 102.211 cv
412.223 102.273 li
412.223 102.336 li
412.254 102.422 412.27 102.5 412.27 102.57 cv
412.27 102.633 412.262 102.676 412.254 102.695 cv
412.27 102.773 li
412.191 102.977 li
412.254 103.18 li
412.113 103.336 li
412.16 103.586 li
412.27 103.711 li
412.113 103.852 li
412.113 104.148 li
411.988 104.43 li
412.066 104.711 li
411.957 104.867 li
412.145 104.992 li
411.895 105.398 li
411.879 105.461 li
412.051 105.492 li
411.926 105.898 li
411.926 105.977 li
411.926 106.063 411.918 106.129 411.91 106.18 cv
411.926 106.227 li
412.223 106.258 li
412.457 106.617 li
412.332 106.898 li
412.52 106.883 li
412.59 107.02 412.633 107.145 412.645 107.258 cv
412.379 107.523 li
412.293 107.609 412.176 107.688 412.02 107.773 cv
411.707 107.945 li
411.629 107.852 li
411.441 107.961 li
410.879 107.305 li
410.879 107.008 li
410.805 106.77 410.77 106.547 410.77 106.336 cv
410.77 106.227 li
410.676 105.164 li
410.816 104.414 li
410.707 103.977 li
410.395 104.477 li
410.238 104.945 li
410.098 105.023 li
409.848 105.414 li
409.395 105.836 li
409.27 106.055 li
408.863 106.398 li
408.785 106.617 li
408.207 106.992 li
407.598 107.664 li
407.254 107.742 li
407.02 107.914 li
406.715 107.902 406.488 107.793 406.332 107.586 cv
405.789 107.316 405.508 106.938 405.488 106.445 cv
405.582 106.398 li
405.551 106.289 li
405.535 106.07 li
405.426 105.836 li
405.535 105.586 li
405.582 105.195 li
405.707 104.602 li
405.707 104.594 405.707 104.57 405.707 104.539 cv
405.684 104.52 405.676 104.492 405.676 104.461 cv
405.676 104.422 405.691 104.363 405.723 104.289 cv
405.711 104.258 405.707 104.211 405.707 104.148 cv
405.707 104.055 405.742 103.914 405.816 103.727 cv
405.941 103.68 li
405.867 103.617 405.832 103.551 405.832 103.477 cv
405.832 103.426 405.836 103.391 405.848 103.367 cv
405.836 103.336 405.832 103.297 405.832 103.242 cv
405.832 103.098 405.898 102.988 406.035 102.914 cv
406.074 102.801 406.145 102.68 406.238 102.555 cv
406.145 102.414 li
406.363 102.148 li
406.363 102.07 li
406.363 101.844 406.441 101.633 406.598 101.445 cv
406.582 101.117 li
406.66 101.039 li
406.66 101.031 406.66 101.016 406.66 100.992 cv
406.648 100.973 406.645 100.953 406.645 100.93 cv
406.645 100.867 406.664 100.813 406.707 100.758 cv
406.707 100.648 li
406.758 100.535 406.883 100.359 407.082 100.117 cv
407.289 99.8672 407.441 99.6563 407.535 99.4771 cv
407.629 99.5698 li
407.832 99.4771 li
407.91 99.4448 li
408.504 99.1802 li
409.895 99.2422 li
409.895 99.3672 li
410.332 99.4609 li
410.602 99.4609 410.777 99.5508 410.863 99.7271 cv
410.863 99.6948 410.867 99.6563 410.879 99.6021 cv
410.879 99.5698 410.879 99.5508 410.879 99.5391 cv
411.27 99.8672 li
411.598 99.9448 li
412.254 99.7891 li
412.488 100.242 li
412.754 100.336 li
cp
f
421.602 106.164 mo
421.383 106.414 li
421.18 106.883 li
421.039 106.992 li
420.914 107.242 li
420.555 107.273 li
420.32 107.508 li
419.961 107.508 li
419.742 107.68 li
419.539 107.633 li
419.305 107.68 li
419.305 107.836 li
418.648 107.773 li
418.352 107.789 li
418.133 107.898 li
417.961 107.789 li
418.074 107.777 418.168 107.773 418.242 107.773 cv
418.148 107.781 417.859 107.809 417.383 107.852 cv
417.336 107.836 li
417.18 107.82 li
416.945 107.945 li
416.871 107.891 416.742 107.836 416.555 107.773 cv
416.293 107.75 416.121 107.742 416.039 107.742 cv
415.883 107.742 li
415.797 107.73 415.711 107.727 415.617 107.727 cv
415.523 107.727 415.43 107.746 415.336 107.789 cv
415.086 107.633 li
414.93 107.602 li
414.898 107.602 414.836 107.582 414.742 107.539 cv
414.293 107.5 414.07 107.129 414.07 106.43 cv
414.07 106.258 li
414.414 106.008 li
414.852 105.852 li
415.164 106.008 li
415.414 106.008 li
415.414 106.07 li
415.539 106.113 415.637 106.207 415.711 106.352 cv
415.852 106.367 li
415.852 106.602 li
416.086 106.664 li
416.133 106.695 li
418.445 106.555 li
419.008 106.461 li
419.055 106.461 li
419.086 106.367 li
419.352 106.336 li
419.383 106.289 li
419.633 106.25 419.867 106.176 420.086 106.07 cv
420.102 105.977 li
420.09 105.969 420.063 105.926 420.023 105.852 cv
419.945 105.867 li
419.711 105.695 li
419.539 105.695 li
419.445 105.57 li
419.508 105.492 li
419.305 105.523 li
419.164 105.367 li
419.133 105.379 419.07 105.383 418.977 105.383 cv
418.828 105.383 418.68 105.352 418.523 105.289 cv
418.352 105.289 li
418.227 105.242 li
417.977 105.336 li
417.836 105.164 li
417.773 105.164 li
417.523 104.977 li
416.961 104.758 li
416.789 104.602 li
416.102 104.477 li
416.039 104.352 li
415.523 104.039 li
415.258 103.445 li
415.039 103.133 li
414.977 102.195 li
415.039 102.086 li
415.07 101.816 415.168 101.578 415.336 101.367 cv
415.512 101.273 415.602 101.141 415.602 100.961 cv
415.867 100.898 li
415.918 100.805 416.016 100.719 416.164 100.633 cv
416.43 100.414 li
417.555 99.9771 li
417.758 99.9302 li
418.117 99.8979 li
418.711 99.7271 li
419.852 99.8052 li
419.883 99.8979 li
419.984 99.9302 420.105 100.023 420.242 100.18 cv
420.242 100.273 li
420.539 100.445 li
420.414 100.883 li
420.367 101.039 li
420.293 101.344 420.125 101.492 419.867 101.492 cv
419.648 101.492 419.484 101.395 419.383 101.195 cv
419.383 101.133 li
419.164 101.117 li
418.914 101.195 li
418.68 101.023 li
418.555 101.117 li
418.398 101.117 418.25 101.164 418.117 101.258 cv
417.938 101.258 417.766 101.332 417.602 101.477 cv
417.367 101.477 li
417.195 101.602 li
416.945 101.664 li
416.914 101.695 li
416.805 101.742 li
416.648 101.914 li
416.586 101.93 li
416.43 102.18 li
416.227 102.289 li
416.184 102.445 416.152 102.578 416.133 102.68 cv
416.152 102.848 416.172 102.961 416.195 103.023 cv
416.227 103.078 416.309 103.129 416.445 103.18 cv
416.445 103.273 li
416.68 103.398 li
416.867 103.473 417.012 103.551 417.117 103.633 cv
417.477 103.633 li
417.711 103.836 li
418.117 103.883 li
418.289 103.992 li
418.977 104.195 li
419.07 104.398 li
419.148 104.273 li
419.305 104.273 419.512 104.344 419.773 104.477 cv
420.102 104.539 li
420.133 104.664 li
420.43 104.664 li
420.93 104.945 li
420.992 105.102 421.121 105.25 421.32 105.383 cv
421.523 105.508 li
421.461 105.727 li
421.555 105.844 421.602 105.969 421.602 106.102 cv
421.602 106.164 li
cp
f
426.93 100.977 mo
426.93 100.938 426.906 100.863 426.867 100.758 cv
426.773 100.742 li
426.742 100.758 li
426.73 100.758 426.703 100.758 426.664 100.758 cv
426.641 100.77 426.621 100.773 426.602 100.773 cv
426.59 100.773 426.57 100.77 426.539 100.758 cv
426.516 100.758 426.5 100.758 426.492 100.758 cv
426.305 100.883 li
426.148 100.898 li
426.055 100.93 li
425.758 101.336 li
425.555 101.477 li
425.273 101.977 li
425.102 102.086 li
425.07 102.297 424.984 102.473 424.852 102.617 cv
424.773 102.742 li
424.906 102.66 425.059 102.617 425.227 102.617 cv
425.352 102.555 li
425.414 102.398 li
425.664 102.414 li
425.805 102.195 li
425.914 102.195 li
426.117 102.273 li
426.195 101.992 li
426.336 101.992 li
426.336 101.805 li
426.555 101.742 li
426.617 101.695 li
426.648 101.523 li
426.883 101.195 li
426.914 101.133 426.93 101.063 426.93 100.977 cv
426.93 100.977 li
cp
428.711 106.164 mo
428.711 106.301 428.602 106.477 428.383 106.695 cv
428.32 106.895 428.23 107.051 428.117 107.164 cv
428.008 107.18 li
427.805 107.523 li
427.477 107.586 li
427.133 107.789 li
426.961 108.117 li
426.758 108.086 li
426.621 108.148 426.512 108.184 426.43 108.195 cv
426.336 108.352 li
426.293 108.34 426.234 108.336 426.164 108.336 cv
426.008 108.336 425.855 108.445 425.711 108.664 cv
425.461 108.445 li
425.418 108.453 425.344 108.461 425.242 108.461 cv
425.086 108.461 424.953 108.434 424.852 108.383 cv
424.539 108.383 li
424.398 108.305 li
423.938 108.23 423.652 108.055 423.539 107.773 cv
423.539 107.727 li
423.32 107.617 li
423.211 107.305 li
422.992 107.164 li
422.992 106.898 li
422.789 106.102 li
422.82 105.461 li
422.883 105.164 li
422.883 104.789 li
422.977 104.508 li
422.961 104.367 li
423.086 104.164 li
423.055 104.195 li
423.055 104.094 423.086 103.977 423.148 103.852 cv
423.148 103.758 li
423.086 103.336 li
423.086 103.129 423.172 102.945 423.352 102.789 cv
423.371 102.77 423.383 102.734 423.383 102.68 cv
423.383 102.641 423.359 102.547 423.32 102.398 cv
423.277 102.242 423.258 102.133 423.258 102.07 cv
423.258 101.926 423.289 101.773 423.352 101.617 cv
423.453 101.766 423.594 101.836 423.773 101.836 cv
423.82 101.836 li
423.852 101.785 423.906 101.734 423.992 101.68 cv
424.086 101.379 424.215 101.125 424.383 100.914 cv
424.461 100.852 li
424.461 100.801 424.496 100.66 424.57 100.43 cv
424.711 100.43 li
424.742 100.336 li
424.883 100.305 li
424.945 100.211 424.984 100.156 425.008 100.133 cv
425.027 100.113 425.156 100.039 425.398 99.9141 cv
425.438 99.832 425.508 99.7539 425.602 99.6802 cv
425.652 99.6602 425.715 99.6328 425.789 99.6021 cv
425.867 99.4922 li
426.188 99.3911 426.391 99.3359 426.477 99.3359 cv
426.57 99.3359 426.656 99.3628 426.742 99.4141 cv
426.836 99.3828 li
426.961 99.4609 li
427.105 99.5659 427.246 99.6563 427.383 99.7271 cv
427.695 99.9609 li
427.695 100.039 li
427.977 100.258 428.117 100.566 428.117 100.961 cv
428.055 101.133 li
428.117 101.727 li
427.945 101.836 li
427.773 102.305 li
427.43 102.68 li
427.414 102.977 li
427.027 103.25 426.672 103.469 426.352 103.633 cv
426.234 103.801 426.063 103.883 425.836 103.883 cv
425.789 103.883 li
425.445 104.102 li
425.164 104.102 li
424.727 104.289 li
424.398 104.117 li
424.367 104.117 li
424.344 104.223 424.32 104.367 424.289 104.555 cv
424.148 104.664 li
424.133 104.883 li
424.023 105.18 li
424.063 105.473 424.086 105.66 424.086 105.742 cv
424.008 105.789 li
424.008 105.945 424 106.063 423.992 106.133 cv
423.992 106.156 423.984 106.176 423.977 106.195 cv
423.977 106.219 423.977 106.234 423.977 106.242 cv
423.977 106.348 424.023 106.426 424.117 106.477 cv
424.148 106.625 424.203 106.719 424.289 106.758 cv
424.414 106.852 li
424.82 106.961 li
424.82 107.023 li
424.961 107.055 li
425.57 107.086 li
425.93 107.039 li
426.117 106.914 li
426.227 106.883 li
426.398 106.602 li
426.492 106.586 li
426.945 106.445 li
426.984 106.363 427.063 106.289 427.18 106.227 cv
427.227 106.133 li
427.465 106.094 427.605 105.969 427.648 105.758 cv
427.813 105.594 428.027 105.508 428.289 105.508 cv
428.367 105.508 li
428.594 105.77 428.711 105.988 428.711 106.164 cv
428.711 106.164 li
cp
f
435.543 101.945 mo
435.465 101.914 li
435.379 101.863 435.309 101.785 435.246 101.68 cv
435.184 101.566 435.121 101.457 435.059 101.352 cv
434.934 101.313 434.828 101.234 434.746 101.117 cv
434.637 101.117 li
434.324 100.914 li
433.902 100.836 li
433.512 100.883 li
433.09 100.992 li
432.965 100.883 li
432.824 100.93 li
432.824 101.008 li
432.668 101.039 li
432.551 101.238 432.379 101.41 432.152 101.555 cv
432.012 101.852 li
431.871 101.961 li
431.746 102.258 li
431.684 102.852 li
431.527 102.992 li
431.527 103.32 li
431.355 103.445 li
431.387 103.867 li
431.074 104.461 li
431.027 104.758 li
430.996 105.227 li
431.09 105.414 li
430.965 105.617 li
431.074 105.742 li
430.902 106.07 li
430.996 106.227 li
431.059 106.445 li
431.168 106.523 li
431.293 106.523 li
431.465 106.367 li
431.605 106.398 li
431.902 106.258 li
431.949 106.164 li
432.293 106.023 li
432.324 105.93 li
432.543 105.789 li
432.543 105.758 li
432.98 105.289 li
433.199 105.195 li
433.309 104.977 li
433.543 104.93 li
433.84 104.602 li
433.777 104.57 li
433.902 104.445 li
434.09 104.07 li
434.246 103.914 li
434.34 103.508 li
434.621 103.414 li
434.824 103.133 li
434.902 103.086 li
434.902 102.758 li
435.168 102.633 li
435.543 101.945 li
cp
438.23 106.336 mo
438.012 107.086 li
437.871 107.305 li
437.672 107.598 437.484 107.742 437.309 107.742 cv
437.16 107.742 436.969 107.637 436.73 107.43 cv
436.371 106.914 li
436.215 106.586 li
436.137 106.258 li
435.98 105.727 li
435.98 104.93 li
435.918 104.242 li
435.98 103.867 li
435.934 103.758 li
435.496 104.398 li
435.434 104.398 li
435.418 104.445 li
435.105 104.93 li
434.605 105.477 li
434.23 105.992 li
433.84 106.367 li
433.723 106.566 433.594 106.738 433.449 106.883 cv
433.09 107.133 li
432.887 107.414 li
432.48 107.539 li
432.324 107.742 li
431.918 107.82 li
431.605 108.008 li
431.543 107.992 li
431.512 108.086 li
430.949 108.008 li
430.293 107.539 li
430.105 107.344 429.988 107.125 429.949 106.883 cv
429.969 106.863 429.988 106.844 430.012 106.82 cv
430.043 106.789 430.063 106.77 430.074 106.758 cv
430.063 106.738 429.996 106.707 429.871 106.664 cv
429.715 106.305 li
429.809 106.18 li
429.715 105.961 li
429.809 105.711 li
429.762 105.383 li
429.887 104.867 li
429.887 104.305 li
430.012 104.148 li
430.012 103.758 li
430.137 103.523 li
430.184 103.258 li
430.215 103.227 li
430.215 102.992 li
430.402 102.695 li
430.434 102.445 li
430.543 102.273 li
430.59 102.164 li
430.668 101.727 li
430.793 101.352 li
430.887 101.258 li
430.918 101.023 li
431.152 100.773 li
431.172 100.711 431.223 100.586 431.309 100.398 cv
431.762 100.195 li
432.059 99.8979 li
432.887 99.6641 li
433.012 99.6641 433.109 99.6602 433.184 99.6479 cv
433.309 99.7109 li
433.34 99.5698 li
433.762 99.5391 li
433.902 99.5859 li
434.027 99.5698 li
434.137 99.6641 li
434.48 99.6802 li
434.559 99.6172 li
434.637 99.6948 li
434.824 99.7109 li
434.824 99.8359 li
434.902 99.8979 li
435.262 99.9609 li
435.527 100.273 li
435.887 100.539 li
435.98 100.727 li
435.996 100.742 li
436.059 100.492 li
436.168 100.258 li
436.137 99.8359 li
436.215 99.0859 li
436.105 98.7891 li
436.246 98.5859 li
436.168 98.3828 li
436.23 97.8828 li
436.168 97.4448 li
436.012 97.3198 li
436.262 97.0229 li
436.262 96.8359 li
436.262 96.6289 436.184 96.4058 436.027 96.1641 cv
436.137 96.1641 li
436.34 95.8828 li
436.516 95.8438 436.676 95.8198 436.824 95.8198 cv
436.988 95.8198 437.125 95.8589 437.23 95.9302 cv
437.426 95.9922 437.527 96.2852 437.527 96.8052 cv
437.434 96.8052 li
437.418 96.8672 li
437.574 97.0078 li
437.465 97.3052 li
437.637 97.6479 li
437.543 97.7578 li
437.574 97.8438 437.59 97.9258 437.59 98.0078 cv
437.59 98.0938 437.574 98.1802 437.543 98.2729 cv
437.637 98.3828 li
437.656 98.4258 437.668 98.5039 437.668 98.6172 cv
437.668 98.7539 437.637 98.875 437.574 98.9771 cv
437.512 99.7271 437.457 100.195 437.418 100.383 cv
437.426 100.414 437.434 100.469 437.434 100.539 cv
437.434 100.633 437.418 100.738 437.387 100.852 cv
437.387 100.961 li
437.387 101.098 437.359 101.258 437.309 101.445 cv
437.246 101.977 li
437.168 102.117 li
437.215 102.289 li
437.121 102.555 li
437.215 102.789 li
437.074 103.352 li
437.168 103.758 li
437.105 103.992 li
437.152 104.352 li
437.184 104.438 437.199 104.516 437.199 104.586 cv
437.199 104.648 437.191 104.703 437.184 104.742 cv
437.293 104.836 li
437.152 105.195 li
437.293 105.586 li
437.23 105.695 li
437.293 105.789 li
437.23 105.898 li
437.293 105.961 li
437.449 106.102 li
437.762 106.133 li
438.23 106.336 li
cp
f
450.227 105.242 mo
450.211 105.148 li
450.227 105.07 li
450.117 104.758 li
450.195 104.586 li
450.117 104.445 li
450.102 104.273 li
449.961 103.977 li
449.883 103.773 li
449.617 103.32 li
449.398 103.133 li
449.273 102.82 li
449.117 102.758 li
448.82 102.383 li
448.539 102.414 li
448.32 102.117 li
448.133 102.164 li
448.008 101.93 li
447.945 101.914 li
447.695 101.914 li
447.508 101.992 li
447.367 101.852 li
447.18 101.898 li
447.117 101.758 li
446.789 101.711 li
446.805 101.93 li
446.773 102.273 li
446.852 102.461 li
447.102 102.695 li
446.898 103.133 li
446.914 103.398 li
446.82 103.945 li
446.859 104.176 446.934 104.367 447.039 104.523 cv
446.977 104.711 li
446.984 104.734 446.992 104.75 446.992 104.758 cv
446.992 104.789 446.945 104.844 446.852 104.914 cv
446.977 105.07 li
446.883 105.289 li
446.852 105.523 li
446.898 105.773 li
446.883 106.008 li
447.258 106.008 li
447.309 105.988 447.375 105.977 447.461 105.977 cv
447.563 105.977 447.656 106.016 447.742 106.086 cv
447.75 106.086 447.777 106.082 447.82 106.07 cv
447.84 106.07 447.855 106.07 447.867 106.07 cv
447.906 106.07 447.977 106.082 448.07 106.102 cv
448.141 106.07 448.211 106.055 448.273 106.055 cv
448.367 106.055 448.453 106.078 448.539 106.117 cv
448.695 106.117 li
448.836 106.164 li
449.195 106.055 li
449.492 106.227 li
449.594 106.27 449.637 106.289 449.617 106.289 cv
449.961 105.945 li
449.992 105.695 li
450.086 105.648 li
450.023 105.508 li
450.164 105.367 li
450.227 105.242 li
cp
451.586 104.977 mo
451.367 105.508 li
451.508 105.867 li
451.43 105.977 li
451.367 106.258 li
451.211 106.523 li
451.148 106.555 li
451.117 106.898 li
450.789 106.93 li
450.621 107.086 450.445 107.211 450.258 107.305 cv
450.164 107.289 li
449.883 107.383 li
449.727 107.398 li
449.383 107.523 li
448.992 107.352 li
448.93 107.305 li
448.633 107.32 li
448.695 107.367 li
448.195 107.289 li
447.742 107.398 li
447.57 107.242 li
447.18 107.273 li
447.039 107.164 li
447.027 107.164 446.98 107.172 446.898 107.18 cv
446.898 107.289 li
446.898 107.395 446.883 107.504 446.852 107.617 cv
446.898 107.961 li
446.758 108.133 li
446.777 108.402 446.789 108.602 446.789 108.727 cv
446.742 109.18 li
446.805 109.867 li
446.664 110.039 li
446.742 110.32 li
446.68 110.492 li
446.789 110.555 li
446.789 110.82 li
446.809 110.891 446.82 110.945 446.82 110.977 cv
446.82 111.09 446.758 111.184 446.633 111.258 cv
446.695 111.508 li
446.617 111.648 li
446.57 112.367 li
446.539 113.211 446.355 113.633 446.023 113.633 cv
445.949 113.633 445.734 113.578 445.383 113.477 cv
445.445 112.945 li
445.336 112.148 li
445.508 111.82 li
445.523 111.43 li
445.461 110.898 li
445.602 110.664 li
445.445 110.242 li
445.57 110.023 li
445.461 109.664 li
445.602 109.336 li
445.578 109.273 445.531 109.211 445.461 109.148 cv
445.398 109.086 445.367 109.043 445.367 109.023 cv
445.367 108.98 445.406 108.945 445.492 108.914 cv
445.48 108.871 445.477 108.809 445.477 108.727 cv
445.477 108.57 445.512 108.367 445.586 108.117 cv
445.477 107.945 li
445.523 107.711 li
445.398 107.539 li
445.57 107.352 li
445.492 106.82 li
445.602 106.086 li
445.477 105.852 li
445.68 105.508 li
445.461 105.305 li
445.586 104.977 li
445.461 104.883 li
445.477 104.57 li
445.586 104.195 li
445.586 104.117 li
445.602 104.055 li
445.602 103.852 li
445.617 103.773 li
445.523 103.492 li
445.617 103.18 li
445.523 102.945 li
445.602 102.68 li
445.523 102.617 li
445.586 102.258 li
445.523 102.055 li
445.57 101.867 li
445.508 101.742 li
444.867 102.039 li
444.867 101.93 li
444.742 101.945 li
444.539 102.117 li
444.383 102.117 li
444.164 102.414 li
443.977 102.336 li
443.898 102.523 li
443.305 102.172 443.008 101.895 443.008 101.695 cv
443.008 101.551 443.066 101.43 443.18 101.336 cv
443.148 101.07 li
443.492 100.875 443.809 100.77 444.102 100.758 cv
444.227 100.633 li
444.805 100.398 li
444.93 100.273 li
445.445 100.305 li
445.523 100.273 li
445.695 99.6479 li
446.117 99.7271 li
446.414 100.195 li
446.57 100.039 li
446.898 100.273 li
447.055 100.273 447.203 100.305 447.352 100.367 cv
447.445 100.523 li
447.57 100.477 li
447.711 100.57 li
447.793 100.57 447.859 100.582 447.914 100.602 cv
447.883 100.695 li
448.289 100.57 li
448.477 100.789 li
448.82 100.898 li
449.055 101.195 li
449.492 101.461 li
449.508 101.492 li
449.852 101.602 li
449.852 101.711 li
449.945 101.785 450.016 101.879 450.07 101.992 cv
450.211 102.086 li
450.32 102.289 li
450.539 102.289 li
450.539 102.648 li
450.664 102.773 li
450.695 102.898 li
450.883 102.93 li
450.902 103.211 450.98 103.445 451.117 103.633 cv
451.117 103.758 li
451.289 103.945 li
451.258 104.227 li
451.398 104.555 li
451.445 104.93 li
451.586 104.977 li
cp
f
458.043 105.664 mo
458.043 105.801 457.996 105.91 457.902 105.992 cv
457.809 106.141 457.652 106.289 457.434 106.445 cv
457.246 106.57 li
457.09 106.789 li
456.934 106.852 li
456.668 107.023 li
456.496 107.039 li
456.418 107.117 li
456.176 107.191 455.996 107.313 455.871 107.477 cv
455.777 107.531 455.699 107.555 455.637 107.555 cv
455.582 107.555 455.543 107.551 455.512 107.539 cv
455.301 107.664 455.035 107.727 454.715 107.727 cv
454.434 107.727 454.25 107.699 454.168 107.648 cv
453.855 107.477 li
453.746 107.289 li
453.746 107.242 li
453.746 107.086 453.676 106.957 453.543 106.852 cv
453.465 106.492 li
453.324 106.336 li
453.23 105.664 li
453.215 105.273 li
453.23 104.992 li
453.277 104.883 li
453.234 104.813 453.215 104.734 453.215 104.648 cv
453.277 104.141 453.309 103.82 453.309 103.695 cv
453.152 103.367 li
453.309 103.102 li
453.355 102.648 li
453.324 102.336 li
453.434 102.07 li
453.324 101.711 li
453.48 101.461 li
453.512 101.289 li
453.512 100.664 li
453.559 100.539 li
453.543 99.7891 li
453.59 99.0078 li
453.527 98.8672 li
453.512 98.3198 li
453.559 97.8359 li
453.512 97.6641 li
453.621 96.5859 li
454.121 96.4609 454.34 96.3979 454.277 96.3979 cv
454.473 96.3979 454.629 96.5039 454.746 96.7109 cv
454.777 96.8521 li
455.059 97.1172 li
454.902 97.4922 li
454.949 97.5698 li
454.918 97.8008 454.887 97.9531 454.855 98.0229 cv
454.887 98.3979 li
454.98 98.7422 li
454.855 99.1172 li
454.855 99.3281 454.824 99.5161 454.762 99.6802 cv
454.762 99.7422 454.75 99.8359 454.73 99.9609 cv
454.715 100.07 li
454.871 100.273 li
454.809 100.477 li
454.828 100.57 454.84 100.633 454.84 100.664 cv
454.84 100.738 454.813 100.836 454.762 100.961 cv
454.809 101.117 li
454.699 101.695 li
454.699 102.07 li
454.574 102.445 li
454.637 102.789 li
454.574 103.586 li
454.621 103.68 li
454.527 104.086 li
454.496 104.586 li
454.473 104.66 454.465 104.703 454.465 104.711 cv
454.465 104.922 454.457 105.094 454.449 105.227 cv
454.527 105.477 li
454.496 105.742 li
454.605 105.977 li
454.59 106.07 li
454.66 106.133 454.723 106.227 454.777 106.352 cv
454.949 106.352 li
455.184 106.43 li
455.293 106.289 li
455.449 106.258 li
455.52 106.238 455.574 106.227 455.605 106.227 cv
455.668 106.227 li
455.781 106.207 455.875 106.148 455.949 106.055 cv
456.059 105.992 li
456.141 105.859 456.281 105.77 456.48 105.727 cv
456.531 105.676 456.645 105.578 456.824 105.43 cv
456.824 105.266 456.922 105.141 457.121 105.055 cv
457.297 105.055 457.418 105.031 457.48 104.977 cv
457.719 105.008 457.871 105.07 457.934 105.164 cv
458.004 105.25 458.043 105.414 458.043 105.664 cv
458.043 105.664 li
cp
f
464.383 101.273 mo
464.305 101.148 li
464.164 101.117 li
463.602 100.664 li
463.242 100.617 li
462.961 100.617 li
462.914 100.57 li
462.773 100.633 li
462.617 100.539 li
462.148 100.539 li
462.195 100.617 li
461.789 100.758 li
461.711 100.852 li
461.664 100.867 li
461.445 101.047 461.293 101.195 461.211 101.32 cv
461.086 101.742 li
461.008 101.914 li
461.195 102.164 li
460.883 102.398 li
460.93 102.461 li
460.793 102.691 460.727 102.914 460.727 103.133 cv
460.586 103.32 li
460.586 103.633 li
460.43 103.805 li
460.398 103.961 li
460.352 103.992 li
460.352 104.242 li
460.289 104.336 li
460.289 104.484 460.277 104.598 460.258 104.68 cv
460.289 104.773 li
460.133 105.117 li
460.195 105.227 li
460.07 105.398 li
460.195 105.742 li
460.008 105.992 li
460.039 106.336 li
460.039 106.398 li
460.117 106.43 li
460.195 106.414 li
460.258 106.352 460.32 106.297 460.383 106.242 cv
460.352 106.102 li
460.602 106.07 li
460.648 105.945 li
461.711 105.07 li
461.82 105.039 li
461.945 104.742 li
462.016 104.711 462.121 104.66 462.258 104.586 cv
462.367 104.305 li
462.508 104.305 li
462.445 103.992 li
462.711 103.961 li
462.73 103.91 462.766 103.852 462.82 103.789 cv
462.871 103.719 462.93 103.648 462.992 103.586 cv
463.914 102.352 li
464.055 102.086 li
464.039 102.023 li
464.164 101.82 li
464.195 101.617 li
464.367 101.477 li
464.383 101.273 li
cp
466.086 100.336 mo
465.914 100.57 li
466.055 101.008 li
465.82 101.273 li
465.727 101.664 li
465.68 101.742 li
465.711 101.836 li
465.711 102.004 465.668 102.129 465.586 102.211 cv
465.555 102.273 li
465.555 102.336 li
465.586 102.422 465.602 102.5 465.602 102.57 cv
465.602 102.633 465.594 102.676 465.586 102.695 cv
465.602 102.773 li
465.523 102.977 li
465.586 103.18 li
465.445 103.336 li
465.492 103.586 li
465.602 103.711 li
465.445 103.852 li
465.445 104.148 li
465.32 104.43 li
465.398 104.711 li
465.289 104.867 li
465.477 104.992 li
465.227 105.398 li
465.211 105.461 li
465.383 105.492 li
465.258 105.898 li
465.258 105.977 li
465.258 106.063 465.25 106.129 465.242 106.18 cv
465.258 106.227 li
465.555 106.258 li
465.789 106.617 li
465.664 106.898 li
465.852 106.883 li
465.922 107.02 465.965 107.145 465.977 107.258 cv
465.711 107.523 li
465.625 107.609 465.508 107.688 465.352 107.773 cv
465.039 107.945 li
464.961 107.852 li
464.773 107.961 li
464.211 107.305 li
464.211 107.008 li
464.137 106.77 464.102 106.547 464.102 106.336 cv
464.102 106.227 li
464.008 105.164 li
464.148 104.414 li
464.039 103.977 li
463.727 104.477 li
463.57 104.945 li
463.43 105.023 li
463.18 105.414 li
462.727 105.836 li
462.602 106.055 li
462.195 106.398 li
462.117 106.617 li
461.539 106.992 li
460.93 107.664 li
460.586 107.742 li
460.352 107.914 li
460.047 107.902 459.82 107.793 459.664 107.586 cv
459.121 107.316 458.84 106.938 458.82 106.445 cv
458.914 106.398 li
458.883 106.289 li
458.867 106.07 li
458.758 105.836 li
458.867 105.586 li
458.914 105.195 li
459.039 104.602 li
459.039 104.594 459.039 104.57 459.039 104.539 cv
459.016 104.52 459.008 104.492 459.008 104.461 cv
459.008 104.422 459.023 104.363 459.055 104.289 cv
459.043 104.258 459.039 104.211 459.039 104.148 cv
459.039 104.055 459.074 103.914 459.148 103.727 cv
459.273 103.68 li
459.199 103.617 459.164 103.551 459.164 103.477 cv
459.164 103.426 459.168 103.391 459.18 103.367 cv
459.168 103.336 459.164 103.297 459.164 103.242 cv
459.164 103.098 459.23 102.988 459.367 102.914 cv
459.406 102.801 459.477 102.68 459.57 102.555 cv
459.477 102.414 li
459.695 102.148 li
459.695 102.07 li
459.695 101.844 459.773 101.633 459.93 101.445 cv
459.914 101.117 li
459.992 101.039 li
459.992 101.031 459.992 101.016 459.992 100.992 cv
459.98 100.973 459.977 100.953 459.977 100.93 cv
459.977 100.867 459.996 100.813 460.039 100.758 cv
460.039 100.648 li
460.09 100.535 460.215 100.359 460.414 100.117 cv
460.621 99.8672 460.773 99.6563 460.867 99.4771 cv
460.961 99.5698 li
461.164 99.4771 li
461.242 99.4448 li
461.836 99.1802 li
463.227 99.2422 li
463.227 99.3672 li
463.664 99.4609 li
463.934 99.4609 464.109 99.5508 464.195 99.7271 cv
464.195 99.6948 464.199 99.6563 464.211 99.6021 cv
464.211 99.5698 464.211 99.5508 464.211 99.5391 cv
464.602 99.8672 li
464.93 99.9448 li
465.586 99.7891 li
465.82 100.242 li
466.086 100.336 li
cp
f
479.684 104.711 mo
479.684 104.816 479.605 104.945 479.449 105.102 cv
479.246 105.398 li
479.168 105.758 li
479.012 105.82 li
478.98 105.93 li
478.781 105.984 478.641 106.129 478.559 106.367 cv
478.434 106.535 478.293 106.656 478.137 106.727 cv
478.074 106.789 478.016 106.832 477.965 106.852 cv
477.871 107.023 li
477.715 107.055 li
477.246 107.305 li
476.637 107.383 li
476.48 107.352 li
476.199 107.398 li
476.09 107.273 li
475.922 107.191 475.801 107.109 475.73 107.023 cv
475.594 106.984 475.488 106.867 475.418 106.68 cv
475.207 106.441 475.105 106.25 475.105 106.102 cv
475.105 106.055 li
474.98 105.836 li
474.949 105.789 li
474.84 105.477 li
474.668 105.133 li
474.715 104.711 li
474.527 104.477 li
474.262 102.93 li
474.219 102.734 474.199 102.563 474.199 102.414 cv
474.168 102.32 li
474.074 102.195 li
473.918 102.414 li
473.277 103.102 li
473.043 103.477 li
472.918 103.727 li
472.715 104.008 li
472.574 104.164 li
472.59 104.242 li
472.34 104.805 li
472.184 104.992 li
472.012 105.023 li
471.855 105.18 li
471.855 105.422 471.738 105.578 471.512 105.648 cv
471.465 105.695 li
471.359 105.957 471.238 106.117 471.105 106.18 cv
470.949 106.43 li
470.688 106.672 470.516 106.82 470.434 106.883 cv
470.391 107 470.324 107.098 470.23 107.18 cv
470.207 107.223 470.168 107.27 470.105 107.32 cv
470.063 107.531 469.895 107.672 469.605 107.758 cv
469.402 107.82 li
469.16 107.797 468.965 107.656 468.809 107.398 cv
468.543 106.945 li
468.621 106.523 li
468.59 106.289 li
468.621 106.242 li
468.637 106.008 li
468.449 105.586 li
468.59 105.367 li
468.512 105.133 li
468.637 104.883 li
468.684 104.461 li
468.605 104.398 li
468.746 104.148 li
468.699 104.008 li
468.684 103.727 li
468.746 103.18 li
468.723 103.066 468.715 102.988 468.715 102.945 cv
468.715 102.926 468.719 102.906 468.73 102.883 cv
468.73 102.844 468.73 102.816 468.73 102.805 cv
468.637 102.664 li
468.699 102.086 li
468.684 101.898 li
468.73 101.602 li
468.668 101.117 li
468.98 100.57 li
469.355 100.633 469.613 100.719 469.762 100.82 cv
469.906 100.926 469.98 101.109 469.98 101.367 cv
469.98 101.523 li
470.105 101.742 li
470.043 102.117 li
470.121 102.852 li
469.996 103.18 li
470.043 103.57 li
470.043 103.867 li
469.902 104.07 li
470.012 104.398 li
469.902 104.586 li
469.887 104.789 li
469.996 104.992 li
469.855 105.367 li
469.793 105.523 li
469.793 105.695 li
469.887 105.867 li
470.199 105.57 li
470.199 105.383 470.254 105.258 470.371 105.195 cv
470.379 105.082 470.426 104.992 470.512 104.93 cv
470.465 104.883 li
470.699 104.664 li
470.746 104.586 li
470.746 104.43 li
471.043 104.211 li
471.105 104.039 li
471.277 103.93 li
471.98 103.133 li
471.918 103.207 471.719 103.43 471.387 103.805 cv
471.387 103.836 li
471.418 103.711 li
471.652 103.445 li
471.809 103.133 li
471.809 102.945 li
472.09 102.867 li
472.121 102.633 li
472.184 102.555 li
472.215 102.461 li
472.215 102.336 li
472.465 102.086 li
472.465 102.066 472.465 102.035 472.465 101.992 cv
472.453 101.961 472.449 101.941 472.449 101.93 cv
472.449 101.711 472.566 101.594 472.809 101.57 cv
472.91 101.352 473.074 101.227 473.293 101.195 cv
473.402 101.023 li
473.434 100.992 li
473.535 100.836 473.699 100.727 473.918 100.664 cv
474.074 100.477 li
474.512 100.477 li
474.73 100.727 li
474.934 100.836 li
474.949 100.883 li
475.074 100.914 li
475.105 101.289 li
475.418 101.477 li
475.293 101.867 li
475.48 102.305 li
475.48 102.805 li
475.621 103.492 li
475.668 104.148 li
475.824 104.523 li
475.934 104.992 li
476.004 105.066 476.059 105.164 476.09 105.289 cv
476.418 105.383 li
476.418 105.742 li
476.605 105.945 li
476.605 105.992 li
476.668 106.008 li
476.746 106.117 li
476.809 106.023 li
476.785 106.023 476.816 106.035 476.902 106.055 cv
477.035 106.055 477.176 105.938 477.324 105.695 cv
477.543 105.633 li
477.59 105.539 li
477.621 105.445 477.691 105.379 477.809 105.336 cv
477.934 105.352 li
478.012 105.273 li
478.027 105.18 li
478.074 105.117 li
478.199 105.035 478.277 104.91 478.309 104.742 cv
478.512 104.523 li
478.543 104.352 li
478.668 104.07 li
479.012 103.945 li
479.496 104.102 li
479.668 104.633 li
479.668 104.645 479.672 104.656 479.684 104.664 cv
479.684 104.688 479.684 104.703 479.684 104.711 cv
479.684 104.711 li
cp
f
491.746 104.711 mo
491.746 104.816 491.668 104.945 491.512 105.102 cv
491.309 105.398 li
491.23 105.758 li
491.074 105.82 li
491.043 105.93 li
490.844 105.984 490.703 106.129 490.621 106.367 cv
490.496 106.535 490.355 106.656 490.199 106.727 cv
490.137 106.789 490.078 106.832 490.027 106.852 cv
489.934 107.023 li
489.777 107.055 li
489.309 107.305 li
488.699 107.383 li
488.543 107.352 li
488.262 107.398 li
488.152 107.273 li
487.984 107.191 487.863 107.109 487.793 107.023 cv
487.656 106.984 487.551 106.867 487.48 106.68 cv
487.27 106.441 487.168 106.25 487.168 106.102 cv
487.168 106.055 li
487.043 105.836 li
487.012 105.789 li
486.902 105.477 li
486.73 105.133 li
486.777 104.711 li
486.59 104.477 li
486.324 102.93 li
486.281 102.734 486.262 102.563 486.262 102.414 cv
486.23 102.32 li
486.137 102.195 li
485.98 102.414 li
485.34 103.102 li
485.105 103.477 li
484.98 103.727 li
484.777 104.008 li
484.637 104.164 li
484.652 104.242 li
484.402 104.805 li
484.246 104.992 li
484.074 105.023 li
483.918 105.18 li
483.918 105.422 483.801 105.578 483.574 105.648 cv
483.527 105.695 li
483.422 105.957 483.301 106.117 483.168 106.18 cv
483.012 106.43 li
482.75 106.672 482.578 106.82 482.496 106.883 cv
482.453 107 482.387 107.098 482.293 107.18 cv
482.27 107.223 482.23 107.27 482.168 107.32 cv
482.125 107.531 481.957 107.672 481.668 107.758 cv
481.465 107.82 li
481.223 107.797 481.027 107.656 480.871 107.398 cv
480.605 106.945 li
480.684 106.523 li
480.652 106.289 li
480.684 106.242 li
480.699 106.008 li
480.512 105.586 li
480.652 105.367 li
480.574 105.133 li
480.699 104.883 li
480.746 104.461 li
480.668 104.398 li
480.809 104.148 li
480.762 104.008 li
480.746 103.727 li
480.809 103.18 li
480.785 103.066 480.777 102.988 480.777 102.945 cv
480.777 102.926 480.781 102.906 480.793 102.883 cv
480.793 102.844 480.793 102.816 480.793 102.805 cv
480.699 102.664 li
480.762 102.086 li
480.746 101.898 li
480.793 101.602 li
480.73 101.117 li
481.043 100.57 li
481.418 100.633 481.676 100.719 481.824 100.82 cv
481.969 100.926 482.043 101.109 482.043 101.367 cv
482.043 101.523 li
482.168 101.742 li
482.105 102.117 li
482.184 102.852 li
482.059 103.18 li
482.105 103.57 li
482.105 103.867 li
481.965 104.07 li
482.074 104.398 li
481.965 104.586 li
481.949 104.789 li
482.059 104.992 li
481.918 105.367 li
481.855 105.523 li
481.855 105.695 li
481.949 105.867 li
482.262 105.57 li
482.262 105.383 482.316 105.258 482.434 105.195 cv
482.441 105.082 482.488 104.992 482.574 104.93 cv
482.527 104.883 li
482.762 104.664 li
482.809 104.586 li
482.809 104.43 li
483.105 104.211 li
483.168 104.039 li
483.34 103.93 li
484.043 103.133 li
483.98 103.207 483.781 103.43 483.449 103.805 cv
483.449 103.836 li
483.48 103.711 li
483.715 103.445 li
483.871 103.133 li
483.871 102.945 li
484.152 102.867 li
484.184 102.633 li
484.246 102.555 li
484.277 102.461 li
484.277 102.336 li
484.527 102.086 li
484.527 102.066 484.527 102.035 484.527 101.992 cv
484.516 101.961 484.512 101.941 484.512 101.93 cv
484.512 101.711 484.629 101.594 484.871 101.57 cv
484.973 101.352 485.137 101.227 485.355 101.195 cv
485.465 101.023 li
485.496 100.992 li
485.598 100.836 485.762 100.727 485.98 100.664 cv
486.137 100.477 li
486.574 100.477 li
486.793 100.727 li
486.996 100.836 li
487.012 100.883 li
487.137 100.914 li
487.168 101.289 li
487.48 101.477 li
487.355 101.867 li
487.543 102.305 li
487.543 102.805 li
487.684 103.492 li
487.73 104.148 li
487.887 104.523 li
487.996 104.992 li
488.066 105.066 488.121 105.164 488.152 105.289 cv
488.48 105.383 li
488.48 105.742 li
488.668 105.945 li
488.668 105.992 li
488.73 106.008 li
488.809 106.117 li
488.871 106.023 li
488.848 106.023 488.879 106.035 488.965 106.055 cv
489.098 106.055 489.238 105.938 489.387 105.695 cv
489.605 105.633 li
489.652 105.539 li
489.684 105.445 489.754 105.379 489.871 105.336 cv
489.996 105.352 li
490.074 105.273 li
490.09 105.18 li
490.137 105.117 li
490.262 105.035 490.34 104.91 490.371 104.742 cv
490.574 104.523 li
490.605 104.352 li
490.73 104.07 li
491.074 103.945 li
491.559 104.102 li
491.73 104.633 li
491.73 104.645 491.734 104.656 491.746 104.664 cv
491.746 104.688 491.746 104.703 491.746 104.711 cv
491.746 104.711 li
cp
f
497.227 105.008 mo
497.227 105.281 497.18 105.453 497.086 105.523 cv
496.992 105.602 li
496.898 105.852 li
496.617 105.945 li
496.531 106.133 496.406 106.285 496.242 106.398 cv
496.07 106.445 li
495.836 106.695 li
495.633 106.758 li
495.547 106.969 495.371 107.078 495.102 107.086 cv
495.078 107.129 495.027 107.203 494.945 107.305 cv
494.766 107.43 494.578 107.504 494.383 107.523 cv
494.289 107.539 li
494.164 107.711 li
493.805 107.711 li
493.523 107.914 li
492.789 107.383 li
492.445 106.68 li
492.43 105.789 li
492.352 105.586 li
492.57 103.992 li
492.633 103.93 li
492.602 103.742 492.586 103.566 492.586 103.398 cv
492.586 103.297 492.621 103.078 492.695 102.742 cv
492.789 102.32 li
492.758 102.25 492.703 102.172 492.633 102.086 cv
492.742 101.742 li
492.789 101.336 li
492.82 101.273 li
492.766 101.172 492.734 101.051 492.727 100.914 cv
492.734 100.895 492.746 100.863 492.758 100.82 cv
492.777 100.781 492.789 100.75 492.789 100.727 cv
492.746 100.613 492.727 100.508 492.727 100.414 cv
492.727 100.125 492.887 99.9922 493.211 100.023 cv
493.43 100.039 li
493.574 99.9688 493.664 99.9302 493.695 99.9302 cv
493.934 99.9302 494.094 100.063 494.18 100.32 cv
494.18 100.398 li
494.23 100.547 494.258 100.68 494.258 100.805 cv
494.258 100.922 494.246 101 494.227 101.039 cv
494.102 101.945 li
494.227 102.195 li
494.227 102.414 494.152 102.609 494.008 102.773 cv
494.086 102.992 li
493.852 103.68 li
493.82 103.973 493.789 104.195 493.758 104.352 cv
493.758 104.805 li
493.648 105.055 li
493.664 105.242 li
493.633 105.648 li
493.664 105.977 li
493.93 106.195 li
494.148 106.164 li
494.18 106.102 li
494.336 106.117 li
494.57 106.055 li
494.758 105.852 li
494.836 105.742 li
494.961 105.727 li
494.992 105.633 li
495.055 105.57 li
495.164 105.633 li
495.336 105.461 li
495.445 105.477 li
495.477 105.352 li
495.523 105.352 li
495.57 105.195 li
495.742 105.133 li
496.07 104.977 li
496.352 104.781 496.621 104.68 496.883 104.68 cv
496.961 104.68 li
497.094 104.766 497.184 104.875 497.227 105.008 cv
497.227 105.008 li
cp
495.398 95.4609 mo
495.398 95.6089 495.297 95.7422 495.102 95.8672 cv
495.102 95.8979 li
494.871 96.1719 494.672 96.3281 494.508 96.3672 cv
494.242 96.6948 li
494.055 96.9302 li
493.648 97.0229 li
493.461 97.2891 li
493.18 97.4302 li
492.711 97.8359 li
492.43 97.5698 li
492.477 97.1172 li
492.68 96.8052 li
492.688 96.6289 492.781 96.4839 492.961 96.3672 cv
492.961 96.2891 li
493.07 96.2271 li
493.086 95.9448 li
493.383 95.8828 li
493.383 95.7109 li
493.586 95.6802 li
493.637 95.4409 493.742 95.27 493.898 95.1641 cv
493.961 95.1172 li
494.055 95.0078 li
494.211 94.5859 li
495 94.7729 495.398 95.0659 495.398 95.4609 cv
495.398 95.4609 li
cp
f
509.707 104.711 mo
509.707 104.816 509.629 104.945 509.473 105.102 cv
509.27 105.398 li
509.191 105.758 li
509.035 105.82 li
509.004 105.93 li
508.805 105.984 508.664 106.129 508.582 106.367 cv
508.457 106.535 508.316 106.656 508.16 106.727 cv
508.098 106.789 508.039 106.832 507.988 106.852 cv
507.895 107.023 li
507.738 107.055 li
507.27 107.305 li
506.66 107.383 li
506.504 107.352 li
506.223 107.398 li
506.113 107.273 li
505.945 107.191 505.824 107.109 505.754 107.023 cv
505.617 106.984 505.512 106.867 505.441 106.68 cv
505.23 106.441 505.129 106.25 505.129 106.102 cv
505.129 106.055 li
505.004 105.836 li
504.973 105.789 li
504.863 105.477 li
504.691 105.133 li
504.738 104.711 li
504.551 104.477 li
504.285 102.93 li
504.242 102.734 504.223 102.563 504.223 102.414 cv
504.191 102.32 li
504.098 102.195 li
503.941 102.414 li
503.301 103.102 li
503.066 103.477 li
502.941 103.727 li
502.738 104.008 li
502.598 104.164 li
502.613 104.242 li
502.363 104.805 li
502.207 104.992 li
502.035 105.023 li
501.879 105.18 li
501.879 105.422 501.762 105.578 501.535 105.648 cv
501.488 105.695 li
501.383 105.957 501.262 106.117 501.129 106.18 cv
500.973 106.43 li
500.711 106.672 500.539 106.82 500.457 106.883 cv
500.414 107 500.348 107.098 500.254 107.18 cv
500.23 107.223 500.191 107.27 500.129 107.32 cv
500.086 107.531 499.918 107.672 499.629 107.758 cv
499.426 107.82 li
499.184 107.797 498.988 107.656 498.832 107.398 cv
498.566 106.945 li
498.645 106.523 li
498.613 106.289 li
498.645 106.242 li
498.66 106.008 li
498.473 105.586 li
498.613 105.367 li
498.535 105.133 li
498.66 104.883 li
498.707 104.461 li
498.629 104.398 li
498.77 104.148 li
498.723 104.008 li
498.707 103.727 li
498.77 103.18 li
498.746 103.066 498.738 102.988 498.738 102.945 cv
498.738 102.926 498.742 102.906 498.754 102.883 cv
498.754 102.844 498.754 102.816 498.754 102.805 cv
498.66 102.664 li
498.723 102.086 li
498.707 101.898 li
498.754 101.602 li
498.691 101.117 li
499.004 100.57 li
499.379 100.633 499.637 100.719 499.785 100.82 cv
499.93 100.926 500.004 101.109 500.004 101.367 cv
500.004 101.523 li
500.129 101.742 li
500.066 102.117 li
500.145 102.852 li
500.02 103.18 li
500.066 103.57 li
500.066 103.867 li
499.926 104.07 li
500.035 104.398 li
499.926 104.586 li
499.91 104.789 li
500.02 104.992 li
499.879 105.367 li
499.816 105.523 li
499.816 105.695 li
499.91 105.867 li
500.223 105.57 li
500.223 105.383 500.277 105.258 500.395 105.195 cv
500.402 105.082 500.449 104.992 500.535 104.93 cv
500.488 104.883 li
500.723 104.664 li
500.77 104.586 li
500.77 104.43 li
501.066 104.211 li
501.129 104.039 li
501.301 103.93 li
502.004 103.133 li
501.941 103.207 501.742 103.43 501.41 103.805 cv
501.41 103.836 li
501.441 103.711 li
501.676 103.445 li
501.832 103.133 li
501.832 102.945 li
502.113 102.867 li
502.145 102.633 li
502.207 102.555 li
502.238 102.461 li
502.238 102.336 li
502.488 102.086 li
502.488 102.066 502.488 102.035 502.488 101.992 cv
502.477 101.961 502.473 101.941 502.473 101.93 cv
502.473 101.711 502.59 101.594 502.832 101.57 cv
502.934 101.352 503.098 101.227 503.316 101.195 cv
503.426 101.023 li
503.457 100.992 li
503.559 100.836 503.723 100.727 503.941 100.664 cv
504.098 100.477 li
504.535 100.477 li
504.754 100.727 li
504.957 100.836 li
504.973 100.883 li
505.098 100.914 li
505.129 101.289 li
505.441 101.477 li
505.316 101.867 li
505.504 102.305 li
505.504 102.805 li
505.645 103.492 li
505.691 104.148 li
505.848 104.523 li
505.957 104.992 li
506.027 105.066 506.082 105.164 506.113 105.289 cv
506.441 105.383 li
506.441 105.742 li
506.629 105.945 li
506.629 105.992 li
506.691 106.008 li
506.77 106.117 li
506.832 106.023 li
506.809 106.023 506.84 106.035 506.926 106.055 cv
507.059 106.055 507.199 105.938 507.348 105.695 cv
507.566 105.633 li
507.613 105.539 li
507.645 105.445 507.715 105.379 507.832 105.336 cv
507.957 105.352 li
508.035 105.273 li
508.051 105.18 li
508.098 105.117 li
508.223 105.035 508.301 104.91 508.332 104.742 cv
508.535 104.523 li
508.566 104.352 li
508.691 104.07 li
509.035 103.945 li
509.52 104.102 li
509.691 104.633 li
509.691 104.645 509.695 104.656 509.707 104.664 cv
509.707 104.688 509.707 104.703 509.707 104.711 cv
509.707 104.711 li
cp
f
518.957 105.398 mo
518.816 106.07 li
518.848 106.289 li
518.816 106.336 li
518.855 106.441 518.879 106.551 518.879 106.664 cv
518.879 106.738 518.863 106.813 518.832 106.883 cv
518.832 106.914 li
518.832 107.063 518.777 107.648 518.676 108.68 cv
518.629 109.023 li
518.629 109.086 li
518.598 109.164 li
518.582 109.242 li
518.598 109.336 li
518.535 109.398 li
518.488 109.508 li
518.41 109.508 li
518.441 109.602 li
518.395 109.695 li
518.395 109.789 518.363 109.875 518.301 109.961 cv
518.223 110.242 li
518.18 110.375 518.117 110.496 518.035 110.602 cv
517.949 110.758 517.801 110.965 517.582 111.227 cv
517.285 111.461 li
516.941 111.758 li
516.676 111.883 li
516.457 112.039 li
516.316 112.086 li
516.074 112.211 515.805 112.289 515.504 112.32 cv
515.395 112.289 li
515.223 112.367 li
515.223 112.398 li
515.023 112.449 514.852 112.477 514.707 112.477 cv
514.004 112.477 li
513.582 112.383 li
513.191 112.461 li
513.02 112.289 li
512.473 112.242 li
512.113 111.914 li
511.848 111.773 li
511.367 111.594 511.09 111.277 511.02 110.82 cv
511.051 110.742 li
511.004 110.461 li
511.148 110.23 511.277 110.109 511.395 110.102 cv
511.488 110.039 511.586 110.008 511.691 110.008 cv
511.691 110.008 511.801 110.023 512.02 110.055 cv
512.238 110.094 512.465 110.121 512.707 110.133 cv
512.676 110.398 li
512.895 110.555 li
512.895 110.758 li
512.754 110.945 li
513.582 111.195 li
513.988 111.102 li
513.988 111.227 li
514.113 111.195 li
514.145 111.195 li
514.164 111.195 514.242 111.203 514.379 111.227 cv
514.395 111.305 li
514.582 111.211 li
514.727 111.137 515.012 111.102 515.441 111.102 cv
515.512 111.059 515.574 111.012 515.629 110.961 cv
515.637 110.961 515.668 110.965 515.723 110.977 cv
515.762 110.977 515.801 110.977 515.832 110.977 cv
515.895 110.977 515.961 110.902 516.035 110.758 cv
516.043 110.797 516.07 110.82 516.113 110.82 cv
516.133 110.82 516.16 110.805 516.191 110.773 cv
516.23 110.75 516.258 110.742 516.27 110.742 cv
516.316 110.742 li
516.879 110.242 li
517.16 109.836 li
517.176 109.602 li
517.379 109.336 li
517.395 109.102 li
517.504 108.898 li
517.582 108.414 li
517.738 107.961 li
517.715 107.887 517.707 107.777 517.707 107.633 cv
517.707 107.375 517.742 107.109 517.816 106.836 cv
517.754 106.555 li
517.754 105.664 li
517.613 105.367 li
517.613 104.867 li
517.457 104.477 li
517.473 103.914 li
517.457 103.82 li
517.332 103.852 li
517.223 104.117 li
516.957 104.352 li
516.629 104.883 li
516.16 105.195 li
515.66 105.727 li
515.367 106.031 515.035 106.297 514.66 106.523 cv
514.473 106.727 li
514.207 106.898 li
513.957 107.023 li
513.723 107.258 li
513.426 107.398 li
513.332 107.492 513.195 107.563 513.02 107.602 cv
512.746 107.777 512.445 107.867 512.113 107.867 cv
511.926 107.867 li
511.863 107.875 511.773 107.883 511.66 107.883 cv
511.566 107.883 511.496 107.875 511.457 107.867 cv
511.129 107.852 li
510.66 107.398 li
510.316 106.945 li
510.176 106.57 li
510.051 105.852 li
510.113 105.336 li
510.301 104.711 li
510.27 104.523 li
510.426 103.961 li
510.582 103.633 li
510.633 103.477 510.66 103.297 510.66 103.086 cv
511.051 102.336 li
511.09 102.242 511.184 102.145 511.332 102.039 cv
511.504 101.727 li
511.723 101.492 li
511.762 101.336 511.855 101.203 512.004 101.086 cv
512.098 101.035 512.164 100.945 512.207 100.82 cv
512.258 100.688 512.488 100.563 512.895 100.445 cv
512.801 100.477 li
512.895 100.43 li
512.926 100.367 513.008 100.25 513.145 100.07 cv
513.363 100.102 li
513.52 100.008 li
513.707 99.832 513.91 99.7422 514.129 99.7422 cv
514.254 99.7422 li
514.723 99.5698 li
515.004 99.6641 li
515.316 99.6641 li
515.52 99.7729 li
515.633 99.7852 515.727 99.8359 515.801 99.9302 cv
516.051 100.18 li
516.129 100.211 li
516.16 100.289 li
516.332 100.539 li
516.348 100.633 li
516.285 100.914 li
516.332 101.117 li
516.098 101.477 li
515.566 101.555 li
515.301 101.117 li
515.051 101.023 li
514.926 100.898 li
514.738 100.898 li
514.684 100.922 514.559 100.984 514.363 101.086 cv
514.348 101.227 li
513.895 101.227 li
513.777 101.406 513.648 101.5 513.504 101.508 cv
513.43 101.563 513.355 101.602 513.285 101.633 cv
513.145 101.977 li
513.02 101.992 li
513.004 102.164 li
512.754 102.164 li
512.52 102.539 li
512.316 102.664 li
512.238 102.914 li
511.973 103.289 li
511.941 103.648 li
511.723 103.867 li
511.52 104.648 li
511.379 104.789 li
511.395 104.992 li
511.176 105.664 li
511.238 105.883 li
511.223 106.102 li
511.305 106.227 511.348 106.352 511.348 106.477 cv
511.473 106.523 li
511.52 106.617 li
511.727 106.617 511.863 106.645 511.926 106.695 cv
512.027 106.613 512.32 106.523 512.801 106.43 cv
512.871 106.266 512.973 106.145 513.098 106.07 cv
513.23 105.988 513.504 105.836 513.91 105.617 cv
513.973 105.633 li
513.973 105.539 514.008 105.453 514.082 105.367 cv
514.258 105.297 514.363 105.25 514.395 105.227 cv
514.496 105.164 514.555 105.086 514.566 104.992 cv
514.848 104.914 li
515.035 104.758 li
515.488 104.148 li
515.613 104.211 li
515.621 104.18 515.754 104.02 516.004 103.727 cv
516.441 103.227 li
516.473 102.992 li
516.617 102.859 516.785 102.473 516.973 101.836 cv
516.879 101.461 li
516.738 101.211 li
516.848 100.93 li
516.707 100.742 li
516.676 100.492 li
516.613 100.305 li
516.801 99.9771 li
516.988 99.8828 517.121 99.8359 517.207 99.8359 cv
517.32 99.8359 517.465 99.895 517.645 100.008 cv
517.77 100.242 li
518.004 100.414 li
518.035 100.805 li
518.074 100.922 518.117 101.082 518.16 101.289 cv
518.223 101.406 518.254 101.535 518.254 101.68 cv
518.254 101.805 li
518.285 101.914 li
518.488 102.195 li
518.441 102.523 li
518.535 102.664 li
518.574 102.75 518.598 102.836 518.598 102.93 cv
518.598 103.016 518.59 103.082 518.582 103.133 cv
518.738 103.18 li
518.613 103.633 li
518.691 103.977 li
518.742 104.102 518.77 104.211 518.77 104.305 cv
518.77 104.398 518.742 104.52 518.691 104.664 cv
518.801 104.758 li
518.957 105.398 li
cp
f
365.359 231.961 mo
365.219 232.555 li
364.563 232.648 li
364.203 232.883 li
363.969 232.773 li
363.703 232.93 li
363.438 233.023 li
363.266 233.148 li
363.266 233.227 li
362.875 233.414 li
362.625 233.727 li
362.5 233.727 li
362.313 233.938 362.176 234.066 362.094 234.117 cv
361.844 234.523 li
361.75 234.555 li
361.707 234.66 361.664 234.805 361.625 234.992 cv
361.375 235.086 li
361.266 235.305 li
361.125 235.477 li
361.078 235.742 li
360.938 235.805 li
360.938 236.07 li
360.891 236.133 li
360.922 236.188 360.961 236.25 361.016 236.32 cv
360.734 236.43 li
360.703 236.664 li
360.531 236.977 li
360.625 237.211 li
360.391 237.523 li
360.422 237.648 360.438 237.738 360.438 237.789 cv
360.438 237.801 360.438 237.82 360.438 237.852 cv
360.426 237.895 360.422 237.926 360.422 237.945 cv
360.453 238.102 li
360.766 238.43 li
360.531 238.852 li
360.313 239.008 li
359.797 239.258 li
359.141 238.992 li
359.141 238.57 li
359.063 238.414 li
359.125 238.148 li
359.094 237.953 359.078 237.805 359.078 237.711 cv
359.078 237.672 359.086 237.625 359.109 237.57 cv
359.109 237.508 359.109 237.469 359.109 237.445 cv
359.078 237.258 li
358.992 237.176 358.953 237.082 358.953 236.977 cv
358.953 236.875 358.992 236.766 359.078 236.648 cv
359.078 236.586 359.066 236.406 359.047 236.102 cv
359.109 236.055 li
359.047 235.82 li
359.078 235.602 li
359.047 235.477 li
359.109 235.07 li
359 234.883 li
359.063 234.68 li
359 234.445 li
359.008 234.383 359.016 234.289 359.016 234.164 cv
359.016 233.988 358.988 233.867 358.938 233.805 cv
359.016 233.695 li
358.938 233.367 li
358.781 233.133 li
358.875 232.852 li
358.797 232.742 li
358.719 232.305 li
358.719 232.164 li
358.664 232.094 358.641 232.004 358.641 231.898 cv
358.641 231.66 358.898 231.457 359.422 231.289 cv
359.875 231.367 li
359.969 231.711 li
360.141 231.945 li
360.094 232.43 li
360.125 232.672 360.164 232.938 360.219 233.227 cv
360.266 233.523 li
360.285 233.547 360.301 233.609 360.313 233.711 cv
360.313 233.785 360.281 233.863 360.219 233.945 cv
360.266 234.305 li
360.234 234.711 li
360.172 234.883 li
360.219 234.961 li
360.25 235.133 li
360.32 235.051 360.363 234.961 360.375 234.867 cv
360.453 234.602 li
360.484 234.531 360.535 234.473 360.609 234.43 cv
360.688 234.164 li
360.938 234.023 li
360.969 233.805 li
361.172 233.586 li
361.313 233.32 li
361.469 233.156 361.617 233.047 361.766 232.992 cv
361.797 232.945 li
361.969 232.695 li
362.141 232.648 li
362.203 232.602 li
362.266 232.492 li
362.469 232.383 li
362.578 232.258 li
362.688 232.273 li
362.828 232.195 li
362.906 232.102 li
363.109 231.992 li
363.422 231.789 li
363.859 231.648 li
364.023 231.617 364.113 231.602 364.125 231.602 cv
364.125 231.625 364.125 231.633 364.125 231.633 cv
364.113 231.633 364.109 231.641 364.109 231.648 cv
364.125 231.648 li
364.176 231.648 364.25 231.625 364.344 231.57 cv
364.406 231.531 364.488 231.508 364.594 231.508 cv
364.645 231.508 364.727 231.52 364.844 231.539 cv
365.156 231.551 365.328 231.691 365.359 231.961 cv
365.359 231.961 li
cp
f
369.461 232.008 mo
369.461 231.969 369.438 231.895 369.398 231.789 cv
369.305 231.773 li
369.273 231.789 li
369.262 231.789 369.234 231.789 369.195 231.789 cv
369.172 231.801 369.152 231.805 369.133 231.805 cv
369.121 231.805 369.102 231.801 369.07 231.789 cv
369.047 231.789 369.031 231.789 369.023 231.789 cv
368.836 231.914 li
368.68 231.93 li
368.586 231.961 li
368.289 232.367 li
368.086 232.508 li
367.805 233.008 li
367.633 233.117 li
367.602 233.328 367.516 233.504 367.383 233.648 cv
367.305 233.773 li
367.438 233.691 367.59 233.648 367.758 233.648 cv
367.883 233.586 li
367.945 233.43 li
368.195 233.445 li
368.336 233.227 li
368.445 233.227 li
368.648 233.305 li
368.727 233.023 li
368.867 233.023 li
368.867 232.836 li
369.086 232.773 li
369.148 232.727 li
369.18 232.555 li
369.414 232.227 li
369.445 232.164 369.461 232.094 369.461 232.008 cv
369.461 232.008 li
cp
371.242 237.195 mo
371.242 237.332 371.133 237.508 370.914 237.727 cv
370.852 237.926 370.762 238.082 370.648 238.195 cv
370.539 238.211 li
370.336 238.555 li
370.008 238.617 li
369.664 238.82 li
369.492 239.148 li
369.289 239.117 li
369.152 239.18 369.043 239.215 368.961 239.227 cv
368.867 239.383 li
368.824 239.371 368.766 239.367 368.695 239.367 cv
368.539 239.367 368.387 239.477 368.242 239.695 cv
367.992 239.477 li
367.949 239.484 367.875 239.492 367.773 239.492 cv
367.617 239.492 367.484 239.465 367.383 239.414 cv
367.07 239.414 li
366.93 239.336 li
366.469 239.262 366.184 239.086 366.07 238.805 cv
366.07 238.758 li
365.852 238.648 li
365.742 238.336 li
365.523 238.195 li
365.523 237.93 li
365.32 237.133 li
365.352 236.492 li
365.414 236.195 li
365.414 235.82 li
365.508 235.539 li
365.492 235.398 li
365.617 235.195 li
365.586 235.227 li
365.586 235.125 365.617 235.008 365.68 234.883 cv
365.68 234.789 li
365.617 234.367 li
365.617 234.16 365.703 233.977 365.883 233.82 cv
365.902 233.801 365.914 233.766 365.914 233.711 cv
365.914 233.672 365.891 233.578 365.852 233.43 cv
365.809 233.273 365.789 233.164 365.789 233.102 cv
365.789 232.957 365.82 232.805 365.883 232.648 cv
365.984 232.797 366.125 232.867 366.305 232.867 cv
366.352 232.867 li
366.383 232.816 366.438 232.766 366.523 232.711 cv
366.617 232.41 366.746 232.156 366.914 231.945 cv
366.992 231.883 li
366.992 231.832 367.027 231.691 367.102 231.461 cv
367.242 231.461 li
367.273 231.367 li
367.414 231.336 li
367.477 231.242 367.516 231.188 367.539 231.164 cv
367.559 231.145 367.688 231.07 367.93 230.945 cv
367.969 230.863 368.039 230.785 368.133 230.711 cv
368.184 230.691 368.246 230.664 368.32 230.633 cv
368.398 230.523 li
368.719 230.422 368.922 230.367 369.008 230.367 cv
369.102 230.367 369.188 230.395 369.273 230.445 cv
369.367 230.414 li
369.492 230.492 li
369.637 230.598 369.777 230.688 369.914 230.758 cv
370.227 230.992 li
370.227 231.07 li
370.508 231.289 370.648 231.598 370.648 231.992 cv
370.586 232.164 li
370.648 232.758 li
370.477 232.867 li
370.305 233.336 li
369.961 233.711 li
369.945 234.008 li
369.559 234.281 369.203 234.5 368.883 234.664 cv
368.766 234.832 368.594 234.914 368.367 234.914 cv
368.32 234.914 li
367.977 235.133 li
367.695 235.133 li
367.258 235.32 li
366.93 235.148 li
366.898 235.148 li
366.875 235.254 366.852 235.398 366.82 235.586 cv
366.68 235.695 li
366.664 235.914 li
366.555 236.211 li
366.594 236.504 366.617 236.691 366.617 236.773 cv
366.539 236.82 li
366.539 236.977 366.531 237.094 366.523 237.164 cv
366.523 237.188 366.516 237.207 366.508 237.227 cv
366.508 237.25 366.508 237.266 366.508 237.273 cv
366.508 237.379 366.555 237.457 366.648 237.508 cv
366.68 237.656 366.734 237.75 366.82 237.789 cv
366.945 237.883 li
367.352 237.992 li
367.352 238.055 li
367.492 238.086 li
368.102 238.117 li
368.461 238.07 li
368.648 237.945 li
368.758 237.914 li
368.93 237.633 li
369.023 237.617 li
369.477 237.477 li
369.516 237.395 369.594 237.32 369.711 237.258 cv
369.758 237.164 li
369.996 237.125 370.137 237 370.18 236.789 cv
370.344 236.625 370.559 236.539 370.82 236.539 cv
370.898 236.539 li
371.125 236.801 371.242 237.02 371.242 237.195 cv
371.242 237.195 li
cp
f
377.809 232.305 mo
377.73 232.18 li
377.59 232.148 li
377.027 231.695 li
376.668 231.648 li
376.387 231.648 li
376.34 231.602 li
376.199 231.664 li
376.043 231.57 li
375.574 231.57 li
375.621 231.648 li
375.215 231.789 li
375.137 231.883 li
375.09 231.898 li
374.871 232.078 374.719 232.227 374.637 232.352 cv
374.512 232.773 li
374.434 232.945 li
374.621 233.195 li
374.309 233.43 li
374.355 233.492 li
374.219 233.723 374.152 233.945 374.152 234.164 cv
374.012 234.352 li
374.012 234.664 li
373.855 234.836 li
373.824 234.992 li
373.777 235.023 li
373.777 235.273 li
373.715 235.367 li
373.715 235.516 373.703 235.629 373.684 235.711 cv
373.715 235.805 li
373.559 236.148 li
373.621 236.258 li
373.496 236.43 li
373.621 236.773 li
373.434 237.023 li
373.465 237.367 li
373.465 237.43 li
373.543 237.461 li
373.621 237.445 li
373.684 237.383 373.746 237.328 373.809 237.273 cv
373.777 237.133 li
374.027 237.102 li
374.074 236.977 li
375.137 236.102 li
375.246 236.07 li
375.371 235.773 li
375.441 235.742 375.547 235.691 375.684 235.617 cv
375.793 235.336 li
375.934 235.336 li
375.871 235.023 li
376.137 234.992 li
376.156 234.941 376.191 234.883 376.246 234.82 cv
376.297 234.75 376.355 234.68 376.418 234.617 cv
377.34 233.383 li
377.48 233.117 li
377.465 233.055 li
377.59 232.852 li
377.621 232.648 li
377.793 232.508 li
377.809 232.305 li
cp
379.512 231.367 mo
379.34 231.602 li
379.48 232.039 li
379.246 232.305 li
379.152 232.695 li
379.105 232.773 li
379.137 232.867 li
379.137 233.035 379.094 233.16 379.012 233.242 cv
378.98 233.305 li
378.98 233.367 li
379.012 233.453 379.027 233.531 379.027 233.602 cv
379.027 233.664 379.02 233.707 379.012 233.727 cv
379.027 233.805 li
378.949 234.008 li
379.012 234.211 li
378.871 234.367 li
378.918 234.617 li
379.027 234.742 li
378.871 234.883 li
378.871 235.18 li
378.746 235.461 li
378.824 235.742 li
378.715 235.898 li
378.902 236.023 li
378.652 236.43 li
378.637 236.492 li
378.809 236.523 li
378.684 236.93 li
378.684 237.008 li
378.684 237.094 378.676 237.16 378.668 237.211 cv
378.684 237.258 li
378.98 237.289 li
379.215 237.648 li
379.09 237.93 li
379.277 237.914 li
379.348 238.051 379.391 238.176 379.402 238.289 cv
379.137 238.555 li
379.051 238.641 378.934 238.719 378.777 238.805 cv
378.465 238.977 li
378.387 238.883 li
378.199 238.992 li
377.637 238.336 li
377.637 238.039 li
377.563 237.801 377.527 237.578 377.527 237.367 cv
377.527 237.258 li
377.434 236.195 li
377.574 235.445 li
377.465 235.008 li
377.152 235.508 li
376.996 235.977 li
376.855 236.055 li
376.605 236.445 li
376.152 236.867 li
376.027 237.086 li
375.621 237.43 li
375.543 237.648 li
374.965 238.023 li
374.355 238.695 li
374.012 238.773 li
373.777 238.945 li
373.473 238.934 373.246 238.824 373.09 238.617 cv
372.547 238.348 372.266 237.969 372.246 237.477 cv
372.34 237.43 li
372.309 237.32 li
372.293 237.102 li
372.184 236.867 li
372.293 236.617 li
372.34 236.227 li
372.465 235.633 li
372.465 235.625 372.465 235.602 372.465 235.57 cv
372.441 235.551 372.434 235.523 372.434 235.492 cv
372.434 235.453 372.449 235.395 372.48 235.32 cv
372.469 235.289 372.465 235.242 372.465 235.18 cv
372.465 235.086 372.5 234.945 372.574 234.758 cv
372.699 234.711 li
372.625 234.648 372.59 234.582 372.59 234.508 cv
372.59 234.457 372.594 234.422 372.605 234.398 cv
372.594 234.367 372.59 234.328 372.59 234.273 cv
372.59 234.129 372.656 234.02 372.793 233.945 cv
372.832 233.832 372.902 233.711 372.996 233.586 cv
372.902 233.445 li
373.121 233.18 li
373.121 233.102 li
373.121 232.875 373.199 232.664 373.355 232.477 cv
373.34 232.148 li
373.418 232.07 li
373.418 232.063 373.418 232.047 373.418 232.023 cv
373.406 232.004 373.402 231.984 373.402 231.961 cv
373.402 231.898 373.422 231.844 373.465 231.789 cv
373.465 231.68 li
373.516 231.566 373.641 231.391 373.84 231.148 cv
374.047 230.898 374.199 230.688 374.293 230.508 cv
374.387 230.602 li
374.59 230.508 li
374.668 230.477 li
375.262 230.211 li
376.652 230.273 li
376.652 230.398 li
377.09 230.492 li
377.359 230.492 377.535 230.582 377.621 230.758 cv
377.621 230.727 377.625 230.688 377.637 230.633 cv
377.637 230.602 377.637 230.582 377.637 230.57 cv
378.027 230.898 li
378.355 230.977 li
379.012 230.82 li
379.246 231.273 li
379.512 231.367 li
cp
f
388.297 235.852 mo
387.953 236.18 li
387.938 236.289 li
387.906 236.508 387.801 236.68 387.625 236.805 cv
387.344 237.348 386.941 237.742 386.422 237.992 cv
386.156 238.211 li
385.922 238.258 li
385.641 238.461 li
385.438 238.477 li
384.984 238.773 li
384.703 238.742 li
384.375 238.883 li
384.125 238.805 li
384 238.914 li
383.656 238.867 li
383.313 238.914 li
383.188 238.805 li
382.828 238.742 li
382.297 238.336 li
382.016 237.977 li
381.836 237.75 381.75 237.555 381.75 237.398 cv
381.75 237.352 li
381.563 237.086 li
381.563 236.852 li
381.531 236.707 381.516 236.57 381.516 236.445 cv
381.516 236.32 li
381.422 236.023 li
381.516 235.805 li
381.438 235.664 li
381.656 235.32 li
381.609 235.023 li
381.75 234.555 li
381.813 234.445 li
381.891 234.023 li
381.859 233.945 li
382.063 233.711 li
382.109 233.539 li
382.25 233.117 li
382.484 232.617 li
382.813 232.32 li
382.875 232.164 li
382.984 231.961 li
383.031 231.789 li
383.313 231.445 li
383.383 231.426 383.469 231.398 383.563 231.367 cv
383.613 231.148 383.914 231.02 384.469 230.977 cv
384.938 231.07 385.234 231.195 385.359 231.352 cv
385.492 231.383 385.598 231.441 385.672 231.523 cv
386.047 231.539 li
386.297 231.867 li
386.359 231.984 386.398 232.102 386.422 232.227 cv
386.563 232.367 li
386.516 232.633 li
386.523 232.719 386.531 232.848 386.531 233.023 cv
386.625 233.102 li
386.625 233.367 li
386.703 233.93 li
386.441 234.18 386.148 234.328 385.828 234.367 cv
385.66 234.055 385.453 233.82 385.203 233.664 cv
385.172 233.07 li
385.063 232.867 li
385.063 232.727 li
384.875 232.508 li
384.781 232.43 li
384.625 232.492 li
384.391 232.492 li
384.234 232.523 384.082 232.641 383.938 232.836 cv
383.789 233.023 383.648 233.227 383.516 233.445 cv
383.484 233.617 li
383.391 233.711 li
383.391 234.039 li
383.156 234.289 li
382.859 235.086 li
382.875 235.305 li
382.734 235.617 li
382.797 236.023 li
382.688 236.07 li
382.641 236.57 li
382.672 236.664 li
382.875 236.883 li
382.969 237.258 li
383.219 237.336 li
383.234 237.477 li
383.547 237.523 li
383.781 237.586 li
383.863 237.535 383.969 237.508 384.094 237.508 cv
384.219 237.508 li
384.352 237.457 384.484 237.43 384.609 237.43 cv
384.691 237.391 384.801 237.352 384.938 237.32 cv
385.07 237.125 385.273 237.023 385.547 237.023 cv
385.656 237.023 li
385.707 237.023 385.75 236.992 385.781 236.93 cv
385.906 236.734 386.113 236.602 386.406 236.539 cv
386.738 236.238 386.93 236 386.984 235.82 cv
387.148 235.727 387.258 235.578 387.313 235.367 cv
387.422 235.305 li
387.469 234.883 li
388.02 234.969 388.297 235.242 388.297 235.711 cv
388.297 235.852 li
cp
f
394.945 232.195 mo
394.945 232.313 394.836 232.414 394.617 232.508 cv
394.563 232.57 394.477 232.625 394.352 232.664 cv
394.184 232.738 394.063 232.801 393.992 232.852 cv
393.602 232.727 li
393.414 232.875 393.168 232.945 392.867 232.945 cv
392.648 232.883 li
392.492 233.023 li
392.008 233.023 li
391.695 233.227 li
391.57 233.176 391.445 233.148 391.32 233.148 cv
391.289 233.18 391.203 233.207 391.07 233.227 cv
391.008 233.227 390.938 233.211 390.867 233.18 cv
390.82 233.852 li
390.836 234.367 li
390.789 234.992 li
390.82 235.68 li
390.867 236.008 li
390.867 236.258 li
391.117 236.789 li
391.086 236.832 391.07 236.875 391.07 236.914 cv
391.07 237 391.199 237.066 391.461 237.117 cv
391.508 237.336 li
391.633 237.383 li
391.852 237.523 li
391.992 237.633 li
392.105 237.613 392.188 237.602 392.242 237.602 cv
392.344 237.602 392.453 237.617 392.57 237.648 cv
392.609 237.629 392.711 237.547 392.867 237.398 cv
392.98 237.305 393.086 237.258 393.18 237.258 cv
393.188 237.258 393.203 237.258 393.227 237.258 cv
393.258 237.27 393.277 237.273 393.289 237.273 cv
393.391 237.047 393.586 236.895 393.867 236.82 cv
394.117 236.82 394.324 236.898 394.492 237.055 cv
394.492 237.195 li
394.492 237.602 394.344 237.859 394.055 237.961 cv
393.949 238.211 393.719 238.375 393.367 238.445 cv
393.164 238.648 li
392.93 238.648 li
392.508 238.758 li
392.414 238.777 392.277 238.789 392.102 238.789 cv
391.996 238.789 391.891 238.762 391.789 238.711 cv
391.555 238.711 li
390.93 238.383 li
390.758 238.32 li
390.383 237.82 li
390.164 237.586 li
389.773 236.68 li
389.633 235.836 li
389.664 235.617 li
389.523 235.43 li
389.617 235.18 li
389.523 234.773 li
389.648 234.648 li
389.68 234.414 li
389.633 234.195 li
389.664 233.883 li
389.602 233.586 li
389.68 233.492 li
389.68 233.211 li
389.555 233.148 li
389.211 233.227 li
388.898 232.992 li
388.836 232.992 li
388.484 232.992 388.305 232.801 388.305 232.414 cv
388.305 232.367 li
388.086 232.023 li
388.43 231.695 li
388.867 231.773 li
389.102 231.727 li
389.445 231.82 li
389.82 231.82 li
389.82 231.461 li
389.602 230.961 li
389.82 230.836 li
389.742 230.57 li
389.758 230.008 li
389.617 229.773 li
389.531 229.641 389.492 229.52 389.492 229.414 cv
389.492 229.281 389.516 229.172 389.57 229.086 cv
389.633 228.836 li
389.773 228.695 li
390.094 228.633 390.313 228.602 390.43 228.602 cv
390.805 228.602 391.012 228.773 391.055 229.117 cv
390.992 229.211 li
391.063 229.328 391.102 229.43 391.102 229.523 cv
391.102 229.535 391.094 229.566 391.086 229.617 cv
391.055 229.711 li
391.039 229.852 li
391.102 230.07 li
391.086 230.164 li
391.117 230.414 li
390.961 230.633 li
391.055 230.992 li
390.977 231.43 li
391.117 231.586 li
390.977 231.914 li
391.539 231.836 li
392.523 231.93 li
393.32 231.805 li
393.586 231.82 li
393.68 231.805 li
394.383 231.805 li
394.758 231.805 394.945 231.938 394.945 232.195 cv
394.945 232.195 li
cp
f
400.629 236.039 mo
400.629 236.313 400.582 236.484 400.488 236.555 cv
400.395 236.633 li
400.301 236.883 li
400.02 236.977 li
399.934 237.164 399.809 237.316 399.645 237.43 cv
399.473 237.477 li
399.238 237.727 li
399.035 237.789 li
398.949 238 398.773 238.109 398.504 238.117 cv
398.48 238.16 398.43 238.234 398.348 238.336 cv
398.168 238.461 397.98 238.535 397.785 238.555 cv
397.691 238.57 li
397.566 238.742 li
397.207 238.742 li
396.926 238.945 li
396.191 238.414 li
395.848 237.711 li
395.832 236.82 li
395.754 236.617 li
395.973 235.023 li
396.035 234.961 li
396.004 234.773 395.988 234.598 395.988 234.43 cv
395.988 234.328 396.023 234.109 396.098 233.773 cv
396.191 233.352 li
396.16 233.281 396.105 233.203 396.035 233.117 cv
396.145 232.773 li
396.191 232.367 li
396.223 232.305 li
396.168 232.203 396.137 232.082 396.129 231.945 cv
396.137 231.926 396.148 231.895 396.16 231.852 cv
396.18 231.813 396.191 231.781 396.191 231.758 cv
396.148 231.645 396.129 231.539 396.129 231.445 cv
396.129 231.156 396.289 231.023 396.613 231.055 cv
396.832 231.07 li
396.977 231 397.066 230.961 397.098 230.961 cv
397.336 230.961 397.496 231.094 397.582 231.352 cv
397.582 231.43 li
397.633 231.578 397.66 231.711 397.66 231.836 cv
397.66 231.953 397.648 232.031 397.629 232.07 cv
397.504 232.977 li
397.629 233.227 li
397.629 233.445 397.555 233.641 397.41 233.805 cv
397.488 234.023 li
397.254 234.711 li
397.223 235.004 397.191 235.227 397.16 235.383 cv
397.16 235.836 li
397.051 236.086 li
397.066 236.273 li
397.035 236.68 li
397.066 237.008 li
397.332 237.227 li
397.551 237.195 li
397.582 237.133 li
397.738 237.148 li
397.973 237.086 li
398.16 236.883 li
398.238 236.773 li
398.363 236.758 li
398.395 236.664 li
398.457 236.602 li
398.566 236.664 li
398.738 236.492 li
398.848 236.508 li
398.879 236.383 li
398.926 236.383 li
398.973 236.227 li
399.145 236.164 li
399.473 236.008 li
399.754 235.813 400.023 235.711 400.285 235.711 cv
400.363 235.711 li
400.496 235.797 400.586 235.906 400.629 236.039 cv
400.629 236.039 li
cp
398.801 226.492 mo
398.801 226.641 398.699 226.773 398.504 226.898 cv
398.504 226.93 li
398.273 227.203 398.074 227.359 397.91 227.398 cv
397.645 227.727 li
397.457 227.961 li
397.051 228.055 li
396.863 228.32 li
396.582 228.461 li
396.113 228.867 li
395.832 228.602 li
395.879 228.148 li
396.082 227.836 li
396.09 227.66 396.184 227.516 396.363 227.398 cv
396.363 227.32 li
396.473 227.258 li
396.488 226.977 li
396.785 226.914 li
396.785 226.742 li
396.988 226.711 li
397.039 226.473 397.145 226.301 397.301 226.195 cv
397.363 226.148 li
397.457 226.039 li
397.613 225.617 li
398.402 225.805 398.801 226.098 398.801 226.492 cv
398.801 226.492 li
cp
f
410.059 230.305 mo
409.871 230.617 li
409.934 230.961 li
409.668 231.117 li
409.59 231.508 li
409.434 231.633 li
409.371 232.023 li
409.324 232.023 li
409.281 232.191 409.176 232.32 409.012 232.414 cv
408.855 232.992 li
408.684 233.242 li
408.703 233.316 408.715 233.395 408.715 233.477 cv
408.418 233.727 li
408.012 234.68 li
407.668 235.242 li
407.668 235.43 li
407.668 235.598 407.566 235.738 407.371 235.852 cv
407.34 236.18 li
407.215 236.258 li
406.996 236.539 li
406.949 236.742 li
406.824 236.82 li
406.824 236.863 406.832 236.941 406.855 237.055 cv
406.652 237.227 li
406.34 237.43 li
406.23 237.602 li
405.871 237.977 li
405.496 238.625 405.105 238.945 404.699 238.945 cv
404.375 238.945 404.078 238.777 403.809 238.445 cv
403.871 238.57 li
403.23 237.648 li
403.199 237.445 li
403.09 237.367 li
403.074 236.93 li
402.871 236.742 li
402.871 236.289 li
402.402 235.242 li
402.449 235.07 li
402.293 234.805 li
402.262 234.617 li
402.168 234.492 li
402.043 234.164 li
401.73 233.914 li
401.574 233.32 li
401.324 233.102 li
401.184 232.867 li
400.879 232.773 400.73 232.531 400.73 232.133 cv
400.73 231.801 400.988 231.531 401.512 231.32 cv
402.168 231.77 402.559 232.211 402.684 232.648 cv
402.73 233.07 li
402.781 233.039 402.863 233.016 402.98 232.992 cv
402.98 233.148 li
403.277 233.367 li
403.168 233.664 li
403.199 233.883 li
403.355 234.305 li
403.449 234.398 li
403.465 234.555 li
403.621 234.633 li
403.621 234.945 li
403.809 235.633 li
403.855 235.914 li
404.137 236.492 li
404.371 237.195 li
404.543 237.367 li
404.59 237.367 li
404.629 237.367 404.672 237.32 404.715 237.227 cv
404.855 237.164 li
404.809 237.023 li
404.84 236.953 404.879 236.914 404.934 236.914 cv
404.973 236.914 405.02 236.938 405.074 236.977 cv
405.156 236.738 405.215 236.617 405.246 236.617 cv
405.266 236.617 405.277 236.633 405.277 236.664 cv
405.316 236.52 405.426 236.398 405.605 236.305 cv
405.84 235.961 li
405.996 235.602 li
406.168 235.461 li
406.277 235.227 li
406.355 235.18 li
406.309 234.945 li
406.512 234.852 li
406.543 234.758 li
406.543 234.707 406.574 234.641 406.637 234.555 cv
406.762 234.242 li
406.855 234.352 li
406.934 234.305 li
406.934 234.258 li
406.934 234.102 406.996 233.969 407.121 233.852 cv
407.121 233.82 li
407.246 233.586 li
407.34 233.195 li
407.465 233.148 li
407.699 232.602 li
407.855 232.383 li
407.895 232.207 407.984 232.066 408.121 231.961 cv
408.277 231.461 li
408.402 231.305 li
408.402 230.93 li
408.496 230.93 li
408.641 230.828 408.762 230.676 408.855 230.477 cv
408.949 230.281 409.02 230.164 409.074 230.133 cv
409.152 230.07 li
409.668 229.773 li
410.059 230.305 li
cp
f
414.406 232.008 mo
414.406 231.969 414.383 231.895 414.344 231.789 cv
414.25 231.773 li
414.219 231.789 li
414.207 231.789 414.18 231.789 414.141 231.789 cv
414.117 231.801 414.098 231.805 414.078 231.805 cv
414.066 231.805 414.047 231.801 414.016 231.789 cv
413.992 231.789 413.977 231.789 413.969 231.789 cv
413.781 231.914 li
413.625 231.93 li
413.531 231.961 li
413.234 232.367 li
413.031 232.508 li
412.75 233.008 li
412.578 233.117 li
412.547 233.328 412.461 233.504 412.328 233.648 cv
412.25 233.773 li
412.383 233.691 412.535 233.648 412.703 233.648 cv
412.828 233.586 li
412.891 233.43 li
413.141 233.445 li
413.281 233.227 li
413.391 233.227 li
413.594 233.305 li
413.672 233.023 li
413.813 233.023 li
413.813 232.836 li
414.031 232.773 li
414.094 232.727 li
414.125 232.555 li
414.359 232.227 li
414.391 232.164 414.406 232.094 414.406 232.008 cv
414.406 232.008 li
cp
416.188 237.195 mo
416.188 237.332 416.078 237.508 415.859 237.727 cv
415.797 237.926 415.707 238.082 415.594 238.195 cv
415.484 238.211 li
415.281 238.555 li
414.953 238.617 li
414.609 238.82 li
414.438 239.148 li
414.234 239.117 li
414.098 239.18 413.988 239.215 413.906 239.227 cv
413.813 239.383 li
413.77 239.371 413.711 239.367 413.641 239.367 cv
413.484 239.367 413.332 239.477 413.188 239.695 cv
412.938 239.477 li
412.895 239.484 412.82 239.492 412.719 239.492 cv
412.563 239.492 412.43 239.465 412.328 239.414 cv
412.016 239.414 li
411.875 239.336 li
411.414 239.262 411.129 239.086 411.016 238.805 cv
411.016 238.758 li
410.797 238.648 li
410.688 238.336 li
410.469 238.195 li
410.469 237.93 li
410.266 237.133 li
410.297 236.492 li
410.359 236.195 li
410.359 235.82 li
410.453 235.539 li
410.438 235.398 li
410.563 235.195 li
410.531 235.227 li
410.531 235.125 410.563 235.008 410.625 234.883 cv
410.625 234.789 li
410.563 234.367 li
410.563 234.16 410.648 233.977 410.828 233.82 cv
410.848 233.801 410.859 233.766 410.859 233.711 cv
410.859 233.672 410.836 233.578 410.797 233.43 cv
410.754 233.273 410.734 233.164 410.734 233.102 cv
410.734 232.957 410.766 232.805 410.828 232.648 cv
410.93 232.797 411.07 232.867 411.25 232.867 cv
411.297 232.867 li
411.328 232.816 411.383 232.766 411.469 232.711 cv
411.563 232.41 411.691 232.156 411.859 231.945 cv
411.938 231.883 li
411.938 231.832 411.973 231.691 412.047 231.461 cv
412.188 231.461 li
412.219 231.367 li
412.359 231.336 li
412.422 231.242 412.461 231.188 412.484 231.164 cv
412.504 231.145 412.633 231.07 412.875 230.945 cv
412.914 230.863 412.984 230.785 413.078 230.711 cv
413.129 230.691 413.191 230.664 413.266 230.633 cv
413.344 230.523 li
413.664 230.422 413.867 230.367 413.953 230.367 cv
414.047 230.367 414.133 230.395 414.219 230.445 cv
414.313 230.414 li
414.438 230.492 li
414.582 230.598 414.723 230.688 414.859 230.758 cv
415.172 230.992 li
415.172 231.07 li
415.453 231.289 415.594 231.598 415.594 231.992 cv
415.531 232.164 li
415.594 232.758 li
415.422 232.867 li
415.25 233.336 li
414.906 233.711 li
414.891 234.008 li
414.504 234.281 414.148 234.5 413.828 234.664 cv
413.711 234.832 413.539 234.914 413.313 234.914 cv
413.266 234.914 li
412.922 235.133 li
412.641 235.133 li
412.203 235.32 li
411.875 235.148 li
411.844 235.148 li
411.82 235.254 411.797 235.398 411.766 235.586 cv
411.625 235.695 li
411.609 235.914 li
411.5 236.211 li
411.539 236.504 411.563 236.691 411.563 236.773 cv
411.484 236.82 li
411.484 236.977 411.477 237.094 411.469 237.164 cv
411.469 237.188 411.461 237.207 411.453 237.227 cv
411.453 237.25 411.453 237.266 411.453 237.273 cv
411.453 237.379 411.5 237.457 411.594 237.508 cv
411.625 237.656 411.68 237.75 411.766 237.789 cv
411.891 237.883 li
412.297 237.992 li
412.297 238.055 li
412.438 238.086 li
413.047 238.117 li
413.406 238.07 li
413.594 237.945 li
413.703 237.914 li
413.875 237.633 li
413.969 237.617 li
414.422 237.477 li
414.461 237.395 414.539 237.32 414.656 237.258 cv
414.703 237.164 li
414.941 237.125 415.082 237 415.125 236.789 cv
415.289 236.625 415.504 236.539 415.766 236.539 cv
415.844 236.539 li
416.07 236.801 416.188 237.02 416.188 237.195 cv
416.188 237.195 li
cp
f
433.379 235.742 mo
433.379 235.848 433.301 235.977 433.145 236.133 cv
432.941 236.43 li
432.863 236.789 li
432.707 236.852 li
432.676 236.961 li
432.477 237.016 432.336 237.16 432.254 237.398 cv
432.129 237.566 431.988 237.688 431.832 237.758 cv
431.77 237.82 431.711 237.863 431.66 237.883 cv
431.566 238.055 li
431.41 238.086 li
430.941 238.336 li
430.332 238.414 li
430.176 238.383 li
429.895 238.43 li
429.785 238.305 li
429.617 238.223 429.496 238.141 429.426 238.055 cv
429.289 238.016 429.184 237.898 429.113 237.711 cv
428.902 237.473 428.801 237.281 428.801 237.133 cv
428.801 237.086 li
428.676 236.867 li
428.645 236.82 li
428.535 236.508 li
428.363 236.164 li
428.41 235.742 li
428.223 235.508 li
427.957 233.961 li
427.914 233.766 427.895 233.594 427.895 233.445 cv
427.863 233.352 li
427.77 233.227 li
427.613 233.445 li
426.973 234.133 li
426.738 234.508 li
426.613 234.758 li
426.41 235.039 li
426.27 235.195 li
426.285 235.273 li
426.035 235.836 li
425.879 236.023 li
425.707 236.055 li
425.551 236.211 li
425.551 236.453 425.434 236.609 425.207 236.68 cv
425.16 236.727 li
425.055 236.988 424.934 237.148 424.801 237.211 cv
424.645 237.461 li
424.383 237.703 424.211 237.852 424.129 237.914 cv
424.086 238.031 424.02 238.129 423.926 238.211 cv
423.902 238.254 423.863 238.301 423.801 238.352 cv
423.758 238.563 423.59 238.703 423.301 238.789 cv
423.098 238.852 li
422.855 238.828 422.66 238.688 422.504 238.43 cv
422.238 237.977 li
422.316 237.555 li
422.285 237.32 li
422.316 237.273 li
422.332 237.039 li
422.145 236.617 li
422.285 236.398 li
422.207 236.164 li
422.332 235.914 li
422.379 235.492 li
422.301 235.43 li
422.441 235.18 li
422.395 235.039 li
422.379 234.758 li
422.441 234.211 li
422.418 234.098 422.41 234.02 422.41 233.977 cv
422.41 233.957 422.414 233.938 422.426 233.914 cv
422.426 233.875 422.426 233.848 422.426 233.836 cv
422.332 233.695 li
422.395 233.117 li
422.379 232.93 li
422.426 232.633 li
422.363 232.148 li
422.676 231.602 li
423.051 231.664 423.309 231.75 423.457 231.852 cv
423.602 231.957 423.676 232.141 423.676 232.398 cv
423.676 232.555 li
423.801 232.773 li
423.738 233.148 li
423.816 233.883 li
423.691 234.211 li
423.738 234.602 li
423.738 234.898 li
423.598 235.102 li
423.707 235.43 li
423.598 235.617 li
423.582 235.82 li
423.691 236.023 li
423.551 236.398 li
423.488 236.555 li
423.488 236.727 li
423.582 236.898 li
423.895 236.602 li
423.895 236.414 423.949 236.289 424.066 236.227 cv
424.074 236.113 424.121 236.023 424.207 235.961 cv
424.16 235.914 li
424.395 235.695 li
424.441 235.617 li
424.441 235.461 li
424.738 235.242 li
424.801 235.07 li
424.973 234.961 li
425.676 234.164 li
425.613 234.238 425.414 234.461 425.082 234.836 cv
425.082 234.867 li
425.113 234.742 li
425.348 234.477 li
425.504 234.164 li
425.504 233.977 li
425.785 233.898 li
425.816 233.664 li
425.879 233.586 li
425.91 233.492 li
425.91 233.367 li
426.16 233.117 li
426.16 233.098 426.16 233.066 426.16 233.023 cv
426.148 232.992 426.145 232.973 426.145 232.961 cv
426.145 232.742 426.262 232.625 426.504 232.602 cv
426.605 232.383 426.77 232.258 426.988 232.227 cv
427.098 232.055 li
427.129 232.023 li
427.23 231.867 427.395 231.758 427.613 231.695 cv
427.77 231.508 li
428.207 231.508 li
428.426 231.758 li
428.629 231.867 li
428.645 231.914 li
428.77 231.945 li
428.801 232.32 li
429.113 232.508 li
428.988 232.898 li
429.176 233.336 li
429.176 233.836 li
429.316 234.523 li
429.363 235.18 li
429.52 235.555 li
429.629 236.023 li
429.699 236.098 429.754 236.195 429.785 236.32 cv
430.113 236.414 li
430.113 236.773 li
430.301 236.977 li
430.301 237.023 li
430.363 237.039 li
430.441 237.148 li
430.504 237.055 li
430.48 237.055 430.512 237.066 430.598 237.086 cv
430.73 237.086 430.871 236.969 431.02 236.727 cv
431.238 236.664 li
431.285 236.57 li
431.316 236.477 431.387 236.41 431.504 236.367 cv
431.629 236.383 li
431.707 236.305 li
431.723 236.211 li
431.77 236.148 li
431.895 236.066 431.973 235.941 432.004 235.773 cv
432.207 235.555 li
432.238 235.383 li
432.363 235.102 li
432.707 234.977 li
433.191 235.133 li
433.363 235.664 li
433.363 235.676 433.367 235.688 433.379 235.695 cv
433.379 235.719 433.379 235.734 433.379 235.742 cv
433.379 235.742 li
cp
f
439.406 232.305 mo
439.328 232.18 li
439.188 232.148 li
438.625 231.695 li
438.266 231.648 li
437.984 231.648 li
437.938 231.602 li
437.797 231.664 li
437.641 231.57 li
437.172 231.57 li
437.219 231.648 li
436.813 231.789 li
436.734 231.883 li
436.688 231.898 li
436.469 232.078 436.316 232.227 436.234 232.352 cv
436.109 232.773 li
436.031 232.945 li
436.219 233.195 li
435.906 233.43 li
435.953 233.492 li
435.816 233.723 435.75 233.945 435.75 234.164 cv
435.609 234.352 li
435.609 234.664 li
435.453 234.836 li
435.422 234.992 li
435.375 235.023 li
435.375 235.273 li
435.313 235.367 li
435.313 235.516 435.301 235.629 435.281 235.711 cv
435.313 235.805 li
435.156 236.148 li
435.219 236.258 li
435.094 236.43 li
435.219 236.773 li
435.031 237.023 li
435.063 237.367 li
435.063 237.43 li
435.141 237.461 li
435.219 237.445 li
435.281 237.383 435.344 237.328 435.406 237.273 cv
435.375 237.133 li
435.625 237.102 li
435.672 236.977 li
436.734 236.102 li
436.844 236.07 li
436.969 235.773 li
437.039 235.742 437.145 235.691 437.281 235.617 cv
437.391 235.336 li
437.531 235.336 li
437.469 235.023 li
437.734 234.992 li
437.754 234.941 437.789 234.883 437.844 234.82 cv
437.895 234.75 437.953 234.68 438.016 234.617 cv
438.938 233.383 li
439.078 233.117 li
439.063 233.055 li
439.188 232.852 li
439.219 232.648 li
439.391 232.508 li
439.406 232.305 li
cp
441.109 231.367 mo
440.938 231.602 li
441.078 232.039 li
440.844 232.305 li
440.75 232.695 li
440.703 232.773 li
440.734 232.867 li
440.734 233.035 440.691 233.16 440.609 233.242 cv
440.578 233.305 li
440.578 233.367 li
440.609 233.453 440.625 233.531 440.625 233.602 cv
440.625 233.664 440.617 233.707 440.609 233.727 cv
440.625 233.805 li
440.547 234.008 li
440.609 234.211 li
440.469 234.367 li
440.516 234.617 li
440.625 234.742 li
440.469 234.883 li
440.469 235.18 li
440.344 235.461 li
440.422 235.742 li
440.313 235.898 li
440.5 236.023 li
440.25 236.43 li
440.234 236.492 li
440.406 236.523 li
440.281 236.93 li
440.281 237.008 li
440.281 237.094 440.273 237.16 440.266 237.211 cv
440.281 237.258 li
440.578 237.289 li
440.813 237.648 li
440.688 237.93 li
440.875 237.914 li
440.945 238.051 440.988 238.176 441 238.289 cv
440.734 238.555 li
440.648 238.641 440.531 238.719 440.375 238.805 cv
440.063 238.977 li
439.984 238.883 li
439.797 238.992 li
439.234 238.336 li
439.234 238.039 li
439.16 237.801 439.125 237.578 439.125 237.367 cv
439.125 237.258 li
439.031 236.195 li
439.172 235.445 li
439.063 235.008 li
438.75 235.508 li
438.594 235.977 li
438.453 236.055 li
438.203 236.445 li
437.75 236.867 li
437.625 237.086 li
437.219 237.43 li
437.141 237.648 li
436.563 238.023 li
435.953 238.695 li
435.609 238.773 li
435.375 238.945 li
435.07 238.934 434.844 238.824 434.688 238.617 cv
434.145 238.348 433.863 237.969 433.844 237.477 cv
433.938 237.43 li
433.906 237.32 li
433.891 237.102 li
433.781 236.867 li
433.891 236.617 li
433.938 236.227 li
434.063 235.633 li
434.063 235.625 434.063 235.602 434.063 235.57 cv
434.039 235.551 434.031 235.523 434.031 235.492 cv
434.031 235.453 434.047 235.395 434.078 235.32 cv
434.066 235.289 434.063 235.242 434.063 235.18 cv
434.063 235.086 434.098 234.945 434.172 234.758 cv
434.297 234.711 li
434.223 234.648 434.188 234.582 434.188 234.508 cv
434.188 234.457 434.191 234.422 434.203 234.398 cv
434.191 234.367 434.188 234.328 434.188 234.273 cv
434.188 234.129 434.254 234.02 434.391 233.945 cv
434.43 233.832 434.5 233.711 434.594 233.586 cv
434.5 233.445 li
434.719 233.18 li
434.719 233.102 li
434.719 232.875 434.797 232.664 434.953 232.477 cv
434.938 232.148 li
435.016 232.07 li
435.016 232.063 435.016 232.047 435.016 232.023 cv
435.004 232.004 435 231.984 435 231.961 cv
435 231.898 435.02 231.844 435.063 231.789 cv
435.063 231.68 li
435.113 231.566 435.238 231.391 435.438 231.148 cv
435.645 230.898 435.797 230.688 435.891 230.508 cv
435.984 230.602 li
436.188 230.508 li
436.266 230.477 li
436.859 230.211 li
438.25 230.273 li
438.25 230.398 li
438.688 230.492 li
438.957 230.492 439.133 230.582 439.219 230.758 cv
439.219 230.727 439.223 230.688 439.234 230.633 cv
439.234 230.602 439.234 230.582 439.234 230.57 cv
439.625 230.898 li
439.953 230.977 li
440.609 230.82 li
440.844 231.273 li
441.109 231.367 li
cp
f
451.656 230.305 mo
451.469 230.617 li
451.531 230.961 li
451.266 231.117 li
451.188 231.508 li
451.031 231.633 li
450.969 232.023 li
450.922 232.023 li
450.879 232.191 450.773 232.32 450.609 232.414 cv
450.453 232.992 li
450.281 233.242 li
450.301 233.316 450.313 233.395 450.313 233.477 cv
450.016 233.727 li
449.609 234.68 li
449.266 235.242 li
449.266 235.43 li
449.266 235.598 449.164 235.738 448.969 235.852 cv
448.938 236.18 li
448.813 236.258 li
448.594 236.539 li
448.547 236.742 li
448.422 236.82 li
448.422 236.863 448.43 236.941 448.453 237.055 cv
448.25 237.227 li
447.938 237.43 li
447.828 237.602 li
447.469 237.977 li
447.094 238.625 446.703 238.945 446.297 238.945 cv
445.973 238.945 445.676 238.777 445.406 238.445 cv
445.469 238.57 li
444.828 237.648 li
444.797 237.445 li
444.688 237.367 li
444.672 236.93 li
444.469 236.742 li
444.469 236.289 li
444 235.242 li
444.047 235.07 li
443.891 234.805 li
443.859 234.617 li
443.766 234.492 li
443.641 234.164 li
443.328 233.914 li
443.172 233.32 li
442.922 233.102 li
442.781 232.867 li
442.477 232.773 442.328 232.531 442.328 232.133 cv
442.328 231.801 442.586 231.531 443.109 231.32 cv
443.766 231.77 444.156 232.211 444.281 232.648 cv
444.328 233.07 li
444.379 233.039 444.461 233.016 444.578 232.992 cv
444.578 233.148 li
444.875 233.367 li
444.766 233.664 li
444.797 233.883 li
444.953 234.305 li
445.047 234.398 li
445.063 234.555 li
445.219 234.633 li
445.219 234.945 li
445.406 235.633 li
445.453 235.914 li
445.734 236.492 li
445.969 237.195 li
446.141 237.367 li
446.188 237.367 li
446.227 237.367 446.27 237.32 446.313 237.227 cv
446.453 237.164 li
446.406 237.023 li
446.438 236.953 446.477 236.914 446.531 236.914 cv
446.57 236.914 446.617 236.938 446.672 236.977 cv
446.754 236.738 446.813 236.617 446.844 236.617 cv
446.863 236.617 446.875 236.633 446.875 236.664 cv
446.914 236.52 447.023 236.398 447.203 236.305 cv
447.438 235.961 li
447.594 235.602 li
447.766 235.461 li
447.875 235.227 li
447.953 235.18 li
447.906 234.945 li
448.109 234.852 li
448.141 234.758 li
448.141 234.707 448.172 234.641 448.234 234.555 cv
448.359 234.242 li
448.453 234.352 li
448.531 234.305 li
448.531 234.258 li
448.531 234.102 448.594 233.969 448.719 233.852 cv
448.719 233.82 li
448.844 233.586 li
448.938 233.195 li
449.063 233.148 li
449.297 232.602 li
449.453 232.383 li
449.492 232.207 449.582 232.066 449.719 231.961 cv
449.875 231.461 li
450 231.305 li
450 230.93 li
450.094 230.93 li
450.238 230.828 450.359 230.676 450.453 230.477 cv
450.547 230.281 450.617 230.164 450.672 230.133 cv
450.75 230.07 li
451.266 229.773 li
451.656 230.305 li
cp
f
457.02 236.039 mo
457.02 236.313 456.973 236.484 456.879 236.555 cv
456.785 236.633 li
456.691 236.883 li
456.41 236.977 li
456.324 237.164 456.199 237.316 456.035 237.43 cv
455.863 237.477 li
455.629 237.727 li
455.426 237.789 li
455.34 238 455.164 238.109 454.895 238.117 cv
454.871 238.16 454.82 238.234 454.738 238.336 cv
454.559 238.461 454.371 238.535 454.176 238.555 cv
454.082 238.57 li
453.957 238.742 li
453.598 238.742 li
453.316 238.945 li
452.582 238.414 li
452.238 237.711 li
452.223 236.82 li
452.145 236.617 li
452.363 235.023 li
452.426 234.961 li
452.395 234.773 452.379 234.598 452.379 234.43 cv
452.379 234.328 452.414 234.109 452.488 233.773 cv
452.582 233.352 li
452.551 233.281 452.496 233.203 452.426 233.117 cv
452.535 232.773 li
452.582 232.367 li
452.613 232.305 li
452.559 232.203 452.527 232.082 452.52 231.945 cv
452.527 231.926 452.539 231.895 452.551 231.852 cv
452.57 231.813 452.582 231.781 452.582 231.758 cv
452.539 231.645 452.52 231.539 452.52 231.445 cv
452.52 231.156 452.68 231.023 453.004 231.055 cv
453.223 231.07 li
453.367 231 453.457 230.961 453.488 230.961 cv
453.727 230.961 453.887 231.094 453.973 231.352 cv
453.973 231.43 li
454.023 231.578 454.051 231.711 454.051 231.836 cv
454.051 231.953 454.039 232.031 454.02 232.07 cv
453.895 232.977 li
454.02 233.227 li
454.02 233.445 453.945 233.641 453.801 233.805 cv
453.879 234.023 li
453.645 234.711 li
453.613 235.004 453.582 235.227 453.551 235.383 cv
453.551 235.836 li
453.441 236.086 li
453.457 236.273 li
453.426 236.68 li
453.457 237.008 li
453.723 237.227 li
453.941 237.195 li
453.973 237.133 li
454.129 237.148 li
454.363 237.086 li
454.551 236.883 li
454.629 236.773 li
454.754 236.758 li
454.785 236.664 li
454.848 236.602 li
454.957 236.664 li
455.129 236.492 li
455.238 236.508 li
455.27 236.383 li
455.316 236.383 li
455.363 236.227 li
455.535 236.164 li
455.863 236.008 li
456.145 235.813 456.414 235.711 456.676 235.711 cv
456.754 235.711 li
456.887 235.797 456.977 235.906 457.02 236.039 cv
457.02 236.039 li
cp
455.191 226.492 mo
455.191 226.641 455.09 226.773 454.895 226.898 cv
454.895 226.93 li
454.664 227.203 454.465 227.359 454.301 227.398 cv
454.035 227.727 li
453.848 227.961 li
453.441 228.055 li
453.254 228.32 li
452.973 228.461 li
452.504 228.867 li
452.223 228.602 li
452.27 228.148 li
452.473 227.836 li
452.48 227.66 452.574 227.516 452.754 227.398 cv
452.754 227.32 li
452.863 227.258 li
452.879 226.977 li
453.176 226.914 li
453.176 226.742 li
453.379 226.711 li
453.43 226.473 453.535 226.301 453.691 226.195 cv
453.754 226.148 li
453.848 226.039 li
454.004 225.617 li
454.793 225.805 455.191 226.098 455.191 226.492 cv
455.191 226.492 li
cp
f
466.691 236.43 mo
466.551 237.102 li
466.582 237.32 li
466.551 237.367 li
466.59 237.473 466.613 237.582 466.613 237.695 cv
466.613 237.77 466.598 237.844 466.566 237.914 cv
466.566 237.945 li
466.566 238.094 466.512 238.68 466.41 239.711 cv
466.363 240.055 li
466.363 240.117 li
466.332 240.195 li
466.316 240.273 li
466.332 240.367 li
466.27 240.43 li
466.223 240.539 li
466.145 240.539 li
466.176 240.633 li
466.129 240.727 li
466.129 240.82 466.098 240.906 466.035 240.992 cv
465.957 241.273 li
465.914 241.406 465.852 241.527 465.77 241.633 cv
465.684 241.789 465.535 241.996 465.316 242.258 cv
465.02 242.492 li
464.676 242.789 li
464.41 242.914 li
464.191 243.07 li
464.051 243.117 li
463.809 243.242 463.539 243.32 463.238 243.352 cv
463.129 243.32 li
462.957 243.398 li
462.957 243.43 li
462.758 243.48 462.586 243.508 462.441 243.508 cv
461.738 243.508 li
461.316 243.414 li
460.926 243.492 li
460.754 243.32 li
460.207 243.273 li
459.848 242.945 li
459.582 242.805 li
459.102 242.625 458.824 242.309 458.754 241.852 cv
458.785 241.773 li
458.738 241.492 li
458.883 241.262 459.012 241.141 459.129 241.133 cv
459.223 241.07 459.32 241.039 459.426 241.039 cv
459.426 241.039 459.535 241.055 459.754 241.086 cv
459.973 241.125 460.199 241.152 460.441 241.164 cv
460.41 241.43 li
460.629 241.586 li
460.629 241.789 li
460.488 241.977 li
461.316 242.227 li
461.723 242.133 li
461.723 242.258 li
461.848 242.227 li
461.879 242.227 li
461.898 242.227 461.977 242.234 462.113 242.258 cv
462.129 242.336 li
462.316 242.242 li
462.461 242.168 462.746 242.133 463.176 242.133 cv
463.246 242.09 463.309 242.043 463.363 241.992 cv
463.371 241.992 463.402 241.996 463.457 242.008 cv
463.496 242.008 463.535 242.008 463.566 242.008 cv
463.629 242.008 463.695 241.934 463.77 241.789 cv
463.777 241.828 463.805 241.852 463.848 241.852 cv
463.867 241.852 463.895 241.836 463.926 241.805 cv
463.965 241.781 463.992 241.773 464.004 241.773 cv
464.051 241.773 li
464.613 241.273 li
464.895 240.867 li
464.91 240.633 li
465.113 240.367 li
465.129 240.133 li
465.238 239.93 li
465.316 239.445 li
465.473 238.992 li
465.449 238.918 465.441 238.809 465.441 238.664 cv
465.441 238.406 465.477 238.141 465.551 237.867 cv
465.488 237.586 li
465.488 236.695 li
465.348 236.398 li
465.348 235.898 li
465.191 235.508 li
465.207 234.945 li
465.191 234.852 li
465.066 234.883 li
464.957 235.148 li
464.691 235.383 li
464.363 235.914 li
463.895 236.227 li
463.395 236.758 li
463.102 237.063 462.77 237.328 462.395 237.555 cv
462.207 237.758 li
461.941 237.93 li
461.691 238.055 li
461.457 238.289 li
461.16 238.43 li
461.066 238.523 460.93 238.594 460.754 238.633 cv
460.48 238.809 460.18 238.898 459.848 238.898 cv
459.66 238.898 li
459.598 238.906 459.508 238.914 459.395 238.914 cv
459.301 238.914 459.23 238.906 459.191 238.898 cv
458.863 238.883 li
458.395 238.43 li
458.051 237.977 li
457.91 237.602 li
457.785 236.883 li
457.848 236.367 li
458.035 235.742 li
458.004 235.555 li
458.16 234.992 li
458.316 234.664 li
458.367 234.508 458.395 234.328 458.395 234.117 cv
458.785 233.367 li
458.824 233.273 458.918 233.176 459.066 233.07 cv
459.238 232.758 li
459.457 232.523 li
459.496 232.367 459.59 232.234 459.738 232.117 cv
459.832 232.066 459.898 231.977 459.941 231.852 cv
459.992 231.719 460.223 231.594 460.629 231.477 cv
460.535 231.508 li
460.629 231.461 li
460.66 231.398 460.742 231.281 460.879 231.102 cv
461.098 231.133 li
461.254 231.039 li
461.441 230.863 461.645 230.773 461.863 230.773 cv
461.988 230.773 li
462.457 230.602 li
462.738 230.695 li
463.051 230.695 li
463.254 230.805 li
463.367 230.816 463.461 230.867 463.535 230.961 cv
463.785 231.211 li
463.863 231.242 li
463.895 231.32 li
464.066 231.57 li
464.082 231.664 li
464.02 231.945 li
464.066 232.148 li
463.832 232.508 li
463.301 232.586 li
463.035 232.148 li
462.785 232.055 li
462.66 231.93 li
462.473 231.93 li
462.418 231.953 462.293 232.016 462.098 232.117 cv
462.082 232.258 li
461.629 232.258 li
461.512 232.438 461.383 232.531 461.238 232.539 cv
461.164 232.594 461.09 232.633 461.02 232.664 cv
460.879 233.008 li
460.754 233.023 li
460.738 233.195 li
460.488 233.195 li
460.254 233.57 li
460.051 233.695 li
459.973 233.945 li
459.707 234.32 li
459.676 234.68 li
459.457 234.898 li
459.254 235.68 li
459.113 235.82 li
459.129 236.023 li
458.91 236.695 li
458.973 236.914 li
458.957 237.133 li
459.039 237.258 459.082 237.383 459.082 237.508 cv
459.207 237.555 li
459.254 237.648 li
459.461 237.648 459.598 237.676 459.66 237.727 cv
459.762 237.645 460.055 237.555 460.535 237.461 cv
460.605 237.297 460.707 237.176 460.832 237.102 cv
460.965 237.02 461.238 236.867 461.645 236.648 cv
461.707 236.664 li
461.707 236.57 461.742 236.484 461.816 236.398 cv
461.992 236.328 462.098 236.281 462.129 236.258 cv
462.23 236.195 462.289 236.117 462.301 236.023 cv
462.582 235.945 li
462.77 235.789 li
463.223 235.18 li
463.348 235.242 li
463.355 235.211 463.488 235.051 463.738 234.758 cv
464.176 234.258 li
464.207 234.023 li
464.352 233.891 464.52 233.504 464.707 232.867 cv
464.613 232.492 li
464.473 232.242 li
464.582 231.961 li
464.441 231.773 li
464.41 231.523 li
464.348 231.336 li
464.535 231.008 li
464.723 230.914 464.855 230.867 464.941 230.867 cv
465.055 230.867 465.199 230.926 465.379 231.039 cv
465.504 231.273 li
465.738 231.445 li
465.77 231.836 li
465.809 231.953 465.852 232.113 465.895 232.32 cv
465.957 232.438 465.988 232.566 465.988 232.711 cv
465.988 232.836 li
466.02 232.945 li
466.223 233.227 li
466.176 233.555 li
466.27 233.695 li
466.309 233.781 466.332 233.867 466.332 233.961 cv
466.332 234.047 466.324 234.113 466.316 234.164 cv
466.473 234.211 li
466.348 234.664 li
466.426 235.008 li
466.477 235.133 466.504 235.242 466.504 235.336 cv
466.504 235.43 466.477 235.551 466.426 235.695 cv
466.535 235.789 li
466.691 236.43 li
cp
f
474.273 232.305 mo
474.195 232.18 li
474.055 232.148 li
473.492 231.695 li
473.133 231.648 li
472.852 231.648 li
472.805 231.602 li
472.664 231.664 li
472.508 231.57 li
472.039 231.57 li
472.086 231.648 li
471.68 231.789 li
471.602 231.883 li
471.555 231.898 li
471.336 232.078 471.184 232.227 471.102 232.352 cv
470.977 232.773 li
470.898 232.945 li
471.086 233.195 li
470.773 233.43 li
470.82 233.492 li
470.684 233.723 470.617 233.945 470.617 234.164 cv
470.477 234.352 li
470.477 234.664 li
470.32 234.836 li
470.289 234.992 li
470.242 235.023 li
470.242 235.273 li
470.18 235.367 li
470.18 235.516 470.168 235.629 470.148 235.711 cv
470.18 235.805 li
470.023 236.148 li
470.086 236.258 li
469.961 236.43 li
470.086 236.773 li
469.898 237.023 li
469.93 237.367 li
469.93 237.43 li
470.008 237.461 li
470.086 237.445 li
470.148 237.383 470.211 237.328 470.273 237.273 cv
470.242 237.133 li
470.492 237.102 li
470.539 236.977 li
471.602 236.102 li
471.711 236.07 li
471.836 235.773 li
471.906 235.742 472.012 235.691 472.148 235.617 cv
472.258 235.336 li
472.398 235.336 li
472.336 235.023 li
472.602 234.992 li
472.621 234.941 472.656 234.883 472.711 234.82 cv
472.762 234.75 472.82 234.68 472.883 234.617 cv
473.805 233.383 li
473.945 233.117 li
473.93 233.055 li
474.055 232.852 li
474.086 232.648 li
474.258 232.508 li
474.273 232.305 li
cp
475.977 231.367 mo
475.805 231.602 li
475.945 232.039 li
475.711 232.305 li
475.617 232.695 li
475.57 232.773 li
475.602 232.867 li
475.602 233.035 475.559 233.16 475.477 233.242 cv
475.445 233.305 li
475.445 233.367 li
475.477 233.453 475.492 233.531 475.492 233.602 cv
475.492 233.664 475.484 233.707 475.477 233.727 cv
475.492 233.805 li
475.414 234.008 li
475.477 234.211 li
475.336 234.367 li
475.383 234.617 li
475.492 234.742 li
475.336 234.883 li
475.336 235.18 li
475.211 235.461 li
475.289 235.742 li
475.18 235.898 li
475.367 236.023 li
475.117 236.43 li
475.102 236.492 li
475.273 236.523 li
475.148 236.93 li
475.148 237.008 li
475.148 237.094 475.141 237.16 475.133 237.211 cv
475.148 237.258 li
475.445 237.289 li
475.68 237.648 li
475.555 237.93 li
475.742 237.914 li
475.813 238.051 475.855 238.176 475.867 238.289 cv
475.602 238.555 li
475.516 238.641 475.398 238.719 475.242 238.805 cv
474.93 238.977 li
474.852 238.883 li
474.664 238.992 li
474.102 238.336 li
474.102 238.039 li
474.027 237.801 473.992 237.578 473.992 237.367 cv
473.992 237.258 li
473.898 236.195 li
474.039 235.445 li
473.93 235.008 li
473.617 235.508 li
473.461 235.977 li
473.32 236.055 li
473.07 236.445 li
472.617 236.867 li
472.492 237.086 li
472.086 237.43 li
472.008 237.648 li
471.43 238.023 li
470.82 238.695 li
470.477 238.773 li
470.242 238.945 li
469.938 238.934 469.711 238.824 469.555 238.617 cv
469.012 238.348 468.73 237.969 468.711 237.477 cv
468.805 237.43 li
468.773 237.32 li
468.758 237.102 li
468.648 236.867 li
468.758 236.617 li
468.805 236.227 li
468.93 235.633 li
468.93 235.625 468.93 235.602 468.93 235.57 cv
468.906 235.551 468.898 235.523 468.898 235.492 cv
468.898 235.453 468.914 235.395 468.945 235.32 cv
468.934 235.289 468.93 235.242 468.93 235.18 cv
468.93 235.086 468.965 234.945 469.039 234.758 cv
469.164 234.711 li
469.09 234.648 469.055 234.582 469.055 234.508 cv
469.055 234.457 469.059 234.422 469.07 234.398 cv
469.059 234.367 469.055 234.328 469.055 234.273 cv
469.055 234.129 469.121 234.02 469.258 233.945 cv
469.297 233.832 469.367 233.711 469.461 233.586 cv
469.367 233.445 li
469.586 233.18 li
469.586 233.102 li
469.586 232.875 469.664 232.664 469.82 232.477 cv
469.805 232.148 li
469.883 232.07 li
469.883 232.063 469.883 232.047 469.883 232.023 cv
469.871 232.004 469.867 231.984 469.867 231.961 cv
469.867 231.898 469.887 231.844 469.93 231.789 cv
469.93 231.68 li
469.98 231.566 470.105 231.391 470.305 231.148 cv
470.512 230.898 470.664 230.688 470.758 230.508 cv
470.852 230.602 li
471.055 230.508 li
471.133 230.477 li
471.727 230.211 li
473.117 230.273 li
473.117 230.398 li
473.555 230.492 li
473.824 230.492 474 230.582 474.086 230.758 cv
474.086 230.727 474.09 230.688 474.102 230.633 cv
474.102 230.602 474.102 230.582 474.102 230.57 cv
474.492 230.898 li
474.82 230.977 li
475.477 230.82 li
475.711 231.273 li
475.977 231.367 li
cp
f
483.648 232.195 mo
483.648 232.313 483.539 232.414 483.32 232.508 cv
483.266 232.57 483.18 232.625 483.055 232.664 cv
482.887 232.738 482.766 232.801 482.695 232.852 cv
482.305 232.727 li
482.117 232.875 481.871 232.945 481.57 232.945 cv
481.352 232.883 li
481.195 233.023 li
480.711 233.023 li
480.398 233.227 li
480.273 233.176 480.148 233.148 480.023 233.148 cv
479.992 233.18 479.906 233.207 479.773 233.227 cv
479.711 233.227 479.641 233.211 479.57 233.18 cv
479.523 233.852 li
479.539 234.367 li
479.492 234.992 li
479.523 235.68 li
479.57 236.008 li
479.57 236.258 li
479.82 236.789 li
479.789 236.832 479.773 236.875 479.773 236.914 cv
479.773 237 479.902 237.066 480.164 237.117 cv
480.211 237.336 li
480.336 237.383 li
480.555 237.523 li
480.695 237.633 li
480.809 237.613 480.891 237.602 480.945 237.602 cv
481.047 237.602 481.156 237.617 481.273 237.648 cv
481.313 237.629 481.414 237.547 481.57 237.398 cv
481.684 237.305 481.789 237.258 481.883 237.258 cv
481.891 237.258 481.906 237.258 481.93 237.258 cv
481.961 237.27 481.98 237.273 481.992 237.273 cv
482.094 237.047 482.289 236.895 482.57 236.82 cv
482.82 236.82 483.027 236.898 483.195 237.055 cv
483.195 237.195 li
483.195 237.602 483.047 237.859 482.758 237.961 cv
482.652 238.211 482.422 238.375 482.07 238.445 cv
481.867 238.648 li
481.633 238.648 li
481.211 238.758 li
481.117 238.777 480.98 238.789 480.805 238.789 cv
480.699 238.789 480.594 238.762 480.492 238.711 cv
480.258 238.711 li
479.633 238.383 li
479.461 238.32 li
479.086 237.82 li
478.867 237.586 li
478.477 236.68 li
478.336 235.836 li
478.367 235.617 li
478.227 235.43 li
478.32 235.18 li
478.227 234.773 li
478.352 234.648 li
478.383 234.414 li
478.336 234.195 li
478.367 233.883 li
478.305 233.586 li
478.383 233.492 li
478.383 233.211 li
478.258 233.148 li
477.914 233.227 li
477.602 232.992 li
477.539 232.992 li
477.188 232.992 477.008 232.801 477.008 232.414 cv
477.008 232.367 li
476.789 232.023 li
477.133 231.695 li
477.57 231.773 li
477.805 231.727 li
478.148 231.82 li
478.523 231.82 li
478.523 231.461 li
478.305 230.961 li
478.523 230.836 li
478.445 230.57 li
478.461 230.008 li
478.32 229.773 li
478.234 229.641 478.195 229.52 478.195 229.414 cv
478.195 229.281 478.219 229.172 478.273 229.086 cv
478.336 228.836 li
478.477 228.695 li
478.797 228.633 479.016 228.602 479.133 228.602 cv
479.508 228.602 479.715 228.773 479.758 229.117 cv
479.695 229.211 li
479.766 229.328 479.805 229.43 479.805 229.523 cv
479.805 229.535 479.797 229.566 479.789 229.617 cv
479.758 229.711 li
479.742 229.852 li
479.805 230.07 li
479.789 230.164 li
479.82 230.414 li
479.664 230.633 li
479.758 230.992 li
479.68 231.43 li
479.82 231.586 li
479.68 231.914 li
480.242 231.836 li
481.227 231.93 li
482.023 231.805 li
482.289 231.82 li
482.383 231.805 li
483.086 231.805 li
483.461 231.805 483.648 231.938 483.648 232.195 cv
483.648 232.195 li
cp
f
489.332 236.039 mo
489.332 236.313 489.285 236.484 489.191 236.555 cv
489.098 236.633 li
489.004 236.883 li
488.723 236.977 li
488.637 237.164 488.512 237.316 488.348 237.43 cv
488.176 237.477 li
487.941 237.727 li
487.738 237.789 li
487.652 238 487.477 238.109 487.207 238.117 cv
487.184 238.16 487.133 238.234 487.051 238.336 cv
486.871 238.461 486.684 238.535 486.488 238.555 cv
486.395 238.57 li
486.27 238.742 li
485.91 238.742 li
485.629 238.945 li
484.895 238.414 li
484.551 237.711 li
484.535 236.82 li
484.457 236.617 li
484.676 235.023 li
484.738 234.961 li
484.707 234.773 484.691 234.598 484.691 234.43 cv
484.691 234.328 484.727 234.109 484.801 233.773 cv
484.895 233.352 li
484.863 233.281 484.809 233.203 484.738 233.117 cv
484.848 232.773 li
484.895 232.367 li
484.926 232.305 li
484.871 232.203 484.84 232.082 484.832 231.945 cv
484.84 231.926 484.852 231.895 484.863 231.852 cv
484.883 231.813 484.895 231.781 484.895 231.758 cv
484.852 231.645 484.832 231.539 484.832 231.445 cv
484.832 231.156 484.992 231.023 485.316 231.055 cv
485.535 231.07 li
485.68 231 485.77 230.961 485.801 230.961 cv
486.039 230.961 486.199 231.094 486.285 231.352 cv
486.285 231.43 li
486.336 231.578 486.363 231.711 486.363 231.836 cv
486.363 231.953 486.352 232.031 486.332 232.07 cv
486.207 232.977 li
486.332 233.227 li
486.332 233.445 486.258 233.641 486.113 233.805 cv
486.191 234.023 li
485.957 234.711 li
485.926 235.004 485.895 235.227 485.863 235.383 cv
485.863 235.836 li
485.754 236.086 li
485.77 236.273 li
485.738 236.68 li
485.77 237.008 li
486.035 237.227 li
486.254 237.195 li
486.285 237.133 li
486.441 237.148 li
486.676 237.086 li
486.863 236.883 li
486.941 236.773 li
487.066 236.758 li
487.098 236.664 li
487.16 236.602 li
487.27 236.664 li
487.441 236.492 li
487.551 236.508 li
487.582 236.383 li
487.629 236.383 li
487.676 236.227 li
487.848 236.164 li
488.176 236.008 li
488.457 235.813 488.727 235.711 488.988 235.711 cv
489.066 235.711 li
489.199 235.797 489.289 235.906 489.332 236.039 cv
489.332 236.039 li
cp
487.504 226.492 mo
487.504 226.641 487.402 226.773 487.207 226.898 cv
487.207 226.93 li
486.977 227.203 486.777 227.359 486.613 227.398 cv
486.348 227.727 li
486.16 227.961 li
485.754 228.055 li
485.566 228.32 li
485.285 228.461 li
484.816 228.867 li
484.535 228.602 li
484.582 228.148 li
484.785 227.836 li
484.793 227.66 484.887 227.516 485.066 227.398 cv
485.066 227.32 li
485.176 227.258 li
485.191 226.977 li
485.488 226.914 li
485.488 226.742 li
485.691 226.711 li
485.742 226.473 485.848 226.301 486.004 226.195 cv
486.066 226.148 li
486.16 226.039 li
486.316 225.617 li
487.105 225.805 487.504 226.098 487.504 226.492 cv
487.504 226.492 li
cp
f
495.469 234.883 mo
495.453 234.789 li
495.367 234.707 495.32 234.617 495.313 234.523 cv
495.359 234.43 li
495.203 234.086 li
495.234 233.758 li
495.172 233.664 li
495.016 233.539 494.926 233.441 494.906 233.367 cv
494.801 233.328 494.75 233.207 494.75 233.008 cv
494.641 232.992 li
494.422 232.633 li
494.266 232.508 li
493.891 232.367 li
493.75 232.32 li
493.676 232.32 493.625 232.301 493.594 232.258 cv
493.234 232.648 li
493 233.148 li
492.625 233.352 li
492.578 233.555 li
492.391 233.648 li
492.328 234.117 li
492.109 234.211 li
492.055 234.391 492.031 234.547 492.031 234.68 cv
491.75 234.961 li
491.828 235.008 li
491.828 235.156 491.773 235.281 491.672 235.383 cv
491.641 235.5 491.594 235.617 491.531 235.742 cv
491.531 235.898 li
491.469 235.961 li
491.5 236.18 li
491.297 236.664 li
491.328 236.758 li
491.328 237.258 li
491.266 237.508 li
491.281 237.758 li
491.438 237.992 li
491.688 238.086 li
491.781 238.117 li
491.922 238.055 li
492.391 238.086 li
492.469 237.914 li
492.531 237.914 li
492.602 237.914 492.645 237.93 492.656 237.961 cv
492.828 237.914 li
492.969 237.961 li
493.203 237.805 li
493.234 237.742 li
493.406 237.711 li
493.488 237.578 493.688 237.445 494 237.32 cv
494.031 237.227 li
494.391 236.977 li
494.594 236.68 li
494.875 236.539 li
494.891 236.445 li
494.984 236.258 li
494.984 236.023 li
495.203 235.836 li
495.266 235.711 li
495.359 235.602 li
495.316 235.457 495.297 235.359 495.297 235.305 cv
495.297 235.191 495.332 235.078 495.406 234.961 cv
495.469 234.883 li
cp
496.656 234.445 mo
496.547 234.773 li
496.547 235.086 496.531 235.332 496.5 235.508 cv
496.391 235.695 li
496.391 235.898 li
496.297 236.023 li
496.25 236.273 li
496.047 236.461 li
495.922 236.914 li
495.781 236.977 li
495.703 237.164 li
495.484 237.289 li
495.344 237.602 li
495.125 237.711 li
495.109 237.93 li
494.766 238.055 li
494.609 238.273 494.414 238.41 494.188 238.461 cv
494.125 238.477 li
493.957 238.734 493.734 238.867 493.453 238.867 cv
493.336 238.938 493.203 238.977 493.047 238.977 cv
492.859 239.102 li
492.688 239.148 li
492.453 239.336 li
492.219 239.305 li
491.969 239.383 li
491.656 239.258 li
490.875 239.211 li
490.609 238.789 li
490.219 238.383 li
490.313 238.086 li
490.031 237.477 li
490.156 237.242 li
490.078 236.805 li
490.156 236.539 li
490.133 236.375 490.125 236.254 490.125 236.18 cv
490.125 235.953 490.188 235.785 490.313 235.68 cv
490.32 235.555 490.398 235.359 490.547 235.086 cv
490.625 235.086 li
490.594 234.961 li
490.641 234.711 li
490.641 234.43 li
490.742 234.328 490.801 234.254 490.813 234.211 cv
490.75 233.961 li
490.75 233.898 li
490.832 233.734 490.875 233.555 490.875 233.367 cv
491.266 232.852 li
491.266 232.852 491.273 232.844 491.297 232.82 cv
491.328 232.789 491.359 232.766 491.391 232.742 cv
491.375 232.664 li
491.438 232.664 li
491.703 232.367 li
491.734 231.945 li
492.172 231.789 li
492.336 231.688 492.445 231.504 492.5 231.242 cv
492.734 231.242 li
492.867 231.172 492.988 231.133 493.094 231.133 cv
493.195 231.133 493.301 231.16 493.406 231.211 cv
493.594 231.227 li
494.063 231.055 li
494.313 231.289 li
494.516 231.414 li
494.656 231.414 li
494.938 231.555 li
495.078 231.555 li
495.234 231.703 495.41 231.898 495.609 232.148 cv
495.656 232.242 li
495.781 232.305 li
496.156 232.789 li
496.5 233.648 li
496.5 233.82 li
496.656 234.445 li
cp
f
509.5 235.742 mo
509.5 235.848 509.422 235.977 509.266 236.133 cv
509.063 236.43 li
508.984 236.789 li
508.828 236.852 li
508.797 236.961 li
508.598 237.016 508.457 237.16 508.375 237.398 cv
508.25 237.566 508.109 237.688 507.953 237.758 cv
507.891 237.82 507.832 237.863 507.781 237.883 cv
507.688 238.055 li
507.531 238.086 li
507.063 238.336 li
506.453 238.414 li
506.297 238.383 li
506.016 238.43 li
505.906 238.305 li
505.738 238.223 505.617 238.141 505.547 238.055 cv
505.41 238.016 505.305 237.898 505.234 237.711 cv
505.023 237.473 504.922 237.281 504.922 237.133 cv
504.922 237.086 li
504.797 236.867 li
504.766 236.82 li
504.656 236.508 li
504.484 236.164 li
504.531 235.742 li
504.344 235.508 li
504.078 233.961 li
504.035 233.766 504.016 233.594 504.016 233.445 cv
503.984 233.352 li
503.891 233.227 li
503.734 233.445 li
503.094 234.133 li
502.859 234.508 li
502.734 234.758 li
502.531 235.039 li
502.391 235.195 li
502.406 235.273 li
502.156 235.836 li
502 236.023 li
501.828 236.055 li
501.672 236.211 li
501.672 236.453 501.555 236.609 501.328 236.68 cv
501.281 236.727 li
501.176 236.988 501.055 237.148 500.922 237.211 cv
500.766 237.461 li
500.504 237.703 500.332 237.852 500.25 237.914 cv
500.207 238.031 500.141 238.129 500.047 238.211 cv
500.023 238.254 499.984 238.301 499.922 238.352 cv
499.879 238.563 499.711 238.703 499.422 238.789 cv
499.219 238.852 li
498.977 238.828 498.781 238.688 498.625 238.43 cv
498.359 237.977 li
498.438 237.555 li
498.406 237.32 li
498.438 237.273 li
498.453 237.039 li
498.266 236.617 li
498.406 236.398 li
498.328 236.164 li
498.453 235.914 li
498.5 235.492 li
498.422 235.43 li
498.563 235.18 li
498.516 235.039 li
498.5 234.758 li
498.563 234.211 li
498.539 234.098 498.531 234.02 498.531 233.977 cv
498.531 233.957 498.535 233.938 498.547 233.914 cv
498.547 233.875 498.547 233.848 498.547 233.836 cv
498.453 233.695 li
498.516 233.117 li
498.5 232.93 li
498.547 232.633 li
498.484 232.148 li
498.797 231.602 li
499.172 231.664 499.43 231.75 499.578 231.852 cv
499.723 231.957 499.797 232.141 499.797 232.398 cv
499.797 232.555 li
499.922 232.773 li
499.859 233.148 li
499.938 233.883 li
499.813 234.211 li
499.859 234.602 li
499.859 234.898 li
499.719 235.102 li
499.828 235.43 li
499.719 235.617 li
499.703 235.82 li
499.813 236.023 li
499.672 236.398 li
499.609 236.555 li
499.609 236.727 li
499.703 236.898 li
500.016 236.602 li
500.016 236.414 500.07 236.289 500.188 236.227 cv
500.195 236.113 500.242 236.023 500.328 235.961 cv
500.281 235.914 li
500.516 235.695 li
500.563 235.617 li
500.563 235.461 li
500.859 235.242 li
500.922 235.07 li
501.094 234.961 li
501.797 234.164 li
501.734 234.238 501.535 234.461 501.203 234.836 cv
501.203 234.867 li
501.234 234.742 li
501.469 234.477 li
501.625 234.164 li
501.625 233.977 li
501.906 233.898 li
501.938 233.664 li
502 233.586 li
502.031 233.492 li
502.031 233.367 li
502.281 233.117 li
502.281 233.098 502.281 233.066 502.281 233.023 cv
502.27 232.992 502.266 232.973 502.266 232.961 cv
502.266 232.742 502.383 232.625 502.625 232.602 cv
502.727 232.383 502.891 232.258 503.109 232.227 cv
503.219 232.055 li
503.25 232.023 li
503.352 231.867 503.516 231.758 503.734 231.695 cv
503.891 231.508 li
504.328 231.508 li
504.547 231.758 li
504.75 231.867 li
504.766 231.914 li
504.891 231.945 li
504.922 232.32 li
505.234 232.508 li
505.109 232.898 li
505.297 233.336 li
505.297 233.836 li
505.438 234.523 li
505.484 235.18 li
505.641 235.555 li
505.75 236.023 li
505.82 236.098 505.875 236.195 505.906 236.32 cv
506.234 236.414 li
506.234 236.773 li
506.422 236.977 li
506.422 237.023 li
506.484 237.039 li
506.563 237.148 li
506.625 237.055 li
506.602 237.055 506.633 237.066 506.719 237.086 cv
506.852 237.086 506.992 236.969 507.141 236.727 cv
507.359 236.664 li
507.406 236.57 li
507.438 236.477 507.508 236.41 507.625 236.367 cv
507.75 236.383 li
507.828 236.305 li
507.844 236.211 li
507.891 236.148 li
508.016 236.066 508.094 235.941 508.125 235.773 cv
508.328 235.555 li
508.359 235.383 li
508.484 235.102 li
508.828 234.977 li
509.313 235.133 li
509.484 235.664 li
509.484 235.676 509.488 235.688 509.5 235.695 cv
509.5 235.719 509.5 235.734 509.5 235.742 cv
509.5 235.742 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.3
%%For: (Remo Pillat) ()
%%Title: (fig5_planner_arch.eps)
%%CreationDate: 1/10/2022 11:52 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B6WX^dP,u3cW^;Yi.u4Yb"0eYE":V_gDI0>2?ljBn9ha\rH;1b9.ci*R-2clY-ZCp;egHRY2!%BR@3GSY>M8V5.6r10./S$
%+e)Y%2tVbHjX0toRG"X3=$%"2o$)4D]@uJ?[@?8mVmFjR2qsnb`6LTD7cLrM6(X;RGL_#Qq,_%;?7LGeGII5<QX[('/N2A@V/AV#
%1(lobj^l&*X&i&Bhf%'=El,%kKW?cYlW&^^7s]p)&Y=@&s!FCsC:?ju7g=ZbB$PV0`OQO.r\*q`?N$gF]'WD)endIno:F^]ep"+l
%eaZc]4MRtH\*Bf-'j%S2H:C]/Q3%"HJ+KOJ8_@i.B4POEOqY-sAh6O%&r)gt8=!iF+7P*"iZPH$B<D$^Eal4UW`7^]7pGBK7I>TG
%P%@@O,l00@FPa'"gK0A<QcrZ"Qpm-ZgoOK@j:/#F@_IH)_>hX&^T>CcWVo]]P'q6!H[qOGKP?K62WC\-:DNS%AqQV^Wf>3a2,8<d
%aXOG`ZI"7UlPeGJJj[MMA#Q\*rmC+aA`mFO4nJn@nM-,scH)$;[VHtm`\O/smU`k5X#Sj-7Q'Ep\<)Xur86N6BCdFMmrk`@^&UK/
%43%E=8=AKG(q%_hlnlIc.m!0@Rug6p:f4q%_4E\Pn/:Jbf4)og^ro<5]MNB/`tNrmctDLa=hR<Hm^AUuepcYm3UoUSX3uBr-EaE2
%DR3%q[ur_!qb;O`-W3LZM9C(A9_omHm5CA1XYh3J+^&HiR\3Hu]D.TfpDs5PkP]f$ST(@Q!JM:-Iobm[QI)lG.5`T3Ro6j5Vt76@
%WDRCXn:BEi;=.0MUdS&Ao^9M(F\A[17?E0U@2mN(+Us)pZ%a`N5Df<<2C]`ZGP]cEGm]MZji'IADp<U1o5/\"6L;HscE:Ag2bk<6
%RdFGE1ND)aef@0*#4.JYamC^/k<CbYh:QWGo'jEKq+dnqYC3cNXj:2(YCE2-p-8ZI`hK1_@bkrjpEP$hr\sgLj)?1l<,+hr"gE,_
%Ru>$Rh=;p*05p5U]2jpL7G-Jk>(\6Z`'pl\XZH@0r,.)IPIUB=[/^UeMaC(7?i>[,#Z1UR/Oc[o@G\9Q1GB3Js4");;e6IYc+b1l
%/$VcKo0C6=WE8OPbpTeEV=/.C:"ik%L^@"f)bGlbpr?7TEoOM1OE9tg-DsKDdAe'/B,RS(In5HkJ4>f76Y!=UDSZ]9s7Hp#3ZrqN
%-Et7@8WYo,4?Q2laolu\]#?BRA1CR6Y>"kVaHDt.+1NkR$=QfZfJtJ4M$gH7AXpHQT=<DX6k%lM%q*[u*M/P<s0nQPfOGE"8OoRT
%f>dG9R5PqG-=hrsV"t/(qL:JpFQS8]NPHmcc-^p<9.493--H<S2t4.S#5"/6s"M7Un^.Xt3!15*,Z9,Af,LO%'&hJdmB,!B'(q[4
%``qhRl$p+10o[Ba.t81EV-RrB<_=RJ:JbUeL4?f7JF((lWS'c(jj-i:ZU1&NJrJ(OE4>eP<:AM"iB\ia@=rMWCWC&9EW>r$*`\23
%UDaA1ok+$#>)@q[hDG2'=Q!BmI;1df+plL*GN/g-'4[_Fo5PD^kX^iROV/0>[F/9m)N-E2m.C>HKJ9o4=T1+j=Fdj[%>'@XQ@#0?
%oD:`prr,n1?1*rmh?"]ipb4n.rbq98RF$G#56#i3Ep*D)rr@KI+!AZeoih1k*\jf8M<oMq<"IaRGe<nrOk6%r7]ts]>5S)R,u<m)
%s,"-LO?[Jss28*l5Q?i\l*;&7U;(H.mUrV$Z'PEHPn?<gh/%hJl`Jhd7`A6t]h;-1@P+kbV>lMQJ:d<cfkZqTGk1Rc0Hc0XqbPGr
%]@ni:Lh/Gua]Kc`Au`_b,I(oWBT4-kZg;kK>-.cV?43;sCj'b]\^djK[d^64:Y0r=12!RY,%m<!mJj7jCNOP^.6KG/&Nh-]?gG)a
%V14Lum4Z2`X`jH@=__"Ni1jU9C1X[n^.?)NPkcfS[a)E?1A$5O@r_;8CAkG`:.M0[3GWeQ0Pc';3*OgnEq/%N]g?2C_e762D'sf)
%^tTtE3C^\a<,IWO.TIr.]')E:V9YEOn4p%;osQC$CKu>L\>614C)O`n"tDRtD21rrp(LZDDDQ9=l?'(GroY:.U3h`@HE^Oh-^q_d
%^"0,/3o+uNbEc4mcrs1`g.QfNRcQ3n7cK&TbJW&b3__U1:;"E2(7n*D>?cqbWC<]2WI=O+(cq?Sd;Q2DlJERa*&#ZC[p<`j=s_%]
%jaY>[CDG:(\:2%uM,S%)%_Xm].@O]M2G,B.+Z=g=[f'l@D,Cnu\8=a%$scs-i23e>LWHp`*$Q=`F-$j]<:-PFL:^B!r)r;ipsYFs
%3,;SWeb5Wc`$O(T4Ba2Ie`sR159<[QNU=50SqADN8r\lQ*+#6p>67YRl&sODKS4tZ37WL%4C3U]`HnlD^+M9XSPMRep]Bd&e;-@G
%<B1lO(Kd)EfNd73f'A%)].RfUdgpoh]%3k.'jl&U?&g1/[Qp9raoI'$2I!?[6PlUX:`%l"TX];&+QEL6MUdV<-?GIo'9f)L#"58^
%>kT,%lJEE.EjJU\n>0Trh2*$U#pj-&K&3i#2!RQb*=]^.Fq=Q+SBK#/\!^D.5._f1-X*%XRt"Jn/N<aq7(cC"f31SV5WJ(J,%!Ni
%I(.Xo,E#g1Zr(NhrJA'8M74+#A_Au/*fd:d>44Q3A/d]))]*r)VJ,^b@]Gn//J-aHUd-OR=$*%_l9pm_%*)[O-.aZF]l&aA`/'c8
%p);aId:,bj7RkP!Jh?c*[9r:Nl[1;9A-5DIj=-^UOu%,eEbSU:s.KL1gL$rT[QV+mKS)8AL8V.Ofoc<'*nn,+.Ta(t+8'AZF.h:%
%en3i>+@1roP?=bhJX#0c)Xo^F(i=<^[uL8k/!oNu&d@jp3%BOsJEV!0d#c7t**6?=2fi/i,SXr<N1dD[5UV\2j3S)jFOQ'Zd-%7c
%=t,1M#H\:D+>-5Ed?=lQ]BsX,Cais%,,s)Uee5n606IC5$0a4j_D-/j>'C+0hVUCpS,NJ7"17G*nbTl+TF,H`fQ'UR<;.MjYh@YB
%6Z?pG7eE(gob8H&CVkA0!ftOLG,8C4nXU<GP@iGFS8[9sOg!R7g<YQ?"@3nR$/uMM.00+VKD,Kf^',JD3%^k^_]F"e\*Ym*G4*dq
%I;McJf5_Je@C_h43mN_`-F""[10L(#RFl]I8(lAbe>oLBOX2@^B,:YX$X-&oMtS#%?aOf0_VFM[0Ld##6lG;F`3uo`NM^4`,\ddq
%D'5Q\#?E$>fthg^#nU]u2r?ABir0MPotrkr^322PWEtX!f(l>RhT/$u*7XemCKJVu3`VPV4/+1o'C1[hS*DrF]J"47F-'u'GD$V[
%k$8&.&"7EuG*`1[a2GKhAaF*D3,#ACcI<tF3n%qdO&NN.)'ce6>7cCs>\%mo-fui#=5O=h<YB?N,k>dr?JFEuKPh\\`p4_H%#r2U
%HZ6#]?NK$@=]89W+l.Fup$F7f_h^thAQ>b$g.+L=s!V;do#AQ#Tm^Cnk'O5V#kOt,c<IFJ?#%>+DYM0CYJ&f<I$</,RLg:%O?j[L
%Ipi_:VRG9*K.7^".-TEu?-*YS%Abjus22>-3t]]/c1_0V-4";9@Zf,9_SC^e1?$0m)Y);i=UJur!@-=d/[F?-&M*75>P7PO+d.X>
%.Q@35#i8$Vir4l+b^`]V/ZY4A1!m`TL+T(knbn`P2B_>%)\qUQeq(3TGdNFsBk!(;/9+u?>gTTq*WF20]!!f@[[$,>k\6*Nnt5h!
%=H-1;b3`dkWXYoV)Gq;JmFjnhDWJ;=/:B%V4(2@Y/;)$b9V%RInQU4VF[\/'[?83NK'$1,k*\f"f$6ru1_s``a'%kjDPg<mOGL8@
%X8UmkKSi-1fBL!%>cRYf<ei7#cYAi<7%1d=^i0S6oM28\r?qtbB*#-M&gXo+-\@)G+jirBLu.DPoN-(g3.GE$A3->ZmoKt9(::)b
%_4>G)q)S6>mEa64kGJdgDIqUC3Ll[JZZb(B"N+W:?dk(MV?%-oaqP>9r:\]U85HW;RM$>P4t=JN8o>FmTOkH0%[/m)U(b!6fV6e5
%.-Bc>5JfB'-@$tn.`#`c]gb#@AnWFO0A:L]Tg/%C;PRYBGl%;+fSo*m0W"_">$@o+bXEju;gfn)-Lk+dM9",bc0<pAI,[pJHr?c4
%<a2pJrJXS$LmVRM=0UJ`&W`3D^]+U]_1\-!mUr='7ZCA3:5RC5/k71A4En4-'qVSrH_"oc=iP]I'5J.oM8IV7gr_+XE:0fX^(EH_
%3nP%k-/-0n[N^M:hIA2EHkGP<<Wrc0hM=D"<[E4hPd$][Ht>8,THY6R)R0V<%@38%^Jm&+E`QR(Qa7Or6OT36gLK.#X[SjfN8s-I
%;9`82mqVg&g4$5k^%Q[:6Y"_V%ZQ)-[S%A)Ks9R(T'h9'kKp\u+KP]'Sa[C9C%o=&*fGc6"s/`;(1T0%Bc!U1X2eb[CTVo*b7cS7
%_c;*i&rfdr\jg%rcfSS][7]4f<pF,.?LOTPgh\?-@!=g;%WHKT0>?eG+]S'X-1J9CT`%lgMPPGF\nHP/_["hJ5UTDDQ_1t[[mm>t
%n&0GW^Qjn!rmd[`qM-s*W7p.G$$`XlQPIKciX0oL$i[WlR^R'J7(p4m=K1;E#C,W;Y9[q;U.5\"?a[E-:VuYXM0A-U+`Q^qD*X>s
%?QKKJnESp;ot3-f52k#md!=D_1s;NYk',>lWEL]JiT1W`BX,SMa%k9kB2h_q,,&u6(DL*3DdBeehsec_29I*)Dp\*_,+0\gTRSiR
%?Uk^BESuc0Od9#*X62jrp<rZZARF>Q^N`&WAF^pa3R8k]&RtpqdEeYN82mn'ioq-)9^k#5Pl1NPD>^IB5m_m"Lm,pm^csQ;=99$O
%H?^E>`5%&M\1^<2`t#FQf41l:DSDCIoJ8Pemj[llFHcD;AYT,X2kjUdNN;UdR5+fXI%^6)eP<U)@!NU+3tYN%cg)s`4TPI:,ssFF
%qMct,pop<NPukm@qJ\+V=3+'Mn$T\)&+>7$T\uFJ2p4i6Jr'_(SYZ.R;N%Dqenj(4NrXk_U-;?E%5eTV*#;".!IO%)V,3jV`kA@c
%5q5__PDO$;,-,5Gc#m(jS',UUj#0>,gNEb#K=@9tpO-,94BN?O`<NRdT19n`\lrHqa1kns\"eNhmRc"K?f>iZ'G`6[&YiPl=!.\R
%??D$>8,T_2*XpH0Xd2,$eE&&d_utIYX8?$o0Ln@T@G`2#r:O30,W_bdJaZ6kK]nO!SL7#M!4*3njGS2)IO7?C-0UNilgF,3AhVOU
%XHan8ZV"@ALSimUP\LXuI1QTT-cf]hWssZn7(3J.PcKWZk"1dMp!Q'$2*b23G`F96:9XR%e(\g%nGq5+L5sh-S)5HsCVDmJf/eap
%isS%SPDLmgbO&J+&2YoUn')ZJ-*h$-U\;TS2codsN9:9j5R@#*-fD?&LD,.[KnpjjT=6Frp@h9E?\Kq=c\q,cCMn.PqCO4/(QXmu
%2a4i'r2")-^Qqms_(Y[=I'B>_>^!UJn(-pYhUM@).K;$VXkQX:`O0dI1HDZ,XX0=>F6@)$jPp$fC3'=7hFaY0CZO17HR?;U>J<Y*
%O)OX3-0\NoZ>4Y5*+)M0bl?*P9';Sc0)qbbSA)/,gSS^(pVut+lI'IQRCc=mMXsg$H`?Fp@G:,A[C<8[lf;IFd-@^%H`K)n@e3p<
%0!l_hV>Pc3m]s@2[8rS0[W2g8N&j,SiW*\7II4J/9OC$Q-^W%'1V$W5>empEJ/+73Q\qB)YC4rboA/dP/8ed!S<c?o^UD6X*k-)3
%ldjqbDeDXP(gL&gq)"F>k11pOSlV7qa4sZQVY6V'ceZ03RD$f8KcG6hm?Pt>qlt#[8m1P5img=0H#r+Kh>EO1_(_-W)3Jq(CgR!Q
%B43Tk*gs^\p"e]1ZPba&ei^]\"HE95IX:h&n;M+c`nXjHeUJ?<P4,?q`r0&eW-_J9\*Ug.W2n$qcIDOC)%>Q;gg=i<lcV@##C`F#
%Y*??EJ5M<*WU'Eph(pMjK*,n5pJQ"c3;";7ZM<1EDQ#'uI\TNSp[VYKW3_A)=.npEZWun#,44g,n,1d@r4,^K0&L&D[:\=1c@%@P
%;:"CeE)\k,gKM"5Sc-K($"^gcgfs[&I`c#i_5Qu("Jn7qh9=E4s/<'5"#>gJ?tWI!6s>uc)R\@L2W\0C;,7N,;a3b?fGTq_isa_2
%C2Fc>7bufq)Y1TAW7q1*i_'17`-9_Q@L9c8l5<^Zg;@:P!M^Q31V0Q("H7[$+r-T6Qd2P6)I_R[l*]3>lK=H$W4TgglbKpR/gW;i
%?OMp%72PPh_?[b8F.;D(%(srrgqB%mcEb!HGLWDdP:&9Rh,;D%esr>RgcM84V2<C/hj0;:J*$Suh4O&%7sAOnGLY)fFY@]51<a1h
%Vj6s_Y4f(J>o`h8r'rnLT9"lKNMQ$AQi"1=B2mM&pV7Tc`oV!_W-RW2HFE`A4^+;cXLp*cpl,Wtk5'A*'=ci`<;!(&2!V>fZa?tX
%0PY%dB%(Sbi2C0'mrImGQd:5Xrgpbbg("tmd?'qlYD[k)!i8V_>h-QSB26mh8:H$%I0gn$=kuVs"H@^Y]bZY!3%@gpQYWecakQ6e
%ID8Y6m?=@q2X6bmmpVeVCS@EL;+m,/?"[+n3ED?em@Lm6_8,<L;,>eA5L5&<9eu!;gT,UcRs/R)lBep:)0P*?@IbF/-,V.cGOiIP
%<h)g:PD<E\FfA_#Sh+m+Zd\SV\5;skTqcM$$>F-POO2[@r]+%_A.hM*?J[\abJic+RX+H(ULsBn2.e2eme6@qW!>o?W(CRtoFja6
%]ik?"nLXEYF04q#8):[93c_9FK'(s_:"4C8hWrjTpf-L,-^Ef5S*-cGUm9eQ;QY>Ur*S(<$1k7aeY&gW64q8GJ>^oX.'0!UBS/KC
%ID7*LD5mq,m?dSA)q*.0L)0E'900'm)YfO*j3qC+3_nP!6*D*#e+3K`d*ifq@csfXGq)oS%r(:fH7Bg%qEm``gcS=84k6C0jA3eq
%l"UhpM;@SGF0%[BeCp+hYEE\nWLMr+l%*sTZ*Y,8oLQQ][^L"Jof"jmDN)G-d-G>mrD`26kim$Ml1TSBo2J!/@nq@HrLOLDrR$e"
%Y?'/GVjl+mnR;YaI=X&ObF+&O4eP(i-!RRqEPU&4.=$:6\JXu269b<)Gn>qAE`50t;JH69=6AVVhhSQ;:\EnjjiV?44qMF#k:AVP
%It4t.MKh1]4Vr<d[Z[&lc#rm4.g;2U4h7R5r:YW?bs-fa=]IY7"Z:O.>[@.h(S:%G/Y"VpO@ZkR<iU2N\D?MA:eA+0es[2@\&)Wt
%Ru:%&s+V`&h;46+2RD5MS`8a#mLC8ar-`!26XWf3B00&Kg"FXl/s=g=>3rZKR6"#3V#q&l:T8Eb<'U/Trm4ZGrnn(0m'562,C\cl
%&,dXqC>W*0a*&q:>C2heX>j?*cHu-M96@WjQ+=</-1224*kQ7i(mpAaIkJsH-Cb"0C3R/'UJ;RT=jO%>f'IsaioTm;J5M0NHs/Ta
%"c`?s1@":jjgG=BZa3TUW9qn$@`KNiFcC/(Bt'^).t#k&\dQE>.</>S@[[_c%,C9ab*g%BOlc^7,p"H(.j"XZea=KW)^Q!\6LqSu
%3%DKTJYRg(;/o'Ze[Pgd#*3Mjr43=Y'o\AB%$P,8:3d.Lm]X@,SQ\dpnaS8%m`XSV:tW"L/$Z\8*fo<gRm3\85]0DZi5flXP?^dd
%lk+GjmU:lj60Wb9%7;UX3-$%rhiuSkEn^NUJaX%(1ful>,r4';@KZHd(LhUSB<t="+B\IVS"bjnnIP8[)>j`JoZ#pnYn9au)<J]H
%/7L+ni5#U*:$l8XOe8s9m%;^ChJiQY5s<Zk+YOY'3kHqT_q$A4HG)#Mr^e1j.>"Kg^kK,$#""),/f]bIhp-[Oo.rYYjM-@'2l-EA
%C"Z2^k*.Koks#TQZ4KVB>[30]?4=d45AZ&;])/Z"/Es6tC<sU_gAd\$5*F55')VPcC(FZtkXMiA;jYT>0;YIUn+<i2Ls\N"aHa^F
%nJ+_0.qqd\:,!uQm/:XIpT>6+?Oh'1Je"Y2l!9mnMh1hGe>"T\YTH<9YrQJdnj>RtRqR2[V,4&B-\_!:/_::%qFUE8bQ'_&J;*=s
%IFsa,8YPr_Us20u]M!GNB>eCK6p:Oed"e;u+7p9hYJ'9Ob&Mq)Un3^pi\ol8UDSoaHR#]>[CE'4nAWe)Wb7aQp"'%Ub9,!@BA[+P
%#3[FI?*eWYr\XX[OK+kTS+%`_CAPE`6U@Y,lq+/TjM#t#lS7I+PX]gHT,e/S?@inNXJX^bata=0$(<n?^:h4&!db=A8lX5V#*`>?
%%/?^t`)sDhpUNEg18?$]XS,">oVFK:N54J\/Y7@9p.44A;0hGDj"ZhAK(f;X$NI?pe*)!?JWLVXje8`UoQCT)6lceHDMs'ePMUL=
%%fsj9rT.[_3BPHHk2$m@Vf,eRb]^ME$^X14[78_igBl;-^=K+7P]V(nf-=`RHb)(7lqOYLb,+@5]bj5(?uj>;8$me".iF&E[C9-1
%SBt[ldo*XCXTST;fk+QPXll;)<1*B$FteY++Xm;X%^e3lU-&Ks)^B14!VR(9>3Y-`4M=>:hplMWY3=^Ngm_Na6r-JjSUJ2bci)XZ
%%quU[h]U*i?V]F<%r!*L2DEQ],`Kc[]'DR%moJ,UI1DK3?H_"VS!iJ^chCqqXo-(Q?%8EY#H'Y1iA+-7^3pFrZD=\GEO"[JSA?0T
%i_If)m,eNU;q1&s_kW>*'^Zdd>`Nb+]jtTm)a[R=-m8fIWY]$G`gI-W4MiHZ,nD24Jk('p0?V@L#o!A!'2$Ums)IkT?Y=N54!En8
%c[!I(;=6n^GT=iHc5qUP3H9!nUYkr:*g@$%7rX/Hgm62`Vi_reOp!M^msU6Kic,;MVra@GG:KaDn>,[Jn_X7i6ig9j^\?cHK('Lu
%([(]s#ceg[nPRkiQZBL2UBoYn]916[jb<*Z`A+Huo;N!rB=n4YJEormU><k^5`/r8aS>N;ATg:c@4rIQm`3q0bjN?7S's/uXgsht
%qnUJC!H).Q/4uI>St(`S9F2.hHln$OK)L7*0b^jbggh=#L^Fte#BE[50?\D]7T@)4e;`e;j1rX-Y_e<mW70=Y1eJmD8V$t!b]S!f
%-$co"(qC*:laaIhT][*[Z%GFsI07",#7Hk$`-)VQZ(2GXT(3C`\BXB"jg2,1bZ6[*As+55gR4.sQ?N9lZjm=uYrT\@9j/K;Ed66`
%CF'5M`C&.5>^M2o6t9?@X[BR(*0P4uY1D`*+a6Q*X[B9YN#BVNaaNtdd]Ee/,rr#_Z_SIU85UL-g0pTX*'t>N`-=*\b_[\s#:R=e
%1D^V`epJ'U$&@K*Y)i.C,=>8O$&?+QY8m[;I7LJEi4e.=_sPF)V]4X,G0dnAe#55E0I4:7^"H9:E5%/@V'Wg/F(%0;%Ep&X)TIQ'
%Rnn<U#rjAmmV$%%l1gmT@n2Ge=dNgTN7?6QN9RPLQuH>e]k'Z0X#AD976EflmrmPoNdNr4#TM3]a"nZ<rP6?VVa`C:$3RP9R8r7:
%AFV('a,ftYDT&s1k<77Q^m8JtG>iaj&n,,%?B$MlE,UQK3KSY2-J_3o515E:=U]T\7=#nD\cipI&C=HJQ3)$.^G$-Hd%=,H9PKV0
%`=XKV^!M/jPrOpPH90_Eh]Em4k2I;WV7oKfc_`:KSLLfW8GFRu(bY5)#??&>A\]`unE,ZA=IdWlQ-m!,T'Zb(AB2(0DQb(;CMV7i
%c\+l.d1Y&fF[c\nlaR69IM0\`!kWZYE2PdPR>j;k:7)A(2N]!`)ZG<$GdOC)dAU1_ZkqKa%R8$qlmQaHPF\*SaH,!.E'\A33Jmjs
%3MMFU(VT[M1jKeQkDA]AWDe%g1CiaN0fT]\1"Be"8((V?p$\duK-IeOgQ:"$\?GJ!4r1P,RQMXP=sG&IY)R,b`UV$k8N<:!aIXp:
%0"N8f:d9[b7mCE,:G**Z+%):QEXK.b^%u_/25$-FOD)-kB(F<VirTgl=\`^%TKHCQ"hUjl9k7$QB*KC8&RT!<,M;1<!.,ZPcN>PL
%9HG7(#a;o=U`&.'ks!&qFd^=*?H9<8rJk;TVslT$jrKts(GmLj/DRMUBKl$/j-8rc]-WN,ng%_`MF.W[EHbi+8kb3HRHB\Rk=*5\
%mADmp4V3gf@lEd;R0_t)DDi8PV2+H_5fZ+9>6HMg&55s0mj;ZPYrfUTNZpdH@:1^*DZO\Sf($rU'o!;L,;T93k7en1p+dNC)c+CC
%A<0O]]M7q8Q`A_&@,9]9l/us_](D/XWq6WeCO5T_Ge&9(^fioWb]q;+(.2m5-A8+iOimL<%'BM4^'X<c#,@FSL"Gli32MP.Q1G<W
%qUG(mM97'.o7bfe9o,X(UQkA(fCHH]W"I2J_JAro`6uV%b5&niq'OmnMo1nQL"GlM[5N=k?[+.E'(e0+q8-qCfP1U@kAr"9LD8\"
%nH8Xo0?W2\XonQX0rHu3@PY'a>k-id\E2#a'(XmXJ>!Wp+7a<e=;`DMHo<o[rd)XWiBuHBO;\1#]Y:MObbm[jc/k1DeH:Q'r:uou
%L@c7HjV>#:^5A0m7=;@AfGE`i!V%i%Kr];j6@N+Z[%[V-+`hCDD!41NpBD0jcgYALOTUVSqPW0=r"A.:`(2U3N,l_s18&T7,DWbL
%iZ>![Mt9a-M(H7X1r$s^/c]I,"%SgWQ^#h7FJGSQmc*Dr"H-$,)kRh.TtD'bkdZ=UE>#q8hit"YXM>,56pr214SeZIoHJo:Z0P^h
%P:r-IS)ITDg*`SPi>%U["kk)8WItG2>nN?P5asjd#Y&de*DtJn`"Y<_,9t^Z"fj\h4>'YtRb<\+0a=U+I-qGCn.JVtkVC6Wl>If?
%98IQkf>pqoMf?=@G#[W&DHQ'"l+%gsNnD5U<`9j#Goseuco3D%6EJ6MTVg'Loo,UNRUd#c>==0@gkem(qE"BWIc+d,J&YlXhLa';
%L-]!2rQg!b;b-)s*A=93bB,%-d1WO:nsrlpm[c@:lr1:PY^O14]b%^dciNQ/PWstO/k=(LO$,^WcnFQ?L-O>HLaYH,ltWF#nOsku
%QlWgM<sS%3alb`<*Z*GbmNAl)Q0\\@P%`Y=oc:,e3,4"UJ%g<rOTLX^M&hBXN2fA_m.KVT!.+p9Uj89UT;Cgr^qr\L;Ydc1;YR0^
%dIkERKM^pp[P.dhROHX9!Z^g+3>bVo(En<\bHgu-PD6NpId[O4^;KQN'So.WCqfR8E=s\ep\nR*TTBL=pF-ZIK0J0K-65M+kdfh4
%@=R@fG?P);DaNT>8J^?[Wj(^3K`/lpGgdQ^HK0.Cgi;A^XuCY/APo3jDZi]04r?;+UJ<J?VYrV?Q`u>2<?)Dg]a9],Hln:e]ci<_
%;B[J6na#.C7W0Wj^&s)^E2,m@TGUE=Jrmn4,osp[hCu[#X;)/(hScE(Z7R"\cp.b$TnsRgO!-[&/%m-!@q-D)LOhH%'8'7T0)pg]
%a?\(F5GLm-\B;c=ArZ?6ZU6*52_]kDf&GiP;CTW7r!E$MAhlbR)&jhg\7;'sQM<mA>j?Z*Pk`4sBFX'2>)4%/Vi-a^+s89^D!E2-
%+AVX+!tp/Fk<4nQY[E>"'??i./r$OQo6>&`3,dT;H/WJhA#mh3UpTYkk0`C#?ZFr\*JISW%?Lu[8nFT-6OUkYj0$VlG7*@W7LiCc
%(RAgTNR0CZk"UXJ3r/:*Qn%]0k.S5`DqpV'!IHWjb.J!u/a-GQpUWAF_LGC-&c(at;_L^DE_NMi7d;;a9c8^#+?7,lETlM")Me]d
%=6$M>Ya<'dj<5"kYp6`9*B>.tQjn3qng=FA(WME.p(U8I#"l-1r4oRUk'a<FCLX-D06m;tn@0-l6^BeNK-0POqUhnjl[5=_qSl2+
%<9Uk70*fIXBn<81F$Ho;>XM3X*PZEIJ][;*9V4AcNhX7A'?A)2NX"Q7J$jG_(4Nn+</tG3-Doa_]tFmI@E:l5bf5i%5uuX)YQV1]
%h/73LG9,1Yi:iZ"ip^Q]7C"j^/X!db;j$G,cPVOMjiO@h'ZlMu``",j*K=AN$b_Lq8/BA3U-EbeboI3D,9r-[ngW3nq+L-t*fq-8
%r:n\]3=No\NDPs#EitL2;4^F_`Q8j80/KbT0C2E+K0P*b4FoXu?/E=oPW-8D3D`RZE:A=X7<pH+,,/=`jJ'9nr%dV[\8I/f_7asm
%AJ@">"h>2JqT>@M&cMD"$2aEUT2#$.3-j^`_D.kbp`:Rf*-d3pFa`Yk@4[m0mjF?p:F7Ci9BDk;0#ec*fU%@ZY\-f<:'B,,7TWlB
%k2c?0\XP.g[-R4'=3$ce`c$t6$n,F1T/rUi-.AL$0Ana6W%<[]f3a[KLF[C#SNjl?Mq9W?iq:LU_W@'aJ"8mSS`J5XM_8RZ^N*".
%XYml38b;_Aq[,Ji&LR@GY-P[GX<_9/<<1X=Rr4*bbdu!c;K(%I?\-1FgAGG_g"l6ti2Cl6H,-Au'\6kj";gquLR$[Ap#&^+-?=H4
%e`WO@hu^F=jAX.-EkaNYKi(!7keZZA'7n,OqWG`XbsEqZ'^[NSm-[73N&oq3VsnCR\Cb`^.sq411hnIMe6QeAD0:/?)a=h0!_5sK
%:)R,!(f#i%qb7k#B0BH,I(P'lj'TGIYZH\3mW>JoaWM(.3dJ<&N6u4Kp[TVZD&cUDR&EbBNAE;74e;0-fW^`aFFJ/CEI0V@mENuO
%`aOWP/t/GWHF3h7<;loai&eV1ID82kSC&'V>SMHP:&k$WDffs*lh0%Sl?O'@a*#(ehtG"ugRZS`N`)Ar"Ge/jdC66fEX+u"G4T%@
%(F*`T^s.1V/"DF0$SUe>PrL:anG=-ZcrI?UmT>=(pk\5`#2gHbrCD9oKdnfP)LO'-itRNUYg:Ym(c5h<UTi(j9CNJHNE"Qn=4J+#
%6P!PVk8-Qt!TJ)7pA%_]+lA6fYg8AXm'F+i(%qfd]>n+-kEhba8Eb%.p-iR[Ni0,-n!kc`'R,eY552e>WkORIQ!k't!`!aU?.]rk
%YqjVA^:<(a)R6MBaS30EqYZCU7k3ls;bf.N2:fW.^H%-@hd\/&o;h0JA9<g+Yg74uD8$lp@@pn.r31F)KmeDMI=;n],8Tt^NO6M/
%qkB01VSYO3WkLc](8J+[YGuLbT[IV/_EL2RFM_8T4aLP/TBm/SoXG8*r!lr0mlAt95'I7<OY6'`KmeDs*IP(HFCCfO9Di<I9]$7]
%fGEIm#%D,a_EIu@[Z*9Z>Ym=p@@uG?-A4$""kfq1XV#tLRP1o#kpmiJjWj/QYX132M;S3o,DpBgnC:U&El2C-N8k\g.$J.7\+m*&
%>iFj]El:=Fj;l#;WR;o"n7?m-V>B`G!(`b$F_C/0]^>S)<knV?raAmr7GZM[4/`(B&XZT=`f;o(mY/Xq2Bf"S"qW\D/sA>5I:_4e
%dt-+^l;)6e`lnL3:XAuh6Pe!.@HP?fS!`nqbfg#GV1ij(aHuqS-qDecIkba8`pnoTOY6YIm'MlOs5KA;"^M$cBFo4*bQ%KmOP]m7
%#-=0V^\i#Emt9ePp\t\b5sj(SE/d#anH_h2%4Rkf?]@SAE'3#'a1YXT20(S%@<d6VPAhCBe*!(V3,!IoD#DA`"<@\Y)YYPn6seUa
%S/DsO4:Z;rMb'M!Q_Xi<ai,Lg_#),Vk9ol#IWl]f!aV8@jfJu6?j'@*f_&fa.IgrK>'MTHOAmb&#f`'CL#43oS^Iehj()<3.E!4D
%8IG1N11gDT+D+,rkeQ,p1$E:!<p].+ppk:V)7\+$ln.uWM/b/OpK%1jY,;&qI=G=n:SZncT`)%5\f]VGmdj!o-bV+M&o<.T$cM0r
%"0i_RDa\4olu7haEW%?@fCX-uiTHf;JqZ:7q'\TG`a"MrElY6N?1)t!.A7SZ$=#Lp1@>8".(kIU'H=sS,s6TtOH.?M)$AU?E&W0V
%r>XrK,TCI%Zrk0n4s^o<*#93WXIgR@bbp,'R,IoSp\su#VMJ=R%EXYt=(Ao/46k\;R&9_Yp\o/24n.aO!D@nDmen*S`?"O+59I;q
%^A;c4FnN^i#.pt_gKX<`J"?X[BXR;*p\r/2I/E?lccGcj5Q\mhMtlj4r+]Sadatn6$$rgj?[6[rqrRd/.=h#)N4P(k6;1^3ms"uQ
%FqcJ%'p6mt*K=+eMnMsS3I8+%:$B(R2Gnf2;LRGh[1hjA6'l0CXek=/g4;#bX)O'\)[>oWZQZ@[iPts,WG_7-.TihKf2@<&bIn'L
%q\Z0KG48(AT.t@!^#"/;H]m7"@^'L(6E473n]0^;^9kfVr''!o5Y3Q*1*IO!OVX]Nr'7+o>"^`O`V;n5DS<q!n2NTr#DI15iCi\.
%;qrP]DKdkPWI0_&R.,Lp5,9rNPcnip,Ah7`@D6lSUYNZ6W48/<:*pcEO&!X+5k+Inr^Ef;Vbq\7hq0R!,]a=kb"1m1>DJ3ip#Ceq
%J8>mZ3pjB(L"[qU0R.!]6)ifhr3Mer/8#Hc`,GtI$o@122/R9hX9WJ+03=-<]-GY/SPbNBh,i'".a+--A_u_5Cg^g\]D%a#Xp9Vg
%<g=3a9mhlEeT=!a%bfHJpL.'X^L`IUj!dBD5Ih%>F]L\N.0ki9$*976_fX+dm0d@5mM`X]e7UY;1=+`[s-`kpfBT?ZRht>j-g]UJ
%"=10"JYPh+90*@reX2dhs&P`i7O>sfE^Rtk-]8usGgtRAlZM-aF4F7X;[@Jj9*-nXUE7Y`NnWo+XXF':-,\(r`6G3V9@q`q/NuAt
%`AV4TkJ$L-VqlF_]AXA\!DSQQTBF)YBk3S,-_il&32&b'EQ_jP$:u#4n%K'$Z.BK:=gmINOe'T6G+TGEL\t8W?-%XS<qIAX7:d]t
%gree8LOH@KM`\&N$(q0/AM-D:2Qmts%AC:$E8D62T(':X-?e2/+Wkt3N0%urNiGAX\"_%*('5M\_91ei1-m9Mh]RqJ<<MB6"_S:\
%$6p5Cit_V-Rlm3ZiYMSaUrtJS/`*jd5LD88hlHsYdB`$/kM`umE1`2<dYlJliFs"C^U"k<EdO/@NY2_@,H^H[*M-^RpCOtkSn"M,
%V5Z2fdgG.1#URtFE]0KpqQO,8P/Ojr:_lq</4kfq"DPMp`;"Ij;-ls?1^>R<4O'FS,53/h]dZ2)X,\cJ9#WN2dVnD]SBZjeV-fZR
%(?AMG3mW<ul6?!1q=$TZk"O.=s*,-C0=0cR=2u8D$ntR+k\"r\lg0F!(SCk>'sn8PP*OjBPAYo&2RDRD-PN7SHG)apMSTV&;:-7d
%B,CIpL)?f!bCJl9Oq(Z^..!Yj<7:O<!jQN6,B*PFgV^h.TeE_m=Xk,T,2.IR^du-BQI&CZpT4nQgVAIaL:#$:U4JCaY4&-Ih?$J<
%LI,08AR&RWZhptOaHFKOAtrIX1IOg/RluDi&LVris"Qc1U3dNhonX9QqkOHJ8W6l7a;%"6Ntg*a?l':KSZN>tOr,>8qW\[k*;0D*
%&u/H$;"hdl-&DXNmAibL(f5jN,fXj8]uR2A,n3ha'N'o.lq*gUq6+S4b6gZen1S*K.(W9([>j4YX=u.%0W*##*CUMk5=W/acn!TE
%V993K89NRC!TRKeBSZ!Sh9-.fdU68YmU_)]k5E&>=eU??!N&li]lk+WC-%oaY?Hdl*SP4HUL&2d8_*jL_a1Wr!\ZYUk,VNM>^.*q
%\8coHb.7"\U`??.(ES;I!)AL3X&aK(i>B:D($EHOGkIXQ?[1cWa=lc98'jV/Gdnf@gS*PMN-=1=J-BN%??kZ[$hnLnI0hUF??d=$
%\;AT04U8Ld0`8AsOBC[R(ES;aM43^>\F;1-)0S+Y*en#/`amfe(ES=;Z#-Lf9:uL&n1\,=H0qu400F?Q5P<iUkj.+7F5^PP?C$[r
%4kbUF0hP$WET(@$D25R6)>1ka!UhHWp;01@0AbFnqZFc(??d<WY/Z26c\7/5k:oZ-NIKhpBQXa.<?G;M>4?BaU.6ocKnnXM4D5+]
%j2/_''^riYm@Y7:"r3ni7hHu3>`ded`/%%n7$LqU__+%k5RNHjiLrt`^:,-V`GC:Bn1_MAM84HF7k_CaDEAi?PiO=@6hd*/a%PfZ
%ET(>N%derJI0#fZLV*%0r6$=Fj"]PILN_XCDoMF'=L8dW"KML=_\b.G*#BZNhf^ujWQm+Y*()`0S-okf\@?%Yn<!D(mrA*$[6ZH.
%N4bl=7+_ofiF,i^a5[^%4\*9Vd$Mi?gC?`;BfC$k+7\--U^I^NN?9>@@C-CQ*JF<T"qMUm%(u(Kn64V@/j/dn`>6GO'e9AkGW:(?
%Qd:A@_j9R`YR8L700F@HA)D-YFI4dfGfZrNr,4Z-12ZXk&&XU0W,XnR$P1.gH]GJ<'jg^nFuVagdu?3QKnmSCSc`8C(aKXVD27.D
%;;;Jmm;Tr6C&O_Y4:K!lOI7)`?[*DoV!G4[LUch-r3jKk4"YoDDWkqm@M!RU$P/#tCkfIh0Q8u@!6BT\*S+H5Knlr(3_-sS0O.[e
%8CaanWni-YNPL-g"]H(_Bd@j]Qs2Jsqpf`<)\FF$&:#@hn*_m'Uno=<<OFq40=!lV4,s;[S^T2L6mQ/gJmF.3RV_=EP`i13a[n/9
%ST]AY]XF6qXr_E$k08T8[m$5#-;`7#[s31!C+!X8(MApC2+l.WmsQN=CVR=o=4Vl&`RU7F]>_tI=&UR_IV5Lon"jTpGkc%^'LB!,
%4-Fc:=\I2jrlL(?o_nb4S^sj6d`&J+8XK=^C[%kjq(>rGh7@_,][i9aQEF07IJR\bH?u&CQ(FUdhkcZ\[4Aqj[r^!`EU$W;h(E6m
%S]Bkb]-fP?aY<,=Mj`kSj^u>(3:B2Al.f1=Z?Nm(@_H\d5M^f7(M7;tc_esPqY&.d`U:S/kL[r=Um4)7:"@ECqjKBhqY'eE^Uh4=
%&sL"N907F<D8?iE1/)_hG^2:o9iihJI+Ip)-Z!_*jL*Hf!nX4.de94Y>`d'F=Bs_Vi!YYN8DF*NX:^E`I\bTGkP9;uA80FoDVnX*
%q:ikgF`(,-DBEah`V8qS[!R,ih3iRIhOp5oaTc#M.4hWi-P'+`pl_/?'p?>-_KG8Mmm!&BVq&/p#]m>7lRKg(e@-*f'c,tG,KCRm
%otRiTq:--1\WiYsL,.\7E]S,NPNhnf9n460(Oo/N5V;I34P31WD5ie2qY54e\aVCDelqo))/7Rs7?p:QU=8\MNk@]5fr:7B1+_g(
%F6+h'`XOC5P[fpTFjZB$+!9h0YNm9Ps/#)6A-QCBVlfEj,c*8!r!<uk`W#^>>p+(Pc-l^NkC+0qhs;pMaDu#%IP.mt7iL]GaFeB(
%r:OPk=aaZ2qJI?s[LR4nSqoMm>&9er\U!?=Y(8f>K40FGV<OO.rbQ5hH(]!2?Z#9;qcW(_Z,o2<pk)MuIdg#hD5JpsGLmTA#/^FC
%*.<#YmBd[bhVHKhS>R0ZDL5V6*DOd/:S$B+o&*cmTBaErP5IGs>d-;76/)uCi2i<#<XZhKYAU+C!P)kVfm70AiH.]cpZs^E&a;.;
%@e0*tqd#j6PWa@iZc<kh.XCcOi.#Ka$D&l5&Mi6Ap?lTc7+s.5k*>;IEPIaaQ<%Xb58nTE`RTS6>EGIV]'eGS'"qN;ic8m`A9%G@
%C*EtCUJ!4KEJj>mjtFp5/T/j60D#(+[3YK0ajP'<:<&XC@Qls(/#N%6pQbRNb7l2,]96bZ]d+6DgZ]>Y.8B<#CQP/i=[r@.\!$Z4
%Zp0UuoCa;*M`CV-XK5Y'8sB0Q;YaZ7%JsQ1qfRp)/tk`^5B!mph6.'?s7Pa*g`+Y>8*^Y3IT9A+flL&>.DF"j*%J/45;R+5?f)'F
%(j4S4c'@Scr;4d;;*<[;Ro?0qela["lDTO'P1V-dkmn[cj:OR)gV(kaUQue>FIsk)=5HW5^Ig9]X.hT@LsA13/+!8d4O\l3I-TPR
%ikkWi9(%">o!nI@4Cb(Z<G,Z"3U'pq;()86A1SM!Dtg[MDl'E=NQqrlULd5MRQHafpG=Nc'mlTSDW*qE!g/R'\&nH0q\0^<]k+jA
%H&i6^NQ^C1XhLB3CA`A\_.rdo>/<DmaKF>ra[__2.ttXVS2VWV=d.8E8A)Pm6*gdj8nH)iQS'Z4]fAWmr;k<Va@%E2jm!VPGKgP<
%5,ZVA-D,8O_5'cb#D\+J]"4N9h0(S2pf0s?0;9UaA6Rs-0-[K8>b<#0P5m_W,/`KqIA.K[JOip-l,,@#Dm1p(22Bl(p"]5scKj(_
%`?euS,Y<JIKHS:.%'-X9;;U..0usQIS<@M4$haqjC%XP65pBD[$uUNhiY7(pn_ek7f-_M+H#KZ16O0pG1RNfA)s8@9IP#dGhpfD[
%[-d]nbHZ^DPGYkQ(jpb_hSr''q<@7ug=e=kaAjVf?/=@d4de>saRX.'^RUprVY:HWgXYo?pIfdt4B4"kes*mT[&2/"4&6)[HRlc?
%@dn$;p,1h#KjAR7J<nS8;Z+E;fkK*o$k;(>I_-l_o^q9diTG2`h9!EJ?1'g>(A?$go&e8!Ft:?-?0`3rFa9IE&6cffc+D7-qoF@s
%OK_S0S/[jK_#:$'FUF&7qp2Cfl^RT?eS9SN?1a;P\Y$S,UI(q:QRU]k-9mXKa=q4e1>Y^rBa5'*XQsBgiG7j'qF8S>193@QQgU'M
%\T71^*kl##LN_6b9eNUCAs49+&K(qmI)'n1hs>\(`Ks#(?:TG^;p.\o"Q@nbp/`a:b8H`W'8^T^oZ#&Mm#XT<*)>Z?=$==1]CrXT
%R9+kB7_GI3hoYaMYWbfSlcs(K^$Rhhhs-$ClIjl8Le^E\Ku`26D%*VH)jfC*SQ^$A]m2bbqm4u2CYok6dX+nsV]Vs0":<e(rr#p]
%*1=*rI%&5OQ'k+5YikR1B<V3m!X%CD0#G^a!mVTG3]$!s./EGuL>V9O>WN.[\>p^&grM/OXkn!\l;g!7[fZXfZIXN6(+<3H13I_^
%WOnVfQ$/4E9YED0cM#9:et/IL'1nY-fIeS!Ro[?VV[MnTjl_p+UW3.JrVH5M1jP2(0Up`jlOt*!Z5lDEHOo(6Vm)f\8!5j6SXo/O
%\]/,CPFLmr-3+@jAG]6b*$?hZbp1ClC=u"W3H2ffgfi1J:`*qM^Ns$2p^KrMpZ'tA)BifGR<9%dTirC4b/`F#(hQ_r+%*.@5\Z6j
%++.be'TV(8M5/Wk11biQc&TN5d65R&qoOi_Rog%?A^q@#o3nm9.BUpR,JspA@PH/0qT4DE'"\?-Go!K9G]NT(]^965.A"nYo*a;F
%Ep9iJ!FF[r3.QeF_,;3RBGWMF7[g-:9BO[/gF8A[nHSXpD/TJ)NJ6'JkSMCof>rsk&>WI'F-Gaa9hFX2)r%9'Rnq#9Y.nj[Y5D&V
%pE,=rZ6Q?jc..e_`XX9o31H$.S7t5K2WWUphM&ulqRX7`ICQ^]p>Ic0GVr5\rQHcc:@d$SC\LcFNiJ=N(,f585@<uLo@N]]qc`#3
%Y%7^1H7Xu*N@G@6N*oQ'PjTq'ip$'e7[4M$l-]7P301]:&_5T###p+b*Gp0?f"nj:Mbt'M1t6aYlp_C9CrbkG-PrB?/_bPD3N+%V
%N>dW8;;ZVr0Vk!BM&#eGlq2J&j>]7ZE?QB47X*jibC%0bl28'n8q\UYqpZtXS%;WoVI(eX!0NH/T@OH7VHNgS\H3]21cbU4DR+6B
%91>]7GQ##Cc*3pmaBiV]O5HjpWGb6H\km])Hu1cjZEIg:F81FF!8=lLrnl6bK;ptI$Uh*WFMUAt>YjP#"#i@>@>oaV&FjBS<Q?P*
%"@`>@s$#2+!os-:+JJ_m[rd(\mq5mbA6HI2$qOb;4r][5=XN5!@C(2GULc4]T+/nQ/.HKeJgF*fNFGf*=Kk>1EVO@k<Kghqij0ep
%/lGjm5)[NnE40uhirfsakTJ3#`A`"L1QkYGftKQ$9"1V@Xn&ZZ@X_fa5M/ReQfmr6`U;4+T(.-4q0q"#.C>`(:00@7CGS1TknWb.
%$O*q_\WOLFJq[SB]&SL>":G=64Yk6k"8.+t*dH+CNbH?@V@7]/j'mSADa0*UmsEJr@5Dh=S.Q4FV2OS#s+6HPSLcP?OQ"@p,I^#^
%)>)\;6c@H.$K]r.6c.s"]DJ=\)rYN/X-).%(XF*tP=LG,V5>=i&3Dt-T4\9%14JT8Q*cn<jgf,Mk;2j3NQLNOM_#lGs'4o*2a*Tb
%65'I>/Ch6M[rK.O\93)iq`0t4_nYQn_;t`@Cf0<AUt#L2s&S[OX1hEcWgA1TF//4Xda;O/PME*CZd]='3?=@Hk#+:KjMQ@U0ZB`-
%8nmeHd_bAM$>*HigUF"s$k&Q%pAUPncOV<$jk[tZ[tFGTg@""PP@=IPh&kRBBU%>nXg^*trjCQ(jJ6aJh8cXq_WKb2IGAcM&HAfC
%+4%G+h0j&5])upKa]Y?kVQ&SaBdqXP1/3n(Yl9FH03LYWcW)dJ='m>&0Z.tF$;F+L'GU;ChCK"D+`)13CXPDI\oun-6p$c[3WSP-
%S$!JgI4Xe[D\O/n<Cp>;Wj;n_9hqj0luFJ^\KJ$s2L_r6S8gU*4I\o*lfmI'p2%q?UQuOM.Zac>/#6ij?f?!98Y'.4OGRV9:WpAr
%)-Y.<0X?Jc)2*PAp!e8<CqI^tcOP?eH9EZ]+^FqUhf&/Jd)P';q=GLZkpJV1+$$mJ'6p"-rjf7YZVV:;5dIqI5.0qM7&I!OOpA:^
%^)%`9DgFu&[m-j7*bIEZcJQKk.=T.J\5L(&&II_Th-`e.Sj-K@2tuZ%AL;n6+b.mTY98>OSke*-4h[eZ+sGjSTYV>"LIVpe]n]N*
%&%?F=/D=>*\a[sHh`)77AH<*!pQ]BOKZoT<gFh*<`5BGKidjj;A*6AC.f.Cg5QVmi?!g!SU"^3>#Bebsb0j/;h!#VBK$oim&-E:L
%AK;Du9fB<]MMLp!h1L?8eD'Wk@fS7-VZ]E5X<q:;eANdf[#b%P5,(,@i$$V_q@G)"Lb6\%@@T'E*d&)gDY>'MO%bLdi$p(XHI]Kc
%m&1;S>bZ:!dZOj0:%/GbqFJpCcKFU*(-EU6)g\_P`ZT*Gl$ttWmRVZGY60Y=(M/EonFi!$Yp8PrY>gC%:tdo%"sMHjP#b`nm!u^X
%d='(jYSkOHe?VXr]FSMpiNphjmbs1AXR(PfDRuOESFLCi^(kiR09lZ:>1gEl6O4efV.G&]AH6bsqGIV\m'1h#4"QX&Pa7S(>tD1"
%MG7efAX#b_9$=6^Cq$=E*UbQ-52,>6lC*A=+b7):#t'H1*d&)gDC%HiN[U;4A3kqVgCY`lal=beljfi=Q*_aIJ%A("U,j>89hsF/
%86L?mm4">R?>_=O(Y[3'qlN$AA8eC<EUXoPEnr/_U8?K8'pq*9F-E?4M6"jun@ZEV.ZI3(%9<g[qmE64lrDJ9G_NP.`'O4;!k\rQ
%2X8<4,d!s'Fb\s1q"tAbYr7Y-M(-'i,X7V3H"`!K[cs8So]K/NMR?#slLaB,/$$a;hYc;S["lLtjg<N^[3$rU%sDRAn,]Am_mK4*
%9!6f"A]+fqC[^s!8U.Hr^&Q1rSBqUJH1u!XAA^*G09fj-B?KqS-1O9:)+`m8bA5d+,`DrKHc?ZEb6a0]aD]B\G3?UUBp6#lbkU>P
%P3onU;]hOFBNRPQ)`uEo0+#<!\\*-D5?Yb_qZiN(?/?;4m1NH'F/I/#b7t%lQPo<!^4%e886b]3Rk)q[[,]mKN]hh3W;i>=G&Z@p
%lfer*ejf"(&jodSWQsegeOnRu^X>lcE_hr7dQDd&oCj%m?D%)PPZ>FY7&J3&.UO1Y2ZgZ@q7SWs2E-lAQ2LTp9W:6`51S=nod_^V
%fT4n,1G.!&ba2Yg?ciW'@,C+SO-f`<kjgn>pQ@D!Qhlh4hgOa[Zd)q@Df(rT='Y*k]WP4_gWq]Wep2?.-EQA&-FmWA\'DJKR?*'(
%Zh!ujrbt)IiP]B%ME6H`$*h862(O+bcM?,E[Q;mlYOYP_ZBXB^Pq.hpY0X75kj5L#WFiV<=hF"g/amdVG:p`%.-BiZjfS-ta19(A
%dcM!0X]5o`]Tfn[12-H8`n6/%\gt:YSRo&@b#$+fp=a5'JKf,Pm:(VQRl&^\U==c+W5PL_9qau:9XXKogTm0?Q(lgS(T=pY"]eMS
%:M,mid_d79@(XR'#s['.?oqa]_+-h0);X^%cEf1Tkf'Y'=3L5aM-"?-\&\7KaJA16Q@`kqN)WBFQ?gm@ncGtZ9'FD":0LC7/V9O:
%\AS_E5M!.9K@Qheg(uPS*PV2HVmW':E<[CNPlm._)7IE<bsc50*Q*ouR,HgQ/eR`h8PEmf*bBU7l3YEV82@)a8";.c6JD9cM(+WE
%9d=*3VO>MspZg<&BtO(9CF%=AJ#l?AOkn`Xjf:kI=_q0?Qdrj_q.@23?#=ZsbDGT:`QnIsWTU>DAu,hf^n/='CjEP/W.\^oMP!mg
%V&(<rDWfoZh64Mko<hKq?+O87-6LO@/q9P&H&nN>bs4JO".[P?,ZB&\2#P"]nK&THomEBd1)WQ+(T-cRp3*XDG^OVn@6l_7XOkYO
%23<Sqi0s%\XCC9lr]\*e\[!BJRI0h=fo)E!rHc3In@D`=_VtJi_]2fF$Ppmm@5XX6mF5$J&l&rJi1CbZfYq!6.6IFn;mALG#p;jj
%m\Ygq/*Bh?.'8$-;<a@C^E9FORTmC6!d"84"h"7@@hnsI"$^Y9#drFRY7rRk-d9*YAk(k+[%5Y7^6:kFc.HrHD9;RODHsZZ3?)Z]
%i@>a_rXqi0"WM-''8@)_Foe3Ii6Oe<;kA<]RnegK^jX)p]?=jqc&4q&G&r-:6PuB`S:b"X@?NAeQ#jR8'$.@Ip19-;.g:jm`=FVl
%&PF+XA\kCkch<\FhZuEK6s8[=-ptao0t2=!Cs95,#rl3;s&@q>/a\no9nRnq7%'[mb]@9'+*Vd'r-69<Bnd-SfZ+Z<FnO%H'CO/P
%If2Qa`mA!t8\uq+e_9T>f%'-0lcs/2YdJVae[V<Fa4PiCGfFPRZkUZl[Xu+jD'F<A2u2hh/UR_SIcTJT4@;>`;0^=2e%\M=fCYgT
%W2B&;bac1EpFn`K5='gLZ2K+Jd#i8!l-e0`#"%6'ff=*`+5#ID=;!icnl8S@03s*(0]@B_j$VkLls:Ke$!+DtcrWkV-,rrTOQV)"
%.M?=e+cDooRJGD8rN#F4YXnd,B&<J_&Z0C%/J^It1%)gNlM:1B%erM_WuJMdrON0;4,BT<q^]VoP1n,2)LlXU\KcP`MdTK]J<9_T
%T><]6Zt]ur%Jg*aoM=f&rrYU]-]3<<(`lWF1M+R>a5C\69URWh0hBXlVT]nE(k/(DB?H1\No<:0nBY!h,,XfJVM_nR%LJj_^R"gM
%`YA.ENZ)Q;PPd(_eC\+"**9T'WuDjM?piXt9P<-$I'PLEmCZ*`V`ImC-`^2*dHnPei&Oi'$EL'.qe5\)Ig<Y9cdD+9m%2:-g;P&#
%%B'X@iLMCda`/H>]g_]HA&GT1N9j:8!^;7#C/]%G8nIGfe*2XK`h;?`5@aC4I'%4-jnmgsdCc7=-N#RDH_Lfd2p-t(IWq>-D;`;o
%^k;BS,!<;'"94t^ReC7OiE=)$*],Z8gl"]Gdh.]Bhq`8sJJ5DHLXPIEK*V(C/t51J!Fa<ui5aSq<XZ`2S26$V@bC#N*p^*?=5ehe
%T,;at*.iJF,,jE0B_'A9A!B1H]<U<8ckO(\542T/3$YL,rY>$%(@on6d6Ta=_A>C+>6o](PDRRn(\/G;>&c>GG3d8[I09hUCPT'a
%):A`No<Z'k5_9&<e(;WMCG]I@p>V?<2UZ('aOsePIhH2qpRVk^EGP;Gm>R87Z@;N#oqQG-:&K]monI"_$%>+^qH5TlNJoP43G\5f
%/a_u\ks3ra^+4PlG5#ZKd%)jtWVEj`qMaju9+3;\oh_)9g$%g91]_]"ohpW6BlU-FmPC;(qBk/ig6XId%'Yg_cOZL9BsAK&*``8$
%P]kZJ*0'^]Vl!oOBr1FboT>ZUrk*1r285%qJ5AhP<I^a)&M]-g!!1"c_=UG=1>]`+UQNN"U['>m+beS':E0DrYG>CHCBa>"I5tjF
%Oiu7lJd)8->O\VQYSr,VI.''cCq&?`),>.&HN\msb41-5EL<sYj`j+V\2Rhnb41-5EL<sYj`j+VGUO4@V&W9eEe8dr2(2'WSe*3/
%$NrpJ`tP0m_h:N/`tP2c,Gq[nj`j+VR!0A_V&W9eP"UAA.-5\?PSiTkMc.P';/SJQV.NjK<*C8hgU@4s3BBr#O'A&8^g1.)Xfd03
%:cAJS.j[_<>L'I#AR/'iQ&F^q25:*Bg]C3s-r"$p'3uH0aP\0>mI8@HXCHc6Mr-1jVm"kQ41Db#)GPXp>(5tSZfV.2o?e$ocJ#`5
%mE"P&cR_`9Ql#?JX=g:t*A6'0L?,uF(4L9D_hPu#?Si%UIa1rIU^d3:\XjHNf3p!lO@bMdjkZu%Bn%_$I=$246\E;QP73?P:2f\o
%,`uUc'ZH-%4!uYaM[_c'h1TiEp_#]ZB"ert(%EQ5J7f/OU>#"BY_i@b?2^]ZN_9=NgCo(X$2QlCr"&eO=UA4c'8irV+$)ZJhBr4m
%@I&S/T/_F2?a<o'DSB0>es_Rrqk(e^_JYEqY4hIDjTKH!6<^Q<;IiPN$Y`?Wc/Tu4$dA6SiX[KC"omBW"ok135J-CqSI0rJ1\$6`
%3$<_L-Et5tZBR=D4?Q2laolu\g+/>S;=pBHckRe#-b^u-:e_b%/jQe666Z&,r=Jk.cGUe44[;^_-?KUpI)%rO'8iZ"<(U.(R\aXR
%2$]lXbTuE3+@S(AWhRm!L8H1<-VG3U(`CFl&nQ;:Q]WiL7$qSLd/fu/Q:rF3N3!tu#Vj<mCm_'_oK??/iN8&V.WdLA;97lk)+g)n
%qAPc#:.L\;bK1'\ZmEm$acU0@_4GKL^8GO!?$/#'1T!_l"<a_G+@%k:P>8n7:X*R9C`uVEJg(b+`b&gP[nKqXj>*%#>5Uf.W#5_P
%Zn!.?F>-XkW73CniU9k]5o:a"KU6]4VQ_;:>q=B0F2>r3^V_D]l)Jes%T]]BEeYb/D3f6R8N%,&\8m*:Q=_>ZOu<*1c?B[T=JbJc
%FEU-ndOa#oRGnkQ&17Pk7HYW75bopTY`MgA.q;,-ljqSsJd6r#lNSgV'D__8gCfoNNbfk,P(48Q6rcphj!O_/ZcN,<QAh#k<$43M
%b2gVD\4i;IEZf`GJ@'uAC.;)0$bO8?#Zl!1PpfQ"76../$tuUYN$o>Ld-8IWag;U'd=!AMQOT@DBGd3)!:(>THNuf)<Tu>6\fuh\
%`0i)F"XA/+%mWVL)X3m>63ggc(<J"k"(D'Wb;i"-An2<KUYW9T2>D\/jX7LS17p`TgDlDOA1'67;FCeYS]R9m!1Gnt`*ecWXu4M`
%6k5RsD'bZN0'N_g?K2]cFQ<FR7oc8Kdkm&DYB(C[,)"o\VdnE)'Y8C:Qo`tUe&p)6(cg:+BnZm\16A?JqP9'a+S#q5Y6'BNfD]Vu
%<)$:>F]asHKUGHs"ks%SW$'X[7:6^mZ5mKV10_q`70`JVH.e8SWFYK5$:U[<Y/iD)VT[O:4d,sl!eI&//X&K(E*urO!iG2,nTXjR
%if!8W:/VK,76R:U71tPk&DZCVb5h[_P`W'S[QuAlL-csG<%t&bK_5tNY"M_-WKrRHEb^Vl?jUAF!&=:"r&9mb6751h!&rP?_(NjF
%_dtl#S.Yh$'&_4CLl'm0(2!a-4l%=3U^N.f5W+oEU)iK/.V?s^*W[1PI@P!`Lo0Cqe--,-L]-AYGC![7ia]OgaJ\*lS'>-h&^S1V
%IJ-Rg6O&Z3MMfQJm]l_[E!mdi0o,s/Fh6m"au0<`%%T/F/Y``>.m(W5BNr:GBK8\--li_N8.K$#Ou1^'UZ\R<F1NM+RA*.f9daW&
%'j6og:@OKh:#(<(GO43&2(No!aQ4P/m'2)a2&kjADN6+ZrI!#n0JsE^Ht>3hOYEqFBVmftQhJ?pko,XngmOM8.r=M1[Zs#1aFoC_
%B:0_?%OWGI"+hT5%%=RrcMg93UfJQp-HJ$.*()h`P"Y!Y-n9d.aD]S'0L[I9*Jd8u+ks1TTKr_lm7:[XA[(],)tJd_,+4`D;/47i
%\c<q*8d:*'_A:_!Qia'W(J?:j=#4H^U2iOXatYsn46M?t6&Z5T.L@U,F-3::-I[1)6m657];Fin\[XL*B4>`a$=K9)<:HVr#/Fb+
%Y8Km+Eep(p-?:@D"0tZn%4)[ha>P>]_^d*r.5cDWEb%mgp>/4TjZZS9Ud[-DH(mhZAO67SRl0@U0*98H3nm;a3N)B6,n.mhAHK2[
%`k?%]PKf@-SOuEdM8B:\Q9u<"7dPO<oIl:/g6%$o,t^f;g+Q!^g_p=)bYXFF'bar<WHS=R"/HL&Kt/f?P>h[1\.H7a6+UJs</i;>
%N=q&I1ENbp8D$1#U-OPb,`?OQcJ)/`5Yb.E!YAB=!4:&`7qdCg$kt2id4/e4=d2A^^@`JBG2Pl!9>!>fp=i>>9DIn^+AaIPR#9p0
%i[VYk&2B%=#*R.T\>I`s0`aN^9Yod04,s:Q\HkT$,nS(D3FW9XZn#bSjW&B3P4Kkie2dcU*(V*GS4*lrJ1/3@!+G:(;p'n2Md,NP
%dLcJH7;Hk2'-J]:fR"%*dkq/ZRGu.86tnt1Wl_WYZON5<*"nXe3)^Km;[qC`(;lH?g&+3F3LNGcg.9N1N!^hoil[oHKT:)K9_X;,
%?Cbe(fKmEJ>_ou/[AT1I@dcdEUdA[&;U%mp7bB!8Ak=loMJ%jYGQ>kU-Ap%2(^NWoREC-lKjb:3!MWj2>:=G5ZDEQaVGMPsb"CY=
%BB9s`F0Q/fdhjcOEWY8P:ON_gZO=X3Y>?+]S&([^Hj73Wb0$GU"k;eJZe:d@hbu@cdZQ)b"X-A\!E(43Go^7u>s/Ms$I:Hi%/Zq`
%N=`OQ^5,Gp:B9U2!J!ZME]c$e>9km+<>T-VVSla^_1_mulFPV?U$PJ5&g2KpU?a)U[r%%l)C7,f?%>Ls0XR$h,"HVY@Y*R^!UA2/
%YBtdJ!>)!KbXV\_6O76cN@QjdR1+c&L&c6nM)2Hh\/Ng99-8Ze&I=UL)<j8pTe]9ue2`krNZfePl#%)DYo&Z1OVMIlK6AC<$r/h^
%/jNBm:.jS99k";4o`,7cjjURS7l?Y:i>Z_,5$>0ZjTQ)]YWs#Q^8;204;Tg'Y/(TFY&[/?3>^qM7K?DCQO/opi(a[)9ZM=Or]QrM
%gF0B1-:$fP>+e`r)^%he'AS4%k^qI0dfBMW@.1NZ7CrpMN/:6E5VdV,Jk$A<Co]Bn^hbU.AgZ5+B09&V1&K]M#e;$q)O.U6I_<de
%K?K<7XZj$F3*CPN6%1qi(U>6Ag)=YaIX?UD2?:U!HXM>W!/R)pF&]GCXoXWXl&LDt!-+;EMb(f7bTc%Y'*rAZG@1cNc-Vj-6O?"#
%cnX6fSD=KFj"cY[6.dQC)LL!1YlW@[?uJo(5tuRiRYE$qU]\st.W_ZXi%@ce75642JDeg+AhsHkmA8JIL(WPRgWa7Yr6Y9q)8tMf
%ndmXPgJFinJB""],rlmnkhiqVhf]@,(T50qHg93KHeScO+B;kT1<Os*.KITPW(pa?M^iFGE(a0[!X(Y/e2YgI!-+Mj!GKj40m:Np
%%\tQub9RiWA438gI=bA:5b]GY2C'V"FMo89"ninmOf2d45d4HQR7@fgpGS5cnX(X7Sh4A1"m)\@XFW0#M2qPCAY'>Vr+OJ+5-af1
%jnll!JTF;Br\0`I6O#oc"[F!%K\<@<%6,O4iM%$Om[``@_qO?PN5AFE;;l>0\XP(krIdLOaG5/1bYf`29hCs0RAEMdJi)'CL`RLK
%9.9\nIRp-UOq$\PM2h]=aW>4U]+]_T6P+:2l;mO#!,,3lO80=ed>5?mp^dF&AF<GOV5h\,o-3oP!%;n2q@J>Y\6%"(#_3JWXgrfb
%!&@8@I0]gDe8Jh\KF>YF#Q`"o#_8S.[s\O4W!#OA*s-)kD1.Y>3)^2R/9MJ20oG0JYZ9j#6k4-'lkX&[fhMYoPYHu0&?m`!NQO"(
%!d?;qC5rtdg/#i1Z$2C#8OfRDbTi,5:>@.RW@+o]E@)CIb_Z<jN]5pO#83$5j;(@2@9DY[\00R`Y^s4rJR)+fc(#%V&LT1l&NDN5
%CS2>lF/L/qjrGS=>nDa="gBX:,FbP;4p1jf*7"'t!2q?Xi'\\^OJt99"B$A1Q0:W7Z:*3)VMS'$.Pk5nW-DIBbNDV'!"?^WU(a6C
%$LQ\n,&dmXC-(b`mV#Ab(Ds;K6WM*+L*4`+O/at>-0ndD);Cr4AigS)@;':HYT]_S+TNN1_?E=>J.R@tCts,c:sS)r"G2HWD`\O2
%aJl&p7KCB&!@l-L5To5YM%UFEC)OL9\IegMN:+1f/g/n%_`8BO+>R+ce;XG.MjgT7X>%Mg]A*Ypb02)nWN:Z'#W>DHFng=WcJ.,M
%h$>9UC2Ygk!m+enGnEUI'N*)85hX:S?"@9;FWQZffU:*CPS77501J61_qYNj:Q:OFj$k/nlV+LW)Z^KsiL(YDJoJ&&!2:D5]sE>n
%k!f?(Z'"'9^pGpZ*ciQ&Ebh-3\.PrU-J_C)4@/BiXm?XR6I\_0F=p(Rj$Ha#&4[4+.61!$aAZUYMFe&-hmQgiR+2%#[KZgG+I9iq
%)L*ZE6VqlFjlQP'#ssLWh`3@.o)>M`4?ta[2:=QOQirNk9rbuh\B4k5+H7)4)')A85U7g4,Wfp0<AYUK':Pnb_l5'/+[BUP[OjrK
%Z:LJ(jIlYPM#,\u,isXIK4+doj$9?pp-We+QmiP!g7.+)F=]nO0GU07;nT=]Y`Ng6_0uUpnc1pk-6gN=:7?dTJqu0^,boh*.f3'^
%,>^TS'WG%8`G)o?<+W%#cB&0<l7AS2<2tNtDCKHQ<@u@p%[F&ef6(Al;@[\DW<;56-aU*hdgoi3IPMN^!0d.M8Q:BW/4k&LW!Wi;
%2LVSJ+&.;)<L$[Z6tEjm;hY=^>Y]*)Uk?\)GsIuOEF^mnG13@hde=aX"GhXQ)GZnK`26<8BJ3`4?0VO%#a)c3Di,'%TMClW0$krH
%7qF'?PVri$GRK7q2@2'-bq;JTJ1fMD-Q["PqbS+S9HV.CSlr!1Tm_rH4SB$FeAugsRK*JHXKl(2C5QeeEFt,Wc,QbP?%%7%oOrjt
%#QY&;.[jV_oFkhPadN=5;kRim<$G2c:?/'S6=g9+G6X7c.SF7OTHpj+#)[^t+`f6?J'hgl9SiDPo2).1pJ$49-3@1@s&#`u6Ans"
%"=3CLX5)4TEh%+`lKtMg1$C#RVD2h9)"^8MiI;<"+rJAZ$)jk,NeB=<o[GG4qN\V1!C.^.^pF^h;q2SI`@l?0*jp34[W=eo9;X%B
%NZZ!p#-&;YeW;Rqf4C8#JVUHp/[eGcgZ\k)SG&W%$J@VR*47lE8d'ese1RHq[Oj&=_&G*LM#HPI'SC%^k]V+pDM;dZ^C1N:+<KB"
%Ul6FE)(IdE'G7/Y/:rVl3Wl,0V:-\)g]tfm&.F'i7+7MXCqJ)*T+)ja@H9[cQ'7S8#O\UL.?D\\ZlN76+;[hT)4^BC/;aE6OfG9t
%f1s5J#^fG1bf-\F8F</$?uTr8OIY_63\\Ec$'j\8+V-kR)@V@t3`S9^`J!S0<Ub;g$W'biL@Fb.foMPg]^fPf;3C-)'aQEdWoFu.
%i)h-JB,E1Y"&%2S.W^:L&:f!F&4.#j[k-dTpm[sBI)X)4MS)"9LRKP&Q#q+7Wo6JpS2]+i\""X-9XI&-\edDKkpaQH?0S@83tQd:
%UOKi%9][[afWOO`!6!m=\,^#VO%"[=3`pbb2;G-XFWeo>BC@Ptf8Mc\-MY]A)^:%4i'leTqZ8'Y2_uTI.eTbm\c<LL@$q>*CcQ-*
%iir63!-+Ph":A%Y1>2;_K:?VuI\anQd#Z*^#s&Cb$=p-j3UXhVF_A]mLmT%jDNm3n^)ph!e`f__=$an=B$*DW$R$'@0Ms!c>I,;W
%>m0FL,0O?cr"NIWV*(J96R5j"W5!$N.ir!L5g5\JFTeB6"TXhb3_R/:\1D;MN(gJ:3rmX3O[2*/U(p'%Aod584U+lblRDJ%d0*!Q
%5XW",[ll;EUIQF"bRK3NS1fskau&8qo.bo1)Im?V/!^1s*`,;S9UM,<'4$9jgCS@Y2UFnrmtmfs&*H8-T9Y%Q5'(@P]K96hgK$%5
%6"f@<p'e]A5`$4@k`?aDN+l,s7j0FEAqOu!^C`u1H;]GJ680?d:NAI[/-_AV3#U3\*5XC]8a/PtL#rsT?-*f(mK"W2OR6arCg-PV
%D1K+u*2ZThlh!R<(\P*jS71nSF*gYONlkR=hM+V0U9crl@?a?gi&"r"Z?tT`F@NSkDGSC-'gD$!bq&\Y-p*I^gM&AidK&B^bb5=\
%cR_ElM&b!k$jUu)nf\e`0b"drGbG3*#G4-`1biPU[#UhYP(j*H3!HSgAX[=job0YBYhJS*Sm,UF.cj'AJ-HQYD$$lH9N/ngF=>3g
%PtV4O:_h&XUG0as;X%De*u6C@`Y)0M?pY^bF>tGaRb;K_9C$(TSXndJbq(4,a<(aZ&ri=FQGX_RF=F+b+GSTh="ks3'>mNufSL_%
%#Q<d?cU^MDB#$G2ilN=UMs$%\VFuQE+BZES!=58tl2hQMYek8.F*QgQZ_FIgo;iFBg<J82KXEX<,Fs[N*"<HFZ9Fg)]Zu_V^fCKf
%!YCP_*31Wj9nl*#>(A#]4E,fhbA>[.cEo,p!s?u*5R&^a:a+;^-EP#n@pnR]&2:4UH.:n72?bkAB\f**b[>,q!24+b139usht/3M
%Aa8=o/?+YG$4X>Z/E%iTpJ+^.Ah<h!-r4sYiS;0.`#N38E$/sD@+hP^7YaOQXbXhj31C$V)JY?tM5^ITZ#q,hjp]f[VUn+G/c>jh
%8'J\).-9+g9SUN!^p92e*)5^W!Kn-VJd+@&Zk9G4!Am\3/j!`*EZCu4bAm[FapOsV7&fZ[2P&GJ&GXFZc1'MV'#.""@`lcdAl>$l
%;irq0V'_]k!lWY[PctFH,)Sb_U+,^)Aq1d\U<+Zo:86EDp)M4+j-5R;d:3rB:nJj')[ud[:LtFq0)KLmX4kCai`)a_VJi'WM]b]6
%_qDg`UHE,`Z^?6A)O_nqJ9%T)dAYADN2t>>.i/>Nk+3W&3Ja87=-S)T`nQT[Xr(+IQpU4!"p3.H_sB1H3RsN1V%eM125`DF[W@CT
%m:Mm*FB5.A'P;;Yb=2R`!!S&)jE+fcNhgCoB[BSCDWH%nVfXoCf"Ot;+Rq=q$5.M/$F<WEBnXblb&I!H_%$fK/>9$KZTtG7OZ+$b
%N4Qq?0J*W<],<@"WGdUj"C:+g5-#YtK#/>gV?;d^590**e7M`YSiIA,RAgYF=`h1A!G[EHKM\D/+Mrp7c87R`>Q@1QlR((X:k=03
%!OX?6TOEf_UrNN>74*ADdKfk_oF)iV?[@`%WM&$5Jn-6Z3;@NEFQPtZj^ct]VO255aP79HdDuh`(`VZ%&MYMS-=:dMaVuB124UW`
%!!%jYd^$bsgleO;f+QhK=9bUL^.q2.ELVlb/ij[P=)+-?]HkV[G.ccZplN1d5qJq%6'rR?1TJp7'P"&gSCD,]8Jnm5cpkAjKU&Xl
%&AaL6JQuqUpG+V@($ahp"=QnmK)S$i(rR%em06@$0iVbAOju0e:n:"#O3$?BZVM/'r'X($#/a:0[NX`E/N(r1[Xjr<fSc>n6/FL8
%\cIX*XK_<N"]Un.#]WE#/[@cEIWCKIQ#/[M_b#_.@,RED3mB^^+?9@t4mUC/$9Q26)_!TG$DeeY"(%o6UY05p<8hj>SL0P(XEk6s
%R&)&nK_cVmaA\Y'J*O21Ck:;G-6MSP2iC[sTf%WDW,QRU0`.;BOnS'""CK[2gmr%<b?WIuVBo]8Nc17:!64Qe^u4n\cE>5.^#%!a
%qsC>\H!rHFo`g8S0_Yp[SZ'6EJ-ogO@\hY"%3a+2UN</=YYV_:(>=F(3%X#Y`ImO@5Thjg@p<RJ-"^jpbR?f0EX4gn!0c2e0urJh
%,Tt,7M`)KtR,V8$2?[C*r(<Xpf]_ZZC22LmSo^tM9;0a^&3-Vr/R!o5!:$*U&`OK^Sh/,/%e:@`A0Sl,#b$jCd/mnU!Y,%:%k/98
%h*>dSe13@!)BbE+L+?0KNtj-j@,ZhmN/LZ9lB\sY?7IE$OUdR`IO&K;/@'@u;2ep=W_4Hh#aJN;45Siq+q/Nl5k'Xp"f=J_/C&c0
%"jR!"292VFr")JAJkps>/NMB$c*gOj9,?=jJ7&pjoID$dL!@L).kp";9,_n'!()YPmTBNXOa/(0+*gEn'aW$eJD[GPM.VqY^Lbl>
%M#t4p!>(^FbADQUTJ@8\$Ch0,K_lK$)!:Mm4[Y>XcCg2)JVuF/95LK0)0<Oo+GRj)FAd0Z4sKSKE#0Om6J,8XWT`5R=0ePo@m$JD
%`LJo&iA/FTVh7%$R@*%oRW>-06$)c7h=3"KTp]9HJoJIk!&D:j])mt'q\>JpMHLUE?\)aC#iU49:$6#`\3qc7VO8a)BAr38e''-n
%k#qb<&ZdU\QWs(rfCgcr6<,"L/s$K_I+92sP/0Y1S-r?>d1e9=pB-))(<<la!:.j++crZ3heoZ($_.@R]\I/8NQ'?R_6lPbbosgf
%Ao.K`f)g!LfUNr5!n0RI-9.D10W:+Dq\B7OnLY`Ri*3^AkZ^jh5H+YGK'*%ecJd%P!_m9FbEOOdL,eU+!/(Pi"Qoi-1F_K@k5ld]
%9;'Q6A8=dKX;.96&P/hF549`oVA>_?,=\LJgNG2'V4$n[j'3_R?lfPQ,QP[M%JMLA>\MNu5TtY=N;4:2"SAW,r!VQc^/S=X!>A#0
%iV43Sh,J'-`rYFq\$=C&$"5Q8JiA<L09d=/_Z1<\o$$VXOP\r`h0(M,Fe8<Q>RUXB$+.s.>_YQE<3.ba"/`jndr@)BaII53A=soD
%QpFL/M_&kF:k_SiY6a42Ma!l_PJN's'K.bP$q;dUF#Zk80gPg[L4fk)N0%.q5t)rROgtZ#ModK8*STu_1uU:rA)sR*^-@=:3A?F2
%49/ce'cPD*AB3WfOVt#H!qB`i'+#(fmne1Z&4Pgn\Va(,8Xp>+4-FHi;Y[ui9Uc]O6Cg>&6Wm8GP'E'kOa12bF-m6lO`LcK3RhLY
%H%3_\n15/?G3#P3ck,acmA]4b]-n"Dg2T4M!ZCt?&YuA,?39/L+P@IC15AoC,ZXQ51FICOO8`CpMl*gWRm'i173CkN2-'qGcmN@g
%:`:,5;e)L3RliQr<m*Jpks.)WHPS[PUrdak^i,?)*?Z_-JB/poW]%Hs1^])+>_uAtKk#7?c#`/KF0mj[7AME6[1Jek9I&4Y$:jS&
%89'GbeMsH$<al]7.aY*oYXt(s3!s3IMta\ON2jln`-m1<Kf\hd'FJWLa!R<C<BFY=:oMNWnf/!:EuZd%>5F&TlpkbPM:%([qm.+k
%/q+3jErf4Flto,$e)518TuW"W\H`\i=Mt;23u\bq%`k)9Mbl3Gb0a$/61,RQ3,u[!U?_6%&uI1"ljFF3K[_K!2hqWKm!C;94k_>G
%K\Y72G.npsU@\?`1%ls)Z6[V6i;<[q%lkm_$$Y^jD&EH]jHMX>!se!);#!;X^Ht@W)ioe#3(W*>3Sp-mWMsU8(bFb#Z&8dU+8#Qg
%5MmgJ&]bf='Uf![Wt*F,e,DHH)i%um\Gh/HErHf.$&l,DX;F>+!hV&u]YfAZL)](,5A["6dnbY]Go&5Oor7`=(Vj70HXf-c_1p%r
%eJR!FKF<0nE3nY,_)&sQ!8d-?"R?us84(IP_I?q#(kIO25ob+FAU+0`,=7.TR+N*oqdOLg+kn!*Y,P)16P'P2K9nA,Ml+?\1$9_i
%=JtqR#s"2+e1RiT&N/n@l_V&rr$=mLQK``D7O"TJA1._M(6mq;Xl__@[?>VeRgeM5V87BSmF4YPS,hpsWhXR]dLMbPLKX^@*,LhE
%R`2[B08<#1i@eI36hZj7)@7*:"uuOd5mkMq!R!tj_5lnCa_51pcXfa!Cqr!Fa$0=p[WsuSn]Rf0Vl5Rn'4"C2!uZ=DI*p/m@1<WU
%X`EG4Dq%N5QVfbn+\4pOSQ0An8o04s$$VCq<E)>%g0JL:9r;:uqs>&*At*#ASZZkYE=BA_bm.3Z*Pm_jY?>+R0O>^R&0ap^WZ?m-
%KrF3GQkQ-f_&>GXJnZZ)Uo!/s5TPe!eBpL1(:,*+B6uEG(3#Bh$`%.JaG\8j]/Y*3bT&7/?%1iZ7,[-o`]0X_D4Nm_k3![(M>k6:
%Qg!o<r<QYUZ&X6+7`FSa4>Z+c1#>7BHXsfXh"?NB?2r#c`NebRHgk8Rs8:tCf7>B#rB:1W5QC2%rQ"s5f73]_s8%fVp94MKJ,P`6
%qUbcF+5Amp$#'lC`(jHMOo&]Ba__($=#^.oZIUWCG_k7@L[X8`,np1I0p67?B=.Ye)2'QG?cMeB*U8_ZZCP,Nb^;r0mbf5QLEN&T
%L![J[0j(Nb,7EGbe1(ljpK\Z+YDoXp^2B403D0q3D4KT6i3,C%)W4r?4'GLHoB,(9o:sE7duI<7jjZA/W:6omd3Un=53Lt,J%eXr
%n$@J+rn.8E3#*rlKdrn8:ufX&SQ_4'_[m2$Br3gX;%gjj[jL^]Q*=]=,uY93,r'_[q$gbOIpoF>ckI:7'l7'oDkoVODo=3ZP_F>I
%Q5?],L9!m^5Yu=l]G8G298mcOor,I=Z:kc-$62Na0+N-?<IQa4cj5eAA*&n*6K=U#"h)QHh8V/05J"PNLa>s9a``#V-V(P2#R)]E
%=`,r9KJ4.A,'E2L/g[0t%V"d"*?\4gVk'Za(2M$^-.L7Qcu8PAE(i'RopcA/Z))t$flC\-b\F(QPNC$"X7')V=#41cBG+=Ln<$EK
%aDNY"jbTcAogJAVf/0h"mF`6.FK#]0fcTm0kc+8\?K4I58Rcta^-Jjn@OES_c5sr!B%mUJ`ChLR)XJ"V@<"(k+Xe=hiB2;:'lR=>
%kKA&FNT*(h];u3hm\XGXAJ7P<8:R1A(uO,#oG\8T^20dH2XO)HM5U-+eV/eI'k*03)4a-g:5q4WaTimV_:db0H7fU!V["!*pD&t\
%Rd0hP5rG-1G2n20Tu7XA%_g4$0;$"'B[%&!ZBl`9b%FBL4=7'r[3J'e"0oJliVm,o7I9@$'i]b"5igZVX&upt@.[<AcqD`iRVpI'
%*@Q"%_Z$ie8dt5N=lZF\.HD7@V#rC.PAe4jMW/DkcWBJWH=\$=>INH@!P"D&A-dJ/5(0hcQrXW#%^Mnd/dHo&j+Cfj^/2*39g=KH
%9']#f_En`9bl?&Kc>Dn*mfQh%JG_TKrsIoUs*d)((H629gl&)]6)R>ioDSEQB_(O"okVf]O4]80;^26/O=\V!%VuX\'i,D8QFH'%
%)2ATAkQ2Xa\VFU95Ai*:IfIc3`JErlAi[P,io[,C+'onj9",c[9:P2Ta6KD-CK*uM3KYi"^'[c1bss35YInl:5aMt%Y@E0X,6YhU
%'B&c'i#Ik8!U=g<9Nd`7r+"kqi9\bqYCRo.0lD/ddRAL2>gDZGd*[GBXl>%J3k?@0Q%*l7=W@QZ1Jh`jk9_(f3O5[0aX#%FSg"RM
%,Aja=*&894igpsV.sY8g4C&>3;'M2/GW8X(0\5A?C"bVZ$6#B2!s;^N=./+L<F=/c#Y3/Vm<sr+D.aWQG`?IK+@q:$'p>mPp-K&[
%^+HI[Xpm4q]Z`uYR"Z4_$WM3tCkTj!(5>_e%09L/pW[38F;9.bCu:%5hfbppQ+lTg&,ea2,7C>cU4PW%6,*!UT&=Mjc`$?O45YOS
%RiVSQ9r5.r:'5,<@`]WI?O"`VU!pg7!Jrb#)T0jCVbR=Ibe-iMJMRI-@8UasBL6NL;/*oE'IjQl1n:?)1ksp&/1QXi;on*sd@aSE
%St7%qrlm[b-DK4!o8dnJfQ45"fnc#TL-^d$dD3j.SY;u=#)Z&3pNp2Qq1M@M#g7?,S]6&09Vl^!`Xj!#6E<Ba'XJ!DXThNh;a4Qe
%!FRh/:hkNBDQ\$;a\m=_W<(XG89:nfWt(u*3:\K^(UXGN7EAQ+f>&2W]I6i`Cec.X(U_7:p^,,D`aRFh`PrJRD5l/q4eNq/@KQsh
%eEMjM+fJpN'cTiIh\[66R-Qq6Z,(`OG^%-HQ;&iV.Q45;Z[:sp(tW'C)LOE,n"SB@%\]0KAb+]i>%?YqQF$@f^U(lp?*-E?-.7Ir
%RY"cj#V/0L=Z\t\[Dq&/%nK]9Cg=3$#F1K3>^+j>Du8_\bFWa(k3#bq_TnVslrHP'[]*0O&h@C9j/PN&9dZ2EF*7q)K%;`?f@#%1
%08l0G"oZ.7q#S3apYQA""QDK)81>#OL$%:5>eq7uf^N@oO3@Ht?bq!UIsr>C*V6r$a%W:hH&aOfY$d2K>)C4c+.'r>^Ol3H0ure_
%]-huqmIA0K?<YGDAF(INFEU\\G[5dl2se"]@nk"`5==PXIljXD??duk@3-Z9:0K5\eccZZ!n`,qV4_21ebNrJ`W(:1/!iP+`k@a(
%AH8`gg_V!FY>a*bjSSKT<1PE!I5)$1rB0Fs\M#^><.IeZ*Q)d&k<c]EIJHC'X@JMj&T#8N@Y*V!'7gZWcYlY07!Z[$TCc`Y3sqt>
%eD;DhJZ7E.Md9i>(5?sI:802UM]aiA!Hq95o&>+\](&1T&2Q:_^A(TSgoS,:Z7`2G;8(<W-RXEqU$,VSn1+k<IR%o9"&f42"#q%!
%,t5@mF`>d6C;l_sDfoNS.B].O&#,`6FYd5R!5%Qk<AQ:34:(L4/(`Q`[Cg=pa]rT`cDIm=AsZ.5S)ZM05J5I_ncbJ;S.i*\O@T3P
%kU]+m9S;]=:KkaBMk"m<O&_9Sj.so9]IohM6!a$OC:;iWf2gFu&Thu;CF.lDL\EG>1f3("mTFD@o5Bp?lRW$bT3`_:UTtYoZ\r>d
%g08dmqR*=\GY?3!/f2'tA8Sp/:o.J7@2`JLiS[?(E8T?qcPP/#f(G#4]mE(hWFZEkn->>lA/N;ROnJYr^fhC0e][PF-sKk#b+78H
%2H.eRQThiENaD``c'EPIEfl5Mqut+2nM^i8QoU1\dr.k4]@8V.YM[Uj?H[B(:N]gN=`-9LBDd71&Gru4&'/4R@rJ4\SUpR1iD#k.
%D7b'hT#G-kpnPs-UbQdGQPU+7'su&q[Yi/aj\c\lAe5>EqZrrOOikN$b2)krn#KSJ+"og;*Na'+<[b;T[Pf3gkbeJip.J%oi!qiC
%@(=V).Gb4pn^k&uOF9t,S9lO4.(c4DWCm3,k%fXXFb3=8/$C@R4lj"E;%^fK`B,=K^^16Iabu+8<'1XDAr6tRf>s,_?#&mR@$^@=
%aKAqY75C0QS^JG4gZq"oiP`33O?PuJ7rR,Hlo-spR:-pYEI%lnqd^=70S8,n\h=-6EofDYc"<ubq"lUId"M9:m!ZD*b\DlPDEB[G
%X&\Pf!Lc[>N648CQ&9&d6HK6Qa$\\TYS=$lbsG_gT4>cMM^@+_d8k,\@%p;U=%Td3V^Pb]r5Wuep[Ws8?mPrtA>[u68go^p*A+uT
%1qO+2_`?Z:nbFGnVV',:<DoUs]A-`&W,K*@5`If)-hjn"fB+u'iA77mXtPR@'>5kq:ef@I]G[eeMlGRhT:rDo]6RnaD"D5k;7kA:
%e/JTT1JQ:OCVP'fP2^'V9Ld?m_`KnKM1?5K;LApI?>f?dkWFCgDl`aG.U^BiA0)E)8E-O?.0fqqGOt*mB`\'<=_)1&38+2>G/EsP
%6d-(U!)^&JbRK<*hsX-lWZ`P'Wbo[g[Gc$=N!,b,7%@3KZqa0eq&?ec7\l9,R`cJk?\\WU^TnHS+]1TGXq=$IQXC.t16C5EX+3,X
%'+aQ3&A7d!MpM2L=t]\#D\[qT#tD*/iF]NdeQ9_.9ucF'/9K9=-00uKC3'Xa#'K8YW+)bg7u--"/CD]^L<i<cq6lIJ:r?\LKXJD8
%SYbcXSsG(OV8i2^C?h4S>hH8/Qj:KWbqqfX^u.rV$RG#?il1s5abrZ3:$KNmhEE+9GJaX(_Sb+)(jFRQ[Y"`jf<9ea[Lne.F]DCN
%<IR)3R7R#V!UVK-&j8WOCTBVc2=VWs6nQ8X^bZ%rZ6RI=L/UXfM*[;GrWAJ75=X(WTj\H9bIYK['jU6&0$UthNDGV1YE<)#G@K[k
%$0:7geW?T@;H#GU(&NV$'dti-.a)@eG:s<?!WH+RN$M85%L%8pToR=?`.T8h#C*9rp2>6L=0TF8hu>B*YG,\"IqEj\YK:&4<%E9Q
%oXnMkrR^kss8640%3,8aL7s;IIe(1%F]6ldF1hN&QWA#.9IeVLj#%PeL%*-3WNWlU$Nrg]X5bN/=?#u4V(ad4f]AZ=c/WM;\th+m
%o?s&4=onE^H'^4C:5`aerH?qkrZ6.+h7B1&0t378V(ks%DdWOK0CaPH%:0/priU+1:Je1_ne+Ls3=Kg1_GS=Vnf7noa8.T$3rCjX
%c?q/tY<H-^pfs,Wa!)8<CNX;E7iKXEKTL%ts+MXbG3@EU>3t#9U+5^>HgF3JIS0iK=DKB=0,=gnHDrnp!$!sVAR;1D$Ls?(`O3EM
%5"QiQC:O*gj*.'F^eV-(G_C?\m@&9\jgbl*aV]p2D*(dM@tj;65DMHp;uC*1_!1@#2.-0,cDD*pAtK0Q?]:W'p#4>I=gc-'/G9Bu
%MGCR]qZ@36cSihF;]1'opm7G?@]6#MCH%*!E_%[/c-tdFU/)L8:#KFG,juq#aCu6I3Rl1qhK<37[/Ws>5Lf;EL>,!:n8)A;/e>bc
%R?EEd,$$uK8EbJMWn"5^oLNlE91:-9KC!poF[eJGqJ@i<ZCF94M"olXoV)l7U*'s"`oo>XL8YDA+ijtU]5"[-(<)9_"aRokm;.n`
%j&'NMNJAq/BZd2\58Ns@oma\P`,E*>]r$+M+"E<NVd/]Cjg*W\a'15Qj%!]%jW[To1o>s1:lM"IY`K#rmen$#5@N,IFO332`74>&
%b?K+]8g*1"YmoQhPXPs#]M8N9)41(+EI_gr'3JM8i&X&V"Msf_Vm>>N!OkP>Dmr']ph:nirp'P+de*`N:;;NeO'.\LhM>3JaPS"%
%/2dnue2%:@f]Om9s1Ure?e2?"oe1)a(rYfiq2Xitp>'bk0J9__e6rEBP1`"#\"aD\eqph4o:t:sVXrV,ai;Qujoe#7=oG4SZX%jm
%TOMKI&c-j8I%lq\Hk3lAWiV-,`_GUUkP"4q.$MXl0_Dd29\+4tZsoYWCK,-+H)O-VXY)YB@O>no,W'Tu6k,::DpaALQqrX=5#0P8
%c.2,=Xp'0B<7PQ7#J%aBI#o@63e4%dJAr&7])nak81bj@F[5FQdrq''j.!uuWM2TTCY(p6^/[E?C]ID_[B1J->X6?SM\K,!NapMZ
%$fJ<OS"_]TnEhm#C],KgV`QQAXX]=+Uulbac%F(jOerR\(D@gsE4/OBe;e>T`!l+no0WKSm<e5bP$oGgS`Bcfo@i5RO\?N-mYd&D
%=n>@YiYY7X/Jqd_],Nt:[`SG-SN6i:^3r93-R3YLM#\\GneOrWI/,`"LA%*9W9o0$//4u*;n30R#;)9V:2T(RF*-I]0=?j'%j!8\
%O!u;t,Ll;5pT5ZV/q/05GrmC5h!X8Tj^QRrLF,#WD1lgFL*?>S5B*@i]?[`iEls/OcS1ieAOCE`?TA?BnSEj<HO`9k`D@6#/e5Yf
%5e1&^3Fh0?b/4<i:l@q:Abh:J`A,,;Ek[s=NT)nSOM#Li'#%l3"VAH=*AAO*n\]nse%1gHJFtb%Zdg--J>RH21j+Ei_rGa:iOST:
%X]e1_bHRZ!ELuh9o"4I>XnQ$f95t8,$_8d;\H_]bAl<'\f`#e-hgtPj*KhBPnXk0W7gNj50R98:b)L.)(H3NY+V>VG\-o!7bZY'n
%'^+Jqr4eGQaQo%?4reiJ7TuHMY7cS"jbDHZN\^J@9C:.oTiMZ6g^YBQBGq]3dC//qgBl^0i6ahHpW!-`M'd@T1H*AuoD"_"lIM@-
%a69*YaZDm;1LU$-_^NaK'gg:2O5D>(VM&W)gWo7RU)gtg*U9b=5$rd1O?u`F)'<2JMDl@!:X0>mKO<Xhl<FBF@jhKp=+dsH&o_6#
%PouL6g#K5UXq0l9)63kcgIE.u^Z;D#/r7Z4O']_06Kc>L'?`R"00b^U:@;G8CY+t0HMo9N?4aGDRo>J?@FI9Z>7V%npY+&hUBD8M
%.uC'S\a1&gNW%q<a:b6u-7r8CWbir$VsM$/i`psk^c5Q"p[*\LaDGlulO<J3F#PIp@DBbYBK!%%RfK0gjaqD0L@9^FRO1Wk!r;1^
%]PR7Wa[Z9jUnEpZ?Z=-'D))`Of=.s`#UsZKI_70jb.R!r35#fIs$<^N%h,]UQ%P\4!cp#D2XtGO[r8,)%Q@>P.?LJ]8kj'>%K9t&
%Oo=-9AmKH1bW5`&1iD<t[\5Us"gqo[2PA$9!qS53o!A5p*>/[o9eQ+658;FY^^q'YN6E/,gq!^<jFQB!\3snm3o>,I"o68bTr\!$
%E`\GN2`HRDoR6#s38alI3<])2#LEL7NNH2ej,KuJD'L;V[6&"r'\d`l]K"/:pW5c*'>N#C=!5)GH`@h5`=TU(n=?hNW'Hf3Wjn&3
%oifQ[]Whr+f7%@+EmoHq=7t(K>QhFC2_NVTGC\VP-LMogp3U>53J#(;^N@H-g^c(UR6sCJ:+Uc:Qqrom%`'9=aF,3))40lD"f!mL
%d2WbbE\H8tQ\]Kbn6!Fr"rPTh5si>9@-RSn49FWen[Fq3WP]H\U55NRi>?cp2Wr>g40OmQ1aeCSb;Jq'+0qZp<$#psG9\V#S!::g
%ccIFE@Sh7!@?nEa@6[^da?idZ!WL6^jZ51gb7Mcj3\!pmF2a2F7tqt+OkO6&/`W#epI$.S^Ak2k@a*bQ4t\qQhQ>crL1mAaQj(f'
%XTC2Z$+K6Z%Z*n5@3W.[m6(>:JL@9_4R/5&JM,K:;:IQeNc=S6p]+sI8Ksl`;eH3Hn((VQ1o)JPH-rFOR*,7o-fV8k#/MoN?r8X@
%SSa*bMUd(?`h.0R2#Ur,>?>&+4@5t]2mmL>#3Qr6!.hm"9Ko(mJ&BFReX(BPs0aht;:H[s,Vo\OdtLH(iYfU(:0#3=:HmUAC]"Am
%Es>S(&&s5?;\RbFI9ZgP'%E33)1%n&0OUk6dFo/")-Y)qk?1NBVEPkAj+P/-m<a>sbX$B7a5:Eqq89\KSrioJAp5^Cbs$Y=XU@)a
%eB:-=XY''28gSYo!=TW)jb:^&[uNG3Y06rYLoau6:3rKnkLM3p#0&*DA.9Y[ehZak$;ahh7JfE#L!X?9j'AhZEVh:'`PJ\#2Kaee
%O!%L@&t/mQaUiVaF@</Hd_@D58PD5Rm,VDhUq$4'h2'\af,?n4;_BR?e0(kB29A(-o7MnXK6M"r2V1i%&0>Dt.=b[YrP#R>a@!3U
%(^]rrdUT/D42^K<=UV,I0'Z?P0?WQ-Z=P;j`(.8+$SWbl\G16g(e[Gr(n_4L>TFUiW],fQYh)Ihl"(_I71NM@&U*G]bRO'M8UeBi
%*3m73ql.0S%Mefpc##a[j'bMO>M;QR&9&l6V'Em.A^u1P;Lb]qhc>-`jY`]rJ:8s9g40.<UVqK4GmQ9WpW:QQ="b),Y=Mad69!+n
%?%%H1&\e64Z!?-1XO19j&%VAdfVk/5<F[*@0(rT);V!I##O5MRkEg!R*Ra5djNM/*;!YoBd9FacSsp5<[2JJ`d8uoSd,L)L*dYI5
%6>QXB_@i4eTL>u"@'G3sScZ6,2qd'k?gDLEnZDF5*Qf#M8k-7L+8cHA\5"?Z3P^>X,F>p]gQHII`IUhL,2hU(F6oT450XP'%QXDX
%a59iJf<&5>S9*gp3lW:j#ZD`ENX(l;jhnP)?a`kR0XI0d+(FipU$@YC./O$dpn\hm!(astLFUok51HDH>B:[rAVCb;H*qU<Zdkn)
%f,>_o=bEs\1MJ,=XrSh2TAVq'==/INn*m!@4uK?ZI!Mhk;g^ijZ!@PI1c_7ko*jZN6BI`9jQ7LI9g+hiU-0!T,n-jg"=PLA&8VMt
%.gL1%_">SVl2(`V[2@.#]%Ei6(kset(BXTI`?g]gE5)"W::FSN-pqt>+3U.6mj"];WAV&B%Bm#ZRW/pAg26t\CF&A-0k(dPg#]h_
%do&)#i,Pq3n17i&RL*9J<c!'GUQnRVMO'#t2JUSE-qe3Zf`=oa7^R\<p[j-tX:OZafV.]NCopW!Uc_!=<_rnT/B.`mK?+_(\Q&\t
%e#`*@c]A#"o&8,#)h5KZ'XCsZP]q5n4GbJTl%,52eFjB1hKFD+G3i0h(&LmF<GT6U'#Q>f5_g%)mRWQ(DD,2'<L;\43LetjlKTs4
%qo2A:"#s/Kn]0a8E3J"V7SiG@05qm^\ZUf>^2DiJ-]<7j0%oLC%mEe9_U3T_9SLa2*8nDb!efCZkOB80otOL^&Y1>eJ')(;>7&li
%U*OaV)]@HZ7;M75IAfj`5IACbhO]16:Z'5:Jt8I1H,%6YBR:E*;Tmb8-KlmZ_nk!`>O8E[!:O=TQe^j,A3@ZQb3SW9rJ8e,fFH./
%)=I&ADdm_f'L'$i/g*bkW_n>,U$*$3c)ST$>+(9oFEsX83'H/C_p=Yi,)5]#j&BZ^fBp"2dueZhFmB`P1Q,#`gF\s$1/.&D)__g@
%X$$UcKF;ep:tok&E(MF^,<S;^%9^Cf,Kt!.U'#Yh#_;keV%)jpH7==$s554LTA)AamATT'i&:9H2c[Kb9n2SIjU1HWAW4DM1O&?J
%`P*E09tV=6$1#(CO`$GL0#,<#m8/9)cl@NZQCIq_8_Wq>(<MmSk5bXKNLsET'lpFLdOcT]J#U?d,dX=m3EjeI43@DJ;N^m%T<qTH
%&"]iq3!ga_*(=l"_p=W)d_Ju(UF6U1p[]kl_cD8.f*]15<`'i!cRgc[>RZ_R?kX.`/Je&l(WF5)lY)tOe=Wm',UULHjkW`QE&>h;
%idb''=&Br2*p;f]ENh7tQqt];dL[jP96&TI75O]P'lRCnLYX7g8TED-j]X)C$)HQW0dmODVka^>!Cm(a<#d#Gp7aMh'jrA(g0Ws9
%YVfW&cBhn6/D/;hb_a:":!E]6U_0$t>Wt[**6b&8RZAO^>8H%p3Hu`N0Tn"p:1t-i3QG'>Y]"^@^j+/um4H#e7WDa1h#YsQ?*9TE
%##TRELH1s;"(\]iHk5E!*raj@*@`b,9EOOoWVTBG@8BtD;KpdB-V$;NA[Kf)ElY!DY\t=VV)qcpePUR`Xj_/`j^Gd&/+(.mCM<J.
%g-Z$k56iJ$5n:TT*\;r0ga9FamHn1bHe@WD0"CsTEBHXEQuTlOW:Q.P&,%%!n#8Ke\V*=uYYC&dH*0=V&F..pH^'l]PA,L.K$iH[
%cG`H70LG.S@;p6<2o(g>c4J,WNFS2=HooqGiTs)O"5>Q`mX_#X^Ul9-=qZ4.NX.,lQKN<,PGl##>JuibQ<FBr@XN7_WpX>44K56m
%PV6k<URB",!L)Q(TCpqGW%!Pc`&,I!l>6/.Xu5AsnhZe:Fm4?==7_O`VWP-I\j$pFEgU);<Po-n&,JV]p4\)POE,M@qDdSI@H10/
%E]ZdYKQWlC\>'NR+>7L[&Jn4MrN![#a?s6C3a=W6;$ToF5!\64QNsK17![\\<.ZkR7Wme%m3JYQa58(0c@B9]1ZXVD,aPq74NC:d
%3*/,m\&J4>Z@M@]qHVX`al-73+(>s=$4OiQ<1saZ@1#G)H@NM!600:oLf=omp?bLCF>5E^RkF'd`gMT+a&@s!-^$RH5Tql!5R7Dk
%Xe(k&h4I)&F[paU!&BI.5PK8"F3S&<Zd/17D]>duL)\%+4BNd=#_a?aLHdlDh"r[Q'f#VSCt@>?J17YmQZpTTn.f2UV*GDoJF[eh
%(rZso$VkD(3BuVIb^rLZ&CfYITR9h>TT[ID(\2Prs!Lf0EWQ3DEp#2Zch>7*kN%%+#P:U":4c?L$F)L.Q$96Los0&(<:(a"`sU@U
%^oq-ootUN8S=V)&qPZOp1@Y.Wf7,IQZ-=;80L&B#K(TGa=m,)s;EhACJmmo"NIQ]*SKE]@B#Og3FHmC8o>G=+P$Pr9f$IOYL6*50
%2<f"TOJ@jL$s*[X='#ooCJtT-fb;<*,rgS<)T>PkJ2hSUT/8IXnM25!_LNBOHK\JQ3s.bBrBd/fq<cf*k@,a\9@Z_gr9$K5'femY
%O_8T")eek"jB#6K?F2+IL6R26Lh;/rS'F*);f_.@W0qDlFtUM-X26Ybi_5@:\_B.CM^8p!f');?\s:21<hC)lGC\f7RaV0mdb[E0
%G;(NJcAus51VMOiPP#@g6\4_bl,_>2hcFo7$##&&&o*l[TKVT6U4#0dA(iV-8LgoX!sNW1XdF;_5^O4)ciQ"m2.Z@2A"`hRP2_[3
%J2`oNibH>tCNccRAX>01Pe>9RH4eB><.s3H%L!d<^L8?C\Zb?!J9C1EakEYc80bnnruB8I`\GLG6X>.pml:2Xbed1X=//<%-5(+l
%:'a'kLdUm#0/W8QrL;%8\m&6'A/b*Y)MC\-_4mFT_M`C,)5O[r[bd,t^YNbS<Ob#>V"]b_".0V0=YMYhjM`u9Nm77CJSkoR^1Km'
%$o:E4TSeX[VE!^J/gkD;5R4=<(gn!2GE/s1Z#p/tp\I62)u5)UYT*fo22=3K^Lbo5H"&W2>/>3DlR+Ti2k.efdskHn<g0MR"+!gs
%m4FiUs4T4n8aS!TRH)A7YP++MEKTN[,TBQoR//GY:Fa8mLL6bV-Vu-OYab<Or?7Z:)t3<'Ip=*+B##t@OU`6/j)Z1_EUoS>Mcgp1
%c<>K\:9B85PHSDDXO,:[<Kl;=AML5;FOI;>A[Z#M1<P.'CZd5dTDN0tD7:3fZG$1%b\nUP%u?hZ=F!AfHiPqNbZulBen+o>81Ag*
%a/535\lE^u:LDU+irO";6N6W"[YZ+:eK/[fmr5MfcE,?j\o)*)83U@hl1uq,*H!/,nJI:d?jNel%%WTkW(A"82e-E=./LFXe2\1:
%@.@be'kEYhA]"@hI(Mb8lGdFrZI'3$(YJ_4=ARHb2[^Ud!QJ;ekN!t"\E1h^o>;Zs<i]2HJuM@Hb]=aY=/HQ?]s_,_G6@%Em[IZ\
%.a@ZES[H3+/Nt`LQOjS:Y8\"+l6@4)/N@ZNe>SE%m1kr\rPlUSe5bZI@W<c>XS"-FNuE-5RcWkE=kXb8-^$\o?"YfCR*WLJ\foX*
%_!AW\G-_>f*n&/R;"`^P"M\0Ul^K/ChDDCi-br@)V3&2Y;f@e6WiJs`br:>f`UmZ"FP*N,4!SE]\m>gF4_:BB7HFu`E%JaY^qn1I
%=E#;JkG@BI)EE0<%(7\i:3#GsRt\;elF"kj`g.A91uj&$FNLl<.H$5)"3MsAH/A`^(o'/[;SfT]1R>gM>'sh6ih)hOo$d"e6^hu9
%L[k!?K1SqiVWD2r0h=gpL.,cSNkW&``#rqQ/d.h#M%H\RIk!H2Y_WPIK+rre\MWVlR%ADT!H`gWC*eV[AI&Adnk7h'pZK^6][`#d
%^CWV,kpSCBF3MYEP@0pAN[MDJDt4oeM?4/cPGEQq1?Sk]HFsM_I$f,jO5a#E)HP;b<!m>QWN`4\Vr(@(*M@T'D5%8cS*+KqeM-HI
%pY%@IEj8A%[KQR:FA5Y[FNDYS'i9YOJP50sDZT!0*#.q]9IHeFa6eH(RJta3Css]RDdKkM0==4R),O9R&!GoVRU/AJEgER##7Bd+
%$\"V<%/LE((+SQKl>g;=?1sh+aA/%[J`7L;Vm:seq+cXl+/.4B<UJ46[5(a7X^B4^h*2Hr>kXXk-qh@N<n8V8QlKV"o?Wf\'=c15
%"2*=>KgiIus7B#aqr.23\o?0J,&M6EdTgMkXW?r?D1938V9BTthdMQQnGd.5Or94Wr@<(+VDB*2!rT1Y/H*bR?SX&U_b9^5dM`Bn
%;4.[Q6ITjuq)>Cfqqp;Oq9FoO2US6;:sd^u8cQ#M'8ql2fMI+Q8tC7C<J0`3P1:ogU-gO#DJ#0XXi-N[#`dLpS>s)%JD2)f"l!i?
%@F$\*cE`)t3;FO^4g$$qo@TuQ%(6Y2$paQdNo+6#p3E%q5^q?T%^.CLdE-5*gLo=lSn,%rTJZ9B7)d]YGU4L1?Bq078-[F*5dd4_
%I@M`Z/m`3!AO,QF9RQF'r+6Am=C53tpZ;;J[\i/BZ"H>D>ILdh?Z:]O"DA&J)usEJ7er&Rnbbu]TjJXm-n8FL.!k4KL,H-u)58Cq
%JhcQLQX.73IJJUl`(_q=VLVrX^<C_RR[N_))ZZHbc&_&Vgp@kkq]f9?ge,>Qh?M6e_6V-%n7C75Madba3+qU^rAIFQ7b^U9GIR&V
%oWc#*+CsoHFA+N^fg`)k:O>&PBTE%kh^$9<V1!/NLS_7NH'ltrOW,^]m:[ffS"PpRiDGoshJZb\c*8rGB6aDl71ia./sD0HLU5%\
%:#l8L[m.;bYNl+t2r.\m5]eX"W-_n(FQY+("Wok;nS_8)H^!;&_l,j7$57+@DO=X25k]?ibh;<k-40;3J>V(9rPp5,(n,e26g6Gr
%c4W:k]XA#&(tur4KHjiRrN54LqL-Oo)3D*;G)iuN/8&=RD+e<"\"2O3a>O+h=5+L`D$?>m^&#I>J%k=A?ZgPiZN!.Xd<Z,\M&6ur
%E6%AVK\BIAeD/ngBr`MuFH,14@9#lj.MlTY].$s."(5_mpurHWaJQN]cbO8AYC)N76+B*$RnYTC)"L#>KtlWJo_XCc$@?u%ZH0#g
%6P]c"TC5[,<K>/S1Y!Z7GHAL\puo4PAgLdTS@mtH7a/-W)lrI5W1VDD/%iV=9Y]/_r`$g'V@GJ"S_M%LCaO$/i`(Z3XjQ]Fab*p!
%p(PF,D6rCbK]n?H0-W&Jr()+]n>XJFU06W`cQ$$@?B<XW?BC\#6.g9mBB0T?VE8"rm]l#(<&iLB2^h/0;#YT<C?iV<2$jc31rWs6
%2XB+,dX=g'/2?G!Q2CAZ9<RjK!l+2?oOUFeC:=uX+c'=2^1#BjECi]rGMl::"[bEPh`u:X!_DlZ(5<u+kHWN*^W%.)5N55E]rI.$
%9n\#Q0WGI.C*9Bg$%*a>%BNMliX;4[Z.*L,>jUN*Mg?nL:hU2mXGB\tJ;sLQTp];t9`cjbNe!7>*NJ;WL5%=-W#YpLYT(?"&C/&^
%F4m/#09P_LIa]H[W&`]+>S0^!1lWjeW+L2GS)b<BH'Q^%?f;4p:fG@_bN'aSYi-J^O$,It>AiO)[6T]k4ff5P@h$=@U[-4A:hF)5
%M)a#iF?3uO2O.M'WI\n?$$cCq:`A57b/AS\g*3GRTSH2QJc(>&9QhnPagdBZE<PQHJJ#hd>SOS#d"A\1i<otup8BIhj*P:X4LNMO
%?\2!><JOD9:,IV6KO_M3h1GT0'1s+-^ceR7@+Om.]44"id>nSj6XsGG*aHI_X8siUZ%SXrgOld6ampbnh:&#O9Q5PN%N"%)K:6gk
%=4%"^M`B7+>K7A*DoiYE+,,:#=b%NKH9%;p7NW;Ej6mTQ%Q\'Y-82-rk>]9>aG>!>TRURc-/(qc/"gVdri3R^jm>!gHVoLmd..rH
%4<e=i&@/32(3.fHJcT649G33;J9A*+Y"aU?9U<r,SiPF*V^;KmQpY^k0W+8#q,RSOPId5#Pb-B=7^XEn6Q[`<aCoFSq>!I:fV`PE
%*CmXR;gO73eBS.(#*YLHI$3<"E_g).8I=lQ1_mHT+"sMgiUplZZEq,U5EmuiFdj=ZE5k%^at12qmN#nr&$G)njX2i89i@m3e6U'6
%(nb[3:lc"&^K`W(lq&_=q(#S8IeHD,!j5IA)LpCNOsL/L7"7^J?5^Va]V^rMjAqU)lO1gt)tR%k6B`^+bi\j>",Ym.r`^mj:GF*I
%Qp\=M(W,`@F7KJ6i@%iUF&&$&1?>h#4@>KBdZjJ;a:I#[lA]dd@oe=-4:PI=ca,?N)[caND.ZDp1IN>O4>)c'Gs4J?(YGKBI:RhP
%+fb@^'=,:UWm<l]/]A:R=N\e!0At0c<NV$r;mabAA7TA43kqt/N.^I#3u=#X9g2^YAR<aeKBC'+!5`tmMq-P@NAM5OUL$#Oa'@:I
%1GI=O10SO!25IrOj3@kF$***V[4Ps@L1-&FlmDl@a8A#&[9dZd49gcFTJC"V#,k<JHGAaSci6uuC&&_>Ma!h`;`5.d-Pq+m`E;G;
%$c3l7k$nBpD;-F+;qT*rhm$NtE.-AuG8G\D=)A5[[@6[8q<](YR[4qEqIWk#j'I*t]Hp#j"4NAQ0$nstgn3[`-0Z>b"JY&;OlQ#h
%5)-=8O=^`&G`hCG]!7lO,!36HIfCGeOV_:0L7.7WI6TISRpENhDRTngSV[P/#8rJ5%<hX.qbPHLk0F'&pu8=K7>ef<5TI`N(l_gi
%(7QVHOVpKqYcb8OQ#0hu&-4WVmoZe;5B0W:CiHVTf1g)rGM1WIOIq.G`^[>6Bq%3WI7+$^gZ?2tMtUZTqsi,Ms"Y?W&WAH3'*_`C
%K`+rq-I-gHh#%o2]-#(S`Q+[npt4H5'N$iF9s65QfWSk4]'3%CS08rdBcrnlbu:aU7q7Op(Vl-]!-2'@P-_,MAgeWP?8cl*jHsPj
%KfJEZ2/N:N!Hsq9%:\)f7=G'Ti6O.PY8LUeYNmYM(5&nX,AZk?j%^ja0!R3bDY5-EUjQO;b8cgDH&Ojdj_a72^+<n[G)"/4C3Y4X
%F@q6.hGJ!e44`_.dH$A:r-NPQ#i"h+MRH!FXRi;f/4OYKIj0Pn=NX?Ek-5d!,`;iCFOV+1:m$GejLDc>@HH,T.J"Y6@.Cu%,Zs4"
%F`kaFW,0LM7IbEZo*3eu`,u;(p.:'UH=7e<9[%*s>>@57'W^5'ITs@Tcc$T:q-;og#^U2WXFEIbjN]/]pA@ggUiZ<q?*lqe.hhW"
%$sJ\I4r*%2I:K"arK/k93\2#AVpLg(Wl=R$[qH8WRE^@qDh/$r[%5*1i`iFRNEnB]Lu@M4arS<HV^`JFALEt1j(q-+a^ch(&7N54
%m1F=Pq*e,O%2#Ml9Tm7P-0?IR\F@"qo_TXceu\RD\G`$cn&LEmOGbY9N6[&*OY%O4lqK-`Ho8+'2<-_5).aqcBMJI8_35T&7OLE-
%B]h>/DqG_HS/3g(:,SIJd$BSq%.)J5U>u[oa$*CmS__9A;ht6LGQO;3krss2LgMU(>1\?kbgL,LanX*5RG\cIWZ.'#$fqJa$+%09
%4]U<HWdmP]+q^-sccZgkd]l<q7^oeS3Ans>hoV04SIKiU0R2Xb,uVI^JkW0_>:gI]j5Y_4C-Q16>)%pu(/4_g*^Hjm>b:[ir;!e.
%og&>]mN72HeQn6bBD`o$ouLuFX/cZioY1"Ab9"uq>\AaWf#75_90nWt[B$:Fj_QA$Y1(_q##kCP0kr-jN6*)5%E&]a7.RYMWZ_to
%2oB)QVdX7:@Xp;<;q3K53?j4?!O@g7$^'"a-s:i;8W?:n0B?.TZD2TI#?t!!#\1XC0eONG=X62big''YPqatCkO3G.AnH-B(;j$k
%b;e%l@@fU7E`LHVH1+C3M.Lspd5a`!/HmUfP)aIZp/&/`;Gdj:/f1X](''$Vj\(Bq\eXbq1,0O6m:`>=Emlg(B?>^ah<^$3NJd1o
%['F)t4MX&dr.Q-;U`@e;LZ(UeSZZ6oZ/0U_m:Lm9J_I)>-4=SKnV]Rdpe=Z3A;+nF#P?];fa7_-W:2tgd\2H1c4.?UVKi1XOcVb>
%8=p^k,,<<0D%U.l\Xl7Q=l"e4\BN+sRn3X\n/>&A=*3it9+`d=cV2TkUcY`HX29__Us7d%X]3&R+S.i,R8o_2!/tLU^[k#6p=R(e
%(BZj@f)']R=92.Kfs14N,6q0nP9I9sUh@Qh>&O)Edu[SG&-u<<rV/;_C%@?[+<@SY8Q2WGjH-ZsQ(@K/)>FLhkdZ][C`c6Ja*uLo
%Z(q8>meu*ueSGWKRL@\BYV"d&+jZ&JZN6J_<7Ss_oVdZp[\\@8#=N;@5Q%7ds)p,XNp(bd.:]>5EM)*+c'Ad(5U.sHI+(q+5h2nJ
%A<.4IH5n_erBWedO'k?XVh;]*BQfgcVRW^h(,fPrF)5E6'%,V3TPOO"\TLpD[sE:oNJHX<fRlZkk-*]-B`8cQF>`=BXpu`0)>Ij#
%%R>`f(c$>1`nq\Z_VR)65k7fiS\_pWKFUuK.7.0Z9Uh*D:,QfBrl5frZ4Mt.O_^=Pih=#".u.`I(H-A9.nlb<>Btcp)0G9)Y'i)W
%p-,<@*N9I?P*tr<<\1IuA$cpjji\-?h8KNd[ilF=A9."<`is\2RtZ'I!egK%FK)i4bfoueYFf`k=H?]+`iQbB<`j[KMu.^cnQeeq
%">3k0b*d3UWMO(e=91$I+3'FqH3T3?KeL8@OkfXU=6:rCh;67bloaQM>ia?T'T35FnEJ+H79V4#]-i1LRuXkgXKd"T>!m.h*>pT$
%-iK,`G#)G!@`HCrELu"CG,VF<#nD9TYZ')ujZAhFG4\_F^*5'_9L5PB+4EcW[m]+rnjZX-4FO*1[%(7&@3!(hPB+'RJcad8jl[TU
%Lk0uLWXl(Y9+#r8r@$Ha,!R'Qnk;pAhb&iQM#<Ra7FB"AI]L.J--J`+/"YkSKZLongK[2HXhUdT^RIl-0(N40ZW"_YbQd@!bpr<h
%GUIW%Qh_:D14KJ&FKols02Qc]F!!1;5%WPhOam7#\hq0k>Q%L]pZc+2;="i1q6q<(X2kh/nsFQeK,cXWr`mnro7&<5AO';2N959*
%r3f;OF>!1>:cPL#Mq`:?Mp-+"B@=M)rd:]gr"X4>5;AN#iLf#6aS[!+V2*!-A)c6JinnKD+-O9:(L"C'f.264V)"5C*\QrWGc$Q6
%paoI54&c9rOTSe28DlG\,9[kShb#4n<@n9el6rOBIk)cijaG><-9W.$^(5G_9&@$#:n;Pk51d*]ql%b[4t`=.58X(gFD<>c5'fR2
%@=P?)HOBY,nDMUL7G+f:.dgT]XC9!F<nL1Tqe/!4N[!h.7<56/^V)'b(%tLWmV#&A8*&?>7G,'L2)L5l_L;YU4S)`nn)1ljRI"6(
%>iN!rqn(KHYHgT-jE+hf&@r0Rg^!Bap1)^0Y]&%+2&@a.f%lEhKRMSU+OLboX^iUt,rm#XB^ZZ%7;$_G`C5QXiK3b1iDcEcdf-q<
%T^Tic6dQ@:$Mk'$d'lbqI^nUlR$WT$D^b_tqF7,J1^*cZ&>t;V?TF\&aZ&?`%Ik3>l(0AiW@?JbNqVk[jKG3qO/u=*d:A:;$C9EO
%K#=bj:EW1"]_`X;iUn3ip\*aDal2V&Rlo^%#g(FY1pM)mT`I"KCA6GdA2b#8(Fg!4>$ETdiR*3q+-aCuC>S7%A;KgXFg^^1E9*qB
%N&qF>ajb/9<;hu"S7rD)On(L&ZA/?[m^O<^EcMQ&]]A]cn]0ori"8qMjM!o#Ys9D,ji$pcEJ5Og)X;k9b5R(V;<Zgpg##-=aeb;D
%/U[nf44$ZT:>8G4L,I_Q,%rG9W$lg\K]QK&NDJbgG.P(k0(1FB=o&APVSVYSL-g>UZ5&QH>o*+PmTP26Lce;6E*Y:3K+dhljGpCX
%]n=bt7^D7TbC8.^Ps4\.@7!]6%lmNe2$#kfE3)##WnY5fES7I;MXdK0I^&CS6PZ-rSRj@G7Bpb*:(3r=H(895!R&ggB@*`JYoWc9
%YFmtZd'(l3`5FmI[rG\qG[hW&k+"GG1."9<pYAbOpe^_2+Pr_L@OCocds'omD:()bTVos'@c1QdIUfm.;b6tb(GTGpIQ""X.@\u*
%83hhga?lRCAJg"H+F;09-kP1DC#j\IL91Ho8g%6@,lFF2^l!KY%je<E%Xg3@#%7W:1Cj.E4Ft%n.^jmuq,]rA2?YOb4AZ4KF;8=T
%(8e>;)lXI>A;!FRQW[aZ0rE0""<=P`e1Rg,@Ysef@Mqh`H2s0UmH'=[EJa)>)-$t6WTF"C,=pb:kb>l*<**!Q>sgI@8Hr_i+iAGk
%VEA)+##WJ&7J>E]06)&9@@RTkM[4fB?M9g=fP6gkJhdt:Oq95'G3B<\UFP%qnJQ'-3XT`&W*[mk"Zq*?7&:l65lprl1fpN)\Vs)9
%79.[ME?VLAO:7:O0`ZPJ.AEdS5XY4oMiiEBW?X_9DmK4[fu54!%,XfqljTWu6bFNPp<`LJlJ,>aERTB]m.`hX7%P0uq/1jOedu"P
%m"H+o&Z<0jpE>XKiLAgFOZL',D)3g3&QNL\f`K(u@Rs>Wir3cd-Q;";.TiCDFeuubIs/COOQ)(BDZO*7KF+XgKM_m#!,'%6\<Z"j
%f!^$:6aV3)[3qH,EJ:Zd7o)Md"346Kb_fe'?8d1PigE>sbtWAD6VQ10/<"Xci%UT96nJ&p)rL>X\1dcinnTb,?ogE+e0b";"!$(t
%P>q;PH_h_<Q'qUdds[^`h</^ir,L%!bg)9c.KkU-0f"8P.BAE7Z2,`c_m/Dk$1d),m<^QXDL4HVaLZ:2[XmX3KH?B$G2t^iTR?]a
%hhulO7_qI9^73WWPfaUpiQ+fcT"C@P4(Vd:\qF$5&:rrS7g=D;7C0%N)E9R:T]=+^PV&$lb^oT,,.HH&EY2GOs/iAP?))U9&d<`Z
%YR^j!OMW$NndiRcR3Um=aMe>nG;CL<B?OEZ-bG%iI<sD!ne]-?0#g/62]j(\4_2>?oLfGk'mLcePU%"%0Q8:DjtTMm'T#\)Q*e?f
%PqRF_i1Fqon;'#^57WQ$*cYje+[?tWZftos73JK@Z^R?Qi(`bd1`>=7/GWDr/eQ>Z,c?[H0^0g"q9VFj6!MJj4V7uV<8.W_!:STi
%Q5kdS2[&<MFZ2UDKEikKs4pE"_[gShIg'_nV#_OuCUlHI'?:[54]MH<4O[egAG??T1WXU@TIDc>l[6bW(PnCKrN_d@(Rp!Z[_1V=
%8kjE/gcM_p)$3a4%A%_a,;J4lL;a'03q*2Me6;@-MrDHqE'R#U#T&7e36QMQ^<6bX8;rJU5FCbLhb?\c&T&a%/M:fkEiPD'"UQiq
%0Z5jWjlB"2huOOd!DV4'gf2s,a=],.P&t*`_P84\S!;B(+jP7.GPY-6EL2r.W4H`s%e%$lkM'&.GgA$Im"8;43>Wd=C8sO7DX`MH
%J7)@=7;W[BdX/-YS7GT_;*2UlbRHg/2Y`N9qin@<:X)<u?Lk'3K#jbK;fh'44B>je<(T8b-?I6`q&/X.qt"Y3*armTa24aO#Vm49
%_Gk_4Chft`@:`AL5K?poChhg#4@qGBi=%=E#Fh0^AsR8U_B@'rmVM1]S)lMZ:!N&fg=_]6/A:%ZC'N]JCs!0ZG'Z@)PV!lB?Ebk_
%C^`JZPQ_6#!ZKf.%er3pRkd2kKi$qs;_^KI2J#X@\'$,A,:/hJ.okGbF]pUK-CZb(K3A,8:!Mc<BOOgtLSmb$"Ik:*%Q62pml(!+
%KhYET/pqD?XtDf.EeeKeTW,4L%mDk_O"Du"3Yd9CH$mJ];42j%Ct9JhLXINE8u+/@!/",lid%'9W2:Jc40P*1Db+2g\;FFMmZ3q1
%o5-RG=+/h8<Nrro.nH4XE,kj_jGk%43%XZo"+c2?#\E]B`MCf0!?tLd7ir"!.do;''\cP_RDf)',\#f.`!#4U#Vm2GXp?M0:.kji
%U/S(b+^e>d8p(\qqhEV,]P>eA#2\Q0O#JG[K_R0"jYi44+#/ceU,UEu#80(-Jj\MY90k:>&9J0:WZkL1;X'2p?qVeRFm%Oc]ZNG'
%&:NNI2ak"-9,-,g7lVD`&DfEQU+IY\Un"&qjQ,i4?c]=3Teul4\0ea!aREepB7R`-n;:Cujn>lchYuua'/Y2g*Z(/7%58U:n,5Ys
%NW8X:`u!WN0.Iq0EqqV*q*+^A)HoIL/C:,G2qqeTHkg@<]@DrTX9Mo[O^aac0L"\-cMW7[,C%B6UeM*Elk`GrG)<MB"MI_C(p6V;
%9mF"*im<DDe-aon3'9=a\erR)#]:(@,q`E)NLU\V?e^fo,FIWKc?C_e$MtTcqh:D!!4!1NCBnaqDbRo_Nk-13-1Y,FX#%OEmm?9G
%IfN\V4YC;;V>9XZ];F_Q226p^p8A43TX64.DdKI+P'$:]?9d=\::0kW(-_rUqbG*S9_Mdc0Yi-UfbB`B(2bitZZqh`#MC:RSqr-B
%r"2^!5Y=XPJD8OU]N#ij)LVB^OctlA'tHW*]$Uj[f)&2m!V]bG[k0.J2JB!_?DMUk3%-=\pC9po#_<]XKLm>LB?.^`K/[X:&#@0]
%Jn4>hK/e/5o\oM-(leTe?8e`:WmHRuJc2i-n*B`>D,DC;N%33P?r9r8N[dE#W&r8rbcS7?>r2sZ9i;,53%6X/b,/WnQ)I>]ZLA",
%$J^r:?t%=48Fufcn=FR5FV&^L@;j-Be>K[9YG+3c]^hk;F.X<lTdkX$<PU_aLGTREK=4-P2A:XlJ`'D^GbtI_Z[B&ei*ZG+':/<#
%7KY<E9ZLn64dsND)JI>/pe,S1QCsCd3`aj7oA.(,n"O)M-:1L\6O;3VmGP=SV#4iB0Fj+;Ejl0>71rkbWpLif,mndmHQ,rZR'mXm
%YX%u$[+7AhV+2n<+nNMS!o3>%gM834fe\U$d)Ic-"(Xr%pH7I-<'qbm'SA6uW2pFCrd]3q?&<73,kf8idsZGXg!"CqDaljrRYn@n
%BNISR7r[up.*,/C3l%kRlL#;j[V"!G8EX3(k]RsNAMkjE)X76%\#lrshm`L/2]goIW*aee,M7`65<og?h&Y-j]oa_)To7cHjAL*+
%+E$S$_5@MGhC^nDf<`*"'NIN![r5F;GrG]P!Vg(D5aIhjW`Sj6PHjEo<-pM,Tc'S*TpKT>[SbksCa!ZYde@#3T1@X?o2`ZM/%:fb
%[?[]7Whm/*HauZDUkbD&8!Xb-l3tC\\j"uke,YK_BAlN6IU=Ud?MRjC\*+QERNgZngk`>2ABTcJn2e52UD0<2cSu-^9"iP#-cllu
%^t[[((Cddeho:fk#TmQ((Mp2/)QJHi9:^V_P9N'Q]_kU$Xj-pPfj_!<0FULr3BpM5cfG62BQ"2eh.R$DTr,()&5@j6eeq@r)Z(Cj
%o"^ifNWGZ^L.JV.cZoKDT5RY)`.7F!1a1M(-Y4TT2BEaUA?%G=r&@DnUFGE\9m&,Wao1.`3Wge"VkMBig,i*&MlttCg?It5//GP?
%)++4Rb]Ej+1h<I&?8/7Fl"kM+n4bDR<X^i=h+EH6DFND;J@.q+Oj7Ra*Ij$Y5Ate3_tI\-<!R;,6i6h^XdplSLUHlc\Ub4uE#&9*
%n:Ec2T/2/nYL>UhWO$iXC7`WEFn;+TJSb?AcP]('.cram0AS!2cXBqGGM1e;:q&8T2jRkRf3PR`/jdW?2br[)gA8]JB<c$7]1n]G
%pd.LZDOi<!/h\291(94,7k0mn^iR(*g7:-"KY9eZU$Zh=I-d/kDd1<Ye!I0_r\Q0BL*8&Se$<h'+[0f-E-X+Qi21M_-W4i`M.r^q
%[oooqK&.Ch^nJ1=+EN49>C/[TU9EcIBHSg:HPTM'Xi[q3,do"^nkF^?5+["^EBs^/`qtWf+\(Q*/NN=YHguNLmrcUIQHNO0O!gnN
%g@Ka[Dn,j)W92*k(q1`NcO2F=JIfnKC2#rZg$HOE2!7'h>aG-7qt[[rQ)jYM(@,5oSVD"4E3KlYIg5L*qX"YSPP91`p=T(0+7o2<
%&_^-;P7]MD@$f>aR8UQ<UCNo\o#A+DD"<-[0V?CiE:A^K70miScCt/5-:9$!3SmkKkStG"ZWjeV],qWQ*(a]d[%*YD]Zd9(+6Bj*
%Gb\&`%]oH#3;APWr;!e2i]#a1]ukG,Gt>e<VsYXX:gkrsMs1JlReQ%a)oYkH_Cs'2;&DDY]j\M'Y(!R/;!r,@RE%iKJ?EqK(Y8CV
%7'S&DqV]@GXjG9E9Y]k15M7)n>7ckZ/)[PfG^n.ijaH^J?R_>#n0os8RN1b^nuZV5855do9q-r/"HZ>Y1dte80t/[l#Tb^s;EHL2
%58\8Qol4ER0R\0-'dBO2bsn:+Lnka"&g>a?$bnNE:#PDRmu.aJQ:E-[jRAt,E!?(r*lEW1b&/<hhTj;JQJ"e-am#+KbgdW_^r7ND
%<,UacBEaaD'$1>j$(Brl@Z3GWZA1/ZA>NFF!f<ch8ns=!_Zj]?9MYnEWqFUBInOKjW'F:lluLX'AGo!@XG.#)Rr7uNX"'SBEA5hh
%O.i83ZIkR0hmTSoq6t3G\,#AO0%8L*HpbL%dp#_coW.'/hlqm:V;,F"`436hFcM0g&pJdKD`ZaaG<A'tM?4,9.j4ElVJ<;`rm!2d
%.kjG1rse":l\NWF\)/(jQM5dC9'B_nbEEM*N&sqBSXn/#DX'.LoY>OE;2*QDg!*Lhj9Jb4NAb8,H'oh"'d4!B&>jb`>8d_30j$aV
%6cp.CQr?jk(CQV8M`*K@JjL8Rg9$#\U>D4"L$9p^H>;MMP^A>0`EZK*>V&E8/sbV&9CttM:4Q[WX:h1ks+)!1Hdqs:8<)Ll?Z<4E
%!>&M\WoKVT=5u&'nnHBN=4i7=2`F,j*==lRW@9Ju3G%^qRp.,,UG+?A%IrIR%V3@OZ^/+VDQtfOF,`#:0a#T1`m0Ug40pK'Gs=Hn
%(oDYO&tEt]<YNfjA-+.q?AHT"e@VnH;&#NbQ=NC23taWg5#%Ejm&dXjhIiP.a_W&dms3r4T>JDXbP_/5fYb$Q$r]\h?6g1d!m9[S
%G;]3hihE<FaT0id86S&P'`K4/&`u$hHW]biogQ,*3]la.8.W1dR9lNC&:C,oYW>&82'3BkPGQXD*&apA$WU\mK_%0$=iM,+S3%-k
%:r<_fl'cGm"kp)N#;VCdMs`DhcpLA`@Km9p>V8YYG*%8gS,iaU1(:E3+0alEbm!*=+7pa<PWYqC@0#cSo_3sm"g[@;QD6tno-c3B
%d(#B,QJpK]0-QFt]RsgB_#=MSBpm+*Zs)dN%pOH:$tO@N;\TW#d%a^2c4SmR4P[SC/P(F8p"2qgIO!L-bU0EoC#Ct=":,qP&.!Cn
%6/s]U8EtJJpe\Q]<kC&:-4477qj%]%kG"Y*X$@89XDOj;#=O-S8;>dJ!B%hdW1!pHDWiha):T$hG]k!PYRrG2>rT&.RJ!nj7JM95
%o?1*$H_T??C]U8iPGPQgU*W')@@u,5EUCCZF3pNqEeedL>7+p$/ScsN';M9Bp)`APT$;I(4Y6Zr'JPt>YON#XcuMgJFD=8A&$OH2
%.do>.h$8)eELAgD$1Rm@Q_C[#NGd2\DCg:2Z%M9C>T,\!/g00V3HG`4_Cu:LbH1CRO's.sa%)0p0a;[mPoJ&g*)fR[@tlQ&P;V(F
%I9T3&6f??MK]T'?Bk![l!P/k5:#,LoO<!KF*"&2]R+""URCj@.$0:.nB+Xip6P.a`'5Kk;:fpfL'/R-GmQ-Ng6&V"H"WKWj+O1"1
%+B0Ue[t6oK8$[m$MXXrTQ?,XmMju4!BqjF=ph%m1[IQ<F:G@$5GFi8LG+e7@3!Ri>=V\mCKluBO'1ok2dNTdu^lAH9.rJ^[1/Sbh
%;$tNGd?co1PLXRSp9(5]q0KeRCE"YBEVid#=WJR)%B;U3o]C'<X6DtQ<)W:X4FnkJ]WUU]H=,Q2NkrOkHk2K&$nh&Iet0qDTdjba
%=uHC$M`%ZCiWIhc3?Of-q]&9W2h/PN,ba=-##E8%*08-f2X\T\(nhe=>c9p7\B10\%o)pm;/&oYd0R_?Am*+]9\3U?1itag-q%.0
%*][o5F-,-sYS3ip8,7S(B<4?8K4<+/C'449*u=f3e(XjA&k`S,gTc?akAFDD5N?!pJS_4frbQrC:^9/1$kDEPmE.^t/eM3XAFu]Q
%MR4QP6iDU&\!F1H9L%;>gH?efc%Bqd3"FAl-gm?YNlUk?4g@B6go_b,4ojQ;T"ZGH08NM'os=^?5pT<)K"soH$DT]m]SSPVE6RQ;
%dH5UDi>A#?K.RsoXY!i\&;XInV`H%@&3Lbf8M:A&-MN9>)8Ok6BLC<:N"I.X4AJ-$L[d&VmsK.\KaraG6I\64%,k5:"HXs=3&ccF
%gW*kb`$'io#tGZjW,*LBCO(6NfWm%5#g>>t!H<HsP/[m8lGE[6NJHYLWBbAE\"lPGV/G?4S`LDrH/@R\q0cRo"\V[M'9ID3GIU%a
%Rd_&!hT-(PYeEaXmiatS(#X<ZIM=/3RBSVh4=$0n6.79L-*\F&6b@,MG#``5'1Z5Of_!KUh#.XbW(<KX"Kd@lOK4MaZi76>-Q$6q
%J];F:"sRGSP^#mbqY,rJQLHfUE>uC5EdJ4,VBd8,T].B6U1?rU%$!!]Ds/nuD)9m?lOV=dg3mlHd10PcZ$MfD6d^.r)o^jr6%%Lr
%L./,mVO$MK."lRK$%hfEf&)`W"GVe=#+1ar&/N#:KKOIU(b>:[/EU?MN^(^l4'ZEc7>10McGqKVd`>?K\'OOG\sJU9T%T%+iEt$T
%LRoa]@ctd&ab"YO.K[K=k9WYB,p0<g6h(VFAI3f,+!qq6:)#bXnFrWINj!iSk*[!<JmBU6j5_(b\VZC6UqS3mNrCB7%2V's+PZWN
%Lsr9fr1<naibL,GH9:%O[Tg:qU!B5sVlE_TOR8p/;c!AZQnc5KZ0Fo3SKDd;.6/^99Q`P<0d`#Ma5tD&?+Y8VO`YSpe5])c]Ns)-
%;3M:]"e?3AZ=)`QQEPob4XD1-(\E;:Y1sZ3I[28H8[6,eZJVVeV*jdHfM1/Ib7BGtlM%Q*^<D?\(`+MLo3R*;M5BBtaJU,&"hEIW
%nGmi2Qfk]:Q6AAZB%[TZ.!VR?a*P7=Z*#-Gpn\;m#E1^uja+h-H1)$>j%;JcMBHoY=!=E`AQ$eh,]sK'.m,lrqNV7WPP``YZ!K>5
%F=_V5K]Y7IXPb20T9G2_(4)o$*3fOX]=62;c7=68H*Gm%,#Un'2T[KTEWMB@[N!,=0A=]G!h467n1Z<K/(B^nF`pr[md_g#Cg?'o
%]sagjbj.nb$s2Y642j>IpUM_I-Xs`b\I)T(31pU,inhfWBW0'LCIQL,@7V"0I7usXK"t,u@i#LUocYi`Zi)2U'M13BBeEF*".ciT
%?=DZ#3R)1Xo]P1D?cI-/gC98'T*N'op^XdhkS7jSk]S$Q_fG8Kfr,ac<b)(]p)$<G>5WR>1`/[#A7q&Zf@5r%]&DL,<f\rsT6VQL
%`V@E\[R[NuY)kCtOeAF*8"MoTlE.%`8Hr5G>;nI#r]Ecr*6?)slW)S"GoWiR$kVt)d#?89Ar*hZ[B^7"H1hSj-u?dRB$Sp$cL-:9
%6AXDR9_&g``o:"u>n!"Sc'_54ERQt^GUEB=s/L8/<QosK3R5e-nPjX/aI.r2O9i+]=Luu2.di2>Np2<#L]Fq)%F5O(0lh4n'uS;d
%/",0QI.^QDdfGXgpuYj92q=ukmhT7ZbV\35dfOTN=RPINO9+0Q^)D$M]1+Zr5XNgRYWIKNG`g1^W"&Me+>A)RlB&`$QI3iK-.<D:
%(R>f)>`^d.=./p?\rf=/:WH4O#+nO*ib)';]3a16S=e+"Ru8R?]5n3X5-)l.QAF2lcf7CCYU2T-\Z*7dTAM(Eolq+<PWrKA]=D0)
%pNV&aGT/rSdL(`TYC\,D(![Wb5g\M9('Bj!g'1?4ABQ4R"M%)og-\4+2i!uoIH#W4^RlI$6C0a2ldnY,'^#l@6HE!doZ_@i:Y2D3
%q&L0)37=S4go[WBQoXH9e=ACd.`^6+_*n>EO%T4i>KhYfdE^h\pZ^*!+aBWb9:dXCmjfC0bB_J1E79OZ-'.'I1YU3Q*^47%?dD7O
%n=qhR0io:5j0Ce^GuS-"E[9\ZMKKSh&(P<B^&:\9o+(aLh#*)J^BOftED5k<4&#Yc`27c5?G"Y&HQEDj',uA`+kB!7!aEQ5/eBo-
%VY<7J.ug5b,h<*R)VqdbekDE=S+=_=P5`?<4%D7OK*cL^=2aK*Z4+"L0L23o6R8fWG!?Sj5[h.%:C\1]]s6+=[=]i#aE)WRcXWm;
%=F/U_]G#8Je%^q[ob:m$m9pAtYbe@.D6LL=NCU=-(<lObN'4WmaP3>4F`*0m3SK`DL15mUEk=RrmeKPp*s&IPUXa_aRoQ[fS\Tm.
%W=<fq'N>0ooF['\mgDmX<)Zn-;_nMFRcHt+#n:CPDi8Va808(\RqXW:rnh7TJFS&NkSUd/SY3\9*nGO^.3aMUl;hE182#JuP_@-5
%R(^uIdc:Kd0NaiHQ8C;[A#L!ghPnIQO7ol`&!q)_R!bU>,&GpEaLf$m-A4R=MM)[N_-@@*h0LbjHbg7nL=Om[?UN.QH+UR`nR!Fq
%9U)+^d?u`e;!]_Dm1Pd>CAuG`n?(iBYFN[.EU_q9E6u&[PE9m@4bAVD,nP42h-2(b/sj6Z.m7pd%j1!!4hhE\aApsZJ[&@b!L[S^
%)>>b''mFnMBV9hU&Q47=dc^"V?]HSkVK8M[XBiqbIAD/H<)qh2O8MuWZ,`s.PuT#c(S0eT4)\L)@d'm9P:.LY6T?P.JJ!)eCW<J%
%Y9>P-USfTiG=h[PnFGp"np-/_]_"BCQR[C>DJiBlc=9tX$X]#X_Uo3o^n86KIVpGTC:EgZ4fJJ:_b"ZGDTV#dZ;V&23+s^<'kE'S
%;F/7!S[XMPSIHorE%gksQrPeD,.;`\!oYUAg/.l0Q1jU.mVkHiX[dnd=N%0_MUTiD5^7=k."EjP15KBuY*[D=`s-b_aHNu_8`'QK
%h`4SL\HMIo+eQ589ZhdkS_U8p]1Ea!a!1NP!UA,H61]k"()`+HK)1?B&XG'0a+abk,%8J?TEO(&e+BA1oA!*6/"N+Dlt+aY:0n8F
%C.HuQWM)4q\RCtM)gj_X281mObCeop?L%FA%d,'<&oEi0@UKPSLXXdR%ZJk*LFWfJ9ss!i9PLW@^iQ>i<5AiLC#)45X%5P46QH<h
%W2"Ya%0?eAl,rBu5tIS8elaA/\D24h7K/MR4=9$Dn;S0&(?sqXA(k4W+9>j2A.>g;8e!\$LK,\d>p&mern$j[8VkeQrWkW^Q_Yn]
%I1=A[YsY/D/Ii"iRBGA-B5r"(GQU1<U?7-;d\kl2;[j7k+8Y'7D]fj54X:'MR4IZ%m<#ID'e/Nl$7a'"G.M??#8W-iY5TFaY'<CV
%5WaA]k<lE!JMpH0YUpJMYD=JckXQ5-%O[#EPLY]Qc%EFZO=&8q,:enJ*cRHn(cd]T28EIK_e$C<C-W9BNkqJ!jrDg;Wn\o)("tcJ
%kt+%>J7s$7`-iFY-6"]d'LYV`]eOA8S+SidfG%)afe2]"j-;a"C05Me102c)FSRqlf7X)E-1nQropIG6L/OBl3f6maUaAN?BKKIm
%oLT"*p_H'a,gY-rAh.*:&>onS*o'0&?'8Ee`7DBG\P$qF2`]D5lrRRcH;JQ0T?C`)37ZT#!CKDd1);uL>1&'CorrWo2"2cqk+f)t
%fK<Q["*Bt]/#TZEL$6^+#'@4!$b1M!JQqpSTQ@b'5PL'@^3+(',6Q.oG6)i^1F8<e'%'hWCns_b8MgfR)a7K4S>u#drO8T'J)g7Q
%FO`mMk+M,?+W.Z9n6P\FElFG_dQe?@$Y;&207&*i--FiS]U,k7E:rq`DW5+6kT8,kA3>LOHq^^)p+toH9/8lCIoeaR31"u)>_7an
%r=Wm`6O802QO>7j7KBm(2WR@bH.e;4U")*K,HQNNHcmPFi4K8?.S<5hep#*L*2fg:4bohB0otsgIUo`U)"BZK]15n]@8Q/3Ltqj3
%TEr>6Ihb=+*QK%9"`o1t7)2P^Eb:_?@Ye[WFI,,UIBe^BlL^$`P=[hATmp:7)3'Z]QFC=B$4p[;@@XkP@iEFIU*=kc^ECnD8qr[V
%YHhu")C=j;L:2>NM-MI]=`.i'^4FYr\u,\D&3?U.81PcKE%:0%Vo_8D[">$XR23#U30hbDdV[/cD"XtulLVMdDlN"EBLe1q#-]iF
%mV^&#C>.gk&+=#p=M9[dMRIh(N->)q.[i'F^'p#Gc_sAk-sC(Y<?1mljIS:4&e.MZXK2Moot2;R<sGNa)fMoXp$EF!$La!f?B<k6
%bcAfE2fmKN^Eu'f"u(&`njtDD$e'cW1cNH$<nD6804R?H'C]+_">-pN(SU6&r<@s5R5f`,?>gt\^Ih`D!@N7<qfkJ+FXj%@+Eb"E
%KP@tkAd[nhco^\ifrIcJ"l.()*`K>%oRA4jbes2#JFNkA0Z*6+-h?ZM['Q\6gV[IC!SG9!<!#\GrH<WRYAD0uI:npfC-LbQYe`K<
%3;R.SXVaOr)Ddc<*nI62Ph[Rbpa?jD=/P7'=$Ci"?;ptilBT&Ce(m]3oIj90"s;gC4`?Bh\5mcZ\F=]FGC_P=Jp+arG*]sOP!hg.
%c7;7#.l\9oP4JC5i<m,^06^*Ni_P@UP+e)G7;Bo>hm3CKfIEO&"j7'kEA'ZnO]B77>@c7/,-lt+G-Mlc]/$f4?A(j9/s`:K?IZ!+
%hsQ\672Ls]TN1oBG6SO@[`5#>^q=^"??\PmSDcAlaSfge!R%%=1SVK&ccrS0%q3M2#g$sY-G%A3%CeNj1(:/5!meV,-+kI0)e+"U
%1\`ZtZ\`?(9,D8t@\=E,hTpur&*o?d&JjgWgJ;N.cf^4CPYe.31B-JgU8fPJk5=nnB.-X>^#bPQ8Z$.YHM@Lj(ehL7%+AccMBU3)
%;ga6A_maqo97'G:7^-A9g-(D#$L#3T^L9DuI7.%<0YSSo;<+?E[.PI]D4l[/8V9iL6nh=BAYGS-+fBpokW>q?"sYnIZbXE^@G4V4
%`tTOB_T(mA5L,]OlZm?R8>cCXR,Tn*VKugX%9oO.=J#GFScPX^XAE.>7U-&oFNQc!1D(ap_k&#I\O\:_U8f&9&UtN&5g+u;ZWoLQ
%V'Q?g]4)JVmL6*%%c>SX\Mspi!V6<fe<\D@e@@&Adf319H!DHLOW3[9.`:Ag=<-;u89TIu9lG:=9n)19\Kn^1&*M\iQq(aZ<\C?\
%>muYbSiH%gEuZJCY%V=:Gu41]dpkq4n.0/`9(RY')&`%-%Jp_tZk6(BAb8-W\>q;1^a5h_HdGWZDnh27PTXF]%Im.^XYT(7,QR!M
%l@(20`=MpV/'#:D*mKo">Fg#Bh@]bdI\_Jg!V6$Z\1XNn&(k@CC%Q8m2Qs,)lD9ij:(IUljMc.t6:f$UN$.m##_\>RN)Bl<)3rr$
%HgD;*mlNh,I:Ko5DAmiVGgH)rX@HNe?5VqbG<%NX%Jb!N(n'U-[EVFO(SVkd5S]W2%O;uq#GX7V;/o6'J7:=ZCM>&hB[/S1'LNqU
%,qbr_db]Pb1ojd$r*h\_$ZA/Ud@IAHQuMqLjULCs9<i9G*!,(r,&S=oH:1K)*U<T&q5pJI^Do7pWefqk)m%s.6&DAu$lhRo/JXDA
%.$no/@mJdI/aG]t:1DOj("KND&tn]p<[!=hAhC2VDUo3.%Y&9,i%F+RimbMAE\&CG!+)aM)Mt:#Sk9\aH'!K[-t:thb*L8;.H(^6
%o$mJU=hKqa-2mB7X]D6"Ps0SU=/F4!6,ZVa;UHt]U8Q^i!t<l;\tqVemH"X]7FCHQq]'X@A!^pJ^a*]&4(ZU5e(1D\RL*Y&L?I:Q
%O`dLK5L9!0QBCBfq$ks5GC>CQmGX48gjAqP<cIq%<c8M#XRFh!GWgom]YK]U-U_b%bMJI<Q7Kh(V@ed(S@@*na[L8W4q?IejYAPp
%H]jI=+V?)?m`;!js#Aej?GSEFJ/28ApKatq+6A+gr-Vub^T,0GKl&s)b4bTg($,-W0Uu#a>E&p:-t-au];P6oMGN_4n]&_!decsp
%Y.V=1UVag&R%.(+A>i;LUIN^/Q_&sArrk:kC1L`0:uOU*aY-]4`('oK`FE-jF;T1BlTKSF4>Flsd19oF\$0-b\<T[)#c`&O'I2tm
%6^oj&VY;i4`5(<iMfXDq?/?Xf3r'7`^Tt[8Ha-2A;mDZ40b6-@`0J&&`['g/R=7tlRJ&tN1)a#:bf(VL1,Q#7NL@*fQh@kN[8n$t
%)P;p,#9C[?*qd2h"Z:&T#TQ#5\`=u&9liVMp4pJd-st]7IY*laB-^l67JAe(io[Yk]6$:R).@W"Z6]sSJmmORh>PGa_AtMFZb.\q
%pM!bO4h\ESlh_GC;KEm%-j#3p`hslrYAIG@iW6('E<$C_GTag2$Q.Hir:XSd2:,j_l7@)Ph2ZgY:_6,V)FhZd'Ep%SUSr)G%&%J/
%2#gkC8qk0Ib^mETA[(@])<=\6O5Q]mGeN<eXF#KVq\\.#0fdU2Gha%AKLB]u,L(LaL_hVg=&G[^Bm5:<ef,\EbJ8YN,[t%;4`1"s
%)]$bIA)4oid]H'DH5k>1F*`&alKVp_d=Jj`?;.RIOd/n^bGR[ANh$`/P3?e]H5,9dhkU:MG$DX5K_*.k=O*rTZ9d,D-u:8>o8Cm,
%S73MQ&X[Q%H%N1M;(r^n%H@W_n2lQfi;=%nO5ts4B0CPG$Uia2o&u?ejuL]g14"1i-K6K9*XKOBaGL\Lm;<.!=<$7okMaCV*BA<>
%clQRrST:1l/BSUG`UGF4S_8(5%Uc9rJ1Oc^_X]?en_Csu,Nn@&5!0s`SsmP!R-lfDkO!Is*"8WFC!$4O1p0.$U9"(C/!]J69#Ug]
%G]7++D\",(m9gI0LJ^9k<da=FGZ<p"'tT!`#"Qp.`C5u0Ng98tK19U+@*\[j&Tr=ff2A^@(`C\iHRPId_BSSco0Mig""9@u(6IC'
%qEQ*@:9P`9j0/-3k-IrMY:Si,+hQPTo#Lro9AtJFRmi96$HTIlp%0.D_-!4M7Xa?kius7"O223_ghTXXoMG(W,j-oRfSdt[0f+HL
%DX\GdNHP)8MaX7A(h?3gbG2=o5mT9G,BqndPtsk04bg2NHsH5i35hm!!@OQ^[fp<9Ks?#/0%od7nf[9LNK%GY4E6Y"]6loJ_KK";
%cCR$5;-Z9HQ[e[n-B58m4RFULlH0Co<*>O9_c:=>Ema8Lg]"^1S9HtLDNEM#K&-7R;7*:34k\]ZX)k*TImelZ#rs)iT5g\crDM8,
%Mt3:j"i6ItOql1WD&99H(B<#51-+2tne.*c'JN3_&$W*+60*?t-]9.n-R+1O6o>Bs'T_WDFt*[0,#O6g!Q%9<Lkc.+L=jVu+tm@m
%Hu'*j*8?D1%$g&o&KElG#V,,L(nR=rV&U@JD"i6i8Z$Um9=p(c5*.a2$HP9]A%Qfh]9'T[QRsb93SG*;@3CE>4]X&8XK2@X5Pu9M
%gphd0(!H5>+SSJ]U_-u`^A.h_S`bC@?7E-Q0C\<8n]rH>nl[W;E,.MoLL5oE=#.WmDBBoirrB[J#FN\F7Y4"?NW,8aGnfs%b2(4=
%Hs-otneLb`H>eoZdAa]3p.)FF74%dB(R!!_QHd**,HLV7.bN99-\Ce5%aCf7,dNg=^o7`:TB9V(bEJnB;TI!Hk4%bu=k)%7GUka6
%^eh&!Q9RtOE<M>%YV#MT8u06#%LZ$^V8\NIbGU4RNC`\)Z[2P:BbdReI0A>t71.F+GmaE]33&Z]QH8`\s(5HqdejY4?X,"i[RZJ#
%$5g$>A,2u^^7D#pnFkAnHFQF9HtHCg2$da[bXQq^K]YcYUD_I,fWuQ`nU\6Q@rIVf'5%.=#&^VN9pmItT2(ODmDi0Tg/,Tk$Q5(^
%g'V=B@'ru!go+2$HNmQn*VnWH^Vt9dND2T_ceRsJ/-QdN*<A9BlIpqu>W>-dH$_]P;GU`X)3bbbRKh1N;n.^9f<'">(D7DRH4#D:
%3J_+.oCbcpV4PP_o#KcFQiL357GQ1i=$p(n#5&\qc`!a<6!BS*.!1%5'^Cm7F4;.5)41cZQ[0!aHO1@m/*TgpO&%a%l:cm;Q7j`\
%'^G)%1(l/2']tZ<O^k#VZ&KR`MJ"[ap/+T$*][3#44Kk$k%'O[*s9'jV4<.NLD?IS3<ab*Rq;'%K/muRWgpr=d]H33\\.oWWMWL1
%$T=>.;mIl"qlW)l*!ha(bgG82.M"W=]X-7prGR"LY1HQ*^aAMI9>Phh,6u'i[sKR#@.TCj[U)SBB$q(/LOT3u:oeC)M#;[0B^tep
%UbFBUnoRre0@!H/^m\b1_;kkP3N/L*F0Q`l<`5ke"B\\Yf3r6-R5h=q7S34h6AOC"RS??c.r32O!_.E.cGT3.MkuNPSF#J5n7^(7
%L$b(4:#C(>"CVf/ZV\k\F"f<G8OQm'Wmjn5S\9q'FVL_<ofhXhbas_5G1tWT9`XK-bbf9'?:SE^ORAm&_E?XYjE2/KUoLDS_E=CJ
%QT>IsebrN)_Q`62i^1TmG@cn.m#eQn@nu(,;FVhd;[ubGo-%PfouhqAje`)5%TU<nK3q`H(qajJW6ZtB4:jH`5<tedC=ede'^Tt'
%kQ7An9&q$P;+ANI-pT%,'T<&Mo1U$i\Z#,l/Q0_=bgV3/9)4-cVIi>`@sWB[=&15086HZpWlmM'U1`kHH2@4`[1aUJ/J4@7M2(j6
%\:.@1(/?R!$P_"*1ReVSQ,3j6Q%2ipo$$6/PS[)^V/Tmg7-\?iCaoV+Q'@XC-:J1'KbJ;"EUpe^_JJ#d&$pn>[gX4l*h(\4/Cq3V
%W%UdH%a@C6h1XHZ7:k9X+G3iFlR"_*f1%5\*HSYG)l%A(E?1<>N)7<AoeL0BX\Ri([ZX&i)i:gW8Y?Y02T,4Q:@["c>.nBq0i$._
%.@Yk=NAmt[.F3/L<H6+)mNOusRdf=_o2(kIPf]fG28s]>_,-3Z)"REcj"tS-FCWu)G$VLhJt6s.U/EhAJomj6d.CfTQ:k;UBL2mA
%!\4n%$m`@BjbI&[,J68RD^h-:Z>1nXO:"<Gn+tBkWa07D/dI]:$$1CY?8;9/Gl.AU=]lP)&'jF_>,i@^ksY%E58BgT6rjpYm*+Wa
%?CW*\k*,8JJR#MR3:eRmQAPui\DC.6-;:V]=UHM"iNg'7G@iEK6*f^gQDJ!+losn0+[G8h.e1u2HgnTjJ*9EV"VY-=H,MSdn0iY"
%KGfUR?8*Ob;D>pUS4B)R"`j^UbA="_Jq6Q"hbaT!S5P6EJ0hE69UIE=RaeYVA%;^E]TO'U+:Mu56Re1*qL,@626Tc&559I]j@[P'
%H$0"a2O,ds)0<m?q/su*O2m"Y<h:0!BI\B]-.dJ<Kq?4d$&5r8W1uFhpm,(i3RO[(K!"7:iPYdZG>AO>a\>X,?u5SmR[maXfm:"r
%F3nJZL:tfM5'jJe3HFpn'V6pQPe%-AH5u#ckj!:C_";&:67gXs=Y*uN>uE>A?jK!!'MFhBD:K]hB8BJNX!JTEHe8G=ouYL:bL0-(
%2i*-61%_AQ$nps)4H=^dPYqh-YrPn)MYt<1Iu@1h)ioL@UV6SQPaV(Q_6i2^?*7W>$uL>s=Z8($A1[u2eEm-66K,dlZkb/t5!mGY
%Up"triXS>Q?<XIe*u%iB*TiUfL?>i'o+(.n?pkCBft'Ym#);q^oc.VX1(#,1L??,$2i0t`Qh#DC7K^7P`e"iIB\KMU"jBeLXuX!(
%iJ42l?FV`)bT$6okS1F.L)@q5?d7&r4ZIJiS8!_gXd2VH")_Ne;0U_Bj1s<ieJ*\r#jr<eIONc#0UhGflYCiZ^`hbn6aAVD95*Xe
%KCNqa"=6rq?Y@YZCiX;Tm,='u2FdsoL3gIl&tfSmpH#TT-8H[pOjb&>gcAnb-MqD%`Cs%8,B4XcV?"LL[LP65Qh2.7KEjetr3B(A
%?Ip^RDmrfp3W2"0o,S02YY"T5*V@ETTgn?YneH;F6:g)NbfO\h:chQ_>j[ID_V.]Ti%GgE<`Ff:;Z'[o7-asI(Zg`Nh:=Qbf/J3'
%RVqq6GKeZWao+i,27=5QLk#qM,(4]HWq0h-kp\1iF^<B::YBhTU1@q2CID`u_DEdC0:,5;'h?ggN+tm,?E]dIOM^Ft_OFWT]@M(-
%3Zg/VV,Ecd9Je3LpZEGt'/eQ$CNuA!\SQOW?ck@Z-/9jklo*.I+47[>5!<(.:R>DE>I^>B+N:;T!Yq3u"JZTGY$H*G^LWD.<eQo.
%fin5]s)e878=FOion_1)B?:_l`Z/On95^IY.1_";]3JZF`!c_mg'S$Rn-9:%/5`^IXR&Wmd5nU&"VZcP%:g3eHWO`h9^E,`<q5!!
%:H29')b^Sp_3X/_'t(>JjoAMind&4+b9B["a5eH;N4fVVh&9U)lmcKo0n0eH[q5gQKl45/`WkPle,))h7GRB)>A$LI$J0]?)-"F%
%pe7kCQqP.K"=GLsQ%9Q>1#?'U6Yk7N/s=h>:8Tm)Nc<5OLPa3=rA.U3-okaNq"+QES/#VI6H*-G9>ZqsrS6crA_pEr"RGFe@no&#
%G'iI1=-g;E!OCP-E"83IN@__P.p>]OrYEZ?Z;XFpTr9caO3.si*kbn+Y5$Z1]Ig0.VM*Dj*7CCe7lXJ2DGYfH/n2,PQV'q8fWsTU
%oCrdbChR\U3*f&>bOmV[M&=)2%mr+A+n!O6^u68&=$l.d?8nXkACLJ7l"(5:0Xj;?YC!4iX/2)O]oc@i3j3EJ?en;HPUfkl_sE9B
%@RUU8rfI!:p=s4(CZ_N9'8K_iA!:P3M',p,'SU@KLdmnn=D9UrCVF_bT15rEjiZUoPV')8/A4GP";!`4mGLid9@SH%m,kl7ZiX^^
%j]r,Vd=(,]S@[A72Q+ung9-AIh>F]X/OT62b,3od5;Z3:Y?s09WjuF\V:!Xp/'(KAf>tudRcPG:oL7\gJPF!?WnL]&CV$bbdj;kf
%Z?!N0C>?jY]m?PQKhQWG6Gj<^0U'e0B4&mub<&keeN>FdA<"8f8n)riN"_O]9E@H@[&^`8F=0Sn4T<L'=LiBk\Oq(p^]AuYckP)E
%#^&I(oJ"NU>]s`4/FoYgFLjPTT!$Nmbhm[Q?Df:Lh.h!1!gL<o5XIi66/UoI]L&ZWb75D,%9]&+.8C_Ze+e'q(#dFTg$?`7_D"6W
%c#^liEu?VgJ]!ql6b%;C,Z7XF@-j5NVN7tM/5a7$q7gf9ZdftL%R'q<<eM2($fHmlo-FNMh(I]WO(UqlBGr_qA:ho(mM(XZ5M0,I
%2P7Od5&0Z8!j\"ahQ*j^6_a?nC./;"OhBJ=Z@;mt1@9,'n\!Z1!%*[-gB7-SU+01hd1->7<[84+$;sLQ?>%<JC\s9M<F7[SeLb\.
%[9XeL*m=^XI5A\'MIaYJ:H(/u9M(&WP\YX"Rl+O>*9u>E"=fU2e8Co3l$R?GU_6%,?t98/g&p(C*+Hpnm&SIb'ig9lR+QOlB4)F:
%]V9lH8ltV,PfhRn\gg7b+,+9lXO#L\"hDP7EZJ;o47)OiOWhb2;:eZ-VnP*L`H^qV!soC06uD<k#?fsCWJf_a0sIXk(X4O5e0@g.
%0JG\oU7S!,HK[,RW>[HR)1ZShY;:Tu3SdOgjRW++4^I97Vu/S3/Kt%[f9pO&YSpck;t)G/+kVXgK_m:GMFd68B14(j`+;O@\.li#
%24sjuj6Wu3b'ZdK\6:?&n%A&QR?YQt!*Amr/ag0_9'0e('X++M>t91/^f$`j$?LjJ@mW/J58,\%88-*l/qhg9@d6s8RQ)ClSf1+8
%[O[:QUX3CEQ(]!+7(QocH+^^%?&-L6;h(ck"'\p^.WRHag"OCF3WM*?k_R[9Var2p9d53Ol)BKm7_nHBMaQbj1MJndW"<<NO^(c]
%]@;s"d$s_k^au.aGl7;P\C/G3R[\@B-KQ^'hF";$d,j`&8-r_99Bkn9$QjMYA9DPUU-QRTIN@,=Wg3#^ON5ppr"YolX&N:6hXUZ%
%:'NGL0OaB#mZ;aD!SJ[kJHRV:,g?)g>YlkjAe"ts?)?P-W&crh#NNF56't\sa?Yt_FC_W!<QsIq&@c##ci#B`;3Tp!dWH4CKZ6R=
%9V2skR;RT2r[g>\eG6.V@?%TIW$kXf`e:C<0$$mHJZphm&f_,P\qr@8^K3(bFS/Nj^Tb!\9_+UMR\Z)o?uB<;Lani:O&QBJ9m,r$
%L%uT.CKILC"F\D8P!ncTC\YUplJi8:ZuJFL8tF4bJUOJ?5Mu+Hh\+(@'BKG9W;->l(YP*"PGRE(=%fT*IW!?K2.=AD6`C3O(t`WW
%;';[lJjf*/I75F\2Y,\f>t`Si&3$nL-=NgMQfj=N6E&:a_Q[/"2T+hFK6eJZ,Y?Ou+sj6%o]]4iTm'`n'19[#Fe*E<SOJ>qe*7_b
%2cJmEfK9Kh,KP,r`lNC6,XdMo,FNDU-jZ6mNfp>h&PF%-In#;`.ZpfZ0fCu(jjVLS*(F?YET2^]kW1LC/e$EV<dJ@dkX8KoI]Hj1
%RZ_<'[5:]$73DtJr`:eTgK2QEW72jD3dZ.!==r!\&HRRV1!VWQ/o@]WWGOVo5'H/9[r)"H65RB'l"U40LDM:"18!\Mfo7,qk3hKp
%%^G9d'RjGN6$1N1BadcZp>*(65oe?tB0JksXKd3n*QjA_jjp3R2=?b>F5to_9<#Ta%.<96P)Cjc5.t3D0tS`6C9$.DV'J06H!sL(
%U4F@#e&m$3(2=DdJR.4t%oD`js7uMS*6Eb;afE&f4@hZXrB(8UWbVE^^3p4k1R]Mos/sdB$;KrYBr&o*2lpr2Tr[eo\,@(Oa]c":
%S<_msF&5DK_76A_H=_li#9fLE)5&A#J'JW`88eANHZB?Uk_k/n"*TX\W3,W0![:8fSn+;`5S3VD_l4XKGYa%V8uaJ)^$F@0,m8?T
%9?)1#N:iT9)A].Q1Ou+$@=hkUK&2ts;AR[6cYmHdr@6(s"%O=GEN*T9q9eaaE'flMd"C?<bbBIVVg;t&7TMKf_BHV2]9sMUEf#Xt
%,B'jZArUY9qp[E;So_H%'*M:_<2Eu.SSprc[gJ@*A)@Imc:_9BRZIHhOh'M!Pp$nk9GYqUUSX(')V?q9P9<EQ92DX`U1QOU=\8:\
%Y3&>SngUj%<OBJdk93nPO7uf)R8$jb6tIJX_kS(<+mWVb3=R.p3hp*o)=3&"rRoQ?P)k%4W@p%WCqn#W8^NR[4Cm+)i0u"26jega
%R7GiR!?\9TZ^WLLH&:7B#H[F3d]bCWaE%-kYY=,d2p$oKo&)IkP+N'mDmJU7BuVL5]A1&NN$%Demdh2ChXEqg9`##'^LXJ@X]$(?
%D[j)1C'i9H9$Z8^*G)g@WOhcAlW*4Gn"#@,&^B1*D0EJ6G%?8Qp04ArTF[b:YQI5p$'?;?4JL=Des4H=ZEr.7j@V)P=IJg4!=#=J
%7e5,4T8olf]7drg>C7L+Lg-=hGF$\riKW2AR.rVgD]@f\L,a\%:7c2EH&9lNF]a].!X$)&A:l$I$s.-H75*>bg=q^G-]"?R7EA\E
%-h_r[>Dt;G,jn<a',%]Ge)R;9qdmphH9'OQZGHHc`3bZ!bdTtqq4-Cd88@1tklNN.(dGElQ\-+07Jfo*VTZ+eijgj'@Rr,sQma6\
%]ahk&cDs1toT4Ap[':'n9T1_uH\YO1/DiW^@U@q.,rkSV%.R_V,-62l0Z)!'o3i,r=UdC.gl?t4L'Z(@82DO>.]E#jOoFY7g'me7
%:Urd0.%L'U+;?J]N4oHN#t,"oO)/iI)F2!#-a2!+9.qTV<#?Ghb-Se-7OA"<\KQTmgtF(Oq*Io0Y$b5/4-Jun:;m),D09NdR])(a
%igiXG-kDP;;$mO[5El9C:%?$I4a!EHo/A7IJe,BQC!$DE!<5Y^a>DO?0,Zn.k-1rWeUb&FTgj"efFY-_aD(%RQ4m1Hk3?>"6+A6<
%Y":coqelZQAsLT/(<.%%B?k[+^#QJUZ>LPQ^ok=Jr_bMZanNOq(3sXe9dL;["G+R6:(;S"]9D98oLKjT;aDIV6<3Plg6bB8WQ@>W
%n-Oc1,!,FiNAWX@(r)bjAX(.)eB!u^ru\m0):E&e)60M)oZ:h*lC&kVZGa$6?sbBnqghQV=8E#>[d0/^8e\GB4GC/%U^bG+7%nQ[
%V$l2>/ebHA,eZcmjFrEj1f]m(m-B@;qG[5Y(dpC&Y`Gp^`Y_!Jo&T&j9>?[9ag`Mm(j&Nr,MB_)3>EKkqL5P(;#+197'KP3O)^=T
%)]]2SO_87u9A-LcPEE3U]JQAr;YBo,R;jJ>5sDct6nWlB<aWna+!\hDPUsC\\dS]'[dQS`#SDI;pJN)<p3d_rq5QGd)WZH!A@^L)
%`;D.%\6l&2`o7K-[q+L`H%(VLT;RRn\TpBs!7qiJ7%Gr'kWIc>P\"R8/s/Ss\i(*k)X<fuW^;GIpOIW)0uFiNRB86de$+]bS9%cX
%68b"O$U(h">\N]!Utg:DAY3-(4S:8#WdSOnS5EE;>.kba)&s:"W_O1k3loo7,%CJacX)S]F\BDg?jn%skpE,XG^?dlE%dhW0GFA3
%G"dn6jOM_ZVhPq\$J$4)kf(ZAeZ0-@far7@d88EcW#^oJcZ-^iL=qKP]R!c/\4=T#+tOHgCm'rVp!Zb2-OniYdm(%pX*(u^?ThO'
%q\m1P=-r0P$Joh"^2eC4FE/63WDAI[I3G_a,sdJsX`oKhWs8rP*PZ>s/1VUQH5]tpAGk_,=B72+oe_oP@5QYOTl"SLl=lAMIa)4_
%2r^Yrm&n1,;>GTWln'C03&e:R9S#<B&JMI,P=7@4q5]8[B>Rer=MlNnZ',n^YPG5AF_T2e9KLApeb[PRFaF%ab[3Ln<h]f&)WK$[
%#I*KsOk\sPW,Dgf\KUJuErbM65Rhsh0nAp>,Kp1i#8pqj^hR85!=W?n,g'OMJ5q`cBEAC-_RV1MSnmo:\-!Va=soon\#u#_7*=dp
%8>uJX0gLTS]+XkL.Tg(PSVsP`3qVc0F?S0'\Z;+/7/QqZ:>\Q6"\N&kN"A.C`m+sF0j-Fg[%RZspW[cfI&hsijl%sW7ZT+Ra<TSH
%D^!0UIljsZIHJe4D6HIpbnnWHQd`d?9Uki__?8!MIT>9!)$m;KPQ@lK.U(;IT3%;/.X:ta!q0'i>hmX%'\a*LJpi`9`sC6jrne^3
%WW5]G'o^EE6\;ZG,?Qo#JRnuMAsKKW@,7_Q"<uK?OD]ot"+*WU/5Sc?8=p9bLV713(6mp#<OVXaoejfbXdc(sH%mB^g-&FtliUa2
%qR#OnWm)\u'WS#$CTP#$6Y>\H\/ckg(rCT0Jd"7%:9S:ZCTgB*.Q;[WRag'?SWdP^%VC38A5qQg#7ni>c-r_.Q/S,eKE/TMjZ$)c
%8H6hS@a"Y\`GVe%7fMNaJm0.!_H1(7@91?$SLF_81=)tON&ZdL/U-o2EI9ng*Qc!:a?hMu,A1$PFkN._G4DbD/Z)OE*$kS$QJHdG
%)<@5f-\JQ>NAkJ1UIh1b(:A;gD!D50?\oDPZc6Nbgj,o+;LKe@@+H?Iqf%$2RV$L1eTLcXopTG)WuajsE>BT^![.c"`-9:(ifS>U
%O*!e?:7Na3'e7)<hG%!KZSYRJgVOP#%`,4a3O^!M.\+(qmL5N%H=V$s-2e^hmRejclHCdQBp?Q=cQ\(YN"_^fjQ?kj[kXt,UrTa)
%GqZFPMsj_YaJ6uTLHPgQHn"bKepXtVZ)V`lWYhe46Eeh?/eWF/r#DdgOrcpa/+9n'+:U&ae]qaF8l&N=*SHqhB8=<RdK_lOGSi"@
%L4jf0BrnMQ`??]bqKR\1-k];J7V!EQh1Y3a<]rJsT,90MV+"Rm;E'$sBQIZsp2D_8)seuCL]U7;0V6h,EDA/;[2d5I=bLhJi_3@u
%<$9=KlSq[fAjQE?7+-*2WbF%ao!75n5a2JD;Lt468d$jn4Yc:#j=o.8`s"tQDm2%Fp1P.So"7iIVeGi\jN0GqNab/H,$-lXHYtNq
%[7#]W@m(ebF1ju\`c/X)($%Cl-IgJ['(@b!N)HW&SFrWLLdar+.)T.[\dCsWRFO`04*O8=]4cc]8)l#WAM75D+.D;pKH5P@3tcaZ
%%@cnFSira(EG.-1mMUfI:rYGR"rBD'1n$ub`AtPH,gPI_Og9^Nc8[o0.5F](G03+nUafRZ%^[K4c5dqMFt5qCX3MbhH%s;sEWq]G
%5.;`Wmh_p6_qS_p,=3Q9H[&@o[Zf7ZRl_#rR<A"a66o>`U8umC.!*S=*?Fc]`/+Y=AVh['3Ln9M?'4ZCLJ2+J'<cZ@YJW%^nk'BK
%&1k)Xk8Z=O*jMbA,`(;C7Kr#p$:lYI,_+!_AHuq$X&@UL^mQ5mF8$fD+iH210[,u+:ELjLDpb4JVK^4%2P_BD'QDErdt/mQIZIZ+
%&:IXXYorg$VqV!B-:AG,QrX5Je"j,5/4VIBl^qc9)(\2Z?d*c.(fn,2-9O/F^3'!5d?H[38*EV,'/T0X070E1WM2TOW5>V"<MEV"
%<\!\`=h#d#_!>ek1O1#"kGfcQl]*16F&sZl0/%k*(Kpa$kr.E1:R9\,OtQ;Mm<Kch1n6L/,EZQO0@&)Sh1;:@ascDW<VA,OFL^*n
%+.Xgb.:II4i?5IG(FmN:-9Y__jdXXe3Gd1D$es[`R]fk\c-r<:%2-lS2lV]+;Mo.(6HNW4,@2M[,rT%@hbeQG4RDL2!:qUj4F?4j
%.uFmD="&bqq%Pcs`@VU[T@nKn'SU(cfF.<YRjaS>aW\kI7V/FQn4'+(^9n[tWHnRJ*3Vl%@"!d5(9-7-iMoe'4L2`Q2Y3@Cs7qdJ
%R3+GP-0]`%XDmZ%3jKmtc8o<gXDibm$t[/Y,3gdROim#&<A`+qU`XHh\Brc.I8t=KghOU`aG!F7CaV^s:bT[J7M1LDZ\nj!2gI=*
%PD(rA1Vs([He_V2K6V,ZDG17:C$&-SGNZZpQ0b[jF(`<ZR@X?:G#"0FZG^CReaKaEJ(_>e6h>meU=Bt9$4UKm]Hf3qkFIJ0N$,cZ
%,P&<Uc\#,FOBVP$fQ,J0?8W8W"o9o/?]9"&?+(p@;sNd4em3m4hF",$Haj/ofUt*6&\g0>d_P:4)X.jFbo3&@Aq=V0Yk5H`PFTC%
%q_DLW16?L=@UX6UAkT2(I?VCK`n+>_-Y&1$p33S4+>fr98b)k=_>?]WDp^'1`)Qpf\>*q^%otd!J2tBacUEP[^V3nc#7pko]?nR`
%?3i0o!`+mQmC2.-k5.r5YBb[B[dA96NgK(1_<!>fU3`B_oZ!7ZJM=(P/'26CH'\(7#*os7k:J,(=B)KQWVHq'%LA\kMahI(RJX-X
%U])SZXC3OQD^+>\9n)!]l;?/CGd!9spk97rR<gp6IG]?35^dbi"6iSk"9)(FC/"@2/XeF\c_?N%2'ZT&^8o6V$*76rBNUST,>BN/
%Gi)CNqpMdmgP`kqV[3?k:#t<E'ss:F0+(eF?oNV<a9L;lX!HG:(+jl%2bH0iqO9@`QK_Qm=&#=%pj'$7,W7<[AAV>`DCmG8Uf&FB
%U'U<g0<dWooZ;$/''\II4I4HY2/_b:NPRJ+"e=NIieoM&(:?crY;;5?ja0i1N[-<eUKb#p(MD[G]a.#Ib0JgC^r1?uU'p]_W?7IG
%fAbId[k5j?DDgF#?b;>WE>0d5fXNqtVYQUH1Ju+h6Yn"QP='.1R%5RaF^.GZ&k'3fQ]NIhT6=2DZHSR'(!]JAiD/QOjcR#SLqHP!
%rNTm4C\_9ZVt1\PF508/N,)*4UjSC96gqaL?GUk%L>k%AcUOIOQVfZ'C^,CE/_A22`(EV]Xr+,cJpNIoR$Pjqb&n?e'Y>!;-tYls
%8=pW#,;\D?EM.#K$;t:["eU@`_GG7s)$e4jR*!h/;';Fj%m?;t>f_<dO6_)k5`d$mBe%p],siUP,4_<]7rS/3DhnLorC(th!SurS
%+-XT7'$Nr];Mcl*MgJK6kJgb3;DAn".!hq0;b^uBVR2^Z]Mr=X(O2a#g]+O"C^'!l<e,9mVjC2dM+5;))5eFW#jl=,1[?p!5O@7d
%Q"p!-$g`7XX")[*Wmi!CmPWGCXrRJ])Hq)=T,KMTYP%usN6HOG7D"FgW'VD]"?`D43"tlqL\N=\,+<8tQ%\Dm&#HU_#cN$D'/'J/
%CFrCHRi"L7\5LO?a4Pq!?_t*oTfZC)@3RFfe)Vf?="=a0$Oh=U6?'n1+<`oI"H$JgJ?8Hh`5J<C>N%O2)ldZ@V_@VM;UsW7#FU7-
%#7_qh=_92mF*,`u,2O_ZHA]YMF>6qf^;(g3O]_`n'L<TF>J`2ukt3&q)D;XA<,)_Y_L&$cs&A5R"n*KM+4]]LJ[G!)eC6i`@98cm
%%+1u9^<Q>8[OAKAOi0,2hLiGC'K7tHZ=M=2d4DPPmt9K[KD8SA<doH,1'[Ufm2f!q^VK[GA5B>D2GlShd33N`Ur?64X!<i*Lk/!E
%LG"sG52%?0A^NSYTi2lK)\n-m'Bp$n&A;Z*ZBjL9(sEVAG'Vb';XM>1R?@g9E"@A_!qeLomDQN`.\h0EX[tIo_cHaT@3UjqVc`bo
%a]J$,DjkN9N9O[+RM85X#[rl)*Kf<V`[pfX<6Dr3cRq",^Bc2#1]"WI$^QdbMj]OLOS+%=qGWL4GC>'KM8reZ)mO&<(cUZ]drY8d
%<"qn\)NPh'V2k&u`m2cl2XGb?kr,\^aDE0Ihh?Re,IQW<eU3jQS4-G;BVHqno(A3/qkl^Z>8cF-V7hVcgAIC4o^<00G'leN>@NN1
%&;G^4&n#+EH=]T((oPo;A6?:Bh=\j+<+cj/Adj%ub.Lt=ZiP1q6mUJO''Um8\;eX"LEZ:U&F&T%qdr)RfJ!?[&C(bm>_^2^N`>:[
%*K=]sh)(4=A:E7`.q_M![Uhf''`i!MZH4M^16Ajn>Ze*Sc(K0U(e?+m`pB/48g=/gmMPl`LrVX3>uWp[/@E*I,4_SR\CD.o%I>uS
%$02VO$*nX7okqdekPO^O2$2?%\nWtHNGXX>=-K,)kuCC5Tj8Q#]NHjufQ1i:,=*YUoPBQ:Y*E\d@:t5ans;\td+6qB#!gGt?j9o9
%E8+@p60W^Q-e!V*)VrV$=2*>&n8c-3JXn04f('a!#Hk#RL25Hf'"!dK&S6B/M!c/nD]i8[.lb(T4-s&rOC#RG"tO(NN1ZOm(J0DZ
%62L=f)W&9GAl$.G#Mnfl]TE_d6W??AHU"gq(p.&.>H%V)2&g*6VL,'-K1p1\m7.%(T`Y39"-_L4nfp\_'JB'lMCMp#T]Hl(-f6`\
%AK%.G<\>U6QZk1i<E724K0H%7_!cQ#C[%(]GgBd?;-#"GMl=fNMgJDS2'h6Gco#qqGQ%V?gJQ8<JG4:[J9=g`O$P9ZZBj4CWiK=&
%UJsp@k4tKH,ip.L%(CT^As;_hbi,UYq'bW2Z1WZsBoVHijE]MG4r7mkC@C\7bs2[_0.gBcifu_R2Y)+9$UORI"[3$DV)5an&;4q9
%D(=`MP8CNE%n*^K;r6Amgs_?A[sX<l56"jE?I/0UL(Wgom!P^BIZKAT</PLd+9m[N>Ln!.0+H\&Ss?Rq\O0t+=QXs><+`#I;hW_R
%K!g%f_F@I@+T35L&??'k.f.I6Nimn$d9TOP=@E4%2+erRO9795VWGnQ-,S55Yl`dDMXFUKH-+U!Pcg?M=NOoVk*B4YeP!'k82/hF
%PCO=W=UuR@kX8<m1Zu5Xm\Y'`/249g;hUO`f>=37]rHs`G5nT0>DmgX7^!UV?tkFpU<Cd=4[nR)-csjL[.YeYZ_=(Ge3gY2DqD@)
%D!N.oFWEt5"n#+hREBp*,1E@LK,W!DBQ,9A+uHio"G_g+%2Wd##MulB)(d8KTK$?g,UZ8W>6-5`]CEF2Z7$RL;A&q!+k>N1+?9;:
%h_G=SpM9an\7u-T8(K491keB>qqb<f<&s?*aj/"=i^OhQpe`#?[[]gKre)_e*-P73Vc+R$[8@G=MPFeJ5$6'$/QNX_<'QYI\R#Im
%C]5#!]&'@#K7!F5%PJ##1ZNa(7_-[MYDU5<*Q3kQ2d[%2>.[W?1;m$&n.r5f+RmAhWZ=KYRfe=I(Q,YE="a^6[s:rO*JqbeV"c9'
%f'p9'KCC7Z[]F1g3HBsROdO20.O],C(FZbE![8O'X[,3P/\HY9d4QM?Ah,t,LW+f(.sFj+6BHe(:$WXoS"Lo`B09B"o)k)2KOl((
%PBDQ<U%L1q(qBNp$UmB<U'fJ]F,*%'s4)GC<\hYMUtDUCi_`HA\\Q)#9dO$s^4ZdH-k1;900g4,5'%[^L]W#RO$5i-e<1`G8^SKq
%HDF0:5Y.510WUe+:1'JQ]ABPq[V5$r-gS2r`$(hE&d\p%?UmP=erR>fpNb+>s5u?=/'-54;PjjX.2[5AJ+ti4A*W%Z10W%sC<*"[
%e=S3-B99)#'bJ'Mrih?>R^q0(P,)?DE(=7@[N``@=1Koi)F#?;KgQ7@"j7WHVS9(/QU.L_,kC"^VS9(_d_c4m[-(^]s%rd$n6\JY
%5-%h;nWQ.pS!gRgO(r-sD!HWn$='TZ6ic9_A*P9Gg0ZS3hP1mg@SFJUB^Ua4oe:8i+f6m*;#/Bu33Ws'l7<.((fQc`m1Emoi00'9
%PPeRAVQbA6]c(=PfQo1g6G'e;C58LslK#AiQa=0\4JE/5>K'Y8FB8.f3b6nj,##[M+Nbp&$8B?H>:&YS@d7J1Pn6kA)l^cCqH^0p
%'K>tC6GC%sX%ZW!#lUcYVL%N/3T#cN)$iDj])Edj^ji%Amppn\NSL_kc_]H*nu-ph/7M<?7+ehT9^Nr0-8DB@We-X&:-5D.bnsBC
%cC0PD[8ST9U!Q_kd<$MbrpMAQe2GHR&7B7b,RU+;7W\:o,<GV1,J_ee\ZkDj4*F1!Qjc7tb+A.p2Zc__0XYH6A:1A-lic:Dp95Ko
%dA</&\Q<mP-)5HKQeGC)8#`#E&C2T4e5hi2QUY6,0G7\InC<$^I3dEHUYhsbe10iP^TW)bggN:-p&]B?pl]1jX4mo8V_.2AMUsMK
%2/8X6KJ_EK2Ao%8X*fa/a(<"nkTRNJ#c=LgFQnK%](?&rr%\d.;+-aSjdU$k$KeX!JW1TK!8k1jS4&\.dDc-d8!h:p.lqPPQ4--f
%W=1h$H3l.1LKpkl=0hMs,`c`^hY%YG,NDD)&#'LEEM^u^\WZJ7'.F)a%]Za:[@;fGb8&Y@[LuPSi__M1e4B;8++BQXY"'524K8XS
%/%%ZeEAQ/IPp:'gOJ,Lf8p*el4ZsLq9.nLd;nWYA9BJF'kG`gc:jr*(.1&IKalHqk2i&uPpge.?SJ:\fe'meJ2'=YZLat@)PV>F3
%@/K4@FLdEk>>':o(9]YF@&\iY0dHshW)P%Fe4s`CZ5P?M%nemQ;UiEbg;/M5>cFtO<T6V(OPW0*#plfd57!^,#*qs/,(m&mZ8"+t
%!khqrAJnk-5cf5,3+WFf@&]p!:BO5s19f8rh\3is!aS^<OKdf&879P)&?J9-WF+1R)1eV#Jn:]b"I;+F%2i:5=4+H3Y[f(^ZuI7n
%A<n*XDBlAr#2IEF$Q"%(1>d*emMbt)G*QWcT8]RmAEe_#[bbs0L?[qmQAN.YQL4S^D_f3il$:EhCf9?hdf>`UP$.7`%O4V'kp<Q5
%%YI08HEXeV9<E7Z7!V:Vh1@Aj_n_H21MAhHni!r^+a6PfhL>jBpApj77$c''66INt9CT>qOeiT02D0.0Wjccp-'8,//LQq@aodOb
%ZJC:XqEl4p;'SYI3IS^549``54"2:]+,qb9?tefbSR)OKH>'9RA8X31A.C/2$OeW[=lHWK&@612`g/Yq&r8--RuE"f\FP&K(E$^U
%I23hiq897<O)fYM7K9<EbHmPf;I?8s%c[]5XiHKEAj7QLe5rWB>#\/CQ#_XbPLSq6!KlT/79-"abM@O1oQmbLg'&M<*r:h58/.u_
%JqEaK;%[13&JFq(:ZG*_`K)ji1sfEKB,f@80/2+,`gmoYZdQW'[6*c75B1.`0S]kET?r;i5pFm'iu]L[%34?1jlE$^Z-?&u:`FRb
%U;mcOo/*ms^asOpbd!`$PS);G$[5"/DU`Vt]=EJiD_Bl2+#)CUAaY5(?4qh2*.F/D^Kt'Dfhpn4:T^;HG19aQd[8N=M>C7MKlPKq
%_rCo$E$^9=q,b;l9u^G")^1r.*96G3D[2Ka/`!0"i21)Oeu-)P64QENDDCN@-'O%]YLOFErl65]o@qF4'gK:6K\9B*I=[M+**rE@
%]YS"J@[dCTdi;),Bs?WQYThK.(`[WF?Xp<;(erY8D*TMK)QfG0l,o&fZpD&2a'F'U[3<smn9?A@[f[.POT<,sHX3_Xo:QLM/#c)1
%X^4<j$Ia(O'mk11#)jNrc1ksi<\G/0"q%i&D,92i_K$RH(G.Lfq9GQsWh=>Hs0XK3A3kZs,[N&)B7gLdK=*7_]k"hFlFEsoj[M\C
%KK&`s:QAE%p5PEB?H&3G=;R9H/rIS;Qn<pZUFR09FSdL4kMiN[K%ftIFW2(m)TCLqAfD?;h$D4PgS`j*W"i]qU&V0PU0T?Y9-iTE
%`p:p%iE95Rc%cUGSaD=mI9d?SdZHM(^rZ2_[<a$R0,XKF4K0_aXIEMPIf&u2Ba"8)^7VU@MS<[kVVW]9SaVj8_SZ3;#OMsnUA!sA
%/0[nt]hbqg`'3S:PiF::&Io>L;^?3@(Ui(@ZI?maO)5CjGsR06?_D)rL?s%N9+A_,Ng;LjDV=Xb,6]meEj#0>:&"s!4+f]);rm">
%_bg+#$Q/bMM!LOb$(H!+[2BM#^`Kd]%pG_)9AL?CT/WA7K>iu^a,ZhhSg50\QHh_F+&KK\IaD:CpBNd`R*Ar-Z@1@hFNYiOqIV^Q
%J16*H[*luK/s'OJ0?$&I>^2n$P31@nVf-Nh;&G7m#i+X,N_:'4XC0Kt;91D1Vnn5VmitE\`Mg]t6\&^.L(IbAKHF_[p]Aj=Z:/&r
%Ga!Z"C"jg[23;*'+42%=Ha,@OFp4iVV71%n]Ur4Tc)che1ZOr\Igha4jGZ,a/=/T9R5=l$RA5N8r5dsbH.i.R7?%$EA0;&$j#KDR
%,C/;[R!D'@)pa?Q:m*c/'6OhK2`;6/+B4MFJE[`(j#N"<+A@hVS.Y1S2kD6#Fc\MQ"$oSUNBbJnjr;J?3Qc1KiG8erNBA19]8SA]
%7\@B:K]u[a*ei4L[.3LJ2e$0*[UA'>=X)<U\GLR7NG#;n:VC:sPkM;nn\!'EMS/Jl5u!6Ln[ubLIjL-<?$)&$c>UYPO>rgjK"I1*
%Sp-13$Emjo_7#EKZ2S%p7_j=EGHD'1>EbaA0uN,gg$mVeT3%;gE<"2kL%(6fSemRLm<*`57#rUS-QGi-Nt$q\j%LLE5Z;&sfE,N*
%bmOnR<LKtQ4HdhH_/-%qNsD*&-$_U2:7"B"f_*VQ?>Tfj-$_U2.Y&gj4KO%6IjL.??qUel`VI?[VmuoLK4'rIE"n8lm!*89DPVm)
%K3CCZ*fgO4"Nb25VoVt&9)eo1-aidMI#qNS'Yb#k8^bX$n,^:=UgqFp^5GN)O%%I54PaD[pZ2X%MqM,0G[r,g.tKgYCEX>3A&Uc#
%!nmQjabNuq=W52C66;<mU%=jS?GCO%+4.'7?TI1%6b-/+H&N[**--(%pT-2=q2Z!7Ce>%[%$4[b$JE3s<"c+U,AX-8@Nqk,3_Ie!
%*.YdQ\M(Q@XI.Ggr(Y9ZI6d#*Z6;]:\2&:n#DPR/..go&6$qF"r1n3mSh5f;+\`=^[2@Pga<85/A<:0VPMbJQ3/S-M+VB3h'_2Y(
%*:aKj\-F4bgA1.^Md0%2aW<XZ,a%C?-&ZS()3Rh%aFeeGd`<LaMpd_X*i'67*r1G!2I?<o0l)_8^8H\B7j;)u$6om[X*6jMLmMmI
%`o<=iZ5jfU>&q`.jS`QpX:j@^]E0jBim0BpEliK8XE.[HEb'$NM2H#h-.a`Jm%,McQX"q`c!)hh^_4JrO<g#a]X@HMe-d*O`aC#P
%/8c,n-TUabCE&d3T#kLFO=1Xkc6`/]8g`;$a>oRe=LEiuAZshSoa1jR-1Tnt8M[huN+A,H2aMT8N%d[<$VaO/j!iOGGs##^,MSkI
%:hGt-f2k$/"i<qgOEQ00@+JaW3n[JPDa/+c0M*UP*<tXVR;="3I!KBZ%4%9V(h?]>>QG]m)CuIsnY0F49L[aL019j&K40#cOr\8*
%97A$h2$-6"H*D]1\`=86Y=VX6Aq4m*Wi)$):('DsWFRgJmVI*GjaGKr,H52UF%gWA<+-4GpNRZ/An7(JMNgeTfph;=k-F#5_3E`<
%8iFk>8cnm,NCtVOlulWhJ_%-r-'_^fKVXdo?#PK+c.n@1ePj"P!o=!U@3Na'"#5LsC>=31nU)XHc"3>NG3s*Gh]AiEOI_,\#:&/U
%]i)tY<V_QaF9JR=bkZ$'IC\BET\N1(M3pgUn3OT;e^83D3[L+T^O$dV-nrMmS(sZ-,aUW?NGOSZo'BB!n%%Kid,T7@/pVVBM%[]$
%J2H+"a>X[CW0'`E*Ruga-(BhKZbHsKAFmd(2n(p1;3"1-_^<U1Y=rssqiZu.UK#`Okhs$/PAEcc`JWUM*2S+!6.&GFY8cPKUfss`
%La8-Ji.SD5lY"T^S6g,65t`J!nou=?/7G*4$A.+&@j7'4*?Y,=8TVtfKT\1?ZpoHn1L'h^<c'U:'2(q=-nP!]C't-k$4u`^-,gI)
%*[nnG<\X<K%9_qm3$6ckgd!]m"f#a8jW/V+rUVsP"bP+^K<1H%YU`\Y#$eO52WtO]lQP(apZ[OJXr9Y=KY0qge5nJRNcq/)\4.l>
%+2\49@UKW%quXnZ;]9AhY7Uu-K<P@kN51i)dA?>#i,T9c?kCKO2%\);Y=H,XM0.jYG7=.L.J;<.oS+8Bp@3#SQnp1j$qWJiR*D\p
%X..'M]m>?YHr^O^Pgr*[qFi5(/m#s2S>Gg@i:%ZQRcA%J.l%A*/R.uq#"JGsh+1T/pb+uil8QlM?T6j0O?IUDe^[LF2olMY@uBNl
%@+VtD[s!Gq2<;<>!rT?*R&U9pe=:o;6hK(uj?bE1H,A*Vh=OCib!BdXNVK?sGKhMrJA6TVnH\)=@>E)4]I]@TZk.s8EF&)B%@js?
%9(P5k^*U7Z_jl-D55oUTG4\,NoYK-]'#f7&WPI(D*tY*J9R;)J'sD=Okh_mE9/P2iXp8ooq`jV2>0$*PPAbOHX;#;gk;QX77lE;,
%XJGDNi5QGW9NSGboc"M&-$nfp%l&5f%g#7"FHqA-86K#BD4YY'n;DdIOl$Bigr^J8s.F/+F[`+a]qI*,Tii/k\n^EG/$`.sF0Rr2
%=;EHp]b8e(ni7*r&-VpdMaM)-?&ag_S(j;?T(o:Lk;)U9EMs>&bgr=**u%RrR.NEcfth>=9/'l]A/gZfI[nH^b+fFn"p`teaX%3k
%"q1q\Z/-Z]\2+$%I:Yru8_If.M72;s7<To>_N&"K0H[nF!htg=?O\7+_:`GA3jXo401dZUqZH76?[\o=Nr+(DMch&&N)[c=/1T2H
%]i<dQ,?%k9$@YjmljDc+8Ht;KD$bR>IJ`U$\V6$#e),HP(s/^YW(.`%*[8c!*pf^Bf!6;S4053nQboIk#")Gk-,NiY:oSr[OY.;)
%KOIZ>Y[$bsEF?!>Zb=`p5;6\]\er7$)WdiSo-uSl=0%FbWo?_;8M\mV=G$0Yf.Af,4H@/DlGehsQmKX)=GaCEp>_<C]?&17<FEZs
%>J&#_44r8b#i"OAd/9'5HQ&2IoB84no6HI7U4,7:!mP#7ULF8KNNq@Gah(jC65F-]eBhWQJ=cL6SYg;BI/jn_#NMQC1o)a<.@]U,
%lg$57'Z2S`HolWb9R(MBbU'es^7A9ggepcQc1<[qD6EI-oJc$>F+;q__U#:Ti'L=Gh)[<e#V4n>R>)K3cag(F/'KP,9bhRq_X]1D
%/$J.R9V#W8[hjdJ%d2t5dj0Qi/>]V4J]N!<F<6*pVF4%DLWfNG?N;MA%t-N``Q@FhGD3TUC#18q=K!*&A5KD6XT_+4:r`$+0(Lhk
%4@Fm6Lk5)m1iB-[12"32cbPm7S4^I=-%-?D>b'I1Rr9SjOr?.@NA$.&SFh-"X:@4GKk#.e))3;4*`6)W\9T,m>+E5M4O8qBn42Oq
%_dm[>n*_]XH*Qf/8Q(qpR3uC(L*?(:*A_Oso,TVr@cFe,>,H*ab1n;g8]uf91r>!,N"'fcQqg-eVj%A1ShD,"2--a>(@i<BZl9re
%:VZE^&n5-J/W\?://*8\g$O;.2DZ]mMN'@tZT;UHaOW%aBEU:r9s3#*QmIVJ1"/KJX;%0(NMXdW4Qnu5?uT!qYT(X5Jg'rIBA!j(
%mUm7j6)?8o%M4b'7NgV*I"Ss2LW&o=/gu"`.FEY<p^ZYFEYp)Y_A]qI?N$_%(bO2]1Qa(W0K=%?5jqY$.s7I[29f*ZqgjSJ-$8jM
%(IkZS*8V50Z6C6\#b>d1KWlgr_`Td`Mr_8Ee2]BEC*'%?*D-(QphduYG7e+K&Z^<nE#oPbS/XWcS3o/X[3W^2.[-d?fhaXuqM[gi
%Ot7l!g9l$"elRGYVs39!/FY)7.U]Vu/=EmY"mgtS9V*-X`Nmt)m(&-S+d;kD'E)k>*B?qJiqpI=ZNr-rL^cXTQg#iTW?A$6P3f>n
%D+0TTb"=E6@?R)@2jCFgeIoG-G4@^M&hJDSVA!+P[T[5BbO9=NBN"<1fT._,[+QXmOTg12jgOH9/8(\#LAHpuV<FF&rNII=R0BuC
%di)&\NNM43Fb?ZNbE["?Z!':t(?T%7rSibmWk+ckaRaG1E\kd6g"H0hOniI8639+.3N]Xn1j$iSL+,FJMp,XXL*:A>Ti"8g5kcPu
%@Ys*G`6r+H!c#R`e69e=/#"b2JpJ6_%3!`.IW\;:GG$p48B<iu*[9AK"SZe'D^T;Unc]D!('h[I;a;+t83:/aChs<c(+WmjaC;DB
%8?D@#`/>%1=tHF_M"aHn:I]%%@4TM/]J@p]T?=?68K#c9d*!7@B7D3tr^KNAQ^io.</(q03o`I'ao(kI!56.@59p*?^BS"!.G[7m
%<_h!D3sK_]YI2BP4P_NC'7=bpLO^!W2Pe#N3QsV%Apk[(DHo^upDt@1hA9T;p5*3tQT\s[,k_o9G9.N9]uGbEJtkOjhqAXFUGdeS
%c&HUj,WL%hQ9kl`Dp+f7O>+m_8-]?$(_T$B+Y?HAr&61`a3BFT@JT,2jPpl3qp0<T`*<Qb#_=t07jF&,GrEL/@?TP,L1CB`al,`n
%25Pq#4+jCC6_<P'iPb'U[l5]6M:9,V`k]^"]s%XBRM]ircIu,(]_Eb7Zg$dP"cOr<S.2PY^S9B0^_dCo:1'M1lrYnDUYuprU@oD_
%RA1R-2De/clc;BTE7TAleBA:TXcF-tj/&q"4ahQ$rb^89]r-*$.gN'3nbnA!);u!bg-C=C%.m,dFulO<.ld=CB.SMH3]GEEQ"@GH
%h)BC*X;lBLLp+4?OHLg/o=dIC/03(LNqiI=1%`N$CW$!Gd%9rbptL'=I*6QHH6XY@R=S5KDFf/6@%f%MbOA<!#;F^mId"=O:3g-k
%f!N,nf1e@f"ZtT5b5G^ddLghi^9J.`(EVh_`^d]>3:`)`q=f#gCejpmZD7POo9R'2Ei2;`<eAGoL34>_qn'g5[[mnLK?o\4q`3O#
%KqN'[^a+s0(MVHO+VEu5_Q4I6^7`29FO(5"'1[(RqiqgC>\R#ZNRSJ+p<gr5o*c4oajY*7M-'d;`RTJU+-Am2`-9dr"'c"td=@Nu
%M-t(O&Kfj@kOp^\.qELbC'M[69R57s"Y6q?bq?p</q1)0*B%6pjb=t?4dd$fY+&K"q6U-"h51=M%TWo&`h.ml=^4jmFlFLf,^.;4
%Vi,4bck@7pb)JipT(d*#+O/YSo!)538-<5&jRF%d9:`iN(jI(K^M-n?24s=?h_uc;KY)[qdui/X#XF`H\#gorIdF^1YIG)dn*d@^
%KoIUrfVgC9<W:_+H&4+6oAI2M5"%#\/rKYE)lUT`DIh\M0+*pkDTk&dk\7<S969,E^?h';l5;7=Kc@&Ch,>Y.D;:*c.MegS*.hHu
%YA</3%si4"%fGJKf1^3K"&%Kh]X/9u%N(*UO5+bK^5F#meINqf'EretF!:m#i.gp+2R.$/#JCHBc>9m5FqmO$/Ds<o8'D[Brb[Sa
%s5l'6,qi`Cbe1H>1VStc5Pel1UM99GkiVg?%XJu(ZW-OE7Fd'D^6B'5@@f2BpD"059OHC:GCX%Uq<)b98*Ce0#HsN:#BNDJlbGgD
%M*AQ)^Ej.bJ+taJIWKDD-i2BXGr\;R!n$B=>:TZe5gQjq3=E'-'Ur36S'4SL8Bh\/G#XlbGLG]CM<2atS^Y=.k.4I7h-!N_+H>;@
%bAl?sUM#n3]`o\-2ssAS\.OQlIcm1ZH]c>(SP$gd3SjS)*V;(tG>)jr;pu,Fm`Z2%_PbWr[K^c9)JE`LK:\U>aV/+Wk*3r,Vrf:g
%^R"=R%WfK16\:<VKB.6ukc(3,@IZKl$/Jb<je/"VL:Ea-^h69sWU>T'O+e_+_a9lslnL<7?bI];[:c/E\chsa>*rat9UV2&0P&q\
%5s'gG>0cM`[it3p?e]-8.>Ug9^eAWQ&H'c**+<5\2[r3Y]Jk)X<QDUkh\4A!(qo<K/L9GKD,tQ-b&8UT7P%#S)i.Vr^oVa(GH\UR
%e4'-/52DKKmYV<!\6Xp4W@,.=*GUXI6-9OdPj`a4/*fho07EOq)`k'5OW;GV>T(F.2O54r5R@mjE\%?Jfg+t$]T?E>N*ob(pA<gL
%pJ=NUbq0b6lbPh"O)Ds_N=lH-]:(ZMnj]R9#`bkA_$EuKV;:%07i\78mN@sAle5[%YN%Gt_pJD`^.jIF1<tSQbomSV$IN<rgSC`V
%chGt1XW#(NeaS8Jph,DL1q9-$lc-AA][L#\jk\kP<GCS7>d=/h(F%S2LS=164LIs\_=U]KgVG7sK3D+mRq'Ul9I&<*JXKDKL,UqF
%(1W0D7mhSo*D\.GBN[G6?uR<!aL[3p(IHH2Vsc=nOrhkYlP71,j,"3OV=uNdht_[/bSN$dSAUIkAcq2f@KOrnE.M&8'K>unQ*``P
%Bu9RI:]kf.QY;;6Y98VVn_hO/k/o=5s/Ma.S]6nHPge!EcP"os*JAmZ5-4'F??^n%pa?e+X"*(%8%10pWY7n<=g%S6+;E94/G%f9
%KJ5i.Lu/T':]/a(Eeo0H=B`;j(A;=+75tnGX#;X:c1Z,N"/2Z?@b%m]I/^.LFG-N@`0;&QaY#Zj7.H0-2%aqi*p%b,j"s[/aD._;
%RBPLm/90]dmCQZo"hO0k3el>oMYXg%3,3E\^VC8W7\Q%I+hgie3<JX],=l)m4a@3W7<_*eiKd!UY_r`hq;*(I9r8^qcs>:KK)"'B
%l_^&Z7/71W8uj-'GVZ]nl"Wh_hb:jgnLXp."l2qF(Dc6IdnmmVFV'6e&\WI?T#[q!@tDB,QV75OLqA5)D1P04r!5oaGs:=/BjfRo
%JM6G66j<3^:[?*i-+GI-B2\W&Q,O$Cai>om/.4Q*)uN6Er_ZHXBDTnO/I/gQ#0b0+m$*DsHlDY\@^iNc[d^@o7`dV%j7O5OU@#Zi
%`DTW8nn(M:,TWe8rbYSdHkof]&^10:pUoEg?Kl8Y#`pQCN-e=)LG!QN(H1>#2C#LN(CVg6ekUIUh`fkgh]0>E21s`B>KFNEhAZK.
%ctGGf;n:b0P9#4fHJStu3\)X[g.6f&#.f-ed#eTO$$(f#HX@tL4VP""?JI>F[8#lR.8Ig?*;B=a(c;/iE&>;3QiUj1Yq+6_MR<B]
%2H!!>CQp-9ic0k50qd(>LNi=kk%Rsq=U*qi9<+g0+4c'H!j8-GH0rWnU-#)YDGns?lB&LEnt%HlD_K(4?aa$JP;]/iU-.%uc-SfG
%?_cf"Ln/mqZ^5YBWH%urXG?k-k"5#8j*lVp)>"92h?+?-8]]>XruE(1K_KDE:S<XDV?ugXr(3<L.HUpuGfY;.h#)]CU)Po\eG!#B
%o@s9C>9gV,h:rnMC,:/lBW(k<cpRO9g\hT.@orY&&4i1nrCSIpmR@M?[Zh]6=(Yir:GL3'bfSFjA9>Sa-]1JqrhZqtFC8YRlV"uX
%\HG_&U*rOKfBF1?;hVF!([)s_J*LQhheWAmD$J&Q]N]=!j"tLXf'-2gA4LrcfulUhe*jY"[ldbtVcD;<c_d]q0Kn7qdsWdm3'Yid
%>+0>I3<Rjm*/IqR*JNO'eHW<F@l$F=kr.I,83j!\Gk"j\8M(1Y](r5$8'pJ@Ro@\C9?VM,d,D]VJp*XjpHN$J0so5;Z\n&#=1^[R
%ZLE,#0(1WSA4O5?Uo')f.kC#p6ctXQ+XaVHOg&]eqKOh2>(et(US2j:/(0F8QNb=pSpQN*o)t8,V76s@V:dEr2<%#)+uI:YpM5bu
%;LE'.D(6TELAmBg,oh53d]iG\OI!'r_E!M#_,[_R8<:S)YAfsOq;g8*DJ319`^j3`.?s8KROq\Bh'_0^BG"!a-)WI)d2+>eeF8ro
%Lp&'iLm1!X:Y$l(D9>:f]35/?:!#$G09U\?MDAcCe9pm="bhAAlC_&t]^4ns`Jb:QX,.;coR4HZ)T\"F`LA0N_o@\IfjgZ.LTTB'
%=P:7qZZ+s&dd#*k6\4I])X,opL3J4r21:6HdpRLfla>`fk7W[pQSIrkH?@cj08DhZ\&&l9<0\Sk"NnP3%Rs'&@i6V/jpS.j\q7(n
%0[2J&kF)&UWp-[DU79iN)ds>hYmc^#ij/I-f-=lM4j(TEX9APZp.CNnc&VTiYC,oS=g=5-gkJN>UI3qSWS\m:rp$X/7n1!H[S[D_
%'^+GZN+^6cV2Zrq\]b,pln8268>.p96ebo>=(_C@4rRMB.k\kmFYIGI&qZfM=@3RfZFSD]kbUdV+I=t%&QL`5MFG"<_W&af":s^:
%1EERf+eb=a+2X!l3n8i$+rA$.gBp&fM$J<$e9,.-Ye)*A5>m/S?NGfQr0H-CB/1Ka7B'%EJ6cJ!K>,'@$t1H=(CV.d@@(jk&gdk$
%2d:PHmD=3=W:GRon6!)%9rRIgEL)`6@7;cq&m#nZ(*KH:\Db(Q1".%7SQ5K1"e"PYBstOs'[<*2g&t]p7Ie<RI>8uRYF+V`oSu:/
%VS7RenQ\P[?_GS-7<grs&;h<7b;Tn5,*qX0<D$bE<C!^7L+.'*gCM[;"ifuYbP2mHcNE]S5m*FuVsK]Bb%$\(NfPZD!j,m&I"=MQ
%TnXjOX2M>5(HAH$T]8E'^;5L_6s\tNj&0A4m=m8>M&Mk#^%79LrElel1PoKFlaif&[9`QrknE5Da>^;_f`h$p`@c<pV4*bp*N?NR
%CgaJ0?'b4b78CZ3d4X'I.@^R(Z8u/M:W>X!IY%Cu-6Qp#QZCXfr0J`r9c-L"/Y?tIl+(S@hPWK,MSTS^)0/4k$\5Jn-GO_m!0om6
%'BoeZVa>tbiU^nnAH^mNpu1=.l&f]e`YUHf<$!_fs7:OPK)1t@9e3,c`/#0,8+.ma-1):Q&Z5+_\URuVDORSgBXb/Pj*?PZ^1%UE
%l#c<O99-Y.>,:#ejTk>E^]f1R@2I,o/If*Y>$*&n[OFB_D;l'Cp;AQ>:QB8k#3fN^-/W[nZ528U8>F/G_a;#k;'Hfe5-<ec=s_m,
%;GW"Umg!tdIoi]r8%g]JOCCEX>-HA>emXJ/W3@8@/tS/\=B:oW$BgR]f(2m5SFVF`s!tpchrMESX)&@>6%uOKg@RZ!<P2!g?m#gV
%l+S)RQHkbL9KahcgoKo\etG+-EgU]UgH`coh4U?e8!.5beal),'HU"7a+r3n-6$8-8+,*_rD$S;.b&ecR<A>;$kJtV4N?.ClcI$%
%+@7nJ&e6RU^0`F;VtB4TG_QW*S@#!W+F:F#Abkd>,OMQsf2-sqpYo,&iCS'Fm&YNAGK,'%e6PUO[HKWUJ:TL4eDKm?"QF`T.eHP4
%35F^?Q2=Nf7`=a:(nt)FlkdND\q9QdD5&Pl88?KB8.kZ@,hc8@J9^"cgooU?XD=0[r9hM.(O*?l;K`/;I\seRc>(WWb'g$??8CG&
%[Pa+V'$@rM\"MA%q]-<-gpj%$:U=3(cE,_)b@2A]IC/U2@!Sk@.lH:V+!`@KZ3muA+*qOfg4j=F-KX?=EhT8L1`3s\WFD97+)N,[
%C.6c.@=,5nl:h%[RB%GZlV`($>H>*mCSnDU\BB+@PPlg8OPLgodX%qs'L,!`pb)\F"0:S5S[[I;VT[]N&lu4Fo+LD:>OlR?G)Ni\
%_5]r86QYA:b"7_IoPug9A'Z&n[U=F3W\]8rdMk#dVR'R@7`#=+JpsKg\^b?\8SR43^h&=ML7,du/Pu0>E((OZfPFJ#Q.)2c2ti*(
%//2X[a![h2\,%mH^%4\?f(.e#l1A=,][+!7J@Wfl`h%MKEeiBA)">Ai*:2B"m8W>>Igf]\8;a6^E%2/r6LJ5gGM1RQ\#,=?@$:T[
%.Dr$7kSqr?HN,B/V"Lp.o[_hOTorFN.UcHbY@cZ]ptue2CL_EWCE>-XM3#'N7dLkA53]nb,?jHp8("UEH^bU-PpS\R4a-=te")f?
%_8pej\oaAi=1+kZIaP@1)-pT#i:%;Jafg]9F%.ohD/:Re!G0Rp+JDkR+kc.'dg0]rU`SO)\OWqX2_-(g-TtV$&SnN+oe&iNgb:M%
%4g@SnfCM0`5E+>rrqAkq-1CdbZd+3P/f6pZ?Q%M[%7)TqZ09klmma%\;"cAuMEc9e5FU@ck]^R.<5_tOe6#.7_sBfKXd0[dOL_[8
%H\Zd,ba_DgNJq>i(q\M8&HPpc^?#ms3,Infc"8i60n#-(,QGJChcp8IX.n=t_Nd$%'_SA/QUCVI_gWM*Q/VE6-!%i[g5ZP<s,dbm
%2KXnPf(2E1TL<p%VeSFEBMdZ7.`LffYT=J%):03YA.FHE7YYc/+*./L5rQ*Ye-5K(b"Ms\']DUaJrR:"MNXQ&^A_*&65Uac,jYAS
%75dA<A&WJ%]Vj8D(SLRth+KAfkOI+i\G'"*KJCKOYGu_Q$DFd;WL&0P@!m.>4nf,>,(=@!ITKd`/lXsg0<fhsUnV8m<.\7e&L4.5
%M6g8`!S0sPkXT/%1IqB=#?Y.!`Kp8t8-'d-Hd@ETL,T`UX36TCcfWt;Q$-1kGbNiKAX>U0JSa%?SAdes)jgr(PD9USnj^5+k%?H#
%L_U?g*cWUPiq9qV1]WlVH;QRH(E%-u_unJ-W<3B;rOscCqPbk%@BiL586bE#M%(bS*m/U.0qkQ+mfuQK&j#<U>3$p5J]YO<.Qk8m
%:G":nmr?kj$cC:Y;9RTiA.Q\6b/P)-0M`t8d&2KcNQ+t*c!(/Q-MBpG'S?1S5mL=gD>7Nfo16Rj,K;+bAWHF'VYo_'ko0ehDfDFN
%MWN3nK'k`aLlZE;+^H'fCqa;`KTc]]?eUo#cGSRA/l:rh=R;Sq>c!Q(<3YdG'hoP(L20F6P[!Qr(2XEScHUP@QnLb,-l]'*"brA"
%Sr*$IRZ$;Nb)g=;p'HfB(:/B\095sB*n_h:18-RoI"GL\2Cu;?>ACR+lB]"0SQTNMqO%)J&m&/=U.c5SeNtn:e!5B_-amXu&`od0
%]n5nIdiKIVit<86&GCl.==Q_](e]FWc1"?UFI(k0f/mX,Anc\EcqRXs'5He3"'33smsJ+XU5iK^<>8/>aGU(hfrS&NNiVAhh0aOh
%:\nq!>o6AGLal;@;S_K[kU:D!T(%.K$/P?;>#,pjIQp9f)Q>7OCo-%BHJ@,h^7gH#51::4[8;It_]IlP103X1/B^Ntmt+R6a9$fu
%r&o#e++3S`Y)FJ<.T+P5.f62iU*im_AQ:i-(Y="LH5k6pn;'[.<!,l!#5F[g6<e$M8B4FPZcj%TJQH23Ms?roWoOeBF,FLi,8m+2
%nVaiTqWJk29WF.Jh/JG%4#p<(>T;j*nM60D)"MT![f`Y4bGRlLNh<JpTATR/oOE@A;dOoHdREi"7>:cU^t<Bc=j=>Bc?,HtcF@Km
%M(BA%HQ!!?loDZ5OA&D\\\]1Hf_QTHYB;[UT+Y3MGb,A>\?W$A?InjA[tP:1%7UQLNh\VNQXQ+dK:]9bm`1m[0"VbKL)D;.J^b4*
%AMiZ$EZ#>.jt&miCP8IKd31l?0LDC66+Q/,7=-;]@\EJGDoqI-Ut0Su$X,jY(.N>t3On0.qU2j\i3X.U*8&$A^>f#/d]kWDnb'Q^
%/\+u2W-qZbCF$lChdT./$q@FWff.KpX?Wm0qRK<"r3gdRk#ZYf]DH-*rq?SnDn^6D>hSY,@;[.UTG<sVinR.Xi#/=FOmj/Vhn;pj
%2S0GJjeu"b&U,ejo?L>T4m6feUJ#*k!)Z'n@ts+/M4UV1BE)JB;SLX;QXddAkP>Z%Zo0DFNq.Tf51@;L[P0;Wkk6^X#@TbJ`ZuGc
%E<7EFHopAT6D'4.Wt=C&f\d?-'B6!R;k77*YS"O*D_,Nm^$7K\ZG9(:20'P#^EKb'lu;39)bGMSWgFcMcr7ZA8L$_D]U3.tEb3\G
%olFV7[;=/gUcu5;Tt'Kf?o-sn97C?YP5N_J[8[-*m7>*)2d+tp1$$L2OqbaFs"4\Pj`]7]QF__dU*I]H^Np_dA%7=2@B5!D=cDEc
%IPk0X;):ct#*Ta7S#SuI'uV""I3R@e/,)(Ld/-;j7-j;go)EiBd9rime6<(nXl?*!hD@%f3a-+9aqns+fVFpZ1mfAY!0[O:c"KW,
%He3?MQaAmb-6AK'/MepP7o-ZB8Mn7s'+K+G-+B*`Gfrt5W<cEI$3oPFkS40k34pL+VR"heG7j^^LkOiOia=5!Dr8lpF-\^UO,6af
%<\OW\PA7Gt?m^::m#I)PHtNndBtKT%/J/()*Qp'\*V'gG9BFV*\LKsF+8)Yf.+ba\qf5nhM`=V(1Id>,@&#9Kj3/3)"]b-ZC/rX%
%Gp!TS:-MK(FdE3VUWRDKVU>7=0jpSX'd4G^'I7L>;]IS#NQQXk@<LH417pi#I,p)A(7bGQTYTYI6O/!k+g@f]h*t8&]M5sU<3dEU
%[CO&W>&K.]"^udg?]`r7EX@@<@(.\nL&IG(d]bfrKuAD@T*EK2hlN4F`O\p)h?QsFA3*!7kF<s%>,BjuC_LsID6RBuG]#N\U3MjY
%@nr7Mc8(@@7,=45-k)&Zi>ZUSlFK,h85`2om=QPuat2f&c[gC2$+!<K4EYZj)p"7g=B^n/=?ZNf'Og\0**E:hXKXV,OgUD*[Ph3-
%8XI707St[<=907El)VZ72`BV-V/Ok&ZWFKQQA]A&X!@`n]5j_?ft_9n&C]NkE\_qK_rh1a]uOqGO.s@+U;]W4]G$"Q.\gVQV3>KQ
%oHa]j*CRT5<\rFe<^]\Gok!/hYAE<W4Od&KKS\MYeSaoUjSM@3G-IoC,/a]*9rJeQjE;t9:F/G38i'68ZB]i[V#6A_G@M;d-RKu-
%rAGenb/UJPNasq>)%gQPBbEhdW3_gC8"6BgZE<2f?]<u[i=E<3com:*bD1IAOY*Yb2LW._aO6=C<(=0`kloHt?l-!r7$#nr7DQSg
%+Bm#Sa<@0\SG5Vi4HgP*g6jb3Cr#Vc1<E'/N"(mm*(=Ahe*B(BIqVM6Z]>lb^.5olOFp;8ehS!h!Tel[NE5KVA6QUD7^fm!LjPXA
%="V>e?tH][QPf'+Ob1'YZKERkXFQWgl`;VM?Uq!['g@e+<E1c?Q>adufsF[o*q\[bSMJSUncac."6dgi[A'W?Y*@]Q4XgI]Uq!30
%KZ@Bpk<`NLp;/cj"!d#@C]ZKJ-^c=#=DBk_(<><"FG@H.YQ'8\bK?Ca1B/su*pLcq`RkU))S!(hZ4;dMPX1-bK(8n8]6:%/!HOC+
%[$Nmt2t(M0>d0qs0#u/G`A4s(nZsK#Hp27n2Gqed!*'A.3i0t;)BiYQc%Z\`.XX@R4cXr8hj>_`m;FiIKo9@($)QZLFOgQapo%6S
%^64E:pQs.%i(O"MN-`<<a?;%OB!2CteaN`?)gA@ba^\$o6*D:Te`N)MAo4bBNZY9ffgJKd^lo8Cf1*tj*,Ui3T;20Gk_@e&lf\)d
%"O0fWD=t=CY#9oWSn%h"0Pf!tRFc:3oS^8W&_h6;XL5EU<e`[_q#rOUi(,DY)I;V4-b@MMltQJllKO'qSYl1#VRDrQ2Rs/tIMN5=
%kZjfFpG-I)UNXldB$IDI+<?%CAiWM`j;1G'Ot+t9<CP$!:kc%k`GAFJDc;%-ZH,s'fWZied*lf5XF(\]:`EilP8f^dDP>ETWBtH>
%NX%:0'oJ-U`>(FtHJlaW3g2en`>*,$XDB.OEJ;\j3Xq1$:38`N=6MccaiVH;[g#jrA4;5LL"\L14=Gid(^*o>TnYCCH$YY*``M!<
%fu\KHNNZN&^(21@q[BW(T:E9@e[/R&(B"VBW6Jqs>@ZcSc$G7^"]0n^jC(o>:<[6FIKKaH^+QKHWKNVkS^sqH)d'VYXLpJ?,S+rr
%1H].^#,4Aj/;T"Sm-F>6*JL^D0$1+F<2"A5ZN+hdS"[>Wjt4?9M.K[g!dY8?:CX>N\_-FHVGP)GMQ\h4(ehc%[Ehk7`PK)C(FlbF
%.+H%p@Gihr%7+br&7<-_6miZWU<q"32%YK4M^qZ'JIrCn;<['D%hOH/&1"^m9VTnEMBb5=4nXV?KMN;oO=54V1_!-P2Btp'b&\"N
%OH%`^Y`WV/5k'HPVjKjCFckNcGXCRl-(2R_MWrj6'0=e\,2m>WO[dVL8hL9KS=3J(GX?82UKrF5TbE]001EM#'Il5=F%bs)pZ7^?
%!>?(N*+_F_2q`s14J=+%,#Sf?:n.'9BQ<Z_9U(&8:$CBODjbSJ2QD9Se4."Q/\BA_ReVl@(2-#ho=\g(-g1Cu6hWY#MA)H*Gu,La
%RaB1)[T+4gHf0Q(F@fti*4E!o23!^F@Sa/RK\EB6457e)U8]NJ@m.kc(J?0rE`VA69mT0*4-LG<SJ>&h:nT'L(0`Z3&k^>t/>7sJ
%?SrBH.J04s87;g1GBLfBYF/CQ>q&m+AlD),\b&&;j0A%RiC&#EaIS#"\#sIGRILI.Vc"QGoKP<%k<\nJ3'o"iT7eGrQBH3?qCpMP
%2_X"*QA@KPd(%;E#SaSMJPM5Yq>sOc)]YQ8EtZ8#3]Tr$3'o!i64$*EPZG7dCkM*7`&jSe0mX%2h3?4!gi7p"_e?o,kHq*j*gL-u
%Wi(Xu,7R)@$<J4^7PMcAPSJr]nl3kOR=bjlYCe7AM<N1d%"?QJ1[+J8^OA"ri%6U$K,T7IhRqqT2@Sn7-`]=_)g&B>;n,,koQ@HC
%`M>2^Qd![tS>c)>#+aZn;/T37p)Lq;7iLdf9*hrfq(GC?=4u-jSl*\'h79n@f2Z19dP,D1&XY;>!Gs<f>@(Ce98St8>(YSOZ>#V%
%P2ZEFD^So_\rgi(@Sd_5=!m8YDei)[JgKbe0o$*hU9kJ5PH&l:Usq8[<lQ4&gn3KZ]"c+oYqDl-8S6<qF"njUYdF6709QDpl@Cs;
%K?e/0+)1;iq=)=-GTo(Q#cM2(pK8<!mf4CJ/'o'KkXl4t?mIGu0\A&O;kU%fI<(3"4`5)-.`3cImJZ(`N5EllC.=+r\JPQT9Nkrh
%WA_PtRFj/Cm=mfMpcgE,d)eR/d_@k0oL2O%ZE:nK8oII-4=>K,/&8BC3u$9(7"%Po8_JNsh,8][/j`!aFq"G=nlG>Q$PARuDSEl3
%Dl3.V.QB^A=i$Y]c9UXWU$)D:.#ah-54JDkH#kGMPAfdHTE#F&UqnR7TM&HR__ZT*7orAKG3GRU[d@G\=SQ`/CRiGfr$$0O`#/Ng
%_!(5E,c\kI3R<dZ9#ICr,/u^/.mMq/N.Wt`4?Ed>8oMFF4(a/4X8`9fG4p<;eMVq6+T,$92g.,U)dKHi&qTg+"1A9qSTP*EX]ekJ
%Q7:0_[Ar;De6l[Y(LO*&#g^;DPeHJb)Db0"obWmgeKB48LFPe%g5W3+U:og*6@2d`Gs!hI`#)*%^F"Ol10i5nAJD+`Oe_=!")(HG
%j&tkF:qE4c#YNL3)at?uKCRA;k-gdrS8fW*4'CeU4eMq#c0JFNeQ<a0Yp-Sr"K_>SC-g3GG;>puGdQb-!LY0D(Q['n:iY5R]WWu7
%dq;WG9qC-h`,%iXYo<N6A<VdgkT2hQL![ps&8='-l(8rZr"<'A$;FOS4UjT!.oZFU6YhmtAdt*&)k=r%+.<qHG!K;<,"c0RPgpqY
%qfu:`-Y5Zk>ra8>bNJ#rXt=U*h2`KI$3jq5]m=4j@_SG#SRa#VH5?GhZJpWpeq=[U$H+(,kE=P!f0PHS30OaD\YOV<htX30,e%q%
%"BY5@=c1/0&Q?3d1IG1p=AaLG?Q%*qR49;e]Wp:;)t%s$"kLAe`A[63Cin`1r`@[j\P&'%<$SKeK:HJ@l@sDN=N8fUE*HqZ\kL1S
%Kh,^`HqNXgrr'"b>DChX(&"Y]n5HVFX>Jh[jgCmV>`[s71GD6R=01:1lEt<lj!Ts*"IMi[9_SBQoesKY,;ib\3Hci5$J6ZSTM,F@
%Og3I*f3RNWaptN%L$..)UhbikE<j9b&Q\h48jT=a?f8_F.@)0;lNJFfN#jTJ"n1oT6IEOZ<))r.agfcFF>5?4d:F5>rM5O4fT@<f
%Kt2-L!"eQ]G71SW__*u@]hWcd^!S^^Ib>SHrF5;S%Xrc#k#6q6K7^LGZ1hSUhLY<ar2%F<<WnWN8pc?\O)KM?GjD[K,h8N(l#:G+
%.TWf!YNK\Xb(6r`:<)WGlVKMcU>$'.0$1:Eq!K[-#0Y:TCe;u8hlO#G4!tlX!p`gf<s8Jn9<(c"89ok)DL6H49AqEeM@/JNcK&7K
%?Z.7*^,E^_dJ+&>q*X"G'I4$cNlV_W<DHLJ>35B]V7Fd.\?X2PI)ub=;f`1.`P^q\3Rl&+h%'7rh5M6NU`5:Z64@d.(&=1s@?K`U
%i2,:&K"V;u4Xrq\ne9cH`.IGuHC>&tg,]1+$8%-="mOc*dKDh_U0n8M(D6qd,%qO8>0Uc;2V(BE"g0OW(#caOQ@bMPAp%94>BiS?
%<e[k7nf`4%Q7KJ=(7%urF*2g^[ZF<@4Y3'E@QejE(Sh,_X\TXtH*#n0s2c^c/M>GOR%IO?Z8h$j:.>@UYnYnjbfGA3h>*O'0#8!D
%/6mrr4kf[l0SIi5cp5T,lLiY)A!*l]knUi7bi5<sM&!5ebn=Y=E6Cu3B`h;JRG65?=LJm..;8'oAp)l3#oK5;kGihloARJ[o5a0t
%;PQA&RT6s0TN6S+.+_McaKdQ08O=SGqBfM.>#Pgb;@32._(H8D$q&;bp%J24%n]J>-#Z4$Vu_nIi:Bo>)(RtR,R(UH,po4hgfV7)
%/\3A.MXgsig-q-qV_cTH7d-*4YNM$#3Vpl/rK6Z.+!du<++`&D80=LY#GA(,6O7A(MV@'&UN,S%bepcdL2'`)84Gs9K!d"&`BiL\
%Rk01j%3FU2SiXL?We+Q'oRL2`OGJ6SJ>Zq1L4YrYm=fcqh2cO&NtZ.`1]A.odb*#tC8*M>dHjltB%d[j5o`s\dHlS.\286np"uQ4
%UK0;ZUU[kd[NtVsb-mN9`$h(f?n#Luc/q!,)+Cl579T:a$C"3Qo^I5%+sUDn"UdSdU6s]N#%3>!<tOX-F5+fN\),\,(0QBKlYJ:Q
%pF<a(I=NRcO:(A,[3Mn6oPBu5"c<lJS=(]>Q5tg@VZ%pA[\t#/No%'fkLb+f65n?0m76K[Y!JL14o%N-p&_YDkllCsB<Pc3j)SSU
%&H.#?O`d$r/k\[\fG_Med@9gE$V;>O6XnCt[[1Ie+"#?Ne=\HgT\8!BMoYnmJC`=hRH,CMW>e8q$c?WDgF,'ur`HBc/=AZ-B2RC6
%_O+?-`H:.[J2iOP.TiuaVWG9@HcD.pED[i(!-O$(oc6$W9o?D<B@+cYR6AAh+bOG$phscmLHq8XOKgTgT[H+mAU>O[04SX<#:j*e
%Wm3^[K;H0r6!u;ASuIq*q>p9PP+a]/Q4ceRp0Au/,s(L=ZV"\sf,ZY[2FcOVbad?fQ/Ai3gaF"/#.#+D%:i"'MrNZmAEM*WMOq&H
%i2jt`n<0?&oQKKO;q-D1b2PsO0C_B_P..XkoSdLs5][HBJ<s:e_>t&A!pKufc>9AE0Qfhs<b9"\:aXCs@d;0L$<3nJD#2bN3hnVL
%j]78#1/>Y>!&p+E(d)<#2"le8Sh[MTEgK_@>R7rOnr0-O6$7SD0At?@&bKN<!t\mtU+,tR9^-,-7h:Lj.K-*aKIXiJ$j@l9l\lPB
%2FjQ\?^5tK;;&\!S<L9lN:5^i/1L-SOdfm`%$)hL^tB2QFlikU;N`I?DX&*id_[g]:b;Rde<t_"OY#m,gXVr!AjGA[`\LW6q:T'[
%*,u)>/4\<4B'+`T(k9@"7bZ^_9q-P\(cAYA_(1@c"ki.M)%49ZR=2sea/GDSf<eHh17IhCcZ[iUjNBs)gZHG#R5M>>.NBuY[aiam
%;@Tbn!Z@0SX_R(B(`WM")Eihr$Y$bd%oD:Yg"md<aMOI84f^7jG1it.^tQ($H;D'pmrCWBA$'NoJKa^ii<9Na%Si%h.H>;HWFP0f
%>,sDkVVD3?1\8N'pac"iHWG$SmDaKReST.\%U@WA0j)4g$?P-Pb,CZ_Mt$WJrq(7mesFUK0kHF2(V7_cfL[#7+R<fBg[A?*8qIQZ
%bf^3+=?J?Pjo_p+3!RWTOS$mSBZ=(-.o[(2\+P2]O[Ie3Xm.7UG\Ar`ArGoio#ie$@&.HEED$Qm#0lKRFYKeWDU@RQRZEbo2GGW&
%YFd,?11Y"'Lf=XW@2LHHMI;J`:bT]DD_Pjj$pcj5W'*(c?aOr_:Fmkh)YR.#kBiN_l[>OAja+UQ*iX>?`B!5SI+M9&qA[rAUa]JR
%hCV3t(mB'&,(OFSaH7I9VJh\39$JV5;eaU_Djn.58s5_A&nn<t+VSI(o:Yr_1gi\1QV<e"]o9IW(2km'4d[p5q\.kj/Dq#M6)Mcj
%?9K88dWqu+cuIgO&j&FD(br@D1&/bER1GIA-6m+\CDUHubiZ8IN0r9#Wa05\lqrGR93f'o8*O1P9JU*I`@J:BV1)spbaqf[<D)mf
%NrP@GW8E9@#,)N^E!YXF@9\G):)o9(&^H4D8:eP;8@C_O0$dH00'G'\Kr$'BI03??Xrn\2K66+*,b6/N-P#gDOA6e((^]HF=].CA
%$VZ*RdYYkd$V2WZU%*@CeqC8&S12;hMY'TT0$0S389(>2eGZ$#nL<IS1MS-io6Wt&CK046E2+\FU@6G^QdT%>7lGHDmW:o-HD/1F
%!kg/OONnQa'5(8Z2liuSfPO9+-Vj]\RlqdeFbFtuFD4HbFo$gc8N4aeWsM(c"&GuGD7V)"r*XXa16WuT3-Q*S:H=PCF#6,,-23<<
%H`lZ4UkCs67Bi^Jc6ZAVmskLCoQ(;Z:t`Cn<gC23-+ZnFDj7OiYdZKcGu0GOX:q'Z.OA6/:K>P<kj?kR&Oms&]/8#I,=R5SU3CV@
%#OTIdAX@#!=:j'2'o5cM]o1Gt:HW)#;tBO*_)lWhfFZu33*-^LY`AH_p%V%C6:V5>GULd:'uj*KGV6qTKm07VWN%opXjURW-1=nJ
%cWk9iIW;O=@1:G2(@[#+35)4WpJH/_%W*BJSPYDk/9csUL!EsESm39XnG*ZU[`ukt':?V6Q.8j[Y'nq(P&id<)[?Oqlu+imA%e[(
%jTACMED`?/p/U@M"tpk4';o90Jl1O7)R.2tUXR"U/;GfRZU`!_BjX>4T#_meb5>;'4;]B)fP%W_:91,L3\9__GUF3hFe`*s$/16b
%6(eD8M:3tG9A0[cb:rS339V+P<<:D=W$t62!UHQqY]<?uEN#E\]R^MDZkEX1<]*a""^9X$!!MU3Z@<(K3?atR!u:,g4@/)+5*Y<X
%q#7kZ"FR1UJ3c:p$5pbqB2jg_210tLNH5h*c,gR0['l3dTI"&ZFl:iKRUnP-X?GY*:?%*dZgnF8'5->(,b0#>It)RXSe/C(RZc$V
%b)b?5D_QfF+Ib@W/-jirfmN*sV+ie&7O@b:&eSXfL7hJ/3osmI<N%7elkQ[[+/X/4iP1i6@Y2qlcEOA]3PRh/3^\M$$:N22]$adp
%,3KbuQY'WKeL$Eb+\=n]3o,lSJ#eLC^asmLg=gVpa=^03kFbRDb5]dRQro`GcUJLt:cTW+/IRj8fa,(oQa;6?WZYQlB,B#PUD/Is
%k<\6X3#!EEc=]M]9(0\+PhY&&GcjcRdk+EPkB!pW8'.89/5$I!!_VTkDplmDOu].ujo$HG4t'i=1?W`L[[#()+%t7VrNc^_G?+JW
%kQ=LEk58D8?M!c0WW)^1rPlGKI*SaF!Su]BF;oI2X]UuR[;H7ClQLihA8r3_$NjPR$%p:6/.\n%@UN$(6-C368iV%h$m?WIMS&9?
%R#da7[C]PDYUp:-<g$p52@tgnnbOre`9m'JXhs5e+DC.)NUB?\r1[t&s&_E?fjJkZ0W<DbkNn\,%!f;=%:N%,^"aU/pMsnAK[#dl
%q4P\"$dAHiab\YGgL'>18*]/N[<%D0Du!V6qiP?]ZH63S/bPrq`S"X?5#RW:m^++<jB"#:D.coZC9T_1<6<!i<]o>\[CsP`RIPr0
%3#h3U+EK_EDb`(N_[]!>*V0Wd"aN"@*2Nf%-sn#J11MMUOuXJ#CO%,,MRi8n;KT>U</C#K+%^4l%gFgQ+EQ\YK$.9tjB)!*K?@>8
%.p@N>R<kV.K?`HCRaMb$d,uP)-</9fNES)]**ME,*>YQ4.E'I@ln(LVaP"#Qqlmbt#WkXeD"iH+KK0&:Vs*7N'.Q,;iX"DHmunQ.
%bAJ]kmRV$WK0$7X]04-8O?&q3ggMKOH"8dB]tbb34pP"85j!IH*?\n<#%Ah-?9Lh-[[4GG2%28';^M='?TB[^(G9>(9B4J,&M@^F
%<2">U*Lj0R'qNMM[E-J)Fn..L@K9F&47-d1>RA0W["Y6)8p6oPo$tCrOPO8r$/BDc;(!W?Mgd^@Bo"`>opB'eWsu9f_gXB1JDch#
%hPd_4'lG.P<Y<>o&;?j:[jc-I0+]c",<D!IMHd5YBD(a\XjRG5%##D72mu.B+$h3+ge[tW1fg$6'X9rfb;me,'n3*.)*dMR5JJ'j
%s,1ll7f=p)M/W':!>Yhu^;o&#!=i?*FWdK.*!gRkPLP$noUoAoq$!Fqo`]YTbC9i;boYnc">&[@>J.dOliQSdFcJl[oT$Uq89Xqq
%oj)H/86Li\_@&d2^d7F;>MNMEKoo4I!.(<PV2Y8PP-Hs#*j!=W[t.\/o`^(q<7?^EN*X*=gf)Q/(IPL/0HF4b_P1:onU97o)HKe.
%,jU9qS8mhRWJel?DFeq_:DOld(gOR$e(]Vq(0`S:THX.!#&-4/bhgP^\NK<giU9Vjlj(b<3U"a*R+")GltKj@UfAkIH',WtF"N+l
%nONk>%8"aI;d10-0=YK4T3op2f,;%sXL.7^CM45o_2np*Y9)]IOR*hJ/7/.b$5h?"U`QQ,mFUh7Y(^35/j^59CTj463<Q,0(V_:D
%RoCheJKYC*_t/WEN5FeiRFb!LmkmGO(m5[eZcp7Vl_&>)8Gd7pnX`6u/ROY6^NRkp9OBSr"+D'V0d\+i#3N?dK?B:CXC[4T.7;N6
%RNbaEX\kDgL@>e&-i?a[Q7=bd8+n.UB?Rbs8:JJ95]\V[XP-fbhd863lii^$L1ru_K4l>iZAG.SdlJ>?o*'M2XWW(14[#mBDpTjG
%!]20%Pp,,bD3,:LNkWU00UO[UY\ngIK7iU1DS*qanA]6-LMo@IK)4=Ofko>s^,89P(Ni0/Pli2VMk/).n3RdF,fjOGUb3Kk7IB'd
%_=_9\+qjH5<^*1J\F:tm=Ni8'$ek-*:n483cG:>0RMF-l^;a)ubE;Ra]%b"upGsj1qm>#c3S4\CPTBB]ge)5$OVkHo)qX3:Q(%k.
%V[-M[h^6/-I/T+VGpeNT2$9WHn>5>F/,7PkG:C*T8#F4R.a2"Pk$bRE^qh9H'ht"j3r"h^!@0%K/!_!'"N:bESkOa#V"AU0#ic4*
%PC=@i:Up9.ROrp;rH9%&<&"PWkCpYf1aQ"!ggFu4@Pch?G`)]Y/)Z[uH8PD8)!==KkMHu?=`PX;+]QUNoG3cU3Aoopgk>j,P3(LP
%!\.F:.j%V&0GpUIBfWQ7M/8qK<$>mnD@.DCJR_<m7:J2H(8dUM_92Dr)qm1TRX&XC<:);bkZThM/_8=W0Z?&-rJKmr&iZH%otW4s
%H4'2FF:r2F)YWpn.M![bRa)+hFb5D1=:4jQ%QpfH(r^l"DW%Hde12His$sF1VD1]fKRrb)lSj1dL>;(fRp\9kZciN[p^M[DNZP43
%/&+k:SsF:T&7B4V]1.M;EiB@C@F.j\f6W2kUFVqWJj`EcC;WOLj(2df,[qhbqQm$,(@KDf^gR2+@hGKZ5[,(:-]4-drD'`7&%UMa
%@okDrk.o)AAc@89Sf'Q:X>Is3=u@f`E,uV2.P>je*[@@i@/A;M/6+j=T<`Jkp1qV_=IA<AaZ;dE@Pc+.m+W)9EbaKB;J/TkiBcNN
%l!n!!TR8ln<=f$*<GLk%.ht;d-lIf@<P7kM<se2NlkjXpDfCON?#dTOEcUIIK5'fLd]b>Lg?0g!cI_tJSq&GaB8Th\nN4^T(V7;R
%N`*ka\PMXoCA^_GnE_=gUVi?thjk0e6`f$pmAsr=4O4ST]O`depeV(Oaqo<;JrZ4.1SV+m!;>s7mb%?RDk!,XjqO>U*+aD1\%G$(
%4<gg$e7Kco.3@!Z%IBMg_d$+C3J)3`(N4kH%7g+(WO!+H_\16.Y-q@+!!O<:k?#D6(2K8U$6KN7g'OJW\t$iEU_sG@Q3:tVV:?+W
%dfXNA=`=,Xqn(<AjCtL;l7QX%>F?G`=Rc`CB$R#3KoR:iF['f;]^A@tU/]>f>.ZuaiCIJDT]kSQ.6^Vj22&eQl,jck:H-5T(in#e
%W2S+hjUlkU.nNll)<B&>``_BM/((n8f-_fBXP+'Qjs_oA'U60*#hgrsd)&9Ifam.&PGSlE!%pk#5L:u`)0NJM0*qP_Ma2^4AD#!$
%Z6LK2oj-tY+nuu&jV1RX,b*b-L1t@&"jK4XA#d2^V&7Em's!iho0hB#=d_>iHX00p3N+[NKiFt7h&$FpS4ik,f,rKpmR(7#0dS!A
%+n5kn3#,NVh_^(R;H#^GqdKU8=\:miepof#RCo,&PM#hn<5\@pm3eV,.CO,&,S.NY``sg)\Js>;5S+FD5k[>,`Xo0cq*9.U?m7:h
%F5OqqYMm\1*G4RBOqd"ajaq?2=bT%Ji7$5sMSLV2<@HL1'U<Fm^5FheqqPLKKqS[O]4e#W1t%pF<&.pA&)4s_.!>]T@Fp<X4B]*=
%0jJRr/7*;s1cL5u."?<2j_U`?+0Eb'`k637)D;F"58'2NAS<p]^2@(5XCP"V%1hdBm#SZY,-3e$d!_,0:Uu\h\tZ&J-@Llc_XHs#
%akoXur0C+*FA'6(M&9J9#"IfGHHc<.8734"L4Moc?\rk,ZTP>A1^onAB>I<sDQp6C%C:T,VW$^`>S0ibd1Er%2@TnR@b$qs:bKT5
%]sc1J&GTBUs$FN!nHQZFVIA+R&o,(.Rn?Z+]Cj`O,/NqOVos*s2eF2Af0c?Z=68UcTq^%]SPDDX5g^f.Q]r8R3k2Rd.D]QLQG?8-
%i@B^iA4NA)QVMeKZX/Je]?la!ZU7M!*\OG8,:G#(2s?!4PMS#HS7l=G?B*Qne9>.W_Q2X2'>4)sX]fa,]YZY:1Yg=g@L_3s2]*6V
%LDp<_bclrXNIY]ICXepeFq)2=-5]1NA'91,Z>94cNS>k-NS1HA#r)M00'(8&JC79oW%lA:+U2!>)DA>5_\GRRUt>Co#)LYR^W$Xa
%e>`S9"`b.j.#&2G"T%:R@igTX;+Z0YQ8Ikt?a_pP%#e_UE,6@^mejZCY&a/l&F\D,>,H7WOLuW+YNB&;/Z8K^KWHbkeuD'FdZge!
%\7GrJqVn?7-i/LZB>]fVVbWfm6ZO%\c\?ueEn&C@1%.tE?=%I8#\\)nA@Vr^s8'BrR<du^#;V=.g`I@BV(WTS8p+?D87T.'W!-!`
%H3GmBqZ?-,0*M78%\c04p%#mj9POGl=Q&uV_aYU/'1e](7m]Gr@\XCV<_WJg]!4(A"9Hig$hOfeJsiRO*;l"0?;-dbCm(h3,<msC
%!6MS+86EJU$RZWJoj\,aB-VpHHKf9-Nl5fbSrM?1&OOuS$9q4HLFF5E]`Q]U#6S;MMnE[N0BLl+OGuIT/smP.WAY0a&I17R2`Y]s
%-HhFK@bZ-[>hoO8D8UmX(eiQs+!`5r%,"SnCL,ptGBT&tgVt1k`ND`KaGN+Q.Q>D9LBBIi7k,rHh?`Le!@(n.^RrJn=Y2G74=,-K
%@$fK2F+bp2P*I8s6,$buLRAM?%0JBp[W!1d-=c^ngC&%4aeE'[T-SUVOi?t\8nU7TK>G^mql/;hE[)&f+"b2=Yju>Xjer;%Y4,VT
%n9"/pmJ[2?%+fm3Ll-T?%=/ZBOgF0>WN(Z"isiRN<!4!g!5c!H0K>EOJLJ,Gp'n9CMg[r4#k<Lr3$j'4ID^NGZ$eXE6N#D03[\L_
%?MJcV>7U(FMBY4YU/U^R`e*seJ%.uB`X:2!oZi-A.t5/THbVgf>,i=QdbOEaSmnV#eE;I\1F:$:^q*><%:?L[rZ1)4L;<[qn^(nf
%S6#qEXH*H9>`-,u[k7.)S'C%m;afY7kVmln`r.1]L*PV'9N=ML*VNJSdUH*V_"n0AG$L5m`I^#n#riht;Bl,B+*eUnHRdJtTR2<O
%/E,N+@&,AN0bl^0DW/:/F0Ltt_TT[3+O4rSbHoVAlN8?-->f.sG[JFQ!ks*sFt2<7?:[,alS09b[^QP.0NGWe*L7&1fd];XH^,m_
%b&c*<[nF[.Jj6e7HDb_m6o."D!IDrdH-4'@@:&=XI)3[.#esd#`uA'u/J6"h](uHe](H@fDHdq;f&?7Hl0O'r#MtQ2!_BY;f9gL.
%Eu<>`b_IFHQpEc;.FYlX8P$O@'q!FQ.Me&2Qt;CLl(K8\nqEDV$+M)Jr,8iZr$q&?iN!&>@;t#o$]J,c`Y"&!E+):mGsrC>EC=7K
%1)Q/n1i!BOWJ>%/XDJe8,J&jDOg2+Xki[=6^83rs_k(@dCtl0)dPu&=R:IHW56umUZt2I08,Th9p]l[RdW',4n[u\CZkBc`fW$J8
%BU!#["`$ZOX'TC?@rabM@7NT,oUGo[.NSf:B&-X(WA_S`OAn&kjO<koHs.llg%"qu6+Arj2k(O+X-a)eQeYqR8F#LUXC)XBopSnB
%c[sB%3u@S.=+49Q=99^T^9nr>'\*fh!?re1.SJPra>,$IC>]j$F^#T^)Y3:%aKJ&Y)OU3<-]#,M!@)41Lh)B+&gVlZ_i]^;8I;YB
%g7fb?!R0KT$79PjCX'l`hBt@JC[!M:[f(^a;l9IY%#K2SFD?/!XBRJ!*Q/W]0N*H;!fa-+*mX9Ih>fo.NZJ?^m?&M,oN^.D>fgEe
%L+kpW*f_CK@MJ6If+O"IH':\EGa=)pM^s0FFDnk.$C_?hhrrQko:W&j0a)+Pk-^-ME=e6U3Akk>AX5P)86r,a-\aKO+lmJ9Dm1B?
%`JPmE5o<2UaX(;?-s2B/rjEAYWej0L['O/'LJ<leG[B'b1c'=.B""Ni,Dd"p2X?*59/3h\c.WBM3\#&\i$CoKAK/UB;5.]f[6W3K
%%3]7p`'<X2AO5l30lM9ZDs!0V;D82VUWFl#Q!.SKIbdncFYkQZ;G(ReXnC:UEo:Frqus0<a/DN<%H&QHe4Mmsarclsn"o@c,ZRrG
%;Lae4BhLl&1+A1d//?SUfnV!&/l!\L:TkhcHKVu3aAVm;MKQWKbX@NPY@&Yjps+e/9TEA]<KnB+<Bb(8<RXsJNiVAh/XYVpG`[%b
%YVD`J+akO,-3]>8$N$eF]Qf#/b)t&!&#Vq=_V=OWLg;5+nM\2CPEi8a%>/,+6dCh4FGn:.FfHMVg`qoZ_J9f^UIQ$eKN\&j!hQXq
%Sof5r"*^`Y?H>D$m0,uE'E%!IK`7lLnWX?`pSPeWCL*Nu8[P`tkS)KbY3IVjRq@KgQkE(s,lefY;i?M6N06j3:$EtO,:cb`k?Efb
%g&hX.Klq66+)p=BWDn$#E9=5CGq/Zb?uC`&`MlBHR%M+5TALWOn7I,l<7I&p4f\UJb='2!C;"9W#J!NSO0Tb%1(fI`WO$FT9I:i,
%=uOH4dQ%D-CobiZ#bc(uS=!8L-6H_%V12CRrW/e=7$pXVbR#o@A2=%96EFWO0eeM+MTNfQ*>nH:B-2%(R5fHNH(7RFY7[@0nsJ(3
%A>,qcZ\!5H=hu:BaY"PS$q>?G7gP0t$Y1%O"-S[tqmI_l$m$'La@5+>N.$3a97r/K5eh0p0r[sF4=2)60ZmnRHUcXZA>0GcLeN9!
%dm(T!hH]]$AkA$PQj=JAH(Qt=-S"[JlMHjdj9)^eNe40)<7jipINLGFV`orOn!1;9Sm_@:**j78-6FL6]$cu<JUT5F1$Q@i2el-1
%Zj7"uaTkL\q8D]4bDju<@&GK4M1(+tB#%m(@9J]2Uj)Gb#`D8m7=Pq$-FTW<;kZuNaM8pZHFL$1,\Rd3p&jd8H9E*<r*%%dk9Lr.
%/d*cU*rW)KUK[(e[C0"5Im@r`eG?hXCRnL-^T)hS&lF69i09C@"\K\s(K)>Z^eihb6<^;GP?gW3^g_[TXmh];LtTIMnG'OsaHT$d
%P0.I@!7DBK%)+>;L1n?-1J[8>qGm&0?H#tYLeIlk"<K\43[f8I*'jcS4O\U%BuK3OJr7Z[,56uO]GCVs>(8b/MrhZXs!f^02]A(4
%R.slN:<+0*/]k*d.iK(&74e@Q-.UK>LsrZX16#t6]N=eucj/tJ=WAIe:*f=rq"@#J"-Y5B:=7:"hL`eDUUd!Z-ApTah[)aYBQ"Ue
%$m(UmWlUnhn[ll"gld^u;>E==0n8qH+rmqr7iJDfMo-fH7dd#)V^OWD01C)bTQ9/[`d#`6s)i?e'Sjd</7j;I]a)_ulAHF7M1_<J
%#Oe$MC.VPEAh/9_XKSNHbYP;8$^8$VU\.k?6_i.Z$L_M>ZA*s@8`c?'a,ErO7sZ!=#Qrr5#%h2.mF7&L7#rVl$[m*Fl6',9[,/S<
%f?3lDl+$0gH4FBgq]dSR]lWg%W*qR+g.0;8OI3OYcS.lW#nD<HN*;i2Tr-Do`9mbb8Y9#2(eo_A[`Y4Lm$Iae=ehklBU,[hIIf*W
%:/BoJ/.g>mK.Nse3SFN3LD=TSi["*/e+$G"3T'r'B!'&m%5Z9N\W%!He[3?:%F/Ce@E2[&O!m$t]Y8Vu%?.SpXe$M!a3OoLDU-\i
%#;[pn7nH/2!->>%`f@)H9h!QS>R259BKn?7`W.H2Vi9rVW5L6n:70eQbW7W2/1T!C!U9!S*e8\NB]&%nIZR#?D/WkL%'OQseBXYf
%f@K]@XQ9[\P3YVk`l<.n$LmeL.0tuJrs*Y]O6f>4Bs'sR(Q<g,cp_=750Jaf\;is?3uHf@F&7gtRe9L\F]J(+N?*1Q&2mnWG4WeQ
%R+349JB\i!AHU#qmTQ@ck(AKGd#ADF5c\mJ>?Ia(FubVGdqEXa9<u+e-a0_%RjYos>ii(80s)@lX2r*2rWOjrJBarJ7i0C3<mRAM
%`iTT:qr/_3\S=Hq%m@P.b`IhG^;uYc7t2+as,!Sj,UoK\rM_nrP^42K@U-D-s!J:$olpW"qZ@>^$nFAj;%4?Wl6,51;K"[j:4@g8
%g0%JI;c@JS6.n+%VcNXH>:bZ.qF7hKqjS$$4-kj2IFmr>!oHug(W"?,OpW^4j]j4(S399GOH.hL*gR7F'-?*5Ab_LnI^%O<WSDLD
%BIf@:*OC/d3a\9$3Qkngq)\+6$??=_X3ntI%K-JMhMa)m<t+<AMPSe4C\e2*`s.\p*j;s#O*E`.m7"U3I`GEW]i#b:k[OP<dsn4:
%Cg^'?.PC]H#ib-H8e#Y6h>f>!W]H#JkMW;0<j>s5s'Ju3di-7=7.1?[#@2FnR+\I-O(/5T":WBqpE5tp#oG\D+sHtMgYMNd7e0DP
%41hi*h=^<LWZFW>F2u<Pq)MUj4iBc$?ZV>@$<YO<;G^la:Vd0R)*Kes_)XV:F]_O'/5>`E2:Sj[.K7Fl0l:XCo]kqBH!b6HOJ[lV
%l7*Y0;,Y5Sl2_c/d;B0jaT=PEWE0NaN!nO?qD8usE@J&Bl7@+fMNQafgNQ3qE$70X!0t:;XtFd=;2n8U/$C7=)lPg[?G+u'9JIV:
%gQ'>qD31ER-*P4L;fdSDPn\-b,FH;2C`(UfWRQZ0nWk3if4af(?bFRZOOWYP62?^=3^\A*k*b0Y&=0o`Y"._Z%7'@`U&RCt1dFSr
%q;oL[Zm_)?bpG;Fq<>!i$[=W6;E38lhQ2@Yjh#6-OR(VoFF+3nN/ninV@AA#(=PY,NZ_R>jfhB&`SZZt%sm.B4V%q%YSl0dTnb\)
%eY#1gY^&HcNAr2p13e>:mb#?QQ@Mi)4.ZVMW6,i%8`qf!Ner>p%/LlsX'&][9\3VA(L.I\.a+M+21cr_8HX7<;.b&:jWm8:c(fi`
%?$\aX[E!eF"O)XRS`oD.ZrC=FJ!r[.O,JJC2r<\Te\HUZ'm[N]=XbQ%dY5oY@jb3<fHV8*MBkoR4-KFE<_]$VVb<AC!Fmo7"AGE#
%:0NSoRP?LN>\%eSlj./X.)*^mQ_`'W3:k?j4ugEbKZF<TI(sJp2:!\5Bh/[M(rK?o_+q0`r45W]!BWFfV<0j&(C="r%EjZM6H2Q1
%\k1,6nl#J?k7K!S$eJZ]:!OYUhG<ASZD%D4bj3F:.cP;p*Z#"tqKh/?'D/K`,HdQ])Ba@M=r\c0l^p/Q!$:5f*7;>P:_.<hC>`N,
%;L?HOra^[r1fI05W\pM!VcTIg5`3ASjckkU>,3F];Q3,Q(bTs^ee.JtEF9;ZPRn71N%ke2"l:"/%.Z&\"p:8XqPFUq-D(@Q?/M+6
%GHm(p+U&aqFG*'Mlj/[.'&)i3rqE9!XX&JV_PBH:_9p[HCd0>#h[oX)"u62i]hLOC]7HdWHF7l_3*TpXQc<d@&<$2cD?p;3=flfT
%fp;;%2V+=<HdllJ=CG<6DAasci!*a6/"24eC*pP9jDOl2C;87,a:&`\++\,n=;lr^J4L*Pgdcb?&GBSaNMgOV=NVC.)MVi_!])GZ
%T5=jdR:.YA'PCis5*,#ahcjq)>(e(Hj`$nIJPitm;JXNWlaTn]^4o.'Hr$@LfPV#]7RU^ue\Q"YE,[)',NRmL:">&X;\`O>kDB?=
%-M,crj0]ZB2\>Z#j#fFtN+hi$$<]dhS\W$`AW-h)(_dNdCiL@Q^OF`&mO&--6[EK*=@;!$9)@kCL[hHn6VlYB#2+=%,#!0IYu?N]
%)6Jj[O>kD?Q4SlUb75-=*l.-NnUsdAjMTk8_GJ'7/QqF%5<t3]agD7*;G'_IGA47Nhu*0sMsXl;TQk\G36boT,F+p9J_DW^2\Hgj
%9q9W`\_0^qj4-?,k`k?(5R>O/nq/:$H"qBRToju&Ij.p9_iG;h+MTt:S3L%n=]K^qbq0,RNO.>NV"%t0&Q<Am\,E>/X&ZiJPNs))
%kl,!\W%Uo&U8a<&lsAlbDgMS%V-V;-D0"=CpSRi*Z*Q)`L!a-I80.(o#8&(9O9#@ME)Z[1:;-J^>+pBu+>Y?k*SDM4`g[aW\>,M;
%6e7*9K[oBL8CAi.M8IE<(g*Z`OWN)G&Fs:pWC!G!m%TPe_>>,/OtgqJE5es\Gf.qsA<'dg)*8<D9<>89AmhK*$U@Pa12LeL&fOft
%FSnrWTNum%:qeDT)a^FpJe&uVbX"H#1%Q+5;Q/'\1>+)eQ:9KgpB#<7[*2)`6["tc]i/pp)k=sl=jMgQ/8+Y+.o2VIfj8'kp_WUu
%,_tZPj3Ce$'b+B57(ZU@SCK#B<aJ.dm+Z0Y1$.]\h290BWmOW*1_(Wk8PAi'2N"%pcs&%?Lgs6c)gNmmjAc4>&=?ABMqFaYm6*,d
%5<q<W%G@D-cEjGg=L26>C^::"NN!r/5gjZ#S>'9(L);k9Mh3gPLZK^ScQ&atJf<pR%UN@G>s=0?F%a:V@TL,iqbR@,8=br.QjLL9
%`b*:P*M<ceOI2eo14uKUXP(aXhpH`Wd6Y@[YiU+cn(9r*C([8%'Ue8ErWSYSTfUgflT.r:$q52ea.Z'9f@-Ypkg+^,G@lHPY>:Ep
%^*/Gm:&=M2qfhd!rg^`QI/;mP_gg;$%j,])rN?`mfAE/Arq^Y`IfJj+gVZ8-]8*;^Y:gD>f=u8(\pJh=IXCneI(fFNkLY2&dOsM_
%p\,bZ\\8%C'j7.J~>
%AI9_PrivateDataEnd
